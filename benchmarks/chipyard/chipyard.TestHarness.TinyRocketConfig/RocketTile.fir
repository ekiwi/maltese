circuit RocketTile :
  module RocketTile : 
    input clock : Clock
    input reset : Reset
    output auto : {broadcast_out_1 : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1], broadcast_out_0 : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1], flip slave_in : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}, wfi_out : UInt<1>[1], cease_out : UInt<1>[1], halt_out : UInt<1>[1], flip int_local_in_2 : UInt<1>[1], flip int_local_in_1 : UInt<1>[2], flip int_local_in_0 : UInt<1>[1], trace_core_source_out : {group : {iretire : UInt<1>, iaddr : UInt<32>, itype : UInt<4>, ilastsize : UInt<1>}[1], priv : UInt<4>, tval : UInt<32>, cause : UInt<32>}, flip nmi_in : {rnmi : UInt<1>, rnmi_interrupt_vector : UInt<32>, rnmi_exception_vector : UInt<32>, unmi : UInt<1>, unmi_interrupt_vector : UInt<32>, unmi_exception_vector : UInt<32>}, flip reset_vector_in : UInt<32>, flip hartid_in : UInt<1>, tl_other_masters_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    inst tlMasterXbar of TLXbar_6 @[BaseTile.scala 195:42]
    tlMasterXbar.clock is invalid
    tlMasterXbar.reset is invalid
    tlMasterXbar.auto is invalid
    tlMasterXbar.clock <= clock
    tlMasterXbar.reset <= reset
    inst tlSlaveXbar of TLXbar_7 @[BaseTile.scala 196:41]
    tlSlaveXbar.clock is invalid
    tlSlaveXbar.reset is invalid
    tlSlaveXbar.auto is invalid
    tlSlaveXbar.clock <= clock
    tlSlaveXbar.reset <= reset
    inst intXbar of IntXbar_1 @[BaseTile.scala 197:37]
    intXbar.clock is invalid
    intXbar.reset is invalid
    intXbar.auto is invalid
    intXbar.clock <= clock
    intXbar.reset <= reset
    inst broadcast of BundleBridgeNexus_4 @[BundleBridge.scala 196:31]
    broadcast.clock is invalid
    broadcast.reset is invalid
    broadcast.auto is invalid
    broadcast.clock <= clock
    broadcast.reset <= reset
    inst broadcast_1 of BundleBridgeNexus_5 @[BundleBridge.scala 196:31]
    broadcast_1.clock is invalid
    broadcast_1.reset is invalid
    broadcast_1.auto is invalid
    broadcast_1.clock <= clock
    broadcast_1.reset <= reset
    inst broadcast_2 of BundleBridgeNexus_6 @[BundleBridge.scala 196:31]
    broadcast_2.clock is invalid
    broadcast_2.reset is invalid
    broadcast_2.auto is invalid
    broadcast_2.clock <= clock
    broadcast_2.reset <= reset
    inst nexus of BundleBridgeNexus_7 @[BundleBridge.scala 183:27]
    nexus.clock is invalid
    nexus.reset is invalid
    nexus.auto is invalid
    nexus.clock <= clock
    nexus.reset <= reset
    inst broadcast_3 of BundleBridgeNexus_8 @[BundleBridge.scala 196:31]
    broadcast_3.clock is invalid
    broadcast_3.reset is invalid
    broadcast_3.auto is invalid
    broadcast_3.clock <= clock
    broadcast_3.reset <= reset
    inst nexus_1 of BundleBridgeNexus_9 @[BundleBridge.scala 183:27]
    nexus_1.clock is invalid
    nexus_1.reset is invalid
    nexus_1.auto is invalid
    nexus_1.clock <= clock
    nexus_1.reset <= reset
    inst broadcast_4 of BundleBridgeNexus_10 @[BundleBridge.scala 196:31]
    broadcast_4.clock is invalid
    broadcast_4.reset is invalid
    broadcast_4.auto is invalid
    broadcast_4.clock <= clock
    broadcast_4.reset <= reset
    inst dcache of DCache @[HellaCache.scala 265:43]
    dcache.gated_clock is invalid
    dcache.reset is invalid
    dcache.auto is invalid
    dcache.io is invalid
    dcache.tlb_port is invalid
    dcache.gated_clock <= clock
    dcache.reset <= reset
    inst frontend of Frontend @[Frontend.scala 350:28]
    frontend.gated_clock is invalid
    frontend.reset is invalid
    frontend.auto is invalid
    frontend.io is invalid
    frontend.gated_clock <= clock
    frontend.reset <= reset
    inst fragmenter of TLFragmenter_7 @[Fragmenter.scala 333:34]
    fragmenter.clock is invalid
    fragmenter.reset is invalid
    fragmenter.auto is invalid
    fragmenter.clock <= clock
    fragmenter.reset <= reset
    inst dtim_adapter of ScratchpadSlavePort @[RocketTile.scala 62:15]
    dtim_adapter.clock is invalid
    dtim_adapter.reset is invalid
    dtim_adapter.auto is invalid
    dtim_adapter.io is invalid
    dtim_adapter.clock <= clock
    dtim_adapter.reset <= reset
    inst fragmenter_1 of TLFragmenter_8 @[Fragmenter.scala 333:34]
    fragmenter_1.clock is invalid
    fragmenter_1.reset is invalid
    fragmenter_1.auto is invalid
    fragmenter_1.clock <= clock
    fragmenter_1.reset <= reset
    wire bundleOut_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    wire bundleIn_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1210:84]
    bundleIn_0 is invalid @[Nodes.scala 1210:84]
    bundleOut_0 <- bundleIn_0 @[Nodes.scala 1494:55]
    wire bundleIn_0_1 : UInt<1> @[Nodes.scala 1210:84]
    bundleIn_0_1 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0_1 : UInt<1> @[Nodes.scala 1207:84]
    bundleOut_0_1 is invalid @[Nodes.scala 1207:84]
    wire bundleIn_0_2 : UInt<1> @[Nodes.scala 1210:84]
    bundleIn_0_2 is invalid @[Nodes.scala 1210:84]
    bundleOut_0_1 <= bundleIn_0_2 @[Nodes.scala 1494:55]
    wire bundleIn_0_3 : UInt<32> @[Nodes.scala 1210:84]
    bundleIn_0_3 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0_2 : UInt<32> @[Nodes.scala 1207:84]
    bundleOut_0_2 is invalid @[Nodes.scala 1207:84]
    wire bundleIn_0_4 : UInt<32> @[Nodes.scala 1210:84]
    bundleIn_0_4 is invalid @[Nodes.scala 1210:84]
    bundleOut_0_2 <= bundleIn_0_4 @[Nodes.scala 1494:55]
    wire bundleIn_0_5 : {rnmi : UInt<1>, rnmi_interrupt_vector : UInt<32>, rnmi_exception_vector : UInt<32>, unmi : UInt<1>, unmi_interrupt_vector : UInt<32>, unmi_exception_vector : UInt<32>} @[Nodes.scala 1210:84]
    bundleIn_0_5 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0_3 : {rnmi : UInt<1>, rnmi_interrupt_vector : UInt<32>, rnmi_exception_vector : UInt<32>, unmi : UInt<1>, unmi_interrupt_vector : UInt<32>, unmi_exception_vector : UInt<32>} @[Nodes.scala 1207:84]
    bundleOut_0_3 is invalid @[Nodes.scala 1207:84]
    wire bundleIn_0_6 : {rnmi : UInt<1>, rnmi_interrupt_vector : UInt<32>, rnmi_exception_vector : UInt<32>, unmi : UInt<1>, unmi_interrupt_vector : UInt<32>, unmi_exception_vector : UInt<32>} @[Nodes.scala 1210:84]
    bundleIn_0_6 is invalid @[Nodes.scala 1210:84]
    bundleOut_0_3 <- bundleIn_0_6 @[Nodes.scala 1494:55]
    wire bundleOut_0_4 : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1] @[Nodes.scala 1207:84]
    bundleOut_0_4 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_0_5 : {group : {iretire : UInt<1>, iaddr : UInt<32>, itype : UInt<4>, ilastsize : UInt<1>}[1], priv : UInt<4>, tval : UInt<32>, cause : UInt<32>} @[Nodes.scala 1207:84]
    bundleOut_0_5 is invalid @[Nodes.scala 1207:84]
    wire bundleIn_sourceOpt : {enable : UInt<1>, stall : UInt<1>} @[BaseTile.scala 271:19]
    bundleIn_sourceOpt is invalid @[BaseTile.scala 271:19]
    bundleIn_sourceOpt.stall <= UInt<1>("h00") @[BaseTile.scala 272:16]
    bundleIn_sourceOpt.enable <= UInt<1>("h00") @[BaseTile.scala 273:16]
    wire bundleIn_0_7 : {enable : UInt<1>, stall : UInt<1>} @[Nodes.scala 1210:84]
    bundleIn_0_7 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0_6 : {valid : UInt<1>[1], rvalid : UInt<1>[1], wvalid : UInt<1>[1], ivalid : UInt<1>[1], action : UInt<3>}[1] @[Nodes.scala 1207:84]
    bundleOut_0_6 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_0_7 : UInt<1>[1] @[Nodes.scala 1207:84]
    bundleOut_0_7 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_1 : UInt<1>[2] @[Nodes.scala 1207:84]
    bundleOut_1 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_2 : UInt<1>[1] @[Nodes.scala 1207:84]
    bundleOut_2 is invalid @[Nodes.scala 1207:84]
    wire bundleIn_0_8 : UInt<1>[1] @[Nodes.scala 1210:84]
    bundleIn_0_8 is invalid @[Nodes.scala 1210:84]
    wire bundleIn_1 : UInt<1>[2] @[Nodes.scala 1210:84]
    bundleIn_1 is invalid @[Nodes.scala 1210:84]
    wire bundleIn_2 : UInt<1>[1] @[Nodes.scala 1210:84]
    bundleIn_2 is invalid @[Nodes.scala 1210:84]
    bundleOut_0_7 <- bundleIn_0_8 @[Nodes.scala 1494:55]
    bundleOut_1 <- bundleIn_1 @[Nodes.scala 1494:55]
    bundleOut_2 <- bundleIn_2 @[Nodes.scala 1494:55]
    wire bundleIn_0_9 : UInt<1>[4] @[Nodes.scala 1210:84]
    bundleIn_0_9 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0_8 : UInt<1>[1] @[Nodes.scala 1207:84]
    bundleOut_0_8 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_0_9 : UInt<1>[1] @[Nodes.scala 1207:84]
    bundleOut_0_9 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_0_10 : UInt<1>[1] @[Nodes.scala 1207:84]
    bundleOut_0_10 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_0_11 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1207:84]
    bundleOut_0_11 is invalid @[Nodes.scala 1207:84]
    wire bundleIn_0_10 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1210:84]
    bundleIn_0_10 is invalid @[Nodes.scala 1210:84]
    bundleOut_0_11 <- bundleIn_0_10 @[Nodes.scala 1494:55]
    bundleIn_0 <- tlMasterXbar.auto.out @[LazyModule.scala 296:16]
    fragmenter_1.auto.in <- tlSlaveXbar.auto.out @[LazyModule.scala 298:16]
    bundleIn_0_9 <- intXbar.auto.int_out @[LazyModule.scala 296:16]
    bundleIn_0_1 <= broadcast.auto.out_0 @[LazyModule.scala 296:16]
    dcache.auto.hart_id_sink_in <= broadcast.auto.out_1 @[LazyModule.scala 298:16]
    broadcast.auto.in <= bundleOut_0_1 @[LazyModule.scala 298:16]
    bundleIn_0_3 <= broadcast_1.auto.out_0 @[LazyModule.scala 296:16]
    frontend.auto.reset_vector_sink_in <= broadcast_1.auto.out_1 @[LazyModule.scala 298:16]
    broadcast_1.auto.in <= bundleOut_0_2 @[LazyModule.scala 298:16]
    bundleIn_0_5 <- broadcast_2.auto.out @[LazyModule.scala 296:16]
    broadcast_2.auto.in <- bundleOut_0_3 @[LazyModule.scala 298:16]
    dcache.auto.mmio_address_prefix_sink_in <= nexus.auto.out @[LazyModule.scala 298:16]
    broadcast_3.auto.in <- bundleOut_0_4 @[LazyModule.scala 298:16]
    bundleIn_0_7 <- nexus_1.auto.out @[LazyModule.scala 296:16]
    broadcast_4.auto.in <- bundleOut_0_6 @[LazyModule.scala 298:16]
    intXbar.auto.int_in_0 <- bundleOut_0_7 @[LazyModule.scala 298:16]
    intXbar.auto.int_in_1 <- bundleOut_1 @[LazyModule.scala 298:16]
    intXbar.auto.int_in_2 <- bundleOut_2 @[LazyModule.scala 298:16]
    tlMasterXbar.auto.in_0 <- dcache.auto.out @[LazyModule.scala 296:16]
    tlMasterXbar.auto.in_1 <- frontend.auto.icache_master_out @[LazyModule.scala 296:16]
    tlSlaveXbar.auto.in <- bundleOut_0_11 @[LazyModule.scala 298:16]
    dtim_adapter.auto.in <- fragmenter_1.auto.out @[LazyModule.scala 296:16]
    auto.tl_other_masters_out <- bundleOut_0 @[LazyModule.scala 311:12]
    bundleIn_0_2 <= auto.hartid_in @[LazyModule.scala 309:16]
    bundleIn_0_4 <= auto.reset_vector_in @[LazyModule.scala 309:16]
    bundleIn_0_6 <- auto.nmi_in @[LazyModule.scala 309:16]
    auto.trace_core_source_out <- bundleOut_0_5 @[LazyModule.scala 311:12]
    bundleIn_0_8 <- auto.int_local_in_0 @[LazyModule.scala 309:16]
    bundleIn_1 <- auto.int_local_in_1 @[LazyModule.scala 309:16]
    bundleIn_2 <- auto.int_local_in_2 @[LazyModule.scala 309:16]
    auto.halt_out <- bundleOut_0_8 @[LazyModule.scala 311:12]
    auto.cease_out <- bundleOut_0_9 @[LazyModule.scala 311:12]
    auto.wfi_out <- bundleOut_0_10 @[LazyModule.scala 311:12]
    bundleIn_0_10 <- auto.slave_in @[LazyModule.scala 309:16]
    auto.broadcast_out_0 <- broadcast_3.auto.out_0 @[LazyModule.scala 311:12]
    auto.broadcast_out_1 <- broadcast_3.auto.out_1 @[LazyModule.scala 311:12]
    inst dcacheArb of HellaCacheArbiter @[HellaCache.scala 276:25]
    dcacheArb.io is invalid
    dcacheArb.clock <= clock
    dcacheArb.reset <= reset
    dcache.io.cpu <- dcacheArb.io.mem @[HellaCache.scala 277:30]
    inst ptw of PTW @[PTW.scala 439:19]
    ptw.io is invalid
    ptw.clock <= clock
    ptw.reset <= reset
    inst core of Rocket @[RocketTile.scala 140:20]
    core.io is invalid
    core.clock <= clock
    core.reset <= reset
    bundleOut_0_8[0] <= UInt<1>("h00") @[Interrupts.scala 95:28]
    bundleOut_0_9[0] <= UInt<1>("h00") @[Interrupts.scala 115:14]
    reg bundleOut_0_0_REG : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Interrupts.scala 129:36]
    bundleOut_0_0_REG <= core.io.wfi @[Interrupts.scala 129:36]
    bundleOut_0_10[0] <= bundleOut_0_0_REG @[Interrupts.scala 129:12]
    core.io.interrupts.debug <= bundleIn_0_9[0] @[Interrupts.scala 85:93]
    core.io.interrupts.msip <= bundleIn_0_9[1] @[Interrupts.scala 85:93]
    core.io.interrupts.mtip <= bundleIn_0_9[2] @[Interrupts.scala 85:93]
    core.io.interrupts.meip <= bundleIn_0_9[3] @[Interrupts.scala 85:93]
    bundleOut_0_4 <- core.io.trace @[RocketTile.scala 165:32]
    core.io.traceStall <= bundleIn_0_7.stall @[RocketTile.scala 166:22]
    bundleOut_0_6 <- core.io.bpwatch @[RocketTile.scala 167:34]
    core.io.hartid <= bundleIn_0_1 @[RocketTile.scala 168:18]
    frontend.io.cpu <- core.io.imem @[RocketTile.scala 173:32]
    core.io.ptw <- ptw.io.dpath @[RocketTile.scala 176:15]
    dcacheArb.io.requestor[0] <- core.io.dmem @[RocketTile.scala 197:26]
    dcacheArb.io.requestor[1] <- dtim_adapter.io.dmem @[RocketTile.scala 197:26]
    ptw.io.requestor[0] <- dcache.io.ptw @[RocketTile.scala 198:20]
    ptw.io.requestor[1] <- frontend.io.ptw @[RocketTile.scala 198:20]
    
  module TLXbar_6 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in_1 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}, flip in_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}, out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire bundleIn_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1210:84]
    bundleIn_0 is invalid @[Nodes.scala 1210:84]
    wire bundleIn_1 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1210:84]
    bundleIn_1 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    auto.out <- bundleOut_0 @[LazyModule.scala 311:12]
    bundleIn_0 <- auto.in_0 @[LazyModule.scala 309:16]
    bundleIn_1 <- auto.in_1 @[LazyModule.scala 309:16]
    wire _WIRE : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}} @[Xbar.scala 132:50]
    wire out : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}} @[Bundle_ACancel.scala 53:19]
    out.a.earlyValid <= bundleIn_0.a.valid @[Bundle_ACancel.scala 54:22]
    out.a.lateCancel <= UInt<1>("h00") @[Bundle_ACancel.scala 55:22]
    out.a.bits.corrupt <= bundleIn_0.a.bits.corrupt @[Bundle_ACancel.scala 56:16]
    out.a.bits.data <= bundleIn_0.a.bits.data @[Bundle_ACancel.scala 56:16]
    out.a.bits.mask <= bundleIn_0.a.bits.mask @[Bundle_ACancel.scala 56:16]
    out.a.bits.address <= bundleIn_0.a.bits.address @[Bundle_ACancel.scala 56:16]
    out.a.bits.source <= bundleIn_0.a.bits.source @[Bundle_ACancel.scala 56:16]
    out.a.bits.size <= bundleIn_0.a.bits.size @[Bundle_ACancel.scala 56:16]
    out.a.bits.param <= bundleIn_0.a.bits.param @[Bundle_ACancel.scala 56:16]
    out.a.bits.opcode <= bundleIn_0.a.bits.opcode @[Bundle_ACancel.scala 56:16]
    bundleIn_0.a.ready <= out.a.ready @[Bundle_ACancel.scala 57:16]
    wire _WIRE_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _WIRE_1 is invalid @[Bundles.scala 256:54]
    _WIRE_1.bits.corrupt <= out.b.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE_1.bits.data <= out.b.bits.data @[BundleMap.scala 247:19]
    _WIRE_1.bits.mask <= out.b.bits.mask @[BundleMap.scala 247:19]
    _WIRE_1.bits.address <= out.b.bits.address @[BundleMap.scala 247:19]
    _WIRE_1.bits.source <= out.b.bits.source @[BundleMap.scala 247:19]
    _WIRE_1.bits.size <= out.b.bits.size @[BundleMap.scala 247:19]
    _WIRE_1.bits.param <= out.b.bits.param @[BundleMap.scala 247:19]
    _WIRE_1.bits.opcode <= out.b.bits.opcode @[BundleMap.scala 247:19]
    _WIRE_1.valid <= out.b.valid @[BundleMap.scala 247:19]
    out.b.ready <= _WIRE_1.ready @[BundleMap.scala 247:19]
    wire _WIRE_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _WIRE_2 is invalid @[Bundles.scala 257:54]
    out.c.bits.corrupt <= _WIRE_2.bits.corrupt @[BundleMap.scala 247:19]
    out.c.bits.data <= _WIRE_2.bits.data @[BundleMap.scala 247:19]
    out.c.bits.address <= _WIRE_2.bits.address @[BundleMap.scala 247:19]
    out.c.bits.source <= _WIRE_2.bits.source @[BundleMap.scala 247:19]
    out.c.bits.size <= _WIRE_2.bits.size @[BundleMap.scala 247:19]
    out.c.bits.param <= _WIRE_2.bits.param @[BundleMap.scala 247:19]
    out.c.bits.opcode <= _WIRE_2.bits.opcode @[BundleMap.scala 247:19]
    out.c.valid <= _WIRE_2.valid @[BundleMap.scala 247:19]
    _WIRE_2.ready <= out.c.ready @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.corrupt <= out.d.bits.corrupt @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.data <= out.d.bits.data @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.denied <= out.d.bits.denied @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.sink <= out.d.bits.sink @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.source <= out.d.bits.source @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.size <= out.d.bits.size @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.param <= out.d.bits.param @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.opcode <= out.d.bits.opcode @[BundleMap.scala 247:19]
    bundleIn_0.d.valid <= out.d.valid @[BundleMap.scala 247:19]
    out.d.ready <= bundleIn_0.d.ready @[BundleMap.scala 247:19]
    wire _WIRE_3 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_3 is invalid @[Bundles.scala 259:54]
    out.e.bits.sink <= _WIRE_3.bits.sink @[BundleMap.scala 247:19]
    out.e.valid <= _WIRE_3.valid @[BundleMap.scala 247:19]
    _WIRE_3.ready <= out.e.ready @[BundleMap.scala 247:19]
    wire out_1 : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}} @[Bundle_ACancel.scala 53:19]
    out_1.a.earlyValid <= bundleIn_1.a.valid @[Bundle_ACancel.scala 54:22]
    out_1.a.lateCancel <= UInt<1>("h00") @[Bundle_ACancel.scala 55:22]
    out_1.a.bits.corrupt <= bundleIn_1.a.bits.corrupt @[Bundle_ACancel.scala 56:16]
    out_1.a.bits.data <= bundleIn_1.a.bits.data @[Bundle_ACancel.scala 56:16]
    out_1.a.bits.mask <= bundleIn_1.a.bits.mask @[Bundle_ACancel.scala 56:16]
    out_1.a.bits.address <= bundleIn_1.a.bits.address @[Bundle_ACancel.scala 56:16]
    out_1.a.bits.source <= bundleIn_1.a.bits.source @[Bundle_ACancel.scala 56:16]
    out_1.a.bits.size <= bundleIn_1.a.bits.size @[Bundle_ACancel.scala 56:16]
    out_1.a.bits.param <= bundleIn_1.a.bits.param @[Bundle_ACancel.scala 56:16]
    out_1.a.bits.opcode <= bundleIn_1.a.bits.opcode @[Bundle_ACancel.scala 56:16]
    bundleIn_1.a.ready <= out_1.a.ready @[Bundle_ACancel.scala 57:16]
    wire _WIRE_4 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _WIRE_4 is invalid @[Bundles.scala 256:54]
    _WIRE_4.bits.corrupt <= out_1.b.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE_4.bits.data <= out_1.b.bits.data @[BundleMap.scala 247:19]
    _WIRE_4.bits.mask <= out_1.b.bits.mask @[BundleMap.scala 247:19]
    _WIRE_4.bits.address <= out_1.b.bits.address @[BundleMap.scala 247:19]
    _WIRE_4.bits.source <= out_1.b.bits.source @[BundleMap.scala 247:19]
    _WIRE_4.bits.size <= out_1.b.bits.size @[BundleMap.scala 247:19]
    _WIRE_4.bits.param <= out_1.b.bits.param @[BundleMap.scala 247:19]
    _WIRE_4.bits.opcode <= out_1.b.bits.opcode @[BundleMap.scala 247:19]
    _WIRE_4.valid <= out_1.b.valid @[BundleMap.scala 247:19]
    out_1.b.ready <= _WIRE_4.ready @[BundleMap.scala 247:19]
    wire _WIRE_5 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _WIRE_5 is invalid @[Bundles.scala 257:54]
    out_1.c.bits.corrupt <= _WIRE_5.bits.corrupt @[BundleMap.scala 247:19]
    out_1.c.bits.data <= _WIRE_5.bits.data @[BundleMap.scala 247:19]
    out_1.c.bits.address <= _WIRE_5.bits.address @[BundleMap.scala 247:19]
    out_1.c.bits.source <= _WIRE_5.bits.source @[BundleMap.scala 247:19]
    out_1.c.bits.size <= _WIRE_5.bits.size @[BundleMap.scala 247:19]
    out_1.c.bits.param <= _WIRE_5.bits.param @[BundleMap.scala 247:19]
    out_1.c.bits.opcode <= _WIRE_5.bits.opcode @[BundleMap.scala 247:19]
    out_1.c.valid <= _WIRE_5.valid @[BundleMap.scala 247:19]
    _WIRE_5.ready <= out_1.c.ready @[BundleMap.scala 247:19]
    bundleIn_1.d.bits.corrupt <= out_1.d.bits.corrupt @[BundleMap.scala 247:19]
    bundleIn_1.d.bits.data <= out_1.d.bits.data @[BundleMap.scala 247:19]
    bundleIn_1.d.bits.denied <= out_1.d.bits.denied @[BundleMap.scala 247:19]
    bundleIn_1.d.bits.sink <= out_1.d.bits.sink @[BundleMap.scala 247:19]
    bundleIn_1.d.bits.source <= out_1.d.bits.source @[BundleMap.scala 247:19]
    bundleIn_1.d.bits.size <= out_1.d.bits.size @[BundleMap.scala 247:19]
    bundleIn_1.d.bits.param <= out_1.d.bits.param @[BundleMap.scala 247:19]
    bundleIn_1.d.bits.opcode <= out_1.d.bits.opcode @[BundleMap.scala 247:19]
    bundleIn_1.d.valid <= out_1.d.valid @[BundleMap.scala 247:19]
    out_1.d.ready <= bundleIn_1.d.ready @[BundleMap.scala 247:19]
    wire _WIRE_6 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_6 is invalid @[Bundles.scala 259:54]
    out_1.e.bits.sink <= _WIRE_6.bits.sink @[BundleMap.scala 247:19]
    out_1.e.valid <= _WIRE_6.valid @[BundleMap.scala 247:19]
    _WIRE_6.ready <= out_1.e.ready @[BundleMap.scala 247:19]
    wire in : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}}[2] @[Xbar.scala 231:18]
    in[0].a.bits.corrupt <= out.a.bits.corrupt @[BundleMap.scala 247:19]
    in[0].a.bits.data <= out.a.bits.data @[BundleMap.scala 247:19]
    in[0].a.bits.mask <= out.a.bits.mask @[BundleMap.scala 247:19]
    in[0].a.bits.address <= out.a.bits.address @[BundleMap.scala 247:19]
    in[0].a.bits.source <= out.a.bits.source @[BundleMap.scala 247:19]
    in[0].a.bits.size <= out.a.bits.size @[BundleMap.scala 247:19]
    in[0].a.bits.param <= out.a.bits.param @[BundleMap.scala 247:19]
    in[0].a.bits.opcode <= out.a.bits.opcode @[BundleMap.scala 247:19]
    in[0].a.lateCancel <= out.a.lateCancel @[BundleMap.scala 247:19]
    in[0].a.earlyValid <= out.a.earlyValid @[BundleMap.scala 247:19]
    out.a.ready <= in[0].a.ready @[BundleMap.scala 247:19]
    node _in_0_a_bits_source_T = or(out.a.bits.source, UInt<1>("h01")) @[Xbar.scala 237:55]
    in[0].a.bits.source <= _in_0_a_bits_source_T @[Xbar.scala 237:29]
    in[0].b.ready <= UInt<1>("h01") @[Xbar.scala 251:23]
    in[0].b.bits.corrupt is invalid @[Xbar.scala 252:23]
    in[0].b.bits.data is invalid @[Xbar.scala 252:23]
    in[0].b.bits.mask is invalid @[Xbar.scala 252:23]
    in[0].b.bits.address is invalid @[Xbar.scala 252:23]
    in[0].b.bits.source is invalid @[Xbar.scala 252:23]
    in[0].b.bits.size is invalid @[Xbar.scala 252:23]
    in[0].b.bits.param is invalid @[Xbar.scala 252:23]
    in[0].b.bits.opcode is invalid @[Xbar.scala 252:23]
    out.b.valid <= UInt<1>("h00") @[Xbar.scala 253:26]
    out.b.bits.corrupt is invalid @[Xbar.scala 254:26]
    out.b.bits.data is invalid @[Xbar.scala 254:26]
    out.b.bits.mask is invalid @[Xbar.scala 254:26]
    out.b.bits.address is invalid @[Xbar.scala 254:26]
    out.b.bits.source is invalid @[Xbar.scala 254:26]
    out.b.bits.size is invalid @[Xbar.scala 254:26]
    out.b.bits.param is invalid @[Xbar.scala 254:26]
    out.b.bits.opcode is invalid @[Xbar.scala 254:26]
    in[0].c.valid <= UInt<1>("h00") @[Xbar.scala 261:23]
    in[0].c.bits.corrupt is invalid @[Xbar.scala 262:23]
    in[0].c.bits.data is invalid @[Xbar.scala 262:23]
    in[0].c.bits.address is invalid @[Xbar.scala 262:23]
    in[0].c.bits.source is invalid @[Xbar.scala 262:23]
    in[0].c.bits.size is invalid @[Xbar.scala 262:23]
    in[0].c.bits.param is invalid @[Xbar.scala 262:23]
    in[0].c.bits.opcode is invalid @[Xbar.scala 262:23]
    out.c.ready <= UInt<1>("h01") @[Xbar.scala 263:26]
    out.c.bits.corrupt is invalid @[Xbar.scala 264:26]
    out.c.bits.data is invalid @[Xbar.scala 264:26]
    out.c.bits.address is invalid @[Xbar.scala 264:26]
    out.c.bits.source is invalid @[Xbar.scala 264:26]
    out.c.bits.size is invalid @[Xbar.scala 264:26]
    out.c.bits.param is invalid @[Xbar.scala 264:26]
    out.c.bits.opcode is invalid @[Xbar.scala 264:26]
    out.d.bits.corrupt <= in[0].d.bits.corrupt @[BundleMap.scala 247:19]
    out.d.bits.data <= in[0].d.bits.data @[BundleMap.scala 247:19]
    out.d.bits.denied <= in[0].d.bits.denied @[BundleMap.scala 247:19]
    out.d.bits.sink <= in[0].d.bits.sink @[BundleMap.scala 247:19]
    out.d.bits.source <= in[0].d.bits.source @[BundleMap.scala 247:19]
    out.d.bits.size <= in[0].d.bits.size @[BundleMap.scala 247:19]
    out.d.bits.param <= in[0].d.bits.param @[BundleMap.scala 247:19]
    out.d.bits.opcode <= in[0].d.bits.opcode @[BundleMap.scala 247:19]
    out.d.valid <= in[0].d.valid @[BundleMap.scala 247:19]
    in[0].d.ready <= out.d.ready @[BundleMap.scala 247:19]
    out.d.bits.source <= UInt<1>("h00") @[Xbar.scala 269:32]
    in[0].e.valid <= UInt<1>("h00") @[Xbar.scala 280:23]
    in[0].e.bits.sink is invalid @[Xbar.scala 281:23]
    out.e.ready <= UInt<1>("h01") @[Xbar.scala 282:26]
    out.e.bits.sink is invalid @[Xbar.scala 283:26]
    in[1].a.bits.corrupt <= out_1.a.bits.corrupt @[BundleMap.scala 247:19]
    in[1].a.bits.data <= out_1.a.bits.data @[BundleMap.scala 247:19]
    in[1].a.bits.mask <= out_1.a.bits.mask @[BundleMap.scala 247:19]
    in[1].a.bits.address <= out_1.a.bits.address @[BundleMap.scala 247:19]
    in[1].a.bits.source <= out_1.a.bits.source @[BundleMap.scala 247:19]
    in[1].a.bits.size <= out_1.a.bits.size @[BundleMap.scala 247:19]
    in[1].a.bits.param <= out_1.a.bits.param @[BundleMap.scala 247:19]
    in[1].a.bits.opcode <= out_1.a.bits.opcode @[BundleMap.scala 247:19]
    in[1].a.lateCancel <= out_1.a.lateCancel @[BundleMap.scala 247:19]
    in[1].a.earlyValid <= out_1.a.earlyValid @[BundleMap.scala 247:19]
    out_1.a.ready <= in[1].a.ready @[BundleMap.scala 247:19]
    node _in_1_a_bits_source_T = or(out_1.a.bits.source, UInt<1>("h00")) @[Xbar.scala 237:55]
    in[1].a.bits.source <= _in_1_a_bits_source_T @[Xbar.scala 237:29]
    in[1].b.ready <= UInt<1>("h01") @[Xbar.scala 251:23]
    in[1].b.bits.corrupt is invalid @[Xbar.scala 252:23]
    in[1].b.bits.data is invalid @[Xbar.scala 252:23]
    in[1].b.bits.mask is invalid @[Xbar.scala 252:23]
    in[1].b.bits.address is invalid @[Xbar.scala 252:23]
    in[1].b.bits.source is invalid @[Xbar.scala 252:23]
    in[1].b.bits.size is invalid @[Xbar.scala 252:23]
    in[1].b.bits.param is invalid @[Xbar.scala 252:23]
    in[1].b.bits.opcode is invalid @[Xbar.scala 252:23]
    out_1.b.valid <= UInt<1>("h00") @[Xbar.scala 253:26]
    out_1.b.bits.corrupt is invalid @[Xbar.scala 254:26]
    out_1.b.bits.data is invalid @[Xbar.scala 254:26]
    out_1.b.bits.mask is invalid @[Xbar.scala 254:26]
    out_1.b.bits.address is invalid @[Xbar.scala 254:26]
    out_1.b.bits.source is invalid @[Xbar.scala 254:26]
    out_1.b.bits.size is invalid @[Xbar.scala 254:26]
    out_1.b.bits.param is invalid @[Xbar.scala 254:26]
    out_1.b.bits.opcode is invalid @[Xbar.scala 254:26]
    in[1].c.valid <= UInt<1>("h00") @[Xbar.scala 261:23]
    in[1].c.bits.corrupt is invalid @[Xbar.scala 262:23]
    in[1].c.bits.data is invalid @[Xbar.scala 262:23]
    in[1].c.bits.address is invalid @[Xbar.scala 262:23]
    in[1].c.bits.source is invalid @[Xbar.scala 262:23]
    in[1].c.bits.size is invalid @[Xbar.scala 262:23]
    in[1].c.bits.param is invalid @[Xbar.scala 262:23]
    in[1].c.bits.opcode is invalid @[Xbar.scala 262:23]
    out_1.c.ready <= UInt<1>("h01") @[Xbar.scala 263:26]
    out_1.c.bits.corrupt is invalid @[Xbar.scala 264:26]
    out_1.c.bits.data is invalid @[Xbar.scala 264:26]
    out_1.c.bits.address is invalid @[Xbar.scala 264:26]
    out_1.c.bits.source is invalid @[Xbar.scala 264:26]
    out_1.c.bits.size is invalid @[Xbar.scala 264:26]
    out_1.c.bits.param is invalid @[Xbar.scala 264:26]
    out_1.c.bits.opcode is invalid @[Xbar.scala 264:26]
    out_1.d.bits.corrupt <= in[1].d.bits.corrupt @[BundleMap.scala 247:19]
    out_1.d.bits.data <= in[1].d.bits.data @[BundleMap.scala 247:19]
    out_1.d.bits.denied <= in[1].d.bits.denied @[BundleMap.scala 247:19]
    out_1.d.bits.sink <= in[1].d.bits.sink @[BundleMap.scala 247:19]
    out_1.d.bits.source <= in[1].d.bits.source @[BundleMap.scala 247:19]
    out_1.d.bits.size <= in[1].d.bits.size @[BundleMap.scala 247:19]
    out_1.d.bits.param <= in[1].d.bits.param @[BundleMap.scala 247:19]
    out_1.d.bits.opcode <= in[1].d.bits.opcode @[BundleMap.scala 247:19]
    out_1.d.valid <= in[1].d.valid @[BundleMap.scala 247:19]
    in[1].d.ready <= out_1.d.ready @[BundleMap.scala 247:19]
    out_1.d.bits.source <= UInt<1>("h00") @[Xbar.scala 269:32]
    in[1].e.valid <= UInt<1>("h00") @[Xbar.scala 280:23]
    in[1].e.bits.sink is invalid @[Xbar.scala 281:23]
    out_1.e.ready <= UInt<1>("h01") @[Xbar.scala 282:26]
    out_1.e.bits.sink is invalid @[Xbar.scala 283:26]
    wire out_2 : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}}[1] @[Xbar.scala 288:19]
    _WIRE.a.bits.corrupt <= out_2[0].a.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE.a.bits.data <= out_2[0].a.bits.data @[BundleMap.scala 247:19]
    _WIRE.a.bits.mask <= out_2[0].a.bits.mask @[BundleMap.scala 247:19]
    _WIRE.a.bits.address <= out_2[0].a.bits.address @[BundleMap.scala 247:19]
    _WIRE.a.bits.source <= out_2[0].a.bits.source @[BundleMap.scala 247:19]
    _WIRE.a.bits.size <= out_2[0].a.bits.size @[BundleMap.scala 247:19]
    _WIRE.a.bits.param <= out_2[0].a.bits.param @[BundleMap.scala 247:19]
    _WIRE.a.bits.opcode <= out_2[0].a.bits.opcode @[BundleMap.scala 247:19]
    _WIRE.a.lateCancel <= out_2[0].a.lateCancel @[BundleMap.scala 247:19]
    _WIRE.a.earlyValid <= out_2[0].a.earlyValid @[BundleMap.scala 247:19]
    out_2[0].a.ready <= _WIRE.a.ready @[BundleMap.scala 247:19]
    out_2[0].b.valid <= UInt<1>("h00") @[Xbar.scala 306:24]
    out_2[0].b.bits.corrupt is invalid @[Xbar.scala 307:24]
    out_2[0].b.bits.data is invalid @[Xbar.scala 307:24]
    out_2[0].b.bits.mask is invalid @[Xbar.scala 307:24]
    out_2[0].b.bits.address is invalid @[Xbar.scala 307:24]
    out_2[0].b.bits.source is invalid @[Xbar.scala 307:24]
    out_2[0].b.bits.size is invalid @[Xbar.scala 307:24]
    out_2[0].b.bits.param is invalid @[Xbar.scala 307:24]
    out_2[0].b.bits.opcode is invalid @[Xbar.scala 307:24]
    _WIRE.b.ready <= UInt<1>("h01") @[Xbar.scala 308:27]
    _WIRE.b.bits.corrupt is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.data is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.mask is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.address is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.source is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.size is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.param is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.opcode is invalid @[Xbar.scala 309:27]
    out_2[0].c.ready <= UInt<1>("h01") @[Xbar.scala 315:24]
    out_2[0].c.bits.corrupt is invalid @[Xbar.scala 316:24]
    out_2[0].c.bits.data is invalid @[Xbar.scala 316:24]
    out_2[0].c.bits.address is invalid @[Xbar.scala 316:24]
    out_2[0].c.bits.source is invalid @[Xbar.scala 316:24]
    out_2[0].c.bits.size is invalid @[Xbar.scala 316:24]
    out_2[0].c.bits.param is invalid @[Xbar.scala 316:24]
    out_2[0].c.bits.opcode is invalid @[Xbar.scala 316:24]
    _WIRE.c.valid <= UInt<1>("h00") @[Xbar.scala 317:27]
    _WIRE.c.bits.corrupt is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.data is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.address is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.source is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.size is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.param is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.opcode is invalid @[Xbar.scala 318:27]
    out_2[0].d.bits.corrupt <= _WIRE.d.bits.corrupt @[BundleMap.scala 247:19]
    out_2[0].d.bits.data <= _WIRE.d.bits.data @[BundleMap.scala 247:19]
    out_2[0].d.bits.denied <= _WIRE.d.bits.denied @[BundleMap.scala 247:19]
    out_2[0].d.bits.sink <= _WIRE.d.bits.sink @[BundleMap.scala 247:19]
    out_2[0].d.bits.source <= _WIRE.d.bits.source @[BundleMap.scala 247:19]
    out_2[0].d.bits.size <= _WIRE.d.bits.size @[BundleMap.scala 247:19]
    out_2[0].d.bits.param <= _WIRE.d.bits.param @[BundleMap.scala 247:19]
    out_2[0].d.bits.opcode <= _WIRE.d.bits.opcode @[BundleMap.scala 247:19]
    out_2[0].d.valid <= _WIRE.d.valid @[BundleMap.scala 247:19]
    _WIRE.d.ready <= out_2[0].d.ready @[BundleMap.scala 247:19]
    node _out_0_d_bits_sink_T = or(_WIRE.d.bits.sink, UInt<1>("h00")) @[Xbar.scala 323:53]
    out_2[0].d.bits.sink <= _out_0_d_bits_sink_T @[Xbar.scala 323:28]
    out_2[0].e.ready <= UInt<1>("h01") @[Xbar.scala 335:24]
    out_2[0].e.bits.sink is invalid @[Xbar.scala 336:24]
    _WIRE.e.valid <= UInt<1>("h00") @[Xbar.scala 337:27]
    _WIRE.e.bits.sink is invalid @[Xbar.scala 338:27]
    node _requestAIO_T = xor(in[0].a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _requestAIO_T_1 = cvt(_requestAIO_T) @[Parameters.scala 137:49]
    node _requestAIO_T_2 = and(_requestAIO_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _requestAIO_T_3 = asSInt(_requestAIO_T_2) @[Parameters.scala 137:52]
    node _requestAIO_T_4 = eq(_requestAIO_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node requestAIO_0_0 = or(UInt<1>("h01"), _requestAIO_T_4) @[Xbar.scala 379:107]
    node _requestAIO_T_5 = xor(in[1].a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _requestAIO_T_6 = cvt(_requestAIO_T_5) @[Parameters.scala 137:49]
    node _requestAIO_T_7 = and(_requestAIO_T_6, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _requestAIO_T_8 = asSInt(_requestAIO_T_7) @[Parameters.scala 137:52]
    node _requestAIO_T_9 = eq(_requestAIO_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node requestAIO_1_0 = or(UInt<1>("h01"), _requestAIO_T_9) @[Xbar.scala 379:107]
    node _requestCIO_T = xor(in[0].c.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _requestCIO_T_1 = cvt(_requestCIO_T) @[Parameters.scala 137:49]
    node _requestCIO_T_2 = and(_requestCIO_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _requestCIO_T_3 = asSInt(_requestCIO_T_2) @[Parameters.scala 137:52]
    node _requestCIO_T_4 = eq(_requestCIO_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node requestCIO_0_0 = or(UInt<1>("h01"), _requestCIO_T_4) @[Xbar.scala 380:107]
    node _requestCIO_T_5 = xor(in[1].c.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _requestCIO_T_6 = cvt(_requestCIO_T_5) @[Parameters.scala 137:49]
    node _requestCIO_T_7 = and(_requestCIO_T_6, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _requestCIO_T_8 = asSInt(_requestCIO_T_7) @[Parameters.scala 137:52]
    node _requestCIO_T_9 = eq(_requestCIO_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node requestCIO_1_0 = or(UInt<1>("h01"), _requestCIO_T_9) @[Xbar.scala 380:107]
    node requestBOI_0_0 = eq(out_2[0].b.bits.source, UInt<1>("h01")) @[Parameters.scala 46:9]
    node requestBOI_0_1 = eq(out_2[0].b.bits.source, UInt<1>("h00")) @[Parameters.scala 46:9]
    node requestDOI_0_0 = eq(out_2[0].d.bits.source, UInt<1>("h01")) @[Parameters.scala 46:9]
    node requestDOI_0_1 = eq(out_2[0].d.bits.source, UInt<1>("h00")) @[Parameters.scala 46:9]
    node _beatsAI_decode_T = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beatsAI_decode_T_1 = dshl(_beatsAI_decode_T, in[0].a.bits.size) @[package.scala 234:77]
    node _beatsAI_decode_T_2 = bits(_beatsAI_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beatsAI_decode_T_3 = not(_beatsAI_decode_T_2) @[package.scala 234:46]
    node beatsAI_decode = shr(_beatsAI_decode_T_3, 2) @[Edges.scala 219:59]
    node _beatsAI_opdata_T = bits(in[0].a.bits.opcode, 2, 2) @[Edges.scala 91:37]
    node beatsAI_opdata = eq(_beatsAI_opdata_T, UInt<1>("h00")) @[Edges.scala 91:28]
    node beatsAI_0 = mux(beatsAI_opdata, beatsAI_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    node _beatsAI_decode_T_4 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beatsAI_decode_T_5 = dshl(_beatsAI_decode_T_4, in[1].a.bits.size) @[package.scala 234:77]
    node _beatsAI_decode_T_6 = bits(_beatsAI_decode_T_5, 11, 0) @[package.scala 234:82]
    node _beatsAI_decode_T_7 = not(_beatsAI_decode_T_6) @[package.scala 234:46]
    node beatsAI_decode_1 = shr(_beatsAI_decode_T_7, 2) @[Edges.scala 219:59]
    node _beatsAI_opdata_T_1 = bits(in[1].a.bits.opcode, 2, 2) @[Edges.scala 91:37]
    node beatsAI_opdata_1 = eq(_beatsAI_opdata_T_1, UInt<1>("h00")) @[Edges.scala 91:28]
    node beatsAI_1 = mux(beatsAI_opdata_1, beatsAI_decode_1, UInt<1>("h00")) @[Edges.scala 220:14]
    node _beatsBO_decode_T = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beatsBO_decode_T_1 = dshl(_beatsBO_decode_T, out_2[0].b.bits.size) @[package.scala 234:77]
    node _beatsBO_decode_T_2 = bits(_beatsBO_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beatsBO_decode_T_3 = not(_beatsBO_decode_T_2) @[package.scala 234:46]
    node beatsBO_decode = shr(_beatsBO_decode_T_3, 2) @[Edges.scala 219:59]
    node _beatsBO_opdata_T = bits(out_2[0].b.bits.opcode, 2, 2) @[Edges.scala 96:37]
    node beatsBO_opdata = eq(_beatsBO_opdata_T, UInt<1>("h00")) @[Edges.scala 96:28]
    node beatsBO_0 = mux(UInt<1>("h00"), beatsBO_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    node _beatsCI_decode_T = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beatsCI_decode_T_1 = dshl(_beatsCI_decode_T, in[0].c.bits.size) @[package.scala 234:77]
    node _beatsCI_decode_T_2 = bits(_beatsCI_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beatsCI_decode_T_3 = not(_beatsCI_decode_T_2) @[package.scala 234:46]
    node beatsCI_decode = shr(_beatsCI_decode_T_3, 2) @[Edges.scala 219:59]
    node beatsCI_opdata = bits(in[0].c.bits.opcode, 0, 0) @[Edges.scala 101:36]
    node beatsCI_0 = mux(UInt<1>("h00"), beatsCI_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    node _beatsCI_decode_T_4 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beatsCI_decode_T_5 = dshl(_beatsCI_decode_T_4, in[1].c.bits.size) @[package.scala 234:77]
    node _beatsCI_decode_T_6 = bits(_beatsCI_decode_T_5, 11, 0) @[package.scala 234:82]
    node _beatsCI_decode_T_7 = not(_beatsCI_decode_T_6) @[package.scala 234:46]
    node beatsCI_decode_1 = shr(_beatsCI_decode_T_7, 2) @[Edges.scala 219:59]
    node beatsCI_opdata_1 = bits(in[1].c.bits.opcode, 0, 0) @[Edges.scala 101:36]
    node beatsCI_1 = mux(UInt<1>("h00"), beatsCI_decode_1, UInt<1>("h00")) @[Edges.scala 220:14]
    node _beatsDO_decode_T = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beatsDO_decode_T_1 = dshl(_beatsDO_decode_T, out_2[0].d.bits.size) @[package.scala 234:77]
    node _beatsDO_decode_T_2 = bits(_beatsDO_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beatsDO_decode_T_3 = not(_beatsDO_decode_T_2) @[package.scala 234:46]
    node beatsDO_decode = shr(_beatsDO_decode_T_3, 2) @[Edges.scala 219:59]
    node beatsDO_opdata = bits(out_2[0].d.bits.opcode, 0, 0) @[Edges.scala 105:36]
    node beatsDO_0 = mux(beatsDO_opdata, beatsDO_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    wire portsAOI_filtered : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}[1] @[Xbar.scala 424:24]
    portsAOI_filtered[0].bits.corrupt <= in[0].a.bits.corrupt @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.data <= in[0].a.bits.data @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.mask <= in[0].a.bits.mask @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.address <= in[0].a.bits.address @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.source <= in[0].a.bits.source @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.size <= in[0].a.bits.size @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.param <= in[0].a.bits.param @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.opcode <= in[0].a.bits.opcode @[Xbar.scala 426:24]
    portsAOI_filtered[0].lateCancel <= in[0].a.lateCancel @[Xbar.scala 427:30]
    node _portsAOI_filtered_0_earlyValid_T = or(requestAIO_0_0, UInt<1>("h01")) @[Xbar.scala 428:64]
    node _portsAOI_filtered_0_earlyValid_T_1 = and(in[0].a.earlyValid, _portsAOI_filtered_0_earlyValid_T) @[Xbar.scala 428:50]
    portsAOI_filtered[0].earlyValid <= _portsAOI_filtered_0_earlyValid_T_1 @[Xbar.scala 428:30]
    in[0].a.ready <= portsAOI_filtered[0].ready @[Xbar.scala 430:17]
    wire portsAOI_filtered_1 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}[1] @[Xbar.scala 424:24]
    portsAOI_filtered_1[0].bits.corrupt <= in[1].a.bits.corrupt @[Xbar.scala 426:24]
    portsAOI_filtered_1[0].bits.data <= in[1].a.bits.data @[Xbar.scala 426:24]
    portsAOI_filtered_1[0].bits.mask <= in[1].a.bits.mask @[Xbar.scala 426:24]
    portsAOI_filtered_1[0].bits.address <= in[1].a.bits.address @[Xbar.scala 426:24]
    portsAOI_filtered_1[0].bits.source <= in[1].a.bits.source @[Xbar.scala 426:24]
    portsAOI_filtered_1[0].bits.size <= in[1].a.bits.size @[Xbar.scala 426:24]
    portsAOI_filtered_1[0].bits.param <= in[1].a.bits.param @[Xbar.scala 426:24]
    portsAOI_filtered_1[0].bits.opcode <= in[1].a.bits.opcode @[Xbar.scala 426:24]
    portsAOI_filtered_1[0].lateCancel <= in[1].a.lateCancel @[Xbar.scala 427:30]
    node _portsAOI_filtered_0_earlyValid_T_2 = or(requestAIO_1_0, UInt<1>("h01")) @[Xbar.scala 428:64]
    node _portsAOI_filtered_0_earlyValid_T_3 = and(in[1].a.earlyValid, _portsAOI_filtered_0_earlyValid_T_2) @[Xbar.scala 428:50]
    portsAOI_filtered_1[0].earlyValid <= _portsAOI_filtered_0_earlyValid_T_3 @[Xbar.scala 428:30]
    in[1].a.ready <= portsAOI_filtered_1[0].ready @[Xbar.scala 430:17]
    wire portsBIO_filtered : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}[2] @[Xbar.scala 176:24]
    portsBIO_filtered[0].bits.corrupt <= out_2[0].b.bits.corrupt @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.data <= out_2[0].b.bits.data @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.mask <= out_2[0].b.bits.mask @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.address <= out_2[0].b.bits.address @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.source <= out_2[0].b.bits.source @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.size <= out_2[0].b.bits.size @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.param <= out_2[0].b.bits.param @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.opcode <= out_2[0].b.bits.opcode @[Xbar.scala 178:24]
    node _portsBIO_filtered_0_valid_T = or(requestBOI_0_0, UInt<1>("h00")) @[Xbar.scala 179:54]
    node _portsBIO_filtered_0_valid_T_1 = and(out_2[0].b.valid, _portsBIO_filtered_0_valid_T) @[Xbar.scala 179:40]
    portsBIO_filtered[0].valid <= _portsBIO_filtered_0_valid_T_1 @[Xbar.scala 179:25]
    portsBIO_filtered[1].bits.corrupt <= out_2[0].b.bits.corrupt @[Xbar.scala 178:24]
    portsBIO_filtered[1].bits.data <= out_2[0].b.bits.data @[Xbar.scala 178:24]
    portsBIO_filtered[1].bits.mask <= out_2[0].b.bits.mask @[Xbar.scala 178:24]
    portsBIO_filtered[1].bits.address <= out_2[0].b.bits.address @[Xbar.scala 178:24]
    portsBIO_filtered[1].bits.source <= out_2[0].b.bits.source @[Xbar.scala 178:24]
    portsBIO_filtered[1].bits.size <= out_2[0].b.bits.size @[Xbar.scala 178:24]
    portsBIO_filtered[1].bits.param <= out_2[0].b.bits.param @[Xbar.scala 178:24]
    portsBIO_filtered[1].bits.opcode <= out_2[0].b.bits.opcode @[Xbar.scala 178:24]
    node _portsBIO_filtered_1_valid_T = or(requestBOI_0_1, UInt<1>("h00")) @[Xbar.scala 179:54]
    node _portsBIO_filtered_1_valid_T_1 = and(out_2[0].b.valid, _portsBIO_filtered_1_valid_T) @[Xbar.scala 179:40]
    portsBIO_filtered[1].valid <= _portsBIO_filtered_1_valid_T_1 @[Xbar.scala 179:25]
    node _portsBIO_out_0_b_ready_T = mux(requestBOI_0_0, portsBIO_filtered[0].ready, UInt<1>("h00")) @[Mux.scala 27:72]
    node _portsBIO_out_0_b_ready_T_1 = mux(requestBOI_0_1, portsBIO_filtered[1].ready, UInt<1>("h00")) @[Mux.scala 27:72]
    node _portsBIO_out_0_b_ready_T_2 = or(_portsBIO_out_0_b_ready_T, _portsBIO_out_0_b_ready_T_1) @[Mux.scala 27:72]
    wire _portsBIO_out_0_b_ready_WIRE : UInt<1> @[Mux.scala 27:72]
    _portsBIO_out_0_b_ready_WIRE <= _portsBIO_out_0_b_ready_T_2 @[Mux.scala 27:72]
    out_2[0].b.ready <= _portsBIO_out_0_b_ready_WIRE @[Xbar.scala 181:17]
    wire portsCOI_filtered : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}[1] @[Xbar.scala 176:24]
    portsCOI_filtered[0].bits.corrupt <= in[0].c.bits.corrupt @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.data <= in[0].c.bits.data @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.address <= in[0].c.bits.address @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.source <= in[0].c.bits.source @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.size <= in[0].c.bits.size @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.param <= in[0].c.bits.param @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.opcode <= in[0].c.bits.opcode @[Xbar.scala 178:24]
    node _portsCOI_filtered_0_valid_T = or(requestCIO_0_0, UInt<1>("h01")) @[Xbar.scala 179:54]
    node _portsCOI_filtered_0_valid_T_1 = and(in[0].c.valid, _portsCOI_filtered_0_valid_T) @[Xbar.scala 179:40]
    portsCOI_filtered[0].valid <= _portsCOI_filtered_0_valid_T_1 @[Xbar.scala 179:25]
    in[0].c.ready <= portsCOI_filtered[0].ready @[Xbar.scala 181:17]
    wire portsCOI_filtered_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}[1] @[Xbar.scala 176:24]
    portsCOI_filtered_1[0].bits.corrupt <= in[1].c.bits.corrupt @[Xbar.scala 178:24]
    portsCOI_filtered_1[0].bits.data <= in[1].c.bits.data @[Xbar.scala 178:24]
    portsCOI_filtered_1[0].bits.address <= in[1].c.bits.address @[Xbar.scala 178:24]
    portsCOI_filtered_1[0].bits.source <= in[1].c.bits.source @[Xbar.scala 178:24]
    portsCOI_filtered_1[0].bits.size <= in[1].c.bits.size @[Xbar.scala 178:24]
    portsCOI_filtered_1[0].bits.param <= in[1].c.bits.param @[Xbar.scala 178:24]
    portsCOI_filtered_1[0].bits.opcode <= in[1].c.bits.opcode @[Xbar.scala 178:24]
    node _portsCOI_filtered_0_valid_T_2 = or(requestCIO_1_0, UInt<1>("h01")) @[Xbar.scala 179:54]
    node _portsCOI_filtered_0_valid_T_3 = and(in[1].c.valid, _portsCOI_filtered_0_valid_T_2) @[Xbar.scala 179:40]
    portsCOI_filtered_1[0].valid <= _portsCOI_filtered_0_valid_T_3 @[Xbar.scala 179:25]
    in[1].c.ready <= portsCOI_filtered_1[0].ready @[Xbar.scala 181:17]
    wire portsDIO_filtered : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}[2] @[Xbar.scala 176:24]
    portsDIO_filtered[0].bits.corrupt <= out_2[0].d.bits.corrupt @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.data <= out_2[0].d.bits.data @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.denied <= out_2[0].d.bits.denied @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.sink <= out_2[0].d.bits.sink @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.source <= out_2[0].d.bits.source @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.size <= out_2[0].d.bits.size @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.param <= out_2[0].d.bits.param @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.opcode <= out_2[0].d.bits.opcode @[Xbar.scala 178:24]
    node _portsDIO_filtered_0_valid_T = or(requestDOI_0_0, UInt<1>("h00")) @[Xbar.scala 179:54]
    node _portsDIO_filtered_0_valid_T_1 = and(out_2[0].d.valid, _portsDIO_filtered_0_valid_T) @[Xbar.scala 179:40]
    portsDIO_filtered[0].valid <= _portsDIO_filtered_0_valid_T_1 @[Xbar.scala 179:25]
    portsDIO_filtered[1].bits.corrupt <= out_2[0].d.bits.corrupt @[Xbar.scala 178:24]
    portsDIO_filtered[1].bits.data <= out_2[0].d.bits.data @[Xbar.scala 178:24]
    portsDIO_filtered[1].bits.denied <= out_2[0].d.bits.denied @[Xbar.scala 178:24]
    portsDIO_filtered[1].bits.sink <= out_2[0].d.bits.sink @[Xbar.scala 178:24]
    portsDIO_filtered[1].bits.source <= out_2[0].d.bits.source @[Xbar.scala 178:24]
    portsDIO_filtered[1].bits.size <= out_2[0].d.bits.size @[Xbar.scala 178:24]
    portsDIO_filtered[1].bits.param <= out_2[0].d.bits.param @[Xbar.scala 178:24]
    portsDIO_filtered[1].bits.opcode <= out_2[0].d.bits.opcode @[Xbar.scala 178:24]
    node _portsDIO_filtered_1_valid_T = or(requestDOI_0_1, UInt<1>("h00")) @[Xbar.scala 179:54]
    node _portsDIO_filtered_1_valid_T_1 = and(out_2[0].d.valid, _portsDIO_filtered_1_valid_T) @[Xbar.scala 179:40]
    portsDIO_filtered[1].valid <= _portsDIO_filtered_1_valid_T_1 @[Xbar.scala 179:25]
    node _portsDIO_out_0_d_ready_T = mux(requestDOI_0_0, portsDIO_filtered[0].ready, UInt<1>("h00")) @[Mux.scala 27:72]
    node _portsDIO_out_0_d_ready_T_1 = mux(requestDOI_0_1, portsDIO_filtered[1].ready, UInt<1>("h00")) @[Mux.scala 27:72]
    node _portsDIO_out_0_d_ready_T_2 = or(_portsDIO_out_0_d_ready_T, _portsDIO_out_0_d_ready_T_1) @[Mux.scala 27:72]
    wire _portsDIO_out_0_d_ready_WIRE : UInt<1> @[Mux.scala 27:72]
    _portsDIO_out_0_d_ready_WIRE <= _portsDIO_out_0_d_ready_T_2 @[Mux.scala 27:72]
    out_2[0].d.ready <= _portsDIO_out_0_d_ready_WIRE @[Xbar.scala 181:17]
    wire portsEOI_filtered : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}[1] @[Xbar.scala 176:24]
    portsEOI_filtered[0].bits.sink <= in[0].e.bits.sink @[Xbar.scala 178:24]
    node _portsEOI_filtered_0_valid_T = or(UInt<1>("h00"), UInt<1>("h01")) @[Xbar.scala 179:54]
    node _portsEOI_filtered_0_valid_T_1 = and(in[0].e.valid, _portsEOI_filtered_0_valid_T) @[Xbar.scala 179:40]
    portsEOI_filtered[0].valid <= _portsEOI_filtered_0_valid_T_1 @[Xbar.scala 179:25]
    in[0].e.ready <= portsEOI_filtered[0].ready @[Xbar.scala 181:17]
    wire portsEOI_filtered_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}[1] @[Xbar.scala 176:24]
    portsEOI_filtered_1[0].bits.sink <= in[1].e.bits.sink @[Xbar.scala 178:24]
    node _portsEOI_filtered_0_valid_T_2 = or(UInt<1>("h00"), UInt<1>("h01")) @[Xbar.scala 179:54]
    node _portsEOI_filtered_0_valid_T_3 = and(in[1].e.valid, _portsEOI_filtered_0_valid_T_2) @[Xbar.scala 179:40]
    portsEOI_filtered_1[0].valid <= _portsEOI_filtered_0_valid_T_3 @[Xbar.scala 179:25]
    in[1].e.ready <= portsEOI_filtered_1[0].ready @[Xbar.scala 181:17]
    reg beatsLeft : UInt, clock with : (reset => (reset, UInt<1>("h00"))) @[Arbiter.scala 87:30]
    node idle = eq(beatsLeft, UInt<1>("h00")) @[Arbiter.scala 88:28]
    node latch = and(idle, out_2[0].a.ready) @[Arbiter.scala 89:24]
    node _validQuals_T = eq(portsAOI_filtered[0].lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node validQuals_0 = and(portsAOI_filtered[0].earlyValid, _validQuals_T) @[ReadyValidCancel.scala 21:38]
    node _validQuals_T_1 = eq(portsAOI_filtered_1[0].lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node validQuals_1 = and(portsAOI_filtered_1[0].earlyValid, _validQuals_T_1) @[ReadyValidCancel.scala 21:38]
    node _readys_T = cat(portsAOI_filtered_1[0].earlyValid, portsAOI_filtered[0].earlyValid) @[Cat.scala 30:58]
    node readys_filter_lo = bits(_readys_T, 1, 0) @[Arbiter.scala 21:23]
    node _readys_T_1 = eq(readys_filter_lo, _readys_T) @[Arbiter.scala 22:19]
    node _readys_T_2 = asUInt(reset) @[Arbiter.scala 22:12]
    node _readys_T_3 = or(_readys_T_1, _readys_T_2) @[Arbiter.scala 22:12]
    node _readys_T_4 = eq(_readys_T_3, UInt<1>("h00")) @[Arbiter.scala 22:12]
    when _readys_T_4 : @[Arbiter.scala 22:12]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:22 assert (valid === valids)\n") @[Arbiter.scala 22:12]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 22:12]
      skip @[Arbiter.scala 22:12]
    reg readys_mask : UInt<2>, clock with : (reset => (reset, UInt<2>("h03"))) @[Arbiter.scala 23:23]
    node _readys_filter_T = not(readys_mask) @[Arbiter.scala 24:30]
    node readys_filter_hi = and(readys_filter_lo, _readys_filter_T) @[Arbiter.scala 24:28]
    node readys_filter = cat(readys_filter_hi, readys_filter_lo) @[Cat.scala 30:58]
    node _readys_unready_T = shr(readys_filter, 1) @[package.scala 253:48]
    node _readys_unready_T_1 = or(readys_filter, _readys_unready_T) @[package.scala 253:43]
    node _readys_unready_T_2 = bits(_readys_unready_T_1, 3, 0) @[package.scala 254:17]
    node _readys_unready_T_3 = shr(_readys_unready_T_2, 1) @[Arbiter.scala 25:52]
    node _readys_unready_T_4 = shl(readys_mask, 2) @[Arbiter.scala 25:66]
    node readys_unready = or(_readys_unready_T_3, _readys_unready_T_4) @[Arbiter.scala 25:58]
    node _readys_readys_T = shr(readys_unready, 2) @[Arbiter.scala 26:29]
    node _readys_readys_T_1 = bits(readys_unready, 1, 0) @[Arbiter.scala 26:48]
    node _readys_readys_T_2 = and(_readys_readys_T, _readys_readys_T_1) @[Arbiter.scala 26:39]
    node readys_readys = not(_readys_readys_T_2) @[Arbiter.scala 26:18]
    node _readys_T_5 = orr(readys_filter_lo) @[Arbiter.scala 27:27]
    node _readys_T_6 = and(latch, _readys_T_5) @[Arbiter.scala 27:18]
    when _readys_T_6 : @[Arbiter.scala 27:32]
      node _readys_mask_T = and(readys_readys, readys_filter_lo) @[Arbiter.scala 28:29]
      node _readys_mask_T_1 = shl(_readys_mask_T, 1) @[package.scala 244:48]
      node _readys_mask_T_2 = bits(_readys_mask_T_1, 1, 0) @[package.scala 244:53]
      node _readys_mask_T_3 = or(_readys_mask_T, _readys_mask_T_2) @[package.scala 244:43]
      node _readys_mask_T_4 = bits(_readys_mask_T_3, 1, 0) @[package.scala 245:17]
      readys_mask <= _readys_mask_T_4 @[Arbiter.scala 28:12]
      skip @[Arbiter.scala 27:32]
    node _readys_T_7 = bits(readys_readys, 1, 0) @[Arbiter.scala 30:11]
    node _readys_T_8 = bits(_readys_T_7, 0, 0) @[Arbiter.scala 95:86]
    node _readys_T_9 = bits(_readys_T_7, 1, 1) @[Arbiter.scala 95:86]
    wire readys : UInt<1>[2] @[Arbiter.scala 95:27]
    readys[0] <= _readys_T_8 @[Arbiter.scala 95:27]
    readys[1] <= _readys_T_9 @[Arbiter.scala 95:27]
    node _earlyWinner_T = and(readys[0], portsAOI_filtered[0].earlyValid) @[Arbiter.scala 97:79]
    node _earlyWinner_T_1 = and(readys[1], portsAOI_filtered_1[0].earlyValid) @[Arbiter.scala 97:79]
    wire earlyWinner : UInt<1>[2] @[Arbiter.scala 97:32]
    earlyWinner[0] <= _earlyWinner_T @[Arbiter.scala 97:32]
    earlyWinner[1] <= _earlyWinner_T_1 @[Arbiter.scala 97:32]
    node _winnerQual_T = and(readys[0], validQuals_0) @[Arbiter.scala 98:79]
    node _winnerQual_T_1 = and(readys[1], validQuals_1) @[Arbiter.scala 98:79]
    wire winnerQual : UInt<1>[2] @[Arbiter.scala 98:32]
    winnerQual[0] <= _winnerQual_T @[Arbiter.scala 98:32]
    winnerQual[1] <= _winnerQual_T_1 @[Arbiter.scala 98:32]
    node prefixOR_1 = or(UInt<1>("h00"), earlyWinner[0]) @[Arbiter.scala 104:53]
    node _prefixOR_T = or(prefixOR_1, earlyWinner[1]) @[Arbiter.scala 104:53]
    node _T = eq(UInt<1>("h00"), UInt<1>("h00")) @[Arbiter.scala 105:61]
    node _T_1 = eq(earlyWinner[0], UInt<1>("h00")) @[Arbiter.scala 105:67]
    node _T_2 = or(_T, _T_1) @[Arbiter.scala 105:64]
    node _T_3 = eq(prefixOR_1, UInt<1>("h00")) @[Arbiter.scala 105:61]
    node _T_4 = eq(earlyWinner[1], UInt<1>("h00")) @[Arbiter.scala 105:67]
    node _T_5 = or(_T_3, _T_4) @[Arbiter.scala 105:64]
    node _T_6 = and(_T_2, _T_5) @[Arbiter.scala 105:82]
    node _T_7 = asUInt(reset) @[Arbiter.scala 105:13]
    node _T_8 = or(_T_6, _T_7) @[Arbiter.scala 105:13]
    node _T_9 = eq(_T_8, UInt<1>("h00")) @[Arbiter.scala 105:13]
    when _T_9 : @[Arbiter.scala 105:13]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:105 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n") @[Arbiter.scala 105:13]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 105:13]
      skip @[Arbiter.scala 105:13]
    node _T_10 = or(portsAOI_filtered[0].earlyValid, portsAOI_filtered_1[0].earlyValid) @[Arbiter.scala 107:36]
    node _T_11 = eq(_T_10, UInt<1>("h00")) @[Arbiter.scala 107:15]
    node _T_12 = or(earlyWinner[0], earlyWinner[1]) @[Arbiter.scala 107:64]
    node _T_13 = or(_T_11, _T_12) @[Arbiter.scala 107:41]
    node _T_14 = asUInt(reset) @[Arbiter.scala 107:14]
    node _T_15 = or(_T_13, _T_14) @[Arbiter.scala 107:14]
    node _T_16 = eq(_T_15, UInt<1>("h00")) @[Arbiter.scala 107:14]
    when _T_16 : @[Arbiter.scala 107:14]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:107 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n") @[Arbiter.scala 107:14]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 107:14]
      skip @[Arbiter.scala 107:14]
    node _T_17 = or(validQuals_0, validQuals_1) @[Arbiter.scala 108:36]
    node _T_18 = eq(_T_17, UInt<1>("h00")) @[Arbiter.scala 108:15]
    node _T_19 = or(validQuals_0, validQuals_1) @[Arbiter.scala 108:64]
    node _T_20 = or(_T_18, _T_19) @[Arbiter.scala 108:41]
    node _T_21 = asUInt(reset) @[Arbiter.scala 108:14]
    node _T_22 = or(_T_20, _T_21) @[Arbiter.scala 108:14]
    node _T_23 = eq(_T_22, UInt<1>("h00")) @[Arbiter.scala 108:14]
    when _T_23 : @[Arbiter.scala 108:14]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Arbiter.scala:108 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n") @[Arbiter.scala 108:14]
      stop(clock, UInt<1>(1), 1) @[Arbiter.scala 108:14]
      skip @[Arbiter.scala 108:14]
    node maskedBeats_0 = mux(winnerQual[0], beatsAI_0, UInt<1>("h00")) @[Arbiter.scala 111:73]
    node maskedBeats_1 = mux(winnerQual[1], beatsAI_1, UInt<1>("h00")) @[Arbiter.scala 111:73]
    node initBeats = or(maskedBeats_0, maskedBeats_1) @[Arbiter.scala 112:44]
    node _beatsLeft_T = eq(out_2[0].a.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _beatsLeft_T_1 = and(out_2[0].a.earlyValid, _beatsLeft_T) @[ReadyValidCancel.scala 21:38]
    node _beatsLeft_T_2 = and(out_2[0].a.ready, _beatsLeft_T_1) @[ReadyValidCancel.scala 50:33]
    node _beatsLeft_T_3 = sub(beatsLeft, _beatsLeft_T_2) @[Arbiter.scala 113:52]
    node _beatsLeft_T_4 = tail(_beatsLeft_T_3, 1) @[Arbiter.scala 113:52]
    node _beatsLeft_T_5 = mux(latch, initBeats, _beatsLeft_T_4) @[Arbiter.scala 113:23]
    beatsLeft <= _beatsLeft_T_5 @[Arbiter.scala 113:17]
    wire _state_WIRE : UInt<1>[2] @[Arbiter.scala 116:34]
    _state_WIRE[0] <= UInt<1>("h00") @[Arbiter.scala 116:34]
    _state_WIRE[1] <= UInt<1>("h00") @[Arbiter.scala 116:34]
    reg state : UInt<1>[2], clock with : (reset => (reset, _state_WIRE)) @[Arbiter.scala 116:26]
    node muxStateEarly = mux(idle, earlyWinner, state) @[Arbiter.scala 117:30]
    node muxStateQual = mux(idle, winnerQual, state) @[Arbiter.scala 118:30]
    state[0] <= muxStateQual[0] @[Arbiter.scala 119:13]
    state[1] <= muxStateQual[1] @[Arbiter.scala 119:13]
    node allowed = mux(idle, readys, state) @[Arbiter.scala 121:24]
    node _filtered_0_ready_T = and(out_2[0].a.ready, allowed[0]) @[Arbiter.scala 123:31]
    portsAOI_filtered[0].ready <= _filtered_0_ready_T @[Arbiter.scala 123:17]
    node _filtered_0_ready_T_1 = and(out_2[0].a.ready, allowed[1]) @[Arbiter.scala 123:31]
    portsAOI_filtered_1[0].ready <= _filtered_0_ready_T_1 @[Arbiter.scala 123:17]
    node _out_0_a_earlyValid_T = or(portsAOI_filtered[0].earlyValid, portsAOI_filtered_1[0].earlyValid) @[Arbiter.scala 125:56]
    node _out_0_a_earlyValid_T_1 = mux(state[0], portsAOI_filtered[0].earlyValid, UInt<1>("h00")) @[Mux.scala 27:72]
    node _out_0_a_earlyValid_T_2 = mux(state[1], portsAOI_filtered_1[0].earlyValid, UInt<1>("h00")) @[Mux.scala 27:72]
    node _out_0_a_earlyValid_T_3 = or(_out_0_a_earlyValid_T_1, _out_0_a_earlyValid_T_2) @[Mux.scala 27:72]
    wire _out_0_a_earlyValid_WIRE : UInt<1> @[Mux.scala 27:72]
    _out_0_a_earlyValid_WIRE <= _out_0_a_earlyValid_T_3 @[Mux.scala 27:72]
    node _out_0_a_earlyValid_T_4 = mux(idle, _out_0_a_earlyValid_T, _out_0_a_earlyValid_WIRE) @[Arbiter.scala 125:29]
    out_2[0].a.earlyValid <= _out_0_a_earlyValid_T_4 @[Arbiter.scala 125:23]
    node _out_0_a_lateCancel_T = mux(muxStateEarly[0], portsAOI_filtered[0].lateCancel, UInt<1>("h00")) @[Mux.scala 27:72]
    node _out_0_a_lateCancel_T_1 = mux(muxStateEarly[1], portsAOI_filtered_1[0].lateCancel, UInt<1>("h00")) @[Mux.scala 27:72]
    node _out_0_a_lateCancel_T_2 = or(_out_0_a_lateCancel_T, _out_0_a_lateCancel_T_1) @[Mux.scala 27:72]
    wire _out_0_a_lateCancel_WIRE : UInt<1> @[Mux.scala 27:72]
    _out_0_a_lateCancel_WIRE <= _out_0_a_lateCancel_T_2 @[Mux.scala 27:72]
    out_2[0].a.lateCancel <= _out_0_a_lateCancel_WIRE @[Arbiter.scala 126:23]
    wire _WIRE_7 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Mux.scala 27:72]
    node _T_24 = mux(muxStateEarly[0], portsAOI_filtered[0].bits.corrupt, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_25 = mux(muxStateEarly[1], portsAOI_filtered_1[0].bits.corrupt, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_26 = or(_T_24, _T_25) @[Mux.scala 27:72]
    wire _WIRE_8 : UInt<1> @[Mux.scala 27:72]
    _WIRE_8 <= _T_26 @[Mux.scala 27:72]
    _WIRE_7.corrupt <= _WIRE_8 @[Mux.scala 27:72]
    node _T_27 = mux(muxStateEarly[0], portsAOI_filtered[0].bits.data, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_28 = mux(muxStateEarly[1], portsAOI_filtered_1[0].bits.data, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_29 = or(_T_27, _T_28) @[Mux.scala 27:72]
    wire _WIRE_9 : UInt<32> @[Mux.scala 27:72]
    _WIRE_9 <= _T_29 @[Mux.scala 27:72]
    _WIRE_7.data <= _WIRE_9 @[Mux.scala 27:72]
    node _T_30 = mux(muxStateEarly[0], portsAOI_filtered[0].bits.mask, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_31 = mux(muxStateEarly[1], portsAOI_filtered_1[0].bits.mask, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_32 = or(_T_30, _T_31) @[Mux.scala 27:72]
    wire _WIRE_10 : UInt<4> @[Mux.scala 27:72]
    _WIRE_10 <= _T_32 @[Mux.scala 27:72]
    _WIRE_7.mask <= _WIRE_10 @[Mux.scala 27:72]
    wire _WIRE_11 : {} @[Mux.scala 27:72]
    wire _WIRE_12 : {} @[Mux.scala 27:72]
    node _T_33 = mux(muxStateEarly[0], portsAOI_filtered[0].bits.address, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_34 = mux(muxStateEarly[1], portsAOI_filtered_1[0].bits.address, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_35 = or(_T_33, _T_34) @[Mux.scala 27:72]
    wire _WIRE_13 : UInt<32> @[Mux.scala 27:72]
    _WIRE_13 <= _T_35 @[Mux.scala 27:72]
    _WIRE_7.address <= _WIRE_13 @[Mux.scala 27:72]
    node _T_36 = mux(muxStateEarly[0], portsAOI_filtered[0].bits.source, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_37 = mux(muxStateEarly[1], portsAOI_filtered_1[0].bits.source, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_38 = or(_T_36, _T_37) @[Mux.scala 27:72]
    wire _WIRE_14 : UInt<1> @[Mux.scala 27:72]
    _WIRE_14 <= _T_38 @[Mux.scala 27:72]
    _WIRE_7.source <= _WIRE_14 @[Mux.scala 27:72]
    node _T_39 = mux(muxStateEarly[0], portsAOI_filtered[0].bits.size, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_40 = mux(muxStateEarly[1], portsAOI_filtered_1[0].bits.size, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_41 = or(_T_39, _T_40) @[Mux.scala 27:72]
    wire _WIRE_15 : UInt<4> @[Mux.scala 27:72]
    _WIRE_15 <= _T_41 @[Mux.scala 27:72]
    _WIRE_7.size <= _WIRE_15 @[Mux.scala 27:72]
    node _T_42 = mux(muxStateEarly[0], portsAOI_filtered[0].bits.param, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_43 = mux(muxStateEarly[1], portsAOI_filtered_1[0].bits.param, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_44 = or(_T_42, _T_43) @[Mux.scala 27:72]
    wire _WIRE_16 : UInt<3> @[Mux.scala 27:72]
    _WIRE_16 <= _T_44 @[Mux.scala 27:72]
    _WIRE_7.param <= _WIRE_16 @[Mux.scala 27:72]
    node _T_45 = mux(muxStateEarly[0], portsAOI_filtered[0].bits.opcode, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_46 = mux(muxStateEarly[1], portsAOI_filtered_1[0].bits.opcode, UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_47 = or(_T_45, _T_46) @[Mux.scala 27:72]
    wire _WIRE_17 : UInt<3> @[Mux.scala 27:72]
    _WIRE_17 <= _T_47 @[Mux.scala 27:72]
    _WIRE_7.opcode <= _WIRE_17 @[Mux.scala 27:72]
    out_2[0].a.bits.corrupt <= _WIRE_7.corrupt @[BundleMap.scala 247:19]
    out_2[0].a.bits.data <= _WIRE_7.data @[BundleMap.scala 247:19]
    out_2[0].a.bits.mask <= _WIRE_7.mask @[BundleMap.scala 247:19]
    out_2[0].a.bits.address <= _WIRE_7.address @[BundleMap.scala 247:19]
    out_2[0].a.bits.source <= _WIRE_7.source @[BundleMap.scala 247:19]
    out_2[0].a.bits.size <= _WIRE_7.size @[BundleMap.scala 247:19]
    out_2[0].a.bits.param <= _WIRE_7.param @[BundleMap.scala 247:19]
    out_2[0].a.bits.opcode <= _WIRE_7.opcode @[BundleMap.scala 247:19]
    wire sink_ACancel : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    sink_ACancel.earlyValid <= UInt<1>("h00") @[Arbiter.scala 76:23]
    sink_ACancel.lateCancel is invalid @[Arbiter.scala 77:23]
    sink_ACancel.bits.corrupt is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.data is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.address is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.source is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.size is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.param is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.opcode is invalid @[Arbiter.scala 78:23]
    wire out_3 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T = eq(sink_ACancel.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_1 = and(sink_ACancel.earlyValid, _out_valid_T) @[ReadyValidCancel.scala 21:38]
    out_3.valid <= _out_valid_T_1 @[ReadyValidCancel.scala 56:15]
    out_3.bits.corrupt <= sink_ACancel.bits.corrupt @[ReadyValidCancel.scala 57:15]
    out_3.bits.data <= sink_ACancel.bits.data @[ReadyValidCancel.scala 57:15]
    out_3.bits.address <= sink_ACancel.bits.address @[ReadyValidCancel.scala 57:15]
    out_3.bits.source <= sink_ACancel.bits.source @[ReadyValidCancel.scala 57:15]
    out_3.bits.size <= sink_ACancel.bits.size @[ReadyValidCancel.scala 57:15]
    out_3.bits.param <= sink_ACancel.bits.param @[ReadyValidCancel.scala 57:15]
    out_3.bits.opcode <= sink_ACancel.bits.opcode @[ReadyValidCancel.scala 57:15]
    sink_ACancel.ready <= out_3.ready @[ReadyValidCancel.scala 58:11]
    out_2[0].c.bits.corrupt <= out_3.bits.corrupt @[BundleMap.scala 247:19]
    out_2[0].c.bits.data <= out_3.bits.data @[BundleMap.scala 247:19]
    out_2[0].c.bits.address <= out_3.bits.address @[BundleMap.scala 247:19]
    out_2[0].c.bits.source <= out_3.bits.source @[BundleMap.scala 247:19]
    out_2[0].c.bits.size <= out_3.bits.size @[BundleMap.scala 247:19]
    out_2[0].c.bits.param <= out_3.bits.param @[BundleMap.scala 247:19]
    out_2[0].c.bits.opcode <= out_3.bits.opcode @[BundleMap.scala 247:19]
    out_2[0].c.valid <= out_3.valid @[BundleMap.scala 247:19]
    out_3.ready <= out_2[0].c.ready @[BundleMap.scala 247:19]
    wire sink_ACancel_1 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {sink : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    sink_ACancel_1.earlyValid <= UInt<1>("h00") @[Arbiter.scala 76:23]
    sink_ACancel_1.lateCancel is invalid @[Arbiter.scala 77:23]
    sink_ACancel_1.bits.sink is invalid @[Arbiter.scala 78:23]
    wire out_4 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T_2 = eq(sink_ACancel_1.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_3 = and(sink_ACancel_1.earlyValid, _out_valid_T_2) @[ReadyValidCancel.scala 21:38]
    out_4.valid <= _out_valid_T_3 @[ReadyValidCancel.scala 56:15]
    out_4.bits.sink <= sink_ACancel_1.bits.sink @[ReadyValidCancel.scala 57:15]
    sink_ACancel_1.ready <= out_4.ready @[ReadyValidCancel.scala 58:11]
    out_2[0].e.bits.sink <= out_4.bits.sink @[BundleMap.scala 247:19]
    out_2[0].e.valid <= out_4.valid @[BundleMap.scala 247:19]
    out_4.ready <= out_2[0].e.ready @[BundleMap.scala 247:19]
    portsCOI_filtered[0].ready <= UInt<1>("h00") @[Xbar.scala 404:73]
    portsCOI_filtered_1[0].ready <= UInt<1>("h00") @[Xbar.scala 404:73]
    portsEOI_filtered[0].ready <= UInt<1>("h00") @[Xbar.scala 405:73]
    portsEOI_filtered_1[0].ready <= UInt<1>("h00") @[Xbar.scala 405:73]
    wire sink_ACancel_2 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    sink_ACancel_2.earlyValid <= UInt<1>("h00") @[Arbiter.scala 76:23]
    sink_ACancel_2.lateCancel is invalid @[Arbiter.scala 77:23]
    sink_ACancel_2.bits.corrupt is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.data is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.mask is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.address is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.source is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.size is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.param is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.opcode is invalid @[Arbiter.scala 78:23]
    wire out_5 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T_4 = eq(sink_ACancel_2.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_5 = and(sink_ACancel_2.earlyValid, _out_valid_T_4) @[ReadyValidCancel.scala 21:38]
    out_5.valid <= _out_valid_T_5 @[ReadyValidCancel.scala 56:15]
    out_5.bits.corrupt <= sink_ACancel_2.bits.corrupt @[ReadyValidCancel.scala 57:15]
    out_5.bits.data <= sink_ACancel_2.bits.data @[ReadyValidCancel.scala 57:15]
    out_5.bits.mask <= sink_ACancel_2.bits.mask @[ReadyValidCancel.scala 57:15]
    out_5.bits.address <= sink_ACancel_2.bits.address @[ReadyValidCancel.scala 57:15]
    out_5.bits.source <= sink_ACancel_2.bits.source @[ReadyValidCancel.scala 57:15]
    out_5.bits.size <= sink_ACancel_2.bits.size @[ReadyValidCancel.scala 57:15]
    out_5.bits.param <= sink_ACancel_2.bits.param @[ReadyValidCancel.scala 57:15]
    out_5.bits.opcode <= sink_ACancel_2.bits.opcode @[ReadyValidCancel.scala 57:15]
    sink_ACancel_2.ready <= out_5.ready @[ReadyValidCancel.scala 58:11]
    in[0].b.bits.corrupt <= out_5.bits.corrupt @[BundleMap.scala 247:19]
    in[0].b.bits.data <= out_5.bits.data @[BundleMap.scala 247:19]
    in[0].b.bits.mask <= out_5.bits.mask @[BundleMap.scala 247:19]
    in[0].b.bits.address <= out_5.bits.address @[BundleMap.scala 247:19]
    in[0].b.bits.source <= out_5.bits.source @[BundleMap.scala 247:19]
    in[0].b.bits.size <= out_5.bits.size @[BundleMap.scala 247:19]
    in[0].b.bits.param <= out_5.bits.param @[BundleMap.scala 247:19]
    in[0].b.bits.opcode <= out_5.bits.opcode @[BundleMap.scala 247:19]
    in[0].b.valid <= out_5.valid @[BundleMap.scala 247:19]
    out_5.ready <= in[0].b.ready @[BundleMap.scala 247:19]
    wire sink_ACancel_3 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    wire out_6 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[ReadyValidCancel.scala 70:19]
    out_6.earlyValid <= portsDIO_filtered[0].valid @[ReadyValidCancel.scala 71:20]
    out_6.lateCancel <= UInt<1>("h00") @[ReadyValidCancel.scala 72:20]
    out_6.bits.corrupt <= portsDIO_filtered[0].bits.corrupt @[ReadyValidCancel.scala 73:14]
    out_6.bits.data <= portsDIO_filtered[0].bits.data @[ReadyValidCancel.scala 73:14]
    out_6.bits.denied <= portsDIO_filtered[0].bits.denied @[ReadyValidCancel.scala 73:14]
    out_6.bits.sink <= portsDIO_filtered[0].bits.sink @[ReadyValidCancel.scala 73:14]
    out_6.bits.source <= portsDIO_filtered[0].bits.source @[ReadyValidCancel.scala 73:14]
    out_6.bits.size <= portsDIO_filtered[0].bits.size @[ReadyValidCancel.scala 73:14]
    out_6.bits.param <= portsDIO_filtered[0].bits.param @[ReadyValidCancel.scala 73:14]
    out_6.bits.opcode <= portsDIO_filtered[0].bits.opcode @[ReadyValidCancel.scala 73:14]
    portsDIO_filtered[0].ready <= out_6.ready @[ReadyValidCancel.scala 74:14]
    sink_ACancel_3.bits.corrupt <= out_6.bits.corrupt @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.data <= out_6.bits.data @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.denied <= out_6.bits.denied @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.sink <= out_6.bits.sink @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.source <= out_6.bits.source @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.size <= out_6.bits.size @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.param <= out_6.bits.param @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.opcode <= out_6.bits.opcode @[BundleMap.scala 247:19]
    sink_ACancel_3.lateCancel <= out_6.lateCancel @[BundleMap.scala 247:19]
    sink_ACancel_3.earlyValid <= out_6.earlyValid @[BundleMap.scala 247:19]
    out_6.ready <= sink_ACancel_3.ready @[BundleMap.scala 247:19]
    wire out_7 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T_6 = eq(sink_ACancel_3.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_7 = and(sink_ACancel_3.earlyValid, _out_valid_T_6) @[ReadyValidCancel.scala 21:38]
    out_7.valid <= _out_valid_T_7 @[ReadyValidCancel.scala 56:15]
    out_7.bits.corrupt <= sink_ACancel_3.bits.corrupt @[ReadyValidCancel.scala 57:15]
    out_7.bits.data <= sink_ACancel_3.bits.data @[ReadyValidCancel.scala 57:15]
    out_7.bits.denied <= sink_ACancel_3.bits.denied @[ReadyValidCancel.scala 57:15]
    out_7.bits.sink <= sink_ACancel_3.bits.sink @[ReadyValidCancel.scala 57:15]
    out_7.bits.source <= sink_ACancel_3.bits.source @[ReadyValidCancel.scala 57:15]
    out_7.bits.size <= sink_ACancel_3.bits.size @[ReadyValidCancel.scala 57:15]
    out_7.bits.param <= sink_ACancel_3.bits.param @[ReadyValidCancel.scala 57:15]
    out_7.bits.opcode <= sink_ACancel_3.bits.opcode @[ReadyValidCancel.scala 57:15]
    sink_ACancel_3.ready <= out_7.ready @[ReadyValidCancel.scala 58:11]
    in[0].d.bits.corrupt <= out_7.bits.corrupt @[BundleMap.scala 247:19]
    in[0].d.bits.data <= out_7.bits.data @[BundleMap.scala 247:19]
    in[0].d.bits.denied <= out_7.bits.denied @[BundleMap.scala 247:19]
    in[0].d.bits.sink <= out_7.bits.sink @[BundleMap.scala 247:19]
    in[0].d.bits.source <= out_7.bits.source @[BundleMap.scala 247:19]
    in[0].d.bits.size <= out_7.bits.size @[BundleMap.scala 247:19]
    in[0].d.bits.param <= out_7.bits.param @[BundleMap.scala 247:19]
    in[0].d.bits.opcode <= out_7.bits.opcode @[BundleMap.scala 247:19]
    in[0].d.valid <= out_7.valid @[BundleMap.scala 247:19]
    out_7.ready <= in[0].d.ready @[BundleMap.scala 247:19]
    portsBIO_filtered[0].ready <= UInt<1>("h00") @[Xbar.scala 411:73]
    wire sink_ACancel_4 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    sink_ACancel_4.earlyValid <= UInt<1>("h00") @[Arbiter.scala 76:23]
    sink_ACancel_4.lateCancel is invalid @[Arbiter.scala 77:23]
    sink_ACancel_4.bits.corrupt is invalid @[Arbiter.scala 78:23]
    sink_ACancel_4.bits.data is invalid @[Arbiter.scala 78:23]
    sink_ACancel_4.bits.mask is invalid @[Arbiter.scala 78:23]
    sink_ACancel_4.bits.address is invalid @[Arbiter.scala 78:23]
    sink_ACancel_4.bits.source is invalid @[Arbiter.scala 78:23]
    sink_ACancel_4.bits.size is invalid @[Arbiter.scala 78:23]
    sink_ACancel_4.bits.param is invalid @[Arbiter.scala 78:23]
    sink_ACancel_4.bits.opcode is invalid @[Arbiter.scala 78:23]
    wire out_8 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T_8 = eq(sink_ACancel_4.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_9 = and(sink_ACancel_4.earlyValid, _out_valid_T_8) @[ReadyValidCancel.scala 21:38]
    out_8.valid <= _out_valid_T_9 @[ReadyValidCancel.scala 56:15]
    out_8.bits.corrupt <= sink_ACancel_4.bits.corrupt @[ReadyValidCancel.scala 57:15]
    out_8.bits.data <= sink_ACancel_4.bits.data @[ReadyValidCancel.scala 57:15]
    out_8.bits.mask <= sink_ACancel_4.bits.mask @[ReadyValidCancel.scala 57:15]
    out_8.bits.address <= sink_ACancel_4.bits.address @[ReadyValidCancel.scala 57:15]
    out_8.bits.source <= sink_ACancel_4.bits.source @[ReadyValidCancel.scala 57:15]
    out_8.bits.size <= sink_ACancel_4.bits.size @[ReadyValidCancel.scala 57:15]
    out_8.bits.param <= sink_ACancel_4.bits.param @[ReadyValidCancel.scala 57:15]
    out_8.bits.opcode <= sink_ACancel_4.bits.opcode @[ReadyValidCancel.scala 57:15]
    sink_ACancel_4.ready <= out_8.ready @[ReadyValidCancel.scala 58:11]
    in[1].b.bits.corrupt <= out_8.bits.corrupt @[BundleMap.scala 247:19]
    in[1].b.bits.data <= out_8.bits.data @[BundleMap.scala 247:19]
    in[1].b.bits.mask <= out_8.bits.mask @[BundleMap.scala 247:19]
    in[1].b.bits.address <= out_8.bits.address @[BundleMap.scala 247:19]
    in[1].b.bits.source <= out_8.bits.source @[BundleMap.scala 247:19]
    in[1].b.bits.size <= out_8.bits.size @[BundleMap.scala 247:19]
    in[1].b.bits.param <= out_8.bits.param @[BundleMap.scala 247:19]
    in[1].b.bits.opcode <= out_8.bits.opcode @[BundleMap.scala 247:19]
    in[1].b.valid <= out_8.valid @[BundleMap.scala 247:19]
    out_8.ready <= in[1].b.ready @[BundleMap.scala 247:19]
    wire sink_ACancel_5 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    wire out_9 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[ReadyValidCancel.scala 70:19]
    out_9.earlyValid <= portsDIO_filtered[1].valid @[ReadyValidCancel.scala 71:20]
    out_9.lateCancel <= UInt<1>("h00") @[ReadyValidCancel.scala 72:20]
    out_9.bits.corrupt <= portsDIO_filtered[1].bits.corrupt @[ReadyValidCancel.scala 73:14]
    out_9.bits.data <= portsDIO_filtered[1].bits.data @[ReadyValidCancel.scala 73:14]
    out_9.bits.denied <= portsDIO_filtered[1].bits.denied @[ReadyValidCancel.scala 73:14]
    out_9.bits.sink <= portsDIO_filtered[1].bits.sink @[ReadyValidCancel.scala 73:14]
    out_9.bits.source <= portsDIO_filtered[1].bits.source @[ReadyValidCancel.scala 73:14]
    out_9.bits.size <= portsDIO_filtered[1].bits.size @[ReadyValidCancel.scala 73:14]
    out_9.bits.param <= portsDIO_filtered[1].bits.param @[ReadyValidCancel.scala 73:14]
    out_9.bits.opcode <= portsDIO_filtered[1].bits.opcode @[ReadyValidCancel.scala 73:14]
    portsDIO_filtered[1].ready <= out_9.ready @[ReadyValidCancel.scala 74:14]
    sink_ACancel_5.bits.corrupt <= out_9.bits.corrupt @[BundleMap.scala 247:19]
    sink_ACancel_5.bits.data <= out_9.bits.data @[BundleMap.scala 247:19]
    sink_ACancel_5.bits.denied <= out_9.bits.denied @[BundleMap.scala 247:19]
    sink_ACancel_5.bits.sink <= out_9.bits.sink @[BundleMap.scala 247:19]
    sink_ACancel_5.bits.source <= out_9.bits.source @[BundleMap.scala 247:19]
    sink_ACancel_5.bits.size <= out_9.bits.size @[BundleMap.scala 247:19]
    sink_ACancel_5.bits.param <= out_9.bits.param @[BundleMap.scala 247:19]
    sink_ACancel_5.bits.opcode <= out_9.bits.opcode @[BundleMap.scala 247:19]
    sink_ACancel_5.lateCancel <= out_9.lateCancel @[BundleMap.scala 247:19]
    sink_ACancel_5.earlyValid <= out_9.earlyValid @[BundleMap.scala 247:19]
    out_9.ready <= sink_ACancel_5.ready @[BundleMap.scala 247:19]
    wire out_10 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T_10 = eq(sink_ACancel_5.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_11 = and(sink_ACancel_5.earlyValid, _out_valid_T_10) @[ReadyValidCancel.scala 21:38]
    out_10.valid <= _out_valid_T_11 @[ReadyValidCancel.scala 56:15]
    out_10.bits.corrupt <= sink_ACancel_5.bits.corrupt @[ReadyValidCancel.scala 57:15]
    out_10.bits.data <= sink_ACancel_5.bits.data @[ReadyValidCancel.scala 57:15]
    out_10.bits.denied <= sink_ACancel_5.bits.denied @[ReadyValidCancel.scala 57:15]
    out_10.bits.sink <= sink_ACancel_5.bits.sink @[ReadyValidCancel.scala 57:15]
    out_10.bits.source <= sink_ACancel_5.bits.source @[ReadyValidCancel.scala 57:15]
    out_10.bits.size <= sink_ACancel_5.bits.size @[ReadyValidCancel.scala 57:15]
    out_10.bits.param <= sink_ACancel_5.bits.param @[ReadyValidCancel.scala 57:15]
    out_10.bits.opcode <= sink_ACancel_5.bits.opcode @[ReadyValidCancel.scala 57:15]
    sink_ACancel_5.ready <= out_10.ready @[ReadyValidCancel.scala 58:11]
    in[1].d.bits.corrupt <= out_10.bits.corrupt @[BundleMap.scala 247:19]
    in[1].d.bits.data <= out_10.bits.data @[BundleMap.scala 247:19]
    in[1].d.bits.denied <= out_10.bits.denied @[BundleMap.scala 247:19]
    in[1].d.bits.sink <= out_10.bits.sink @[BundleMap.scala 247:19]
    in[1].d.bits.source <= out_10.bits.source @[BundleMap.scala 247:19]
    in[1].d.bits.size <= out_10.bits.size @[BundleMap.scala 247:19]
    in[1].d.bits.param <= out_10.bits.param @[BundleMap.scala 247:19]
    in[1].d.bits.opcode <= out_10.bits.opcode @[BundleMap.scala 247:19]
    in[1].d.valid <= out_10.valid @[BundleMap.scala 247:19]
    out_10.ready <= in[1].d.ready @[BundleMap.scala 247:19]
    portsBIO_filtered[1].ready <= UInt<1>("h00") @[Xbar.scala 411:73]
    wire bundleOut_0_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Bundle_ACancel.scala 23:19]
    wire bundleOut_0_out_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _bundleOut_0_out_valid_T = eq(_WIRE.a.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _bundleOut_0_out_valid_T_1 = and(_WIRE.a.earlyValid, _bundleOut_0_out_valid_T) @[ReadyValidCancel.scala 21:38]
    bundleOut_0_out_1.valid <= _bundleOut_0_out_valid_T_1 @[ReadyValidCancel.scala 56:15]
    bundleOut_0_out_1.bits.corrupt <= _WIRE.a.bits.corrupt @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.data <= _WIRE.a.bits.data @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.mask <= _WIRE.a.bits.mask @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.address <= _WIRE.a.bits.address @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.source <= _WIRE.a.bits.source @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.size <= _WIRE.a.bits.size @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.param <= _WIRE.a.bits.param @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.opcode <= _WIRE.a.bits.opcode @[ReadyValidCancel.scala 57:15]
    _WIRE.a.ready <= bundleOut_0_out_1.ready @[ReadyValidCancel.scala 58:11]
    bundleOut_0_out.a.bits.corrupt <= bundleOut_0_out_1.bits.corrupt @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.data <= bundleOut_0_out_1.bits.data @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.mask <= bundleOut_0_out_1.bits.mask @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.address <= bundleOut_0_out_1.bits.address @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.source <= bundleOut_0_out_1.bits.source @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.size <= bundleOut_0_out_1.bits.size @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.param <= bundleOut_0_out_1.bits.param @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.opcode <= bundleOut_0_out_1.bits.opcode @[BundleMap.scala 247:19]
    bundleOut_0_out.a.valid <= bundleOut_0_out_1.valid @[BundleMap.scala 247:19]
    bundleOut_0_out_1.ready <= bundleOut_0_out.a.ready @[BundleMap.scala 247:19]
    wire _bundleOut_0_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _bundleOut_0_WIRE is invalid @[Bundles.scala 256:54]
    _WIRE.b.bits.corrupt <= _bundleOut_0_WIRE.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE.b.bits.data <= _bundleOut_0_WIRE.bits.data @[BundleMap.scala 247:19]
    _WIRE.b.bits.mask <= _bundleOut_0_WIRE.bits.mask @[BundleMap.scala 247:19]
    _WIRE.b.bits.address <= _bundleOut_0_WIRE.bits.address @[BundleMap.scala 247:19]
    _WIRE.b.bits.source <= _bundleOut_0_WIRE.bits.source @[BundleMap.scala 247:19]
    _WIRE.b.bits.size <= _bundleOut_0_WIRE.bits.size @[BundleMap.scala 247:19]
    _WIRE.b.bits.param <= _bundleOut_0_WIRE.bits.param @[BundleMap.scala 247:19]
    _WIRE.b.bits.opcode <= _bundleOut_0_WIRE.bits.opcode @[BundleMap.scala 247:19]
    _WIRE.b.valid <= _bundleOut_0_WIRE.valid @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE.ready <= _WIRE.b.ready @[BundleMap.scala 247:19]
    wire _bundleOut_0_WIRE_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _bundleOut_0_WIRE_1 is invalid @[Bundles.scala 257:54]
    _bundleOut_0_WIRE_1.bits.corrupt <= _WIRE.c.bits.corrupt @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.data <= _WIRE.c.bits.data @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.address <= _WIRE.c.bits.address @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.source <= _WIRE.c.bits.source @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.size <= _WIRE.c.bits.size @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.param <= _WIRE.c.bits.param @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.opcode <= _WIRE.c.bits.opcode @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.valid <= _WIRE.c.valid @[BundleMap.scala 247:19]
    _WIRE.c.ready <= _bundleOut_0_WIRE_1.ready @[BundleMap.scala 247:19]
    _WIRE.d.bits.corrupt <= bundleOut_0_out.d.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE.d.bits.data <= bundleOut_0_out.d.bits.data @[BundleMap.scala 247:19]
    _WIRE.d.bits.denied <= bundleOut_0_out.d.bits.denied @[BundleMap.scala 247:19]
    _WIRE.d.bits.sink <= bundleOut_0_out.d.bits.sink @[BundleMap.scala 247:19]
    _WIRE.d.bits.source <= bundleOut_0_out.d.bits.source @[BundleMap.scala 247:19]
    _WIRE.d.bits.size <= bundleOut_0_out.d.bits.size @[BundleMap.scala 247:19]
    _WIRE.d.bits.param <= bundleOut_0_out.d.bits.param @[BundleMap.scala 247:19]
    _WIRE.d.bits.opcode <= bundleOut_0_out.d.bits.opcode @[BundleMap.scala 247:19]
    _WIRE.d.valid <= bundleOut_0_out.d.valid @[BundleMap.scala 247:19]
    bundleOut_0_out.d.ready <= _WIRE.d.ready @[BundleMap.scala 247:19]
    wire _bundleOut_0_WIRE_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _bundleOut_0_WIRE_2 is invalid @[Bundles.scala 259:54]
    _bundleOut_0_WIRE_2.bits.sink <= _WIRE.e.bits.sink @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_2.valid <= _WIRE.e.valid @[BundleMap.scala 247:19]
    _WIRE.e.ready <= _bundleOut_0_WIRE_2.ready @[BundleMap.scala 247:19]
    bundleOut_0 <- bundleOut_0_out @[Xbar.scala 136:12]
    
  module TLXbar_7 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}, out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire bundleOut_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    wire bundleIn_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1210:84]
    bundleIn_0 is invalid @[Nodes.scala 1210:84]
    auto.out <- bundleOut_0 @[LazyModule.scala 311:12]
    bundleIn_0 <- auto.in @[LazyModule.scala 309:16]
    wire _WIRE : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}} @[Xbar.scala 132:50]
    wire out : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}} @[Bundle_ACancel.scala 53:19]
    out.a.earlyValid <= bundleIn_0.a.valid @[Bundle_ACancel.scala 54:22]
    out.a.lateCancel <= UInt<1>("h00") @[Bundle_ACancel.scala 55:22]
    out.a.bits.corrupt <= bundleIn_0.a.bits.corrupt @[Bundle_ACancel.scala 56:16]
    out.a.bits.data <= bundleIn_0.a.bits.data @[Bundle_ACancel.scala 56:16]
    out.a.bits.mask <= bundleIn_0.a.bits.mask @[Bundle_ACancel.scala 56:16]
    out.a.bits.address <= bundleIn_0.a.bits.address @[Bundle_ACancel.scala 56:16]
    out.a.bits.source <= bundleIn_0.a.bits.source @[Bundle_ACancel.scala 56:16]
    out.a.bits.size <= bundleIn_0.a.bits.size @[Bundle_ACancel.scala 56:16]
    out.a.bits.param <= bundleIn_0.a.bits.param @[Bundle_ACancel.scala 56:16]
    out.a.bits.opcode <= bundleIn_0.a.bits.opcode @[Bundle_ACancel.scala 56:16]
    bundleIn_0.a.ready <= out.a.ready @[Bundle_ACancel.scala 57:16]
    wire _WIRE_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _WIRE_1 is invalid @[Bundles.scala 256:54]
    _WIRE_1.bits.corrupt <= out.b.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE_1.bits.data <= out.b.bits.data @[BundleMap.scala 247:19]
    _WIRE_1.bits.mask <= out.b.bits.mask @[BundleMap.scala 247:19]
    _WIRE_1.bits.address <= out.b.bits.address @[BundleMap.scala 247:19]
    _WIRE_1.bits.source <= out.b.bits.source @[BundleMap.scala 247:19]
    _WIRE_1.bits.size <= out.b.bits.size @[BundleMap.scala 247:19]
    _WIRE_1.bits.param <= out.b.bits.param @[BundleMap.scala 247:19]
    _WIRE_1.bits.opcode <= out.b.bits.opcode @[BundleMap.scala 247:19]
    _WIRE_1.valid <= out.b.valid @[BundleMap.scala 247:19]
    out.b.ready <= _WIRE_1.ready @[BundleMap.scala 247:19]
    wire _WIRE_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _WIRE_2 is invalid @[Bundles.scala 257:54]
    out.c.bits.corrupt <= _WIRE_2.bits.corrupt @[BundleMap.scala 247:19]
    out.c.bits.data <= _WIRE_2.bits.data @[BundleMap.scala 247:19]
    out.c.bits.address <= _WIRE_2.bits.address @[BundleMap.scala 247:19]
    out.c.bits.source <= _WIRE_2.bits.source @[BundleMap.scala 247:19]
    out.c.bits.size <= _WIRE_2.bits.size @[BundleMap.scala 247:19]
    out.c.bits.param <= _WIRE_2.bits.param @[BundleMap.scala 247:19]
    out.c.bits.opcode <= _WIRE_2.bits.opcode @[BundleMap.scala 247:19]
    out.c.valid <= _WIRE_2.valid @[BundleMap.scala 247:19]
    _WIRE_2.ready <= out.c.ready @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.corrupt <= out.d.bits.corrupt @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.data <= out.d.bits.data @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.denied <= out.d.bits.denied @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.sink <= out.d.bits.sink @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.source <= out.d.bits.source @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.size <= out.d.bits.size @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.param <= out.d.bits.param @[BundleMap.scala 247:19]
    bundleIn_0.d.bits.opcode <= out.d.bits.opcode @[BundleMap.scala 247:19]
    bundleIn_0.d.valid <= out.d.valid @[BundleMap.scala 247:19]
    out.d.ready <= bundleIn_0.d.ready @[BundleMap.scala 247:19]
    wire _WIRE_3 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_3 is invalid @[Bundles.scala 259:54]
    out.e.bits.sink <= _WIRE_3.bits.sink @[BundleMap.scala 247:19]
    out.e.valid <= _WIRE_3.valid @[BundleMap.scala 247:19]
    _WIRE_3.ready <= out.e.ready @[BundleMap.scala 247:19]
    wire in : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}}[1] @[Xbar.scala 231:18]
    in[0].a.bits.corrupt <= out.a.bits.corrupt @[BundleMap.scala 247:19]
    in[0].a.bits.data <= out.a.bits.data @[BundleMap.scala 247:19]
    in[0].a.bits.mask <= out.a.bits.mask @[BundleMap.scala 247:19]
    in[0].a.bits.address <= out.a.bits.address @[BundleMap.scala 247:19]
    in[0].a.bits.source <= out.a.bits.source @[BundleMap.scala 247:19]
    in[0].a.bits.size <= out.a.bits.size @[BundleMap.scala 247:19]
    in[0].a.bits.param <= out.a.bits.param @[BundleMap.scala 247:19]
    in[0].a.bits.opcode <= out.a.bits.opcode @[BundleMap.scala 247:19]
    in[0].a.lateCancel <= out.a.lateCancel @[BundleMap.scala 247:19]
    in[0].a.earlyValid <= out.a.earlyValid @[BundleMap.scala 247:19]
    out.a.ready <= in[0].a.ready @[BundleMap.scala 247:19]
    node _in_0_a_bits_source_T = or(out.a.bits.source, UInt<1>("h00")) @[Xbar.scala 237:55]
    in[0].a.bits.source <= _in_0_a_bits_source_T @[Xbar.scala 237:29]
    in[0].b.ready <= UInt<1>("h01") @[Xbar.scala 251:23]
    in[0].b.bits.corrupt is invalid @[Xbar.scala 252:23]
    in[0].b.bits.data is invalid @[Xbar.scala 252:23]
    in[0].b.bits.mask is invalid @[Xbar.scala 252:23]
    in[0].b.bits.address is invalid @[Xbar.scala 252:23]
    in[0].b.bits.source is invalid @[Xbar.scala 252:23]
    in[0].b.bits.size is invalid @[Xbar.scala 252:23]
    in[0].b.bits.param is invalid @[Xbar.scala 252:23]
    in[0].b.bits.opcode is invalid @[Xbar.scala 252:23]
    out.b.valid <= UInt<1>("h00") @[Xbar.scala 253:26]
    out.b.bits.corrupt is invalid @[Xbar.scala 254:26]
    out.b.bits.data is invalid @[Xbar.scala 254:26]
    out.b.bits.mask is invalid @[Xbar.scala 254:26]
    out.b.bits.address is invalid @[Xbar.scala 254:26]
    out.b.bits.source is invalid @[Xbar.scala 254:26]
    out.b.bits.size is invalid @[Xbar.scala 254:26]
    out.b.bits.param is invalid @[Xbar.scala 254:26]
    out.b.bits.opcode is invalid @[Xbar.scala 254:26]
    in[0].c.valid <= UInt<1>("h00") @[Xbar.scala 261:23]
    in[0].c.bits.corrupt is invalid @[Xbar.scala 262:23]
    in[0].c.bits.data is invalid @[Xbar.scala 262:23]
    in[0].c.bits.address is invalid @[Xbar.scala 262:23]
    in[0].c.bits.source is invalid @[Xbar.scala 262:23]
    in[0].c.bits.size is invalid @[Xbar.scala 262:23]
    in[0].c.bits.param is invalid @[Xbar.scala 262:23]
    in[0].c.bits.opcode is invalid @[Xbar.scala 262:23]
    out.c.ready <= UInt<1>("h01") @[Xbar.scala 263:26]
    out.c.bits.corrupt is invalid @[Xbar.scala 264:26]
    out.c.bits.data is invalid @[Xbar.scala 264:26]
    out.c.bits.address is invalid @[Xbar.scala 264:26]
    out.c.bits.source is invalid @[Xbar.scala 264:26]
    out.c.bits.size is invalid @[Xbar.scala 264:26]
    out.c.bits.param is invalid @[Xbar.scala 264:26]
    out.c.bits.opcode is invalid @[Xbar.scala 264:26]
    out.d.bits.corrupt <= in[0].d.bits.corrupt @[BundleMap.scala 247:19]
    out.d.bits.data <= in[0].d.bits.data @[BundleMap.scala 247:19]
    out.d.bits.denied <= in[0].d.bits.denied @[BundleMap.scala 247:19]
    out.d.bits.sink <= in[0].d.bits.sink @[BundleMap.scala 247:19]
    out.d.bits.source <= in[0].d.bits.source @[BundleMap.scala 247:19]
    out.d.bits.size <= in[0].d.bits.size @[BundleMap.scala 247:19]
    out.d.bits.param <= in[0].d.bits.param @[BundleMap.scala 247:19]
    out.d.bits.opcode <= in[0].d.bits.opcode @[BundleMap.scala 247:19]
    out.d.valid <= in[0].d.valid @[BundleMap.scala 247:19]
    in[0].d.ready <= out.d.ready @[BundleMap.scala 247:19]
    node _out_d_bits_source_T = bits(in[0].d.bits.source, 2, 0) @[Xbar.scala 228:69]
    out.d.bits.source <= _out_d_bits_source_T @[Xbar.scala 269:32]
    in[0].e.valid <= UInt<1>("h00") @[Xbar.scala 280:23]
    in[0].e.bits.sink is invalid @[Xbar.scala 281:23]
    out.e.ready <= UInt<1>("h01") @[Xbar.scala 282:26]
    out.e.bits.sink is invalid @[Xbar.scala 283:26]
    wire out_1 : {a : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}, flip b : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}, e : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}}[1] @[Xbar.scala 288:19]
    _WIRE.a.bits.corrupt <= out_1[0].a.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE.a.bits.data <= out_1[0].a.bits.data @[BundleMap.scala 247:19]
    _WIRE.a.bits.mask <= out_1[0].a.bits.mask @[BundleMap.scala 247:19]
    _WIRE.a.bits.address <= out_1[0].a.bits.address @[BundleMap.scala 247:19]
    _WIRE.a.bits.source <= out_1[0].a.bits.source @[BundleMap.scala 247:19]
    _WIRE.a.bits.size <= out_1[0].a.bits.size @[BundleMap.scala 247:19]
    _WIRE.a.bits.param <= out_1[0].a.bits.param @[BundleMap.scala 247:19]
    _WIRE.a.bits.opcode <= out_1[0].a.bits.opcode @[BundleMap.scala 247:19]
    _WIRE.a.lateCancel <= out_1[0].a.lateCancel @[BundleMap.scala 247:19]
    _WIRE.a.earlyValid <= out_1[0].a.earlyValid @[BundleMap.scala 247:19]
    out_1[0].a.ready <= _WIRE.a.ready @[BundleMap.scala 247:19]
    out_1[0].b.valid <= UInt<1>("h00") @[Xbar.scala 306:24]
    out_1[0].b.bits.corrupt is invalid @[Xbar.scala 307:24]
    out_1[0].b.bits.data is invalid @[Xbar.scala 307:24]
    out_1[0].b.bits.mask is invalid @[Xbar.scala 307:24]
    out_1[0].b.bits.address is invalid @[Xbar.scala 307:24]
    out_1[0].b.bits.source is invalid @[Xbar.scala 307:24]
    out_1[0].b.bits.size is invalid @[Xbar.scala 307:24]
    out_1[0].b.bits.param is invalid @[Xbar.scala 307:24]
    out_1[0].b.bits.opcode is invalid @[Xbar.scala 307:24]
    _WIRE.b.ready <= UInt<1>("h01") @[Xbar.scala 308:27]
    _WIRE.b.bits.corrupt is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.data is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.mask is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.address is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.source is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.size is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.param is invalid @[Xbar.scala 309:27]
    _WIRE.b.bits.opcode is invalid @[Xbar.scala 309:27]
    out_1[0].c.ready <= UInt<1>("h01") @[Xbar.scala 315:24]
    out_1[0].c.bits.corrupt is invalid @[Xbar.scala 316:24]
    out_1[0].c.bits.data is invalid @[Xbar.scala 316:24]
    out_1[0].c.bits.address is invalid @[Xbar.scala 316:24]
    out_1[0].c.bits.source is invalid @[Xbar.scala 316:24]
    out_1[0].c.bits.size is invalid @[Xbar.scala 316:24]
    out_1[0].c.bits.param is invalid @[Xbar.scala 316:24]
    out_1[0].c.bits.opcode is invalid @[Xbar.scala 316:24]
    _WIRE.c.valid <= UInt<1>("h00") @[Xbar.scala 317:27]
    _WIRE.c.bits.corrupt is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.data is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.address is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.source is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.size is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.param is invalid @[Xbar.scala 318:27]
    _WIRE.c.bits.opcode is invalid @[Xbar.scala 318:27]
    out_1[0].d.bits.corrupt <= _WIRE.d.bits.corrupt @[BundleMap.scala 247:19]
    out_1[0].d.bits.data <= _WIRE.d.bits.data @[BundleMap.scala 247:19]
    out_1[0].d.bits.denied <= _WIRE.d.bits.denied @[BundleMap.scala 247:19]
    out_1[0].d.bits.sink <= _WIRE.d.bits.sink @[BundleMap.scala 247:19]
    out_1[0].d.bits.source <= _WIRE.d.bits.source @[BundleMap.scala 247:19]
    out_1[0].d.bits.size <= _WIRE.d.bits.size @[BundleMap.scala 247:19]
    out_1[0].d.bits.param <= _WIRE.d.bits.param @[BundleMap.scala 247:19]
    out_1[0].d.bits.opcode <= _WIRE.d.bits.opcode @[BundleMap.scala 247:19]
    out_1[0].d.valid <= _WIRE.d.valid @[BundleMap.scala 247:19]
    _WIRE.d.ready <= out_1[0].d.ready @[BundleMap.scala 247:19]
    node _out_0_d_bits_sink_T = or(_WIRE.d.bits.sink, UInt<1>("h00")) @[Xbar.scala 323:53]
    out_1[0].d.bits.sink <= _out_0_d_bits_sink_T @[Xbar.scala 323:28]
    out_1[0].e.ready <= UInt<1>("h01") @[Xbar.scala 335:24]
    out_1[0].e.bits.sink is invalid @[Xbar.scala 336:24]
    _WIRE.e.valid <= UInt<1>("h00") @[Xbar.scala 337:27]
    _WIRE.e.bits.sink is invalid @[Xbar.scala 338:27]
    node _requestAIO_T = xor(in[0].a.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _requestAIO_T_1 = cvt(_requestAIO_T) @[Parameters.scala 137:49]
    node _requestAIO_T_2 = and(_requestAIO_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _requestAIO_T_3 = asSInt(_requestAIO_T_2) @[Parameters.scala 137:52]
    node _requestAIO_T_4 = eq(_requestAIO_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node requestAIO_0_0 = or(UInt<1>("h01"), _requestAIO_T_4) @[Xbar.scala 379:107]
    node _requestCIO_T = xor(in[0].c.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _requestCIO_T_1 = cvt(_requestCIO_T) @[Parameters.scala 137:49]
    node _requestCIO_T_2 = and(_requestCIO_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _requestCIO_T_3 = asSInt(_requestCIO_T_2) @[Parameters.scala 137:52]
    node _requestCIO_T_4 = eq(_requestCIO_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node requestCIO_0_0 = or(UInt<1>("h01"), _requestCIO_T_4) @[Xbar.scala 380:107]
    node _requestBOI_uncommonBits_T = or(out_1[0].b.bits.source, UInt<3>("h00")) @[Parameters.scala 52:29]
    node requestBOI_uncommonBits = bits(_requestBOI_uncommonBits_T, 2, 0) @[Parameters.scala 52:64]
    node _requestBOI_T = shr(out_1[0].b.bits.source, 3) @[Parameters.scala 54:10]
    node _requestBOI_T_1 = eq(_requestBOI_T, UInt<1>("h00")) @[Parameters.scala 54:32]
    node _requestBOI_T_2 = leq(UInt<1>("h00"), requestBOI_uncommonBits) @[Parameters.scala 56:34]
    node _requestBOI_T_3 = and(_requestBOI_T_1, _requestBOI_T_2) @[Parameters.scala 54:69]
    node _requestBOI_T_4 = leq(requestBOI_uncommonBits, UInt<3>("h07")) @[Parameters.scala 57:20]
    node requestBOI_0_0 = and(_requestBOI_T_3, _requestBOI_T_4) @[Parameters.scala 56:50]
    node _requestDOI_uncommonBits_T = or(out_1[0].d.bits.source, UInt<3>("h00")) @[Parameters.scala 52:29]
    node requestDOI_uncommonBits = bits(_requestDOI_uncommonBits_T, 2, 0) @[Parameters.scala 52:64]
    node _requestDOI_T = shr(out_1[0].d.bits.source, 3) @[Parameters.scala 54:10]
    node _requestDOI_T_1 = eq(_requestDOI_T, UInt<1>("h00")) @[Parameters.scala 54:32]
    node _requestDOI_T_2 = leq(UInt<1>("h00"), requestDOI_uncommonBits) @[Parameters.scala 56:34]
    node _requestDOI_T_3 = and(_requestDOI_T_1, _requestDOI_T_2) @[Parameters.scala 54:69]
    node _requestDOI_T_4 = leq(requestDOI_uncommonBits, UInt<3>("h07")) @[Parameters.scala 57:20]
    node requestDOI_0_0 = and(_requestDOI_T_3, _requestDOI_T_4) @[Parameters.scala 56:50]
    node _beatsAI_decode_T = asUInt(asSInt(UInt<6>("h03f"))) @[package.scala 234:70]
    node _beatsAI_decode_T_1 = dshl(_beatsAI_decode_T, in[0].a.bits.size) @[package.scala 234:77]
    node _beatsAI_decode_T_2 = bits(_beatsAI_decode_T_1, 5, 0) @[package.scala 234:82]
    node _beatsAI_decode_T_3 = not(_beatsAI_decode_T_2) @[package.scala 234:46]
    node beatsAI_decode = shr(_beatsAI_decode_T_3, 2) @[Edges.scala 219:59]
    node _beatsAI_opdata_T = bits(in[0].a.bits.opcode, 2, 2) @[Edges.scala 91:37]
    node beatsAI_opdata = eq(_beatsAI_opdata_T, UInt<1>("h00")) @[Edges.scala 91:28]
    node beatsAI_0 = mux(beatsAI_opdata, beatsAI_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    node _beatsBO_decode_T = asUInt(asSInt(UInt<6>("h03f"))) @[package.scala 234:70]
    node _beatsBO_decode_T_1 = dshl(_beatsBO_decode_T, out_1[0].b.bits.size) @[package.scala 234:77]
    node _beatsBO_decode_T_2 = bits(_beatsBO_decode_T_1, 5, 0) @[package.scala 234:82]
    node _beatsBO_decode_T_3 = not(_beatsBO_decode_T_2) @[package.scala 234:46]
    node beatsBO_decode = shr(_beatsBO_decode_T_3, 2) @[Edges.scala 219:59]
    node _beatsBO_opdata_T = bits(out_1[0].b.bits.opcode, 2, 2) @[Edges.scala 96:37]
    node beatsBO_opdata = eq(_beatsBO_opdata_T, UInt<1>("h00")) @[Edges.scala 96:28]
    node beatsBO_0 = mux(UInt<1>("h00"), beatsBO_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    node _beatsCI_decode_T = asUInt(asSInt(UInt<6>("h03f"))) @[package.scala 234:70]
    node _beatsCI_decode_T_1 = dshl(_beatsCI_decode_T, in[0].c.bits.size) @[package.scala 234:77]
    node _beatsCI_decode_T_2 = bits(_beatsCI_decode_T_1, 5, 0) @[package.scala 234:82]
    node _beatsCI_decode_T_3 = not(_beatsCI_decode_T_2) @[package.scala 234:46]
    node beatsCI_decode = shr(_beatsCI_decode_T_3, 2) @[Edges.scala 219:59]
    node beatsCI_opdata = bits(in[0].c.bits.opcode, 0, 0) @[Edges.scala 101:36]
    node beatsCI_0 = mux(UInt<1>("h00"), beatsCI_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    node _beatsDO_decode_T = asUInt(asSInt(UInt<6>("h03f"))) @[package.scala 234:70]
    node _beatsDO_decode_T_1 = dshl(_beatsDO_decode_T, out_1[0].d.bits.size) @[package.scala 234:77]
    node _beatsDO_decode_T_2 = bits(_beatsDO_decode_T_1, 5, 0) @[package.scala 234:82]
    node _beatsDO_decode_T_3 = not(_beatsDO_decode_T_2) @[package.scala 234:46]
    node beatsDO_decode = shr(_beatsDO_decode_T_3, 2) @[Edges.scala 219:59]
    node beatsDO_opdata = bits(out_1[0].d.bits.opcode, 0, 0) @[Edges.scala 105:36]
    node beatsDO_0 = mux(beatsDO_opdata, beatsDO_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    wire portsAOI_filtered : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>}[1] @[Xbar.scala 424:24]
    portsAOI_filtered[0].bits.corrupt <= in[0].a.bits.corrupt @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.data <= in[0].a.bits.data @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.mask <= in[0].a.bits.mask @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.address <= in[0].a.bits.address @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.source <= in[0].a.bits.source @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.size <= in[0].a.bits.size @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.param <= in[0].a.bits.param @[Xbar.scala 426:24]
    portsAOI_filtered[0].bits.opcode <= in[0].a.bits.opcode @[Xbar.scala 426:24]
    portsAOI_filtered[0].lateCancel <= in[0].a.lateCancel @[Xbar.scala 427:30]
    node _portsAOI_filtered_0_earlyValid_T = or(requestAIO_0_0, UInt<1>("h01")) @[Xbar.scala 428:64]
    node _portsAOI_filtered_0_earlyValid_T_1 = and(in[0].a.earlyValid, _portsAOI_filtered_0_earlyValid_T) @[Xbar.scala 428:50]
    portsAOI_filtered[0].earlyValid <= _portsAOI_filtered_0_earlyValid_T_1 @[Xbar.scala 428:30]
    in[0].a.ready <= portsAOI_filtered[0].ready @[Xbar.scala 430:17]
    wire portsBIO_filtered : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}[1] @[Xbar.scala 176:24]
    portsBIO_filtered[0].bits.corrupt <= out_1[0].b.bits.corrupt @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.data <= out_1[0].b.bits.data @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.mask <= out_1[0].b.bits.mask @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.address <= out_1[0].b.bits.address @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.source <= out_1[0].b.bits.source @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.size <= out_1[0].b.bits.size @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.param <= out_1[0].b.bits.param @[Xbar.scala 178:24]
    portsBIO_filtered[0].bits.opcode <= out_1[0].b.bits.opcode @[Xbar.scala 178:24]
    node _portsBIO_filtered_0_valid_T = or(requestBOI_0_0, UInt<1>("h01")) @[Xbar.scala 179:54]
    node _portsBIO_filtered_0_valid_T_1 = and(out_1[0].b.valid, _portsBIO_filtered_0_valid_T) @[Xbar.scala 179:40]
    portsBIO_filtered[0].valid <= _portsBIO_filtered_0_valid_T_1 @[Xbar.scala 179:25]
    out_1[0].b.ready <= portsBIO_filtered[0].ready @[Xbar.scala 181:17]
    wire portsCOI_filtered : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}[1] @[Xbar.scala 176:24]
    portsCOI_filtered[0].bits.corrupt <= in[0].c.bits.corrupt @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.data <= in[0].c.bits.data @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.address <= in[0].c.bits.address @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.source <= in[0].c.bits.source @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.size <= in[0].c.bits.size @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.param <= in[0].c.bits.param @[Xbar.scala 178:24]
    portsCOI_filtered[0].bits.opcode <= in[0].c.bits.opcode @[Xbar.scala 178:24]
    node _portsCOI_filtered_0_valid_T = or(requestCIO_0_0, UInt<1>("h01")) @[Xbar.scala 179:54]
    node _portsCOI_filtered_0_valid_T_1 = and(in[0].c.valid, _portsCOI_filtered_0_valid_T) @[Xbar.scala 179:40]
    portsCOI_filtered[0].valid <= _portsCOI_filtered_0_valid_T_1 @[Xbar.scala 179:25]
    in[0].c.ready <= portsCOI_filtered[0].ready @[Xbar.scala 181:17]
    wire portsDIO_filtered : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}[1] @[Xbar.scala 176:24]
    portsDIO_filtered[0].bits.corrupt <= out_1[0].d.bits.corrupt @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.data <= out_1[0].d.bits.data @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.denied <= out_1[0].d.bits.denied @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.sink <= out_1[0].d.bits.sink @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.source <= out_1[0].d.bits.source @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.size <= out_1[0].d.bits.size @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.param <= out_1[0].d.bits.param @[Xbar.scala 178:24]
    portsDIO_filtered[0].bits.opcode <= out_1[0].d.bits.opcode @[Xbar.scala 178:24]
    node _portsDIO_filtered_0_valid_T = or(requestDOI_0_0, UInt<1>("h01")) @[Xbar.scala 179:54]
    node _portsDIO_filtered_0_valid_T_1 = and(out_1[0].d.valid, _portsDIO_filtered_0_valid_T) @[Xbar.scala 179:40]
    portsDIO_filtered[0].valid <= _portsDIO_filtered_0_valid_T_1 @[Xbar.scala 179:25]
    out_1[0].d.ready <= portsDIO_filtered[0].ready @[Xbar.scala 181:17]
    wire portsEOI_filtered : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}}[1] @[Xbar.scala 176:24]
    portsEOI_filtered[0].bits.sink <= in[0].e.bits.sink @[Xbar.scala 178:24]
    node _portsEOI_filtered_0_valid_T = or(UInt<1>("h00"), UInt<1>("h01")) @[Xbar.scala 179:54]
    node _portsEOI_filtered_0_valid_T_1 = and(in[0].e.valid, _portsEOI_filtered_0_valid_T) @[Xbar.scala 179:40]
    portsEOI_filtered[0].valid <= _portsEOI_filtered_0_valid_T_1 @[Xbar.scala 179:25]
    in[0].e.ready <= portsEOI_filtered[0].ready @[Xbar.scala 181:17]
    out_1[0].a.bits.corrupt <= portsAOI_filtered[0].bits.corrupt @[BundleMap.scala 247:19]
    out_1[0].a.bits.data <= portsAOI_filtered[0].bits.data @[BundleMap.scala 247:19]
    out_1[0].a.bits.mask <= portsAOI_filtered[0].bits.mask @[BundleMap.scala 247:19]
    out_1[0].a.bits.address <= portsAOI_filtered[0].bits.address @[BundleMap.scala 247:19]
    out_1[0].a.bits.source <= portsAOI_filtered[0].bits.source @[BundleMap.scala 247:19]
    out_1[0].a.bits.size <= portsAOI_filtered[0].bits.size @[BundleMap.scala 247:19]
    out_1[0].a.bits.param <= portsAOI_filtered[0].bits.param @[BundleMap.scala 247:19]
    out_1[0].a.bits.opcode <= portsAOI_filtered[0].bits.opcode @[BundleMap.scala 247:19]
    out_1[0].a.lateCancel <= portsAOI_filtered[0].lateCancel @[BundleMap.scala 247:19]
    out_1[0].a.earlyValid <= portsAOI_filtered[0].earlyValid @[BundleMap.scala 247:19]
    portsAOI_filtered[0].ready <= out_1[0].a.ready @[BundleMap.scala 247:19]
    wire sink_ACancel : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    sink_ACancel.earlyValid <= UInt<1>("h00") @[Arbiter.scala 76:23]
    sink_ACancel.lateCancel is invalid @[Arbiter.scala 77:23]
    sink_ACancel.bits.corrupt is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.data is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.address is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.source is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.size is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.param is invalid @[Arbiter.scala 78:23]
    sink_ACancel.bits.opcode is invalid @[Arbiter.scala 78:23]
    wire out_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T = eq(sink_ACancel.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_1 = and(sink_ACancel.earlyValid, _out_valid_T) @[ReadyValidCancel.scala 21:38]
    out_2.valid <= _out_valid_T_1 @[ReadyValidCancel.scala 56:15]
    out_2.bits.corrupt <= sink_ACancel.bits.corrupt @[ReadyValidCancel.scala 57:15]
    out_2.bits.data <= sink_ACancel.bits.data @[ReadyValidCancel.scala 57:15]
    out_2.bits.address <= sink_ACancel.bits.address @[ReadyValidCancel.scala 57:15]
    out_2.bits.source <= sink_ACancel.bits.source @[ReadyValidCancel.scala 57:15]
    out_2.bits.size <= sink_ACancel.bits.size @[ReadyValidCancel.scala 57:15]
    out_2.bits.param <= sink_ACancel.bits.param @[ReadyValidCancel.scala 57:15]
    out_2.bits.opcode <= sink_ACancel.bits.opcode @[ReadyValidCancel.scala 57:15]
    sink_ACancel.ready <= out_2.ready @[ReadyValidCancel.scala 58:11]
    out_1[0].c.bits.corrupt <= out_2.bits.corrupt @[BundleMap.scala 247:19]
    out_1[0].c.bits.data <= out_2.bits.data @[BundleMap.scala 247:19]
    out_1[0].c.bits.address <= out_2.bits.address @[BundleMap.scala 247:19]
    out_1[0].c.bits.source <= out_2.bits.source @[BundleMap.scala 247:19]
    out_1[0].c.bits.size <= out_2.bits.size @[BundleMap.scala 247:19]
    out_1[0].c.bits.param <= out_2.bits.param @[BundleMap.scala 247:19]
    out_1[0].c.bits.opcode <= out_2.bits.opcode @[BundleMap.scala 247:19]
    out_1[0].c.valid <= out_2.valid @[BundleMap.scala 247:19]
    out_2.ready <= out_1[0].c.ready @[BundleMap.scala 247:19]
    wire sink_ACancel_1 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {sink : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    sink_ACancel_1.earlyValid <= UInt<1>("h00") @[Arbiter.scala 76:23]
    sink_ACancel_1.lateCancel is invalid @[Arbiter.scala 77:23]
    sink_ACancel_1.bits.sink is invalid @[Arbiter.scala 78:23]
    wire out_3 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T_2 = eq(sink_ACancel_1.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_3 = and(sink_ACancel_1.earlyValid, _out_valid_T_2) @[ReadyValidCancel.scala 21:38]
    out_3.valid <= _out_valid_T_3 @[ReadyValidCancel.scala 56:15]
    out_3.bits.sink <= sink_ACancel_1.bits.sink @[ReadyValidCancel.scala 57:15]
    sink_ACancel_1.ready <= out_3.ready @[ReadyValidCancel.scala 58:11]
    out_1[0].e.bits.sink <= out_3.bits.sink @[BundleMap.scala 247:19]
    out_1[0].e.valid <= out_3.valid @[BundleMap.scala 247:19]
    out_3.ready <= out_1[0].e.ready @[BundleMap.scala 247:19]
    portsCOI_filtered[0].ready <= UInt<1>("h00") @[Xbar.scala 404:73]
    portsEOI_filtered[0].ready <= UInt<1>("h00") @[Xbar.scala 405:73]
    wire sink_ACancel_2 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    sink_ACancel_2.earlyValid <= UInt<1>("h00") @[Arbiter.scala 76:23]
    sink_ACancel_2.lateCancel is invalid @[Arbiter.scala 77:23]
    sink_ACancel_2.bits.corrupt is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.data is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.mask is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.address is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.source is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.size is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.param is invalid @[Arbiter.scala 78:23]
    sink_ACancel_2.bits.opcode is invalid @[Arbiter.scala 78:23]
    wire out_4 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T_4 = eq(sink_ACancel_2.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_5 = and(sink_ACancel_2.earlyValid, _out_valid_T_4) @[ReadyValidCancel.scala 21:38]
    out_4.valid <= _out_valid_T_5 @[ReadyValidCancel.scala 56:15]
    out_4.bits.corrupt <= sink_ACancel_2.bits.corrupt @[ReadyValidCancel.scala 57:15]
    out_4.bits.data <= sink_ACancel_2.bits.data @[ReadyValidCancel.scala 57:15]
    out_4.bits.mask <= sink_ACancel_2.bits.mask @[ReadyValidCancel.scala 57:15]
    out_4.bits.address <= sink_ACancel_2.bits.address @[ReadyValidCancel.scala 57:15]
    out_4.bits.source <= sink_ACancel_2.bits.source @[ReadyValidCancel.scala 57:15]
    out_4.bits.size <= sink_ACancel_2.bits.size @[ReadyValidCancel.scala 57:15]
    out_4.bits.param <= sink_ACancel_2.bits.param @[ReadyValidCancel.scala 57:15]
    out_4.bits.opcode <= sink_ACancel_2.bits.opcode @[ReadyValidCancel.scala 57:15]
    sink_ACancel_2.ready <= out_4.ready @[ReadyValidCancel.scala 58:11]
    in[0].b.bits.corrupt <= out_4.bits.corrupt @[BundleMap.scala 247:19]
    in[0].b.bits.data <= out_4.bits.data @[BundleMap.scala 247:19]
    in[0].b.bits.mask <= out_4.bits.mask @[BundleMap.scala 247:19]
    in[0].b.bits.address <= out_4.bits.address @[BundleMap.scala 247:19]
    in[0].b.bits.source <= out_4.bits.source @[BundleMap.scala 247:19]
    in[0].b.bits.size <= out_4.bits.size @[BundleMap.scala 247:19]
    in[0].b.bits.param <= out_4.bits.param @[BundleMap.scala 247:19]
    in[0].b.bits.opcode <= out_4.bits.opcode @[BundleMap.scala 247:19]
    in[0].b.valid <= out_4.valid @[BundleMap.scala 247:19]
    out_4.ready <= in[0].b.ready @[BundleMap.scala 247:19]
    wire sink_ACancel_3 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[Arbiter.scala 66:28]
    wire out_5 : {earlyValid : UInt<1>, lateCancel : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}, flip ready : UInt<1>} @[ReadyValidCancel.scala 70:19]
    out_5.earlyValid <= portsDIO_filtered[0].valid @[ReadyValidCancel.scala 71:20]
    out_5.lateCancel <= UInt<1>("h00") @[ReadyValidCancel.scala 72:20]
    out_5.bits.corrupt <= portsDIO_filtered[0].bits.corrupt @[ReadyValidCancel.scala 73:14]
    out_5.bits.data <= portsDIO_filtered[0].bits.data @[ReadyValidCancel.scala 73:14]
    out_5.bits.denied <= portsDIO_filtered[0].bits.denied @[ReadyValidCancel.scala 73:14]
    out_5.bits.sink <= portsDIO_filtered[0].bits.sink @[ReadyValidCancel.scala 73:14]
    out_5.bits.source <= portsDIO_filtered[0].bits.source @[ReadyValidCancel.scala 73:14]
    out_5.bits.size <= portsDIO_filtered[0].bits.size @[ReadyValidCancel.scala 73:14]
    out_5.bits.param <= portsDIO_filtered[0].bits.param @[ReadyValidCancel.scala 73:14]
    out_5.bits.opcode <= portsDIO_filtered[0].bits.opcode @[ReadyValidCancel.scala 73:14]
    portsDIO_filtered[0].ready <= out_5.ready @[ReadyValidCancel.scala 74:14]
    sink_ACancel_3.bits.corrupt <= out_5.bits.corrupt @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.data <= out_5.bits.data @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.denied <= out_5.bits.denied @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.sink <= out_5.bits.sink @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.source <= out_5.bits.source @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.size <= out_5.bits.size @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.param <= out_5.bits.param @[BundleMap.scala 247:19]
    sink_ACancel_3.bits.opcode <= out_5.bits.opcode @[BundleMap.scala 247:19]
    sink_ACancel_3.lateCancel <= out_5.lateCancel @[BundleMap.scala 247:19]
    sink_ACancel_3.earlyValid <= out_5.earlyValid @[BundleMap.scala 247:19]
    out_5.ready <= sink_ACancel_3.ready @[BundleMap.scala 247:19]
    wire out_6 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _out_valid_T_6 = eq(sink_ACancel_3.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _out_valid_T_7 = and(sink_ACancel_3.earlyValid, _out_valid_T_6) @[ReadyValidCancel.scala 21:38]
    out_6.valid <= _out_valid_T_7 @[ReadyValidCancel.scala 56:15]
    out_6.bits.corrupt <= sink_ACancel_3.bits.corrupt @[ReadyValidCancel.scala 57:15]
    out_6.bits.data <= sink_ACancel_3.bits.data @[ReadyValidCancel.scala 57:15]
    out_6.bits.denied <= sink_ACancel_3.bits.denied @[ReadyValidCancel.scala 57:15]
    out_6.bits.sink <= sink_ACancel_3.bits.sink @[ReadyValidCancel.scala 57:15]
    out_6.bits.source <= sink_ACancel_3.bits.source @[ReadyValidCancel.scala 57:15]
    out_6.bits.size <= sink_ACancel_3.bits.size @[ReadyValidCancel.scala 57:15]
    out_6.bits.param <= sink_ACancel_3.bits.param @[ReadyValidCancel.scala 57:15]
    out_6.bits.opcode <= sink_ACancel_3.bits.opcode @[ReadyValidCancel.scala 57:15]
    sink_ACancel_3.ready <= out_6.ready @[ReadyValidCancel.scala 58:11]
    in[0].d.bits.corrupt <= out_6.bits.corrupt @[BundleMap.scala 247:19]
    in[0].d.bits.data <= out_6.bits.data @[BundleMap.scala 247:19]
    in[0].d.bits.denied <= out_6.bits.denied @[BundleMap.scala 247:19]
    in[0].d.bits.sink <= out_6.bits.sink @[BundleMap.scala 247:19]
    in[0].d.bits.source <= out_6.bits.source @[BundleMap.scala 247:19]
    in[0].d.bits.size <= out_6.bits.size @[BundleMap.scala 247:19]
    in[0].d.bits.param <= out_6.bits.param @[BundleMap.scala 247:19]
    in[0].d.bits.opcode <= out_6.bits.opcode @[BundleMap.scala 247:19]
    in[0].d.valid <= out_6.valid @[BundleMap.scala 247:19]
    out_6.ready <= in[0].d.ready @[BundleMap.scala 247:19]
    portsBIO_filtered[0].ready <= UInt<1>("h00") @[Xbar.scala 411:73]
    wire bundleOut_0_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Bundle_ACancel.scala 23:19]
    wire bundleOut_0_out_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[ReadyValidCancel.scala 55:19]
    node _bundleOut_0_out_valid_T = eq(_WIRE.a.lateCancel, UInt<1>("h00")) @[ReadyValidCancel.scala 21:41]
    node _bundleOut_0_out_valid_T_1 = and(_WIRE.a.earlyValid, _bundleOut_0_out_valid_T) @[ReadyValidCancel.scala 21:38]
    bundleOut_0_out_1.valid <= _bundleOut_0_out_valid_T_1 @[ReadyValidCancel.scala 56:15]
    bundleOut_0_out_1.bits.corrupt <= _WIRE.a.bits.corrupt @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.data <= _WIRE.a.bits.data @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.mask <= _WIRE.a.bits.mask @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.address <= _WIRE.a.bits.address @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.source <= _WIRE.a.bits.source @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.size <= _WIRE.a.bits.size @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.param <= _WIRE.a.bits.param @[ReadyValidCancel.scala 57:15]
    bundleOut_0_out_1.bits.opcode <= _WIRE.a.bits.opcode @[ReadyValidCancel.scala 57:15]
    _WIRE.a.ready <= bundleOut_0_out_1.ready @[ReadyValidCancel.scala 58:11]
    bundleOut_0_out.a.bits.corrupt <= bundleOut_0_out_1.bits.corrupt @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.data <= bundleOut_0_out_1.bits.data @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.mask <= bundleOut_0_out_1.bits.mask @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.address <= bundleOut_0_out_1.bits.address @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.source <= bundleOut_0_out_1.bits.source @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.size <= bundleOut_0_out_1.bits.size @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.param <= bundleOut_0_out_1.bits.param @[BundleMap.scala 247:19]
    bundleOut_0_out.a.bits.opcode <= bundleOut_0_out_1.bits.opcode @[BundleMap.scala 247:19]
    bundleOut_0_out.a.valid <= bundleOut_0_out_1.valid @[BundleMap.scala 247:19]
    bundleOut_0_out_1.ready <= bundleOut_0_out.a.ready @[BundleMap.scala 247:19]
    wire _bundleOut_0_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _bundleOut_0_WIRE is invalid @[Bundles.scala 256:54]
    _WIRE.b.bits.corrupt <= _bundleOut_0_WIRE.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE.b.bits.data <= _bundleOut_0_WIRE.bits.data @[BundleMap.scala 247:19]
    _WIRE.b.bits.mask <= _bundleOut_0_WIRE.bits.mask @[BundleMap.scala 247:19]
    _WIRE.b.bits.address <= _bundleOut_0_WIRE.bits.address @[BundleMap.scala 247:19]
    _WIRE.b.bits.source <= _bundleOut_0_WIRE.bits.source @[BundleMap.scala 247:19]
    _WIRE.b.bits.size <= _bundleOut_0_WIRE.bits.size @[BundleMap.scala 247:19]
    _WIRE.b.bits.param <= _bundleOut_0_WIRE.bits.param @[BundleMap.scala 247:19]
    _WIRE.b.bits.opcode <= _bundleOut_0_WIRE.bits.opcode @[BundleMap.scala 247:19]
    _WIRE.b.valid <= _bundleOut_0_WIRE.valid @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE.ready <= _WIRE.b.ready @[BundleMap.scala 247:19]
    wire _bundleOut_0_WIRE_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _bundleOut_0_WIRE_1 is invalid @[Bundles.scala 257:54]
    _bundleOut_0_WIRE_1.bits.corrupt <= _WIRE.c.bits.corrupt @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.data <= _WIRE.c.bits.data @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.address <= _WIRE.c.bits.address @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.source <= _WIRE.c.bits.source @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.size <= _WIRE.c.bits.size @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.param <= _WIRE.c.bits.param @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.bits.opcode <= _WIRE.c.bits.opcode @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_1.valid <= _WIRE.c.valid @[BundleMap.scala 247:19]
    _WIRE.c.ready <= _bundleOut_0_WIRE_1.ready @[BundleMap.scala 247:19]
    _WIRE.d.bits.corrupt <= bundleOut_0_out.d.bits.corrupt @[BundleMap.scala 247:19]
    _WIRE.d.bits.data <= bundleOut_0_out.d.bits.data @[BundleMap.scala 247:19]
    _WIRE.d.bits.denied <= bundleOut_0_out.d.bits.denied @[BundleMap.scala 247:19]
    _WIRE.d.bits.sink <= bundleOut_0_out.d.bits.sink @[BundleMap.scala 247:19]
    _WIRE.d.bits.source <= bundleOut_0_out.d.bits.source @[BundleMap.scala 247:19]
    _WIRE.d.bits.size <= bundleOut_0_out.d.bits.size @[BundleMap.scala 247:19]
    _WIRE.d.bits.param <= bundleOut_0_out.d.bits.param @[BundleMap.scala 247:19]
    _WIRE.d.bits.opcode <= bundleOut_0_out.d.bits.opcode @[BundleMap.scala 247:19]
    _WIRE.d.valid <= bundleOut_0_out.d.valid @[BundleMap.scala 247:19]
    bundleOut_0_out.d.ready <= _WIRE.d.ready @[BundleMap.scala 247:19]
    wire _bundleOut_0_WIRE_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _bundleOut_0_WIRE_2 is invalid @[Bundles.scala 259:54]
    _bundleOut_0_WIRE_2.bits.sink <= _WIRE.e.bits.sink @[BundleMap.scala 247:19]
    _bundleOut_0_WIRE_2.valid <= _WIRE.e.valid @[BundleMap.scala 247:19]
    _WIRE.e.ready <= _bundleOut_0_WIRE_2.ready @[BundleMap.scala 247:19]
    bundleOut_0 <- bundleOut_0_out @[Xbar.scala 136:12]
    
  module IntXbar_1 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip int_in_2 : UInt<1>[1], flip int_in_1 : UInt<1>[2], flip int_in_0 : UInt<1>[1], int_out : UInt<1>[4]}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire bundleIn_0 : UInt<1>[1] @[Nodes.scala 1210:84]
    bundleIn_0 is invalid @[Nodes.scala 1210:84]
    wire bundleIn_1 : UInt<1>[2] @[Nodes.scala 1210:84]
    bundleIn_1 is invalid @[Nodes.scala 1210:84]
    wire bundleIn_2 : UInt<1>[1] @[Nodes.scala 1210:84]
    bundleIn_2 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0 : UInt<1>[4] @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    auto.int_out <- bundleOut_0 @[LazyModule.scala 311:12]
    bundleIn_0 <- auto.int_in_0 @[LazyModule.scala 309:16]
    bundleIn_1 <- auto.int_in_1 @[LazyModule.scala 309:16]
    bundleIn_2 <- auto.int_in_2 @[LazyModule.scala 309:16]
    bundleOut_0[0] <= bundleIn_0[0] @[Xbar.scala 24:44]
    bundleOut_0[1] <= bundleIn_1[0] @[Xbar.scala 24:44]
    bundleOut_0[2] <= bundleIn_1[1] @[Xbar.scala 24:44]
    bundleOut_0[3] <= bundleIn_2[0] @[Xbar.scala 24:44]
    
  module BundleBridgeNexus_4 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in : UInt<1>, out_1 : UInt<1>, out_0 : UInt<1>}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire inputs_0 : UInt<1> @[Nodes.scala 1210:84]
    inputs_0 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0 : UInt<1> @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_1 : UInt<1> @[Nodes.scala 1207:84]
    bundleOut_1 is invalid @[Nodes.scala 1207:84]
    auto.out_0 <= bundleOut_0 @[LazyModule.scala 311:12]
    auto.out_1 <= bundleOut_1 @[LazyModule.scala 311:12]
    inputs_0 <= auto.in @[LazyModule.scala 309:16]
    bundleOut_0 <= inputs_0 @[BundleBridge.scala 151:67]
    bundleOut_1 <= inputs_0 @[BundleBridge.scala 151:67]
    
  module BundleBridgeNexus_5 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in : UInt<32>, out_1 : UInt<32>, out_0 : UInt<32>}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire inputs_0 : UInt<32> @[Nodes.scala 1210:84]
    inputs_0 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0 : UInt<32> @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_1 : UInt<32> @[Nodes.scala 1207:84]
    bundleOut_1 is invalid @[Nodes.scala 1207:84]
    auto.out_0 <= bundleOut_0 @[LazyModule.scala 311:12]
    auto.out_1 <= bundleOut_1 @[LazyModule.scala 311:12]
    inputs_0 <= auto.in @[LazyModule.scala 309:16]
    bundleOut_0 <= inputs_0 @[BundleBridge.scala 151:67]
    bundleOut_1 <= inputs_0 @[BundleBridge.scala 151:67]
    
  module BundleBridgeNexus_6 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in : {rnmi : UInt<1>, rnmi_interrupt_vector : UInt<32>, rnmi_exception_vector : UInt<32>, unmi : UInt<1>, unmi_interrupt_vector : UInt<32>, unmi_exception_vector : UInt<32>}, out : {rnmi : UInt<1>, rnmi_interrupt_vector : UInt<32>, rnmi_exception_vector : UInt<32>, unmi : UInt<1>, unmi_interrupt_vector : UInt<32>, unmi_exception_vector : UInt<32>}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire inputs_0 : {rnmi : UInt<1>, rnmi_interrupt_vector : UInt<32>, rnmi_exception_vector : UInt<32>, unmi : UInt<1>, unmi_interrupt_vector : UInt<32>, unmi_exception_vector : UInt<32>} @[Nodes.scala 1210:84]
    inputs_0 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0 : {rnmi : UInt<1>, rnmi_interrupt_vector : UInt<32>, rnmi_exception_vector : UInt<32>, unmi : UInt<1>, unmi_interrupt_vector : UInt<32>, unmi_exception_vector : UInt<32>} @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    auto.out <- bundleOut_0 @[LazyModule.scala 311:12]
    inputs_0 <- auto.in @[LazyModule.scala 309:16]
    bundleOut_0.unmi_exception_vector <= inputs_0.unmi_exception_vector @[BundleBridge.scala 151:67]
    bundleOut_0.unmi_interrupt_vector <= inputs_0.unmi_interrupt_vector @[BundleBridge.scala 151:67]
    bundleOut_0.unmi <= inputs_0.unmi @[BundleBridge.scala 151:67]
    bundleOut_0.rnmi_exception_vector <= inputs_0.rnmi_exception_vector @[BundleBridge.scala 151:67]
    bundleOut_0.rnmi_interrupt_vector <= inputs_0.rnmi_interrupt_vector @[BundleBridge.scala 151:67]
    bundleOut_0.rnmi <= inputs_0.rnmi @[BundleBridge.scala 151:67]
    
  module BundleBridgeNexus_7 : 
    input clock : Clock
    input reset : Reset
    output auto : {out : UInt<1>}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire bundleOut_0 : UInt<1> @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    auto.out <= bundleOut_0 @[LazyModule.scala 311:12]
    bundleOut_0 <= UInt<1>("h00") @[BundleBridge.scala 151:67]
    
  module BundleBridgeNexus_8 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1], out_1 : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1], out_0 : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1]}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire inputs_0 : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1] @[Nodes.scala 1210:84]
    inputs_0 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0 : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1] @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    wire bundleOut_1 : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1] @[Nodes.scala 1207:84]
    bundleOut_1 is invalid @[Nodes.scala 1207:84]
    auto.out_0 <- bundleOut_0 @[LazyModule.scala 311:12]
    auto.out_1 <- bundleOut_1 @[LazyModule.scala 311:12]
    inputs_0 <- auto.in @[LazyModule.scala 309:16]
    bundleOut_0[0].tval <= inputs_0[0].tval @[BundleBridge.scala 151:67]
    bundleOut_0[0].cause <= inputs_0[0].cause @[BundleBridge.scala 151:67]
    bundleOut_0[0].interrupt <= inputs_0[0].interrupt @[BundleBridge.scala 151:67]
    bundleOut_0[0].exception <= inputs_0[0].exception @[BundleBridge.scala 151:67]
    bundleOut_0[0].priv <= inputs_0[0].priv @[BundleBridge.scala 151:67]
    bundleOut_0[0].insn <= inputs_0[0].insn @[BundleBridge.scala 151:67]
    bundleOut_0[0].iaddr <= inputs_0[0].iaddr @[BundleBridge.scala 151:67]
    bundleOut_0[0].valid <= inputs_0[0].valid @[BundleBridge.scala 151:67]
    bundleOut_1[0].tval <= inputs_0[0].tval @[BundleBridge.scala 151:67]
    bundleOut_1[0].cause <= inputs_0[0].cause @[BundleBridge.scala 151:67]
    bundleOut_1[0].interrupt <= inputs_0[0].interrupt @[BundleBridge.scala 151:67]
    bundleOut_1[0].exception <= inputs_0[0].exception @[BundleBridge.scala 151:67]
    bundleOut_1[0].priv <= inputs_0[0].priv @[BundleBridge.scala 151:67]
    bundleOut_1[0].insn <= inputs_0[0].insn @[BundleBridge.scala 151:67]
    bundleOut_1[0].iaddr <= inputs_0[0].iaddr @[BundleBridge.scala 151:67]
    bundleOut_1[0].valid <= inputs_0[0].valid @[BundleBridge.scala 151:67]
    
  module BundleBridgeNexus_9 : 
    input clock : Clock
    input reset : Reset
    output auto : {out : {enable : UInt<1>, stall : UInt<1>}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire bundleOut_sourceOpt : {enable : UInt<1>, stall : UInt<1>} @[BaseTile.scala 271:19]
    bundleOut_sourceOpt is invalid @[BaseTile.scala 271:19]
    bundleOut_sourceOpt.stall <= UInt<1>("h00") @[BaseTile.scala 272:16]
    bundleOut_sourceOpt.enable <= UInt<1>("h00") @[BaseTile.scala 273:16]
    wire bundleOut_0 : {enable : UInt<1>, stall : UInt<1>} @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    auto.out <- bundleOut_0 @[LazyModule.scala 311:12]
    wire defaultWireOpt : {enable : UInt<1>, stall : UInt<1>} @[BaseTile.scala 271:19]
    defaultWireOpt is invalid @[BaseTile.scala 271:19]
    defaultWireOpt.stall <= UInt<1>("h00") @[BaseTile.scala 272:16]
    defaultWireOpt.enable <= UInt<1>("h00") @[BaseTile.scala 273:16]
    bundleOut_0.stall <= defaultWireOpt.stall @[BundleBridge.scala 151:67]
    bundleOut_0.enable <= defaultWireOpt.enable @[BundleBridge.scala 151:67]
    
  module BundleBridgeNexus_10 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in : {valid : UInt<1>[1], rvalid : UInt<1>[1], wvalid : UInt<1>[1], ivalid : UInt<1>[1], action : UInt<3>}[1]}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire inputs_0 : {valid : UInt<1>[1], rvalid : UInt<1>[1], wvalid : UInt<1>[1], ivalid : UInt<1>[1], action : UInt<3>}[1] @[Nodes.scala 1210:84]
    inputs_0 is invalid @[Nodes.scala 1210:84]
    inputs_0 <- auto.in @[LazyModule.scala 309:16]
    
  module DCache : 
    input gated_clock : Clock
    input reset : Reset
    output auto : {flip mmio_address_prefix_sink_in : UInt<1>, flip hart_id_sink_in : UInt<1>, out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}}
    output io : {flip cpu : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}}, s1_kill : UInt<1>, s1_data : {data : UInt<32>, mask : UInt<4>}, flip s2_nack : UInt<1>, flip s2_nack_cause_raw : UInt<1>, s2_kill : UInt<1>, flip s2_uncached : UInt<1>, flip s2_paddr : UInt<32>, flip resp : {valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, data : UInt<32>, mask : UInt<4>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<32>, data_raw : UInt<32>, store_data : UInt<32>}}, flip replay_next : UInt<1>, flip s2_xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>}}, flip ordered : UInt<1>, flip perf : {acquire : UInt<1>, release : UInt<1>, grant : UInt<1>, tlbMiss : UInt<1>, blocked : UInt<1>, canAcceptStoreThenLoad : UInt<1>, canAcceptStoreThenRMW : UInt<1>, canAcceptLoadThenLoad : UInt<1>, storeBufferEmptyAfterLoad : UInt<1>, storeBufferEmptyAfterStore : UInt<1>}, keep_clock_enabled : UInt<1>, flip clock_enabled : UInt<1>}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {valid : UInt<1>, bits : {addr : UInt<20>}}}, flip resp : {valid : UInt<1>, bits : {ae : UInt<1>, pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<1>, fragmented_superpage : UInt<1>, homogeneous : UInt<1>}}, flip ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip customCSRs : {csrs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}}, errors : {bus : {valid : UInt<1>, bits : UInt<32>}}}
    output tlb_port : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {vaddr : UInt<32>, passthrough : UInt<1>, size : UInt<2>, cmd : UInt<5>}}, s1_resp : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, must_alloc : UInt<1>, prefetchable : UInt<1>}, flip s2_kill : UInt<1>}
    
    gated_clock is invalid
    reset is invalid
    auto is invalid
    io is invalid
    tlb_port is invalid
    wire tl_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1207:84]
    tl_out is invalid @[Nodes.scala 1207:84]
    wire io_hartid : UInt<1> @[Nodes.scala 1210:84]
    io_hartid is invalid @[Nodes.scala 1210:84]
    wire io_mmio_address_prefix : UInt<1> @[Nodes.scala 1210:84]
    io_mmio_address_prefix is invalid @[Nodes.scala 1210:84]
    auto.out <- tl_out @[LazyModule.scala 311:12]
    io_hartid <= auto.hart_id_sink_in @[LazyModule.scala 309:16]
    io_mmio_address_prefix <= auto.mmio_address_prefix_sink_in @[LazyModule.scala 309:16]
    reg clock_en_reg : UInt<1>, gated_clock @[DCache.scala 109:25]
    io.cpu.clock_enabled <= clock_en_reg @[DCache.scala 110:24]
    inst tlb of TLB @[DCache.scala 117:19]
    tlb.io is invalid
    tlb.clock <= gated_clock
    tlb.reset <= reset
    inst pma_checker of DCacheModuleImpl_Anon @[DCache.scala 118:27]
    pma_checker.io is invalid
    pma_checker.clock <= gated_clock
    pma_checker.reset <= reset
    wire replace : UInt<1> @[Replacement.scala 37:29]
    replace <= UInt<1>("h00") @[Replacement.scala 38:11]
    inst lfsr_prng of MaxPeriodFibonacciLFSR @[PRNG.scala 82:22]
    lfsr_prng.clock <= gated_clock
    lfsr_prng.reset <= reset
    lfsr_prng.io.seed.valid <= UInt<1>("h00") @[PRNG.scala 83:24]
    lfsr_prng.io.seed.bits[0] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[1] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[2] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[3] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[4] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[5] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[6] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[7] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[8] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[9] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[10] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[11] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[12] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[13] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[14] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.seed.bits[15] is invalid @[PRNG.scala 84:23]
    lfsr_prng.io.increment <= replace @[PRNG.scala 85:23]
    node lfsr_lo_lo_lo = cat(lfsr_prng.io.out[1], lfsr_prng.io.out[0]) @[PRNG.scala 86:17]
    node lfsr_lo_lo_hi = cat(lfsr_prng.io.out[3], lfsr_prng.io.out[2]) @[PRNG.scala 86:17]
    node lfsr_lo_lo = cat(lfsr_lo_lo_hi, lfsr_lo_lo_lo) @[PRNG.scala 86:17]
    node lfsr_lo_hi_lo = cat(lfsr_prng.io.out[5], lfsr_prng.io.out[4]) @[PRNG.scala 86:17]
    node lfsr_lo_hi_hi = cat(lfsr_prng.io.out[7], lfsr_prng.io.out[6]) @[PRNG.scala 86:17]
    node lfsr_lo_hi = cat(lfsr_lo_hi_hi, lfsr_lo_hi_lo) @[PRNG.scala 86:17]
    node lfsr_lo = cat(lfsr_lo_hi, lfsr_lo_lo) @[PRNG.scala 86:17]
    node lfsr_hi_lo_lo = cat(lfsr_prng.io.out[9], lfsr_prng.io.out[8]) @[PRNG.scala 86:17]
    node lfsr_hi_lo_hi = cat(lfsr_prng.io.out[11], lfsr_prng.io.out[10]) @[PRNG.scala 86:17]
    node lfsr_hi_lo = cat(lfsr_hi_lo_hi, lfsr_hi_lo_lo) @[PRNG.scala 86:17]
    node lfsr_hi_hi_lo = cat(lfsr_prng.io.out[13], lfsr_prng.io.out[12]) @[PRNG.scala 86:17]
    node lfsr_hi_hi_hi = cat(lfsr_prng.io.out[15], lfsr_prng.io.out[14]) @[PRNG.scala 86:17]
    node lfsr_hi_hi = cat(lfsr_hi_hi_hi, lfsr_hi_hi_lo) @[PRNG.scala 86:17]
    node lfsr_hi = cat(lfsr_hi_hi, lfsr_hi_lo) @[PRNG.scala 86:17]
    node lfsr = cat(lfsr_hi, lfsr_lo) @[PRNG.scala 86:17]
    inst metaArb of DCacheModuleImpl_Anon_1 @[DCache.scala 122:23]
    metaArb.io is invalid
    metaArb.clock <= gated_clock
    metaArb.reset <= reset
    smem tag_array : UInt<20>[1][256], undefined @[DescribedSRAM.scala 19:26]
    inst data of DCacheDataArray @[DCache.scala 132:20]
    data.io is invalid
    data.clock <= gated_clock
    data.reset <= reset
    inst dataArb of DCacheModuleImpl_Anon_2 @[DCache.scala 133:23]
    dataArb.io is invalid
    dataArb.clock <= gated_clock
    dataArb.reset <= reset
    dataArb.io.in[1].bits.wdata <= dataArb.io.in[0].bits.wdata @[DCache.scala 134:43]
    dataArb.io.in[2].bits.wdata <= dataArb.io.in[0].bits.wdata @[DCache.scala 134:43]
    dataArb.io.in[3].bits.wdata <= dataArb.io.in[0].bits.wdata @[DCache.scala 134:43]
    data.io.req <- dataArb.io.out @[DCache.scala 135:15]
    dataArb.io.out.ready <= UInt<1>("h01") @[DCache.scala 136:24]
    metaArb.io.out.ready <= clock_en_reg @[DCache.scala 137:24]
    wire tl_out_a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[DCache.scala 139:22]
    tl_out_a is invalid @[DCache.scala 139:22]
    wire deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Decoupled.scala 290:21]
    deq.valid <= tl_out_a.valid @[Decoupled.scala 291:17]
    deq.bits.corrupt <= tl_out_a.bits.corrupt @[Decoupled.scala 292:16]
    deq.bits.data <= tl_out_a.bits.data @[Decoupled.scala 292:16]
    deq.bits.mask <= tl_out_a.bits.mask @[Decoupled.scala 292:16]
    deq.bits.address <= tl_out_a.bits.address @[Decoupled.scala 292:16]
    deq.bits.source <= tl_out_a.bits.source @[Decoupled.scala 292:16]
    deq.bits.size <= tl_out_a.bits.size @[Decoupled.scala 292:16]
    deq.bits.param <= tl_out_a.bits.param @[Decoupled.scala 292:16]
    deq.bits.opcode <= tl_out_a.bits.opcode @[Decoupled.scala 292:16]
    tl_out_a.ready <= deq.ready @[Decoupled.scala 293:17]
    tl_out.a <- deq @[DCache.scala 140:12]
    wire tl_out_c : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    tl_out_c is invalid @[Bundles.scala 257:54]
    node s1_valid_x9 = and(io.cpu.req.ready, io.cpu.req.valid) @[Decoupled.scala 40:37]
    reg s1_valid : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 162:21]
    s1_valid <= s1_valid_x9 @[DCache.scala 162:21]
    wire _s1_probe_x12_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _s1_probe_x12_WIRE is invalid @[Bundles.scala 256:54]
    node s1_probe_x12 = and(_s1_probe_x12_WIRE.ready, _s1_probe_x12_WIRE.valid) @[Decoupled.scala 40:37]
    reg s1_probe : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 163:21]
    s1_probe <= s1_probe_x12 @[DCache.scala 163:21]
    wire _probe_bits_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _probe_bits_WIRE is invalid @[Bundles.scala 256:54]
    wire _probe_bits_WIRE_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _probe_bits_WIRE_1 is invalid @[Bundles.scala 256:54]
    node _probe_bits_T = and(_probe_bits_WIRE_1.ready, _probe_bits_WIRE_1.valid) @[Decoupled.scala 40:37]
    reg probe_bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, gated_clock @[Reg.scala 15:16]
    when _probe_bits_T : @[Reg.scala 16:19]
      probe_bits.corrupt <= _probe_bits_WIRE.bits.corrupt @[Reg.scala 16:23]
      probe_bits.data <= _probe_bits_WIRE.bits.data @[Reg.scala 16:23]
      probe_bits.mask <= _probe_bits_WIRE.bits.mask @[Reg.scala 16:23]
      probe_bits.address <= _probe_bits_WIRE.bits.address @[Reg.scala 16:23]
      probe_bits.source <= _probe_bits_WIRE.bits.source @[Reg.scala 16:23]
      probe_bits.size <= _probe_bits_WIRE.bits.size @[Reg.scala 16:23]
      probe_bits.param <= _probe_bits_WIRE.bits.param @[Reg.scala 16:23]
      probe_bits.opcode <= _probe_bits_WIRE.bits.opcode @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    wire s1_nack : UInt<1>
    s1_nack is invalid
    s1_nack <= UInt<1>("h00")
    node _s1_valid_masked_T = eq(io.cpu.s1_kill, UInt<1>("h00")) @[DCache.scala 166:37]
    node s1_valid_masked = and(s1_valid, _s1_valid_masked_T) @[DCache.scala 166:34]
    node _s1_valid_not_nacked_T = eq(s1_nack, UInt<1>("h00")) @[DCache.scala 167:41]
    node s1_valid_not_nacked = and(s1_valid, _s1_valid_not_nacked_T) @[DCache.scala 167:38]
    node _s1_tlb_req_valid_T = and(tlb_port.req.ready, tlb_port.req.valid) @[Decoupled.scala 40:37]
    reg s1_tlb_req_valid : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 168:33]
    s1_tlb_req_valid <= _s1_tlb_req_valid_T @[DCache.scala 168:33]
    reg s2_tlb_req_valid : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 169:33]
    s2_tlb_req_valid <= s1_tlb_req_valid @[DCache.scala 169:33]
    node _s0_clk_en_T = eq(metaArb.io.out.bits.write, UInt<1>("h00")) @[DCache.scala 170:43]
    node s0_clk_en = and(metaArb.io.out.valid, _s0_clk_en_T) @[DCache.scala 170:40]
    wire s0_req : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}
    s0_req is invalid
    s0_req <- io.cpu.req.bits
    node s0_req_addr_hi = shr(metaArb.io.out.bits.addr, 6) @[DCache.scala 173:47]
    node s0_req_addr_lo = bits(io.cpu.req.bits.addr, 5, 0) @[DCache.scala 173:84]
    node _s0_req_addr_T = cat(s0_req_addr_hi, s0_req_addr_lo) @[Cat.scala 30:58]
    s0_req.addr <= _s0_req_addr_T @[DCache.scala 173:15]
    node _T = eq(metaArb.io.in[7].ready, UInt<1>("h00")) @[DCache.scala 175:9]
    when _T : @[DCache.scala 175:34]
      s0_req.phys <= UInt<1>("h01") @[DCache.scala 175:48]
      skip @[DCache.scala 175:34]
    reg s1_req : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}, gated_clock @[Reg.scala 15:16]
    when s0_clk_en : @[Reg.scala 16:19]
      s1_req.mask <= s0_req.mask @[Reg.scala 16:23]
      s1_req.data <= s0_req.data @[Reg.scala 16:23]
      s1_req.no_xcpt <= s0_req.no_xcpt @[Reg.scala 16:23]
      s1_req.no_alloc <= s0_req.no_alloc @[Reg.scala 16:23]
      s1_req.phys <= s0_req.phys @[Reg.scala 16:23]
      s1_req.dprv <= s0_req.dprv @[Reg.scala 16:23]
      s1_req.signed <= s0_req.signed @[Reg.scala 16:23]
      s1_req.size <= s0_req.size @[Reg.scala 16:23]
      s1_req.cmd <= s0_req.cmd @[Reg.scala 16:23]
      s1_req.tag <= s0_req.tag @[Reg.scala 16:23]
      s1_req.addr <= s0_req.addr @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node s1_vaddr_hi = shr(s1_req.addr, 14) @[DCache.scala 177:56]
    node s1_vaddr_lo = bits(s1_req.addr, 13, 0) @[DCache.scala 177:78]
    node s1_vaddr = cat(s1_vaddr_hi, s1_vaddr_lo) @[Cat.scala 30:58]
    wire s0_tlb_req : {vaddr : UInt<32>, passthrough : UInt<1>, size : UInt<2>, cmd : UInt<5>}
    s0_tlb_req is invalid
    s0_tlb_req <- tlb_port.req.bits
    node _T_1 = and(tlb_port.req.ready, tlb_port.req.valid) @[Decoupled.scala 40:37]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[DCache.scala 180:9]
    when _T_2 : @[DCache.scala 180:31]
      s0_tlb_req.passthrough <= s0_req.phys @[DCache.scala 181:28]
      s0_tlb_req.vaddr <= s0_req.addr @[DCache.scala 182:22]
      s0_tlb_req.size <= s0_req.size @[DCache.scala 183:21]
      s0_tlb_req.cmd <= s0_req.cmd @[DCache.scala 184:20]
      skip @[DCache.scala 180:31]
    node _s1_tlb_req_T = or(s0_clk_en, tlb_port.req.valid) @[DCache.scala 186:52]
    reg s1_tlb_req : {vaddr : UInt<32>, passthrough : UInt<1>, size : UInt<2>, cmd : UInt<5>}, gated_clock @[Reg.scala 15:16]
    when _s1_tlb_req_T : @[Reg.scala 16:19]
      s1_tlb_req.cmd <= s0_tlb_req.cmd @[Reg.scala 16:23]
      s1_tlb_req.size <= s0_tlb_req.size @[Reg.scala 16:23]
      s1_tlb_req.passthrough <= s0_tlb_req.passthrough @[Reg.scala 16:23]
      s1_tlb_req.vaddr <= s0_tlb_req.vaddr @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _s1_read_T = eq(s1_req.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _s1_read_T_1 = eq(s1_req.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _s1_read_T_2 = or(_s1_read_T, _s1_read_T_1) @[Consts.scala 81:41]
    node _s1_read_T_3 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _s1_read_T_4 = or(_s1_read_T_2, _s1_read_T_3) @[Consts.scala 81:58]
    node _s1_read_T_5 = eq(s1_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _s1_read_T_6 = eq(s1_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _s1_read_T_7 = eq(s1_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _s1_read_T_8 = eq(s1_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _s1_read_T_9 = or(_s1_read_T_5, _s1_read_T_6) @[package.scala 72:59]
    node _s1_read_T_10 = or(_s1_read_T_9, _s1_read_T_7) @[package.scala 72:59]
    node _s1_read_T_11 = or(_s1_read_T_10, _s1_read_T_8) @[package.scala 72:59]
    node _s1_read_T_12 = eq(s1_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _s1_read_T_13 = eq(s1_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _s1_read_T_14 = eq(s1_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _s1_read_T_15 = eq(s1_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _s1_read_T_16 = eq(s1_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _s1_read_T_17 = or(_s1_read_T_12, _s1_read_T_13) @[package.scala 72:59]
    node _s1_read_T_18 = or(_s1_read_T_17, _s1_read_T_14) @[package.scala 72:59]
    node _s1_read_T_19 = or(_s1_read_T_18, _s1_read_T_15) @[package.scala 72:59]
    node _s1_read_T_20 = or(_s1_read_T_19, _s1_read_T_16) @[package.scala 72:59]
    node _s1_read_T_21 = or(_s1_read_T_11, _s1_read_T_20) @[Consts.scala 79:44]
    node s1_read = or(_s1_read_T_4, _s1_read_T_21) @[Consts.scala 81:75]
    node _s1_write_T = eq(s1_req.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _s1_write_T_1 = eq(s1_req.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _s1_write_T_2 = or(_s1_write_T, _s1_write_T_1) @[Consts.scala 82:42]
    node _s1_write_T_3 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _s1_write_T_4 = or(_s1_write_T_2, _s1_write_T_3) @[Consts.scala 82:59]
    node _s1_write_T_5 = eq(s1_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _s1_write_T_6 = eq(s1_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _s1_write_T_7 = eq(s1_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _s1_write_T_8 = eq(s1_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _s1_write_T_9 = or(_s1_write_T_5, _s1_write_T_6) @[package.scala 72:59]
    node _s1_write_T_10 = or(_s1_write_T_9, _s1_write_T_7) @[package.scala 72:59]
    node _s1_write_T_11 = or(_s1_write_T_10, _s1_write_T_8) @[package.scala 72:59]
    node _s1_write_T_12 = eq(s1_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _s1_write_T_13 = eq(s1_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _s1_write_T_14 = eq(s1_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _s1_write_T_15 = eq(s1_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _s1_write_T_16 = eq(s1_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _s1_write_T_17 = or(_s1_write_T_12, _s1_write_T_13) @[package.scala 72:59]
    node _s1_write_T_18 = or(_s1_write_T_17, _s1_write_T_14) @[package.scala 72:59]
    node _s1_write_T_19 = or(_s1_write_T_18, _s1_write_T_15) @[package.scala 72:59]
    node _s1_write_T_20 = or(_s1_write_T_19, _s1_write_T_16) @[package.scala 72:59]
    node _s1_write_T_21 = or(_s1_write_T_11, _s1_write_T_20) @[Consts.scala 79:44]
    node s1_write = or(_s1_write_T_4, _s1_write_T_21) @[Consts.scala 82:76]
    node s1_readwrite = or(s1_read, s1_write) @[DCache.scala 190:30]
    node s1_sfence = eq(s1_req.cmd, UInt<5>("h014")) @[DCache.scala 191:30]
    node _s1_flush_line_T = eq(s1_req.cmd, UInt<3>("h05")) @[DCache.scala 192:34]
    node _s1_flush_line_T_1 = bits(s1_req.size, 0, 0) @[DCache.scala 192:64]
    node s1_flush_line = and(_s1_flush_line_T, _s1_flush_line_T_1) @[DCache.scala 192:50]
    reg s1_flush_valid : UInt<1>, gated_clock @[DCache.scala 193:27]
    wire s1_waw_hazard : UInt<1> @[DCache.scala 194:27]
    s1_waw_hazard is invalid @[DCache.scala 194:27]
    reg flushed : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h01"))) @[DCache.scala 198:20]
    reg flushing : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 199:21]
    reg flushing_req : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}, gated_clock @[DCache.scala 200:25]
    reg cached_grant_wait : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 201:30]
    reg resetting : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 202:26]
    reg flushCounter : UInt<8>, gated_clock with : (reset => (reset, UInt<8>("h00"))) @[DCache.scala 203:25]
    reg release_ack_wait : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 204:29]
    reg release_ack_dirty : UInt<1>, gated_clock @[DCache.scala 205:30]
    reg release_ack_addr : UInt<32>, gated_clock @[DCache.scala 206:29]
    reg release_state : UInt<4>, gated_clock with : (reset => (reset, UInt<4>("h00"))) @[DCache.scala 207:26]
    reg refill_way : UInt, gated_clock @[DCache.scala 208:23]
    wire any_pstore_valid : UInt<1> @[DCache.scala 209:30]
    any_pstore_valid is invalid @[DCache.scala 209:30]
    node _inWriteback_T = eq(release_state, UInt<4>("h01")) @[package.scala 15:47]
    node _inWriteback_T_1 = eq(release_state, UInt<4>("h02")) @[package.scala 15:47]
    node inWriteback = or(_inWriteback_T, _inWriteback_T_1) @[package.scala 72:59]
    wire releaseWay : UInt @[DCache.scala 211:24]
    releaseWay is invalid @[DCache.scala 211:24]
    node _io_cpu_req_ready_T = eq(release_state, UInt<4>("h00")) @[DCache.scala 212:38]
    node _io_cpu_req_ready_T_1 = eq(cached_grant_wait, UInt<1>("h00")) @[DCache.scala 212:54]
    node _io_cpu_req_ready_T_2 = and(_io_cpu_req_ready_T, _io_cpu_req_ready_T_1) @[DCache.scala 212:51]
    node _io_cpu_req_ready_T_3 = eq(s1_nack, UInt<1>("h00")) @[DCache.scala 212:76]
    node _io_cpu_req_ready_T_4 = and(_io_cpu_req_ready_T_2, _io_cpu_req_ready_T_3) @[DCache.scala 212:73]
    io.cpu.req.ready <= _io_cpu_req_ready_T_4 @[DCache.scala 212:20]
    wire _uncachedInFlight_WIRE : UInt<1>[1] @[compatibility.scala 127:12]
    _uncachedInFlight_WIRE is invalid @[compatibility.scala 127:12]
    _uncachedInFlight_WIRE[0] <= UInt<1>("h00") @[compatibility.scala 127:12]
    reg uncachedInFlight : UInt<1>[1], gated_clock with : (reset => (reset, _uncachedInFlight_WIRE)) @[DCache.scala 215:33]
    reg uncachedReqs : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}[1], gated_clock @[DCache.scala 216:25]
    wire uncachedResp : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}
    uncachedResp is invalid
    uncachedResp is invalid
    node _s0_read_T = eq(io.cpu.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _s0_read_T_1 = eq(io.cpu.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _s0_read_T_2 = or(_s0_read_T, _s0_read_T_1) @[Consts.scala 81:41]
    node _s0_read_T_3 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _s0_read_T_4 = or(_s0_read_T_2, _s0_read_T_3) @[Consts.scala 81:58]
    node _s0_read_T_5 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _s0_read_T_6 = eq(io.cpu.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _s0_read_T_7 = eq(io.cpu.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _s0_read_T_8 = eq(io.cpu.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _s0_read_T_9 = or(_s0_read_T_5, _s0_read_T_6) @[package.scala 72:59]
    node _s0_read_T_10 = or(_s0_read_T_9, _s0_read_T_7) @[package.scala 72:59]
    node _s0_read_T_11 = or(_s0_read_T_10, _s0_read_T_8) @[package.scala 72:59]
    node _s0_read_T_12 = eq(io.cpu.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _s0_read_T_13 = eq(io.cpu.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _s0_read_T_14 = eq(io.cpu.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _s0_read_T_15 = eq(io.cpu.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _s0_read_T_16 = eq(io.cpu.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _s0_read_T_17 = or(_s0_read_T_12, _s0_read_T_13) @[package.scala 72:59]
    node _s0_read_T_18 = or(_s0_read_T_17, _s0_read_T_14) @[package.scala 72:59]
    node _s0_read_T_19 = or(_s0_read_T_18, _s0_read_T_15) @[package.scala 72:59]
    node _s0_read_T_20 = or(_s0_read_T_19, _s0_read_T_16) @[package.scala 72:59]
    node _s0_read_T_21 = or(_s0_read_T_11, _s0_read_T_20) @[Consts.scala 79:44]
    node s0_read = or(_s0_read_T_4, _s0_read_T_21) @[Consts.scala 81:75]
    node _dataArb_io_in_3_valid_res_T = eq(io.cpu.req.bits.cmd, UInt<1>("h01")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_res_T_1 = eq(io.cpu.req.bits.cmd, UInt<2>("h03")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_res_T_2 = or(_dataArb_io_in_3_valid_res_T, _dataArb_io_in_3_valid_res_T_1) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_res_T_3 = eq(_dataArb_io_in_3_valid_res_T_2, UInt<1>("h00")) @[DCache.scala 1155:15]
    node _dataArb_io_in_3_valid_res_T_4 = lt(io.cpu.req.bits.size, UInt<1>("h00")) @[DCache.scala 1155:58]
    node res = or(_dataArb_io_in_3_valid_res_T_3, _dataArb_io_in_3_valid_res_T_4) @[DCache.scala 1155:46]
    node _dataArb_io_in_3_valid_T = eq(io.cpu.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _dataArb_io_in_3_valid_T_1 = eq(io.cpu.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _dataArb_io_in_3_valid_T_2 = or(_dataArb_io_in_3_valid_T, _dataArb_io_in_3_valid_T_1) @[Consts.scala 81:41]
    node _dataArb_io_in_3_valid_T_3 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _dataArb_io_in_3_valid_T_4 = or(_dataArb_io_in_3_valid_T_2, _dataArb_io_in_3_valid_T_3) @[Consts.scala 81:58]
    node _dataArb_io_in_3_valid_T_5 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_6 = eq(io.cpu.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_7 = eq(io.cpu.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_8 = eq(io.cpu.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_9 = or(_dataArb_io_in_3_valid_T_5, _dataArb_io_in_3_valid_T_6) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_10 = or(_dataArb_io_in_3_valid_T_9, _dataArb_io_in_3_valid_T_7) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_11 = or(_dataArb_io_in_3_valid_T_10, _dataArb_io_in_3_valid_T_8) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_12 = eq(io.cpu.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_13 = eq(io.cpu.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_14 = eq(io.cpu.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_15 = eq(io.cpu.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_16 = eq(io.cpu.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_17 = or(_dataArb_io_in_3_valid_T_12, _dataArb_io_in_3_valid_T_13) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_18 = or(_dataArb_io_in_3_valid_T_17, _dataArb_io_in_3_valid_T_14) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_19 = or(_dataArb_io_in_3_valid_T_18, _dataArb_io_in_3_valid_T_15) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_20 = or(_dataArb_io_in_3_valid_T_19, _dataArb_io_in_3_valid_T_16) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_21 = or(_dataArb_io_in_3_valid_T_11, _dataArb_io_in_3_valid_T_20) @[Consts.scala 79:44]
    node _dataArb_io_in_3_valid_T_22 = or(_dataArb_io_in_3_valid_T_4, _dataArb_io_in_3_valid_T_21) @[Consts.scala 81:75]
    node _dataArb_io_in_3_valid_T_23 = eq(io.cpu.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _dataArb_io_in_3_valid_T_24 = eq(io.cpu.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _dataArb_io_in_3_valid_T_25 = or(_dataArb_io_in_3_valid_T_23, _dataArb_io_in_3_valid_T_24) @[Consts.scala 82:42]
    node _dataArb_io_in_3_valid_T_26 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _dataArb_io_in_3_valid_T_27 = or(_dataArb_io_in_3_valid_T_25, _dataArb_io_in_3_valid_T_26) @[Consts.scala 82:59]
    node _dataArb_io_in_3_valid_T_28 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_29 = eq(io.cpu.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_30 = eq(io.cpu.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_31 = eq(io.cpu.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_32 = or(_dataArb_io_in_3_valid_T_28, _dataArb_io_in_3_valid_T_29) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_33 = or(_dataArb_io_in_3_valid_T_32, _dataArb_io_in_3_valid_T_30) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_34 = or(_dataArb_io_in_3_valid_T_33, _dataArb_io_in_3_valid_T_31) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_35 = eq(io.cpu.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_36 = eq(io.cpu.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_37 = eq(io.cpu.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_38 = eq(io.cpu.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_39 = eq(io.cpu.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_T_40 = or(_dataArb_io_in_3_valid_T_35, _dataArb_io_in_3_valid_T_36) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_41 = or(_dataArb_io_in_3_valid_T_40, _dataArb_io_in_3_valid_T_37) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_42 = or(_dataArb_io_in_3_valid_T_41, _dataArb_io_in_3_valid_T_38) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_43 = or(_dataArb_io_in_3_valid_T_42, _dataArb_io_in_3_valid_T_39) @[package.scala 72:59]
    node _dataArb_io_in_3_valid_T_44 = or(_dataArb_io_in_3_valid_T_34, _dataArb_io_in_3_valid_T_43) @[Consts.scala 79:44]
    node _dataArb_io_in_3_valid_T_45 = or(_dataArb_io_in_3_valid_T_27, _dataArb_io_in_3_valid_T_44) @[Consts.scala 82:76]
    node _dataArb_io_in_3_valid_T_46 = eq(io.cpu.req.bits.cmd, UInt<5>("h011")) @[DCache.scala 1161:35]
    node _dataArb_io_in_3_valid_T_47 = lt(io.cpu.req.bits.size, UInt<1>("h00")) @[DCache.scala 1161:57]
    node _dataArb_io_in_3_valid_T_48 = or(_dataArb_io_in_3_valid_T_46, _dataArb_io_in_3_valid_T_47) @[DCache.scala 1161:45]
    node _dataArb_io_in_3_valid_T_49 = and(_dataArb_io_in_3_valid_T_45, _dataArb_io_in_3_valid_T_48) @[DCache.scala 1161:23]
    node _dataArb_io_in_3_valid_T_50 = or(_dataArb_io_in_3_valid_T_22, _dataArb_io_in_3_valid_T_49) @[DCache.scala 1160:21]
    node _dataArb_io_in_3_valid_T_51 = eq(_dataArb_io_in_3_valid_T_50, UInt<1>("h00")) @[DCache.scala 1156:12]
    node _dataArb_io_in_3_valid_T_52 = or(_dataArb_io_in_3_valid_T_51, res) @[DCache.scala 1156:28]
    node _dataArb_io_in_3_valid_T_53 = asUInt(reset) @[DCache.scala 1156:11]
    node _dataArb_io_in_3_valid_T_54 = or(_dataArb_io_in_3_valid_T_52, _dataArb_io_in_3_valid_T_53) @[DCache.scala 1156:11]
    node _dataArb_io_in_3_valid_T_55 = eq(_dataArb_io_in_3_valid_T_54, UInt<1>("h00")) @[DCache.scala 1156:11]
    when _dataArb_io_in_3_valid_T_55 : @[DCache.scala 1156:11]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:1156 assert(!needsRead(req) || res)\n") @[DCache.scala 1156:11]
      stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 1156:11]
      skip @[DCache.scala 1156:11]
    node _dataArb_io_in_3_valid_T_56 = and(io.cpu.req.valid, res) @[DCache.scala 221:46]
    dataArb.io.in[3].valid <= _dataArb_io_in_3_valid_T_56 @[DCache.scala 221:26]
    dataArb.io.in[3].bits <- dataArb.io.in[1].bits @[DCache.scala 222:25]
    dataArb.io.in[3].bits.write <= UInt<1>("h00") @[DCache.scala 223:31]
    node dataArb_io_in_3_bits_addr_hi = shr(io.cpu.req.bits.addr, 14) @[DCache.scala 224:89]
    node dataArb_io_in_3_bits_addr_lo = bits(io.cpu.req.bits.addr, 13, 0) @[DCache.scala 224:120]
    node _dataArb_io_in_3_bits_addr_T = cat(dataArb_io_in_3_bits_addr_hi, dataArb_io_in_3_bits_addr_lo) @[Cat.scala 30:58]
    dataArb.io.in[3].bits.addr <= _dataArb_io_in_3_bits_addr_T @[DCache.scala 224:30]
    node _dataArb_io_in_3_bits_wordMask_T = mux(UInt<1>("h01"), UInt<4>("h0f"), UInt<4>("h00")) @[Bitwise.scala 72:12]
    dataArb.io.in[3].bits.wordMask <= _dataArb_io_in_3_bits_wordMask_T @[DCache.scala 225:34]
    node _dataArb_io_in_3_bits_eccMask_T = not(UInt<4>("h00")) @[DCache.scala 235:36]
    dataArb.io.in[3].bits.eccMask <= _dataArb_io_in_3_bits_eccMask_T @[DCache.scala 235:33]
    node _dataArb_io_in_3_bits_way_en_T = not(UInt<1>("h00")) @[DCache.scala 236:35]
    dataArb.io.in[3].bits.way_en <= _dataArb_io_in_3_bits_way_en_T @[DCache.scala 236:32]
    node _T_3 = eq(dataArb.io.in[3].ready, UInt<1>("h00")) @[DCache.scala 237:9]
    node _T_4 = and(_T_3, s0_read) @[DCache.scala 237:33]
    when _T_4 : @[DCache.scala 237:45]
      io.cpu.req.ready <= UInt<1>("h00") @[DCache.scala 237:64]
      skip @[DCache.scala 237:45]
    node _s1_did_read_T = eq(io.cpu.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _s1_did_read_T_1 = eq(io.cpu.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _s1_did_read_T_2 = or(_s1_did_read_T, _s1_did_read_T_1) @[Consts.scala 81:41]
    node _s1_did_read_T_3 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _s1_did_read_T_4 = or(_s1_did_read_T_2, _s1_did_read_T_3) @[Consts.scala 81:58]
    node _s1_did_read_T_5 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _s1_did_read_T_6 = eq(io.cpu.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _s1_did_read_T_7 = eq(io.cpu.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _s1_did_read_T_8 = eq(io.cpu.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _s1_did_read_T_9 = or(_s1_did_read_T_5, _s1_did_read_T_6) @[package.scala 72:59]
    node _s1_did_read_T_10 = or(_s1_did_read_T_9, _s1_did_read_T_7) @[package.scala 72:59]
    node _s1_did_read_T_11 = or(_s1_did_read_T_10, _s1_did_read_T_8) @[package.scala 72:59]
    node _s1_did_read_T_12 = eq(io.cpu.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _s1_did_read_T_13 = eq(io.cpu.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _s1_did_read_T_14 = eq(io.cpu.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _s1_did_read_T_15 = eq(io.cpu.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _s1_did_read_T_16 = eq(io.cpu.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _s1_did_read_T_17 = or(_s1_did_read_T_12, _s1_did_read_T_13) @[package.scala 72:59]
    node _s1_did_read_T_18 = or(_s1_did_read_T_17, _s1_did_read_T_14) @[package.scala 72:59]
    node _s1_did_read_T_19 = or(_s1_did_read_T_18, _s1_did_read_T_15) @[package.scala 72:59]
    node _s1_did_read_T_20 = or(_s1_did_read_T_19, _s1_did_read_T_16) @[package.scala 72:59]
    node _s1_did_read_T_21 = or(_s1_did_read_T_11, _s1_did_read_T_20) @[Consts.scala 79:44]
    node _s1_did_read_T_22 = or(_s1_did_read_T_4, _s1_did_read_T_21) @[Consts.scala 81:75]
    node _s1_did_read_T_23 = eq(io.cpu.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _s1_did_read_T_24 = eq(io.cpu.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _s1_did_read_T_25 = or(_s1_did_read_T_23, _s1_did_read_T_24) @[Consts.scala 82:42]
    node _s1_did_read_T_26 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _s1_did_read_T_27 = or(_s1_did_read_T_25, _s1_did_read_T_26) @[Consts.scala 82:59]
    node _s1_did_read_T_28 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _s1_did_read_T_29 = eq(io.cpu.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _s1_did_read_T_30 = eq(io.cpu.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _s1_did_read_T_31 = eq(io.cpu.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _s1_did_read_T_32 = or(_s1_did_read_T_28, _s1_did_read_T_29) @[package.scala 72:59]
    node _s1_did_read_T_33 = or(_s1_did_read_T_32, _s1_did_read_T_30) @[package.scala 72:59]
    node _s1_did_read_T_34 = or(_s1_did_read_T_33, _s1_did_read_T_31) @[package.scala 72:59]
    node _s1_did_read_T_35 = eq(io.cpu.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _s1_did_read_T_36 = eq(io.cpu.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _s1_did_read_T_37 = eq(io.cpu.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _s1_did_read_T_38 = eq(io.cpu.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _s1_did_read_T_39 = eq(io.cpu.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _s1_did_read_T_40 = or(_s1_did_read_T_35, _s1_did_read_T_36) @[package.scala 72:59]
    node _s1_did_read_T_41 = or(_s1_did_read_T_40, _s1_did_read_T_37) @[package.scala 72:59]
    node _s1_did_read_T_42 = or(_s1_did_read_T_41, _s1_did_read_T_38) @[package.scala 72:59]
    node _s1_did_read_T_43 = or(_s1_did_read_T_42, _s1_did_read_T_39) @[package.scala 72:59]
    node _s1_did_read_T_44 = or(_s1_did_read_T_34, _s1_did_read_T_43) @[Consts.scala 79:44]
    node _s1_did_read_T_45 = or(_s1_did_read_T_27, _s1_did_read_T_44) @[Consts.scala 82:76]
    node _s1_did_read_T_46 = eq(io.cpu.req.bits.cmd, UInt<5>("h011")) @[DCache.scala 1161:35]
    node _s1_did_read_T_47 = lt(io.cpu.req.bits.size, UInt<1>("h00")) @[DCache.scala 1161:57]
    node _s1_did_read_T_48 = or(_s1_did_read_T_46, _s1_did_read_T_47) @[DCache.scala 1161:45]
    node _s1_did_read_T_49 = and(_s1_did_read_T_45, _s1_did_read_T_48) @[DCache.scala 1161:23]
    node _s1_did_read_T_50 = or(_s1_did_read_T_22, _s1_did_read_T_49) @[DCache.scala 1160:21]
    node _s1_did_read_T_51 = and(io.cpu.req.valid, _s1_did_read_T_50) @[DCache.scala 238:75]
    node _s1_did_read_T_52 = and(dataArb.io.in[3].ready, _s1_did_read_T_51) @[DCache.scala 238:54]
    reg s1_did_read : UInt<1>, gated_clock @[Reg.scala 15:16]
    when s0_clk_en : @[Reg.scala 16:19]
      s1_did_read <= _s1_did_read_T_52 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg s1_read_mask : UInt<1>, gated_clock @[Reg.scala 15:16]
    when s0_clk_en : @[Reg.scala 16:19]
      s1_read_mask <= dataArb.io.in[3].bits.wordMask @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    metaArb.io.in[7].valid <= io.cpu.req.valid @[DCache.scala 240:26]
    metaArb.io.in[7].bits.write <= UInt<1>("h00") @[DCache.scala 241:31]
    node _metaArb_io_in_7_bits_idx_T = bits(dataArb.io.in[3].bits.addr, 13, 6) @[DCache.scala 242:58]
    metaArb.io.in[7].bits.idx <= _metaArb_io_in_7_bits_idx_T @[DCache.scala 242:29]
    metaArb.io.in[7].bits.addr <= io.cpu.req.bits.addr @[DCache.scala 243:30]
    metaArb.io.in[7].bits.way_en <= metaArb.io.in[4].bits.way_en @[DCache.scala 244:32]
    metaArb.io.in[7].bits.data <= metaArb.io.in[4].bits.data @[DCache.scala 245:30]
    node _T_5 = eq(metaArb.io.in[7].ready, UInt<1>("h00")) @[DCache.scala 246:9]
    when _T_5 : @[DCache.scala 246:34]
      io.cpu.req.ready <= UInt<1>("h00") @[DCache.scala 246:53]
      skip @[DCache.scala 246:34]
    node _s1_cmd_uses_tlb_T = or(s1_readwrite, s1_flush_line) @[DCache.scala 249:38]
    node _s1_cmd_uses_tlb_T_1 = eq(s1_req.cmd, UInt<5>("h017")) @[DCache.scala 249:69]
    node s1_cmd_uses_tlb = or(_s1_cmd_uses_tlb_T, _s1_cmd_uses_tlb_T_1) @[DCache.scala 249:55]
    io.ptw <- tlb.io.ptw @[DCache.scala 250:10]
    node _tlb_io_kill_T = and(s2_tlb_req_valid, tlb_port.s2_kill) @[DCache.scala 251:53]
    node _tlb_io_kill_T_1 = or(io.cpu.s2_kill, _tlb_io_kill_T) @[DCache.scala 251:33]
    tlb.io.kill <= _tlb_io_kill_T_1 @[DCache.scala 251:15]
    node _tlb_io_req_valid_T = eq(io.cpu.s1_kill, UInt<1>("h00")) @[DCache.scala 252:55]
    node _tlb_io_req_valid_T_1 = and(s1_valid, _tlb_io_req_valid_T) @[DCache.scala 252:52]
    node _tlb_io_req_valid_T_2 = and(_tlb_io_req_valid_T_1, s1_cmd_uses_tlb) @[DCache.scala 252:71]
    node _tlb_io_req_valid_T_3 = or(s1_tlb_req_valid, _tlb_io_req_valid_T_2) @[DCache.scala 252:40]
    tlb.io.req.valid <= _tlb_io_req_valid_T_3 @[DCache.scala 252:20]
    tlb.io.req.bits <- s1_tlb_req @[DCache.scala 253:19]
    node _T_6 = eq(tlb.io.req.ready, UInt<1>("h00")) @[DCache.scala 254:9]
    node _T_7 = eq(tlb.io.ptw.resp.valid, UInt<1>("h00")) @[DCache.scala 254:30]
    node _T_8 = and(_T_6, _T_7) @[DCache.scala 254:27]
    node _T_9 = eq(io.cpu.req.bits.phys, UInt<1>("h00")) @[DCache.scala 254:56]
    node _T_10 = and(_T_8, _T_9) @[DCache.scala 254:53]
    when _T_10 : @[DCache.scala 254:79]
      io.cpu.req.ready <= UInt<1>("h00") @[DCache.scala 254:98]
      skip @[DCache.scala 254:79]
    node _T_11 = eq(s1_tlb_req_valid, UInt<1>("h00")) @[DCache.scala 255:9]
    node _T_12 = and(_T_11, s1_valid) @[DCache.scala 255:27]
    node _T_13 = and(_T_12, s1_cmd_uses_tlb) @[DCache.scala 255:39]
    node _T_14 = and(_T_13, tlb.io.resp.miss) @[DCache.scala 255:58]
    when _T_14 : @[DCache.scala 255:79]
      s1_nack <= UInt<1>("h01") @[DCache.scala 255:89]
      skip @[DCache.scala 255:79]
    node _tlb_io_sfence_valid_T = eq(io.cpu.s1_kill, UInt<1>("h00")) @[DCache.scala 257:38]
    node _tlb_io_sfence_valid_T_1 = and(s1_valid, _tlb_io_sfence_valid_T) @[DCache.scala 257:35]
    node _tlb_io_sfence_valid_T_2 = and(_tlb_io_sfence_valid_T_1, s1_sfence) @[DCache.scala 257:54]
    tlb.io.sfence.valid <= _tlb_io_sfence_valid_T_2 @[DCache.scala 257:23]
    node _tlb_io_sfence_bits_rs1_T = bits(s1_req.size, 0, 0) @[DCache.scala 258:40]
    tlb.io.sfence.bits.rs1 <= _tlb_io_sfence_bits_rs1_T @[DCache.scala 258:26]
    node _tlb_io_sfence_bits_rs2_T = bits(s1_req.size, 1, 1) @[DCache.scala 259:40]
    tlb.io.sfence.bits.rs2 <= _tlb_io_sfence_bits_rs2_T @[DCache.scala 259:26]
    tlb.io.sfence.bits.asid <= io.cpu.s1_data.data @[DCache.scala 260:27]
    tlb.io.sfence.bits.addr <= s1_req.addr @[DCache.scala 261:27]
    tlb_port.req.ready <= clock_en_reg @[DCache.scala 263:22]
    tlb_port.s1_resp <- tlb.io.resp @[DCache.scala 264:20]
    node _T_15 = and(s1_tlb_req_valid, s1_valid) @[DCache.scala 265:26]
    node _T_16 = and(s1_req.phys, s1_req.no_xcpt) @[DCache.scala 265:55]
    node _T_17 = eq(_T_16, UInt<1>("h00")) @[DCache.scala 265:41]
    node _T_18 = and(_T_15, _T_17) @[DCache.scala 265:38]
    when _T_18 : @[DCache.scala 265:75]
      s1_nack <= UInt<1>("h01") @[DCache.scala 265:85]
      skip @[DCache.scala 265:75]
    pma_checker.io.req.bits.passthrough <= UInt<1>("h01") @[DCache.scala 267:39]
    pma_checker.io.req.bits <- s1_req @[DCache.scala 268:27]
    node _s1_paddr_T = bits(s1_req.addr, 31, 12) @[DCache.scala 270:55]
    node _s1_paddr_T_1 = shr(tlb.io.resp.paddr, 12) @[DCache.scala 270:99]
    node s1_paddr_hi = mux(s1_tlb_req_valid, _s1_paddr_T, _s1_paddr_T_1) @[DCache.scala 270:25]
    node s1_paddr_lo = bits(s1_req.addr, 11, 0) @[DCache.scala 270:125]
    node s1_paddr = cat(s1_paddr_hi, s1_paddr_lo) @[Cat.scala 30:58]
    wire s1_victim_way : UInt @[DCache.scala 271:27]
    s1_victim_way is invalid @[DCache.scala 271:27]
    node _T_19 = eq(UInt<1>("h00"), io_hartid) @[LookupByHartId.scala 18:71]
    node baseAddr = or(UInt<32>("h080000000"), io_mmio_address_prefix) @[DCache.scala 274:93]
    node _T_20 = geq(s1_paddr, baseAddr) @[DCache.scala 275:35]
    node _T_21 = add(baseAddr, UInt<15>("h04000")) @[DCache.scala 275:70]
    node _T_22 = tail(_T_21, 1) @[DCache.scala 275:70]
    node _T_23 = lt(s1_paddr, _T_22) @[DCache.scala 275:59]
    node inScratchpad = and(_T_20, _T_23) @[DCache.scala 275:47]
    wire meta : {state : UInt<2>} @[Metadata.scala 159:20]
    meta is invalid @[Metadata.scala 159:20]
    meta.state <= UInt<2>("h03") @[Metadata.scala 160:16]
    wire meta_1 : {state : UInt<2>} @[Metadata.scala 159:20]
    meta_1 is invalid @[Metadata.scala 159:20]
    meta_1.state <= UInt<2>("h00") @[Metadata.scala 160:16]
    node hitState = mux(inScratchpad, meta, meta_1) @[DCache.scala 276:25]
    wire meta_2 : {state : UInt<2>} @[Metadata.scala 159:20]
    meta_2 is invalid @[Metadata.scala 159:20]
    meta_2.state <= UInt<2>("h00") @[Metadata.scala 160:16]
    wire dummyMeta : {coh : {state : UInt<2>}, tag : UInt<18>} @[HellaCache.scala 289:20]
    dummyMeta is invalid @[HellaCache.scala 289:20]
    dummyMeta.tag <= UInt<1>("h00") @[HellaCache.scala 290:14]
    dummyMeta.coh <- meta_2 @[HellaCache.scala 291:14]
    node s1_meta_0 = cat(dummyMeta.coh.state, dummyMeta.tag) @[DCache.scala 278:58]
    wire s1_data_way : UInt
    s1_data_way is invalid
    s1_data_way <= UInt<1>("h01")
    node tl_d_data_encoded_lo_lo = bits(tl_out.d.bits.data, 7, 0) @[package.scala 202:50]
    node tl_d_data_encoded_lo_hi = bits(tl_out.d.bits.data, 15, 8) @[package.scala 202:50]
    node tl_d_data_encoded_hi_lo = bits(tl_out.d.bits.data, 23, 16) @[package.scala 202:50]
    node tl_d_data_encoded_hi_hi = bits(tl_out.d.bits.data, 31, 24) @[package.scala 202:50]
    node tl_d_data_encoded_lo = cat(tl_d_data_encoded_lo_hi, tl_d_data_encoded_lo_lo) @[Cat.scala 30:58]
    node tl_d_data_encoded_hi = cat(tl_d_data_encoded_hi_hi, tl_d_data_encoded_hi_lo) @[Cat.scala 30:58]
    node _tl_d_data_encoded_T = cat(tl_d_data_encoded_hi, tl_d_data_encoded_lo) @[Cat.scala 30:58]
    wire tl_d_data_encoded : UInt<32> @[DCache.scala 296:31]
    tl_d_data_encoded is invalid @[DCache.scala 296:31]
    wire s1_all_data_ways : UInt<32>[2] @[DCache.scala 297:29]
    s1_all_data_ways is invalid @[DCache.scala 297:29]
    s1_all_data_ways[0] <= data.io.resp[0] @[DCache.scala 297:29]
    s1_all_data_ways[1] <= tl_d_data_encoded @[DCache.scala 297:29]
    node s1_mask_xwr_size = bits(s1_req.size, 1, 0) @[AMOALU.scala 10:17]
    node _s1_mask_xwr_upper_T = bits(s1_req.addr, 0, 0) @[AMOALU.scala 17:27]
    node _s1_mask_xwr_upper_T_1 = mux(_s1_mask_xwr_upper_T, UInt<1>("h01"), UInt<1>("h00")) @[AMOALU.scala 17:22]
    node _s1_mask_xwr_upper_T_2 = geq(s1_mask_xwr_size, UInt<1>("h01")) @[AMOALU.scala 17:57]
    node _s1_mask_xwr_upper_T_3 = mux(_s1_mask_xwr_upper_T_2, UInt<1>("h01"), UInt<1>("h00")) @[AMOALU.scala 17:51]
    node s1_mask_xwr_hi = or(_s1_mask_xwr_upper_T_1, _s1_mask_xwr_upper_T_3) @[AMOALU.scala 17:46]
    node _s1_mask_xwr_lower_T = bits(s1_req.addr, 0, 0) @[AMOALU.scala 18:27]
    node s1_mask_xwr_lo = mux(_s1_mask_xwr_lower_T, UInt<1>("h00"), UInt<1>("h01")) @[AMOALU.scala 18:22]
    node _s1_mask_xwr_T = cat(s1_mask_xwr_hi, s1_mask_xwr_lo) @[Cat.scala 30:58]
    node _s1_mask_xwr_upper_T_4 = bits(s1_req.addr, 1, 1) @[AMOALU.scala 17:27]
    node _s1_mask_xwr_upper_T_5 = mux(_s1_mask_xwr_upper_T_4, _s1_mask_xwr_T, UInt<1>("h00")) @[AMOALU.scala 17:22]
    node _s1_mask_xwr_upper_T_6 = geq(s1_mask_xwr_size, UInt<2>("h02")) @[AMOALU.scala 17:57]
    node _s1_mask_xwr_upper_T_7 = mux(_s1_mask_xwr_upper_T_6, UInt<2>("h03"), UInt<1>("h00")) @[AMOALU.scala 17:51]
    node s1_mask_xwr_hi_1 = or(_s1_mask_xwr_upper_T_5, _s1_mask_xwr_upper_T_7) @[AMOALU.scala 17:46]
    node _s1_mask_xwr_lower_T_1 = bits(s1_req.addr, 1, 1) @[AMOALU.scala 18:27]
    node s1_mask_xwr_lo_1 = mux(_s1_mask_xwr_lower_T_1, UInt<1>("h00"), _s1_mask_xwr_T) @[AMOALU.scala 18:22]
    node s1_mask_xwr = cat(s1_mask_xwr_hi_1, s1_mask_xwr_lo_1) @[Cat.scala 30:58]
    node _s1_mask_T = eq(s1_req.cmd, UInt<5>("h011")) @[DCache.scala 299:32]
    node s1_mask = mux(_s1_mask_T, io.cpu.s1_data.mask, s1_mask_xwr) @[DCache.scala 299:20]
    node _T_24 = eq(s1_req.cmd, UInt<5>("h011")) @[DCache.scala 301:42]
    node _T_25 = and(s1_valid_masked, _T_24) @[DCache.scala 301:28]
    node _T_26 = eq(_T_25, UInt<1>("h00")) @[DCache.scala 301:10]
    node _T_27 = not(io.cpu.s1_data.mask) @[DCache.scala 301:71]
    node _T_28 = or(s1_mask_xwr, _T_27) @[DCache.scala 301:69]
    node _T_29 = andr(_T_28) @[DCache.scala 301:93]
    node _T_30 = or(_T_26, _T_29) @[DCache.scala 301:53]
    node _T_31 = asUInt(reset) @[DCache.scala 301:9]
    node _T_32 = or(_T_30, _T_31) @[DCache.scala 301:9]
    node _T_33 = eq(_T_32, UInt<1>("h00")) @[DCache.scala 301:9]
    when _T_33 : @[DCache.scala 301:9]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:301 assert(!(s1_valid_masked && s1_req.cmd === M_PWR) || (s1_mask_xwr | ~io.cpu.s1_data.mask).andR)\n") @[DCache.scala 301:9]
      stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 301:9]
      skip @[DCache.scala 301:9]
    node _s2_valid_x37_T = eq(s1_sfence, UInt<1>("h00")) @[DCache.scala 303:46]
    node s2_valid_x37 = and(s1_valid_masked, _s2_valid_x37_T) @[DCache.scala 303:43]
    reg s2_valid : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 303:21]
    s2_valid <= s2_valid_x37 @[DCache.scala 303:21]
    node s2_valid_no_xcpt_lo_hi = cat(io.cpu.s2_xcpt.pf.st, io.cpu.s2_xcpt.ae.ld) @[DCache.scala 304:54]
    node s2_valid_no_xcpt_lo = cat(s2_valid_no_xcpt_lo_hi, io.cpu.s2_xcpt.ae.st) @[DCache.scala 304:54]
    node s2_valid_no_xcpt_hi_hi = cat(io.cpu.s2_xcpt.ma.ld, io.cpu.s2_xcpt.ma.st) @[DCache.scala 304:54]
    node s2_valid_no_xcpt_hi = cat(s2_valid_no_xcpt_hi_hi, io.cpu.s2_xcpt.pf.ld) @[DCache.scala 304:54]
    node _s2_valid_no_xcpt_T = cat(s2_valid_no_xcpt_hi, s2_valid_no_xcpt_lo) @[DCache.scala 304:54]
    node _s2_valid_no_xcpt_T_1 = orr(_s2_valid_no_xcpt_T) @[DCache.scala 304:61]
    node _s2_valid_no_xcpt_T_2 = eq(_s2_valid_no_xcpt_T_1, UInt<1>("h00")) @[DCache.scala 304:38]
    node s2_valid_no_xcpt = and(s2_valid, _s2_valid_no_xcpt_T_2) @[DCache.scala 304:35]
    reg s2_probe : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 305:21]
    s2_probe <= s1_probe @[DCache.scala 305:21]
    node _releaseInFlight_T = or(s1_probe, s2_probe) @[DCache.scala 306:34]
    node _releaseInFlight_T_1 = neq(release_state, UInt<4>("h00")) @[DCache.scala 306:63]
    node releaseInFlight = or(_releaseInFlight_T, _releaseInFlight_T_1) @[DCache.scala 306:46]
    node _s2_not_nacked_in_s1_T = eq(s1_nack, UInt<1>("h00")) @[DCache.scala 307:37]
    reg s2_not_nacked_in_s1 : UInt<1>, gated_clock @[DCache.scala 307:36]
    s2_not_nacked_in_s1 <= _s2_not_nacked_in_s1_T @[DCache.scala 307:36]
    node s2_valid_not_nacked_in_s1 = and(s2_valid, s2_not_nacked_in_s1) @[DCache.scala 308:44]
    node s2_valid_masked = and(s2_valid_no_xcpt, s2_not_nacked_in_s1) @[DCache.scala 309:42]
    node _s2_valid_not_killed_T = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 310:48]
    node s2_valid_not_killed = and(s2_valid_masked, _s2_valid_not_killed_T) @[DCache.scala 310:45]
    reg s2_req : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}, gated_clock @[DCache.scala 311:19]
    node _s2_cmd_flush_all_T = eq(s2_req.cmd, UInt<3>("h05")) @[DCache.scala 312:37]
    node _s2_cmd_flush_all_T_1 = bits(s2_req.size, 0, 0) @[DCache.scala 312:68]
    node _s2_cmd_flush_all_T_2 = eq(_s2_cmd_flush_all_T_1, UInt<1>("h00")) @[DCache.scala 312:56]
    node s2_cmd_flush_all = and(_s2_cmd_flush_all_T, _s2_cmd_flush_all_T_2) @[DCache.scala 312:53]
    node _s2_cmd_flush_line_T = eq(s2_req.cmd, UInt<3>("h05")) @[DCache.scala 313:38]
    node _s2_cmd_flush_line_T_1 = bits(s2_req.size, 0, 0) @[DCache.scala 313:68]
    node s2_cmd_flush_line = and(_s2_cmd_flush_line_T, _s2_cmd_flush_line_T_1) @[DCache.scala 313:54]
    reg s2_tlb_xcpt : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, must_alloc : UInt<1>, prefetchable : UInt<1>}, gated_clock @[DCache.scala 314:24]
    reg s2_pma : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, must_alloc : UInt<1>, prefetchable : UInt<1>}, gated_clock @[DCache.scala 315:19]
    reg s2_uncached_resp_addr : UInt<32>, gated_clock @[DCache.scala 316:34]
    node _T_34 = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 317:29]
    when _T_34 : @[DCache.scala 317:48]
      s2_req <- s1_req @[DCache.scala 318:12]
      s2_req.addr <= s1_paddr @[DCache.scala 319:17]
      s2_tlb_xcpt <- tlb.io.resp @[DCache.scala 320:17]
      node _s2_pma_T = mux(s1_tlb_req_valid, pma_checker.io.resp, tlb.io.resp) @[DCache.scala 321:18]
      s2_pma <- _s2_pma_T @[DCache.scala 321:12]
      skip @[DCache.scala 317:48]
    node _s2_vaddr_T = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 323:62]
    reg s2_vaddr_r : UInt<32>, gated_clock @[Reg.scala 15:16]
    when _s2_vaddr_T : @[Reg.scala 16:19]
      s2_vaddr_r <= s1_vaddr @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node s2_vaddr_hi = shr(s2_vaddr_r, 14) @[DCache.scala 323:81]
    node s2_vaddr_lo = bits(s2_req.addr, 13, 0) @[DCache.scala 323:103]
    node s2_vaddr = cat(s2_vaddr_hi, s2_vaddr_lo) @[Cat.scala 30:58]
    node _s2_read_T = eq(s2_req.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _s2_read_T_1 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _s2_read_T_2 = or(_s2_read_T, _s2_read_T_1) @[Consts.scala 81:41]
    node _s2_read_T_3 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _s2_read_T_4 = or(_s2_read_T_2, _s2_read_T_3) @[Consts.scala 81:58]
    node _s2_read_T_5 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _s2_read_T_6 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _s2_read_T_7 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _s2_read_T_8 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _s2_read_T_9 = or(_s2_read_T_5, _s2_read_T_6) @[package.scala 72:59]
    node _s2_read_T_10 = or(_s2_read_T_9, _s2_read_T_7) @[package.scala 72:59]
    node _s2_read_T_11 = or(_s2_read_T_10, _s2_read_T_8) @[package.scala 72:59]
    node _s2_read_T_12 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _s2_read_T_13 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _s2_read_T_14 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _s2_read_T_15 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _s2_read_T_16 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _s2_read_T_17 = or(_s2_read_T_12, _s2_read_T_13) @[package.scala 72:59]
    node _s2_read_T_18 = or(_s2_read_T_17, _s2_read_T_14) @[package.scala 72:59]
    node _s2_read_T_19 = or(_s2_read_T_18, _s2_read_T_15) @[package.scala 72:59]
    node _s2_read_T_20 = or(_s2_read_T_19, _s2_read_T_16) @[package.scala 72:59]
    node _s2_read_T_21 = or(_s2_read_T_11, _s2_read_T_20) @[Consts.scala 79:44]
    node s2_read = or(_s2_read_T_4, _s2_read_T_21) @[Consts.scala 81:75]
    node _s2_write_T = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _s2_write_T_1 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _s2_write_T_2 = or(_s2_write_T, _s2_write_T_1) @[Consts.scala 82:42]
    node _s2_write_T_3 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _s2_write_T_4 = or(_s2_write_T_2, _s2_write_T_3) @[Consts.scala 82:59]
    node _s2_write_T_5 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _s2_write_T_6 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _s2_write_T_7 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _s2_write_T_8 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _s2_write_T_9 = or(_s2_write_T_5, _s2_write_T_6) @[package.scala 72:59]
    node _s2_write_T_10 = or(_s2_write_T_9, _s2_write_T_7) @[package.scala 72:59]
    node _s2_write_T_11 = or(_s2_write_T_10, _s2_write_T_8) @[package.scala 72:59]
    node _s2_write_T_12 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _s2_write_T_13 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _s2_write_T_14 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _s2_write_T_15 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _s2_write_T_16 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _s2_write_T_17 = or(_s2_write_T_12, _s2_write_T_13) @[package.scala 72:59]
    node _s2_write_T_18 = or(_s2_write_T_17, _s2_write_T_14) @[package.scala 72:59]
    node _s2_write_T_19 = or(_s2_write_T_18, _s2_write_T_15) @[package.scala 72:59]
    node _s2_write_T_20 = or(_s2_write_T_19, _s2_write_T_16) @[package.scala 72:59]
    node _s2_write_T_21 = or(_s2_write_T_11, _s2_write_T_20) @[Consts.scala 79:44]
    node s2_write = or(_s2_write_T_4, _s2_write_T_21) @[Consts.scala 82:76]
    node s2_readwrite = or(s2_read, s2_write) @[DCache.scala 326:30]
    reg s2_flush_valid_pre_tag_ecc : UInt<1>, gated_clock @[DCache.scala 327:43]
    s2_flush_valid_pre_tag_ecc <= s1_flush_valid @[DCache.scala 327:43]
    node _s1_meta_clk_en_T = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 329:44]
    node s1_meta_clk_en = or(_s1_meta_clk_en_T, s1_probe) @[DCache.scala 329:62]
    reg s2_meta_correctable_errors : UInt<1>, gated_clock @[Reg.scala 15:16]
    when s1_meta_clk_en : @[Reg.scala 16:19]
      s2_meta_correctable_errors <= UInt<1>("h00") @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg s2_meta_uncorrectable_errors : UInt<1>, gated_clock @[Reg.scala 15:16]
    when s1_meta_clk_en : @[Reg.scala 16:19]
      s2_meta_uncorrectable_errors <= UInt<1>("h00") @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node s2_meta_error_uncorrectable = orr(s2_meta_uncorrectable_errors) @[DCache.scala 332:66]
    reg s2_meta_corrected_r : UInt<20>, gated_clock @[Reg.scala 15:16]
    when s1_meta_clk_en : @[Reg.scala 16:19]
      s2_meta_corrected_r <= s1_meta_0 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    wire s2_meta_corrected_0 : {coh : {state : UInt<2>}, tag : UInt<18>} @[DCache.scala 333:99]
    s2_meta_corrected_0 is invalid @[DCache.scala 333:99]
    wire _s2_meta_corrected_WIRE : UInt<20>
    _s2_meta_corrected_WIRE is invalid
    _s2_meta_corrected_WIRE <= s2_meta_corrected_r
    node _s2_meta_corrected_T = bits(_s2_meta_corrected_WIRE, 17, 0) @[DCache.scala 333:99]
    s2_meta_corrected_0.tag <= _s2_meta_corrected_T @[DCache.scala 333:99]
    node _s2_meta_corrected_T_1 = bits(_s2_meta_corrected_WIRE, 19, 18) @[DCache.scala 333:99]
    s2_meta_corrected_0.coh.state <= _s2_meta_corrected_T_1 @[DCache.scala 333:99]
    node _s2_meta_error_T = or(s2_meta_uncorrectable_errors, s2_meta_correctable_errors) @[DCache.scala 334:53]
    node s2_meta_error = orr(_s2_meta_error_T) @[DCache.scala 334:83]
    node _s2_flush_valid_T = eq(s2_meta_error, UInt<1>("h00")) @[DCache.scala 335:54]
    node s2_flush_valid = and(s2_flush_valid_pre_tag_ecc, _s2_flush_valid_T) @[DCache.scala 335:51]
    node _s2_data_en_T = or(s1_valid, inWriteback) @[DCache.scala 338:23]
    node en = or(_s2_data_en_T, io.cpu.replay_next) @[DCache.scala 338:38]
    node _s2_data_word_en_T = mux(s1_did_read, s1_read_mask, UInt<1>("h00")) @[DCache.scala 339:63]
    node word_en = mux(inWriteback, UInt<1>("h01"), _s2_data_word_en_T) @[DCache.scala 339:22]
    node s1_way_words_0_0 = bits(s1_all_data_ways[0], 31, 0) @[package.scala 202:50]
    node s1_way_words_1_0 = bits(s1_all_data_ways[1], 31, 0) @[package.scala 202:50]
    node _s2_data_s1_word_en_T = eq(io.cpu.replay_next, UInt<1>("h00")) @[DCache.scala 349:28]
    node s1_word_en = mux(_s2_data_s1_word_en_T, word_en, UInt<1>("h01")) @[DCache.scala 349:27]
    node _s2_data_T = bits(s1_word_en, 0, 0) @[DCache.scala 351:39]
    node _s2_data_T_1 = mux(_s2_data_T, s1_data_way, UInt<1>("h00")) @[DCache.scala 351:28]
    node _s2_data_T_2 = bits(_s2_data_T_1, 0, 0) @[Mux.scala 29:36]
    node _s2_data_T_3 = bits(_s2_data_T_1, 1, 1) @[Mux.scala 29:36]
    node _s2_data_T_4 = mux(_s2_data_T_2, s1_way_words_0_0, UInt<1>("h00")) @[Mux.scala 27:72]
    node _s2_data_T_5 = mux(_s2_data_T_3, s1_way_words_1_0, UInt<1>("h00")) @[Mux.scala 27:72]
    node _s2_data_T_6 = or(_s2_data_T_4, _s2_data_T_5) @[Mux.scala 27:72]
    wire _s2_data_WIRE : UInt<32> @[Mux.scala 27:72]
    _s2_data_WIRE <= _s2_data_T_6 @[Mux.scala 27:72]
    reg s2_data : UInt<32>, gated_clock @[Reg.scala 15:16]
    when en : @[Reg.scala 16:19]
      s2_data <= _s2_data_WIRE @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg s2_probe_way : UInt<1>, gated_clock @[Reg.scala 15:16]
    when s1_probe : @[Reg.scala 16:19]
      s2_probe_way <= inScratchpad @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg s2_probe_state : {state : UInt<2>}, gated_clock @[Reg.scala 15:16]
    when s1_probe : @[Reg.scala 16:19]
      s2_probe_state.state <= hitState.state @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg s2_hit_way : UInt<1>, gated_clock @[Reg.scala 15:16]
    when s1_valid_not_nacked : @[Reg.scala 16:19]
      s2_hit_way <= inScratchpad @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _s2_hit_state_T = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 358:66]
    reg s2_hit_state : {state : UInt<2>}, gated_clock @[Reg.scala 15:16]
    when _s2_hit_state_T : @[Reg.scala 16:19]
      s2_hit_state.state <= hitState.state @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg s2_waw_hazard : UInt<1>, gated_clock @[Reg.scala 15:16]
    when s1_valid_not_nacked : @[Reg.scala 16:19]
      s2_waw_hazard <= s1_waw_hazard @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    wire s2_store_merge : UInt<1> @[DCache.scala 360:28]
    s2_store_merge is invalid @[DCache.scala 360:28]
    node s2_hit_valid = gt(s2_hit_state.state, UInt<2>("h00")) @[Metadata.scala 49:45]
    node _c_cat_T = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _c_cat_T_1 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _c_cat_T_2 = or(_c_cat_T, _c_cat_T_1) @[Consts.scala 82:42]
    node _c_cat_T_3 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _c_cat_T_4 = or(_c_cat_T_2, _c_cat_T_3) @[Consts.scala 82:59]
    node _c_cat_T_5 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _c_cat_T_6 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _c_cat_T_7 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _c_cat_T_8 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _c_cat_T_9 = or(_c_cat_T_5, _c_cat_T_6) @[package.scala 72:59]
    node _c_cat_T_10 = or(_c_cat_T_9, _c_cat_T_7) @[package.scala 72:59]
    node _c_cat_T_11 = or(_c_cat_T_10, _c_cat_T_8) @[package.scala 72:59]
    node _c_cat_T_12 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _c_cat_T_13 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _c_cat_T_14 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _c_cat_T_15 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _c_cat_T_16 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _c_cat_T_17 = or(_c_cat_T_12, _c_cat_T_13) @[package.scala 72:59]
    node _c_cat_T_18 = or(_c_cat_T_17, _c_cat_T_14) @[package.scala 72:59]
    node _c_cat_T_19 = or(_c_cat_T_18, _c_cat_T_15) @[package.scala 72:59]
    node _c_cat_T_20 = or(_c_cat_T_19, _c_cat_T_16) @[package.scala 72:59]
    node _c_cat_T_21 = or(_c_cat_T_11, _c_cat_T_20) @[Consts.scala 79:44]
    node c_cat_hi = or(_c_cat_T_4, _c_cat_T_21) @[Consts.scala 82:76]
    node _c_cat_T_22 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _c_cat_T_23 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _c_cat_T_24 = or(_c_cat_T_22, _c_cat_T_23) @[Consts.scala 82:42]
    node _c_cat_T_25 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _c_cat_T_26 = or(_c_cat_T_24, _c_cat_T_25) @[Consts.scala 82:59]
    node _c_cat_T_27 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _c_cat_T_28 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _c_cat_T_29 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _c_cat_T_30 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _c_cat_T_31 = or(_c_cat_T_27, _c_cat_T_28) @[package.scala 72:59]
    node _c_cat_T_32 = or(_c_cat_T_31, _c_cat_T_29) @[package.scala 72:59]
    node _c_cat_T_33 = or(_c_cat_T_32, _c_cat_T_30) @[package.scala 72:59]
    node _c_cat_T_34 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _c_cat_T_35 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _c_cat_T_36 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _c_cat_T_37 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _c_cat_T_38 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _c_cat_T_39 = or(_c_cat_T_34, _c_cat_T_35) @[package.scala 72:59]
    node _c_cat_T_40 = or(_c_cat_T_39, _c_cat_T_36) @[package.scala 72:59]
    node _c_cat_T_41 = or(_c_cat_T_40, _c_cat_T_37) @[package.scala 72:59]
    node _c_cat_T_42 = or(_c_cat_T_41, _c_cat_T_38) @[package.scala 72:59]
    node _c_cat_T_43 = or(_c_cat_T_33, _c_cat_T_42) @[Consts.scala 79:44]
    node _c_cat_T_44 = or(_c_cat_T_26, _c_cat_T_43) @[Consts.scala 82:76]
    node _c_cat_T_45 = eq(s2_req.cmd, UInt<2>("h03")) @[Consts.scala 83:54]
    node _c_cat_T_46 = or(_c_cat_T_44, _c_cat_T_45) @[Consts.scala 83:47]
    node _c_cat_T_47 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 83:71]
    node c_cat_lo = or(_c_cat_T_46, _c_cat_T_47) @[Consts.scala 83:64]
    node hi = cat(c_cat_hi, c_cat_lo) @[Cat.scala 30:58]
    node _T_35 = cat(hi, s2_hit_state.state) @[Cat.scala 30:58]
    node hi_1 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_36 = cat(hi_1, UInt<2>("h03")) @[Cat.scala 30:58]
    node hi_2 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_37 = cat(hi_2, UInt<2>("h02")) @[Cat.scala 30:58]
    node hi_3 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_38 = cat(hi_3, UInt<2>("h01")) @[Cat.scala 30:58]
    node hi_4 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_39 = cat(hi_4, UInt<2>("h03")) @[Cat.scala 30:58]
    node hi_5 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_40 = cat(hi_5, UInt<2>("h02")) @[Cat.scala 30:58]
    node hi_6 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_41 = cat(hi_6, UInt<2>("h03")) @[Cat.scala 30:58]
    node hi_7 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_42 = cat(hi_7, UInt<2>("h02")) @[Cat.scala 30:58]
    node hi_8 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_43 = cat(hi_8, UInt<2>("h00")) @[Cat.scala 30:58]
    node hi_9 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_44 = cat(hi_9, UInt<2>("h01")) @[Cat.scala 30:58]
    node hi_10 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_45 = cat(hi_10, UInt<2>("h00")) @[Cat.scala 30:58]
    node hi_11 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_46 = cat(hi_11, UInt<2>("h01")) @[Cat.scala 30:58]
    node hi_12 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _T_47 = cat(hi_12, UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_48 = eq(_T_47, _T_35) @[Misc.scala 48:20]
    node _T_49 = mux(_T_48, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 34:9]
    node _T_50 = mux(_T_48, UInt<2>("h01"), UInt<1>("h00")) @[Misc.scala 34:36]
    node _T_51 = eq(_T_46, _T_35) @[Misc.scala 48:20]
    node _T_52 = mux(_T_51, UInt<1>("h00"), _T_49) @[Misc.scala 34:9]
    node _T_53 = mux(_T_51, UInt<2>("h02"), _T_50) @[Misc.scala 34:36]
    node _T_54 = eq(_T_45, _T_35) @[Misc.scala 48:20]
    node _T_55 = mux(_T_54, UInt<1>("h00"), _T_52) @[Misc.scala 34:9]
    node _T_56 = mux(_T_54, UInt<2>("h01"), _T_53) @[Misc.scala 34:36]
    node _T_57 = eq(_T_44, _T_35) @[Misc.scala 48:20]
    node _T_58 = mux(_T_57, UInt<1>("h00"), _T_55) @[Misc.scala 34:9]
    node _T_59 = mux(_T_57, UInt<2>("h02"), _T_56) @[Misc.scala 34:36]
    node _T_60 = eq(_T_43, _T_35) @[Misc.scala 48:20]
    node _T_61 = mux(_T_60, UInt<1>("h00"), _T_58) @[Misc.scala 34:9]
    node _T_62 = mux(_T_60, UInt<2>("h00"), _T_59) @[Misc.scala 34:36]
    node _T_63 = eq(_T_42, _T_35) @[Misc.scala 48:20]
    node _T_64 = mux(_T_63, UInt<1>("h01"), _T_61) @[Misc.scala 34:9]
    node _T_65 = mux(_T_63, UInt<2>("h03"), _T_62) @[Misc.scala 34:36]
    node _T_66 = eq(_T_41, _T_35) @[Misc.scala 48:20]
    node _T_67 = mux(_T_66, UInt<1>("h01"), _T_64) @[Misc.scala 34:9]
    node _T_68 = mux(_T_66, UInt<2>("h03"), _T_65) @[Misc.scala 34:36]
    node _T_69 = eq(_T_40, _T_35) @[Misc.scala 48:20]
    node _T_70 = mux(_T_69, UInt<1>("h01"), _T_67) @[Misc.scala 34:9]
    node _T_71 = mux(_T_69, UInt<2>("h02"), _T_68) @[Misc.scala 34:36]
    node _T_72 = eq(_T_39, _T_35) @[Misc.scala 48:20]
    node _T_73 = mux(_T_72, UInt<1>("h01"), _T_70) @[Misc.scala 34:9]
    node _T_74 = mux(_T_72, UInt<2>("h03"), _T_71) @[Misc.scala 34:36]
    node _T_75 = eq(_T_38, _T_35) @[Misc.scala 48:20]
    node _T_76 = mux(_T_75, UInt<1>("h01"), _T_73) @[Misc.scala 34:9]
    node _T_77 = mux(_T_75, UInt<2>("h01"), _T_74) @[Misc.scala 34:36]
    node _T_78 = eq(_T_37, _T_35) @[Misc.scala 48:20]
    node _T_79 = mux(_T_78, UInt<1>("h01"), _T_76) @[Misc.scala 34:9]
    node _T_80 = mux(_T_78, UInt<2>("h02"), _T_77) @[Misc.scala 34:36]
    node _T_81 = eq(_T_36, _T_35) @[Misc.scala 48:20]
    node s2_hit = mux(_T_81, UInt<1>("h01"), _T_79) @[Misc.scala 34:9]
    node s2_grow_param = mux(_T_81, UInt<2>("h03"), _T_80) @[Misc.scala 34:36]
    wire s2_new_hit_state : {state : UInt<2>} @[Metadata.scala 159:20]
    s2_new_hit_state is invalid @[Metadata.scala 159:20]
    s2_new_hit_state.state <= s2_grow_param @[Metadata.scala 160:16]
    node s2_data_uncorrected_lo_lo = bits(s2_data, 7, 0) @[package.scala 202:50]
    node s2_data_uncorrected_lo_hi = bits(s2_data, 15, 8) @[package.scala 202:50]
    node s2_data_uncorrected_hi_lo = bits(s2_data, 23, 16) @[package.scala 202:50]
    node s2_data_uncorrected_hi_hi = bits(s2_data, 31, 24) @[package.scala 202:50]
    node _s2_data_error_T = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 14:27]
    node _s2_data_error_T_1 = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 14:27]
    node _s2_data_error_T_2 = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 14:27]
    node _s2_data_error_T_3 = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 14:27]
    node _s2_data_error_T_4 = or(_s2_data_error_T, _s2_data_error_T_1) @[package.scala 72:59]
    node _s2_data_error_T_5 = or(_s2_data_error_T_4, _s2_data_error_T_2) @[package.scala 72:59]
    node s2_data_error = or(_s2_data_error_T_5, _s2_data_error_T_3) @[package.scala 72:59]
    node _s2_data_error_uncorrectable_T = or(UInt<1>("h00"), UInt<1>("h00")) @[package.scala 72:59]
    node _s2_data_error_uncorrectable_T_1 = or(_s2_data_error_uncorrectable_T, UInt<1>("h00")) @[package.scala 72:59]
    node s2_data_error_uncorrectable = or(_s2_data_error_uncorrectable_T_1, UInt<1>("h00")) @[package.scala 72:59]
    node s2_data_corrected_lo = cat(s2_data_uncorrected_lo_hi, s2_data_uncorrected_lo_lo) @[Cat.scala 30:58]
    node s2_data_corrected_hi = cat(s2_data_uncorrected_hi_hi, s2_data_uncorrected_hi_lo) @[Cat.scala 30:58]
    node s2_data_corrected = cat(s2_data_corrected_hi, s2_data_corrected_lo) @[Cat.scala 30:58]
    node s2_data_uncorrected_lo = cat(s2_data_uncorrected_lo_hi, s2_data_uncorrected_lo_lo) @[Cat.scala 30:58]
    node s2_data_uncorrected_hi = cat(s2_data_uncorrected_hi_hi, s2_data_uncorrected_hi_lo) @[Cat.scala 30:58]
    node s2_data_uncorrected = cat(s2_data_uncorrected_hi, s2_data_uncorrected_lo) @[Cat.scala 30:58]
    node _s2_valid_hit_maybe_flush_pre_data_ecc_and_waw_T = eq(s2_meta_error, UInt<1>("h00")) @[DCache.scala 369:74]
    node _s2_valid_hit_maybe_flush_pre_data_ecc_and_waw_T_1 = and(s2_valid_masked, _s2_valid_hit_maybe_flush_pre_data_ecc_and_waw_T) @[DCache.scala 369:71]
    node s2_valid_hit_maybe_flush_pre_data_ecc_and_waw = and(_s2_valid_hit_maybe_flush_pre_data_ecc_and_waw_T_1, s2_hit) @[DCache.scala 369:89]
    node _s2_valid_hit_pre_data_ecc_and_waw_T = and(s2_valid_hit_maybe_flush_pre_data_ecc_and_waw, s2_readwrite) @[DCache.scala 390:89]
    node _s2_valid_hit_pre_data_ecc_and_waw_T_1 = eq(UInt<1>("h00"), UInt<1>("h00")) @[DCache.scala 390:108]
    node s2_valid_hit_pre_data_ecc_and_waw = and(_s2_valid_hit_pre_data_ecc_and_waw_T, _s2_valid_hit_pre_data_ecc_and_waw_T_1) @[DCache.scala 390:105]
    node s2_valid_flush_line = and(s2_valid_hit_maybe_flush_pre_data_ecc_and_waw, s2_cmd_flush_line) @[DCache.scala 391:75]
    node _s2_valid_hit_pre_data_ecc_T = eq(s2_waw_hazard, UInt<1>("h00")) @[DCache.scala 392:73]
    node _s2_valid_hit_pre_data_ecc_T_1 = or(_s2_valid_hit_pre_data_ecc_T, s2_store_merge) @[DCache.scala 392:88]
    node s2_valid_hit_pre_data_ecc = and(s2_valid_hit_pre_data_ecc_and_waw, _s2_valid_hit_pre_data_ecc_T_1) @[DCache.scala 392:69]
    node s2_valid_data_error = and(s2_valid_hit_pre_data_ecc_and_waw, s2_data_error) @[DCache.scala 393:63]
    node _s2_valid_hit_T = eq(s2_data_error, UInt<1>("h00")) @[DCache.scala 394:51]
    node s2_valid_hit = and(s2_valid_hit_pre_data_ecc, _s2_valid_hit_T) @[DCache.scala 394:48]
    node _s2_valid_miss_T = and(s2_valid_masked, s2_readwrite) @[DCache.scala 395:39]
    node _s2_valid_miss_T_1 = eq(s2_meta_error, UInt<1>("h00")) @[DCache.scala 395:58]
    node _s2_valid_miss_T_2 = and(_s2_valid_miss_T, _s2_valid_miss_T_1) @[DCache.scala 395:55]
    node _s2_valid_miss_T_3 = eq(s2_hit, UInt<1>("h00")) @[DCache.scala 395:76]
    node s2_valid_miss = and(_s2_valid_miss_T_2, _s2_valid_miss_T_3) @[DCache.scala 395:73]
    node _s2_uncached_T = eq(s2_pma.cacheable, UInt<1>("h00")) @[DCache.scala 396:21]
    node _s2_uncached_T_1 = eq(s2_pma.must_alloc, UInt<1>("h00")) @[DCache.scala 396:61]
    node _s2_uncached_T_2 = and(s2_req.no_alloc, _s2_uncached_T_1) @[DCache.scala 396:58]
    node _s2_uncached_T_3 = eq(s2_hit_valid, UInt<1>("h00")) @[DCache.scala 396:83]
    node _s2_uncached_T_4 = and(_s2_uncached_T_2, _s2_uncached_T_3) @[DCache.scala 396:80]
    node s2_uncached = or(_s2_uncached_T, _s2_uncached_T_4) @[DCache.scala 396:39]
    node _s2_valid_cached_miss_T = eq(s2_uncached, UInt<1>("h00")) @[DCache.scala 397:47]
    node _s2_valid_cached_miss_T_1 = and(s2_valid_miss, _s2_valid_cached_miss_T) @[DCache.scala 397:44]
    node _s2_valid_cached_miss_T_2 = orr(uncachedInFlight[0]) @[DCache.scala 397:88]
    node _s2_valid_cached_miss_T_3 = eq(_s2_valid_cached_miss_T_2, UInt<1>("h00")) @[DCache.scala 397:63]
    node s2_valid_cached_miss = and(_s2_valid_cached_miss_T_1, _s2_valid_cached_miss_T_3) @[DCache.scala 397:60]
    node _s2_want_victimize_T = or(s2_valid_cached_miss, s2_valid_flush_line) @[DCache.scala 399:79]
    node _s2_want_victimize_T_1 = or(_s2_want_victimize_T, s2_valid_data_error) @[DCache.scala 399:102]
    node _s2_want_victimize_T_2 = or(_s2_want_victimize_T_1, s2_flush_valid) @[DCache.scala 399:125]
    node s2_want_victimize = and(UInt<1>("h00"), _s2_want_victimize_T_2) @[DCache.scala 399:54]
    node _s2_cannot_victimize_T = eq(s2_flush_valid, UInt<1>("h00")) @[DCache.scala 400:29]
    node s2_cannot_victimize = and(_s2_cannot_victimize_T, io.cpu.s2_kill) @[DCache.scala 400:45]
    node _s2_victimize_T = eq(s2_cannot_victimize, UInt<1>("h00")) @[DCache.scala 401:43]
    node s2_victimize = and(s2_want_victimize, _s2_victimize_T) @[DCache.scala 401:40]
    node _s2_valid_uncached_pending_T = and(s2_valid_miss, s2_uncached) @[DCache.scala 402:49]
    node _s2_valid_uncached_pending_T_1 = andr(uncachedInFlight[0]) @[DCache.scala 402:92]
    node _s2_valid_uncached_pending_T_2 = eq(_s2_valid_uncached_pending_T_1, UInt<1>("h00")) @[DCache.scala 402:67]
    node s2_valid_uncached_pending = and(_s2_valid_uncached_pending_T, _s2_valid_uncached_pending_T_2) @[DCache.scala 402:64]
    node _s2_victim_way_T = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 403:77]
    reg s2_victim_way_r : UInt, gated_clock @[Reg.scala 15:16]
    when _s2_victim_way_T : @[Reg.scala 16:19]
      s2_victim_way_r <= s1_victim_way @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node s2_victim_way = dshl(UInt<1>("h01"), s2_victim_way_r) @[OneHot.scala 58:35]
    node s2_victim_or_hit_way = mux(s2_hit_valid, s2_hit_way, s2_victim_way) @[DCache.scala 404:33]
    node _s2_victim_tag_T = or(s2_valid_data_error, s2_valid_flush_line) @[DCache.scala 405:47]
    node _s2_victim_tag_T_1 = bits(s2_req.addr, 31, 14) @[DCache.scala 405:82]
    node _s2_victim_tag_T_2 = bits(s2_victim_way, 0, 0) @[Mux.scala 29:36]
    node s2_victim_tag = mux(_s2_victim_tag_T, _s2_victim_tag_T_1, s2_meta_corrected_0.tag) @[DCache.scala 405:26]
    node _s2_victim_state_T = bits(s2_victim_way, 0, 0) @[Mux.scala 29:36]
    node s2_victim_state = mux(s2_hit_valid, s2_hit_state, s2_meta_corrected_0.coh) @[DCache.scala 406:28]
    node _T_82 = cat(probe_bits.param, s2_probe_state.state) @[Cat.scala 30:58]
    node _T_83 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_84 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_85 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_86 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_87 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_88 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_89 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_90 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_91 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_92 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_93 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_94 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_95 = eq(_T_94, _T_82) @[Misc.scala 55:20]
    node _T_96 = mux(_T_95, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 37:9]
    node _T_97 = mux(_T_95, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 37:36]
    node _T_98 = mux(_T_95, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 37:63]
    node _T_99 = eq(_T_93, _T_82) @[Misc.scala 55:20]
    node _T_100 = mux(_T_99, UInt<1>("h00"), _T_96) @[Misc.scala 37:9]
    node _T_101 = mux(_T_99, UInt<3>("h02"), _T_97) @[Misc.scala 37:36]
    node _T_102 = mux(_T_99, UInt<2>("h00"), _T_98) @[Misc.scala 37:63]
    node _T_103 = eq(_T_92, _T_82) @[Misc.scala 55:20]
    node _T_104 = mux(_T_103, UInt<1>("h00"), _T_100) @[Misc.scala 37:9]
    node _T_105 = mux(_T_103, UInt<3>("h01"), _T_101) @[Misc.scala 37:36]
    node _T_106 = mux(_T_103, UInt<2>("h00"), _T_102) @[Misc.scala 37:63]
    node _T_107 = eq(_T_91, _T_82) @[Misc.scala 55:20]
    node _T_108 = mux(_T_107, UInt<1>("h01"), _T_104) @[Misc.scala 37:9]
    node _T_109 = mux(_T_107, UInt<3>("h01"), _T_105) @[Misc.scala 37:36]
    node _T_110 = mux(_T_107, UInt<2>("h00"), _T_106) @[Misc.scala 37:63]
    node _T_111 = eq(_T_90, _T_82) @[Misc.scala 55:20]
    node _T_112 = mux(_T_111, UInt<1>("h00"), _T_108) @[Misc.scala 37:9]
    node _T_113 = mux(_T_111, UInt<3>("h05"), _T_109) @[Misc.scala 37:36]
    node _T_114 = mux(_T_111, UInt<2>("h00"), _T_110) @[Misc.scala 37:63]
    node _T_115 = eq(_T_89, _T_82) @[Misc.scala 55:20]
    node _T_116 = mux(_T_115, UInt<1>("h00"), _T_112) @[Misc.scala 37:9]
    node _T_117 = mux(_T_115, UInt<3>("h04"), _T_113) @[Misc.scala 37:36]
    node _T_118 = mux(_T_115, UInt<2>("h01"), _T_114) @[Misc.scala 37:63]
    node _T_119 = eq(_T_88, _T_82) @[Misc.scala 55:20]
    node _T_120 = mux(_T_119, UInt<1>("h00"), _T_116) @[Misc.scala 37:9]
    node _T_121 = mux(_T_119, UInt<3>("h00"), _T_117) @[Misc.scala 37:36]
    node _T_122 = mux(_T_119, UInt<2>("h01"), _T_118) @[Misc.scala 37:63]
    node _T_123 = eq(_T_87, _T_82) @[Misc.scala 55:20]
    node _T_124 = mux(_T_123, UInt<1>("h01"), _T_120) @[Misc.scala 37:9]
    node _T_125 = mux(_T_123, UInt<3>("h00"), _T_121) @[Misc.scala 37:36]
    node _T_126 = mux(_T_123, UInt<2>("h01"), _T_122) @[Misc.scala 37:63]
    node _T_127 = eq(_T_86, _T_82) @[Misc.scala 55:20]
    node _T_128 = mux(_T_127, UInt<1>("h00"), _T_124) @[Misc.scala 37:9]
    node _T_129 = mux(_T_127, UInt<3>("h05"), _T_125) @[Misc.scala 37:36]
    node _T_130 = mux(_T_127, UInt<2>("h00"), _T_126) @[Misc.scala 37:63]
    node _T_131 = eq(_T_85, _T_82) @[Misc.scala 55:20]
    node _T_132 = mux(_T_131, UInt<1>("h00"), _T_128) @[Misc.scala 37:9]
    node _T_133 = mux(_T_131, UInt<3>("h04"), _T_129) @[Misc.scala 37:36]
    node _T_134 = mux(_T_131, UInt<2>("h01"), _T_130) @[Misc.scala 37:63]
    node _T_135 = eq(_T_84, _T_82) @[Misc.scala 55:20]
    node _T_136 = mux(_T_135, UInt<1>("h00"), _T_132) @[Misc.scala 37:9]
    node _T_137 = mux(_T_135, UInt<3>("h03"), _T_133) @[Misc.scala 37:36]
    node _T_138 = mux(_T_135, UInt<2>("h02"), _T_134) @[Misc.scala 37:63]
    node _T_139 = eq(_T_83, _T_82) @[Misc.scala 55:20]
    node s2_prb_ack_data = mux(_T_139, UInt<1>("h01"), _T_136) @[Misc.scala 37:9]
    node s2_report_param = mux(_T_139, UInt<3>("h03"), _T_137) @[Misc.scala 37:36]
    node _T_140 = mux(_T_139, UInt<2>("h02"), _T_138) @[Misc.scala 37:63]
    wire probeNewCoh : {state : UInt<2>} @[Metadata.scala 159:20]
    probeNewCoh is invalid @[Metadata.scala 159:20]
    probeNewCoh.state <= _T_140 @[Metadata.scala 160:16]
    node _T_141 = eq(UInt<5>("h010"), UInt<5>("h010")) @[Mux.scala 80:60]
    node _T_142 = mux(_T_141, UInt<2>("h02"), UInt<2>("h02")) @[Mux.scala 80:57]
    node _T_143 = eq(UInt<5>("h012"), UInt<5>("h010")) @[Mux.scala 80:60]
    node _T_144 = mux(_T_143, UInt<2>("h01"), _T_142) @[Mux.scala 80:57]
    node _T_145 = eq(UInt<5>("h013"), UInt<5>("h010")) @[Mux.scala 80:60]
    node hi_13 = mux(_T_145, UInt<2>("h00"), _T_144) @[Mux.scala 80:57]
    node _T_146 = cat(hi_13, s2_victim_state.state) @[Cat.scala 30:58]
    node _T_147 = cat(UInt<2>("h00"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_148 = cat(UInt<2>("h00"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_149 = cat(UInt<2>("h00"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_150 = cat(UInt<2>("h00"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_151 = cat(UInt<2>("h01"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_152 = cat(UInt<2>("h01"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_153 = cat(UInt<2>("h01"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_154 = cat(UInt<2>("h01"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_155 = cat(UInt<2>("h02"), UInt<2>("h03")) @[Cat.scala 30:58]
    node _T_156 = cat(UInt<2>("h02"), UInt<2>("h02")) @[Cat.scala 30:58]
    node _T_157 = cat(UInt<2>("h02"), UInt<2>("h01")) @[Cat.scala 30:58]
    node _T_158 = cat(UInt<2>("h02"), UInt<2>("h00")) @[Cat.scala 30:58]
    node _T_159 = eq(_T_158, _T_146) @[Misc.scala 55:20]
    node _T_160 = mux(_T_159, UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 37:9]
    node _T_161 = mux(_T_159, UInt<3>("h05"), UInt<1>("h00")) @[Misc.scala 37:36]
    node _T_162 = mux(_T_159, UInt<2>("h00"), UInt<1>("h00")) @[Misc.scala 37:63]
    node _T_163 = eq(_T_157, _T_146) @[Misc.scala 55:20]
    node _T_164 = mux(_T_163, UInt<1>("h00"), _T_160) @[Misc.scala 37:9]
    node _T_165 = mux(_T_163, UInt<3>("h02"), _T_161) @[Misc.scala 37:36]
    node _T_166 = mux(_T_163, UInt<2>("h00"), _T_162) @[Misc.scala 37:63]
    node _T_167 = eq(_T_156, _T_146) @[Misc.scala 55:20]
    node _T_168 = mux(_T_167, UInt<1>("h00"), _T_164) @[Misc.scala 37:9]
    node _T_169 = mux(_T_167, UInt<3>("h01"), _T_165) @[Misc.scala 37:36]
    node _T_170 = mux(_T_167, UInt<2>("h00"), _T_166) @[Misc.scala 37:63]
    node _T_171 = eq(_T_155, _T_146) @[Misc.scala 55:20]
    node _T_172 = mux(_T_171, UInt<1>("h01"), _T_168) @[Misc.scala 37:9]
    node _T_173 = mux(_T_171, UInt<3>("h01"), _T_169) @[Misc.scala 37:36]
    node _T_174 = mux(_T_171, UInt<2>("h00"), _T_170) @[Misc.scala 37:63]
    node _T_175 = eq(_T_154, _T_146) @[Misc.scala 55:20]
    node _T_176 = mux(_T_175, UInt<1>("h00"), _T_172) @[Misc.scala 37:9]
    node _T_177 = mux(_T_175, UInt<3>("h05"), _T_173) @[Misc.scala 37:36]
    node _T_178 = mux(_T_175, UInt<2>("h00"), _T_174) @[Misc.scala 37:63]
    node _T_179 = eq(_T_153, _T_146) @[Misc.scala 55:20]
    node _T_180 = mux(_T_179, UInt<1>("h00"), _T_176) @[Misc.scala 37:9]
    node _T_181 = mux(_T_179, UInt<3>("h04"), _T_177) @[Misc.scala 37:36]
    node _T_182 = mux(_T_179, UInt<2>("h01"), _T_178) @[Misc.scala 37:63]
    node _T_183 = eq(_T_152, _T_146) @[Misc.scala 55:20]
    node _T_184 = mux(_T_183, UInt<1>("h00"), _T_180) @[Misc.scala 37:9]
    node _T_185 = mux(_T_183, UInt<3>("h00"), _T_181) @[Misc.scala 37:36]
    node _T_186 = mux(_T_183, UInt<2>("h01"), _T_182) @[Misc.scala 37:63]
    node _T_187 = eq(_T_151, _T_146) @[Misc.scala 55:20]
    node _T_188 = mux(_T_187, UInt<1>("h01"), _T_184) @[Misc.scala 37:9]
    node _T_189 = mux(_T_187, UInt<3>("h00"), _T_185) @[Misc.scala 37:36]
    node _T_190 = mux(_T_187, UInt<2>("h01"), _T_186) @[Misc.scala 37:63]
    node _T_191 = eq(_T_150, _T_146) @[Misc.scala 55:20]
    node _T_192 = mux(_T_191, UInt<1>("h00"), _T_188) @[Misc.scala 37:9]
    node _T_193 = mux(_T_191, UInt<3>("h05"), _T_189) @[Misc.scala 37:36]
    node _T_194 = mux(_T_191, UInt<2>("h00"), _T_190) @[Misc.scala 37:63]
    node _T_195 = eq(_T_149, _T_146) @[Misc.scala 55:20]
    node _T_196 = mux(_T_195, UInt<1>("h00"), _T_192) @[Misc.scala 37:9]
    node _T_197 = mux(_T_195, UInt<3>("h04"), _T_193) @[Misc.scala 37:36]
    node _T_198 = mux(_T_195, UInt<2>("h01"), _T_194) @[Misc.scala 37:63]
    node _T_199 = eq(_T_148, _T_146) @[Misc.scala 55:20]
    node _T_200 = mux(_T_199, UInt<1>("h00"), _T_196) @[Misc.scala 37:9]
    node _T_201 = mux(_T_199, UInt<3>("h03"), _T_197) @[Misc.scala 37:36]
    node _T_202 = mux(_T_199, UInt<2>("h02"), _T_198) @[Misc.scala 37:63]
    node _T_203 = eq(_T_147, _T_146) @[Misc.scala 55:20]
    node s2_victim_dirty = mux(_T_203, UInt<1>("h01"), _T_200) @[Misc.scala 37:9]
    node s2_shrink_param = mux(_T_203, UInt<3>("h03"), _T_201) @[Misc.scala 37:36]
    node _T_204 = mux(_T_203, UInt<2>("h02"), _T_202) @[Misc.scala 37:63]
    wire voluntaryNewCoh : {state : UInt<2>} @[Metadata.scala 159:20]
    voluntaryNewCoh is invalid @[Metadata.scala 159:20]
    voluntaryNewCoh.state <= _T_204 @[Metadata.scala 160:16]
    node _s2_update_meta_T = eq(s2_hit_state.state, s2_new_hit_state.state) @[Metadata.scala 45:46]
    node s2_update_meta = eq(_s2_update_meta_T, UInt<1>("h00")) @[Metadata.scala 46:40]
    node s2_dont_nack_uncached = and(s2_valid_uncached_pending, tl_out_a.ready) @[DCache.scala 412:57]
    node _s2_dont_nack_misc_T = eq(s2_meta_error, UInt<1>("h00")) @[DCache.scala 413:46]
    node _s2_dont_nack_misc_T_1 = and(s2_valid_masked, _s2_dont_nack_misc_T) @[DCache.scala 413:43]
    node _s2_dont_nack_misc_T_2 = and(UInt<1>("h00"), s2_cmd_flush_all) @[DCache.scala 414:21]
    node _s2_dont_nack_misc_T_3 = and(_s2_dont_nack_misc_T_2, flushed) @[DCache.scala 414:41]
    node _s2_dont_nack_misc_T_4 = eq(flushing, UInt<1>("h00")) @[DCache.scala 414:55]
    node _s2_dont_nack_misc_T_5 = and(_s2_dont_nack_misc_T_3, _s2_dont_nack_misc_T_4) @[DCache.scala 414:52]
    node _s2_dont_nack_misc_T_6 = and(UInt<1>("h00"), s2_cmd_flush_line) @[DCache.scala 415:21]
    node _s2_dont_nack_misc_T_7 = eq(s2_hit, UInt<1>("h00")) @[DCache.scala 415:45]
    node _s2_dont_nack_misc_T_8 = and(_s2_dont_nack_misc_T_6, _s2_dont_nack_misc_T_7) @[DCache.scala 415:42]
    node _s2_dont_nack_misc_T_9 = or(_s2_dont_nack_misc_T_5, _s2_dont_nack_misc_T_8) @[DCache.scala 414:65]
    node _s2_dont_nack_misc_T_10 = eq(s2_req.cmd, UInt<5>("h017")) @[DCache.scala 416:17]
    node _s2_dont_nack_misc_T_11 = or(_s2_dont_nack_misc_T_9, _s2_dont_nack_misc_T_10) @[DCache.scala 415:53]
    node s2_dont_nack_misc = and(_s2_dont_nack_misc_T_1, _s2_dont_nack_misc_T_11) @[DCache.scala 413:61]
    node _io_cpu_s2_nack_T = eq(s2_dont_nack_uncached, UInt<1>("h00")) @[DCache.scala 417:41]
    node _io_cpu_s2_nack_T_1 = and(s2_valid_no_xcpt, _io_cpu_s2_nack_T) @[DCache.scala 417:38]
    node _io_cpu_s2_nack_T_2 = eq(s2_dont_nack_misc, UInt<1>("h00")) @[DCache.scala 417:67]
    node _io_cpu_s2_nack_T_3 = and(_io_cpu_s2_nack_T_1, _io_cpu_s2_nack_T_2) @[DCache.scala 417:64]
    node _io_cpu_s2_nack_T_4 = eq(s2_valid_hit, UInt<1>("h00")) @[DCache.scala 417:89]
    node _io_cpu_s2_nack_T_5 = and(_io_cpu_s2_nack_T_3, _io_cpu_s2_nack_T_4) @[DCache.scala 417:86]
    io.cpu.s2_nack <= _io_cpu_s2_nack_T_5 @[DCache.scala 417:18]
    node _T_205 = and(s2_valid_hit_pre_data_ecc_and_waw, s2_update_meta) @[DCache.scala 418:62]
    node _T_206 = or(io.cpu.s2_nack, _T_205) @[DCache.scala 418:24]
    when _T_206 : @[DCache.scala 418:82]
      s1_nack <= UInt<1>("h01") @[DCache.scala 418:92]
      skip @[DCache.scala 418:82]
    node _s2_first_meta_corrected_T = bits(s2_meta_correctable_errors, 0, 0) @[Mux.scala 49:83]
    node _metaArb_io_in_1_valid_T = or(s2_valid_masked, s2_flush_valid_pre_tag_ecc) @[DCache.scala 422:63]
    node _metaArb_io_in_1_valid_T_1 = or(_metaArb_io_in_1_valid_T, s2_probe) @[DCache.scala 422:93]
    node _metaArb_io_in_1_valid_T_2 = and(s2_meta_error, _metaArb_io_in_1_valid_T_1) @[DCache.scala 422:43]
    metaArb.io.in[1].valid <= _metaArb_io_in_1_valid_T_2 @[DCache.scala 422:26]
    metaArb.io.in[1].bits.write <= UInt<1>("h01") @[DCache.scala 423:31]
    node _metaArb_io_in_1_bits_way_en_T = bits(s2_meta_correctable_errors, 0, 0) @[OneHot.scala 85:71]
    node _metaArb_io_in_1_bits_way_en_T_1 = mux(_metaArb_io_in_1_bits_way_en_T, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 47:69]
    node _metaArb_io_in_1_bits_way_en_T_2 = mux(s2_meta_error_uncorrectable, UInt<1>("h00"), _metaArb_io_in_1_bits_way_en_T_1) @[DCache.scala 424:69]
    node _metaArb_io_in_1_bits_way_en_T_3 = or(s2_meta_uncorrectable_errors, _metaArb_io_in_1_bits_way_en_T_2) @[DCache.scala 424:64]
    metaArb.io.in[1].bits.way_en <= _metaArb_io_in_1_bits_way_en_T_3 @[DCache.scala 424:32]
    node _metaArb_io_in_1_bits_idx_T = bits(probe_bits.address, 13, 6) @[DCache.scala 1170:47]
    node _metaArb_io_in_1_bits_idx_T_1 = bits(s2_vaddr, 13, 6) @[DCache.scala 425:76]
    node _metaArb_io_in_1_bits_idx_T_2 = mux(s2_probe, _metaArb_io_in_1_bits_idx_T, _metaArb_io_in_1_bits_idx_T_1) @[DCache.scala 425:35]
    metaArb.io.in[1].bits.idx <= _metaArb_io_in_1_bits_idx_T_2 @[DCache.scala 425:29]
    node metaArb_io_in_1_bits_addr_hi = shr(io.cpu.req.bits.addr, 14) @[DCache.scala 426:58]
    node metaArb_io_in_1_bits_addr_lo = shl(metaArb.io.in[1].bits.idx, 6) @[DCache.scala 426:98]
    node _metaArb_io_in_1_bits_addr_T = cat(metaArb_io_in_1_bits_addr_hi, metaArb_io_in_1_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io.in[1].bits.addr <= _metaArb_io_in_1_bits_addr_T @[DCache.scala 426:30]
    wire new_meta : {coh : {state : UInt<2>}, tag : UInt<18>}
    new_meta is invalid
    new_meta <- s2_meta_corrected_0
    when s2_meta_error_uncorrectable : @[DCache.scala 429:40]
      wire metaArb_io_in_1_bits_data_new_meta_coh_meta : {state : UInt<2>} @[Metadata.scala 159:20]
      metaArb_io_in_1_bits_data_new_meta_coh_meta is invalid @[Metadata.scala 159:20]
      metaArb_io_in_1_bits_data_new_meta_coh_meta.state <= UInt<2>("h00") @[Metadata.scala 160:16]
      new_meta.coh <- metaArb_io_in_1_bits_data_new_meta_coh_meta @[DCache.scala 429:55]
      skip @[DCache.scala 429:40]
    node _metaArb_io_in_1_bits_data_T = cat(new_meta.coh.state, new_meta.tag) @[DCache.scala 430:14]
    metaArb.io.in[1].bits.data <= _metaArb_io_in_1_bits_data_T @[DCache.scala 427:30]
    node _metaArb_io_in_2_valid_T = and(s2_valid_hit_pre_data_ecc_and_waw, s2_update_meta) @[DCache.scala 434:63]
    metaArb.io.in[2].valid <= _metaArb_io_in_2_valid_T @[DCache.scala 434:26]
    node _metaArb_io_in_2_bits_write_T = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 435:34]
    metaArb.io.in[2].bits.write <= _metaArb_io_in_2_bits_write_T @[DCache.scala 435:31]
    metaArb.io.in[2].bits.way_en <= s2_victim_or_hit_way @[DCache.scala 436:32]
    node _metaArb_io_in_2_bits_idx_T = bits(s2_vaddr, 13, 6) @[DCache.scala 437:40]
    metaArb.io.in[2].bits.idx <= _metaArb_io_in_2_bits_idx_T @[DCache.scala 437:29]
    node metaArb_io_in_2_bits_addr_hi = shr(io.cpu.req.bits.addr, 14) @[DCache.scala 438:58]
    node metaArb_io_in_2_bits_addr_lo = bits(s2_vaddr, 13, 0) @[DCache.scala 438:80]
    node _metaArb_io_in_2_bits_addr_T = cat(metaArb_io_in_2_bits_addr_hi, metaArb_io_in_2_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io.in[2].bits.addr <= _metaArb_io_in_2_bits_addr_T @[DCache.scala 438:30]
    node _metaArb_io_in_2_bits_data_T = shr(s2_req.addr, 14) @[DCache.scala 439:68]
    wire metaArb_io_in_2_bits_data_meta : {coh : {state : UInt<2>}, tag : UInt<18>} @[HellaCache.scala 289:20]
    metaArb_io_in_2_bits_data_meta is invalid @[HellaCache.scala 289:20]
    metaArb_io_in_2_bits_data_meta.tag <= _metaArb_io_in_2_bits_data_T @[HellaCache.scala 290:14]
    metaArb_io_in_2_bits_data_meta.coh <- s2_new_hit_state @[HellaCache.scala 291:14]
    node _metaArb_io_in_2_bits_data_T_1 = cat(metaArb_io_in_2_bits_data_meta.coh.state, metaArb_io_in_2_bits_data_meta.tag) @[DCache.scala 439:97]
    metaArb.io.in[2].bits.data <= _metaArb_io_in_2_bits_data_T_1 @[DCache.scala 439:30]
    node _s2_lr_T = eq(s2_req.cmd, UInt<3>("h06")) @[DCache.scala 442:72]
    node s2_lr = and(UInt<1>("h00"), _s2_lr_T) @[DCache.scala 442:58]
    node _s2_sc_T = eq(s2_req.cmd, UInt<3>("h07")) @[DCache.scala 443:72]
    node s2_sc = and(UInt<1>("h00"), _s2_sc_T) @[DCache.scala 443:58]
    reg lrscCount : UInt, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 444:22]
    node lrscValid = gt(lrscCount, UInt<2>("h03")) @[DCache.scala 445:29]
    node _lrscBackingOff_T = gt(lrscCount, UInt<1>("h00")) @[DCache.scala 446:34]
    node _lrscBackingOff_T_1 = eq(lrscValid, UInt<1>("h00")) @[DCache.scala 446:41]
    node lrscBackingOff = and(_lrscBackingOff_T, _lrscBackingOff_T_1) @[DCache.scala 446:38]
    reg lrscAddr : UInt, gated_clock @[DCache.scala 447:21]
    node _lrscAddrMatch_T = shr(s2_req.addr, 6) @[DCache.scala 448:49]
    node lrscAddrMatch = eq(lrscAddr, _lrscAddrMatch_T) @[DCache.scala 448:32]
    node _s2_sc_fail_T = and(lrscValid, lrscAddrMatch) @[DCache.scala 449:41]
    node _s2_sc_fail_T_1 = eq(_s2_sc_fail_T, UInt<1>("h00")) @[DCache.scala 449:29]
    node s2_sc_fail = and(s2_sc, _s2_sc_fail_T_1) @[DCache.scala 449:26]
    node _T_207 = and(s2_valid_hit, s2_lr) @[DCache.scala 450:23]
    node _T_208 = eq(cached_grant_wait, UInt<1>("h00")) @[DCache.scala 450:35]
    node _T_209 = and(_T_207, _T_208) @[DCache.scala 450:32]
    node _T_210 = or(_T_209, s2_valid_cached_miss) @[DCache.scala 450:54]
    node _T_211 = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 450:82]
    node _T_212 = and(_T_210, _T_211) @[DCache.scala 450:79]
    when _T_212 : @[DCache.scala 450:99]
      node _lrscCount_T = mux(s2_hit, UInt<7>("h04f"), UInt<1>("h00")) @[DCache.scala 451:21]
      lrscCount <= _lrscCount_T @[DCache.scala 451:15]
      node _lrscAddr_T = shr(s2_req.addr, 6) @[DCache.scala 452:29]
      lrscAddr <= _lrscAddr_T @[DCache.scala 452:14]
      skip @[DCache.scala 450:99]
    node _T_213 = gt(lrscCount, UInt<1>("h00")) @[DCache.scala 454:19]
    when _T_213 : @[DCache.scala 454:24]
      node _lrscCount_T_1 = sub(lrscCount, UInt<1>("h01")) @[DCache.scala 454:49]
      node _lrscCount_T_2 = tail(_lrscCount_T_1, 1) @[DCache.scala 454:49]
      lrscCount <= _lrscCount_T_2 @[DCache.scala 454:36]
      skip @[DCache.scala 454:24]
    node _T_214 = and(s2_valid_not_killed, lrscValid) @[DCache.scala 455:29]
    when _T_214 : @[DCache.scala 455:43]
      lrscCount <= UInt<2>("h03") @[DCache.scala 455:55]
      skip @[DCache.scala 455:43]
    when s1_probe : @[DCache.scala 456:19]
      lrscCount <= UInt<1>("h00") @[DCache.scala 456:31]
      skip @[DCache.scala 456:19]
    node _s2_correct_T = eq(any_pstore_valid, UInt<1>("h00")) @[DCache.scala 459:37]
    node _s2_correct_T_1 = and(s2_data_error, _s2_correct_T) @[DCache.scala 459:34]
    reg s2_correct_REG : UInt<1>, gated_clock @[DCache.scala 459:66]
    s2_correct_REG <= any_pstore_valid @[DCache.scala 459:66]
    node _s2_correct_T_2 = eq(s2_correct_REG, UInt<1>("h00")) @[DCache.scala 459:58]
    node _s2_correct_T_3 = and(_s2_correct_T_1, _s2_correct_T_2) @[DCache.scala 459:55]
    node s2_correct = and(_s2_correct_T_3, UInt<1>("h01")) @[DCache.scala 459:85]
    node _s2_valid_correct_T = and(s2_valid_hit_pre_data_ecc_and_waw, s2_correct) @[DCache.scala 461:60]
    node _s2_valid_correct_T_1 = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 461:77]
    node s2_valid_correct = and(_s2_valid_correct_T, _s2_valid_correct_T_1) @[DCache.scala 461:74]
    node _pstore1_cmd_T = and(s1_valid_not_nacked, s1_write) @[DCache.scala 464:63]
    reg pstore1_cmd : UInt<5>, gated_clock @[Reg.scala 15:16]
    when _pstore1_cmd_T : @[Reg.scala 16:19]
      pstore1_cmd <= s1_req.cmd @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore1_addr_T = and(s1_valid_not_nacked, s1_write) @[DCache.scala 465:62]
    reg pstore1_addr : UInt<32>, gated_clock @[Reg.scala 15:16]
    when _pstore1_addr_T : @[Reg.scala 16:19]
      pstore1_addr <= s1_vaddr @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore1_data_T = and(s1_valid_not_nacked, s1_write) @[DCache.scala 466:73]
    reg pstore1_data : UInt<32>, gated_clock @[Reg.scala 15:16]
    when _pstore1_data_T : @[Reg.scala 16:19]
      pstore1_data <= io.cpu.s1_data.data @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore1_way_T = and(s1_valid_not_nacked, s1_write) @[DCache.scala 467:63]
    reg pstore1_way : UInt<1>, gated_clock @[Reg.scala 15:16]
    when _pstore1_way_T : @[Reg.scala 16:19]
      pstore1_way <= inScratchpad @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore1_mask_T = and(s1_valid_not_nacked, s1_write) @[DCache.scala 468:61]
    reg pstore1_mask : UInt<4>, gated_clock @[Reg.scala 15:16]
    when _pstore1_mask_T : @[Reg.scala 16:19]
      pstore1_mask <= s1_mask @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    wire pstore1_storegen_data : UInt
    pstore1_storegen_data is invalid
    pstore1_storegen_data <= pstore1_data
    node _pstore1_rmw_T = eq(s1_req.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _pstore1_rmw_T_1 = eq(s1_req.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _pstore1_rmw_T_2 = or(_pstore1_rmw_T, _pstore1_rmw_T_1) @[Consts.scala 81:41]
    node _pstore1_rmw_T_3 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _pstore1_rmw_T_4 = or(_pstore1_rmw_T_2, _pstore1_rmw_T_3) @[Consts.scala 81:58]
    node _pstore1_rmw_T_5 = eq(s1_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _pstore1_rmw_T_6 = eq(s1_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _pstore1_rmw_T_7 = eq(s1_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _pstore1_rmw_T_8 = eq(s1_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _pstore1_rmw_T_9 = or(_pstore1_rmw_T_5, _pstore1_rmw_T_6) @[package.scala 72:59]
    node _pstore1_rmw_T_10 = or(_pstore1_rmw_T_9, _pstore1_rmw_T_7) @[package.scala 72:59]
    node _pstore1_rmw_T_11 = or(_pstore1_rmw_T_10, _pstore1_rmw_T_8) @[package.scala 72:59]
    node _pstore1_rmw_T_12 = eq(s1_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _pstore1_rmw_T_13 = eq(s1_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _pstore1_rmw_T_14 = eq(s1_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _pstore1_rmw_T_15 = eq(s1_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _pstore1_rmw_T_16 = eq(s1_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _pstore1_rmw_T_17 = or(_pstore1_rmw_T_12, _pstore1_rmw_T_13) @[package.scala 72:59]
    node _pstore1_rmw_T_18 = or(_pstore1_rmw_T_17, _pstore1_rmw_T_14) @[package.scala 72:59]
    node _pstore1_rmw_T_19 = or(_pstore1_rmw_T_18, _pstore1_rmw_T_15) @[package.scala 72:59]
    node _pstore1_rmw_T_20 = or(_pstore1_rmw_T_19, _pstore1_rmw_T_16) @[package.scala 72:59]
    node _pstore1_rmw_T_21 = or(_pstore1_rmw_T_11, _pstore1_rmw_T_20) @[Consts.scala 79:44]
    node _pstore1_rmw_T_22 = or(_pstore1_rmw_T_4, _pstore1_rmw_T_21) @[Consts.scala 81:75]
    node _pstore1_rmw_T_23 = eq(s1_req.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _pstore1_rmw_T_24 = eq(s1_req.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _pstore1_rmw_T_25 = or(_pstore1_rmw_T_23, _pstore1_rmw_T_24) @[Consts.scala 82:42]
    node _pstore1_rmw_T_26 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _pstore1_rmw_T_27 = or(_pstore1_rmw_T_25, _pstore1_rmw_T_26) @[Consts.scala 82:59]
    node _pstore1_rmw_T_28 = eq(s1_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _pstore1_rmw_T_29 = eq(s1_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _pstore1_rmw_T_30 = eq(s1_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _pstore1_rmw_T_31 = eq(s1_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _pstore1_rmw_T_32 = or(_pstore1_rmw_T_28, _pstore1_rmw_T_29) @[package.scala 72:59]
    node _pstore1_rmw_T_33 = or(_pstore1_rmw_T_32, _pstore1_rmw_T_30) @[package.scala 72:59]
    node _pstore1_rmw_T_34 = or(_pstore1_rmw_T_33, _pstore1_rmw_T_31) @[package.scala 72:59]
    node _pstore1_rmw_T_35 = eq(s1_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _pstore1_rmw_T_36 = eq(s1_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _pstore1_rmw_T_37 = eq(s1_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _pstore1_rmw_T_38 = eq(s1_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _pstore1_rmw_T_39 = eq(s1_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _pstore1_rmw_T_40 = or(_pstore1_rmw_T_35, _pstore1_rmw_T_36) @[package.scala 72:59]
    node _pstore1_rmw_T_41 = or(_pstore1_rmw_T_40, _pstore1_rmw_T_37) @[package.scala 72:59]
    node _pstore1_rmw_T_42 = or(_pstore1_rmw_T_41, _pstore1_rmw_T_38) @[package.scala 72:59]
    node _pstore1_rmw_T_43 = or(_pstore1_rmw_T_42, _pstore1_rmw_T_39) @[package.scala 72:59]
    node _pstore1_rmw_T_44 = or(_pstore1_rmw_T_34, _pstore1_rmw_T_43) @[Consts.scala 79:44]
    node _pstore1_rmw_T_45 = or(_pstore1_rmw_T_27, _pstore1_rmw_T_44) @[Consts.scala 82:76]
    node _pstore1_rmw_T_46 = eq(s1_req.cmd, UInt<5>("h011")) @[DCache.scala 1161:35]
    node _pstore1_rmw_T_47 = lt(s1_req.size, UInt<1>("h00")) @[DCache.scala 1161:57]
    node _pstore1_rmw_T_48 = or(_pstore1_rmw_T_46, _pstore1_rmw_T_47) @[DCache.scala 1161:45]
    node _pstore1_rmw_T_49 = and(_pstore1_rmw_T_45, _pstore1_rmw_T_48) @[DCache.scala 1161:23]
    node _pstore1_rmw_T_50 = or(_pstore1_rmw_T_22, _pstore1_rmw_T_49) @[DCache.scala 1160:21]
    node _pstore1_rmw_T_51 = and(s1_valid_not_nacked, s1_write) @[DCache.scala 470:88]
    reg pstore1_rmw_r : UInt<1>, gated_clock @[Reg.scala 15:16]
    when _pstore1_rmw_T_51 : @[Reg.scala 16:19]
      pstore1_rmw_r <= _pstore1_rmw_T_50 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node pstore1_rmw = and(UInt<1>("h01"), pstore1_rmw_r) @[DCache.scala 470:36]
    node _pstore1_merge_likely_T = and(s2_valid_not_nacked_in_s1, s2_write) @[DCache.scala 471:56]
    node pstore1_merge_likely = and(_pstore1_merge_likely_T, s2_store_merge) @[DCache.scala 471:68]
    node _pstore1_merge_T = and(s2_valid_hit, s2_write) @[DCache.scala 462:46]
    node _pstore1_merge_T_1 = eq(s2_sc_fail, UInt<1>("h00")) @[DCache.scala 462:61]
    node _pstore1_merge_T_2 = and(_pstore1_merge_T, _pstore1_merge_T_1) @[DCache.scala 462:58]
    node _pstore1_merge_T_3 = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 463:51]
    node _pstore1_merge_T_4 = and(_pstore1_merge_T_2, _pstore1_merge_T_3) @[DCache.scala 463:48]
    node pstore1_merge = and(_pstore1_merge_T_4, s2_store_merge) @[DCache.scala 472:38]
    reg pstore2_valid : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 473:30]
    node _pstore_drain_opportunistic_res_T = eq(io.cpu.req.bits.cmd, UInt<1>("h01")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_res_T_1 = eq(io.cpu.req.bits.cmd, UInt<2>("h03")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_res_T_2 = or(_pstore_drain_opportunistic_res_T, _pstore_drain_opportunistic_res_T_1) @[package.scala 72:59]
    node _pstore_drain_opportunistic_res_T_3 = eq(_pstore_drain_opportunistic_res_T_2, UInt<1>("h00")) @[DCache.scala 1155:15]
    node _pstore_drain_opportunistic_res_T_4 = lt(io.cpu.req.bits.size, UInt<1>("h00")) @[DCache.scala 1155:58]
    node res_1 = or(_pstore_drain_opportunistic_res_T_3, _pstore_drain_opportunistic_res_T_4) @[DCache.scala 1155:46]
    node _pstore_drain_opportunistic_T = eq(io.cpu.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _pstore_drain_opportunistic_T_1 = eq(io.cpu.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _pstore_drain_opportunistic_T_2 = or(_pstore_drain_opportunistic_T, _pstore_drain_opportunistic_T_1) @[Consts.scala 81:41]
    node _pstore_drain_opportunistic_T_3 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _pstore_drain_opportunistic_T_4 = or(_pstore_drain_opportunistic_T_2, _pstore_drain_opportunistic_T_3) @[Consts.scala 81:58]
    node _pstore_drain_opportunistic_T_5 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_6 = eq(io.cpu.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_7 = eq(io.cpu.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_8 = eq(io.cpu.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_9 = or(_pstore_drain_opportunistic_T_5, _pstore_drain_opportunistic_T_6) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_10 = or(_pstore_drain_opportunistic_T_9, _pstore_drain_opportunistic_T_7) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_11 = or(_pstore_drain_opportunistic_T_10, _pstore_drain_opportunistic_T_8) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_12 = eq(io.cpu.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_13 = eq(io.cpu.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_14 = eq(io.cpu.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_15 = eq(io.cpu.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_16 = eq(io.cpu.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_17 = or(_pstore_drain_opportunistic_T_12, _pstore_drain_opportunistic_T_13) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_18 = or(_pstore_drain_opportunistic_T_17, _pstore_drain_opportunistic_T_14) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_19 = or(_pstore_drain_opportunistic_T_18, _pstore_drain_opportunistic_T_15) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_20 = or(_pstore_drain_opportunistic_T_19, _pstore_drain_opportunistic_T_16) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_21 = or(_pstore_drain_opportunistic_T_11, _pstore_drain_opportunistic_T_20) @[Consts.scala 79:44]
    node _pstore_drain_opportunistic_T_22 = or(_pstore_drain_opportunistic_T_4, _pstore_drain_opportunistic_T_21) @[Consts.scala 81:75]
    node _pstore_drain_opportunistic_T_23 = eq(io.cpu.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _pstore_drain_opportunistic_T_24 = eq(io.cpu.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _pstore_drain_opportunistic_T_25 = or(_pstore_drain_opportunistic_T_23, _pstore_drain_opportunistic_T_24) @[Consts.scala 82:42]
    node _pstore_drain_opportunistic_T_26 = eq(io.cpu.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _pstore_drain_opportunistic_T_27 = or(_pstore_drain_opportunistic_T_25, _pstore_drain_opportunistic_T_26) @[Consts.scala 82:59]
    node _pstore_drain_opportunistic_T_28 = eq(io.cpu.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_29 = eq(io.cpu.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_30 = eq(io.cpu.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_31 = eq(io.cpu.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_32 = or(_pstore_drain_opportunistic_T_28, _pstore_drain_opportunistic_T_29) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_33 = or(_pstore_drain_opportunistic_T_32, _pstore_drain_opportunistic_T_30) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_34 = or(_pstore_drain_opportunistic_T_33, _pstore_drain_opportunistic_T_31) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_35 = eq(io.cpu.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_36 = eq(io.cpu.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_37 = eq(io.cpu.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_38 = eq(io.cpu.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_39 = eq(io.cpu.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _pstore_drain_opportunistic_T_40 = or(_pstore_drain_opportunistic_T_35, _pstore_drain_opportunistic_T_36) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_41 = or(_pstore_drain_opportunistic_T_40, _pstore_drain_opportunistic_T_37) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_42 = or(_pstore_drain_opportunistic_T_41, _pstore_drain_opportunistic_T_38) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_43 = or(_pstore_drain_opportunistic_T_42, _pstore_drain_opportunistic_T_39) @[package.scala 72:59]
    node _pstore_drain_opportunistic_T_44 = or(_pstore_drain_opportunistic_T_34, _pstore_drain_opportunistic_T_43) @[Consts.scala 79:44]
    node _pstore_drain_opportunistic_T_45 = or(_pstore_drain_opportunistic_T_27, _pstore_drain_opportunistic_T_44) @[Consts.scala 82:76]
    node _pstore_drain_opportunistic_T_46 = eq(io.cpu.req.bits.cmd, UInt<5>("h011")) @[DCache.scala 1161:35]
    node _pstore_drain_opportunistic_T_47 = lt(io.cpu.req.bits.size, UInt<1>("h00")) @[DCache.scala 1161:57]
    node _pstore_drain_opportunistic_T_48 = or(_pstore_drain_opportunistic_T_46, _pstore_drain_opportunistic_T_47) @[DCache.scala 1161:45]
    node _pstore_drain_opportunistic_T_49 = and(_pstore_drain_opportunistic_T_45, _pstore_drain_opportunistic_T_48) @[DCache.scala 1161:23]
    node _pstore_drain_opportunistic_T_50 = or(_pstore_drain_opportunistic_T_22, _pstore_drain_opportunistic_T_49) @[DCache.scala 1160:21]
    node _pstore_drain_opportunistic_T_51 = eq(_pstore_drain_opportunistic_T_50, UInt<1>("h00")) @[DCache.scala 1156:12]
    node _pstore_drain_opportunistic_T_52 = or(_pstore_drain_opportunistic_T_51, res_1) @[DCache.scala 1156:28]
    node _pstore_drain_opportunistic_T_53 = asUInt(reset) @[DCache.scala 1156:11]
    node _pstore_drain_opportunistic_T_54 = or(_pstore_drain_opportunistic_T_52, _pstore_drain_opportunistic_T_53) @[DCache.scala 1156:11]
    node _pstore_drain_opportunistic_T_55 = eq(_pstore_drain_opportunistic_T_54, UInt<1>("h00")) @[DCache.scala 1156:11]
    when _pstore_drain_opportunistic_T_55 : @[DCache.scala 1156:11]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:1156 assert(!needsRead(req) || res)\n") @[DCache.scala 1156:11]
      stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 1156:11]
      skip @[DCache.scala 1156:11]
    node _pstore_drain_opportunistic_T_56 = and(io.cpu.req.valid, res_1) @[DCache.scala 474:55]
    node _pstore_drain_opportunistic_T_57 = eq(_pstore_drain_opportunistic_T_56, UInt<1>("h00")) @[DCache.scala 474:36]
    node _pstore_drain_opportunistic_T_58 = and(s1_valid, s1_waw_hazard) @[DCache.scala 474:106]
    node _pstore_drain_opportunistic_T_59 = eq(_pstore_drain_opportunistic_T_58, UInt<1>("h00")) @[DCache.scala 474:95]
    node pstore_drain_opportunistic = and(_pstore_drain_opportunistic_T_57, _pstore_drain_opportunistic_T_59) @[DCache.scala 474:92]
    reg pstore_drain_on_miss_REG : UInt<1>, gated_clock @[DCache.scala 475:56]
    pstore_drain_on_miss_REG <= io.cpu.s2_nack @[DCache.scala 475:56]
    node pstore_drain_on_miss = or(releaseInFlight, pstore_drain_on_miss_REG) @[DCache.scala 475:46]
    reg pstore1_held : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 476:29]
    node _pstore1_valid_likely_T = and(s2_valid, s2_write) @[DCache.scala 477:39]
    node pstore1_valid_likely = or(_pstore1_valid_likely_T, pstore1_held) @[DCache.scala 477:51]
    node _pstore1_valid_T = and(s2_valid_hit, s2_write) @[DCache.scala 462:46]
    node _pstore1_valid_T_1 = eq(s2_sc_fail, UInt<1>("h00")) @[DCache.scala 462:61]
    node _pstore1_valid_T_2 = and(_pstore1_valid_T, _pstore1_valid_T_1) @[DCache.scala 462:58]
    node _pstore1_valid_T_3 = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 463:51]
    node _pstore1_valid_T_4 = and(_pstore1_valid_T_2, _pstore1_valid_T_3) @[DCache.scala 463:48]
    node pstore1_valid = or(_pstore1_valid_T_4, pstore1_held) @[DCache.scala 479:38]
    node _any_pstore_valid_T = or(pstore1_held, pstore2_valid) @[DCache.scala 480:36]
    any_pstore_valid <= _any_pstore_valid_T @[DCache.scala 480:20]
    node _pstore_drain_structural_T = and(pstore1_valid_likely, pstore2_valid) @[DCache.scala 481:54]
    node _pstore_drain_structural_T_1 = and(s1_valid, s1_write) @[DCache.scala 481:85]
    node _pstore_drain_structural_T_2 = or(_pstore_drain_structural_T_1, pstore1_rmw) @[DCache.scala 481:98]
    node pstore_drain_structural = and(_pstore_drain_structural_T, _pstore_drain_structural_T_2) @[DCache.scala 481:71]
    node _T_215 = and(s2_valid_hit_pre_data_ecc, s2_write) @[DCache.scala 478:72]
    node _T_216 = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 478:87]
    node _T_217 = and(_T_215, _T_216) @[DCache.scala 478:84]
    node _T_218 = or(_T_217, pstore1_held) @[DCache.scala 478:96]
    node _T_219 = eq(_T_218, pstore1_valid) @[DCache.scala 482:63]
    node _T_220 = or(pstore1_rmw, _T_219) @[DCache.scala 482:22]
    node _T_221 = asUInt(reset) @[DCache.scala 482:9]
    node _T_222 = or(_T_220, _T_221) @[DCache.scala 482:9]
    node _T_223 = eq(_T_222, UInt<1>("h00")) @[DCache.scala 482:9]
    when _T_223 : @[DCache.scala 482:9]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:482 assert(pstore1_rmw || pstore1_valid_not_rmw(io.cpu.s2_kill) === pstore1_valid)\n") @[DCache.scala 482:9]
      stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 482:9]
      skip @[DCache.scala 482:9]
    node _T_224 = and(pstore1_valid, pstore_drain_on_miss) @[DCache.scala 484:24]
    node _T_225 = and(s1_valid_not_nacked, s1_waw_hazard) @[DCache.scala 485:30]
    node pstore_drain_s2_kill = and(UInt<1>("h01"), io.cpu.s2_kill) @[DCache.scala 487:25]
    node _pstore_drain_T = eq(pstore1_merge_likely, UInt<1>("h00")) @[DCache.scala 488:5]
    node _pstore_drain_T_1 = and(UInt<1>("h01"), pstore_drain_structural) @[DCache.scala 489:21]
    node _pstore_drain_T_2 = and(s2_valid_hit_pre_data_ecc, s2_write) @[DCache.scala 478:72]
    node _pstore_drain_T_3 = eq(pstore_drain_s2_kill, UInt<1>("h00")) @[DCache.scala 478:87]
    node _pstore_drain_T_4 = and(_pstore_drain_T_2, _pstore_drain_T_3) @[DCache.scala 478:84]
    node _pstore_drain_T_5 = or(_pstore_drain_T_4, pstore1_held) @[DCache.scala 478:96]
    node _pstore_drain_T_6 = eq(pstore1_rmw, UInt<1>("h00")) @[DCache.scala 490:44]
    node _pstore_drain_T_7 = and(_pstore_drain_T_5, _pstore_drain_T_6) @[DCache.scala 490:41]
    node _pstore_drain_T_8 = or(_pstore_drain_T_7, pstore2_valid) @[DCache.scala 490:58]
    node _pstore_drain_T_9 = or(pstore_drain_opportunistic, pstore_drain_on_miss) @[DCache.scala 490:107]
    node _pstore_drain_T_10 = and(_pstore_drain_T_8, _pstore_drain_T_9) @[DCache.scala 490:76]
    node _pstore_drain_T_11 = or(_pstore_drain_T_1, _pstore_drain_T_10) @[DCache.scala 489:48]
    node pstore_drain = and(_pstore_drain_T, _pstore_drain_T_11) @[DCache.scala 488:27]
    node _pstore1_held_T = and(s2_valid_hit, s2_write) @[DCache.scala 462:46]
    node _pstore1_held_T_1 = eq(s2_sc_fail, UInt<1>("h00")) @[DCache.scala 462:61]
    node _pstore1_held_T_2 = and(_pstore1_held_T, _pstore1_held_T_1) @[DCache.scala 462:58]
    node _pstore1_held_T_3 = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 463:51]
    node _pstore1_held_T_4 = and(_pstore1_held_T_2, _pstore1_held_T_3) @[DCache.scala 463:48]
    node _pstore1_held_T_5 = eq(s2_store_merge, UInt<1>("h00")) @[DCache.scala 493:38]
    node _pstore1_held_T_6 = and(_pstore1_held_T_4, _pstore1_held_T_5) @[DCache.scala 493:35]
    node _pstore1_held_T_7 = or(_pstore1_held_T_6, pstore1_held) @[DCache.scala 493:54]
    node _pstore1_held_T_8 = and(_pstore1_held_T_7, pstore2_valid) @[DCache.scala 493:71]
    node _pstore1_held_T_9 = eq(pstore_drain, UInt<1>("h00")) @[DCache.scala 493:91]
    node _pstore1_held_T_10 = and(_pstore1_held_T_8, _pstore1_held_T_9) @[DCache.scala 493:88]
    pstore1_held <= _pstore1_held_T_10 @[DCache.scala 493:16]
    node _advance_pstore1_T = or(pstore1_valid, s2_valid_correct) @[DCache.scala 494:40]
    node _advance_pstore1_T_1 = eq(pstore2_valid, pstore_drain) @[DCache.scala 494:79]
    node advance_pstore1 = and(_advance_pstore1_T, _advance_pstore1_T_1) @[DCache.scala 494:61]
    node _pstore2_valid_T = eq(pstore_drain, UInt<1>("h00")) @[DCache.scala 495:37]
    node _pstore2_valid_T_1 = and(pstore2_valid, _pstore2_valid_T) @[DCache.scala 495:34]
    node _pstore2_valid_T_2 = or(_pstore2_valid_T_1, advance_pstore1) @[DCache.scala 495:51]
    pstore2_valid <= _pstore2_valid_T_2 @[DCache.scala 495:17]
    node _pstore2_addr_T = mux(s2_correct, s2_vaddr, pstore1_addr) @[DCache.scala 496:35]
    reg pstore2_addr : UInt<32>, gated_clock @[Reg.scala 15:16]
    when advance_pstore1 : @[Reg.scala 16:19]
      pstore2_addr <= _pstore2_addr_T @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore2_way_T = mux(s2_correct, s2_hit_way, pstore1_way) @[DCache.scala 497:34]
    reg pstore2_way : UInt<1>, gated_clock @[Reg.scala 15:16]
    when advance_pstore1 : @[Reg.scala 16:19]
      pstore2_way <= _pstore2_way_T @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore2_storegen_data_T = bits(pstore1_storegen_data, 7, 0) @[DCache.scala 500:44]
    node _pstore2_storegen_data_T_1 = bits(pstore1_mask, 0, 0) @[DCache.scala 500:110]
    node _pstore2_storegen_data_T_2 = and(pstore1_merge, _pstore2_storegen_data_T_1) @[DCache.scala 500:95]
    node _pstore2_storegen_data_T_3 = or(advance_pstore1, _pstore2_storegen_data_T_2) @[DCache.scala 500:78]
    reg pstore2_storegen_data_lo_lo : UInt<8>, gated_clock @[Reg.scala 15:16]
    when _pstore2_storegen_data_T_3 : @[Reg.scala 16:19]
      pstore2_storegen_data_lo_lo <= _pstore2_storegen_data_T @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore2_storegen_data_T_4 = bits(pstore1_storegen_data, 15, 8) @[DCache.scala 500:44]
    node _pstore2_storegen_data_T_5 = bits(pstore1_mask, 1, 1) @[DCache.scala 500:110]
    node _pstore2_storegen_data_T_6 = and(pstore1_merge, _pstore2_storegen_data_T_5) @[DCache.scala 500:95]
    node _pstore2_storegen_data_T_7 = or(advance_pstore1, _pstore2_storegen_data_T_6) @[DCache.scala 500:78]
    reg pstore2_storegen_data_lo_hi : UInt<8>, gated_clock @[Reg.scala 15:16]
    when _pstore2_storegen_data_T_7 : @[Reg.scala 16:19]
      pstore2_storegen_data_lo_hi <= _pstore2_storegen_data_T_4 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore2_storegen_data_T_8 = bits(pstore1_storegen_data, 23, 16) @[DCache.scala 500:44]
    node _pstore2_storegen_data_T_9 = bits(pstore1_mask, 2, 2) @[DCache.scala 500:110]
    node _pstore2_storegen_data_T_10 = and(pstore1_merge, _pstore2_storegen_data_T_9) @[DCache.scala 500:95]
    node _pstore2_storegen_data_T_11 = or(advance_pstore1, _pstore2_storegen_data_T_10) @[DCache.scala 500:78]
    reg pstore2_storegen_data_hi_lo : UInt<8>, gated_clock @[Reg.scala 15:16]
    when _pstore2_storegen_data_T_11 : @[Reg.scala 16:19]
      pstore2_storegen_data_hi_lo <= _pstore2_storegen_data_T_8 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _pstore2_storegen_data_T_12 = bits(pstore1_storegen_data, 31, 24) @[DCache.scala 500:44]
    node _pstore2_storegen_data_T_13 = bits(pstore1_mask, 3, 3) @[DCache.scala 500:110]
    node _pstore2_storegen_data_T_14 = and(pstore1_merge, _pstore2_storegen_data_T_13) @[DCache.scala 500:95]
    node _pstore2_storegen_data_T_15 = or(advance_pstore1, _pstore2_storegen_data_T_14) @[DCache.scala 500:78]
    reg pstore2_storegen_data_hi_hi : UInt<8>, gated_clock @[Reg.scala 15:16]
    when _pstore2_storegen_data_T_15 : @[Reg.scala 16:19]
      pstore2_storegen_data_hi_hi <= _pstore2_storegen_data_T_12 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node pstore2_storegen_data_lo = cat(pstore2_storegen_data_lo_hi, pstore2_storegen_data_lo_lo) @[Cat.scala 30:58]
    node pstore2_storegen_data_hi = cat(pstore2_storegen_data_hi_hi, pstore2_storegen_data_hi_lo) @[Cat.scala 30:58]
    node pstore2_storegen_data = cat(pstore2_storegen_data_hi, pstore2_storegen_data_lo) @[Cat.scala 30:58]
    reg mask : UInt<4>, gated_clock @[DCache.scala 503:19]
    node _pstore2_storegen_mask_T = or(advance_pstore1, pstore1_merge) @[DCache.scala 504:27]
    when _pstore2_storegen_mask_T : @[DCache.scala 504:45]
      node _pstore2_storegen_mask_mergedMask_T = mux(pstore1_merge, mask, UInt<1>("h00")) @[DCache.scala 505:42]
      node mergedMask = or(pstore1_mask, _pstore2_storegen_mask_mergedMask_T) @[DCache.scala 505:37]
      node _pstore2_storegen_mask_mask_T = not(mergedMask) @[DCache.scala 506:37]
      node _pstore2_storegen_mask_mask_T_1 = mux(s2_correct, UInt<1>("h00"), _pstore2_storegen_mask_mask_T) @[DCache.scala 506:19]
      node _pstore2_storegen_mask_mask_T_2 = not(_pstore2_storegen_mask_mask_T_1) @[DCache.scala 506:15]
      mask <= _pstore2_storegen_mask_mask_T_2 @[DCache.scala 506:12]
      skip @[DCache.scala 504:45]
    s2_store_merge <= UInt<1>("h00") @[DCache.scala 510:18]
    node s2_kill = and(UInt<1>("h00"), io.cpu.s2_kill) @[DCache.scala 487:25]
    node _dataArb_io_in_0_valid_T = eq(pstore1_merge_likely, UInt<1>("h00")) @[DCache.scala 488:5]
    node _dataArb_io_in_0_valid_T_1 = and(UInt<1>("h01"), pstore_drain_structural) @[DCache.scala 489:21]
    node _dataArb_io_in_0_valid_T_2 = and(s2_valid_hit_pre_data_ecc, s2_write) @[DCache.scala 478:72]
    node _dataArb_io_in_0_valid_T_3 = eq(s2_kill, UInt<1>("h00")) @[DCache.scala 478:87]
    node _dataArb_io_in_0_valid_T_4 = and(_dataArb_io_in_0_valid_T_2, _dataArb_io_in_0_valid_T_3) @[DCache.scala 478:84]
    node _dataArb_io_in_0_valid_T_5 = or(_dataArb_io_in_0_valid_T_4, pstore1_held) @[DCache.scala 478:96]
    node _dataArb_io_in_0_valid_T_6 = eq(pstore1_rmw, UInt<1>("h00")) @[DCache.scala 490:44]
    node _dataArb_io_in_0_valid_T_7 = and(_dataArb_io_in_0_valid_T_5, _dataArb_io_in_0_valid_T_6) @[DCache.scala 490:41]
    node _dataArb_io_in_0_valid_T_8 = or(_dataArb_io_in_0_valid_T_7, pstore2_valid) @[DCache.scala 490:58]
    node _dataArb_io_in_0_valid_T_9 = or(pstore_drain_opportunistic, pstore_drain_on_miss) @[DCache.scala 490:107]
    node _dataArb_io_in_0_valid_T_10 = and(_dataArb_io_in_0_valid_T_8, _dataArb_io_in_0_valid_T_9) @[DCache.scala 490:76]
    node _dataArb_io_in_0_valid_T_11 = or(_dataArb_io_in_0_valid_T_1, _dataArb_io_in_0_valid_T_10) @[DCache.scala 489:48]
    node _dataArb_io_in_0_valid_T_12 = and(_dataArb_io_in_0_valid_T, _dataArb_io_in_0_valid_T_11) @[DCache.scala 488:27]
    dataArb.io.in[0].valid <= _dataArb_io_in_0_valid_T_12 @[DCache.scala 519:26]
    dataArb.io.in[0].bits.write <= pstore_drain @[DCache.scala 520:31]
    node _dataArb_io_in_0_bits_addr_T = mux(pstore2_valid, pstore2_addr, pstore1_addr) @[DCache.scala 521:36]
    dataArb.io.in[0].bits.addr <= _dataArb_io_in_0_bits_addr_T @[DCache.scala 521:30]
    node _dataArb_io_in_0_bits_way_en_T = mux(pstore2_valid, pstore2_way, pstore1_way) @[DCache.scala 522:38]
    dataArb.io.in[0].bits.way_en <= _dataArb_io_in_0_bits_way_en_T @[DCache.scala 522:32]
    node _dataArb_io_in_0_bits_wdata_T = mux(pstore2_valid, pstore2_storegen_data, pstore1_data) @[DCache.scala 523:63]
    node dataArb_io_in_0_bits_wdata_lo_lo = bits(_dataArb_io_in_0_bits_wdata_T, 7, 0) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_lo_hi = bits(_dataArb_io_in_0_bits_wdata_T, 15, 8) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_hi_lo = bits(_dataArb_io_in_0_bits_wdata_T, 23, 16) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_hi_hi = bits(_dataArb_io_in_0_bits_wdata_T, 31, 24) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_lo = cat(dataArb_io_in_0_bits_wdata_lo_hi, dataArb_io_in_0_bits_wdata_lo_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_wdata_hi = cat(dataArb_io_in_0_bits_wdata_hi_hi, dataArb_io_in_0_bits_wdata_hi_lo) @[Cat.scala 30:58]
    node _dataArb_io_in_0_bits_wdata_T_1 = cat(dataArb_io_in_0_bits_wdata_hi, dataArb_io_in_0_bits_wdata_lo) @[Cat.scala 30:58]
    dataArb.io.in[0].bits.wdata <= _dataArb_io_in_0_bits_wdata_T_1 @[DCache.scala 523:31]
    node _dataArb_io_in_0_bits_wordMask_eccMask_T = bits(dataArb.io.in[0].bits.eccMask, 0, 0) @[DCache.scala 525:49]
    node _dataArb_io_in_0_bits_wordMask_eccMask_T_1 = bits(dataArb.io.in[0].bits.eccMask, 1, 1) @[DCache.scala 525:49]
    node _dataArb_io_in_0_bits_wordMask_eccMask_T_2 = bits(dataArb.io.in[0].bits.eccMask, 2, 2) @[DCache.scala 525:49]
    node _dataArb_io_in_0_bits_wordMask_eccMask_T_3 = bits(dataArb.io.in[0].bits.eccMask, 3, 3) @[DCache.scala 525:49]
    node _dataArb_io_in_0_bits_wordMask_eccMask_T_4 = or(_dataArb_io_in_0_bits_wordMask_eccMask_T, _dataArb_io_in_0_bits_wordMask_eccMask_T_1) @[package.scala 72:59]
    node _dataArb_io_in_0_bits_wordMask_eccMask_T_5 = or(_dataArb_io_in_0_bits_wordMask_eccMask_T_4, _dataArb_io_in_0_bits_wordMask_eccMask_T_2) @[package.scala 72:59]
    node eccMask = or(_dataArb_io_in_0_bits_wordMask_eccMask_T_5, _dataArb_io_in_0_bits_wordMask_eccMask_T_3) @[package.scala 72:59]
    node _dataArb_io_in_0_bits_wordMask_wordMask_T = mux(pstore2_valid, pstore2_addr, pstore1_addr) @[DCache.scala 526:32]
    node wordMask = dshl(UInt<1>("h01"), UInt<1>("h00")) @[OneHot.scala 58:35]
    node dataArb_io_in_0_bits_wordMask_lo = bits(wordMask, 0, 0) @[Bitwise.scala 26:51]
    node dataArb_io_in_0_bits_wordMask_hi = bits(wordMask, 1, 1) @[Bitwise.scala 26:51]
    node _dataArb_io_in_0_bits_wordMask_T = cat(dataArb_io_in_0_bits_wordMask_hi, dataArb_io_in_0_bits_wordMask_lo) @[Cat.scala 30:58]
    node _dataArb_io_in_0_bits_wordMask_T_1 = and(_dataArb_io_in_0_bits_wordMask_T, eccMask) @[DCache.scala 527:55]
    dataArb.io.in[0].bits.wordMask <= _dataArb_io_in_0_bits_wordMask_T_1 @[DCache.scala 524:34]
    node _dataArb_io_in_0_bits_eccMask_T = mux(pstore2_valid, mask, pstore1_mask) @[DCache.scala 529:47]
    node _dataArb_io_in_0_bits_eccMask_T_1 = bits(_dataArb_io_in_0_bits_eccMask_T, 0, 0) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_2 = bits(_dataArb_io_in_0_bits_eccMask_T, 1, 1) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_3 = bits(_dataArb_io_in_0_bits_eccMask_T, 2, 2) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_4 = bits(_dataArb_io_in_0_bits_eccMask_T, 3, 3) @[package.scala 202:50]
    node dataArb_io_in_0_bits_eccMask_lo_lo = orr(_dataArb_io_in_0_bits_eccMask_T_1) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_lo_hi = orr(_dataArb_io_in_0_bits_eccMask_T_2) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_hi_lo = orr(_dataArb_io_in_0_bits_eccMask_T_3) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_hi_hi = orr(_dataArb_io_in_0_bits_eccMask_T_4) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_lo = cat(dataArb_io_in_0_bits_eccMask_lo_hi, dataArb_io_in_0_bits_eccMask_lo_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_eccMask_hi = cat(dataArb_io_in_0_bits_eccMask_hi_hi, dataArb_io_in_0_bits_eccMask_hi_lo) @[Cat.scala 30:58]
    node _dataArb_io_in_0_bits_eccMask_T_5 = cat(dataArb_io_in_0_bits_eccMask_hi, dataArb_io_in_0_bits_eccMask_lo) @[Cat.scala 30:58]
    dataArb.io.in[0].bits.eccMask <= _dataArb_io_in_0_bits_eccMask_T_5 @[DCache.scala 529:33]
    node _s1_hazard_T = bits(pstore1_addr, 13, 2) @[DCache.scala 533:9]
    node _s1_hazard_T_1 = bits(s1_vaddr, 13, 2) @[DCache.scala 533:43]
    node _s1_hazard_T_2 = eq(_s1_hazard_T, _s1_hazard_T_1) @[DCache.scala 533:31]
    node _s1_hazard_T_3 = bits(pstore1_mask, 0, 0) @[package.scala 202:50]
    node _s1_hazard_T_4 = bits(pstore1_mask, 1, 1) @[package.scala 202:50]
    node _s1_hazard_T_5 = bits(pstore1_mask, 2, 2) @[package.scala 202:50]
    node _s1_hazard_T_6 = bits(pstore1_mask, 3, 3) @[package.scala 202:50]
    node s1_hazard_lo_lo = orr(_s1_hazard_T_3) @[DCache.scala 1151:66]
    node s1_hazard_lo_hi = orr(_s1_hazard_T_4) @[DCache.scala 1151:66]
    node s1_hazard_hi_lo = orr(_s1_hazard_T_5) @[DCache.scala 1151:66]
    node s1_hazard_hi_hi = orr(_s1_hazard_T_6) @[DCache.scala 1151:66]
    node s1_hazard_lo = cat(s1_hazard_lo_hi, s1_hazard_lo_lo) @[Cat.scala 30:58]
    node s1_hazard_hi = cat(s1_hazard_hi_hi, s1_hazard_hi_lo) @[Cat.scala 30:58]
    node _s1_hazard_T_7 = cat(s1_hazard_hi, s1_hazard_lo) @[Cat.scala 30:58]
    node s1_hazard_lo_lo_1 = bits(_s1_hazard_T_7, 0, 0) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_1 = bits(_s1_hazard_T_7, 1, 1) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_1 = bits(_s1_hazard_T_7, 2, 2) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_1 = bits(_s1_hazard_T_7, 3, 3) @[Bitwise.scala 26:51]
    node s1_hazard_lo_1 = cat(s1_hazard_lo_hi_1, s1_hazard_lo_lo_1) @[Cat.scala 30:58]
    node s1_hazard_hi_1 = cat(s1_hazard_hi_hi_1, s1_hazard_hi_lo_1) @[Cat.scala 30:58]
    node _s1_hazard_T_8 = cat(s1_hazard_hi_1, s1_hazard_lo_1) @[Cat.scala 30:58]
    node _s1_hazard_T_9 = bits(s1_mask_xwr, 0, 0) @[package.scala 202:50]
    node _s1_hazard_T_10 = bits(s1_mask_xwr, 1, 1) @[package.scala 202:50]
    node _s1_hazard_T_11 = bits(s1_mask_xwr, 2, 2) @[package.scala 202:50]
    node _s1_hazard_T_12 = bits(s1_mask_xwr, 3, 3) @[package.scala 202:50]
    node s1_hazard_lo_lo_2 = orr(_s1_hazard_T_9) @[DCache.scala 1151:66]
    node s1_hazard_lo_hi_2 = orr(_s1_hazard_T_10) @[DCache.scala 1151:66]
    node s1_hazard_hi_lo_2 = orr(_s1_hazard_T_11) @[DCache.scala 1151:66]
    node s1_hazard_hi_hi_2 = orr(_s1_hazard_T_12) @[DCache.scala 1151:66]
    node s1_hazard_lo_2 = cat(s1_hazard_lo_hi_2, s1_hazard_lo_lo_2) @[Cat.scala 30:58]
    node s1_hazard_hi_2 = cat(s1_hazard_hi_hi_2, s1_hazard_hi_lo_2) @[Cat.scala 30:58]
    node _s1_hazard_T_13 = cat(s1_hazard_hi_2, s1_hazard_lo_2) @[Cat.scala 30:58]
    node s1_hazard_lo_lo_3 = bits(_s1_hazard_T_13, 0, 0) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_3 = bits(_s1_hazard_T_13, 1, 1) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_3 = bits(_s1_hazard_T_13, 2, 2) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_3 = bits(_s1_hazard_T_13, 3, 3) @[Bitwise.scala 26:51]
    node s1_hazard_lo_3 = cat(s1_hazard_lo_hi_3, s1_hazard_lo_lo_3) @[Cat.scala 30:58]
    node s1_hazard_hi_3 = cat(s1_hazard_hi_hi_3, s1_hazard_hi_lo_3) @[Cat.scala 30:58]
    node _s1_hazard_T_14 = cat(s1_hazard_hi_3, s1_hazard_lo_3) @[Cat.scala 30:58]
    node _s1_hazard_T_15 = and(_s1_hazard_T_8, _s1_hazard_T_14) @[DCache.scala 534:38]
    node _s1_hazard_T_16 = orr(_s1_hazard_T_15) @[DCache.scala 534:66]
    node _s1_hazard_T_17 = and(pstore1_mask, s1_mask_xwr) @[DCache.scala 534:77]
    node _s1_hazard_T_18 = orr(_s1_hazard_T_17) @[DCache.scala 534:92]
    node _s1_hazard_T_19 = mux(s1_write, _s1_hazard_T_16, _s1_hazard_T_18) @[DCache.scala 534:8]
    node _s1_hazard_T_20 = and(_s1_hazard_T_2, _s1_hazard_T_19) @[DCache.scala 533:65]
    node _s1_hazard_T_21 = and(pstore1_valid_likely, _s1_hazard_T_20) @[DCache.scala 536:27]
    node _s1_hazard_T_22 = bits(pstore2_addr, 13, 2) @[DCache.scala 533:9]
    node _s1_hazard_T_23 = bits(s1_vaddr, 13, 2) @[DCache.scala 533:43]
    node _s1_hazard_T_24 = eq(_s1_hazard_T_22, _s1_hazard_T_23) @[DCache.scala 533:31]
    node _s1_hazard_T_25 = bits(mask, 0, 0) @[package.scala 202:50]
    node _s1_hazard_T_26 = bits(mask, 1, 1) @[package.scala 202:50]
    node _s1_hazard_T_27 = bits(mask, 2, 2) @[package.scala 202:50]
    node _s1_hazard_T_28 = bits(mask, 3, 3) @[package.scala 202:50]
    node s1_hazard_lo_lo_4 = orr(_s1_hazard_T_25) @[DCache.scala 1151:66]
    node s1_hazard_lo_hi_4 = orr(_s1_hazard_T_26) @[DCache.scala 1151:66]
    node s1_hazard_hi_lo_4 = orr(_s1_hazard_T_27) @[DCache.scala 1151:66]
    node s1_hazard_hi_hi_4 = orr(_s1_hazard_T_28) @[DCache.scala 1151:66]
    node s1_hazard_lo_4 = cat(s1_hazard_lo_hi_4, s1_hazard_lo_lo_4) @[Cat.scala 30:58]
    node s1_hazard_hi_4 = cat(s1_hazard_hi_hi_4, s1_hazard_hi_lo_4) @[Cat.scala 30:58]
    node _s1_hazard_T_29 = cat(s1_hazard_hi_4, s1_hazard_lo_4) @[Cat.scala 30:58]
    node s1_hazard_lo_lo_5 = bits(_s1_hazard_T_29, 0, 0) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_5 = bits(_s1_hazard_T_29, 1, 1) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_5 = bits(_s1_hazard_T_29, 2, 2) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_5 = bits(_s1_hazard_T_29, 3, 3) @[Bitwise.scala 26:51]
    node s1_hazard_lo_5 = cat(s1_hazard_lo_hi_5, s1_hazard_lo_lo_5) @[Cat.scala 30:58]
    node s1_hazard_hi_5 = cat(s1_hazard_hi_hi_5, s1_hazard_hi_lo_5) @[Cat.scala 30:58]
    node _s1_hazard_T_30 = cat(s1_hazard_hi_5, s1_hazard_lo_5) @[Cat.scala 30:58]
    node _s1_hazard_T_31 = bits(s1_mask_xwr, 0, 0) @[package.scala 202:50]
    node _s1_hazard_T_32 = bits(s1_mask_xwr, 1, 1) @[package.scala 202:50]
    node _s1_hazard_T_33 = bits(s1_mask_xwr, 2, 2) @[package.scala 202:50]
    node _s1_hazard_T_34 = bits(s1_mask_xwr, 3, 3) @[package.scala 202:50]
    node s1_hazard_lo_lo_6 = orr(_s1_hazard_T_31) @[DCache.scala 1151:66]
    node s1_hazard_lo_hi_6 = orr(_s1_hazard_T_32) @[DCache.scala 1151:66]
    node s1_hazard_hi_lo_6 = orr(_s1_hazard_T_33) @[DCache.scala 1151:66]
    node s1_hazard_hi_hi_6 = orr(_s1_hazard_T_34) @[DCache.scala 1151:66]
    node s1_hazard_lo_6 = cat(s1_hazard_lo_hi_6, s1_hazard_lo_lo_6) @[Cat.scala 30:58]
    node s1_hazard_hi_6 = cat(s1_hazard_hi_hi_6, s1_hazard_hi_lo_6) @[Cat.scala 30:58]
    node _s1_hazard_T_35 = cat(s1_hazard_hi_6, s1_hazard_lo_6) @[Cat.scala 30:58]
    node s1_hazard_lo_lo_7 = bits(_s1_hazard_T_35, 0, 0) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_7 = bits(_s1_hazard_T_35, 1, 1) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_7 = bits(_s1_hazard_T_35, 2, 2) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_7 = bits(_s1_hazard_T_35, 3, 3) @[Bitwise.scala 26:51]
    node s1_hazard_lo_7 = cat(s1_hazard_lo_hi_7, s1_hazard_lo_lo_7) @[Cat.scala 30:58]
    node s1_hazard_hi_7 = cat(s1_hazard_hi_hi_7, s1_hazard_hi_lo_7) @[Cat.scala 30:58]
    node _s1_hazard_T_36 = cat(s1_hazard_hi_7, s1_hazard_lo_7) @[Cat.scala 30:58]
    node _s1_hazard_T_37 = and(_s1_hazard_T_30, _s1_hazard_T_36) @[DCache.scala 534:38]
    node _s1_hazard_T_38 = orr(_s1_hazard_T_37) @[DCache.scala 534:66]
    node _s1_hazard_T_39 = and(mask, s1_mask_xwr) @[DCache.scala 534:77]
    node _s1_hazard_T_40 = orr(_s1_hazard_T_39) @[DCache.scala 534:92]
    node _s1_hazard_T_41 = mux(s1_write, _s1_hazard_T_38, _s1_hazard_T_40) @[DCache.scala 534:8]
    node _s1_hazard_T_42 = and(_s1_hazard_T_24, _s1_hazard_T_41) @[DCache.scala 533:65]
    node _s1_hazard_T_43 = and(pstore2_valid, _s1_hazard_T_42) @[DCache.scala 537:21]
    node s1_hazard = or(_s1_hazard_T_21, _s1_hazard_T_43) @[DCache.scala 536:69]
    node s1_raw_hazard = and(s1_read, s1_hazard) @[DCache.scala 538:31]
    s1_waw_hazard <= UInt<1>("h00") @[DCache.scala 539:17]
    node _T_226 = and(s1_valid, s1_raw_hazard) @[DCache.scala 543:18]
    when _T_226 : @[DCache.scala 543:36]
      s1_nack <= UInt<1>("h01") @[DCache.scala 543:46]
      skip @[DCache.scala 543:36]
    reg io_cpu_s2_nack_cause_raw_REG : UInt<1>, gated_clock @[DCache.scala 546:38]
    io_cpu_s2_nack_cause_raw_REG <= s1_raw_hazard @[DCache.scala 546:38]
    node _io_cpu_s2_nack_cause_raw_T = eq(s2_waw_hazard, UInt<1>("h00")) @[DCache.scala 546:59]
    node _io_cpu_s2_nack_cause_raw_T_1 = or(_io_cpu_s2_nack_cause_raw_T, s2_store_merge) @[DCache.scala 546:74]
    node _io_cpu_s2_nack_cause_raw_T_2 = eq(_io_cpu_s2_nack_cause_raw_T_1, UInt<1>("h00")) @[DCache.scala 546:57]
    node _io_cpu_s2_nack_cause_raw_T_3 = or(io_cpu_s2_nack_cause_raw_REG, _io_cpu_s2_nack_cause_raw_T_2) @[DCache.scala 546:54]
    io.cpu.s2_nack_cause_raw <= _io_cpu_s2_nack_cause_raw_T_3 @[DCache.scala 546:28]
    node _a_source_T = not(uncachedInFlight[0]) @[DCache.scala 549:34]
    node _a_source_T_1 = shl(_a_source_T, 0) @[DCache.scala 549:59]
    node _a_source_T_2 = bits(_a_source_T_1, 0, 0) @[OneHot.scala 47:40]
    node _acquire_address_T = shr(s2_req.addr, 6) @[DCache.scala 550:38]
    node acquire_address = shl(_acquire_address_T, 6) @[DCache.scala 550:49]
    node _a_mask_T = shl(UInt<1>("h00"), 3) @[DCache.scala 554:90]
    node a_mask = dshl(pstore1_mask, _a_mask_T) @[DCache.scala 554:29]
    node _get_legal_T = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _get_legal_T_1 = leq(s2_req.size, UInt<4>("h0c")) @[Parameters.scala 92:42]
    node _get_legal_T_2 = and(_get_legal_T, _get_legal_T_1) @[Parameters.scala 92:37]
    node _get_legal_T_3 = or(UInt<1>("h00"), _get_legal_T_2) @[Parameters.scala 670:31]
    node _get_legal_T_4 = xor(s2_req.addr, UInt<14>("h02000")) @[Parameters.scala 137:31]
    node _get_legal_T_5 = cvt(_get_legal_T_4) @[Parameters.scala 137:49]
    node _get_legal_T_6 = and(_get_legal_T_5, asSInt(UInt<33>("h09a132000"))) @[Parameters.scala 137:52]
    node _get_legal_T_7 = asSInt(_get_legal_T_6) @[Parameters.scala 137:52]
    node _get_legal_T_8 = eq(_get_legal_T_7, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _get_legal_T_9 = and(_get_legal_T_3, _get_legal_T_8) @[Parameters.scala 670:56]
    node _get_legal_T_10 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _get_legal_T_11 = leq(s2_req.size, UInt<3>("h06")) @[Parameters.scala 92:42]
    node _get_legal_T_12 = and(_get_legal_T_10, _get_legal_T_11) @[Parameters.scala 92:37]
    node _get_legal_T_13 = or(UInt<1>("h00"), _get_legal_T_12) @[Parameters.scala 670:31]
    node _get_legal_T_14 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _get_legal_T_15 = cvt(_get_legal_T_14) @[Parameters.scala 137:49]
    node _get_legal_T_16 = and(_get_legal_T_15, asSInt(UInt<33>("h09a032000"))) @[Parameters.scala 137:52]
    node _get_legal_T_17 = asSInt(_get_legal_T_16) @[Parameters.scala 137:52]
    node _get_legal_T_18 = eq(_get_legal_T_17, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _get_legal_T_19 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _get_legal_T_20 = cvt(_get_legal_T_19) @[Parameters.scala 137:49]
    node _get_legal_T_21 = and(_get_legal_T_20, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _get_legal_T_22 = asSInt(_get_legal_T_21) @[Parameters.scala 137:52]
    node _get_legal_T_23 = eq(_get_legal_T_22, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _get_legal_T_24 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _get_legal_T_25 = cvt(_get_legal_T_24) @[Parameters.scala 137:49]
    node _get_legal_T_26 = and(_get_legal_T_25, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _get_legal_T_27 = asSInt(_get_legal_T_26) @[Parameters.scala 137:52]
    node _get_legal_T_28 = eq(_get_legal_T_27, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _get_legal_T_29 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _get_legal_T_30 = cvt(_get_legal_T_29) @[Parameters.scala 137:49]
    node _get_legal_T_31 = and(_get_legal_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _get_legal_T_32 = asSInt(_get_legal_T_31) @[Parameters.scala 137:52]
    node _get_legal_T_33 = eq(_get_legal_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _get_legal_T_34 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _get_legal_T_35 = cvt(_get_legal_T_34) @[Parameters.scala 137:49]
    node _get_legal_T_36 = and(_get_legal_T_35, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _get_legal_T_37 = asSInt(_get_legal_T_36) @[Parameters.scala 137:52]
    node _get_legal_T_38 = eq(_get_legal_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _get_legal_T_39 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _get_legal_T_40 = cvt(_get_legal_T_39) @[Parameters.scala 137:49]
    node _get_legal_T_41 = and(_get_legal_T_40, asSInt(UInt<33>("h09a132000"))) @[Parameters.scala 137:52]
    node _get_legal_T_42 = asSInt(_get_legal_T_41) @[Parameters.scala 137:52]
    node _get_legal_T_43 = eq(_get_legal_T_42, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _get_legal_T_44 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _get_legal_T_45 = cvt(_get_legal_T_44) @[Parameters.scala 137:49]
    node _get_legal_T_46 = and(_get_legal_T_45, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _get_legal_T_47 = asSInt(_get_legal_T_46) @[Parameters.scala 137:52]
    node _get_legal_T_48 = eq(_get_legal_T_47, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _get_legal_T_49 = or(_get_legal_T_18, _get_legal_T_23) @[Parameters.scala 671:42]
    node _get_legal_T_50 = or(_get_legal_T_49, _get_legal_T_28) @[Parameters.scala 671:42]
    node _get_legal_T_51 = or(_get_legal_T_50, _get_legal_T_33) @[Parameters.scala 671:42]
    node _get_legal_T_52 = or(_get_legal_T_51, _get_legal_T_38) @[Parameters.scala 671:42]
    node _get_legal_T_53 = or(_get_legal_T_52, _get_legal_T_43) @[Parameters.scala 671:42]
    node _get_legal_T_54 = or(_get_legal_T_53, _get_legal_T_48) @[Parameters.scala 671:42]
    node _get_legal_T_55 = and(_get_legal_T_13, _get_legal_T_54) @[Parameters.scala 670:56]
    node _get_legal_T_56 = or(UInt<1>("h00"), _get_legal_T_9) @[Parameters.scala 672:30]
    node get_legal = or(_get_legal_T_56, _get_legal_T_55) @[Parameters.scala 672:30]
    wire get : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 447:17]
    get is invalid @[Edges.scala 447:17]
    get.opcode <= UInt<3>("h04") @[Edges.scala 448:15]
    get.param <= UInt<1>("h00") @[Edges.scala 449:15]
    get.size <= s2_req.size @[Edges.scala 450:15]
    get.source <= UInt<1>("h00") @[Edges.scala 451:15]
    get.address <= s2_req.addr @[Edges.scala 452:15]
    node _get_a_mask_sizeOH_T = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node get_a_mask_sizeOH_shiftAmount = bits(_get_a_mask_sizeOH_T, 0, 0) @[OneHot.scala 64:49]
    node _get_a_mask_sizeOH_T_1 = dshl(UInt<1>("h01"), get_a_mask_sizeOH_shiftAmount) @[OneHot.scala 65:12]
    node _get_a_mask_sizeOH_T_2 = bits(_get_a_mask_sizeOH_T_1, 1, 0) @[OneHot.scala 65:27]
    node get_a_mask_sizeOH = or(_get_a_mask_sizeOH_T_2, UInt<1>("h01")) @[Misc.scala 201:81]
    node _get_a_mask_T = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node get_a_mask_size = bits(get_a_mask_sizeOH, 1, 1) @[Misc.scala 208:26]
    node get_a_mask_bit = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node get_a_mask_nbit = eq(get_a_mask_bit, UInt<1>("h00")) @[Misc.scala 210:20]
    node get_a_mask_eq = and(UInt<1>("h01"), get_a_mask_nbit) @[Misc.scala 213:27]
    node _get_a_mask_acc_T = and(get_a_mask_size, get_a_mask_eq) @[Misc.scala 214:38]
    node get_a_mask_acc = or(_get_a_mask_T, _get_a_mask_acc_T) @[Misc.scala 214:29]
    node get_a_mask_eq_1 = and(UInt<1>("h01"), get_a_mask_bit) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_1 = and(get_a_mask_size, get_a_mask_eq_1) @[Misc.scala 214:38]
    node get_a_mask_acc_1 = or(_get_a_mask_T, _get_a_mask_acc_T_1) @[Misc.scala 214:29]
    node get_a_mask_size_1 = bits(get_a_mask_sizeOH, 0, 0) @[Misc.scala 208:26]
    node get_a_mask_bit_1 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node get_a_mask_nbit_1 = eq(get_a_mask_bit_1, UInt<1>("h00")) @[Misc.scala 210:20]
    node get_a_mask_eq_2 = and(get_a_mask_eq, get_a_mask_nbit_1) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_2 = and(get_a_mask_size_1, get_a_mask_eq_2) @[Misc.scala 214:38]
    node get_a_mask_lo_lo = or(get_a_mask_acc, _get_a_mask_acc_T_2) @[Misc.scala 214:29]
    node get_a_mask_eq_3 = and(get_a_mask_eq, get_a_mask_bit_1) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_3 = and(get_a_mask_size_1, get_a_mask_eq_3) @[Misc.scala 214:38]
    node get_a_mask_lo_hi = or(get_a_mask_acc, _get_a_mask_acc_T_3) @[Misc.scala 214:29]
    node get_a_mask_eq_4 = and(get_a_mask_eq_1, get_a_mask_nbit_1) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_4 = and(get_a_mask_size_1, get_a_mask_eq_4) @[Misc.scala 214:38]
    node get_a_mask_hi_lo = or(get_a_mask_acc_1, _get_a_mask_acc_T_4) @[Misc.scala 214:29]
    node get_a_mask_eq_5 = and(get_a_mask_eq_1, get_a_mask_bit_1) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_5 = and(get_a_mask_size_1, get_a_mask_eq_5) @[Misc.scala 214:38]
    node get_a_mask_hi_hi = or(get_a_mask_acc_1, _get_a_mask_acc_T_5) @[Misc.scala 214:29]
    node get_a_mask_lo = cat(get_a_mask_lo_hi, get_a_mask_lo_lo) @[Cat.scala 30:58]
    node get_a_mask_hi = cat(get_a_mask_hi_hi, get_a_mask_hi_lo) @[Cat.scala 30:58]
    node _get_a_mask_T_1 = cat(get_a_mask_hi, get_a_mask_lo) @[Cat.scala 30:58]
    get.mask <= _get_a_mask_T_1 @[Edges.scala 453:15]
    get.data <= UInt<1>("h00") @[Edges.scala 454:15]
    get.corrupt <= UInt<1>("h00") @[Edges.scala 455:15]
    node _put_legal_T = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _put_legal_T_1 = leq(s2_req.size, UInt<4>("h0c")) @[Parameters.scala 92:42]
    node _put_legal_T_2 = and(_put_legal_T, _put_legal_T_1) @[Parameters.scala 92:37]
    node _put_legal_T_3 = or(UInt<1>("h00"), _put_legal_T_2) @[Parameters.scala 670:31]
    node _put_legal_T_4 = xor(s2_req.addr, UInt<14>("h02000")) @[Parameters.scala 137:31]
    node _put_legal_T_5 = cvt(_put_legal_T_4) @[Parameters.scala 137:49]
    node _put_legal_T_6 = and(_put_legal_T_5, asSInt(UInt<33>("h09a132000"))) @[Parameters.scala 137:52]
    node _put_legal_T_7 = asSInt(_put_legal_T_6) @[Parameters.scala 137:52]
    node _put_legal_T_8 = eq(_put_legal_T_7, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _put_legal_T_9 = and(_put_legal_T_3, _put_legal_T_8) @[Parameters.scala 670:56]
    node _put_legal_T_10 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _put_legal_T_11 = leq(s2_req.size, UInt<3>("h06")) @[Parameters.scala 92:42]
    node _put_legal_T_12 = and(_put_legal_T_10, _put_legal_T_11) @[Parameters.scala 92:37]
    node _put_legal_T_13 = or(UInt<1>("h00"), _put_legal_T_12) @[Parameters.scala 670:31]
    node _put_legal_T_14 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _put_legal_T_15 = cvt(_put_legal_T_14) @[Parameters.scala 137:49]
    node _put_legal_T_16 = and(_put_legal_T_15, asSInt(UInt<33>("h09a032000"))) @[Parameters.scala 137:52]
    node _put_legal_T_17 = asSInt(_put_legal_T_16) @[Parameters.scala 137:52]
    node _put_legal_T_18 = eq(_put_legal_T_17, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _put_legal_T_19 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _put_legal_T_20 = cvt(_put_legal_T_19) @[Parameters.scala 137:49]
    node _put_legal_T_21 = and(_put_legal_T_20, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _put_legal_T_22 = asSInt(_put_legal_T_21) @[Parameters.scala 137:52]
    node _put_legal_T_23 = eq(_put_legal_T_22, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _put_legal_T_24 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _put_legal_T_25 = cvt(_put_legal_T_24) @[Parameters.scala 137:49]
    node _put_legal_T_26 = and(_put_legal_T_25, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _put_legal_T_27 = asSInt(_put_legal_T_26) @[Parameters.scala 137:52]
    node _put_legal_T_28 = eq(_put_legal_T_27, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _put_legal_T_29 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _put_legal_T_30 = cvt(_put_legal_T_29) @[Parameters.scala 137:49]
    node _put_legal_T_31 = and(_put_legal_T_30, asSInt(UInt<33>("h09a132000"))) @[Parameters.scala 137:52]
    node _put_legal_T_32 = asSInt(_put_legal_T_31) @[Parameters.scala 137:52]
    node _put_legal_T_33 = eq(_put_legal_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _put_legal_T_34 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _put_legal_T_35 = cvt(_put_legal_T_34) @[Parameters.scala 137:49]
    node _put_legal_T_36 = and(_put_legal_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _put_legal_T_37 = asSInt(_put_legal_T_36) @[Parameters.scala 137:52]
    node _put_legal_T_38 = eq(_put_legal_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _put_legal_T_39 = or(_put_legal_T_18, _put_legal_T_23) @[Parameters.scala 671:42]
    node _put_legal_T_40 = or(_put_legal_T_39, _put_legal_T_28) @[Parameters.scala 671:42]
    node _put_legal_T_41 = or(_put_legal_T_40, _put_legal_T_33) @[Parameters.scala 671:42]
    node _put_legal_T_42 = or(_put_legal_T_41, _put_legal_T_38) @[Parameters.scala 671:42]
    node _put_legal_T_43 = and(_put_legal_T_13, _put_legal_T_42) @[Parameters.scala 670:56]
    node _put_legal_T_44 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _put_legal_T_45 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _put_legal_T_46 = cvt(_put_legal_T_45) @[Parameters.scala 137:49]
    node _put_legal_T_47 = and(_put_legal_T_46, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _put_legal_T_48 = asSInt(_put_legal_T_47) @[Parameters.scala 137:52]
    node _put_legal_T_49 = eq(_put_legal_T_48, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _put_legal_T_50 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _put_legal_T_51 = cvt(_put_legal_T_50) @[Parameters.scala 137:49]
    node _put_legal_T_52 = and(_put_legal_T_51, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _put_legal_T_53 = asSInt(_put_legal_T_52) @[Parameters.scala 137:52]
    node _put_legal_T_54 = eq(_put_legal_T_53, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _put_legal_T_55 = or(_put_legal_T_49, _put_legal_T_54) @[Parameters.scala 671:42]
    node _put_legal_T_56 = and(_put_legal_T_44, _put_legal_T_55) @[Parameters.scala 670:56]
    node _put_legal_T_57 = or(UInt<1>("h00"), _put_legal_T_9) @[Parameters.scala 672:30]
    node _put_legal_T_58 = or(_put_legal_T_57, _put_legal_T_43) @[Parameters.scala 672:30]
    node put_legal = or(_put_legal_T_58, _put_legal_T_56) @[Parameters.scala 672:30]
    wire put : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 465:17]
    put is invalid @[Edges.scala 465:17]
    put.opcode <= UInt<1>("h00") @[Edges.scala 466:15]
    put.param <= UInt<1>("h00") @[Edges.scala 467:15]
    put.size <= s2_req.size @[Edges.scala 468:15]
    put.source <= UInt<1>("h00") @[Edges.scala 469:15]
    put.address <= s2_req.addr @[Edges.scala 470:15]
    node _put_a_mask_sizeOH_T = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node put_a_mask_sizeOH_shiftAmount = bits(_put_a_mask_sizeOH_T, 0, 0) @[OneHot.scala 64:49]
    node _put_a_mask_sizeOH_T_1 = dshl(UInt<1>("h01"), put_a_mask_sizeOH_shiftAmount) @[OneHot.scala 65:12]
    node _put_a_mask_sizeOH_T_2 = bits(_put_a_mask_sizeOH_T_1, 1, 0) @[OneHot.scala 65:27]
    node put_a_mask_sizeOH = or(_put_a_mask_sizeOH_T_2, UInt<1>("h01")) @[Misc.scala 201:81]
    node _put_a_mask_T = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node put_a_mask_size = bits(put_a_mask_sizeOH, 1, 1) @[Misc.scala 208:26]
    node put_a_mask_bit = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node put_a_mask_nbit = eq(put_a_mask_bit, UInt<1>("h00")) @[Misc.scala 210:20]
    node put_a_mask_eq = and(UInt<1>("h01"), put_a_mask_nbit) @[Misc.scala 213:27]
    node _put_a_mask_acc_T = and(put_a_mask_size, put_a_mask_eq) @[Misc.scala 214:38]
    node put_a_mask_acc = or(_put_a_mask_T, _put_a_mask_acc_T) @[Misc.scala 214:29]
    node put_a_mask_eq_1 = and(UInt<1>("h01"), put_a_mask_bit) @[Misc.scala 213:27]
    node _put_a_mask_acc_T_1 = and(put_a_mask_size, put_a_mask_eq_1) @[Misc.scala 214:38]
    node put_a_mask_acc_1 = or(_put_a_mask_T, _put_a_mask_acc_T_1) @[Misc.scala 214:29]
    node put_a_mask_size_1 = bits(put_a_mask_sizeOH, 0, 0) @[Misc.scala 208:26]
    node put_a_mask_bit_1 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node put_a_mask_nbit_1 = eq(put_a_mask_bit_1, UInt<1>("h00")) @[Misc.scala 210:20]
    node put_a_mask_eq_2 = and(put_a_mask_eq, put_a_mask_nbit_1) @[Misc.scala 213:27]
    node _put_a_mask_acc_T_2 = and(put_a_mask_size_1, put_a_mask_eq_2) @[Misc.scala 214:38]
    node put_a_mask_lo_lo = or(put_a_mask_acc, _put_a_mask_acc_T_2) @[Misc.scala 214:29]
    node put_a_mask_eq_3 = and(put_a_mask_eq, put_a_mask_bit_1) @[Misc.scala 213:27]
    node _put_a_mask_acc_T_3 = and(put_a_mask_size_1, put_a_mask_eq_3) @[Misc.scala 214:38]
    node put_a_mask_lo_hi = or(put_a_mask_acc, _put_a_mask_acc_T_3) @[Misc.scala 214:29]
    node put_a_mask_eq_4 = and(put_a_mask_eq_1, put_a_mask_nbit_1) @[Misc.scala 213:27]
    node _put_a_mask_acc_T_4 = and(put_a_mask_size_1, put_a_mask_eq_4) @[Misc.scala 214:38]
    node put_a_mask_hi_lo = or(put_a_mask_acc_1, _put_a_mask_acc_T_4) @[Misc.scala 214:29]
    node put_a_mask_eq_5 = and(put_a_mask_eq_1, put_a_mask_bit_1) @[Misc.scala 213:27]
    node _put_a_mask_acc_T_5 = and(put_a_mask_size_1, put_a_mask_eq_5) @[Misc.scala 214:38]
    node put_a_mask_hi_hi = or(put_a_mask_acc_1, _put_a_mask_acc_T_5) @[Misc.scala 214:29]
    node put_a_mask_lo = cat(put_a_mask_lo_hi, put_a_mask_lo_lo) @[Cat.scala 30:58]
    node put_a_mask_hi = cat(put_a_mask_hi_hi, put_a_mask_hi_lo) @[Cat.scala 30:58]
    node _put_a_mask_T_1 = cat(put_a_mask_hi, put_a_mask_lo) @[Cat.scala 30:58]
    put.mask <= _put_a_mask_T_1 @[Edges.scala 471:15]
    put.data <= pstore1_data @[Edges.scala 472:15]
    put.corrupt <= UInt<1>("h00") @[Edges.scala 473:15]
    node _putpartial_legal_T = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _putpartial_legal_T_1 = leq(s2_req.size, UInt<4>("h0c")) @[Parameters.scala 92:42]
    node _putpartial_legal_T_2 = and(_putpartial_legal_T, _putpartial_legal_T_1) @[Parameters.scala 92:37]
    node _putpartial_legal_T_3 = or(UInt<1>("h00"), _putpartial_legal_T_2) @[Parameters.scala 670:31]
    node _putpartial_legal_T_4 = xor(s2_req.addr, UInt<14>("h02000")) @[Parameters.scala 137:31]
    node _putpartial_legal_T_5 = cvt(_putpartial_legal_T_4) @[Parameters.scala 137:49]
    node _putpartial_legal_T_6 = and(_putpartial_legal_T_5, asSInt(UInt<33>("h09a132000"))) @[Parameters.scala 137:52]
    node _putpartial_legal_T_7 = asSInt(_putpartial_legal_T_6) @[Parameters.scala 137:52]
    node _putpartial_legal_T_8 = eq(_putpartial_legal_T_7, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _putpartial_legal_T_9 = and(_putpartial_legal_T_3, _putpartial_legal_T_8) @[Parameters.scala 670:56]
    node _putpartial_legal_T_10 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _putpartial_legal_T_11 = leq(s2_req.size, UInt<3>("h06")) @[Parameters.scala 92:42]
    node _putpartial_legal_T_12 = and(_putpartial_legal_T_10, _putpartial_legal_T_11) @[Parameters.scala 92:37]
    node _putpartial_legal_T_13 = or(UInt<1>("h00"), _putpartial_legal_T_12) @[Parameters.scala 670:31]
    node _putpartial_legal_T_14 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _putpartial_legal_T_15 = cvt(_putpartial_legal_T_14) @[Parameters.scala 137:49]
    node _putpartial_legal_T_16 = and(_putpartial_legal_T_15, asSInt(UInt<33>("h09a032000"))) @[Parameters.scala 137:52]
    node _putpartial_legal_T_17 = asSInt(_putpartial_legal_T_16) @[Parameters.scala 137:52]
    node _putpartial_legal_T_18 = eq(_putpartial_legal_T_17, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _putpartial_legal_T_19 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _putpartial_legal_T_20 = cvt(_putpartial_legal_T_19) @[Parameters.scala 137:49]
    node _putpartial_legal_T_21 = and(_putpartial_legal_T_20, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _putpartial_legal_T_22 = asSInt(_putpartial_legal_T_21) @[Parameters.scala 137:52]
    node _putpartial_legal_T_23 = eq(_putpartial_legal_T_22, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _putpartial_legal_T_24 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _putpartial_legal_T_25 = cvt(_putpartial_legal_T_24) @[Parameters.scala 137:49]
    node _putpartial_legal_T_26 = and(_putpartial_legal_T_25, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _putpartial_legal_T_27 = asSInt(_putpartial_legal_T_26) @[Parameters.scala 137:52]
    node _putpartial_legal_T_28 = eq(_putpartial_legal_T_27, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _putpartial_legal_T_29 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _putpartial_legal_T_30 = cvt(_putpartial_legal_T_29) @[Parameters.scala 137:49]
    node _putpartial_legal_T_31 = and(_putpartial_legal_T_30, asSInt(UInt<33>("h09a132000"))) @[Parameters.scala 137:52]
    node _putpartial_legal_T_32 = asSInt(_putpartial_legal_T_31) @[Parameters.scala 137:52]
    node _putpartial_legal_T_33 = eq(_putpartial_legal_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _putpartial_legal_T_34 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _putpartial_legal_T_35 = cvt(_putpartial_legal_T_34) @[Parameters.scala 137:49]
    node _putpartial_legal_T_36 = and(_putpartial_legal_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _putpartial_legal_T_37 = asSInt(_putpartial_legal_T_36) @[Parameters.scala 137:52]
    node _putpartial_legal_T_38 = eq(_putpartial_legal_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _putpartial_legal_T_39 = or(_putpartial_legal_T_18, _putpartial_legal_T_23) @[Parameters.scala 671:42]
    node _putpartial_legal_T_40 = or(_putpartial_legal_T_39, _putpartial_legal_T_28) @[Parameters.scala 671:42]
    node _putpartial_legal_T_41 = or(_putpartial_legal_T_40, _putpartial_legal_T_33) @[Parameters.scala 671:42]
    node _putpartial_legal_T_42 = or(_putpartial_legal_T_41, _putpartial_legal_T_38) @[Parameters.scala 671:42]
    node _putpartial_legal_T_43 = and(_putpartial_legal_T_13, _putpartial_legal_T_42) @[Parameters.scala 670:56]
    node _putpartial_legal_T_44 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _putpartial_legal_T_45 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _putpartial_legal_T_46 = cvt(_putpartial_legal_T_45) @[Parameters.scala 137:49]
    node _putpartial_legal_T_47 = and(_putpartial_legal_T_46, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _putpartial_legal_T_48 = asSInt(_putpartial_legal_T_47) @[Parameters.scala 137:52]
    node _putpartial_legal_T_49 = eq(_putpartial_legal_T_48, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _putpartial_legal_T_50 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _putpartial_legal_T_51 = cvt(_putpartial_legal_T_50) @[Parameters.scala 137:49]
    node _putpartial_legal_T_52 = and(_putpartial_legal_T_51, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _putpartial_legal_T_53 = asSInt(_putpartial_legal_T_52) @[Parameters.scala 137:52]
    node _putpartial_legal_T_54 = eq(_putpartial_legal_T_53, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _putpartial_legal_T_55 = or(_putpartial_legal_T_49, _putpartial_legal_T_54) @[Parameters.scala 671:42]
    node _putpartial_legal_T_56 = and(_putpartial_legal_T_44, _putpartial_legal_T_55) @[Parameters.scala 670:56]
    node _putpartial_legal_T_57 = or(UInt<1>("h00"), _putpartial_legal_T_9) @[Parameters.scala 672:30]
    node _putpartial_legal_T_58 = or(_putpartial_legal_T_57, _putpartial_legal_T_43) @[Parameters.scala 672:30]
    node putpartial_legal = or(_putpartial_legal_T_58, _putpartial_legal_T_56) @[Parameters.scala 672:30]
    wire putpartial : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 483:17]
    putpartial is invalid @[Edges.scala 483:17]
    putpartial.opcode <= UInt<1>("h01") @[Edges.scala 484:15]
    putpartial.param <= UInt<1>("h00") @[Edges.scala 485:15]
    putpartial.size <= s2_req.size @[Edges.scala 486:15]
    putpartial.source <= UInt<1>("h00") @[Edges.scala 487:15]
    putpartial.address <= s2_req.addr @[Edges.scala 488:15]
    putpartial.mask <= a_mask @[Edges.scala 489:15]
    putpartial.data <= pstore1_data @[Edges.scala 490:15]
    putpartial.corrupt <= UInt<1>("h00") @[Edges.scala 491:15]
    wire _atomics_WIRE : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[DCache.scala 559:31]
    _atomics_WIRE is invalid @[DCache.scala 559:31]
    node _atomics_legal_T = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_1 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_2 = and(_atomics_legal_T, _atomics_legal_T_1) @[Parameters.scala 92:37]
    node _atomics_legal_T_3 = or(UInt<1>("h00"), _atomics_legal_T_2) @[Parameters.scala 670:31]
    node _atomics_legal_T_4 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_5 = cvt(_atomics_legal_T_4) @[Parameters.scala 137:49]
    node _atomics_legal_T_6 = and(_atomics_legal_T_5, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_7 = asSInt(_atomics_legal_T_6) @[Parameters.scala 137:52]
    node _atomics_legal_T_8 = eq(_atomics_legal_T_7, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_9 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_10 = cvt(_atomics_legal_T_9) @[Parameters.scala 137:49]
    node _atomics_legal_T_11 = and(_atomics_legal_T_10, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_12 = asSInt(_atomics_legal_T_11) @[Parameters.scala 137:52]
    node _atomics_legal_T_13 = eq(_atomics_legal_T_12, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_14 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_15 = cvt(_atomics_legal_T_14) @[Parameters.scala 137:49]
    node _atomics_legal_T_16 = and(_atomics_legal_T_15, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_17 = asSInt(_atomics_legal_T_16) @[Parameters.scala 137:52]
    node _atomics_legal_T_18 = eq(_atomics_legal_T_17, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_19 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_20 = cvt(_atomics_legal_T_19) @[Parameters.scala 137:49]
    node _atomics_legal_T_21 = and(_atomics_legal_T_20, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_22 = asSInt(_atomics_legal_T_21) @[Parameters.scala 137:52]
    node _atomics_legal_T_23 = eq(_atomics_legal_T_22, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_24 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_25 = cvt(_atomics_legal_T_24) @[Parameters.scala 137:49]
    node _atomics_legal_T_26 = and(_atomics_legal_T_25, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_27 = asSInt(_atomics_legal_T_26) @[Parameters.scala 137:52]
    node _atomics_legal_T_28 = eq(_atomics_legal_T_27, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_29 = or(_atomics_legal_T_8, _atomics_legal_T_13) @[Parameters.scala 671:42]
    node _atomics_legal_T_30 = or(_atomics_legal_T_29, _atomics_legal_T_18) @[Parameters.scala 671:42]
    node _atomics_legal_T_31 = or(_atomics_legal_T_30, _atomics_legal_T_23) @[Parameters.scala 671:42]
    node _atomics_legal_T_32 = or(_atomics_legal_T_31, _atomics_legal_T_28) @[Parameters.scala 671:42]
    node _atomics_legal_T_33 = and(_atomics_legal_T_3, _atomics_legal_T_32) @[Parameters.scala 670:56]
    node _atomics_legal_T_34 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_35 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_36 = cvt(_atomics_legal_T_35) @[Parameters.scala 137:49]
    node _atomics_legal_T_37 = and(_atomics_legal_T_36, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_38 = asSInt(_atomics_legal_T_37) @[Parameters.scala 137:52]
    node _atomics_legal_T_39 = eq(_atomics_legal_T_38, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_40 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_41 = cvt(_atomics_legal_T_40) @[Parameters.scala 137:49]
    node _atomics_legal_T_42 = and(_atomics_legal_T_41, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_43 = asSInt(_atomics_legal_T_42) @[Parameters.scala 137:52]
    node _atomics_legal_T_44 = eq(_atomics_legal_T_43, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_45 = or(_atomics_legal_T_39, _atomics_legal_T_44) @[Parameters.scala 671:42]
    node _atomics_legal_T_46 = and(_atomics_legal_T_34, _atomics_legal_T_45) @[Parameters.scala 670:56]
    node _atomics_legal_T_47 = or(UInt<1>("h00"), _atomics_legal_T_33) @[Parameters.scala 672:30]
    node atomics_legal = or(_atomics_legal_T_47, _atomics_legal_T_46) @[Parameters.scala 672:30]
    wire atomics_a : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 513:17]
    atomics_a is invalid @[Edges.scala 513:17]
    atomics_a.opcode <= UInt<2>("h03") @[Edges.scala 514:15]
    atomics_a.param <= UInt<3>("h03") @[Edges.scala 515:15]
    atomics_a.size <= s2_req.size @[Edges.scala 516:15]
    atomics_a.source <= UInt<1>("h00") @[Edges.scala 517:15]
    atomics_a.address <= s2_req.addr @[Edges.scala 518:15]
    node _atomics_a_mask_sizeOH_T = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount = bits(_atomics_a_mask_sizeOH_T, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_1 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_2 = bits(_atomics_a_mask_sizeOH_T_1, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH = or(_atomics_a_mask_sizeOH_T_2, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size = bits(atomics_a_mask_sizeOH, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit = eq(atomics_a_mask_bit, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq = and(UInt<1>("h01"), atomics_a_mask_nbit) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T = and(atomics_a_mask_size, atomics_a_mask_eq) @[Misc.scala 214:38]
    node atomics_a_mask_acc = or(_atomics_a_mask_T, _atomics_a_mask_acc_T) @[Misc.scala 214:29]
    node atomics_a_mask_eq_1 = and(UInt<1>("h01"), atomics_a_mask_bit) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_1 = and(atomics_a_mask_size, atomics_a_mask_eq_1) @[Misc.scala 214:38]
    node atomics_a_mask_acc_1 = or(_atomics_a_mask_T, _atomics_a_mask_acc_T_1) @[Misc.scala 214:29]
    node atomics_a_mask_size_1 = bits(atomics_a_mask_sizeOH, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_1 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_1 = eq(atomics_a_mask_bit_1, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_2 = and(atomics_a_mask_eq, atomics_a_mask_nbit_1) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_2 = and(atomics_a_mask_size_1, atomics_a_mask_eq_2) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo = or(atomics_a_mask_acc, _atomics_a_mask_acc_T_2) @[Misc.scala 214:29]
    node atomics_a_mask_eq_3 = and(atomics_a_mask_eq, atomics_a_mask_bit_1) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_3 = and(atomics_a_mask_size_1, atomics_a_mask_eq_3) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi = or(atomics_a_mask_acc, _atomics_a_mask_acc_T_3) @[Misc.scala 214:29]
    node atomics_a_mask_eq_4 = and(atomics_a_mask_eq_1, atomics_a_mask_nbit_1) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_4 = and(atomics_a_mask_size_1, atomics_a_mask_eq_4) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo = or(atomics_a_mask_acc_1, _atomics_a_mask_acc_T_4) @[Misc.scala 214:29]
    node atomics_a_mask_eq_5 = and(atomics_a_mask_eq_1, atomics_a_mask_bit_1) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_5 = and(atomics_a_mask_size_1, atomics_a_mask_eq_5) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi = or(atomics_a_mask_acc_1, _atomics_a_mask_acc_T_5) @[Misc.scala 214:29]
    node atomics_a_mask_lo = cat(atomics_a_mask_lo_hi, atomics_a_mask_lo_lo) @[Cat.scala 30:58]
    node atomics_a_mask_hi = cat(atomics_a_mask_hi_hi, atomics_a_mask_hi_lo) @[Cat.scala 30:58]
    node _atomics_a_mask_T_1 = cat(atomics_a_mask_hi, atomics_a_mask_lo) @[Cat.scala 30:58]
    atomics_a.mask <= _atomics_a_mask_T_1 @[Edges.scala 519:15]
    atomics_a.data <= pstore1_data @[Edges.scala 520:15]
    atomics_a.corrupt <= UInt<1>("h00") @[Edges.scala 521:15]
    node _atomics_legal_T_48 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_49 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_50 = and(_atomics_legal_T_48, _atomics_legal_T_49) @[Parameters.scala 92:37]
    node _atomics_legal_T_51 = or(UInt<1>("h00"), _atomics_legal_T_50) @[Parameters.scala 670:31]
    node _atomics_legal_T_52 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_53 = cvt(_atomics_legal_T_52) @[Parameters.scala 137:49]
    node _atomics_legal_T_54 = and(_atomics_legal_T_53, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_55 = asSInt(_atomics_legal_T_54) @[Parameters.scala 137:52]
    node _atomics_legal_T_56 = eq(_atomics_legal_T_55, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_57 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_58 = cvt(_atomics_legal_T_57) @[Parameters.scala 137:49]
    node _atomics_legal_T_59 = and(_atomics_legal_T_58, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_60 = asSInt(_atomics_legal_T_59) @[Parameters.scala 137:52]
    node _atomics_legal_T_61 = eq(_atomics_legal_T_60, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_62 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_63 = cvt(_atomics_legal_T_62) @[Parameters.scala 137:49]
    node _atomics_legal_T_64 = and(_atomics_legal_T_63, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_65 = asSInt(_atomics_legal_T_64) @[Parameters.scala 137:52]
    node _atomics_legal_T_66 = eq(_atomics_legal_T_65, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_67 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_68 = cvt(_atomics_legal_T_67) @[Parameters.scala 137:49]
    node _atomics_legal_T_69 = and(_atomics_legal_T_68, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_70 = asSInt(_atomics_legal_T_69) @[Parameters.scala 137:52]
    node _atomics_legal_T_71 = eq(_atomics_legal_T_70, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_72 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_73 = cvt(_atomics_legal_T_72) @[Parameters.scala 137:49]
    node _atomics_legal_T_74 = and(_atomics_legal_T_73, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_75 = asSInt(_atomics_legal_T_74) @[Parameters.scala 137:52]
    node _atomics_legal_T_76 = eq(_atomics_legal_T_75, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_77 = or(_atomics_legal_T_56, _atomics_legal_T_61) @[Parameters.scala 671:42]
    node _atomics_legal_T_78 = or(_atomics_legal_T_77, _atomics_legal_T_66) @[Parameters.scala 671:42]
    node _atomics_legal_T_79 = or(_atomics_legal_T_78, _atomics_legal_T_71) @[Parameters.scala 671:42]
    node _atomics_legal_T_80 = or(_atomics_legal_T_79, _atomics_legal_T_76) @[Parameters.scala 671:42]
    node _atomics_legal_T_81 = and(_atomics_legal_T_51, _atomics_legal_T_80) @[Parameters.scala 670:56]
    node _atomics_legal_T_82 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_83 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_84 = cvt(_atomics_legal_T_83) @[Parameters.scala 137:49]
    node _atomics_legal_T_85 = and(_atomics_legal_T_84, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_86 = asSInt(_atomics_legal_T_85) @[Parameters.scala 137:52]
    node _atomics_legal_T_87 = eq(_atomics_legal_T_86, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_88 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_89 = cvt(_atomics_legal_T_88) @[Parameters.scala 137:49]
    node _atomics_legal_T_90 = and(_atomics_legal_T_89, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_91 = asSInt(_atomics_legal_T_90) @[Parameters.scala 137:52]
    node _atomics_legal_T_92 = eq(_atomics_legal_T_91, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_93 = or(_atomics_legal_T_87, _atomics_legal_T_92) @[Parameters.scala 671:42]
    node _atomics_legal_T_94 = and(_atomics_legal_T_82, _atomics_legal_T_93) @[Parameters.scala 670:56]
    node _atomics_legal_T_95 = or(UInt<1>("h00"), _atomics_legal_T_81) @[Parameters.scala 672:30]
    node atomics_legal_1 = or(_atomics_legal_T_95, _atomics_legal_T_94) @[Parameters.scala 672:30]
    wire atomics_a_1 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 513:17]
    atomics_a_1 is invalid @[Edges.scala 513:17]
    atomics_a_1.opcode <= UInt<2>("h03") @[Edges.scala 514:15]
    atomics_a_1.param <= UInt<3>("h00") @[Edges.scala 515:15]
    atomics_a_1.size <= s2_req.size @[Edges.scala 516:15]
    atomics_a_1.source <= UInt<1>("h00") @[Edges.scala 517:15]
    atomics_a_1.address <= s2_req.addr @[Edges.scala 518:15]
    node _atomics_a_mask_sizeOH_T_3 = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount_1 = bits(_atomics_a_mask_sizeOH_T_3, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_4 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount_1) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_5 = bits(_atomics_a_mask_sizeOH_T_4, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH_1 = or(_atomics_a_mask_sizeOH_T_5, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T_2 = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size_2 = bits(atomics_a_mask_sizeOH_1, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit_2 = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_2 = eq(atomics_a_mask_bit_2, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_6 = and(UInt<1>("h01"), atomics_a_mask_nbit_2) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_6 = and(atomics_a_mask_size_2, atomics_a_mask_eq_6) @[Misc.scala 214:38]
    node atomics_a_mask_acc_2 = or(_atomics_a_mask_T_2, _atomics_a_mask_acc_T_6) @[Misc.scala 214:29]
    node atomics_a_mask_eq_7 = and(UInt<1>("h01"), atomics_a_mask_bit_2) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_7 = and(atomics_a_mask_size_2, atomics_a_mask_eq_7) @[Misc.scala 214:38]
    node atomics_a_mask_acc_3 = or(_atomics_a_mask_T_2, _atomics_a_mask_acc_T_7) @[Misc.scala 214:29]
    node atomics_a_mask_size_3 = bits(atomics_a_mask_sizeOH_1, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_3 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_3 = eq(atomics_a_mask_bit_3, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_8 = and(atomics_a_mask_eq_6, atomics_a_mask_nbit_3) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_8 = and(atomics_a_mask_size_3, atomics_a_mask_eq_8) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo_1 = or(atomics_a_mask_acc_2, _atomics_a_mask_acc_T_8) @[Misc.scala 214:29]
    node atomics_a_mask_eq_9 = and(atomics_a_mask_eq_6, atomics_a_mask_bit_3) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_9 = and(atomics_a_mask_size_3, atomics_a_mask_eq_9) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi_1 = or(atomics_a_mask_acc_2, _atomics_a_mask_acc_T_9) @[Misc.scala 214:29]
    node atomics_a_mask_eq_10 = and(atomics_a_mask_eq_7, atomics_a_mask_nbit_3) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_10 = and(atomics_a_mask_size_3, atomics_a_mask_eq_10) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo_1 = or(atomics_a_mask_acc_3, _atomics_a_mask_acc_T_10) @[Misc.scala 214:29]
    node atomics_a_mask_eq_11 = and(atomics_a_mask_eq_7, atomics_a_mask_bit_3) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_11 = and(atomics_a_mask_size_3, atomics_a_mask_eq_11) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi_1 = or(atomics_a_mask_acc_3, _atomics_a_mask_acc_T_11) @[Misc.scala 214:29]
    node atomics_a_mask_lo_1 = cat(atomics_a_mask_lo_hi_1, atomics_a_mask_lo_lo_1) @[Cat.scala 30:58]
    node atomics_a_mask_hi_1 = cat(atomics_a_mask_hi_hi_1, atomics_a_mask_hi_lo_1) @[Cat.scala 30:58]
    node _atomics_a_mask_T_3 = cat(atomics_a_mask_hi_1, atomics_a_mask_lo_1) @[Cat.scala 30:58]
    atomics_a_1.mask <= _atomics_a_mask_T_3 @[Edges.scala 519:15]
    atomics_a_1.data <= pstore1_data @[Edges.scala 520:15]
    atomics_a_1.corrupt <= UInt<1>("h00") @[Edges.scala 521:15]
    node _atomics_legal_T_96 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_97 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_98 = and(_atomics_legal_T_96, _atomics_legal_T_97) @[Parameters.scala 92:37]
    node _atomics_legal_T_99 = or(UInt<1>("h00"), _atomics_legal_T_98) @[Parameters.scala 670:31]
    node _atomics_legal_T_100 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_101 = cvt(_atomics_legal_T_100) @[Parameters.scala 137:49]
    node _atomics_legal_T_102 = and(_atomics_legal_T_101, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_103 = asSInt(_atomics_legal_T_102) @[Parameters.scala 137:52]
    node _atomics_legal_T_104 = eq(_atomics_legal_T_103, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_105 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_106 = cvt(_atomics_legal_T_105) @[Parameters.scala 137:49]
    node _atomics_legal_T_107 = and(_atomics_legal_T_106, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_108 = asSInt(_atomics_legal_T_107) @[Parameters.scala 137:52]
    node _atomics_legal_T_109 = eq(_atomics_legal_T_108, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_110 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_111 = cvt(_atomics_legal_T_110) @[Parameters.scala 137:49]
    node _atomics_legal_T_112 = and(_atomics_legal_T_111, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_113 = asSInt(_atomics_legal_T_112) @[Parameters.scala 137:52]
    node _atomics_legal_T_114 = eq(_atomics_legal_T_113, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_115 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_116 = cvt(_atomics_legal_T_115) @[Parameters.scala 137:49]
    node _atomics_legal_T_117 = and(_atomics_legal_T_116, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_118 = asSInt(_atomics_legal_T_117) @[Parameters.scala 137:52]
    node _atomics_legal_T_119 = eq(_atomics_legal_T_118, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_120 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_121 = cvt(_atomics_legal_T_120) @[Parameters.scala 137:49]
    node _atomics_legal_T_122 = and(_atomics_legal_T_121, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_123 = asSInt(_atomics_legal_T_122) @[Parameters.scala 137:52]
    node _atomics_legal_T_124 = eq(_atomics_legal_T_123, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_125 = or(_atomics_legal_T_104, _atomics_legal_T_109) @[Parameters.scala 671:42]
    node _atomics_legal_T_126 = or(_atomics_legal_T_125, _atomics_legal_T_114) @[Parameters.scala 671:42]
    node _atomics_legal_T_127 = or(_atomics_legal_T_126, _atomics_legal_T_119) @[Parameters.scala 671:42]
    node _atomics_legal_T_128 = or(_atomics_legal_T_127, _atomics_legal_T_124) @[Parameters.scala 671:42]
    node _atomics_legal_T_129 = and(_atomics_legal_T_99, _atomics_legal_T_128) @[Parameters.scala 670:56]
    node _atomics_legal_T_130 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_131 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_132 = cvt(_atomics_legal_T_131) @[Parameters.scala 137:49]
    node _atomics_legal_T_133 = and(_atomics_legal_T_132, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_134 = asSInt(_atomics_legal_T_133) @[Parameters.scala 137:52]
    node _atomics_legal_T_135 = eq(_atomics_legal_T_134, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_136 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_137 = cvt(_atomics_legal_T_136) @[Parameters.scala 137:49]
    node _atomics_legal_T_138 = and(_atomics_legal_T_137, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_139 = asSInt(_atomics_legal_T_138) @[Parameters.scala 137:52]
    node _atomics_legal_T_140 = eq(_atomics_legal_T_139, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_141 = or(_atomics_legal_T_135, _atomics_legal_T_140) @[Parameters.scala 671:42]
    node _atomics_legal_T_142 = and(_atomics_legal_T_130, _atomics_legal_T_141) @[Parameters.scala 670:56]
    node _atomics_legal_T_143 = or(UInt<1>("h00"), _atomics_legal_T_129) @[Parameters.scala 672:30]
    node atomics_legal_2 = or(_atomics_legal_T_143, _atomics_legal_T_142) @[Parameters.scala 672:30]
    wire atomics_a_2 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 513:17]
    atomics_a_2 is invalid @[Edges.scala 513:17]
    atomics_a_2.opcode <= UInt<2>("h03") @[Edges.scala 514:15]
    atomics_a_2.param <= UInt<3>("h01") @[Edges.scala 515:15]
    atomics_a_2.size <= s2_req.size @[Edges.scala 516:15]
    atomics_a_2.source <= UInt<1>("h00") @[Edges.scala 517:15]
    atomics_a_2.address <= s2_req.addr @[Edges.scala 518:15]
    node _atomics_a_mask_sizeOH_T_6 = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount_2 = bits(_atomics_a_mask_sizeOH_T_6, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_7 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount_2) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_8 = bits(_atomics_a_mask_sizeOH_T_7, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH_2 = or(_atomics_a_mask_sizeOH_T_8, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T_4 = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size_4 = bits(atomics_a_mask_sizeOH_2, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit_4 = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_4 = eq(atomics_a_mask_bit_4, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_12 = and(UInt<1>("h01"), atomics_a_mask_nbit_4) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_12 = and(atomics_a_mask_size_4, atomics_a_mask_eq_12) @[Misc.scala 214:38]
    node atomics_a_mask_acc_4 = or(_atomics_a_mask_T_4, _atomics_a_mask_acc_T_12) @[Misc.scala 214:29]
    node atomics_a_mask_eq_13 = and(UInt<1>("h01"), atomics_a_mask_bit_4) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_13 = and(atomics_a_mask_size_4, atomics_a_mask_eq_13) @[Misc.scala 214:38]
    node atomics_a_mask_acc_5 = or(_atomics_a_mask_T_4, _atomics_a_mask_acc_T_13) @[Misc.scala 214:29]
    node atomics_a_mask_size_5 = bits(atomics_a_mask_sizeOH_2, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_5 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_5 = eq(atomics_a_mask_bit_5, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_14 = and(atomics_a_mask_eq_12, atomics_a_mask_nbit_5) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_14 = and(atomics_a_mask_size_5, atomics_a_mask_eq_14) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo_2 = or(atomics_a_mask_acc_4, _atomics_a_mask_acc_T_14) @[Misc.scala 214:29]
    node atomics_a_mask_eq_15 = and(atomics_a_mask_eq_12, atomics_a_mask_bit_5) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_15 = and(atomics_a_mask_size_5, atomics_a_mask_eq_15) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi_2 = or(atomics_a_mask_acc_4, _atomics_a_mask_acc_T_15) @[Misc.scala 214:29]
    node atomics_a_mask_eq_16 = and(atomics_a_mask_eq_13, atomics_a_mask_nbit_5) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_16 = and(atomics_a_mask_size_5, atomics_a_mask_eq_16) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo_2 = or(atomics_a_mask_acc_5, _atomics_a_mask_acc_T_16) @[Misc.scala 214:29]
    node atomics_a_mask_eq_17 = and(atomics_a_mask_eq_13, atomics_a_mask_bit_5) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_17 = and(atomics_a_mask_size_5, atomics_a_mask_eq_17) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi_2 = or(atomics_a_mask_acc_5, _atomics_a_mask_acc_T_17) @[Misc.scala 214:29]
    node atomics_a_mask_lo_2 = cat(atomics_a_mask_lo_hi_2, atomics_a_mask_lo_lo_2) @[Cat.scala 30:58]
    node atomics_a_mask_hi_2 = cat(atomics_a_mask_hi_hi_2, atomics_a_mask_hi_lo_2) @[Cat.scala 30:58]
    node _atomics_a_mask_T_5 = cat(atomics_a_mask_hi_2, atomics_a_mask_lo_2) @[Cat.scala 30:58]
    atomics_a_2.mask <= _atomics_a_mask_T_5 @[Edges.scala 519:15]
    atomics_a_2.data <= pstore1_data @[Edges.scala 520:15]
    atomics_a_2.corrupt <= UInt<1>("h00") @[Edges.scala 521:15]
    node _atomics_legal_T_144 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_145 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_146 = and(_atomics_legal_T_144, _atomics_legal_T_145) @[Parameters.scala 92:37]
    node _atomics_legal_T_147 = or(UInt<1>("h00"), _atomics_legal_T_146) @[Parameters.scala 670:31]
    node _atomics_legal_T_148 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_149 = cvt(_atomics_legal_T_148) @[Parameters.scala 137:49]
    node _atomics_legal_T_150 = and(_atomics_legal_T_149, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_151 = asSInt(_atomics_legal_T_150) @[Parameters.scala 137:52]
    node _atomics_legal_T_152 = eq(_atomics_legal_T_151, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_153 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_154 = cvt(_atomics_legal_T_153) @[Parameters.scala 137:49]
    node _atomics_legal_T_155 = and(_atomics_legal_T_154, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_156 = asSInt(_atomics_legal_T_155) @[Parameters.scala 137:52]
    node _atomics_legal_T_157 = eq(_atomics_legal_T_156, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_158 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_159 = cvt(_atomics_legal_T_158) @[Parameters.scala 137:49]
    node _atomics_legal_T_160 = and(_atomics_legal_T_159, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_161 = asSInt(_atomics_legal_T_160) @[Parameters.scala 137:52]
    node _atomics_legal_T_162 = eq(_atomics_legal_T_161, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_163 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_164 = cvt(_atomics_legal_T_163) @[Parameters.scala 137:49]
    node _atomics_legal_T_165 = and(_atomics_legal_T_164, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_166 = asSInt(_atomics_legal_T_165) @[Parameters.scala 137:52]
    node _atomics_legal_T_167 = eq(_atomics_legal_T_166, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_168 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_169 = cvt(_atomics_legal_T_168) @[Parameters.scala 137:49]
    node _atomics_legal_T_170 = and(_atomics_legal_T_169, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_171 = asSInt(_atomics_legal_T_170) @[Parameters.scala 137:52]
    node _atomics_legal_T_172 = eq(_atomics_legal_T_171, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_173 = or(_atomics_legal_T_152, _atomics_legal_T_157) @[Parameters.scala 671:42]
    node _atomics_legal_T_174 = or(_atomics_legal_T_173, _atomics_legal_T_162) @[Parameters.scala 671:42]
    node _atomics_legal_T_175 = or(_atomics_legal_T_174, _atomics_legal_T_167) @[Parameters.scala 671:42]
    node _atomics_legal_T_176 = or(_atomics_legal_T_175, _atomics_legal_T_172) @[Parameters.scala 671:42]
    node _atomics_legal_T_177 = and(_atomics_legal_T_147, _atomics_legal_T_176) @[Parameters.scala 670:56]
    node _atomics_legal_T_178 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_179 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_180 = cvt(_atomics_legal_T_179) @[Parameters.scala 137:49]
    node _atomics_legal_T_181 = and(_atomics_legal_T_180, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_182 = asSInt(_atomics_legal_T_181) @[Parameters.scala 137:52]
    node _atomics_legal_T_183 = eq(_atomics_legal_T_182, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_184 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_185 = cvt(_atomics_legal_T_184) @[Parameters.scala 137:49]
    node _atomics_legal_T_186 = and(_atomics_legal_T_185, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_187 = asSInt(_atomics_legal_T_186) @[Parameters.scala 137:52]
    node _atomics_legal_T_188 = eq(_atomics_legal_T_187, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_189 = or(_atomics_legal_T_183, _atomics_legal_T_188) @[Parameters.scala 671:42]
    node _atomics_legal_T_190 = and(_atomics_legal_T_178, _atomics_legal_T_189) @[Parameters.scala 670:56]
    node _atomics_legal_T_191 = or(UInt<1>("h00"), _atomics_legal_T_177) @[Parameters.scala 672:30]
    node atomics_legal_3 = or(_atomics_legal_T_191, _atomics_legal_T_190) @[Parameters.scala 672:30]
    wire atomics_a_3 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 513:17]
    atomics_a_3 is invalid @[Edges.scala 513:17]
    atomics_a_3.opcode <= UInt<2>("h03") @[Edges.scala 514:15]
    atomics_a_3.param <= UInt<3>("h02") @[Edges.scala 515:15]
    atomics_a_3.size <= s2_req.size @[Edges.scala 516:15]
    atomics_a_3.source <= UInt<1>("h00") @[Edges.scala 517:15]
    atomics_a_3.address <= s2_req.addr @[Edges.scala 518:15]
    node _atomics_a_mask_sizeOH_T_9 = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount_3 = bits(_atomics_a_mask_sizeOH_T_9, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_10 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount_3) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_11 = bits(_atomics_a_mask_sizeOH_T_10, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH_3 = or(_atomics_a_mask_sizeOH_T_11, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T_6 = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size_6 = bits(atomics_a_mask_sizeOH_3, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit_6 = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_6 = eq(atomics_a_mask_bit_6, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_18 = and(UInt<1>("h01"), atomics_a_mask_nbit_6) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_18 = and(atomics_a_mask_size_6, atomics_a_mask_eq_18) @[Misc.scala 214:38]
    node atomics_a_mask_acc_6 = or(_atomics_a_mask_T_6, _atomics_a_mask_acc_T_18) @[Misc.scala 214:29]
    node atomics_a_mask_eq_19 = and(UInt<1>("h01"), atomics_a_mask_bit_6) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_19 = and(atomics_a_mask_size_6, atomics_a_mask_eq_19) @[Misc.scala 214:38]
    node atomics_a_mask_acc_7 = or(_atomics_a_mask_T_6, _atomics_a_mask_acc_T_19) @[Misc.scala 214:29]
    node atomics_a_mask_size_7 = bits(atomics_a_mask_sizeOH_3, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_7 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_7 = eq(atomics_a_mask_bit_7, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_20 = and(atomics_a_mask_eq_18, atomics_a_mask_nbit_7) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_20 = and(atomics_a_mask_size_7, atomics_a_mask_eq_20) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo_3 = or(atomics_a_mask_acc_6, _atomics_a_mask_acc_T_20) @[Misc.scala 214:29]
    node atomics_a_mask_eq_21 = and(atomics_a_mask_eq_18, atomics_a_mask_bit_7) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_21 = and(atomics_a_mask_size_7, atomics_a_mask_eq_21) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi_3 = or(atomics_a_mask_acc_6, _atomics_a_mask_acc_T_21) @[Misc.scala 214:29]
    node atomics_a_mask_eq_22 = and(atomics_a_mask_eq_19, atomics_a_mask_nbit_7) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_22 = and(atomics_a_mask_size_7, atomics_a_mask_eq_22) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo_3 = or(atomics_a_mask_acc_7, _atomics_a_mask_acc_T_22) @[Misc.scala 214:29]
    node atomics_a_mask_eq_23 = and(atomics_a_mask_eq_19, atomics_a_mask_bit_7) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_23 = and(atomics_a_mask_size_7, atomics_a_mask_eq_23) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi_3 = or(atomics_a_mask_acc_7, _atomics_a_mask_acc_T_23) @[Misc.scala 214:29]
    node atomics_a_mask_lo_3 = cat(atomics_a_mask_lo_hi_3, atomics_a_mask_lo_lo_3) @[Cat.scala 30:58]
    node atomics_a_mask_hi_3 = cat(atomics_a_mask_hi_hi_3, atomics_a_mask_hi_lo_3) @[Cat.scala 30:58]
    node _atomics_a_mask_T_7 = cat(atomics_a_mask_hi_3, atomics_a_mask_lo_3) @[Cat.scala 30:58]
    atomics_a_3.mask <= _atomics_a_mask_T_7 @[Edges.scala 519:15]
    atomics_a_3.data <= pstore1_data @[Edges.scala 520:15]
    atomics_a_3.corrupt <= UInt<1>("h00") @[Edges.scala 521:15]
    node _atomics_legal_T_192 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_193 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_194 = and(_atomics_legal_T_192, _atomics_legal_T_193) @[Parameters.scala 92:37]
    node _atomics_legal_T_195 = or(UInt<1>("h00"), _atomics_legal_T_194) @[Parameters.scala 670:31]
    node _atomics_legal_T_196 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_197 = cvt(_atomics_legal_T_196) @[Parameters.scala 137:49]
    node _atomics_legal_T_198 = and(_atomics_legal_T_197, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_199 = asSInt(_atomics_legal_T_198) @[Parameters.scala 137:52]
    node _atomics_legal_T_200 = eq(_atomics_legal_T_199, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_201 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_202 = cvt(_atomics_legal_T_201) @[Parameters.scala 137:49]
    node _atomics_legal_T_203 = and(_atomics_legal_T_202, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_204 = asSInt(_atomics_legal_T_203) @[Parameters.scala 137:52]
    node _atomics_legal_T_205 = eq(_atomics_legal_T_204, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_206 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_207 = cvt(_atomics_legal_T_206) @[Parameters.scala 137:49]
    node _atomics_legal_T_208 = and(_atomics_legal_T_207, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_209 = asSInt(_atomics_legal_T_208) @[Parameters.scala 137:52]
    node _atomics_legal_T_210 = eq(_atomics_legal_T_209, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_211 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_212 = cvt(_atomics_legal_T_211) @[Parameters.scala 137:49]
    node _atomics_legal_T_213 = and(_atomics_legal_T_212, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_214 = asSInt(_atomics_legal_T_213) @[Parameters.scala 137:52]
    node _atomics_legal_T_215 = eq(_atomics_legal_T_214, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_216 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_217 = cvt(_atomics_legal_T_216) @[Parameters.scala 137:49]
    node _atomics_legal_T_218 = and(_atomics_legal_T_217, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_219 = asSInt(_atomics_legal_T_218) @[Parameters.scala 137:52]
    node _atomics_legal_T_220 = eq(_atomics_legal_T_219, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_221 = or(_atomics_legal_T_200, _atomics_legal_T_205) @[Parameters.scala 671:42]
    node _atomics_legal_T_222 = or(_atomics_legal_T_221, _atomics_legal_T_210) @[Parameters.scala 671:42]
    node _atomics_legal_T_223 = or(_atomics_legal_T_222, _atomics_legal_T_215) @[Parameters.scala 671:42]
    node _atomics_legal_T_224 = or(_atomics_legal_T_223, _atomics_legal_T_220) @[Parameters.scala 671:42]
    node _atomics_legal_T_225 = and(_atomics_legal_T_195, _atomics_legal_T_224) @[Parameters.scala 670:56]
    node _atomics_legal_T_226 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_227 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_228 = cvt(_atomics_legal_T_227) @[Parameters.scala 137:49]
    node _atomics_legal_T_229 = and(_atomics_legal_T_228, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_230 = asSInt(_atomics_legal_T_229) @[Parameters.scala 137:52]
    node _atomics_legal_T_231 = eq(_atomics_legal_T_230, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_232 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_233 = cvt(_atomics_legal_T_232) @[Parameters.scala 137:49]
    node _atomics_legal_T_234 = and(_atomics_legal_T_233, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_235 = asSInt(_atomics_legal_T_234) @[Parameters.scala 137:52]
    node _atomics_legal_T_236 = eq(_atomics_legal_T_235, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_237 = or(_atomics_legal_T_231, _atomics_legal_T_236) @[Parameters.scala 671:42]
    node _atomics_legal_T_238 = and(_atomics_legal_T_226, _atomics_legal_T_237) @[Parameters.scala 670:56]
    node _atomics_legal_T_239 = or(UInt<1>("h00"), _atomics_legal_T_225) @[Parameters.scala 672:30]
    node atomics_legal_4 = or(_atomics_legal_T_239, _atomics_legal_T_238) @[Parameters.scala 672:30]
    wire atomics_a_4 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 498:17]
    atomics_a_4 is invalid @[Edges.scala 498:17]
    atomics_a_4.opcode <= UInt<2>("h02") @[Edges.scala 499:15]
    atomics_a_4.param <= UInt<3>("h04") @[Edges.scala 500:15]
    atomics_a_4.size <= s2_req.size @[Edges.scala 501:15]
    atomics_a_4.source <= UInt<1>("h00") @[Edges.scala 502:15]
    atomics_a_4.address <= s2_req.addr @[Edges.scala 503:15]
    node _atomics_a_mask_sizeOH_T_12 = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount_4 = bits(_atomics_a_mask_sizeOH_T_12, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_13 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount_4) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_14 = bits(_atomics_a_mask_sizeOH_T_13, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH_4 = or(_atomics_a_mask_sizeOH_T_14, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T_8 = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size_8 = bits(atomics_a_mask_sizeOH_4, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit_8 = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_8 = eq(atomics_a_mask_bit_8, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_24 = and(UInt<1>("h01"), atomics_a_mask_nbit_8) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_24 = and(atomics_a_mask_size_8, atomics_a_mask_eq_24) @[Misc.scala 214:38]
    node atomics_a_mask_acc_8 = or(_atomics_a_mask_T_8, _atomics_a_mask_acc_T_24) @[Misc.scala 214:29]
    node atomics_a_mask_eq_25 = and(UInt<1>("h01"), atomics_a_mask_bit_8) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_25 = and(atomics_a_mask_size_8, atomics_a_mask_eq_25) @[Misc.scala 214:38]
    node atomics_a_mask_acc_9 = or(_atomics_a_mask_T_8, _atomics_a_mask_acc_T_25) @[Misc.scala 214:29]
    node atomics_a_mask_size_9 = bits(atomics_a_mask_sizeOH_4, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_9 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_9 = eq(atomics_a_mask_bit_9, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_26 = and(atomics_a_mask_eq_24, atomics_a_mask_nbit_9) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_26 = and(atomics_a_mask_size_9, atomics_a_mask_eq_26) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo_4 = or(atomics_a_mask_acc_8, _atomics_a_mask_acc_T_26) @[Misc.scala 214:29]
    node atomics_a_mask_eq_27 = and(atomics_a_mask_eq_24, atomics_a_mask_bit_9) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_27 = and(atomics_a_mask_size_9, atomics_a_mask_eq_27) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi_4 = or(atomics_a_mask_acc_8, _atomics_a_mask_acc_T_27) @[Misc.scala 214:29]
    node atomics_a_mask_eq_28 = and(atomics_a_mask_eq_25, atomics_a_mask_nbit_9) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_28 = and(atomics_a_mask_size_9, atomics_a_mask_eq_28) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo_4 = or(atomics_a_mask_acc_9, _atomics_a_mask_acc_T_28) @[Misc.scala 214:29]
    node atomics_a_mask_eq_29 = and(atomics_a_mask_eq_25, atomics_a_mask_bit_9) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_29 = and(atomics_a_mask_size_9, atomics_a_mask_eq_29) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi_4 = or(atomics_a_mask_acc_9, _atomics_a_mask_acc_T_29) @[Misc.scala 214:29]
    node atomics_a_mask_lo_4 = cat(atomics_a_mask_lo_hi_4, atomics_a_mask_lo_lo_4) @[Cat.scala 30:58]
    node atomics_a_mask_hi_4 = cat(atomics_a_mask_hi_hi_4, atomics_a_mask_hi_lo_4) @[Cat.scala 30:58]
    node _atomics_a_mask_T_9 = cat(atomics_a_mask_hi_4, atomics_a_mask_lo_4) @[Cat.scala 30:58]
    atomics_a_4.mask <= _atomics_a_mask_T_9 @[Edges.scala 504:15]
    atomics_a_4.data <= pstore1_data @[Edges.scala 505:15]
    atomics_a_4.corrupt <= UInt<1>("h00") @[Edges.scala 506:15]
    node _atomics_legal_T_240 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_241 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_242 = and(_atomics_legal_T_240, _atomics_legal_T_241) @[Parameters.scala 92:37]
    node _atomics_legal_T_243 = or(UInt<1>("h00"), _atomics_legal_T_242) @[Parameters.scala 670:31]
    node _atomics_legal_T_244 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_245 = cvt(_atomics_legal_T_244) @[Parameters.scala 137:49]
    node _atomics_legal_T_246 = and(_atomics_legal_T_245, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_247 = asSInt(_atomics_legal_T_246) @[Parameters.scala 137:52]
    node _atomics_legal_T_248 = eq(_atomics_legal_T_247, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_249 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_250 = cvt(_atomics_legal_T_249) @[Parameters.scala 137:49]
    node _atomics_legal_T_251 = and(_atomics_legal_T_250, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_252 = asSInt(_atomics_legal_T_251) @[Parameters.scala 137:52]
    node _atomics_legal_T_253 = eq(_atomics_legal_T_252, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_254 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_255 = cvt(_atomics_legal_T_254) @[Parameters.scala 137:49]
    node _atomics_legal_T_256 = and(_atomics_legal_T_255, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_257 = asSInt(_atomics_legal_T_256) @[Parameters.scala 137:52]
    node _atomics_legal_T_258 = eq(_atomics_legal_T_257, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_259 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_260 = cvt(_atomics_legal_T_259) @[Parameters.scala 137:49]
    node _atomics_legal_T_261 = and(_atomics_legal_T_260, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_262 = asSInt(_atomics_legal_T_261) @[Parameters.scala 137:52]
    node _atomics_legal_T_263 = eq(_atomics_legal_T_262, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_264 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_265 = cvt(_atomics_legal_T_264) @[Parameters.scala 137:49]
    node _atomics_legal_T_266 = and(_atomics_legal_T_265, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_267 = asSInt(_atomics_legal_T_266) @[Parameters.scala 137:52]
    node _atomics_legal_T_268 = eq(_atomics_legal_T_267, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_269 = or(_atomics_legal_T_248, _atomics_legal_T_253) @[Parameters.scala 671:42]
    node _atomics_legal_T_270 = or(_atomics_legal_T_269, _atomics_legal_T_258) @[Parameters.scala 671:42]
    node _atomics_legal_T_271 = or(_atomics_legal_T_270, _atomics_legal_T_263) @[Parameters.scala 671:42]
    node _atomics_legal_T_272 = or(_atomics_legal_T_271, _atomics_legal_T_268) @[Parameters.scala 671:42]
    node _atomics_legal_T_273 = and(_atomics_legal_T_243, _atomics_legal_T_272) @[Parameters.scala 670:56]
    node _atomics_legal_T_274 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_275 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_276 = cvt(_atomics_legal_T_275) @[Parameters.scala 137:49]
    node _atomics_legal_T_277 = and(_atomics_legal_T_276, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_278 = asSInt(_atomics_legal_T_277) @[Parameters.scala 137:52]
    node _atomics_legal_T_279 = eq(_atomics_legal_T_278, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_280 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_281 = cvt(_atomics_legal_T_280) @[Parameters.scala 137:49]
    node _atomics_legal_T_282 = and(_atomics_legal_T_281, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_283 = asSInt(_atomics_legal_T_282) @[Parameters.scala 137:52]
    node _atomics_legal_T_284 = eq(_atomics_legal_T_283, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_285 = or(_atomics_legal_T_279, _atomics_legal_T_284) @[Parameters.scala 671:42]
    node _atomics_legal_T_286 = and(_atomics_legal_T_274, _atomics_legal_T_285) @[Parameters.scala 670:56]
    node _atomics_legal_T_287 = or(UInt<1>("h00"), _atomics_legal_T_273) @[Parameters.scala 672:30]
    node atomics_legal_5 = or(_atomics_legal_T_287, _atomics_legal_T_286) @[Parameters.scala 672:30]
    wire atomics_a_5 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 498:17]
    atomics_a_5 is invalid @[Edges.scala 498:17]
    atomics_a_5.opcode <= UInt<2>("h02") @[Edges.scala 499:15]
    atomics_a_5.param <= UInt<3>("h00") @[Edges.scala 500:15]
    atomics_a_5.size <= s2_req.size @[Edges.scala 501:15]
    atomics_a_5.source <= UInt<1>("h00") @[Edges.scala 502:15]
    atomics_a_5.address <= s2_req.addr @[Edges.scala 503:15]
    node _atomics_a_mask_sizeOH_T_15 = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount_5 = bits(_atomics_a_mask_sizeOH_T_15, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_16 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount_5) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_17 = bits(_atomics_a_mask_sizeOH_T_16, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH_5 = or(_atomics_a_mask_sizeOH_T_17, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T_10 = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size_10 = bits(atomics_a_mask_sizeOH_5, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit_10 = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_10 = eq(atomics_a_mask_bit_10, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_30 = and(UInt<1>("h01"), atomics_a_mask_nbit_10) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_30 = and(atomics_a_mask_size_10, atomics_a_mask_eq_30) @[Misc.scala 214:38]
    node atomics_a_mask_acc_10 = or(_atomics_a_mask_T_10, _atomics_a_mask_acc_T_30) @[Misc.scala 214:29]
    node atomics_a_mask_eq_31 = and(UInt<1>("h01"), atomics_a_mask_bit_10) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_31 = and(atomics_a_mask_size_10, atomics_a_mask_eq_31) @[Misc.scala 214:38]
    node atomics_a_mask_acc_11 = or(_atomics_a_mask_T_10, _atomics_a_mask_acc_T_31) @[Misc.scala 214:29]
    node atomics_a_mask_size_11 = bits(atomics_a_mask_sizeOH_5, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_11 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_11 = eq(atomics_a_mask_bit_11, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_32 = and(atomics_a_mask_eq_30, atomics_a_mask_nbit_11) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_32 = and(atomics_a_mask_size_11, atomics_a_mask_eq_32) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo_5 = or(atomics_a_mask_acc_10, _atomics_a_mask_acc_T_32) @[Misc.scala 214:29]
    node atomics_a_mask_eq_33 = and(atomics_a_mask_eq_30, atomics_a_mask_bit_11) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_33 = and(atomics_a_mask_size_11, atomics_a_mask_eq_33) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi_5 = or(atomics_a_mask_acc_10, _atomics_a_mask_acc_T_33) @[Misc.scala 214:29]
    node atomics_a_mask_eq_34 = and(atomics_a_mask_eq_31, atomics_a_mask_nbit_11) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_34 = and(atomics_a_mask_size_11, atomics_a_mask_eq_34) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo_5 = or(atomics_a_mask_acc_11, _atomics_a_mask_acc_T_34) @[Misc.scala 214:29]
    node atomics_a_mask_eq_35 = and(atomics_a_mask_eq_31, atomics_a_mask_bit_11) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_35 = and(atomics_a_mask_size_11, atomics_a_mask_eq_35) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi_5 = or(atomics_a_mask_acc_11, _atomics_a_mask_acc_T_35) @[Misc.scala 214:29]
    node atomics_a_mask_lo_5 = cat(atomics_a_mask_lo_hi_5, atomics_a_mask_lo_lo_5) @[Cat.scala 30:58]
    node atomics_a_mask_hi_5 = cat(atomics_a_mask_hi_hi_5, atomics_a_mask_hi_lo_5) @[Cat.scala 30:58]
    node _atomics_a_mask_T_11 = cat(atomics_a_mask_hi_5, atomics_a_mask_lo_5) @[Cat.scala 30:58]
    atomics_a_5.mask <= _atomics_a_mask_T_11 @[Edges.scala 504:15]
    atomics_a_5.data <= pstore1_data @[Edges.scala 505:15]
    atomics_a_5.corrupt <= UInt<1>("h00") @[Edges.scala 506:15]
    node _atomics_legal_T_288 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_289 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_290 = and(_atomics_legal_T_288, _atomics_legal_T_289) @[Parameters.scala 92:37]
    node _atomics_legal_T_291 = or(UInt<1>("h00"), _atomics_legal_T_290) @[Parameters.scala 670:31]
    node _atomics_legal_T_292 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_293 = cvt(_atomics_legal_T_292) @[Parameters.scala 137:49]
    node _atomics_legal_T_294 = and(_atomics_legal_T_293, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_295 = asSInt(_atomics_legal_T_294) @[Parameters.scala 137:52]
    node _atomics_legal_T_296 = eq(_atomics_legal_T_295, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_297 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_298 = cvt(_atomics_legal_T_297) @[Parameters.scala 137:49]
    node _atomics_legal_T_299 = and(_atomics_legal_T_298, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_300 = asSInt(_atomics_legal_T_299) @[Parameters.scala 137:52]
    node _atomics_legal_T_301 = eq(_atomics_legal_T_300, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_302 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_303 = cvt(_atomics_legal_T_302) @[Parameters.scala 137:49]
    node _atomics_legal_T_304 = and(_atomics_legal_T_303, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_305 = asSInt(_atomics_legal_T_304) @[Parameters.scala 137:52]
    node _atomics_legal_T_306 = eq(_atomics_legal_T_305, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_307 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_308 = cvt(_atomics_legal_T_307) @[Parameters.scala 137:49]
    node _atomics_legal_T_309 = and(_atomics_legal_T_308, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_310 = asSInt(_atomics_legal_T_309) @[Parameters.scala 137:52]
    node _atomics_legal_T_311 = eq(_atomics_legal_T_310, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_312 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_313 = cvt(_atomics_legal_T_312) @[Parameters.scala 137:49]
    node _atomics_legal_T_314 = and(_atomics_legal_T_313, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_315 = asSInt(_atomics_legal_T_314) @[Parameters.scala 137:52]
    node _atomics_legal_T_316 = eq(_atomics_legal_T_315, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_317 = or(_atomics_legal_T_296, _atomics_legal_T_301) @[Parameters.scala 671:42]
    node _atomics_legal_T_318 = or(_atomics_legal_T_317, _atomics_legal_T_306) @[Parameters.scala 671:42]
    node _atomics_legal_T_319 = or(_atomics_legal_T_318, _atomics_legal_T_311) @[Parameters.scala 671:42]
    node _atomics_legal_T_320 = or(_atomics_legal_T_319, _atomics_legal_T_316) @[Parameters.scala 671:42]
    node _atomics_legal_T_321 = and(_atomics_legal_T_291, _atomics_legal_T_320) @[Parameters.scala 670:56]
    node _atomics_legal_T_322 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_323 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_324 = cvt(_atomics_legal_T_323) @[Parameters.scala 137:49]
    node _atomics_legal_T_325 = and(_atomics_legal_T_324, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_326 = asSInt(_atomics_legal_T_325) @[Parameters.scala 137:52]
    node _atomics_legal_T_327 = eq(_atomics_legal_T_326, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_328 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_329 = cvt(_atomics_legal_T_328) @[Parameters.scala 137:49]
    node _atomics_legal_T_330 = and(_atomics_legal_T_329, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_331 = asSInt(_atomics_legal_T_330) @[Parameters.scala 137:52]
    node _atomics_legal_T_332 = eq(_atomics_legal_T_331, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_333 = or(_atomics_legal_T_327, _atomics_legal_T_332) @[Parameters.scala 671:42]
    node _atomics_legal_T_334 = and(_atomics_legal_T_322, _atomics_legal_T_333) @[Parameters.scala 670:56]
    node _atomics_legal_T_335 = or(UInt<1>("h00"), _atomics_legal_T_321) @[Parameters.scala 672:30]
    node atomics_legal_6 = or(_atomics_legal_T_335, _atomics_legal_T_334) @[Parameters.scala 672:30]
    wire atomics_a_6 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 498:17]
    atomics_a_6 is invalid @[Edges.scala 498:17]
    atomics_a_6.opcode <= UInt<2>("h02") @[Edges.scala 499:15]
    atomics_a_6.param <= UInt<3>("h01") @[Edges.scala 500:15]
    atomics_a_6.size <= s2_req.size @[Edges.scala 501:15]
    atomics_a_6.source <= UInt<1>("h00") @[Edges.scala 502:15]
    atomics_a_6.address <= s2_req.addr @[Edges.scala 503:15]
    node _atomics_a_mask_sizeOH_T_18 = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount_6 = bits(_atomics_a_mask_sizeOH_T_18, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_19 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount_6) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_20 = bits(_atomics_a_mask_sizeOH_T_19, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH_6 = or(_atomics_a_mask_sizeOH_T_20, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T_12 = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size_12 = bits(atomics_a_mask_sizeOH_6, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit_12 = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_12 = eq(atomics_a_mask_bit_12, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_36 = and(UInt<1>("h01"), atomics_a_mask_nbit_12) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_36 = and(atomics_a_mask_size_12, atomics_a_mask_eq_36) @[Misc.scala 214:38]
    node atomics_a_mask_acc_12 = or(_atomics_a_mask_T_12, _atomics_a_mask_acc_T_36) @[Misc.scala 214:29]
    node atomics_a_mask_eq_37 = and(UInt<1>("h01"), atomics_a_mask_bit_12) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_37 = and(atomics_a_mask_size_12, atomics_a_mask_eq_37) @[Misc.scala 214:38]
    node atomics_a_mask_acc_13 = or(_atomics_a_mask_T_12, _atomics_a_mask_acc_T_37) @[Misc.scala 214:29]
    node atomics_a_mask_size_13 = bits(atomics_a_mask_sizeOH_6, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_13 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_13 = eq(atomics_a_mask_bit_13, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_38 = and(atomics_a_mask_eq_36, atomics_a_mask_nbit_13) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_38 = and(atomics_a_mask_size_13, atomics_a_mask_eq_38) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo_6 = or(atomics_a_mask_acc_12, _atomics_a_mask_acc_T_38) @[Misc.scala 214:29]
    node atomics_a_mask_eq_39 = and(atomics_a_mask_eq_36, atomics_a_mask_bit_13) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_39 = and(atomics_a_mask_size_13, atomics_a_mask_eq_39) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi_6 = or(atomics_a_mask_acc_12, _atomics_a_mask_acc_T_39) @[Misc.scala 214:29]
    node atomics_a_mask_eq_40 = and(atomics_a_mask_eq_37, atomics_a_mask_nbit_13) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_40 = and(atomics_a_mask_size_13, atomics_a_mask_eq_40) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo_6 = or(atomics_a_mask_acc_13, _atomics_a_mask_acc_T_40) @[Misc.scala 214:29]
    node atomics_a_mask_eq_41 = and(atomics_a_mask_eq_37, atomics_a_mask_bit_13) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_41 = and(atomics_a_mask_size_13, atomics_a_mask_eq_41) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi_6 = or(atomics_a_mask_acc_13, _atomics_a_mask_acc_T_41) @[Misc.scala 214:29]
    node atomics_a_mask_lo_6 = cat(atomics_a_mask_lo_hi_6, atomics_a_mask_lo_lo_6) @[Cat.scala 30:58]
    node atomics_a_mask_hi_6 = cat(atomics_a_mask_hi_hi_6, atomics_a_mask_hi_lo_6) @[Cat.scala 30:58]
    node _atomics_a_mask_T_13 = cat(atomics_a_mask_hi_6, atomics_a_mask_lo_6) @[Cat.scala 30:58]
    atomics_a_6.mask <= _atomics_a_mask_T_13 @[Edges.scala 504:15]
    atomics_a_6.data <= pstore1_data @[Edges.scala 505:15]
    atomics_a_6.corrupt <= UInt<1>("h00") @[Edges.scala 506:15]
    node _atomics_legal_T_336 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_337 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_338 = and(_atomics_legal_T_336, _atomics_legal_T_337) @[Parameters.scala 92:37]
    node _atomics_legal_T_339 = or(UInt<1>("h00"), _atomics_legal_T_338) @[Parameters.scala 670:31]
    node _atomics_legal_T_340 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_341 = cvt(_atomics_legal_T_340) @[Parameters.scala 137:49]
    node _atomics_legal_T_342 = and(_atomics_legal_T_341, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_343 = asSInt(_atomics_legal_T_342) @[Parameters.scala 137:52]
    node _atomics_legal_T_344 = eq(_atomics_legal_T_343, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_345 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_346 = cvt(_atomics_legal_T_345) @[Parameters.scala 137:49]
    node _atomics_legal_T_347 = and(_atomics_legal_T_346, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_348 = asSInt(_atomics_legal_T_347) @[Parameters.scala 137:52]
    node _atomics_legal_T_349 = eq(_atomics_legal_T_348, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_350 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_351 = cvt(_atomics_legal_T_350) @[Parameters.scala 137:49]
    node _atomics_legal_T_352 = and(_atomics_legal_T_351, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_353 = asSInt(_atomics_legal_T_352) @[Parameters.scala 137:52]
    node _atomics_legal_T_354 = eq(_atomics_legal_T_353, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_355 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_356 = cvt(_atomics_legal_T_355) @[Parameters.scala 137:49]
    node _atomics_legal_T_357 = and(_atomics_legal_T_356, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_358 = asSInt(_atomics_legal_T_357) @[Parameters.scala 137:52]
    node _atomics_legal_T_359 = eq(_atomics_legal_T_358, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_360 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_361 = cvt(_atomics_legal_T_360) @[Parameters.scala 137:49]
    node _atomics_legal_T_362 = and(_atomics_legal_T_361, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_363 = asSInt(_atomics_legal_T_362) @[Parameters.scala 137:52]
    node _atomics_legal_T_364 = eq(_atomics_legal_T_363, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_365 = or(_atomics_legal_T_344, _atomics_legal_T_349) @[Parameters.scala 671:42]
    node _atomics_legal_T_366 = or(_atomics_legal_T_365, _atomics_legal_T_354) @[Parameters.scala 671:42]
    node _atomics_legal_T_367 = or(_atomics_legal_T_366, _atomics_legal_T_359) @[Parameters.scala 671:42]
    node _atomics_legal_T_368 = or(_atomics_legal_T_367, _atomics_legal_T_364) @[Parameters.scala 671:42]
    node _atomics_legal_T_369 = and(_atomics_legal_T_339, _atomics_legal_T_368) @[Parameters.scala 670:56]
    node _atomics_legal_T_370 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_371 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_372 = cvt(_atomics_legal_T_371) @[Parameters.scala 137:49]
    node _atomics_legal_T_373 = and(_atomics_legal_T_372, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_374 = asSInt(_atomics_legal_T_373) @[Parameters.scala 137:52]
    node _atomics_legal_T_375 = eq(_atomics_legal_T_374, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_376 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_377 = cvt(_atomics_legal_T_376) @[Parameters.scala 137:49]
    node _atomics_legal_T_378 = and(_atomics_legal_T_377, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_379 = asSInt(_atomics_legal_T_378) @[Parameters.scala 137:52]
    node _atomics_legal_T_380 = eq(_atomics_legal_T_379, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_381 = or(_atomics_legal_T_375, _atomics_legal_T_380) @[Parameters.scala 671:42]
    node _atomics_legal_T_382 = and(_atomics_legal_T_370, _atomics_legal_T_381) @[Parameters.scala 670:56]
    node _atomics_legal_T_383 = or(UInt<1>("h00"), _atomics_legal_T_369) @[Parameters.scala 672:30]
    node atomics_legal_7 = or(_atomics_legal_T_383, _atomics_legal_T_382) @[Parameters.scala 672:30]
    wire atomics_a_7 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 498:17]
    atomics_a_7 is invalid @[Edges.scala 498:17]
    atomics_a_7.opcode <= UInt<2>("h02") @[Edges.scala 499:15]
    atomics_a_7.param <= UInt<3>("h02") @[Edges.scala 500:15]
    atomics_a_7.size <= s2_req.size @[Edges.scala 501:15]
    atomics_a_7.source <= UInt<1>("h00") @[Edges.scala 502:15]
    atomics_a_7.address <= s2_req.addr @[Edges.scala 503:15]
    node _atomics_a_mask_sizeOH_T_21 = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount_7 = bits(_atomics_a_mask_sizeOH_T_21, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_22 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount_7) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_23 = bits(_atomics_a_mask_sizeOH_T_22, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH_7 = or(_atomics_a_mask_sizeOH_T_23, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T_14 = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size_14 = bits(atomics_a_mask_sizeOH_7, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit_14 = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_14 = eq(atomics_a_mask_bit_14, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_42 = and(UInt<1>("h01"), atomics_a_mask_nbit_14) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_42 = and(atomics_a_mask_size_14, atomics_a_mask_eq_42) @[Misc.scala 214:38]
    node atomics_a_mask_acc_14 = or(_atomics_a_mask_T_14, _atomics_a_mask_acc_T_42) @[Misc.scala 214:29]
    node atomics_a_mask_eq_43 = and(UInt<1>("h01"), atomics_a_mask_bit_14) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_43 = and(atomics_a_mask_size_14, atomics_a_mask_eq_43) @[Misc.scala 214:38]
    node atomics_a_mask_acc_15 = or(_atomics_a_mask_T_14, _atomics_a_mask_acc_T_43) @[Misc.scala 214:29]
    node atomics_a_mask_size_15 = bits(atomics_a_mask_sizeOH_7, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_15 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_15 = eq(atomics_a_mask_bit_15, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_44 = and(atomics_a_mask_eq_42, atomics_a_mask_nbit_15) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_44 = and(atomics_a_mask_size_15, atomics_a_mask_eq_44) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo_7 = or(atomics_a_mask_acc_14, _atomics_a_mask_acc_T_44) @[Misc.scala 214:29]
    node atomics_a_mask_eq_45 = and(atomics_a_mask_eq_42, atomics_a_mask_bit_15) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_45 = and(atomics_a_mask_size_15, atomics_a_mask_eq_45) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi_7 = or(atomics_a_mask_acc_14, _atomics_a_mask_acc_T_45) @[Misc.scala 214:29]
    node atomics_a_mask_eq_46 = and(atomics_a_mask_eq_43, atomics_a_mask_nbit_15) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_46 = and(atomics_a_mask_size_15, atomics_a_mask_eq_46) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo_7 = or(atomics_a_mask_acc_15, _atomics_a_mask_acc_T_46) @[Misc.scala 214:29]
    node atomics_a_mask_eq_47 = and(atomics_a_mask_eq_43, atomics_a_mask_bit_15) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_47 = and(atomics_a_mask_size_15, atomics_a_mask_eq_47) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi_7 = or(atomics_a_mask_acc_15, _atomics_a_mask_acc_T_47) @[Misc.scala 214:29]
    node atomics_a_mask_lo_7 = cat(atomics_a_mask_lo_hi_7, atomics_a_mask_lo_lo_7) @[Cat.scala 30:58]
    node atomics_a_mask_hi_7 = cat(atomics_a_mask_hi_hi_7, atomics_a_mask_hi_lo_7) @[Cat.scala 30:58]
    node _atomics_a_mask_T_15 = cat(atomics_a_mask_hi_7, atomics_a_mask_lo_7) @[Cat.scala 30:58]
    atomics_a_7.mask <= _atomics_a_mask_T_15 @[Edges.scala 504:15]
    atomics_a_7.data <= pstore1_data @[Edges.scala 505:15]
    atomics_a_7.corrupt <= UInt<1>("h00") @[Edges.scala 506:15]
    node _atomics_legal_T_384 = leq(UInt<1>("h00"), s2_req.size) @[Parameters.scala 92:32]
    node _atomics_legal_T_385 = leq(s2_req.size, UInt<2>("h02")) @[Parameters.scala 92:42]
    node _atomics_legal_T_386 = and(_atomics_legal_T_384, _atomics_legal_T_385) @[Parameters.scala 92:37]
    node _atomics_legal_T_387 = or(UInt<1>("h00"), _atomics_legal_T_386) @[Parameters.scala 670:31]
    node _atomics_legal_T_388 = xor(s2_req.addr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _atomics_legal_T_389 = cvt(_atomics_legal_T_388) @[Parameters.scala 137:49]
    node _atomics_legal_T_390 = and(_atomics_legal_T_389, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_391 = asSInt(_atomics_legal_T_390) @[Parameters.scala 137:52]
    node _atomics_legal_T_392 = eq(_atomics_legal_T_391, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_393 = xor(s2_req.addr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_394 = cvt(_atomics_legal_T_393) @[Parameters.scala 137:49]
    node _atomics_legal_T_395 = and(_atomics_legal_T_394, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_396 = asSInt(_atomics_legal_T_395) @[Parameters.scala 137:52]
    node _atomics_legal_T_397 = eq(_atomics_legal_T_396, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_398 = xor(s2_req.addr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_399 = cvt(_atomics_legal_T_398) @[Parameters.scala 137:49]
    node _atomics_legal_T_400 = and(_atomics_legal_T_399, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_401 = asSInt(_atomics_legal_T_400) @[Parameters.scala 137:52]
    node _atomics_legal_T_402 = eq(_atomics_legal_T_401, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_403 = xor(s2_req.addr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_404 = cvt(_atomics_legal_T_403) @[Parameters.scala 137:49]
    node _atomics_legal_T_405 = and(_atomics_legal_T_404, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_406 = asSInt(_atomics_legal_T_405) @[Parameters.scala 137:52]
    node _atomics_legal_T_407 = eq(_atomics_legal_T_406, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_408 = xor(s2_req.addr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_409 = cvt(_atomics_legal_T_408) @[Parameters.scala 137:49]
    node _atomics_legal_T_410 = and(_atomics_legal_T_409, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_411 = asSInt(_atomics_legal_T_410) @[Parameters.scala 137:52]
    node _atomics_legal_T_412 = eq(_atomics_legal_T_411, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_413 = or(_atomics_legal_T_392, _atomics_legal_T_397) @[Parameters.scala 671:42]
    node _atomics_legal_T_414 = or(_atomics_legal_T_413, _atomics_legal_T_402) @[Parameters.scala 671:42]
    node _atomics_legal_T_415 = or(_atomics_legal_T_414, _atomics_legal_T_407) @[Parameters.scala 671:42]
    node _atomics_legal_T_416 = or(_atomics_legal_T_415, _atomics_legal_T_412) @[Parameters.scala 671:42]
    node _atomics_legal_T_417 = and(_atomics_legal_T_387, _atomics_legal_T_416) @[Parameters.scala 670:56]
    node _atomics_legal_T_418 = or(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 670:31]
    node _atomics_legal_T_419 = xor(s2_req.addr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_420 = cvt(_atomics_legal_T_419) @[Parameters.scala 137:49]
    node _atomics_legal_T_421 = and(_atomics_legal_T_420, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_422 = asSInt(_atomics_legal_T_421) @[Parameters.scala 137:52]
    node _atomics_legal_T_423 = eq(_atomics_legal_T_422, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_424 = xor(s2_req.addr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _atomics_legal_T_425 = cvt(_atomics_legal_T_424) @[Parameters.scala 137:49]
    node _atomics_legal_T_426 = and(_atomics_legal_T_425, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _atomics_legal_T_427 = asSInt(_atomics_legal_T_426) @[Parameters.scala 137:52]
    node _atomics_legal_T_428 = eq(_atomics_legal_T_427, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _atomics_legal_T_429 = or(_atomics_legal_T_423, _atomics_legal_T_428) @[Parameters.scala 671:42]
    node _atomics_legal_T_430 = and(_atomics_legal_T_418, _atomics_legal_T_429) @[Parameters.scala 670:56]
    node _atomics_legal_T_431 = or(UInt<1>("h00"), _atomics_legal_T_417) @[Parameters.scala 672:30]
    node atomics_legal_8 = or(_atomics_legal_T_431, _atomics_legal_T_430) @[Parameters.scala 672:30]
    wire atomics_a_8 : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 498:17]
    atomics_a_8 is invalid @[Edges.scala 498:17]
    atomics_a_8.opcode <= UInt<2>("h02") @[Edges.scala 499:15]
    atomics_a_8.param <= UInt<3>("h03") @[Edges.scala 500:15]
    atomics_a_8.size <= s2_req.size @[Edges.scala 501:15]
    atomics_a_8.source <= UInt<1>("h00") @[Edges.scala 502:15]
    atomics_a_8.address <= s2_req.addr @[Edges.scala 503:15]
    node _atomics_a_mask_sizeOH_T_24 = or(s2_req.size, UInt<2>("h00")) @[Misc.scala 201:34]
    node atomics_a_mask_sizeOH_shiftAmount_8 = bits(_atomics_a_mask_sizeOH_T_24, 0, 0) @[OneHot.scala 64:49]
    node _atomics_a_mask_sizeOH_T_25 = dshl(UInt<1>("h01"), atomics_a_mask_sizeOH_shiftAmount_8) @[OneHot.scala 65:12]
    node _atomics_a_mask_sizeOH_T_26 = bits(_atomics_a_mask_sizeOH_T_25, 1, 0) @[OneHot.scala 65:27]
    node atomics_a_mask_sizeOH_8 = or(_atomics_a_mask_sizeOH_T_26, UInt<1>("h01")) @[Misc.scala 201:81]
    node _atomics_a_mask_T_16 = geq(s2_req.size, UInt<2>("h02")) @[Misc.scala 205:21]
    node atomics_a_mask_size_16 = bits(atomics_a_mask_sizeOH_8, 1, 1) @[Misc.scala 208:26]
    node atomics_a_mask_bit_16 = bits(s2_req.addr, 1, 1) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_16 = eq(atomics_a_mask_bit_16, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_48 = and(UInt<1>("h01"), atomics_a_mask_nbit_16) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_48 = and(atomics_a_mask_size_16, atomics_a_mask_eq_48) @[Misc.scala 214:38]
    node atomics_a_mask_acc_16 = or(_atomics_a_mask_T_16, _atomics_a_mask_acc_T_48) @[Misc.scala 214:29]
    node atomics_a_mask_eq_49 = and(UInt<1>("h01"), atomics_a_mask_bit_16) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_49 = and(atomics_a_mask_size_16, atomics_a_mask_eq_49) @[Misc.scala 214:38]
    node atomics_a_mask_acc_17 = or(_atomics_a_mask_T_16, _atomics_a_mask_acc_T_49) @[Misc.scala 214:29]
    node atomics_a_mask_size_17 = bits(atomics_a_mask_sizeOH_8, 0, 0) @[Misc.scala 208:26]
    node atomics_a_mask_bit_17 = bits(s2_req.addr, 0, 0) @[Misc.scala 209:26]
    node atomics_a_mask_nbit_17 = eq(atomics_a_mask_bit_17, UInt<1>("h00")) @[Misc.scala 210:20]
    node atomics_a_mask_eq_50 = and(atomics_a_mask_eq_48, atomics_a_mask_nbit_17) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_50 = and(atomics_a_mask_size_17, atomics_a_mask_eq_50) @[Misc.scala 214:38]
    node atomics_a_mask_lo_lo_8 = or(atomics_a_mask_acc_16, _atomics_a_mask_acc_T_50) @[Misc.scala 214:29]
    node atomics_a_mask_eq_51 = and(atomics_a_mask_eq_48, atomics_a_mask_bit_17) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_51 = and(atomics_a_mask_size_17, atomics_a_mask_eq_51) @[Misc.scala 214:38]
    node atomics_a_mask_lo_hi_8 = or(atomics_a_mask_acc_16, _atomics_a_mask_acc_T_51) @[Misc.scala 214:29]
    node atomics_a_mask_eq_52 = and(atomics_a_mask_eq_49, atomics_a_mask_nbit_17) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_52 = and(atomics_a_mask_size_17, atomics_a_mask_eq_52) @[Misc.scala 214:38]
    node atomics_a_mask_hi_lo_8 = or(atomics_a_mask_acc_17, _atomics_a_mask_acc_T_52) @[Misc.scala 214:29]
    node atomics_a_mask_eq_53 = and(atomics_a_mask_eq_49, atomics_a_mask_bit_17) @[Misc.scala 213:27]
    node _atomics_a_mask_acc_T_53 = and(atomics_a_mask_size_17, atomics_a_mask_eq_53) @[Misc.scala 214:38]
    node atomics_a_mask_hi_hi_8 = or(atomics_a_mask_acc_17, _atomics_a_mask_acc_T_53) @[Misc.scala 214:29]
    node atomics_a_mask_lo_8 = cat(atomics_a_mask_lo_hi_8, atomics_a_mask_lo_lo_8) @[Cat.scala 30:58]
    node atomics_a_mask_hi_8 = cat(atomics_a_mask_hi_hi_8, atomics_a_mask_hi_lo_8) @[Cat.scala 30:58]
    node _atomics_a_mask_T_17 = cat(atomics_a_mask_hi_8, atomics_a_mask_lo_8) @[Cat.scala 30:58]
    atomics_a_8.mask <= _atomics_a_mask_T_17 @[Edges.scala 504:15]
    atomics_a_8.data <= pstore1_data @[Edges.scala 505:15]
    atomics_a_8.corrupt <= UInt<1>("h00") @[Edges.scala 506:15]
    node _atomics_T = eq(UInt<3>("h04"), s2_req.cmd) @[Mux.scala 80:60]
    node _atomics_T_1 = mux(_atomics_T, atomics_a, _atomics_WIRE) @[Mux.scala 80:57]
    node _atomics_T_2 = eq(UInt<4>("h09"), s2_req.cmd) @[Mux.scala 80:60]
    node _atomics_T_3 = mux(_atomics_T_2, atomics_a_1, _atomics_T_1) @[Mux.scala 80:57]
    node _atomics_T_4 = eq(UInt<4>("h0a"), s2_req.cmd) @[Mux.scala 80:60]
    node _atomics_T_5 = mux(_atomics_T_4, atomics_a_2, _atomics_T_3) @[Mux.scala 80:57]
    node _atomics_T_6 = eq(UInt<4>("h0b"), s2_req.cmd) @[Mux.scala 80:60]
    node _atomics_T_7 = mux(_atomics_T_6, atomics_a_3, _atomics_T_5) @[Mux.scala 80:57]
    node _atomics_T_8 = eq(UInt<4>("h08"), s2_req.cmd) @[Mux.scala 80:60]
    node _atomics_T_9 = mux(_atomics_T_8, atomics_a_4, _atomics_T_7) @[Mux.scala 80:57]
    node _atomics_T_10 = eq(UInt<4>("h0c"), s2_req.cmd) @[Mux.scala 80:60]
    node _atomics_T_11 = mux(_atomics_T_10, atomics_a_5, _atomics_T_9) @[Mux.scala 80:57]
    node _atomics_T_12 = eq(UInt<4>("h0d"), s2_req.cmd) @[Mux.scala 80:60]
    node _atomics_T_13 = mux(_atomics_T_12, atomics_a_6, _atomics_T_11) @[Mux.scala 80:57]
    node _atomics_T_14 = eq(UInt<4>("h0e"), s2_req.cmd) @[Mux.scala 80:60]
    node _atomics_T_15 = mux(_atomics_T_14, atomics_a_7, _atomics_T_13) @[Mux.scala 80:57]
    node _atomics_T_16 = eq(UInt<4>("h0f"), s2_req.cmd) @[Mux.scala 80:60]
    node atomics = mux(_atomics_T_16, atomics_a_8, _atomics_T_15) @[Mux.scala 80:57]
    node _tl_out_a_valid_T = eq(io.cpu.s2_kill, UInt<1>("h00")) @[DCache.scala 575:21]
    node _tl_out_a_valid_T_1 = and(release_ack_wait, release_ack_dirty) @[DCache.scala 578:27]
    node _tl_out_a_valid_T_2 = eq(_tl_out_a_valid_T_1, UInt<1>("h00")) @[DCache.scala 578:8]
    node _tl_out_a_valid_T_3 = and(s2_valid_cached_miss, _tl_out_a_valid_T_2) @[DCache.scala 577:29]
    node _tl_out_a_valid_T_4 = eq(release_ack_wait, UInt<1>("h00")) @[DCache.scala 579:45]
    node _tl_out_a_valid_T_5 = and(UInt<1>("h00"), _tl_out_a_valid_T_4) @[DCache.scala 579:42]
    node _tl_out_a_valid_T_6 = and(_tl_out_a_valid_T_5, UInt<1>("h01")) @[DCache.scala 579:63]
    node _tl_out_a_valid_T_7 = eq(s2_victim_dirty, UInt<1>("h00")) @[DCache.scala 579:89]
    node _tl_out_a_valid_T_8 = or(_tl_out_a_valid_T_6, _tl_out_a_valid_T_7) @[DCache.scala 579:86]
    node _tl_out_a_valid_T_9 = and(_tl_out_a_valid_T_3, _tl_out_a_valid_T_8) @[DCache.scala 578:49]
    node _tl_out_a_valid_T_10 = or(s2_valid_uncached_pending, _tl_out_a_valid_T_9) @[DCache.scala 576:32]
    node _tl_out_a_valid_T_11 = and(_tl_out_a_valid_T, _tl_out_a_valid_T_10) @[DCache.scala 575:37]
    tl_out_a.valid <= _tl_out_a_valid_T_11 @[DCache.scala 575:18]
    node _tl_out_a_bits_T = eq(s2_uncached, UInt<1>("h00")) @[DCache.scala 580:24]
    wire _tl_out_a_bits_WIRE : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[DCache.scala 1178:47]
    _tl_out_a_bits_WIRE is invalid @[DCache.scala 1178:47]
    node _tl_out_a_bits_T_1 = eq(s2_write, UInt<1>("h00")) @[DCache.scala 581:9]
    node _tl_out_a_bits_T_2 = eq(s2_req.cmd, UInt<5>("h011")) @[DCache.scala 582:20]
    node _tl_out_a_bits_T_3 = eq(s2_read, UInt<1>("h00")) @[DCache.scala 583:9]
    node _tl_out_a_bits_T_4 = mux(_tl_out_a_bits_T_3, put, atomics) @[DCache.scala 583:8]
    node _tl_out_a_bits_T_5 = mux(_tl_out_a_bits_T_2, putpartial, _tl_out_a_bits_T_4) @[DCache.scala 582:8]
    node _tl_out_a_bits_T_6 = mux(_tl_out_a_bits_T_1, get, _tl_out_a_bits_T_5) @[DCache.scala 581:8]
    node _tl_out_a_bits_T_7 = mux(_tl_out_a_bits_T, _tl_out_a_bits_WIRE, _tl_out_a_bits_T_6) @[DCache.scala 580:23]
    tl_out_a.bits <- _tl_out_a_bits_T_7 @[DCache.scala 580:17]
    node a_sel = shr(UInt<1>("h01"), 0) @[DCache.scala 602:66]
    node _T_227 = and(tl_out_a.ready, tl_out_a.valid) @[Decoupled.scala 40:37]
    when _T_227 : @[DCache.scala 603:26]
      when s2_uncached : @[DCache.scala 604:24]
        node _T_228 = bits(a_sel, 0, 0) @[DCache.scala 605:14]
        when _T_228 : @[DCache.scala 606:18]
          uncachedInFlight[0] <= UInt<1>("h01") @[DCache.scala 607:13]
          uncachedReqs[0] <- s2_req @[DCache.scala 608:13]
          node _uncachedReqs_0_cmd_T = eq(s2_req.cmd, UInt<5>("h011")) @[DCache.scala 609:49]
          node _uncachedReqs_0_cmd_T_1 = mux(_uncachedReqs_0_cmd_T, UInt<5>("h011"), UInt<1>("h01")) @[DCache.scala 609:37]
          node _uncachedReqs_0_cmd_T_2 = mux(s2_write, _uncachedReqs_0_cmd_T_1, UInt<1>("h00")) @[DCache.scala 609:23]
          uncachedReqs[0].cmd <= _uncachedReqs_0_cmd_T_2 @[DCache.scala 609:17]
          skip @[DCache.scala 606:18]
        skip @[DCache.scala 604:24]
      else : @[DCache.scala 612:17]
        cached_grant_wait <= UInt<1>("h01") @[DCache.scala 613:25]
        refill_way <= s2_victim_or_hit_way @[DCache.scala 614:18]
        skip @[DCache.scala 612:17]
      skip @[DCache.scala 603:26]
    node _T_229 = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    node _beats1_decode_T = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beats1_decode_T_1 = dshl(_beats1_decode_T, tl_out.d.bits.size) @[package.scala 234:77]
    node _beats1_decode_T_2 = bits(_beats1_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beats1_decode_T_3 = not(_beats1_decode_T_2) @[package.scala 234:46]
    node beats1_decode = shr(_beats1_decode_T_3, 2) @[Edges.scala 219:59]
    node beats1_opdata = bits(tl_out.d.bits.opcode, 0, 0) @[Edges.scala 105:36]
    node beats1 = mux(beats1_opdata, beats1_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    reg counter : UInt<10>, gated_clock with : (reset => (reset, UInt<10>("h00"))) @[Edges.scala 228:27]
    node _counter1_T = sub(counter, UInt<1>("h01")) @[Edges.scala 229:28]
    node counter1 = tail(_counter1_T, 1) @[Edges.scala 229:28]
    node d_first = eq(counter, UInt<1>("h00")) @[Edges.scala 230:25]
    node _last_T = eq(counter, UInt<1>("h01")) @[Edges.scala 231:25]
    node _last_T_1 = eq(beats1, UInt<1>("h00")) @[Edges.scala 231:47]
    node d_last = or(_last_T, _last_T_1) @[Edges.scala 231:37]
    node d_done = and(d_last, _T_229) @[Edges.scala 232:22]
    node _count_T = not(counter1) @[Edges.scala 233:27]
    node count = and(beats1, _count_T) @[Edges.scala 233:25]
    when _T_229 : @[Edges.scala 234:17]
      node _counter_T = mux(d_first, beats1, counter1) @[Edges.scala 235:21]
      counter <= _counter_T @[Edges.scala 235:15]
      skip @[Edges.scala 234:17]
    node d_address_inc = shl(count, 2) @[Edges.scala 268:29]
    node _T_230 = eq(tl_out.d.valid, UInt<1>("h00")) @[DCache.scala 626:14]
    node _T_231 = eq(tl_out.d.bits.opcode, UInt<1>("h01")) @[package.scala 15:47]
    node _T_232 = eq(tl_out.d.bits.opcode, UInt<1>("h00")) @[package.scala 15:47]
    node _T_233 = eq(tl_out.d.bits.opcode, UInt<2>("h02")) @[package.scala 15:47]
    node _T_234 = or(_T_231, _T_232) @[package.scala 72:59]
    node _T_235 = or(_T_234, _T_233) @[package.scala 72:59]
    node _T_236 = or(_T_230, _T_235) @[DCache.scala 626:30]
    node _T_237 = asUInt(reset) @[DCache.scala 626:13]
    node _T_238 = or(_T_236, _T_237) @[DCache.scala 626:13]
    node _T_239 = eq(_T_238, UInt<1>("h00")) @[DCache.scala 626:13]
    when _T_239 : @[DCache.scala 626:13]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:626 assert(!tl_out.d.valid || whole_opc.isOneOf(uncachedGrantOpcodes))\n") @[DCache.scala 626:13]
      stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 626:13]
      skip @[DCache.scala 626:13]
    node opc = bits(tl_out.d.bits.opcode, 1, 0) @[DCache.scala 628:26]
    node _T_240 = and(opc, UInt<2>("h01")) @[Decode.scala 14:65]
    node _T_241 = eq(_T_240, UInt<2>("h01")) @[Decode.scala 14:121]
    node _T_242 = or(UInt<1>("h00"), _T_241) @[Decode.scala 15:30]
    node data_1 = bits(_T_242, 0, 0) @[Decode.scala 55:116]
    node _tl_d_data_encoded_T_1 = bits(io.ptw.customCSRs.csrs[0].value, 9, 9) @[CustomCSRs.scala 41:65]
    node _tl_d_data_encoded_T_2 = eq(_tl_d_data_encoded_T_1, UInt<1>("h00")) @[DCache.scala 635:80]
    node _tl_d_data_encoded_T_3 = and(tl_out.d.bits.corrupt, _tl_d_data_encoded_T_2) @[DCache.scala 635:77]
    node _tl_d_data_encoded_T_4 = eq(UInt<1>("h01"), UInt<1>("h00")) @[DCache.scala 635:129]
    node _tl_d_data_encoded_T_5 = and(_tl_d_data_encoded_T_3, _tl_d_data_encoded_T_4) @[DCache.scala 635:126]
    node tl_d_data_encoded_lo_lo_1 = bits(tl_out.d.bits.data, 7, 0) @[package.scala 202:50]
    node tl_d_data_encoded_lo_hi_1 = bits(tl_out.d.bits.data, 15, 8) @[package.scala 202:50]
    node tl_d_data_encoded_hi_lo_1 = bits(tl_out.d.bits.data, 23, 16) @[package.scala 202:50]
    node tl_d_data_encoded_hi_hi_1 = bits(tl_out.d.bits.data, 31, 24) @[package.scala 202:50]
    node tl_d_data_encoded_lo_1 = cat(tl_d_data_encoded_lo_hi_1, tl_d_data_encoded_lo_lo_1) @[Cat.scala 30:58]
    node tl_d_data_encoded_hi_1 = cat(tl_d_data_encoded_hi_hi_1, tl_d_data_encoded_hi_lo_1) @[Cat.scala 30:58]
    node _tl_d_data_encoded_T_6 = cat(tl_d_data_encoded_hi_1, tl_d_data_encoded_lo_1) @[Cat.scala 30:58]
    tl_d_data_encoded <= _tl_d_data_encoded_T_6 @[DCache.scala 635:21]
    node _grantIsCached_T = eq(opc, UInt<3>("h04")) @[package.scala 15:47]
    node _grantIsCached_T_1 = eq(opc, UInt<3>("h05")) @[package.scala 15:47]
    node grantIsCached = or(_grantIsCached_T, _grantIsCached_T_1) @[package.scala 72:59]
    node grantIsVoluntary = eq(opc, UInt<3>("h06")) @[DCache.scala 637:32]
    node grantIsRefill = eq(opc, UInt<3>("h05")) @[DCache.scala 638:29]
    reg grantInProgress : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 639:28]
    reg blockProbeAfterGrantCount : UInt, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[DCache.scala 640:38]
    node _T_243 = gt(blockProbeAfterGrantCount, UInt<1>("h00")) @[DCache.scala 641:35]
    when _T_243 : @[DCache.scala 641:40]
      node _blockProbeAfterGrantCount_T = sub(blockProbeAfterGrantCount, UInt<1>("h01")) @[DCache.scala 641:97]
      node _blockProbeAfterGrantCount_T_1 = tail(_blockProbeAfterGrantCount_T, 1) @[DCache.scala 641:97]
      blockProbeAfterGrantCount <= _blockProbeAfterGrantCount_T_1 @[DCache.scala 641:68]
      skip @[DCache.scala 641:40]
    node _canAcceptCachedGrant_T = eq(release_state, UInt<4>("h01")) @[package.scala 15:47]
    node _canAcceptCachedGrant_T_1 = eq(release_state, UInt<4>("h06")) @[package.scala 15:47]
    node _canAcceptCachedGrant_T_2 = eq(release_state, UInt<4>("h09")) @[package.scala 15:47]
    node _canAcceptCachedGrant_T_3 = or(_canAcceptCachedGrant_T, _canAcceptCachedGrant_T_1) @[package.scala 72:59]
    node _canAcceptCachedGrant_T_4 = or(_canAcceptCachedGrant_T_3, _canAcceptCachedGrant_T_2) @[package.scala 72:59]
    node canAcceptCachedGrant = eq(_canAcceptCachedGrant_T_4, UInt<1>("h00")) @[DCache.scala 642:30]
    node _bundleOut_0_d_ready_T = eq(d_first, UInt<1>("h00")) @[DCache.scala 643:41]
    wire _bundleOut_0_d_ready_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _bundleOut_0_d_ready_WIRE is invalid @[Bundles.scala 259:54]
    node _bundleOut_0_d_ready_T_1 = or(_bundleOut_0_d_ready_T, _bundleOut_0_d_ready_WIRE.ready) @[DCache.scala 643:50]
    node _bundleOut_0_d_ready_T_2 = and(_bundleOut_0_d_ready_T_1, canAcceptCachedGrant) @[DCache.scala 643:69]
    node _bundleOut_0_d_ready_T_3 = mux(grantIsCached, _bundleOut_0_d_ready_T_2, UInt<1>("h01")) @[DCache.scala 643:24]
    tl_out.d.ready <= _bundleOut_0_d_ready_T_3 @[DCache.scala 643:18]
    node uncachedRespIdxOH = shr(UInt<1>("h01"), 0) @[DCache.scala 644:90]
    node _uncachedResp_T = bits(uncachedRespIdxOH, 0, 0) @[Mux.scala 29:36]
    uncachedResp <- uncachedReqs[0] @[DCache.scala 645:16]
    node _T_244 = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    when _T_244 : @[DCache.scala 646:26]
      when grantIsCached : @[DCache.scala 647:26]
        grantInProgress <= UInt<1>("h01") @[DCache.scala 648:23]
        node _T_245 = asUInt(reset) @[DCache.scala 649:13]
        node _T_246 = or(cached_grant_wait, _T_245) @[DCache.scala 649:13]
        node _T_247 = eq(_T_246, UInt<1>("h00")) @[DCache.scala 649:13]
        when _T_247 : @[DCache.scala 649:13]
          printf(gated_clock, UInt<1>(1), "Assertion failed: A GrantData was unexpected by the dcache.\n    at DCache.scala:649 assert(cached_grant_wait, \"A GrantData was unexpected by the dcache.\")\n") @[DCache.scala 649:13]
          stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 649:13]
          skip @[DCache.scala 649:13]
        when d_last : @[DCache.scala 650:20]
          cached_grant_wait <= UInt<1>("h00") @[DCache.scala 651:27]
          grantInProgress <= UInt<1>("h00") @[DCache.scala 652:25]
          blockProbeAfterGrantCount <= UInt<3>("h07") @[DCache.scala 653:35]
          replace <= UInt<1>("h01") @[Replacement.scala 45:22]
          skip @[DCache.scala 650:20]
        skip @[DCache.scala 647:26]
      else : @[DCache.scala 656:35]
        when UInt<1>("h01") : @[DCache.scala 656:35]
          node _T_248 = bits(uncachedRespIdxOH, 0, 0) @[DCache.scala 657:26]
          node _T_249 = and(_T_248, d_last) @[DCache.scala 658:17]
          when _T_249 : @[DCache.scala 658:28]
            node _T_250 = asUInt(reset) @[DCache.scala 659:17]
            node _T_251 = or(uncachedInFlight[0], _T_250) @[DCache.scala 659:17]
            node _T_252 = eq(_T_251, UInt<1>("h00")) @[DCache.scala 659:17]
            when _T_252 : @[DCache.scala 659:17]
              printf(gated_clock, UInt<1>(1), "Assertion failed: An AccessAck was unexpected by the dcache.\n    at DCache.scala:659 assert(f, \"An AccessAck was unexpected by the dcache.\") // TODO must handle Ack coming back on same cycle!\n") @[DCache.scala 659:17]
              stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 659:17]
              skip @[DCache.scala 659:17]
            uncachedInFlight[0] <= UInt<1>("h00") @[DCache.scala 660:13]
            skip @[DCache.scala 658:28]
          when data_1 : @[DCache.scala 663:34]
            node _s1_data_way_T = shl(UInt<1>("h01"), 1) @[DCache.scala 666:32]
            s1_data_way <= _s1_data_way_T @[DCache.scala 666:25]
            s2_req.cmd <= UInt<1>("h00") @[DCache.scala 667:22]
            s2_req.size <= uncachedResp.size @[DCache.scala 668:23]
            s2_req.signed <= uncachedResp.signed @[DCache.scala 669:25]
            s2_req.tag <= uncachedResp.tag @[DCache.scala 670:22]
            node _s2_req_addr_dontCareBits_T = shr(s1_paddr, 2) @[DCache.scala 673:41]
            node dontCareBits = shl(_s2_req_addr_dontCareBits_T, 2) @[DCache.scala 673:55]
            node _s2_req_addr_T = bits(uncachedResp.addr, 1, 0) @[DCache.scala 674:45]
            node _s2_req_addr_T_1 = or(dontCareBits, _s2_req_addr_T) @[DCache.scala 674:26]
            s2_req.addr <= _s2_req_addr_T_1 @[DCache.scala 671:23]
            s2_uncached_resp_addr <= uncachedResp.addr @[DCache.scala 676:33]
            skip @[DCache.scala 663:34]
          skip @[DCache.scala 656:35]
        else : @[DCache.scala 679:36]
          when grantIsVoluntary : @[DCache.scala 679:36]
            node _T_253 = asUInt(reset) @[DCache.scala 680:13]
            node _T_254 = or(release_ack_wait, _T_253) @[DCache.scala 680:13]
            node _T_255 = eq(_T_254, UInt<1>("h00")) @[DCache.scala 680:13]
            when _T_255 : @[DCache.scala 680:13]
              printf(gated_clock, UInt<1>(1), "Assertion failed: A ReleaseAck was unexpected by the dcache.\n    at DCache.scala:680 assert(release_ack_wait, \"A ReleaseAck was unexpected by the dcache.\") // TODO should handle Ack coming back on same cycle!\n") @[DCache.scala 680:13]
              stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 680:13]
              skip @[DCache.scala 680:13]
            release_ack_wait <= UInt<1>("h00") @[DCache.scala 681:24]
            skip @[DCache.scala 679:36]
      skip @[DCache.scala 646:26]
    wire _WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE is invalid @[Bundles.scala 259:54]
    node _T_256 = and(tl_out.d.valid, d_first) @[DCache.scala 686:36]
    node _T_257 = and(_T_256, grantIsCached) @[DCache.scala 686:47]
    node _T_258 = and(_T_257, canAcceptCachedGrant) @[DCache.scala 686:64]
    _WIRE.valid <= _T_258 @[DCache.scala 686:18]
    wire _WIRE_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_1 is invalid @[Bundles.scala 259:54]
    wire e : {sink : UInt<1>} @[Edges.scala 438:17]
    e is invalid @[Edges.scala 438:17]
    e.sink <= tl_out.d.bits.sink @[Edges.scala 439:12]
    _WIRE_1.bits <- e @[DCache.scala 687:17]
    wire _WIRE_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_2 is invalid @[Bundles.scala 259:54]
    node _T_259 = and(_WIRE_2.ready, _WIRE_2.valid) @[Decoupled.scala 40:37]
    node _T_260 = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    node _T_261 = and(_T_260, d_first) @[DCache.scala 688:47]
    node _T_262 = and(_T_261, grantIsCached) @[DCache.scala 688:58]
    node _T_263 = eq(_T_259, _T_262) @[DCache.scala 688:26]
    node _T_264 = asUInt(reset) @[DCache.scala 688:9]
    node _T_265 = or(_T_263, _T_264) @[DCache.scala 688:9]
    node _T_266 = eq(_T_265, UInt<1>("h00")) @[DCache.scala 688:9]
    when _T_266 : @[DCache.scala 688:9]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:688 assert(tl_out.e.fire() === (tl_out.d.fire() && d_first && grantIsCached))\n") @[DCache.scala 688:9]
      stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 688:9]
      skip @[DCache.scala 688:9]
    node _dataArb_io_in_1_valid_T = and(tl_out.d.valid, grantIsRefill) @[DCache.scala 693:44]
    node _dataArb_io_in_1_valid_T_1 = and(_dataArb_io_in_1_valid_T, canAcceptCachedGrant) @[DCache.scala 693:61]
    dataArb.io.in[1].valid <= _dataArb_io_in_1_valid_T_1 @[DCache.scala 693:26]
    node _T_267 = eq(dataArb.io.in[1].ready, UInt<1>("h00")) @[DCache.scala 694:26]
    node _T_268 = and(grantIsRefill, _T_267) @[DCache.scala 694:23]
    when _T_268 : @[DCache.scala 694:51]
      wire _WIRE_3 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
      _WIRE_3 is invalid @[Bundles.scala 259:54]
      _WIRE_3.valid <= UInt<1>("h00") @[DCache.scala 695:20]
      tl_out.d.ready <= UInt<1>("h00") @[DCache.scala 696:20]
      skip @[DCache.scala 694:51]
    dataArb.io.in[1].bits <- dataArb.io.in[0].bits @[DCache.scala 706:27]
    node _metaArb_io_in_3_valid_T = and(grantIsCached, d_done) @[DCache.scala 713:43]
    node _metaArb_io_in_3_valid_T_1 = eq(tl_out.d.bits.denied, UInt<1>("h00")) @[DCache.scala 713:56]
    node _metaArb_io_in_3_valid_T_2 = and(_metaArb_io_in_3_valid_T, _metaArb_io_in_3_valid_T_1) @[DCache.scala 713:53]
    metaArb.io.in[3].valid <= _metaArb_io_in_3_valid_T_2 @[DCache.scala 713:26]
    metaArb.io.in[3].bits.write <= UInt<1>("h01") @[DCache.scala 714:31]
    metaArb.io.in[3].bits.way_en <= refill_way @[DCache.scala 715:32]
    node _metaArb_io_in_3_bits_idx_T = bits(s2_vaddr, 13, 6) @[DCache.scala 716:40]
    metaArb.io.in[3].bits.idx <= _metaArb_io_in_3_bits_idx_T @[DCache.scala 716:29]
    node metaArb_io_in_3_bits_addr_hi = shr(io.cpu.req.bits.addr, 14) @[DCache.scala 717:58]
    node metaArb_io_in_3_bits_addr_lo = bits(s2_vaddr, 13, 0) @[DCache.scala 717:80]
    node _metaArb_io_in_3_bits_addr_T = cat(metaArb_io_in_3_bits_addr_hi, metaArb_io_in_3_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io.in[3].bits.addr <= _metaArb_io_in_3_bits_addr_T @[DCache.scala 717:30]
    node _metaArb_io_in_3_bits_data_T = shr(s2_req.addr, 14) @[DCache.scala 718:68]
    node _metaArb_io_in_3_bits_data_c_cat_T = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _metaArb_io_in_3_bits_data_c_cat_T_1 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _metaArb_io_in_3_bits_data_c_cat_T_2 = or(_metaArb_io_in_3_bits_data_c_cat_T, _metaArb_io_in_3_bits_data_c_cat_T_1) @[Consts.scala 82:42]
    node _metaArb_io_in_3_bits_data_c_cat_T_3 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _metaArb_io_in_3_bits_data_c_cat_T_4 = or(_metaArb_io_in_3_bits_data_c_cat_T_2, _metaArb_io_in_3_bits_data_c_cat_T_3) @[Consts.scala 82:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_5 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_6 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_7 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_8 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_9 = or(_metaArb_io_in_3_bits_data_c_cat_T_5, _metaArb_io_in_3_bits_data_c_cat_T_6) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_10 = or(_metaArb_io_in_3_bits_data_c_cat_T_9, _metaArb_io_in_3_bits_data_c_cat_T_7) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_11 = or(_metaArb_io_in_3_bits_data_c_cat_T_10, _metaArb_io_in_3_bits_data_c_cat_T_8) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_12 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_13 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_14 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_15 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_16 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_17 = or(_metaArb_io_in_3_bits_data_c_cat_T_12, _metaArb_io_in_3_bits_data_c_cat_T_13) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_18 = or(_metaArb_io_in_3_bits_data_c_cat_T_17, _metaArb_io_in_3_bits_data_c_cat_T_14) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_19 = or(_metaArb_io_in_3_bits_data_c_cat_T_18, _metaArb_io_in_3_bits_data_c_cat_T_15) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_20 = or(_metaArb_io_in_3_bits_data_c_cat_T_19, _metaArb_io_in_3_bits_data_c_cat_T_16) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_21 = or(_metaArb_io_in_3_bits_data_c_cat_T_11, _metaArb_io_in_3_bits_data_c_cat_T_20) @[Consts.scala 79:44]
    node metaArb_io_in_3_bits_data_c_cat_hi = or(_metaArb_io_in_3_bits_data_c_cat_T_4, _metaArb_io_in_3_bits_data_c_cat_T_21) @[Consts.scala 82:76]
    node _metaArb_io_in_3_bits_data_c_cat_T_22 = eq(s2_req.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _metaArb_io_in_3_bits_data_c_cat_T_23 = eq(s2_req.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _metaArb_io_in_3_bits_data_c_cat_T_24 = or(_metaArb_io_in_3_bits_data_c_cat_T_22, _metaArb_io_in_3_bits_data_c_cat_T_23) @[Consts.scala 82:42]
    node _metaArb_io_in_3_bits_data_c_cat_T_25 = eq(s2_req.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _metaArb_io_in_3_bits_data_c_cat_T_26 = or(_metaArb_io_in_3_bits_data_c_cat_T_24, _metaArb_io_in_3_bits_data_c_cat_T_25) @[Consts.scala 82:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_27 = eq(s2_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_28 = eq(s2_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_29 = eq(s2_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_30 = eq(s2_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_31 = or(_metaArb_io_in_3_bits_data_c_cat_T_27, _metaArb_io_in_3_bits_data_c_cat_T_28) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_32 = or(_metaArb_io_in_3_bits_data_c_cat_T_31, _metaArb_io_in_3_bits_data_c_cat_T_29) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_33 = or(_metaArb_io_in_3_bits_data_c_cat_T_32, _metaArb_io_in_3_bits_data_c_cat_T_30) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_34 = eq(s2_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_35 = eq(s2_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_36 = eq(s2_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_37 = eq(s2_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_38 = eq(s2_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_39 = or(_metaArb_io_in_3_bits_data_c_cat_T_34, _metaArb_io_in_3_bits_data_c_cat_T_35) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_40 = or(_metaArb_io_in_3_bits_data_c_cat_T_39, _metaArb_io_in_3_bits_data_c_cat_T_36) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_41 = or(_metaArb_io_in_3_bits_data_c_cat_T_40, _metaArb_io_in_3_bits_data_c_cat_T_37) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_42 = or(_metaArb_io_in_3_bits_data_c_cat_T_41, _metaArb_io_in_3_bits_data_c_cat_T_38) @[package.scala 72:59]
    node _metaArb_io_in_3_bits_data_c_cat_T_43 = or(_metaArb_io_in_3_bits_data_c_cat_T_33, _metaArb_io_in_3_bits_data_c_cat_T_42) @[Consts.scala 79:44]
    node _metaArb_io_in_3_bits_data_c_cat_T_44 = or(_metaArb_io_in_3_bits_data_c_cat_T_26, _metaArb_io_in_3_bits_data_c_cat_T_43) @[Consts.scala 82:76]
    node _metaArb_io_in_3_bits_data_c_cat_T_45 = eq(s2_req.cmd, UInt<2>("h03")) @[Consts.scala 83:54]
    node _metaArb_io_in_3_bits_data_c_cat_T_46 = or(_metaArb_io_in_3_bits_data_c_cat_T_44, _metaArb_io_in_3_bits_data_c_cat_T_45) @[Consts.scala 83:47]
    node _metaArb_io_in_3_bits_data_c_cat_T_47 = eq(s2_req.cmd, UInt<3>("h06")) @[Consts.scala 83:71]
    node metaArb_io_in_3_bits_data_c_cat_lo = or(_metaArb_io_in_3_bits_data_c_cat_T_46, _metaArb_io_in_3_bits_data_c_cat_T_47) @[Consts.scala 83:64]
    node metaArb_io_in_3_bits_data_hi = cat(metaArb_io_in_3_bits_data_c_cat_hi, metaArb_io_in_3_bits_data_c_cat_lo) @[Cat.scala 30:58]
    node _metaArb_io_in_3_bits_data_T_1 = cat(metaArb_io_in_3_bits_data_hi, tl_out.d.bits.param) @[Cat.scala 30:58]
    node metaArb_io_in_3_bits_data_hi_1 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _metaArb_io_in_3_bits_data_T_2 = cat(metaArb_io_in_3_bits_data_hi_1, UInt<2>("h01")) @[Cat.scala 30:58]
    node metaArb_io_in_3_bits_data_hi_2 = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _metaArb_io_in_3_bits_data_T_3 = cat(metaArb_io_in_3_bits_data_hi_2, UInt<2>("h00")) @[Cat.scala 30:58]
    node metaArb_io_in_3_bits_data_hi_3 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _metaArb_io_in_3_bits_data_T_4 = cat(metaArb_io_in_3_bits_data_hi_3, UInt<2>("h00")) @[Cat.scala 30:58]
    node metaArb_io_in_3_bits_data_hi_4 = cat(UInt<1>("h01"), UInt<1>("h01")) @[Cat.scala 30:58]
    node _metaArb_io_in_3_bits_data_T_5 = cat(metaArb_io_in_3_bits_data_hi_4, UInt<2>("h00")) @[Cat.scala 30:58]
    node _metaArb_io_in_3_bits_data_T_6 = eq(_metaArb_io_in_3_bits_data_T_2, _metaArb_io_in_3_bits_data_T_1) @[Mux.scala 80:60]
    node _metaArb_io_in_3_bits_data_T_7 = mux(_metaArb_io_in_3_bits_data_T_6, UInt<2>("h01"), UInt<2>("h00")) @[Mux.scala 80:57]
    node _metaArb_io_in_3_bits_data_T_8 = eq(_metaArb_io_in_3_bits_data_T_3, _metaArb_io_in_3_bits_data_T_1) @[Mux.scala 80:60]
    node _metaArb_io_in_3_bits_data_T_9 = mux(_metaArb_io_in_3_bits_data_T_8, UInt<2>("h02"), _metaArb_io_in_3_bits_data_T_7) @[Mux.scala 80:57]
    node _metaArb_io_in_3_bits_data_T_10 = eq(_metaArb_io_in_3_bits_data_T_4, _metaArb_io_in_3_bits_data_T_1) @[Mux.scala 80:60]
    node _metaArb_io_in_3_bits_data_T_11 = mux(_metaArb_io_in_3_bits_data_T_10, UInt<2>("h02"), _metaArb_io_in_3_bits_data_T_9) @[Mux.scala 80:57]
    node _metaArb_io_in_3_bits_data_T_12 = eq(_metaArb_io_in_3_bits_data_T_5, _metaArb_io_in_3_bits_data_T_1) @[Mux.scala 80:60]
    node _metaArb_io_in_3_bits_data_T_13 = mux(_metaArb_io_in_3_bits_data_T_12, UInt<2>("h03"), _metaArb_io_in_3_bits_data_T_11) @[Mux.scala 80:57]
    wire metaArb_io_in_3_bits_data_meta : {state : UInt<2>} @[Metadata.scala 159:20]
    metaArb_io_in_3_bits_data_meta is invalid @[Metadata.scala 159:20]
    metaArb_io_in_3_bits_data_meta.state <= _metaArb_io_in_3_bits_data_T_13 @[Metadata.scala 160:16]
    wire metaArb_io_in_3_bits_data_meta_1 : {coh : {state : UInt<2>}, tag : UInt<18>} @[HellaCache.scala 289:20]
    metaArb_io_in_3_bits_data_meta_1 is invalid @[HellaCache.scala 289:20]
    metaArb_io_in_3_bits_data_meta_1.tag <= _metaArb_io_in_3_bits_data_T @[HellaCache.scala 290:14]
    metaArb_io_in_3_bits_data_meta_1.coh <- metaArb_io_in_3_bits_data_meta @[HellaCache.scala 291:14]
    node _metaArb_io_in_3_bits_data_T_14 = cat(metaArb_io_in_3_bits_data_meta_1.coh.state, metaArb_io_in_3_bits_data_meta_1.tag) @[DCache.scala 718:134]
    metaArb.io.in[3].bits.data <= _metaArb_io_in_3_bits_data_T_14 @[DCache.scala 718:30]
    reg blockUncachedGrant : UInt<1>, gated_clock @[DCache.scala 722:33]
    blockUncachedGrant <= dataArb.io.out.valid @[DCache.scala 723:24]
    node _T_269 = or(blockUncachedGrant, s1_valid) @[DCache.scala 724:54]
    node _T_270 = and(data_1, _T_269) @[DCache.scala 724:31]
    when _T_270 : @[DCache.scala 724:68]
      tl_out.d.ready <= UInt<1>("h00") @[DCache.scala 725:22]
      when tl_out.d.valid : @[DCache.scala 727:29]
        io.cpu.req.ready <= UInt<1>("h00") @[DCache.scala 728:26]
        dataArb.io.in[1].valid <= UInt<1>("h01") @[DCache.scala 729:32]
        dataArb.io.in[1].bits.write <= UInt<1>("h00") @[DCache.scala 730:37]
        node _blockUncachedGrant_T = eq(dataArb.io.in[1].ready, UInt<1>("h00")) @[DCache.scala 731:31]
        blockUncachedGrant <= _blockUncachedGrant_T @[DCache.scala 731:28]
        skip @[DCache.scala 727:29]
      skip @[DCache.scala 724:68]
    node _T_271 = eq(tl_out.d.ready, UInt<1>("h00")) @[DCache.scala 735:28]
    node _T_272 = and(tl_out.d.valid, _T_271) @[DCache.scala 735:25]
    node _block_probe_for_core_progress_T = gt(blockProbeAfterGrantCount, UInt<1>("h00")) @[DCache.scala 738:65]
    node block_probe_for_core_progress = or(_block_probe_for_core_progress_T, lrscValid) @[DCache.scala 738:69]
    node _block_probe_for_pending_release_ack_T = and(release_ack_wait, release_ack_dirty) @[DCache.scala 739:62]
    wire _block_probe_for_pending_release_ack_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _block_probe_for_pending_release_ack_WIRE is invalid @[Bundles.scala 256:54]
    node _block_probe_for_pending_release_ack_T_1 = xor(_block_probe_for_pending_release_ack_WIRE.bits.address, release_ack_addr) @[DCache.scala 739:109]
    node _block_probe_for_pending_release_ack_T_2 = bits(_block_probe_for_pending_release_ack_T_1, 13, 6) @[DCache.scala 739:128]
    node _block_probe_for_pending_release_ack_T_3 = eq(_block_probe_for_pending_release_ack_T_2, UInt<1>("h00")) @[DCache.scala 739:145]
    node block_probe_for_pending_release_ack = and(_block_probe_for_pending_release_ack_T, _block_probe_for_pending_release_ack_T_3) @[DCache.scala 739:83]
    node _block_probe_for_ordering_T = or(releaseInFlight, block_probe_for_pending_release_ack) @[DCache.scala 740:50]
    node block_probe_for_ordering = or(_block_probe_for_ordering_T, grantInProgress) @[DCache.scala 740:89]
    wire _metaArb_io_in_6_valid_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _metaArb_io_in_6_valid_WIRE is invalid @[Bundles.scala 256:54]
    node _metaArb_io_in_6_valid_T = eq(block_probe_for_core_progress, UInt<1>("h00")) @[DCache.scala 741:48]
    node _metaArb_io_in_6_valid_T_1 = or(_metaArb_io_in_6_valid_T, lrscBackingOff) @[DCache.scala 741:79]
    node _metaArb_io_in_6_valid_T_2 = and(_metaArb_io_in_6_valid_WIRE.valid, _metaArb_io_in_6_valid_T_1) @[DCache.scala 741:44]
    metaArb.io.in[6].valid <= _metaArb_io_in_6_valid_T_2 @[DCache.scala 741:26]
    wire _WIRE_4 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _WIRE_4 is invalid @[Bundles.scala 256:54]
    node _T_273 = or(block_probe_for_core_progress, block_probe_for_ordering) @[DCache.scala 742:79]
    node _T_274 = or(_T_273, s1_valid) @[DCache.scala 742:107]
    node _T_275 = or(_T_274, s2_valid) @[DCache.scala 742:119]
    node _T_276 = eq(_T_275, UInt<1>("h00")) @[DCache.scala 742:47]
    node _T_277 = and(metaArb.io.in[6].ready, _T_276) @[DCache.scala 742:44]
    _WIRE_4.ready <= _T_277 @[DCache.scala 742:18]
    metaArb.io.in[6].bits.write <= UInt<1>("h00") @[DCache.scala 743:31]
    wire _metaArb_io_in_6_bits_idx_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _metaArb_io_in_6_bits_idx_WIRE is invalid @[Bundles.scala 256:54]
    node _metaArb_io_in_6_bits_idx_T = bits(_metaArb_io_in_6_bits_idx_WIRE.bits.address, 13, 6) @[DCache.scala 1170:47]
    metaArb.io.in[6].bits.idx <= _metaArb_io_in_6_bits_idx_T @[DCache.scala 744:29]
    node metaArb_io_in_6_bits_addr_hi = shr(io.cpu.req.bits.addr, 32) @[DCache.scala 745:58]
    wire _metaArb_io_in_6_bits_addr_WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _metaArb_io_in_6_bits_addr_WIRE is invalid @[Bundles.scala 256:54]
    node _metaArb_io_in_6_bits_addr_T = cat(metaArb_io_in_6_bits_addr_hi, _metaArb_io_in_6_bits_addr_WIRE.bits.address) @[Cat.scala 30:58]
    metaArb.io.in[6].bits.addr <= _metaArb_io_in_6_bits_addr_T @[DCache.scala 745:30]
    metaArb.io.in[6].bits.way_en <= metaArb.io.in[4].bits.way_en @[DCache.scala 746:32]
    metaArb.io.in[6].bits.data <= metaArb.io.in[4].bits.data @[DCache.scala 747:30]
    s1_victim_way <= UInt<1>("h00") @[DCache.scala 750:17]
    node _T_278 = and(tl_out_c.ready, tl_out_c.valid) @[Decoupled.scala 40:37]
    node _beats1_decode_T_4 = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beats1_decode_T_5 = dshl(_beats1_decode_T_4, tl_out_c.bits.size) @[package.scala 234:77]
    node _beats1_decode_T_6 = bits(_beats1_decode_T_5, 11, 0) @[package.scala 234:82]
    node _beats1_decode_T_7 = not(_beats1_decode_T_6) @[package.scala 234:46]
    node beats1_decode_1 = shr(_beats1_decode_T_7, 2) @[Edges.scala 219:59]
    node beats1_opdata_1 = bits(tl_out_c.bits.opcode, 0, 0) @[Edges.scala 101:36]
    node beats1_1 = mux(UInt<1>("h00"), beats1_decode_1, UInt<1>("h00")) @[Edges.scala 220:14]
    reg counter_1 : UInt<10>, gated_clock with : (reset => (reset, UInt<10>("h00"))) @[Edges.scala 228:27]
    node _counter1_T_1 = sub(counter_1, UInt<1>("h01")) @[Edges.scala 229:28]
    node counter1_1 = tail(_counter1_T_1, 1) @[Edges.scala 229:28]
    node c_first = eq(counter_1, UInt<1>("h00")) @[Edges.scala 230:25]
    node _last_T_2 = eq(counter_1, UInt<1>("h01")) @[Edges.scala 231:25]
    node _last_T_3 = eq(beats1_1, UInt<1>("h00")) @[Edges.scala 231:47]
    node c_last = or(_last_T_2, _last_T_3) @[Edges.scala 231:37]
    node releaseDone = and(c_last, _T_278) @[Edges.scala 232:22]
    node _count_T_1 = not(counter1_1) @[Edges.scala 233:27]
    node c_count = and(beats1_1, _count_T_1) @[Edges.scala 233:25]
    when _T_278 : @[Edges.scala 234:17]
      node _counter_T_1 = mux(c_first, beats1_1, counter1_1) @[Edges.scala 235:21]
      counter_1 <= _counter_T_1 @[Edges.scala 235:15]
      skip @[Edges.scala 234:17]
    wire releaseRejected : UInt<1> @[DCache.scala 772:29]
    releaseRejected is invalid @[DCache.scala 772:29]
    node s1_release_data_valid_x58 = and(dataArb.io.in[2].ready, dataArb.io.in[2].valid) @[Decoupled.scala 40:37]
    reg s1_release_data_valid : UInt<1>, gated_clock @[DCache.scala 773:34]
    s1_release_data_valid <= s1_release_data_valid_x58 @[DCache.scala 773:34]
    node _s2_release_data_valid_x61_T = eq(releaseRejected, UInt<1>("h00")) @[DCache.scala 774:67]
    node s2_release_data_valid_x61 = and(s1_release_data_valid, _s2_release_data_valid_x61_T) @[DCache.scala 774:64]
    reg s2_release_data_valid : UInt<1>, gated_clock @[DCache.scala 774:34]
    s2_release_data_valid <= s2_release_data_valid_x61 @[DCache.scala 774:34]
    node _releaseRejected_T = and(tl_out_c.ready, tl_out_c.valid) @[Decoupled.scala 40:37]
    node _releaseRejected_T_1 = eq(_releaseRejected_T, UInt<1>("h00")) @[DCache.scala 775:47]
    node _releaseRejected_T_2 = and(s2_release_data_valid, _releaseRejected_T_1) @[DCache.scala 775:44]
    releaseRejected <= _releaseRejected_T_2 @[DCache.scala 775:19]
    node _releaseDataBeat_T = cat(UInt<1>("h00"), c_count) @[Cat.scala 30:58]
    node _releaseDataBeat_T_1 = cat(UInt<1>("h00"), s2_release_data_valid) @[Cat.scala 30:58]
    node _releaseDataBeat_T_2 = add(s1_release_data_valid, _releaseDataBeat_T_1) @[DCache.scala 776:101]
    node _releaseDataBeat_T_3 = tail(_releaseDataBeat_T_2, 1) @[DCache.scala 776:101]
    node _releaseDataBeat_T_4 = mux(releaseRejected, UInt<1>("h00"), _releaseDataBeat_T_3) @[DCache.scala 776:52]
    node _releaseDataBeat_T_5 = add(_releaseDataBeat_T, _releaseDataBeat_T_4) @[DCache.scala 776:47]
    node releaseDataBeat = tail(_releaseDataBeat_T_5, 1) @[DCache.scala 776:47]
    wire nackResponseMessage : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 407:17]
    nackResponseMessage is invalid @[Edges.scala 407:17]
    nackResponseMessage.opcode <= UInt<3>("h04") @[Edges.scala 408:15]
    nackResponseMessage.param <= UInt<3>("h05") @[Edges.scala 409:15]
    nackResponseMessage.size <= probe_bits.size @[Edges.scala 410:15]
    nackResponseMessage.source <= probe_bits.source @[Edges.scala 411:15]
    nackResponseMessage.address <= probe_bits.address @[Edges.scala 412:15]
    nackResponseMessage.data <= UInt<1>("h00") @[Edges.scala 413:15]
    nackResponseMessage.corrupt <= UInt<1>("h00") @[Edges.scala 414:15]
    wire cleanReleaseMessage : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 407:17]
    cleanReleaseMessage is invalid @[Edges.scala 407:17]
    cleanReleaseMessage.opcode <= UInt<3>("h04") @[Edges.scala 408:15]
    cleanReleaseMessage.param <= s2_report_param @[Edges.scala 409:15]
    cleanReleaseMessage.size <= probe_bits.size @[Edges.scala 410:15]
    cleanReleaseMessage.source <= probe_bits.source @[Edges.scala 411:15]
    cleanReleaseMessage.address <= probe_bits.address @[Edges.scala 412:15]
    cleanReleaseMessage.data <= UInt<1>("h00") @[Edges.scala 413:15]
    cleanReleaseMessage.corrupt <= UInt<1>("h00") @[Edges.scala 414:15]
    wire dirtyReleaseMessage : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 422:17]
    dirtyReleaseMessage is invalid @[Edges.scala 422:17]
    dirtyReleaseMessage.opcode <= UInt<3>("h05") @[Edges.scala 423:15]
    dirtyReleaseMessage.param <= s2_report_param @[Edges.scala 424:15]
    dirtyReleaseMessage.size <= probe_bits.size @[Edges.scala 425:15]
    dirtyReleaseMessage.source <= probe_bits.source @[Edges.scala 426:15]
    dirtyReleaseMessage.address <= probe_bits.address @[Edges.scala 427:15]
    dirtyReleaseMessage.data <= UInt<1>("h00") @[Edges.scala 428:15]
    dirtyReleaseMessage.corrupt <= UInt<1>("h00") @[Edges.scala 429:15]
    node _tl_out_c_valid_T = eq(release_state, UInt<4>("h09")) @[DCache.scala 782:89]
    node _tl_out_c_valid_T_1 = and(UInt<1>("h00"), _tl_out_c_valid_T) @[DCache.scala 782:72]
    node _tl_out_c_valid_T_2 = or(s2_release_data_valid, _tl_out_c_valid_T_1) @[DCache.scala 782:44]
    node _tl_out_c_valid_T_3 = and(c_first, release_ack_wait) @[DCache.scala 782:128]
    node _tl_out_c_valid_T_4 = eq(_tl_out_c_valid_T_3, UInt<1>("h00")) @[DCache.scala 782:118]
    node _tl_out_c_valid_T_5 = and(_tl_out_c_valid_T_2, _tl_out_c_valid_T_4) @[DCache.scala 782:115]
    tl_out_c.valid <= _tl_out_c_valid_T_5 @[DCache.scala 782:18]
    tl_out_c.bits <- nackResponseMessage @[DCache.scala 783:17]
    wire newCoh : {state : UInt<2>}
    newCoh is invalid
    newCoh <- probeNewCoh
    releaseWay <= s2_probe_way @[DCache.scala 785:14]
    node _dataArb_io_in_2_valid_T = lt(releaseDataBeat, UInt<5>("h010")) @[DCache.scala 873:60]
    node _dataArb_io_in_2_valid_T_1 = and(inWriteback, _dataArb_io_in_2_valid_T) @[DCache.scala 873:41]
    dataArb.io.in[2].valid <= _dataArb_io_in_2_valid_T_1 @[DCache.scala 873:26]
    dataArb.io.in[2].bits <- dataArb.io.in[1].bits @[DCache.scala 874:25]
    dataArb.io.in[2].bits.write <= UInt<1>("h00") @[DCache.scala 875:31]
    node _dataArb_io_in_2_bits_addr_T = bits(probe_bits.address, 13, 6) @[DCache.scala 1170:47]
    node _dataArb_io_in_2_bits_addr_T_1 = shl(_dataArb_io_in_2_bits_addr_T, 6) @[DCache.scala 876:55]
    node _dataArb_io_in_2_bits_addr_T_2 = bits(releaseDataBeat, 3, 0) @[DCache.scala 876:90]
    node _dataArb_io_in_2_bits_addr_T_3 = shl(_dataArb_io_in_2_bits_addr_T_2, 2) @[DCache.scala 876:117]
    node _dataArb_io_in_2_bits_addr_T_4 = or(_dataArb_io_in_2_bits_addr_T_1, _dataArb_io_in_2_bits_addr_T_3) @[DCache.scala 876:72]
    dataArb.io.in[2].bits.addr <= _dataArb_io_in_2_bits_addr_T_4 @[DCache.scala 876:30]
    node _dataArb_io_in_2_bits_wordMask_T = not(UInt<1>("h00")) @[DCache.scala 877:37]
    dataArb.io.in[2].bits.wordMask <= _dataArb_io_in_2_bits_wordMask_T @[DCache.scala 877:34]
    node _dataArb_io_in_2_bits_eccMask_T = not(UInt<4>("h00")) @[DCache.scala 878:36]
    dataArb.io.in[2].bits.eccMask <= _dataArb_io_in_2_bits_eccMask_T @[DCache.scala 878:33]
    node _dataArb_io_in_2_bits_way_en_T = not(UInt<1>("h00")) @[DCache.scala 879:35]
    dataArb.io.in[2].bits.way_en <= _dataArb_io_in_2_bits_way_en_T @[DCache.scala 879:32]
    node _metaArb_io_in_4_valid_T = eq(release_state, UInt<4>("h06")) @[package.scala 15:47]
    node _metaArb_io_in_4_valid_T_1 = eq(release_state, UInt<4>("h07")) @[package.scala 15:47]
    node _metaArb_io_in_4_valid_T_2 = or(_metaArb_io_in_4_valid_T, _metaArb_io_in_4_valid_T_1) @[package.scala 72:59]
    metaArb.io.in[4].valid <= _metaArb_io_in_4_valid_T_2 @[DCache.scala 881:26]
    metaArb.io.in[4].bits.write <= UInt<1>("h01") @[DCache.scala 882:31]
    metaArb.io.in[4].bits.way_en <= releaseWay @[DCache.scala 883:32]
    node _metaArb_io_in_4_bits_idx_T = bits(probe_bits.address, 13, 6) @[DCache.scala 1170:47]
    metaArb.io.in[4].bits.idx <= _metaArb_io_in_4_bits_idx_T @[DCache.scala 884:29]
    node metaArb_io_in_4_bits_addr_hi = shr(io.cpu.req.bits.addr, 14) @[DCache.scala 885:58]
    node metaArb_io_in_4_bits_addr_lo = bits(probe_bits.address, 13, 0) @[DCache.scala 885:90]
    node _metaArb_io_in_4_bits_addr_T = cat(metaArb_io_in_4_bits_addr_hi, metaArb_io_in_4_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io.in[4].bits.addr <= _metaArb_io_in_4_bits_addr_T @[DCache.scala 885:30]
    node _metaArb_io_in_4_bits_data_T = shr(tl_out_c.bits.address, 14) @[DCache.scala 886:78]
    wire metaArb_io_in_4_bits_data_meta : {coh : {state : UInt<2>}, tag : UInt<18>} @[HellaCache.scala 289:20]
    metaArb_io_in_4_bits_data_meta is invalid @[HellaCache.scala 289:20]
    metaArb_io_in_4_bits_data_meta.tag <= _metaArb_io_in_4_bits_data_T @[HellaCache.scala 290:14]
    metaArb_io_in_4_bits_data_meta.coh <- newCoh @[HellaCache.scala 291:14]
    node _metaArb_io_in_4_bits_data_T_1 = cat(metaArb_io_in_4_bits_data_meta.coh.state, metaArb_io_in_4_bits_data_meta.tag) @[DCache.scala 886:97]
    metaArb.io.in[4].bits.data <= _metaArb_io_in_4_bits_data_T_1 @[DCache.scala 886:30]
    node _T_279 = and(metaArb.io.in[4].ready, metaArb.io.in[4].valid) @[Decoupled.scala 40:37]
    when _T_279 : @[DCache.scala 887:34]
      release_state <= UInt<4>("h00") @[DCache.scala 887:50]
      skip @[DCache.scala 887:34]
    io.cpu.resp.bits <- s2_req @[DCache.scala 890:20]
    io.cpu.resp.bits.has_data <= s2_read @[DCache.scala 891:29]
    io.cpu.resp.bits.replay <= UInt<1>("h00") @[DCache.scala 892:27]
    node _io_cpu_s2_uncached_T = eq(s2_hit, UInt<1>("h00")) @[DCache.scala 893:40]
    node _io_cpu_s2_uncached_T_1 = and(s2_uncached, _io_cpu_s2_uncached_T) @[DCache.scala 893:37]
    io.cpu.s2_uncached <= _io_cpu_s2_uncached_T_1 @[DCache.scala 893:22]
    io.cpu.s2_paddr <= s2_req.addr @[DCache.scala 894:19]
    node _io_cpu_ordered_T = eq(s1_req.no_xcpt, UInt<1>("h00")) @[DCache.scala 900:35]
    node _io_cpu_ordered_T_1 = and(s1_valid, _io_cpu_ordered_T) @[DCache.scala 900:32]
    node _io_cpu_ordered_T_2 = eq(s2_req.no_xcpt, UInt<1>("h00")) @[DCache.scala 900:72]
    node _io_cpu_ordered_T_3 = and(s2_valid, _io_cpu_ordered_T_2) @[DCache.scala 900:69]
    node _io_cpu_ordered_T_4 = or(_io_cpu_ordered_T_1, _io_cpu_ordered_T_3) @[DCache.scala 900:57]
    node _io_cpu_ordered_T_5 = or(_io_cpu_ordered_T_4, cached_grant_wait) @[DCache.scala 900:94]
    node _io_cpu_ordered_T_6 = orr(uncachedInFlight[0]) @[DCache.scala 900:142]
    node _io_cpu_ordered_T_7 = or(_io_cpu_ordered_T_5, _io_cpu_ordered_T_6) @[DCache.scala 900:115]
    node _io_cpu_ordered_T_8 = eq(_io_cpu_ordered_T_7, UInt<1>("h00")) @[DCache.scala 900:21]
    io.cpu.ordered <= _io_cpu_ordered_T_8 @[DCache.scala 900:18]
    node _s1_xcpt_valid_T = eq(s1_req.no_xcpt, UInt<1>("h00")) @[DCache.scala 902:43]
    node _s1_xcpt_valid_T_1 = and(tlb.io.req.valid, _s1_xcpt_valid_T) @[DCache.scala 902:40]
    node _s1_xcpt_valid_T_2 = eq(s1_nack, UInt<1>("h00")) @[DCache.scala 902:68]
    node s1_xcpt_valid = and(_s1_xcpt_valid_T_1, _s1_xcpt_valid_T_2) @[DCache.scala 902:65]
    reg io_cpu_s2_xcpt_REG : UInt<1>, gated_clock @[DCache.scala 903:32]
    io_cpu_s2_xcpt_REG <= s1_xcpt_valid @[DCache.scala 903:32]
    wire _io_cpu_s2_xcpt_WIRE : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, must_alloc : UInt<1>, prefetchable : UInt<1>} @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE is invalid @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.prefetchable <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.must_alloc <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.cacheable <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.ma.inst <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.ma.st <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.ma.ld <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.ae.inst <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.ae.st <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.ae.ld <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.pf.inst <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.pf.st <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.pf.ld <= UInt<1>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.paddr <= UInt<32>("h00") @[DCache.scala 903:74]
    _io_cpu_s2_xcpt_WIRE.miss <= UInt<1>("h00") @[DCache.scala 903:74]
    node _io_cpu_s2_xcpt_T = mux(io_cpu_s2_xcpt_REG, s2_tlb_xcpt, _io_cpu_s2_xcpt_WIRE) @[DCache.scala 903:24]
    io.cpu.s2_xcpt <- _io_cpu_s2_xcpt_T @[DCache.scala 903:18]
    node _T_280 = eq(s2_req.cmd, UInt<3>("h06")) @[package.scala 15:47]
    node _T_281 = eq(s2_req.cmd, UInt<3>("h07")) @[package.scala 15:47]
    node _T_282 = or(_T_280, _T_281) @[package.scala 72:59]
    node _T_283 = and(s2_valid_masked, _T_282) @[DCache.scala 906:30]
    node _T_284 = eq(_T_283, UInt<1>("h00")) @[DCache.scala 906:12]
    node _T_285 = asUInt(reset) @[DCache.scala 906:11]
    node _T_286 = or(_T_284, _T_285) @[DCache.scala 906:11]
    node _T_287 = eq(_T_286, UInt<1>("h00")) @[DCache.scala 906:11]
    when _T_287 : @[DCache.scala 906:11]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:906 assert(!(s2_valid_masked && s2_req.cmd.isOneOf(M_XLR, M_XSC)))\n") @[DCache.scala 906:11]
      stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 906:11]
      skip @[DCache.scala 906:11]
    node words_0 = bits(tl_out.d.bits.data, 31, 0) @[package.scala 202:50]
    reg s2_uncached_data_word : UInt<32>, gated_clock @[Reg.scala 15:16]
    when io.cpu.replay_next : @[Reg.scala 16:19]
      s2_uncached_data_word <= words_0 @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg doUncachedResp : UInt<1>, gated_clock @[DCache.scala 918:27]
    doUncachedResp <= io.cpu.replay_next @[DCache.scala 918:27]
    node _io_cpu_resp_valid_T = or(s2_valid_hit_pre_data_ecc, doUncachedResp) @[DCache.scala 919:51]
    node _io_cpu_resp_valid_T_1 = eq(s2_data_error, UInt<1>("h00")) @[DCache.scala 919:73]
    node _io_cpu_resp_valid_T_2 = and(_io_cpu_resp_valid_T, _io_cpu_resp_valid_T_1) @[DCache.scala 919:70]
    io.cpu.resp.valid <= _io_cpu_resp_valid_T_2 @[DCache.scala 919:21]
    node _io_cpu_replay_next_T = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    node _io_cpu_replay_next_T_1 = and(_io_cpu_replay_next_T, data_1) @[DCache.scala 920:41]
    node _io_cpu_replay_next_T_2 = and(_io_cpu_replay_next_T_1, UInt<1>("h01")) @[DCache.scala 920:64]
    io.cpu.replay_next <= _io_cpu_replay_next_T_2 @[DCache.scala 920:22]
    when doUncachedResp : @[DCache.scala 921:25]
      node _T_288 = eq(s2_valid_hit, UInt<1>("h00")) @[DCache.scala 922:12]
      node _T_289 = asUInt(reset) @[DCache.scala 922:11]
      node _T_290 = or(_T_288, _T_289) @[DCache.scala 922:11]
      node _T_291 = eq(_T_290, UInt<1>("h00")) @[DCache.scala 922:11]
      when _T_291 : @[DCache.scala 922:11]
        printf(gated_clock, UInt<1>(1), "Assertion failed\n    at DCache.scala:922 assert(!s2_valid_hit)\n") @[DCache.scala 922:11]
        stop(gated_clock, UInt<1>(1), 1) @[DCache.scala 922:11]
        skip @[DCache.scala 922:11]
      io.cpu.resp.bits.replay <= UInt<1>("h01") @[DCache.scala 923:29]
      io.cpu.resp.bits.addr <= s2_uncached_resp_addr @[DCache.scala 924:27]
      skip @[DCache.scala 921:25]
    node s2_data_word = bits(s2_data_uncorrected, 31, 0) @[DCache.scala 940:80]
    node s2_data_word_corrected = bits(s2_data_corrected, 31, 0) @[DCache.scala 941:88]
    node _s2_data_word_possibly_uncached_T = and(UInt<1>("h00"), doUncachedResp) @[DCache.scala 942:71]
    node _s2_data_word_possibly_uncached_T_1 = mux(_s2_data_word_possibly_uncached_T, s2_uncached_data_word, UInt<1>("h00")) @[DCache.scala 942:43]
    node s2_data_word_possibly_uncached = or(_s2_data_word_possibly_uncached_T_1, s2_data_word) @[DCache.scala 942:118]
    node size = bits(s2_req.size, 1, 0) @[AMOALU.scala 10:17]
    node _io_cpu_resp_bits_data_shifted_T = bits(s2_req.addr, 1, 1) @[AMOALU.scala 39:29]
    node _io_cpu_resp_bits_data_shifted_T_1 = bits(s2_data_word_possibly_uncached, 31, 16) @[AMOALU.scala 39:37]
    node _io_cpu_resp_bits_data_shifted_T_2 = bits(s2_data_word_possibly_uncached, 15, 0) @[AMOALU.scala 39:55]
    node io_cpu_resp_bits_data_shifted = mux(_io_cpu_resp_bits_data_shifted_T, _io_cpu_resp_bits_data_shifted_T_1, _io_cpu_resp_bits_data_shifted_T_2) @[AMOALU.scala 39:24]
    node io_cpu_resp_bits_data_doZero = and(UInt<1>("h00"), s2_sc) @[AMOALU.scala 40:33]
    node io_cpu_resp_bits_data_lo = mux(io_cpu_resp_bits_data_doZero, UInt<1>("h00"), io_cpu_resp_bits_data_shifted) @[AMOALU.scala 41:23]
    node _io_cpu_resp_bits_data_T = eq(size, UInt<1>("h01")) @[AMOALU.scala 42:26]
    node _io_cpu_resp_bits_data_T_1 = or(_io_cpu_resp_bits_data_T, io_cpu_resp_bits_data_doZero) @[AMOALU.scala 42:38]
    node _io_cpu_resp_bits_data_T_2 = bits(io_cpu_resp_bits_data_lo, 15, 15) @[AMOALU.scala 42:85]
    node _io_cpu_resp_bits_data_T_3 = and(s2_req.signed, _io_cpu_resp_bits_data_T_2) @[AMOALU.scala 42:76]
    node _io_cpu_resp_bits_data_T_4 = bits(_io_cpu_resp_bits_data_T_3, 0, 0) @[Bitwise.scala 72:15]
    node _io_cpu_resp_bits_data_T_5 = mux(_io_cpu_resp_bits_data_T_4, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _io_cpu_resp_bits_data_T_6 = bits(s2_data_word_possibly_uncached, 31, 16) @[AMOALU.scala 42:98]
    node io_cpu_resp_bits_data_hi = mux(_io_cpu_resp_bits_data_T_1, _io_cpu_resp_bits_data_T_5, _io_cpu_resp_bits_data_T_6) @[AMOALU.scala 42:20]
    node _io_cpu_resp_bits_data_T_7 = cat(io_cpu_resp_bits_data_hi, io_cpu_resp_bits_data_lo) @[Cat.scala 30:58]
    node _io_cpu_resp_bits_data_shifted_T_3 = bits(s2_req.addr, 0, 0) @[AMOALU.scala 39:29]
    node _io_cpu_resp_bits_data_shifted_T_4 = bits(_io_cpu_resp_bits_data_T_7, 15, 8) @[AMOALU.scala 39:37]
    node _io_cpu_resp_bits_data_shifted_T_5 = bits(_io_cpu_resp_bits_data_T_7, 7, 0) @[AMOALU.scala 39:55]
    node io_cpu_resp_bits_data_shifted_1 = mux(_io_cpu_resp_bits_data_shifted_T_3, _io_cpu_resp_bits_data_shifted_T_4, _io_cpu_resp_bits_data_shifted_T_5) @[AMOALU.scala 39:24]
    node io_cpu_resp_bits_data_doZero_1 = and(UInt<1>("h01"), s2_sc) @[AMOALU.scala 40:33]
    node io_cpu_resp_bits_data_lo_1 = mux(io_cpu_resp_bits_data_doZero_1, UInt<1>("h00"), io_cpu_resp_bits_data_shifted_1) @[AMOALU.scala 41:23]
    node _io_cpu_resp_bits_data_T_8 = eq(size, UInt<1>("h00")) @[AMOALU.scala 42:26]
    node _io_cpu_resp_bits_data_T_9 = or(_io_cpu_resp_bits_data_T_8, io_cpu_resp_bits_data_doZero_1) @[AMOALU.scala 42:38]
    node _io_cpu_resp_bits_data_T_10 = bits(io_cpu_resp_bits_data_lo_1, 7, 7) @[AMOALU.scala 42:85]
    node _io_cpu_resp_bits_data_T_11 = and(s2_req.signed, _io_cpu_resp_bits_data_T_10) @[AMOALU.scala 42:76]
    node _io_cpu_resp_bits_data_T_12 = bits(_io_cpu_resp_bits_data_T_11, 0, 0) @[Bitwise.scala 72:15]
    node _io_cpu_resp_bits_data_T_13 = mux(_io_cpu_resp_bits_data_T_12, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
    node _io_cpu_resp_bits_data_T_14 = bits(_io_cpu_resp_bits_data_T_7, 31, 8) @[AMOALU.scala 42:98]
    node io_cpu_resp_bits_data_hi_1 = mux(_io_cpu_resp_bits_data_T_9, _io_cpu_resp_bits_data_T_13, _io_cpu_resp_bits_data_T_14) @[AMOALU.scala 42:20]
    node _io_cpu_resp_bits_data_T_15 = cat(io_cpu_resp_bits_data_hi_1, io_cpu_resp_bits_data_lo_1) @[Cat.scala 30:58]
    node _io_cpu_resp_bits_data_T_16 = or(_io_cpu_resp_bits_data_T_15, s2_sc_fail) @[DCache.scala 944:41]
    io.cpu.resp.bits.data <= _io_cpu_resp_bits_data_T_16 @[DCache.scala 944:25]
    io.cpu.resp.bits.data_word_bypass <= s2_data_word_possibly_uncached @[DCache.scala 945:37]
    io.cpu.resp.bits.data_raw <= s2_data_word @[DCache.scala 946:29]
    io.cpu.resp.bits.store_data <= pstore1_data @[DCache.scala 947:31]
    inst amoalu of AMOALU @[DCache.scala 952:26]
    amoalu.io is invalid
    amoalu.clock <= gated_clock
    amoalu.reset <= reset
    node _amoalu_io_mask_T = shr(pstore1_mask, 0) @[DCache.scala 953:38]
    amoalu.io.mask <= _amoalu_io_mask_T @[DCache.scala 953:22]
    amoalu.io.cmd <= pstore1_cmd @[DCache.scala 954:21]
    node _amoalu_io_lhs_T = shr(s2_data_word, 0) @[DCache.scala 955:37]
    amoalu.io.lhs <= _amoalu_io_lhs_T @[DCache.scala 955:21]
    node _amoalu_io_rhs_T = shr(pstore1_data, 0) @[DCache.scala 956:37]
    amoalu.io.rhs <= _amoalu_io_rhs_T @[DCache.scala 956:21]
    node _pstore1_storegen_data_mask_T = mux(s2_correct, UInt<1>("h00"), pstore1_mask) @[DCache.scala 960:40]
    node _pstore1_storegen_data_mask_T_1 = bits(_pstore1_storegen_data_mask_T, 0, 0) @[Bitwise.scala 26:51]
    node _pstore1_storegen_data_mask_T_2 = bits(_pstore1_storegen_data_mask_T, 1, 1) @[Bitwise.scala 26:51]
    node _pstore1_storegen_data_mask_T_3 = bits(_pstore1_storegen_data_mask_T, 2, 2) @[Bitwise.scala 26:51]
    node _pstore1_storegen_data_mask_T_4 = bits(_pstore1_storegen_data_mask_T, 3, 3) @[Bitwise.scala 26:51]
    node _pstore1_storegen_data_mask_T_5 = bits(_pstore1_storegen_data_mask_T_1, 0, 0) @[Bitwise.scala 72:15]
    node pstore1_storegen_data_mask_lo_lo = mux(_pstore1_storegen_data_mask_T_5, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _pstore1_storegen_data_mask_T_6 = bits(_pstore1_storegen_data_mask_T_2, 0, 0) @[Bitwise.scala 72:15]
    node pstore1_storegen_data_mask_lo_hi = mux(_pstore1_storegen_data_mask_T_6, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _pstore1_storegen_data_mask_T_7 = bits(_pstore1_storegen_data_mask_T_3, 0, 0) @[Bitwise.scala 72:15]
    node pstore1_storegen_data_mask_hi_lo = mux(_pstore1_storegen_data_mask_T_7, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _pstore1_storegen_data_mask_T_8 = bits(_pstore1_storegen_data_mask_T_4, 0, 0) @[Bitwise.scala 72:15]
    node pstore1_storegen_data_mask_hi_hi = mux(_pstore1_storegen_data_mask_T_8, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node pstore1_storegen_data_mask_lo = cat(pstore1_storegen_data_mask_lo_hi, pstore1_storegen_data_mask_lo_lo) @[Cat.scala 30:58]
    node pstore1_storegen_data_mask_hi = cat(pstore1_storegen_data_mask_hi_hi, pstore1_storegen_data_mask_hi_lo) @[Cat.scala 30:58]
    node mask_1 = cat(pstore1_storegen_data_mask_hi, pstore1_storegen_data_mask_lo) @[Cat.scala 30:58]
    node _pstore1_storegen_data_T = and(amoalu.io.out_unmasked, mask_1) @[DCache.scala 961:45]
    node _pstore1_storegen_data_T_1 = not(mask_1) @[DCache.scala 961:79]
    node _pstore1_storegen_data_T_2 = and(s2_data_word_corrected, _pstore1_storegen_data_T_1) @[DCache.scala 961:77]
    node _pstore1_storegen_data_T_3 = or(_pstore1_storegen_data_T, _pstore1_storegen_data_T_2) @[DCache.scala 961:52]
    pstore1_storegen_data <= _pstore1_storegen_data_T_3 @[DCache.scala 959:27]
    node flushCounterNext = add(flushCounter, UInt<1>("h01")) @[DCache.scala 979:39]
    node _flushDone_T = shr(flushCounterNext, 8) @[DCache.scala 980:37]
    node flushDone = eq(_flushDone_T, UInt<1>("h01")) @[DCache.scala 980:57]
    node flushCounterWrap = bits(flushCounterNext, 7, 0) @[DCache.scala 981:42]
    node _T_292 = and(s2_valid_masked, s2_cmd_flush_all) @[DCache.scala 982:26]
    node _T_293 = and(_T_292, s2_meta_error) @[DCache.scala 982:46]
    node _T_294 = and(s2_valid_masked, s2_cmd_flush_all) @[DCache.scala 983:26]
    node _T_295 = and(_T_294, s2_data_error) @[DCache.scala 983:46]
    node _s1_flush_valid_T = and(metaArb.io.in[5].ready, metaArb.io.in[5].valid) @[Decoupled.scala 40:37]
    node _s1_flush_valid_T_1 = eq(s1_flush_valid, UInt<1>("h00")) @[DCache.scala 984:48]
    node _s1_flush_valid_T_2 = and(_s1_flush_valid_T, _s1_flush_valid_T_1) @[DCache.scala 984:45]
    node _s1_flush_valid_T_3 = eq(s2_flush_valid_pre_tag_ecc, UInt<1>("h00")) @[DCache.scala 984:67]
    node _s1_flush_valid_T_4 = and(_s1_flush_valid_T_2, _s1_flush_valid_T_3) @[DCache.scala 984:64]
    node _s1_flush_valid_T_5 = eq(release_state, UInt<4>("h00")) @[DCache.scala 984:112]
    node _s1_flush_valid_T_6 = and(_s1_flush_valid_T_4, _s1_flush_valid_T_5) @[DCache.scala 984:95]
    node _s1_flush_valid_T_7 = eq(release_ack_wait, UInt<1>("h00")) @[DCache.scala 984:127]
    node _s1_flush_valid_T_8 = and(_s1_flush_valid_T_6, _s1_flush_valid_T_7) @[DCache.scala 984:124]
    s1_flush_valid <= _s1_flush_valid_T_8 @[DCache.scala 984:18]
    node _metaArb_io_in_5_valid_T = eq(flushed, UInt<1>("h00")) @[DCache.scala 985:41]
    node _metaArb_io_in_5_valid_T_1 = and(flushing, _metaArb_io_in_5_valid_T) @[DCache.scala 985:38]
    metaArb.io.in[5].valid <= _metaArb_io_in_5_valid_T_1 @[DCache.scala 985:26]
    metaArb.io.in[5].bits.write <= UInt<1>("h00") @[DCache.scala 986:31]
    node _metaArb_io_in_5_bits_idx_T = bits(flushCounter, 7, 0) @[DCache.scala 987:44]
    metaArb.io.in[5].bits.idx <= _metaArb_io_in_5_bits_idx_T @[DCache.scala 987:29]
    node metaArb_io_in_5_bits_addr_hi = shr(io.cpu.req.bits.addr, 14) @[DCache.scala 988:58]
    node metaArb_io_in_5_bits_addr_lo = shl(metaArb.io.in[5].bits.idx, 6) @[DCache.scala 988:98]
    node _metaArb_io_in_5_bits_addr_T = cat(metaArb_io_in_5_bits_addr_hi, metaArb_io_in_5_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io.in[5].bits.addr <= _metaArb_io_in_5_bits_addr_T @[DCache.scala 988:30]
    metaArb.io.in[5].bits.way_en <= metaArb.io.in[4].bits.way_en @[DCache.scala 989:32]
    metaArb.io.in[5].bits.data <= metaArb.io.in[4].bits.data @[DCache.scala 990:30]
    metaArb.io.in[0].valid <= resetting @[DCache.scala 1016:26]
    metaArb.io.in[0].bits <- metaArb.io.in[5].bits @[DCache.scala 1017:25]
    metaArb.io.in[0].bits.write <= UInt<1>("h01") @[DCache.scala 1018:31]
    node _metaArb_io_in_0_bits_way_en_T = not(UInt<1>("h00")) @[DCache.scala 1019:35]
    metaArb.io.in[0].bits.way_en <= _metaArb_io_in_0_bits_way_en_T @[DCache.scala 1019:32]
    wire metaArb_io_in_0_bits_data_meta : {state : UInt<2>} @[Metadata.scala 159:20]
    metaArb_io_in_0_bits_data_meta is invalid @[Metadata.scala 159:20]
    metaArb_io_in_0_bits_data_meta.state <= UInt<2>("h00") @[Metadata.scala 160:16]
    wire metaArb_io_in_0_bits_data_meta_1 : {coh : {state : UInt<2>}, tag : UInt<18>} @[HellaCache.scala 289:20]
    metaArb_io_in_0_bits_data_meta_1 is invalid @[HellaCache.scala 289:20]
    metaArb_io_in_0_bits_data_meta_1.tag <= UInt<1>("h00") @[HellaCache.scala 290:14]
    metaArb_io_in_0_bits_data_meta_1.coh <- metaArb_io_in_0_bits_data_meta @[HellaCache.scala 291:14]
    node _metaArb_io_in_0_bits_data_T = cat(metaArb_io_in_0_bits_data_meta_1.coh.state, metaArb_io_in_0_bits_data_meta_1.tag) @[DCache.scala 1020:85]
    metaArb.io.in[0].bits.data <= _metaArb_io_in_0_bits_data_T @[DCache.scala 1020:30]
    when resetting : @[DCache.scala 1021:20]
      flushCounter <= flushCounterNext @[DCache.scala 1022:18]
      when flushDone : @[DCache.scala 1023:22]
        resetting <= UInt<1>("h00") @[DCache.scala 1024:17]
        skip @[DCache.scala 1023:22]
      skip @[DCache.scala 1021:20]
    node _clock_en_reg_T = bits(io.ptw.customCSRs.csrs[0].value, 0, 0) @[CustomCSRs.scala 37:61]
    node _clock_en_reg_T_1 = or(UInt<1>("h01"), _clock_en_reg_T) @[DCache.scala 1030:42]
    node _clock_en_reg_T_2 = or(_clock_en_reg_T_1, io.cpu.keep_clock_enabled) @[DCache.scala 1031:46]
    node _clock_en_reg_T_3 = or(_clock_en_reg_T_2, metaArb.io.out.valid) @[DCache.scala 1032:31]
    node _clock_en_reg_T_4 = or(_clock_en_reg_T_3, s1_probe) @[DCache.scala 1033:26]
    node _clock_en_reg_T_5 = or(_clock_en_reg_T_4, s2_probe) @[DCache.scala 1034:14]
    node _clock_en_reg_T_6 = or(_clock_en_reg_T_5, s1_valid) @[DCache.scala 1034:26]
    node _clock_en_reg_T_7 = or(_clock_en_reg_T_6, s2_valid) @[DCache.scala 1035:14]
    node _clock_en_reg_T_8 = or(_clock_en_reg_T_7, tlb_port.req.valid) @[DCache.scala 1035:26]
    node _clock_en_reg_T_9 = or(_clock_en_reg_T_8, s1_tlb_req_valid) @[DCache.scala 1036:24]
    node _clock_en_reg_T_10 = or(_clock_en_reg_T_9, s2_tlb_req_valid) @[DCache.scala 1037:22]
    node _clock_en_reg_T_11 = or(_clock_en_reg_T_10, pstore1_held) @[DCache.scala 1037:42]
    node _clock_en_reg_T_12 = or(_clock_en_reg_T_11, pstore2_valid) @[DCache.scala 1038:18]
    node _clock_en_reg_T_13 = neq(release_state, UInt<4>("h00")) @[DCache.scala 1039:19]
    node _clock_en_reg_T_14 = or(_clock_en_reg_T_12, _clock_en_reg_T_13) @[DCache.scala 1038:35]
    node _clock_en_reg_T_15 = or(_clock_en_reg_T_14, release_ack_wait) @[DCache.scala 1039:31]
    node _clock_en_reg_T_16 = eq(UInt<1>("h01"), UInt<1>("h00")) @[DCache.scala 1040:25]
    node _clock_en_reg_T_17 = or(_clock_en_reg_T_15, _clock_en_reg_T_16) @[DCache.scala 1040:22]
    node _clock_en_reg_T_18 = eq(tlb.io.req.ready, UInt<1>("h00")) @[DCache.scala 1041:5]
    node _clock_en_reg_T_19 = or(_clock_en_reg_T_17, _clock_en_reg_T_18) @[DCache.scala 1040:46]
    node _clock_en_reg_T_20 = or(_clock_en_reg_T_19, cached_grant_wait) @[DCache.scala 1041:23]
    node _clock_en_reg_T_21 = orr(uncachedInFlight[0]) @[DCache.scala 1042:50]
    node _clock_en_reg_T_22 = or(_clock_en_reg_T_20, _clock_en_reg_T_21) @[DCache.scala 1042:23]
    node _clock_en_reg_T_23 = gt(lrscCount, UInt<1>("h00")) @[DCache.scala 1043:15]
    node _clock_en_reg_T_24 = or(_clock_en_reg_T_22, _clock_en_reg_T_23) @[DCache.scala 1042:54]
    node _clock_en_reg_T_25 = gt(blockProbeAfterGrantCount, UInt<1>("h00")) @[DCache.scala 1043:48]
    node _clock_en_reg_T_26 = or(_clock_en_reg_T_24, _clock_en_reg_T_25) @[DCache.scala 1043:19]
    clock_en_reg <= _clock_en_reg_T_26 @[DCache.scala 1030:16]
    node _io_cpu_perf_acquire_T = and(tl_out_a.ready, tl_out_a.valid) @[Decoupled.scala 40:37]
    node _io_cpu_perf_acquire_beats1_decode_T = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _io_cpu_perf_acquire_beats1_decode_T_1 = dshl(_io_cpu_perf_acquire_beats1_decode_T, tl_out_a.bits.size) @[package.scala 234:77]
    node _io_cpu_perf_acquire_beats1_decode_T_2 = bits(_io_cpu_perf_acquire_beats1_decode_T_1, 11, 0) @[package.scala 234:82]
    node _io_cpu_perf_acquire_beats1_decode_T_3 = not(_io_cpu_perf_acquire_beats1_decode_T_2) @[package.scala 234:46]
    node io_cpu_perf_acquire_beats1_decode = shr(_io_cpu_perf_acquire_beats1_decode_T_3, 2) @[Edges.scala 219:59]
    node _io_cpu_perf_acquire_beats1_opdata_T = bits(tl_out_a.bits.opcode, 2, 2) @[Edges.scala 91:37]
    node io_cpu_perf_acquire_beats1_opdata = eq(_io_cpu_perf_acquire_beats1_opdata_T, UInt<1>("h00")) @[Edges.scala 91:28]
    node io_cpu_perf_acquire_beats1 = mux(io_cpu_perf_acquire_beats1_opdata, io_cpu_perf_acquire_beats1_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    reg io_cpu_perf_acquire_counter : UInt<10>, gated_clock with : (reset => (reset, UInt<10>("h00"))) @[Edges.scala 228:27]
    node _io_cpu_perf_acquire_counter1_T = sub(io_cpu_perf_acquire_counter, UInt<1>("h01")) @[Edges.scala 229:28]
    node io_cpu_perf_acquire_counter1 = tail(_io_cpu_perf_acquire_counter1_T, 1) @[Edges.scala 229:28]
    node io_cpu_perf_acquire_first = eq(io_cpu_perf_acquire_counter, UInt<1>("h00")) @[Edges.scala 230:25]
    node _io_cpu_perf_acquire_last_T = eq(io_cpu_perf_acquire_counter, UInt<1>("h01")) @[Edges.scala 231:25]
    node _io_cpu_perf_acquire_last_T_1 = eq(io_cpu_perf_acquire_beats1, UInt<1>("h00")) @[Edges.scala 231:47]
    node io_cpu_perf_acquire_last = or(_io_cpu_perf_acquire_last_T, _io_cpu_perf_acquire_last_T_1) @[Edges.scala 231:37]
    node io_cpu_perf_acquire_done = and(io_cpu_perf_acquire_last, _io_cpu_perf_acquire_T) @[Edges.scala 232:22]
    node _io_cpu_perf_acquire_count_T = not(io_cpu_perf_acquire_counter1) @[Edges.scala 233:27]
    node io_cpu_perf_acquire_count = and(io_cpu_perf_acquire_beats1, _io_cpu_perf_acquire_count_T) @[Edges.scala 233:25]
    when _io_cpu_perf_acquire_T : @[Edges.scala 234:17]
      node _io_cpu_perf_acquire_counter_T = mux(io_cpu_perf_acquire_first, io_cpu_perf_acquire_beats1, io_cpu_perf_acquire_counter1) @[Edges.scala 235:21]
      io_cpu_perf_acquire_counter <= _io_cpu_perf_acquire_counter_T @[Edges.scala 235:15]
      skip @[Edges.scala 234:17]
    io.cpu.perf.acquire <= io_cpu_perf_acquire_done @[DCache.scala 1046:23]
    node _io_cpu_perf_release_T = and(tl_out_c.ready, tl_out_c.valid) @[Decoupled.scala 40:37]
    node _io_cpu_perf_release_beats1_decode_T = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _io_cpu_perf_release_beats1_decode_T_1 = dshl(_io_cpu_perf_release_beats1_decode_T, tl_out_c.bits.size) @[package.scala 234:77]
    node _io_cpu_perf_release_beats1_decode_T_2 = bits(_io_cpu_perf_release_beats1_decode_T_1, 11, 0) @[package.scala 234:82]
    node _io_cpu_perf_release_beats1_decode_T_3 = not(_io_cpu_perf_release_beats1_decode_T_2) @[package.scala 234:46]
    node io_cpu_perf_release_beats1_decode = shr(_io_cpu_perf_release_beats1_decode_T_3, 2) @[Edges.scala 219:59]
    node io_cpu_perf_release_beats1_opdata = bits(tl_out_c.bits.opcode, 0, 0) @[Edges.scala 101:36]
    node io_cpu_perf_release_beats1 = mux(UInt<1>("h00"), io_cpu_perf_release_beats1_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    reg io_cpu_perf_release_counter : UInt<10>, gated_clock with : (reset => (reset, UInt<10>("h00"))) @[Edges.scala 228:27]
    node _io_cpu_perf_release_counter1_T = sub(io_cpu_perf_release_counter, UInt<1>("h01")) @[Edges.scala 229:28]
    node io_cpu_perf_release_counter1 = tail(_io_cpu_perf_release_counter1_T, 1) @[Edges.scala 229:28]
    node io_cpu_perf_release_first = eq(io_cpu_perf_release_counter, UInt<1>("h00")) @[Edges.scala 230:25]
    node _io_cpu_perf_release_last_T = eq(io_cpu_perf_release_counter, UInt<1>("h01")) @[Edges.scala 231:25]
    node _io_cpu_perf_release_last_T_1 = eq(io_cpu_perf_release_beats1, UInt<1>("h00")) @[Edges.scala 231:47]
    node io_cpu_perf_release_last = or(_io_cpu_perf_release_last_T, _io_cpu_perf_release_last_T_1) @[Edges.scala 231:37]
    node io_cpu_perf_release_done = and(io_cpu_perf_release_last, _io_cpu_perf_release_T) @[Edges.scala 232:22]
    node _io_cpu_perf_release_count_T = not(io_cpu_perf_release_counter1) @[Edges.scala 233:27]
    node io_cpu_perf_release_count = and(io_cpu_perf_release_beats1, _io_cpu_perf_release_count_T) @[Edges.scala 233:25]
    when _io_cpu_perf_release_T : @[Edges.scala 234:17]
      node _io_cpu_perf_release_counter_T = mux(io_cpu_perf_release_first, io_cpu_perf_release_beats1, io_cpu_perf_release_counter1) @[Edges.scala 235:21]
      io_cpu_perf_release_counter <= _io_cpu_perf_release_counter_T @[Edges.scala 235:15]
      skip @[Edges.scala 234:17]
    io.cpu.perf.release <= io_cpu_perf_release_done @[DCache.scala 1047:23]
    node _io_cpu_perf_grant_T = and(tl_out.d.valid, d_last) @[DCache.scala 1048:39]
    io.cpu.perf.grant <= _io_cpu_perf_grant_T @[DCache.scala 1048:21]
    node _io_cpu_perf_tlbMiss_T = and(io.ptw.req.ready, io.ptw.req.valid) @[Decoupled.scala 40:37]
    io.cpu.perf.tlbMiss <= _io_cpu_perf_tlbMiss_T @[DCache.scala 1049:23]
    node _io_cpu_perf_storeBufferEmptyAfterLoad_T = and(s1_valid, s1_write) @[DCache.scala 1051:15]
    node _io_cpu_perf_storeBufferEmptyAfterLoad_T_1 = and(s2_valid, s2_write) @[DCache.scala 1052:16]
    node _io_cpu_perf_storeBufferEmptyAfterLoad_T_2 = eq(s2_waw_hazard, UInt<1>("h00")) @[DCache.scala 1052:31]
    node _io_cpu_perf_storeBufferEmptyAfterLoad_T_3 = and(_io_cpu_perf_storeBufferEmptyAfterLoad_T_1, _io_cpu_perf_storeBufferEmptyAfterLoad_T_2) @[DCache.scala 1052:28]
    node _io_cpu_perf_storeBufferEmptyAfterLoad_T_4 = or(_io_cpu_perf_storeBufferEmptyAfterLoad_T_3, pstore1_held) @[DCache.scala 1052:47]
    node _io_cpu_perf_storeBufferEmptyAfterLoad_T_5 = or(_io_cpu_perf_storeBufferEmptyAfterLoad_T, _io_cpu_perf_storeBufferEmptyAfterLoad_T_4) @[DCache.scala 1051:28]
    node _io_cpu_perf_storeBufferEmptyAfterLoad_T_6 = or(_io_cpu_perf_storeBufferEmptyAfterLoad_T_5, pstore2_valid) @[DCache.scala 1052:64]
    node _io_cpu_perf_storeBufferEmptyAfterLoad_T_7 = eq(_io_cpu_perf_storeBufferEmptyAfterLoad_T_6, UInt<1>("h00")) @[DCache.scala 1050:44]
    io.cpu.perf.storeBufferEmptyAfterLoad <= _io_cpu_perf_storeBufferEmptyAfterLoad_T_7 @[DCache.scala 1050:41]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T = and(s1_valid, s1_write) @[DCache.scala 1055:15]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_1 = and(s2_valid, s2_write) @[DCache.scala 1056:15]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_2 = and(_io_cpu_perf_storeBufferEmptyAfterStore_T_1, pstore1_rmw) @[DCache.scala 1056:27]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_3 = or(_io_cpu_perf_storeBufferEmptyAfterStore_T, _io_cpu_perf_storeBufferEmptyAfterStore_T_2) @[DCache.scala 1055:28]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_4 = and(s2_valid, s2_write) @[DCache.scala 1057:16]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_5 = eq(s2_waw_hazard, UInt<1>("h00")) @[DCache.scala 1057:31]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_6 = and(_io_cpu_perf_storeBufferEmptyAfterStore_T_4, _io_cpu_perf_storeBufferEmptyAfterStore_T_5) @[DCache.scala 1057:28]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_7 = or(_io_cpu_perf_storeBufferEmptyAfterStore_T_6, pstore1_held) @[DCache.scala 1057:46]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_8 = and(_io_cpu_perf_storeBufferEmptyAfterStore_T_7, pstore2_valid) @[DCache.scala 1057:63]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_9 = or(_io_cpu_perf_storeBufferEmptyAfterStore_T_3, _io_cpu_perf_storeBufferEmptyAfterStore_T_8) @[DCache.scala 1056:43]
    node _io_cpu_perf_storeBufferEmptyAfterStore_T_10 = eq(_io_cpu_perf_storeBufferEmptyAfterStore_T_9, UInt<1>("h00")) @[DCache.scala 1054:45]
    io.cpu.perf.storeBufferEmptyAfterStore <= _io_cpu_perf_storeBufferEmptyAfterStore_T_10 @[DCache.scala 1054:42]
    node _io_cpu_perf_canAcceptStoreThenLoad_T = and(s2_valid, s2_write) @[DCache.scala 1059:16]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_1 = and(_io_cpu_perf_canAcceptStoreThenLoad_T, pstore1_rmw) @[DCache.scala 1059:28]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_2 = and(s1_valid, s1_write) @[DCache.scala 1059:57]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_3 = eq(s1_waw_hazard, UInt<1>("h00")) @[DCache.scala 1059:72]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_4 = and(_io_cpu_perf_canAcceptStoreThenLoad_T_2, _io_cpu_perf_canAcceptStoreThenLoad_T_3) @[DCache.scala 1059:69]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_5 = and(_io_cpu_perf_canAcceptStoreThenLoad_T_1, _io_cpu_perf_canAcceptStoreThenLoad_T_4) @[DCache.scala 1059:44]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_6 = and(pstore2_valid, pstore1_valid_likely) @[DCache.scala 1060:20]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_7 = and(s1_valid, s1_write) @[DCache.scala 1060:57]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_8 = and(_io_cpu_perf_canAcceptStoreThenLoad_T_6, _io_cpu_perf_canAcceptStoreThenLoad_T_7) @[DCache.scala 1060:44]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_9 = or(_io_cpu_perf_canAcceptStoreThenLoad_T_5, _io_cpu_perf_canAcceptStoreThenLoad_T_8) @[DCache.scala 1059:89]
    node _io_cpu_perf_canAcceptStoreThenLoad_T_10 = eq(_io_cpu_perf_canAcceptStoreThenLoad_T_9, UInt<1>("h00")) @[DCache.scala 1058:41]
    io.cpu.perf.canAcceptStoreThenLoad <= _io_cpu_perf_canAcceptStoreThenLoad_T_10 @[DCache.scala 1058:38]
    node _io_cpu_perf_canAcceptStoreThenRMW_T = eq(pstore2_valid, UInt<1>("h00")) @[DCache.scala 1061:78]
    node _io_cpu_perf_canAcceptStoreThenRMW_T_1 = and(io.cpu.perf.canAcceptStoreThenLoad, _io_cpu_perf_canAcceptStoreThenRMW_T) @[DCache.scala 1061:75]
    io.cpu.perf.canAcceptStoreThenRMW <= _io_cpu_perf_canAcceptStoreThenRMW_T_1 @[DCache.scala 1061:37]
    node _io_cpu_perf_canAcceptLoadThenLoad_T = and(s1_valid, s1_write) @[DCache.scala 1062:52]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_1 = eq(s1_req.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_2 = eq(s1_req.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_3 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_1, _io_cpu_perf_canAcceptLoadThenLoad_T_2) @[Consts.scala 81:41]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_4 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_5 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_3, _io_cpu_perf_canAcceptLoadThenLoad_T_4) @[Consts.scala 81:58]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_6 = eq(s1_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_7 = eq(s1_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_8 = eq(s1_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_9 = eq(s1_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_10 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_6, _io_cpu_perf_canAcceptLoadThenLoad_T_7) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_11 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_10, _io_cpu_perf_canAcceptLoadThenLoad_T_8) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_12 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_11, _io_cpu_perf_canAcceptLoadThenLoad_T_9) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_13 = eq(s1_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_14 = eq(s1_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_15 = eq(s1_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_16 = eq(s1_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_17 = eq(s1_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_18 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_13, _io_cpu_perf_canAcceptLoadThenLoad_T_14) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_19 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_18, _io_cpu_perf_canAcceptLoadThenLoad_T_15) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_20 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_19, _io_cpu_perf_canAcceptLoadThenLoad_T_16) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_21 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_20, _io_cpu_perf_canAcceptLoadThenLoad_T_17) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_22 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_12, _io_cpu_perf_canAcceptLoadThenLoad_T_21) @[Consts.scala 79:44]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_23 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_5, _io_cpu_perf_canAcceptLoadThenLoad_T_22) @[Consts.scala 81:75]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_24 = eq(s1_req.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_25 = eq(s1_req.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_26 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_24, _io_cpu_perf_canAcceptLoadThenLoad_T_25) @[Consts.scala 82:42]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_27 = eq(s1_req.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_28 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_26, _io_cpu_perf_canAcceptLoadThenLoad_T_27) @[Consts.scala 82:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_29 = eq(s1_req.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_30 = eq(s1_req.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_31 = eq(s1_req.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_32 = eq(s1_req.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_33 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_29, _io_cpu_perf_canAcceptLoadThenLoad_T_30) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_34 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_33, _io_cpu_perf_canAcceptLoadThenLoad_T_31) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_35 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_34, _io_cpu_perf_canAcceptLoadThenLoad_T_32) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_36 = eq(s1_req.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_37 = eq(s1_req.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_38 = eq(s1_req.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_39 = eq(s1_req.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_40 = eq(s1_req.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_41 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_36, _io_cpu_perf_canAcceptLoadThenLoad_T_37) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_42 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_41, _io_cpu_perf_canAcceptLoadThenLoad_T_38) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_43 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_42, _io_cpu_perf_canAcceptLoadThenLoad_T_39) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_44 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_43, _io_cpu_perf_canAcceptLoadThenLoad_T_40) @[package.scala 72:59]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_45 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_35, _io_cpu_perf_canAcceptLoadThenLoad_T_44) @[Consts.scala 79:44]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_46 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_28, _io_cpu_perf_canAcceptLoadThenLoad_T_45) @[Consts.scala 82:76]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_47 = eq(s1_req.cmd, UInt<5>("h011")) @[DCache.scala 1161:35]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_48 = lt(s1_req.size, UInt<1>("h00")) @[DCache.scala 1161:57]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_49 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_47, _io_cpu_perf_canAcceptLoadThenLoad_T_48) @[DCache.scala 1161:45]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_50 = and(_io_cpu_perf_canAcceptLoadThenLoad_T_46, _io_cpu_perf_canAcceptLoadThenLoad_T_49) @[DCache.scala 1161:23]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_51 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_23, _io_cpu_perf_canAcceptLoadThenLoad_T_50) @[DCache.scala 1160:21]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_52 = and(_io_cpu_perf_canAcceptLoadThenLoad_T, _io_cpu_perf_canAcceptLoadThenLoad_T_51) @[DCache.scala 1062:64]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_53 = and(s2_valid, s2_write) @[DCache.scala 1062:100]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_54 = eq(s2_waw_hazard, UInt<1>("h00")) @[DCache.scala 1062:115]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_55 = and(_io_cpu_perf_canAcceptLoadThenLoad_T_53, _io_cpu_perf_canAcceptLoadThenLoad_T_54) @[DCache.scala 1062:112]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_56 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_55, pstore1_held) @[DCache.scala 1062:130]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_57 = or(_io_cpu_perf_canAcceptLoadThenLoad_T_56, pstore2_valid) @[DCache.scala 1062:147]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_58 = and(_io_cpu_perf_canAcceptLoadThenLoad_T_52, _io_cpu_perf_canAcceptLoadThenLoad_T_57) @[DCache.scala 1062:86]
    node _io_cpu_perf_canAcceptLoadThenLoad_T_59 = eq(_io_cpu_perf_canAcceptLoadThenLoad_T_58, UInt<1>("h00")) @[DCache.scala 1062:40]
    io.cpu.perf.canAcceptLoadThenLoad <= _io_cpu_perf_canAcceptLoadThenLoad_T_59 @[DCache.scala 1062:37]
    reg refill_count : UInt<4>, gated_clock with : (reset => (reset, UInt<4>("h00"))) @[DCache.scala 1072:33]
    node _io_cpu_perf_blocked_near_end_of_refill_T = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    node _io_cpu_perf_blocked_near_end_of_refill_T_1 = and(_io_cpu_perf_blocked_near_end_of_refill_T, grantIsRefill) @[DCache.scala 1073:29]
    when _io_cpu_perf_blocked_near_end_of_refill_T_1 : @[DCache.scala 1073:47]
      node _io_cpu_perf_blocked_near_end_of_refill_refill_count_T = add(refill_count, UInt<1>("h01")) @[DCache.scala 1073:78]
      node _io_cpu_perf_blocked_near_end_of_refill_refill_count_T_1 = tail(_io_cpu_perf_blocked_near_end_of_refill_refill_count_T, 1) @[DCache.scala 1073:78]
      refill_count <= _io_cpu_perf_blocked_near_end_of_refill_refill_count_T_1 @[DCache.scala 1073:62]
      skip @[DCache.scala 1073:47]
    node near_end_of_refill = geq(refill_count, UInt<4>("h0e")) @[DCache.scala 1074:20]
    node _io_cpu_perf_blocked_T = eq(near_end_of_refill, UInt<1>("h00")) @[DCache.scala 1076:26]
    node _io_cpu_perf_blocked_T_1 = and(cached_grant_wait, _io_cpu_perf_blocked_T) @[DCache.scala 1076:23]
    io.cpu.perf.blocked <= _io_cpu_perf_blocked_T_1 @[DCache.scala 1063:23]
    node error_addr_lo = bits(metaArb.io.in[1].bits.addr, 13, 6) @[DCache.scala 1088:94]
    node _error_addr_T = cat(s2_meta_corrected_0.tag, error_addr_lo) @[Cat.scala 30:58]
    node _error_addr_T_1 = shr(s2_req.addr, 6) @[DCache.scala 1089:27]
    node _error_addr_T_2 = mux(metaArb.io.in[1].valid, _error_addr_T, _error_addr_T_1) @[DCache.scala 1088:10]
    node error_addr = shl(_error_addr_T_2, 6) @[DCache.scala 1089:38]
    node _io_errors_bus_valid_T = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    node _io_errors_bus_valid_T_1 = or(tl_out.d.bits.denied, tl_out.d.bits.corrupt) @[DCache.scala 1099:69]
    node _io_errors_bus_valid_T_2 = and(_io_errors_bus_valid_T, _io_errors_bus_valid_T_1) @[DCache.scala 1099:44]
    io.errors.bus.valid <= _io_errors_bus_valid_T_2 @[DCache.scala 1099:25]
    node _io_errors_bus_bits_T = shr(s2_req.addr, 6) @[DCache.scala 1100:58]
    node _io_errors_bus_bits_T_1 = shl(_io_errors_bus_bits_T, 6) @[DCache.scala 1100:68]
    node _io_errors_bus_bits_T_2 = mux(grantIsCached, _io_errors_bus_bits_T_1, UInt<1>("h00")) @[DCache.scala 1100:30]
    io.errors.bus.bits <= _io_errors_bus_bits_T_2 @[DCache.scala 1100:24]
    node _T_296 = and(io.errors.bus.valid, grantIsCached) @[DCache.scala 1102:45]
    node _T_297 = eq(grantIsCached, UInt<1>("h00")) @[DCache.scala 1103:35]
    node _T_298 = and(io.errors.bus.valid, _T_297) @[DCache.scala 1103:32]
    node _T_299 = eq(s2_valid_data_error, UInt<1>("h00")) @[DCache.scala 1108:20]
    node _T_300 = eq(s2_data_error_uncorrectable, UInt<1>("h00")) @[DCache.scala 1109:34]
    node _T_301 = and(s2_valid_data_error, _T_300) @[DCache.scala 1109:31]
    node _T_302 = and(s2_valid_data_error, s2_data_error_uncorrectable) @[DCache.scala 1110:31]
    node _T_303 = eq(s2_req.no_xcpt, UInt<1>("h00")) @[DCache.scala 1113:20]
    node _T_304 = and(_T_299, s2_req.no_xcpt) @[Property.scala 81:34]
    node _T_305 = and(_T_299, _T_303) @[Property.scala 81:34]
    node _T_306 = and(_T_301, s2_req.no_xcpt) @[Property.scala 81:34]
    node _T_307 = and(_T_301, _T_303) @[Property.scala 81:34]
    node _T_308 = and(_T_302, s2_req.no_xcpt) @[Property.scala 81:34]
    node _T_309 = and(_T_302, _T_303) @[Property.scala 81:34]
    
  module Frontend : 
    input gated_clock : Clock
    input reset : Reset
    output auto : {icache_master_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}, flip reset_vector_sink_in : UInt<32>}
    output io : {flip cpu : {might_request : UInt<1>, flip clock_enabled : UInt<1>, req : {valid : UInt<1>, bits : {pc : UInt<32>, speculative : UInt<1>}}, sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<32>, asid : UInt<1>}}, flip resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {btb : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, data : UInt<32>, mask : UInt<2>, xcpt : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, replay : UInt<1>}}, btb_update : {valid : UInt<1>, bits : {prediction : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, target : UInt<32>, taken : UInt<1>, isValid : UInt<1>, br_pc : UInt<32>, cfiType : UInt<2>}}, bht_update : {valid : UInt<1>, bits : {prediction : {history : UInt<8>, value : UInt<1>}, pc : UInt<32>, branch : UInt<1>, taken : UInt<1>, mispredict : UInt<1>}}, ras_update : {valid : UInt<1>, bits : {cfiType : UInt<2>, returnAddr : UInt<32>}}, flush_icache : UInt<1>, flip npc : UInt<32>, flip perf : {acquire : UInt<1>, tlbMiss : UInt<1>}}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {valid : UInt<1>, bits : {addr : UInt<20>}}}, flip resp : {valid : UInt<1>, bits : {ae : UInt<1>, pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<1>, fragmented_superpage : UInt<1>, homogeneous : UInt<1>}}, flip ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip customCSRs : {csrs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}}, errors : {bus : {valid : UInt<1>, bits : UInt<32>}}}
    
    gated_clock is invalid
    reset is invalid
    auto is invalid
    io is invalid
    inst icache of ICache @[Frontend.scala 62:26]
    icache.clock is invalid
    icache.reset is invalid
    icache.auto is invalid
    icache.io is invalid
    icache.clock <= gated_clock
    icache.reset <= reset
    wire io_reset_vector : UInt<32> @[Nodes.scala 1210:84]
    io_reset_vector is invalid @[Nodes.scala 1210:84]
    io_reset_vector <= auto.reset_vector_sink_in @[LazyModule.scala 309:16]
    auto.icache_master_out <- icache.auto.master_out @[LazyModule.scala 311:12]
    node _T = asUInt(reset) @[compatibility.scala 260:56]
    node _T_1 = or(_T, io.cpu.req.valid) @[Frontend.scala 84:28]
    inst fq of ShiftQueue @[Frontend.scala 84:57]
    fq.io is invalid
    fq.clock <= gated_clock
    fq.reset <= _T_1
    reg clock_en_reg : UInt<1>, gated_clock @[Frontend.scala 86:25]
    node clock_en = or(clock_en_reg, io.cpu.might_request) @[Frontend.scala 87:31]
    io.cpu.clock_enabled <= clock_en @[Frontend.scala 88:24]
    node _T_2 = or(io.cpu.req.valid, io.cpu.sfence.valid) @[Frontend.scala 89:29]
    node _T_3 = or(_T_2, io.cpu.flush_icache) @[Frontend.scala 89:52]
    node _T_4 = or(_T_3, io.cpu.bht_update.valid) @[Frontend.scala 89:75]
    node _T_5 = or(_T_4, io.cpu.btb_update.valid) @[Frontend.scala 89:102]
    node _T_6 = eq(_T_5, UInt<1>("h00")) @[Frontend.scala 89:10]
    node _T_7 = or(_T_6, io.cpu.might_request) @[Frontend.scala 89:130]
    node _T_8 = asUInt(reset) @[Frontend.scala 89:9]
    node _T_9 = or(_T_7, _T_8) @[Frontend.scala 89:9]
    node _T_10 = eq(_T_9, UInt<1>("h00")) @[Frontend.scala 89:9]
    when _T_10 : @[Frontend.scala 89:9]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at Frontend.scala:89 assert(!(io.cpu.req.valid || io.cpu.sfence.valid || io.cpu.flush_icache || io.cpu.bht_update.valid || io.cpu.btb_update.valid) || io.cpu.might_request)\n") @[Frontend.scala 89:9]
      stop(gated_clock, UInt<1>(1), 1) @[Frontend.scala 89:9]
      skip @[Frontend.scala 89:9]
    icache.clock <= gated_clock @[Frontend.scala 94:16]
    icache.io.clock_enabled <= clock_en @[Frontend.scala 95:27]
    inst tlb of TLB_1 @[Frontend.scala 98:19]
    tlb.io is invalid
    tlb.clock <= gated_clock
    tlb.reset <= reset
    reg s1_valid : UInt<1>, gated_clock @[Frontend.scala 100:21]
    reg s2_valid : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[Frontend.scala 101:25]
    node _s0_fq_has_space_T = bits(fq.io.mask, 2, 2) @[Frontend.scala 103:16]
    node _s0_fq_has_space_T_1 = eq(_s0_fq_has_space_T, UInt<1>("h00")) @[Frontend.scala 103:5]
    node _s0_fq_has_space_T_2 = bits(fq.io.mask, 3, 3) @[Frontend.scala 104:17]
    node _s0_fq_has_space_T_3 = eq(_s0_fq_has_space_T_2, UInt<1>("h00")) @[Frontend.scala 104:6]
    node _s0_fq_has_space_T_4 = eq(s1_valid, UInt<1>("h00")) @[Frontend.scala 104:45]
    node _s0_fq_has_space_T_5 = eq(s2_valid, UInt<1>("h00")) @[Frontend.scala 104:58]
    node _s0_fq_has_space_T_6 = or(_s0_fq_has_space_T_4, _s0_fq_has_space_T_5) @[Frontend.scala 104:55]
    node _s0_fq_has_space_T_7 = and(_s0_fq_has_space_T_3, _s0_fq_has_space_T_6) @[Frontend.scala 104:41]
    node _s0_fq_has_space_T_8 = or(_s0_fq_has_space_T_1, _s0_fq_has_space_T_7) @[Frontend.scala 103:40]
    node _s0_fq_has_space_T_9 = bits(fq.io.mask, 4, 4) @[Frontend.scala 105:17]
    node _s0_fq_has_space_T_10 = eq(_s0_fq_has_space_T_9, UInt<1>("h00")) @[Frontend.scala 105:6]
    node _s0_fq_has_space_T_11 = eq(s1_valid, UInt<1>("h00")) @[Frontend.scala 105:45]
    node _s0_fq_has_space_T_12 = eq(s2_valid, UInt<1>("h00")) @[Frontend.scala 105:58]
    node _s0_fq_has_space_T_13 = and(_s0_fq_has_space_T_11, _s0_fq_has_space_T_12) @[Frontend.scala 105:55]
    node _s0_fq_has_space_T_14 = and(_s0_fq_has_space_T_10, _s0_fq_has_space_T_13) @[Frontend.scala 105:41]
    node s0_fq_has_space = or(_s0_fq_has_space_T_8, _s0_fq_has_space_T_14) @[Frontend.scala 104:70]
    node s0_valid = or(io.cpu.req.valid, s0_fq_has_space) @[Frontend.scala 106:35]
    s1_valid <= s0_valid @[Frontend.scala 107:12]
    reg s1_pc : UInt<32>, gated_clock @[Frontend.scala 108:18]
    reg s1_speculative : UInt<1>, gated_clock @[Frontend.scala 109:27]
    node _s2_pc_T = not(io_reset_vector) @[Frontend.scala 341:29]
    node _s2_pc_T_1 = or(_s2_pc_T, UInt<1>("h01")) @[Frontend.scala 341:33]
    node _s2_pc_T_2 = not(_s2_pc_T_1) @[Frontend.scala 341:27]
    reg s2_pc : UInt<32>, gated_clock with : (reset => (reset, _s2_pc_T_2)) @[Frontend.scala 110:22]
    reg s2_btb_resp_bits : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, gated_clock @[Frontend.scala 112:29]
    node s2_btb_taken = and(UInt<1>("h00"), s2_btb_resp_bits.taken) @[Frontend.scala 113:40]
    reg s2_tlb_resp : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, must_alloc : UInt<1>, prefetchable : UInt<1>}, gated_clock @[Frontend.scala 114:24]
    node s2_xcpt = or(s2_tlb_resp.ae.inst, s2_tlb_resp.pf.inst) @[Frontend.scala 115:37]
    reg s2_speculative : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[Frontend.scala 116:27]
    reg s2_partial_insn_valid : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[Frontend.scala 117:38]
    reg s2_partial_insn : UInt<16>, gated_clock @[Frontend.scala 118:28]
    reg wrong_path : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h00"))) @[Frontend.scala 119:27]
    node _s1_base_pc_T = not(s1_pc) @[Frontend.scala 121:22]
    node _s1_base_pc_T_1 = or(_s1_base_pc_T, UInt<2>("h03")) @[Frontend.scala 121:29]
    node s1_base_pc = not(_s1_base_pc_T_1) @[Frontend.scala 121:20]
    node _ntpc_T = add(s1_base_pc, UInt<3>("h04")) @[Frontend.scala 122:25]
    node ntpc = tail(_ntpc_T, 1) @[Frontend.scala 122:25]
    wire predicted_npc : UInt
    predicted_npc is invalid
    predicted_npc <= ntpc
    wire predicted_taken : UInt<1>
    predicted_taken is invalid
    predicted_taken <= UInt<1>("h00")
    wire s2_replay : UInt<1> @[Frontend.scala 126:23]
    s2_replay is invalid @[Frontend.scala 126:23]
    node _s2_replay_T = and(fq.io.enq.ready, fq.io.enq.valid) @[Decoupled.scala 40:37]
    node _s2_replay_T_1 = eq(_s2_replay_T, UInt<1>("h00")) @[Frontend.scala 127:29]
    node _s2_replay_T_2 = and(s2_valid, _s2_replay_T_1) @[Frontend.scala 127:26]
    node _s2_replay_T_3 = eq(s0_valid, UInt<1>("h00")) @[Frontend.scala 127:72]
    node _s2_replay_T_4 = and(s2_replay, _s2_replay_T_3) @[Frontend.scala 127:69]
    reg s2_replay_REG : UInt<1>, gated_clock with : (reset => (reset, UInt<1>("h01"))) @[Frontend.scala 127:58]
    s2_replay_REG <= _s2_replay_T_4 @[Frontend.scala 127:58]
    node _s2_replay_T_5 = or(_s2_replay_T_2, s2_replay_REG) @[Frontend.scala 127:48]
    s2_replay <= _s2_replay_T_5 @[Frontend.scala 127:13]
    node npc = mux(s2_replay, s2_pc, predicted_npc) @[Frontend.scala 128:16]
    s1_pc <= io.cpu.npc @[Frontend.scala 130:9]
    node _s0_speculative_T = eq(s2_speculative, UInt<1>("h00")) @[Frontend.scala 134:56]
    node _s0_speculative_T_1 = and(s2_valid, _s0_speculative_T) @[Frontend.scala 134:53]
    node _s0_speculative_T_2 = or(s1_speculative, _s0_speculative_T_1) @[Frontend.scala 134:41]
    node s0_speculative = or(_s0_speculative_T_2, predicted_taken) @[Frontend.scala 134:72]
    node _s1_speculative_T = mux(s2_replay, s2_speculative, s0_speculative) @[Frontend.scala 136:75]
    node _s1_speculative_T_1 = mux(io.cpu.req.valid, io.cpu.req.bits.speculative, _s1_speculative_T) @[Frontend.scala 136:24]
    s1_speculative <= _s1_speculative_T_1 @[Frontend.scala 136:18]
    wire s2_redirect : UInt<1>
    s2_redirect is invalid
    s2_redirect <= io.cpu.req.valid
    s2_valid <= UInt<1>("h00") @[Frontend.scala 139:12]
    node _T_11 = eq(s2_replay, UInt<1>("h00")) @[Frontend.scala 140:9]
    when _T_11 : @[Frontend.scala 140:21]
      node _s2_valid_T = eq(s2_redirect, UInt<1>("h00")) @[Frontend.scala 141:17]
      s2_valid <= _s2_valid_T @[Frontend.scala 141:14]
      s2_pc <= s1_pc @[Frontend.scala 142:11]
      s2_speculative <= s1_speculative @[Frontend.scala 143:20]
      s2_tlb_resp <- tlb.io.resp @[Frontend.scala 144:17]
      skip @[Frontend.scala 140:21]
    io.ptw <- tlb.io.ptw @[Frontend.scala 147:10]
    node _tlb_io_req_valid_T = eq(s2_replay, UInt<1>("h00")) @[Frontend.scala 148:35]
    node _tlb_io_req_valid_T_1 = and(s1_valid, _tlb_io_req_valid_T) @[Frontend.scala 148:32]
    tlb.io.req.valid <= _tlb_io_req_valid_T_1 @[Frontend.scala 148:20]
    tlb.io.req.bits.vaddr <= s1_pc @[Frontend.scala 149:25]
    tlb.io.req.bits.passthrough <= UInt<1>("h00") @[Frontend.scala 150:31]
    tlb.io.req.bits.size <= UInt<2>("h02") @[Frontend.scala 151:24]
    tlb.io.sfence <- io.cpu.sfence @[Frontend.scala 152:17]
    node _tlb_io_kill_T = eq(s2_valid, UInt<1>("h00")) @[Frontend.scala 153:18]
    tlb.io.kill <= _tlb_io_kill_T @[Frontend.scala 153:15]
    icache.io.req.valid <= s0_valid @[Frontend.scala 155:23]
    icache.io.req.bits.addr <= io.cpu.npc @[Frontend.scala 156:27]
    icache.io.invalidate <= io.cpu.flush_icache @[Frontend.scala 157:24]
    icache.io.s1_paddr <= tlb.io.resp.paddr @[Frontend.scala 158:22]
    icache.io.s2_vaddr <= s2_pc @[Frontend.scala 159:22]
    node _icache_io_s1_kill_T = or(s2_redirect, tlb.io.resp.miss) @[Frontend.scala 160:36]
    node _icache_io_s1_kill_T_1 = or(_icache_io_s1_kill_T, s2_replay) @[Frontend.scala 160:56]
    icache.io.s1_kill <= _icache_io_s1_kill_T_1 @[Frontend.scala 160:21]
    node _s2_can_speculatively_refill_T = bits(io.ptw.customCSRs.csrs[0].value, 3, 3) @[CustomCSRs.scala 40:69]
    node _s2_can_speculatively_refill_T_1 = eq(_s2_can_speculatively_refill_T, UInt<1>("h00")) @[Frontend.scala 161:62]
    node s2_can_speculatively_refill = and(s2_tlb_resp.cacheable, _s2_can_speculatively_refill_T_1) @[Frontend.scala 161:59]
    node _icache_io_s2_kill_T = eq(s2_can_speculatively_refill, UInt<1>("h00")) @[Frontend.scala 162:42]
    node _icache_io_s2_kill_T_1 = and(s2_speculative, _icache_io_s2_kill_T) @[Frontend.scala 162:39]
    node _icache_io_s2_kill_T_2 = or(_icache_io_s2_kill_T_1, s2_xcpt) @[Frontend.scala 162:71]
    icache.io.s2_kill <= _icache_io_s2_kill_T_2 @[Frontend.scala 162:21]
    node _icache_io_s2_prefetch_T = bits(io.ptw.customCSRs.csrs[0].value, 17, 17) @[RocketCore.scala 95:60]
    node _icache_io_s2_prefetch_T_1 = eq(_icache_io_s2_prefetch_T, UInt<1>("h00")) @[Frontend.scala 163:56]
    node _icache_io_s2_prefetch_T_2 = and(s2_tlb_resp.prefetchable, _icache_io_s2_prefetch_T_1) @[Frontend.scala 163:53]
    icache.io.s2_prefetch <= _icache_io_s2_prefetch_T_2 @[Frontend.scala 163:25]
    reg fq_io_enq_valid_REG : UInt<1>, gated_clock @[Frontend.scala 165:29]
    fq_io_enq_valid_REG <= s1_valid @[Frontend.scala 165:29]
    node _fq_io_enq_valid_T = and(fq_io_enq_valid_REG, s2_valid) @[Frontend.scala 165:40]
    node _fq_io_enq_valid_T_1 = eq(s2_tlb_resp.miss, UInt<1>("h00")) @[Frontend.scala 165:80]
    node _fq_io_enq_valid_T_2 = and(_fq_io_enq_valid_T_1, icache.io.s2_kill) @[Frontend.scala 165:98]
    node _fq_io_enq_valid_T_3 = or(icache.io.resp.valid, _fq_io_enq_valid_T_2) @[Frontend.scala 165:77]
    node _fq_io_enq_valid_T_4 = and(_fq_io_enq_valid_T, _fq_io_enq_valid_T_3) @[Frontend.scala 165:52]
    fq.io.enq.valid <= _fq_io_enq_valid_T_4 @[Frontend.scala 165:19]
    fq.io.enq.bits.pc <= s2_pc @[Frontend.scala 166:21]
    node _io_cpu_npc_T = mux(io.cpu.req.valid, io.cpu.req.bits.pc, npc) @[Frontend.scala 167:28]
    node _io_cpu_npc_T_1 = not(_io_cpu_npc_T) @[Frontend.scala 341:29]
    node _io_cpu_npc_T_2 = or(_io_cpu_npc_T_1, UInt<1>("h01")) @[Frontend.scala 341:33]
    node _io_cpu_npc_T_3 = not(_io_cpu_npc_T_2) @[Frontend.scala 341:27]
    io.cpu.npc <= _io_cpu_npc_T_3 @[Frontend.scala 167:14]
    fq.io.enq.bits.data <= icache.io.resp.bits.data @[Frontend.scala 169:23]
    node _fq_io_enq_bits_mask_T = bits(s2_pc, 1, 1) @[package.scala 154:13]
    node _fq_io_enq_bits_mask_T_1 = dshl(UInt<2>("h03"), _fq_io_enq_bits_mask_T) @[Frontend.scala 170:52]
    fq.io.enq.bits.mask <= _fq_io_enq_bits_mask_T_1 @[Frontend.scala 170:23]
    node _fq_io_enq_bits_replay_T = eq(icache.io.resp.valid, UInt<1>("h00")) @[Frontend.scala 171:79]
    node _fq_io_enq_bits_replay_T_1 = and(icache.io.s2_kill, _fq_io_enq_bits_replay_T) @[Frontend.scala 171:76]
    node _fq_io_enq_bits_replay_T_2 = eq(s2_xcpt, UInt<1>("h00")) @[Frontend.scala 171:104]
    node _fq_io_enq_bits_replay_T_3 = and(_fq_io_enq_bits_replay_T_1, _fq_io_enq_bits_replay_T_2) @[Frontend.scala 171:101]
    node _fq_io_enq_bits_replay_T_4 = or(icache.io.resp.bits.replay, _fq_io_enq_bits_replay_T_3) @[Frontend.scala 171:55]
    fq.io.enq.bits.replay <= _fq_io_enq_bits_replay_T_4 @[Frontend.scala 171:25]
    fq.io.enq.bits.btb <- s2_btb_resp_bits @[Frontend.scala 172:22]
    fq.io.enq.bits.btb.taken <= s2_btb_taken @[Frontend.scala 173:28]
    fq.io.enq.bits.xcpt <- s2_tlb_resp @[Frontend.scala 174:23]
    node _T_12 = bits(io.ptw.customCSRs.csrs[0].value, 3, 3) @[CustomCSRs.scala 40:69]
    node _T_13 = and(s2_speculative, _T_12) @[Frontend.scala 175:27]
    node _T_14 = eq(icache.io.s2_kill, UInt<1>("h00")) @[Frontend.scala 175:113]
    node _T_15 = and(_T_13, _T_14) @[Frontend.scala 175:110]
    node _T_16 = eq(_T_15, UInt<1>("h00")) @[Frontend.scala 175:10]
    node _T_17 = asUInt(reset) @[Frontend.scala 175:9]
    node _T_18 = or(_T_16, _T_17) @[Frontend.scala 175:9]
    node _T_19 = eq(_T_18, UInt<1>("h00")) @[Frontend.scala 175:9]
    when _T_19 : @[Frontend.scala 175:9]
      printf(gated_clock, UInt<1>(1), "Assertion failed\n    at Frontend.scala:175 assert(!(s2_speculative && io.ptw.customCSRs.asInstanceOf[RocketCustomCSRs].disableSpeculativeICacheRefill && !icache.io.s2_kill))\n") @[Frontend.scala 175:9]
      stop(gated_clock, UInt<1>(1), 1) @[Frontend.scala 175:9]
      skip @[Frontend.scala 175:9]
    node _T_20 = and(icache.io.resp.valid, icache.io.resp.bits.ae) @[Frontend.scala 176:30]
    when _T_20 : @[Frontend.scala 176:57]
      fq.io.enq.bits.xcpt.ae.inst <= UInt<1>("h01") @[Frontend.scala 176:87]
      skip @[Frontend.scala 176:57]
    io.cpu.resp <- fq.io.deq @[Frontend.scala 325:15]
    io.cpu.perf <- icache.io.perf @[Frontend.scala 328:15]
    node _io_cpu_perf_tlbMiss_T = and(io.ptw.req.ready, io.ptw.req.valid) @[Decoupled.scala 40:37]
    io.cpu.perf.tlbMiss <= _io_cpu_perf_tlbMiss_T @[Frontend.scala 329:23]
    io.errors <- icache.io.errors @[Frontend.scala 330:13]
    node _clock_en_reg_T = or(UInt<1>("h01"), io.cpu.might_request) @[Frontend.scala 333:43]
    node _clock_en_reg_T_1 = or(_clock_en_reg_T, icache.io.keep_clock_enabled) @[Frontend.scala 334:26]
    node _clock_en_reg_T_2 = or(_clock_en_reg_T_1, s1_valid) @[Frontend.scala 335:34]
    node _clock_en_reg_T_3 = or(_clock_en_reg_T_2, s2_valid) @[Frontend.scala 336:14]
    node _clock_en_reg_T_4 = eq(tlb.io.req.ready, UInt<1>("h00")) @[Frontend.scala 337:5]
    node _clock_en_reg_T_5 = or(_clock_en_reg_T_3, _clock_en_reg_T_4) @[Frontend.scala 336:26]
    node _clock_en_reg_T_6 = bits(fq.io.mask, 4, 4) @[Frontend.scala 338:16]
    node _clock_en_reg_T_7 = eq(_clock_en_reg_T_6, UInt<1>("h00")) @[Frontend.scala 338:5]
    node _clock_en_reg_T_8 = or(_clock_en_reg_T_5, _clock_en_reg_T_7) @[Frontend.scala 337:23]
    clock_en_reg <= _clock_en_reg_T_8 @[Frontend.scala 333:16]
    
  module TLFragmenter_7 : 
    input clock : Clock
    input reset : Reset
    output auto : {}
    
    clock is invalid
    reset is invalid
    auto is invalid
    
  module ScratchpadSlavePort : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<9>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<9>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}}
    output io : {dmem : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}}, s1_kill : UInt<1>, s1_data : {data : UInt<32>, mask : UInt<4>}, flip s2_nack : UInt<1>, flip s2_nack_cause_raw : UInt<1>, s2_kill : UInt<1>, flip s2_uncached : UInt<1>, flip s2_paddr : UInt<32>, flip resp : {valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, data : UInt<32>, mask : UInt<4>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<32>, data_raw : UInt<32>, store_data : UInt<32>}}, flip replay_next : UInt<1>, flip s2_xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>}}, flip ordered : UInt<1>, flip perf : {acquire : UInt<1>, release : UInt<1>, grant : UInt<1>, tlbMiss : UInt<1>, blocked : UInt<1>, canAcceptStoreThenLoad : UInt<1>, canAcceptStoreThenRMW : UInt<1>, canAcceptLoadThenLoad : UInt<1>, storeBufferEmptyAfterLoad : UInt<1>, storeBufferEmptyAfterStore : UInt<1>}, keep_clock_enabled : UInt<1>, flip clock_enabled : UInt<1>}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    io is invalid
    wire tl_in : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<9>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<9>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1210:84]
    tl_in is invalid @[Nodes.scala 1210:84]
    tl_in <- auto.in @[LazyModule.scala 309:16]
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[ScratchpadSlavePort.scala 45:20]
    wire dmem_req_valid : UInt<1> @[ScratchpadSlavePort.scala 46:30]
    dmem_req_valid is invalid @[ScratchpadSlavePort.scala 46:30]
    node _T = eq(state, UInt<3>("h01")) @[ScratchpadSlavePort.scala 47:17]
    when _T : @[ScratchpadSlavePort.scala 47:30]
      state <= UInt<3>("h02") @[ScratchpadSlavePort.scala 47:38]
      skip @[ScratchpadSlavePort.scala 47:30]
    when io.dmem.resp.valid : @[ScratchpadSlavePort.scala 48:31]
      state <= UInt<3>("h04") @[ScratchpadSlavePort.scala 48:39]
      skip @[ScratchpadSlavePort.scala 48:31]
    node _T_1 = and(tl_in.d.ready, tl_in.d.valid) @[Decoupled.scala 40:37]
    when _T_1 : @[ScratchpadSlavePort.scala 49:27]
      state <= UInt<3>("h00") @[ScratchpadSlavePort.scala 49:35]
      skip @[ScratchpadSlavePort.scala 49:27]
    when io.dmem.s2_nack : @[ScratchpadSlavePort.scala 50:28]
      state <= UInt<3>("h03") @[ScratchpadSlavePort.scala 50:36]
      skip @[ScratchpadSlavePort.scala 50:28]
    node _T_2 = and(dmem_req_valid, io.dmem.req.ready) @[ScratchpadSlavePort.scala 51:26]
    when _T_2 : @[ScratchpadSlavePort.scala 51:48]
      state <= UInt<3>("h01") @[ScratchpadSlavePort.scala 51:56]
      skip @[ScratchpadSlavePort.scala 51:48]
    reg acq : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<9>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, clock @[ScratchpadSlavePort.scala 53:18]
    node _T_3 = and(tl_in.a.ready, tl_in.a.valid) @[Decoupled.scala 40:37]
    when _T_3 : @[ScratchpadSlavePort.scala 54:27]
      acq <- tl_in.a.bits @[ScratchpadSlavePort.scala 54:33]
      skip @[ScratchpadSlavePort.scala 54:27]
    node _ready_likely_T = eq(state, UInt<3>("h00")) @[ScratchpadSlavePort.scala 85:30]
    node _ready_likely_T_1 = eq(state, UInt<3>("h02")) @[ScratchpadSlavePort.scala 85:51]
    node ready_likely = or(_ready_likely_T, _ready_likely_T_1) @[ScratchpadSlavePort.scala 85:42]
    node _ready_T = eq(state, UInt<3>("h00")) @[ScratchpadSlavePort.scala 86:23]
    node _ready_T_1 = eq(state, UInt<3>("h02")) @[ScratchpadSlavePort.scala 86:44]
    node _ready_T_2 = and(_ready_T_1, io.dmem.resp.valid) @[ScratchpadSlavePort.scala 86:56]
    node _ready_T_3 = and(_ready_T_2, tl_in.d.ready) @[ScratchpadSlavePort.scala 86:78]
    node ready = or(_ready_T, _ready_T_3) @[ScratchpadSlavePort.scala 86:35]
    node _dmem_req_valid_T = and(tl_in.a.valid, ready) @[ScratchpadSlavePort.scala 87:38]
    node _dmem_req_valid_T_1 = eq(state, UInt<3>("h03")) @[ScratchpadSlavePort.scala 87:57]
    node _dmem_req_valid_T_2 = or(_dmem_req_valid_T, _dmem_req_valid_T_1) @[ScratchpadSlavePort.scala 87:48]
    dmem_req_valid <= _dmem_req_valid_T_2 @[ScratchpadSlavePort.scala 87:20]
    node _dmem_req_valid_likely_T = and(tl_in.a.valid, ready_likely) @[ScratchpadSlavePort.scala 88:48]
    node _dmem_req_valid_likely_T_1 = eq(state, UInt<3>("h03")) @[ScratchpadSlavePort.scala 88:74]
    node dmem_req_valid_likely = or(_dmem_req_valid_likely_T, _dmem_req_valid_likely_T_1) @[ScratchpadSlavePort.scala 88:65]
    io.dmem.req.valid <= dmem_req_valid_likely @[ScratchpadSlavePort.scala 90:23]
    node _bundleIn_0_a_ready_T = and(io.dmem.req.ready, ready) @[ScratchpadSlavePort.scala 91:40]
    tl_in.a.ready <= _bundleIn_0_a_ready_T @[ScratchpadSlavePort.scala 91:19]
    node _io_dmem_req_bits_T = eq(state, UInt<3>("h03")) @[ScratchpadSlavePort.scala 92:48]
    node _io_dmem_req_bits_T_1 = mux(_io_dmem_req_bits_T, acq, tl_in.a.bits) @[ScratchpadSlavePort.scala 92:41]
    wire io_dmem_req_bits_req : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>} @[ScratchpadSlavePort.scala 57:21]
    io_dmem_req_bits_req is invalid @[ScratchpadSlavePort.scala 57:21]
    wire _io_dmem_req_bits_req_cmd_WIRE : UInt<1> @[ScratchpadSlavePort.scala 58:42]
    _io_dmem_req_bits_req_cmd_WIRE is invalid @[ScratchpadSlavePort.scala 58:42]
    wire _io_dmem_req_bits_req_cmd_WIRE_1 : UInt<1> @[ScratchpadSlavePort.scala 61:61]
    _io_dmem_req_bits_req_cmd_WIRE_1 is invalid @[ScratchpadSlavePort.scala 61:61]
    node _io_dmem_req_bits_req_cmd_T = eq(UInt<3>("h00"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_1 = mux(_io_dmem_req_bits_req_cmd_T, UInt<4>("h0c"), _io_dmem_req_bits_req_cmd_WIRE_1) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_2 = eq(UInt<3>("h01"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_3 = mux(_io_dmem_req_bits_req_cmd_T_2, UInt<4>("h0d"), _io_dmem_req_bits_req_cmd_T_1) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_4 = eq(UInt<3>("h02"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_5 = mux(_io_dmem_req_bits_req_cmd_T_4, UInt<4>("h0e"), _io_dmem_req_bits_req_cmd_T_3) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_6 = eq(UInt<3>("h03"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_7 = mux(_io_dmem_req_bits_req_cmd_T_6, UInt<4>("h0f"), _io_dmem_req_bits_req_cmd_T_5) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_8 = eq(UInt<3>("h04"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_9 = mux(_io_dmem_req_bits_req_cmd_T_8, UInt<4>("h08"), _io_dmem_req_bits_req_cmd_T_7) @[Mux.scala 80:57]
    wire _io_dmem_req_bits_req_cmd_WIRE_2 : UInt<1> @[ScratchpadSlavePort.scala 67:61]
    _io_dmem_req_bits_req_cmd_WIRE_2 is invalid @[ScratchpadSlavePort.scala 67:61]
    node _io_dmem_req_bits_req_cmd_T_10 = eq(UInt<3>("h00"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_11 = mux(_io_dmem_req_bits_req_cmd_T_10, UInt<4>("h09"), _io_dmem_req_bits_req_cmd_WIRE_2) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_12 = eq(UInt<3>("h01"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_13 = mux(_io_dmem_req_bits_req_cmd_T_12, UInt<4>("h0a"), _io_dmem_req_bits_req_cmd_T_11) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_14 = eq(UInt<3>("h02"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_15 = mux(_io_dmem_req_bits_req_cmd_T_14, UInt<4>("h0b"), _io_dmem_req_bits_req_cmd_T_13) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_16 = eq(UInt<3>("h03"), _io_dmem_req_bits_T_1.param) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_17 = mux(_io_dmem_req_bits_req_cmd_T_16, UInt<3>("h04"), _io_dmem_req_bits_req_cmd_T_15) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_18 = eq(UInt<1>("h00"), _io_dmem_req_bits_T_1.opcode) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_19 = mux(_io_dmem_req_bits_req_cmd_T_18, UInt<1>("h01"), _io_dmem_req_bits_req_cmd_WIRE) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_20 = eq(UInt<1>("h01"), _io_dmem_req_bits_T_1.opcode) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_21 = mux(_io_dmem_req_bits_req_cmd_T_20, UInt<5>("h011"), _io_dmem_req_bits_req_cmd_T_19) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_22 = eq(UInt<2>("h02"), _io_dmem_req_bits_T_1.opcode) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_23 = mux(_io_dmem_req_bits_req_cmd_T_22, _io_dmem_req_bits_req_cmd_T_9, _io_dmem_req_bits_req_cmd_T_21) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_24 = eq(UInt<2>("h03"), _io_dmem_req_bits_T_1.opcode) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_25 = mux(_io_dmem_req_bits_req_cmd_T_24, _io_dmem_req_bits_req_cmd_T_17, _io_dmem_req_bits_req_cmd_T_23) @[Mux.scala 80:57]
    node _io_dmem_req_bits_req_cmd_T_26 = eq(UInt<3>("h04"), _io_dmem_req_bits_T_1.opcode) @[Mux.scala 80:60]
    node _io_dmem_req_bits_req_cmd_T_27 = mux(_io_dmem_req_bits_req_cmd_T_26, UInt<1>("h00"), _io_dmem_req_bits_req_cmd_T_25) @[Mux.scala 80:57]
    io_dmem_req_bits_req.cmd <= _io_dmem_req_bits_req_cmd_T_27 @[ScratchpadSlavePort.scala 58:15]
    io_dmem_req_bits_req.size <= _io_dmem_req_bits_T_1.size @[ScratchpadSlavePort.scala 73:16]
    io_dmem_req_bits_req.signed <= UInt<1>("h00") @[ScratchpadSlavePort.scala 74:18]
    io_dmem_req_bits_req.addr <= _io_dmem_req_bits_T_1.address @[ScratchpadSlavePort.scala 75:16]
    io_dmem_req_bits_req.tag <= UInt<1>("h00") @[ScratchpadSlavePort.scala 76:15]
    io_dmem_req_bits_req.phys <= UInt<1>("h01") @[ScratchpadSlavePort.scala 77:16]
    io_dmem_req_bits_req.no_xcpt <= UInt<1>("h01") @[ScratchpadSlavePort.scala 78:19]
    io.dmem.req.bits <- io_dmem_req_bits_req @[ScratchpadSlavePort.scala 92:22]
    io.dmem.s1_data.data <= acq.data @[ScratchpadSlavePort.scala 93:26]
    io.dmem.s1_data.mask <= acq.mask @[ScratchpadSlavePort.scala 94:26]
    node _io_dmem_s1_kill_T = neq(state, UInt<3>("h01")) @[ScratchpadSlavePort.scala 95:30]
    io.dmem.s1_kill <= _io_dmem_s1_kill_T @[ScratchpadSlavePort.scala 95:21]
    io.dmem.s2_kill <= UInt<1>("h00") @[ScratchpadSlavePort.scala 96:21]
    node _bundleIn_0_d_valid_T = eq(state, UInt<3>("h04")) @[ScratchpadSlavePort.scala 98:50]
    node _bundleIn_0_d_valid_T_1 = or(io.dmem.resp.valid, _bundleIn_0_d_valid_T) @[ScratchpadSlavePort.scala 98:41]
    tl_in.d.valid <= _bundleIn_0_d_valid_T_1 @[ScratchpadSlavePort.scala 98:19]
    node _bundleIn_0_d_bits_T = eq(acq.opcode, UInt<1>("h00")) @[package.scala 15:47]
    node _bundleIn_0_d_bits_T_1 = eq(acq.opcode, UInt<1>("h01")) @[package.scala 15:47]
    node _bundleIn_0_d_bits_T_2 = or(_bundleIn_0_d_bits_T, _bundleIn_0_d_bits_T_1) @[package.scala 72:59]
    wire bundleIn_0_d_bits_d : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<9>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 755:17]
    bundleIn_0_d_bits_d is invalid @[Edges.scala 755:17]
    bundleIn_0_d_bits_d.opcode <= UInt<1>("h00") @[Edges.scala 756:15]
    bundleIn_0_d_bits_d.param <= UInt<1>("h00") @[Edges.scala 757:15]
    bundleIn_0_d_bits_d.size <= acq.size @[Edges.scala 758:15]
    bundleIn_0_d_bits_d.source <= acq.source @[Edges.scala 759:15]
    bundleIn_0_d_bits_d.sink <= UInt<1>("h00") @[Edges.scala 760:15]
    bundleIn_0_d_bits_d.denied <= UInt<1>("h00") @[Edges.scala 761:15]
    bundleIn_0_d_bits_d.data <= UInt<1>("h00") @[Edges.scala 762:15]
    bundleIn_0_d_bits_d.corrupt <= UInt<1>("h00") @[Edges.scala 763:15]
    wire bundleIn_0_d_bits_d_1 : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<9>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 771:17]
    bundleIn_0_d_bits_d_1 is invalid @[Edges.scala 771:17]
    bundleIn_0_d_bits_d_1.opcode <= UInt<1>("h01") @[Edges.scala 772:15]
    bundleIn_0_d_bits_d_1.param <= UInt<1>("h00") @[Edges.scala 773:15]
    bundleIn_0_d_bits_d_1.size <= acq.size @[Edges.scala 774:15]
    bundleIn_0_d_bits_d_1.source <= acq.source @[Edges.scala 775:15]
    bundleIn_0_d_bits_d_1.sink <= UInt<1>("h00") @[Edges.scala 776:15]
    bundleIn_0_d_bits_d_1.denied <= UInt<1>("h00") @[Edges.scala 777:15]
    bundleIn_0_d_bits_d_1.data <= UInt<1>("h00") @[Edges.scala 778:15]
    bundleIn_0_d_bits_d_1.corrupt <= UInt<1>("h00") @[Edges.scala 779:15]
    node _bundleIn_0_d_bits_T_3 = mux(_bundleIn_0_d_bits_T_2, bundleIn_0_d_bits_d, bundleIn_0_d_bits_d_1) @[ScratchpadSlavePort.scala 99:24]
    tl_in.d.bits <- _bundleIn_0_d_bits_T_3 @[ScratchpadSlavePort.scala 99:18]
    node _bundleIn_0_d_bits_data_T = eq(state, UInt<3>("h02")) @[ScratchpadSlavePort.scala 102:70]
    reg bundleIn_0_d_bits_data_r : UInt<32>, clock @[Reg.scala 15:16]
    when _bundleIn_0_d_bits_data_T : @[Reg.scala 16:19]
      bundleIn_0_d_bits_data_r <= io.dmem.resp.bits.data_raw @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _bundleIn_0_d_bits_data_T_1 = mux(_bundleIn_0_d_bits_data_T, io.dmem.resp.bits.data_raw, bundleIn_0_d_bits_data_r) @[package.scala 79:42]
    tl_in.d.bits.data <= _bundleIn_0_d_bits_data_T_1 @[ScratchpadSlavePort.scala 102:23]
    wire _WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<9>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _WIRE is invalid @[Bundles.scala 256:54]
    _WIRE.valid <= UInt<1>("h00") @[ScratchpadSlavePort.scala 105:19]
    wire _WIRE_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<9>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _WIRE_1 is invalid @[Bundles.scala 257:54]
    _WIRE_1.ready <= UInt<1>("h01") @[ScratchpadSlavePort.scala 106:19]
    wire _WIRE_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_2 is invalid @[Bundles.scala 259:54]
    _WIRE_2.ready <= UInt<1>("h01") @[ScratchpadSlavePort.scala 107:19]
    
  module TLFragmenter_8 : 
    input clock : Clock
    input reset : Reset
    output auto : {flip in : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}, out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<9>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<9>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}}
    
    clock is invalid
    reset is invalid
    auto is invalid
    wire bundleIn_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1210:84]
    bundleIn_0 is invalid @[Nodes.scala 1210:84]
    wire bundleOut_0 : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<9>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<9>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1207:84]
    bundleOut_0 is invalid @[Nodes.scala 1207:84]
    auto.out <- bundleOut_0 @[LazyModule.scala 311:12]
    bundleIn_0 <- auto.in @[LazyModule.scala 309:16]
    reg acknum : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Fragmenter.scala 189:29]
    reg dOrig : UInt, clock @[Fragmenter.scala 190:24]
    reg dToggle : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Fragmenter.scala 191:30]
    node dFragnum = bits(bundleOut_0.d.bits.source, 3, 0) @[Fragmenter.scala 192:41]
    node dFirst = eq(acknum, UInt<1>("h00")) @[Fragmenter.scala 193:29]
    node dLast = eq(dFragnum, UInt<1>("h00")) @[Fragmenter.scala 194:30]
    node dsizeOH_shiftAmount = bits(bundleOut_0.d.bits.size, 1, 0) @[OneHot.scala 64:49]
    node _dsizeOH_T = dshl(UInt<1>("h01"), dsizeOH_shiftAmount) @[OneHot.scala 65:12]
    node dsizeOH = bits(_dsizeOH_T, 2, 0) @[OneHot.scala 65:27]
    node _dsizeOH1_T = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _dsizeOH1_T_1 = dshl(_dsizeOH1_T, bundleOut_0.d.bits.size) @[package.scala 234:77]
    node _dsizeOH1_T_2 = bits(_dsizeOH1_T_1, 1, 0) @[package.scala 234:82]
    node dsizeOH1 = not(_dsizeOH1_T_2) @[package.scala 234:46]
    node dHasData = bits(bundleOut_0.d.bits.opcode, 0, 0) @[Edges.scala 105:36]
    node acknum_fragment = shl(dFragnum, 0) @[Fragmenter.scala 200:40]
    node acknum_size = shr(dsizeOH1, 2) @[Fragmenter.scala 201:36]
    node _T = eq(bundleOut_0.d.valid, UInt<1>("h00")) @[Fragmenter.scala 202:17]
    node _T_1 = and(acknum_fragment, acknum_size) @[Fragmenter.scala 202:50]
    node _T_2 = eq(_T_1, UInt<1>("h00")) @[Fragmenter.scala 202:65]
    node _T_3 = or(_T, _T_2) @[Fragmenter.scala 202:30]
    node _T_4 = asUInt(reset) @[Fragmenter.scala 202:16]
    node _T_5 = or(_T_3, _T_4) @[Fragmenter.scala 202:16]
    node _T_6 = eq(_T_5, UInt<1>("h00")) @[Fragmenter.scala 202:16]
    when _T_6 : @[Fragmenter.scala 202:16]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Fragmenter.scala:202 assert (!out.d.valid || (acknum_fragment & acknum_size) === UInt(0))\n") @[Fragmenter.scala 202:16]
      stop(clock, UInt<1>(1), 1) @[Fragmenter.scala 202:16]
      skip @[Fragmenter.scala 202:16]
    node _dFirst_acknum_T = mux(dHasData, acknum_size, UInt<1>("h00")) @[Fragmenter.scala 203:50]
    node dFirst_acknum = or(acknum_fragment, _dFirst_acknum_T) @[Fragmenter.scala 203:45]
    node _ack_decrement_T = shr(dsizeOH, 2) @[Fragmenter.scala 204:60]
    node ack_decrement = mux(dHasData, UInt<1>("h01"), _ack_decrement_T) @[Fragmenter.scala 204:32]
    node _dFirst_size_T = shl(dFragnum, 2) @[Fragmenter.scala 206:47]
    node dFirst_size_lo = or(_dFirst_size_T, dsizeOH1) @[Fragmenter.scala 206:69]
    node _dFirst_size_T_1 = shl(dFirst_size_lo, 1) @[package.scala 232:35]
    node _dFirst_size_T_2 = or(_dFirst_size_T_1, UInt<1>("h01")) @[package.scala 232:40]
    node _dFirst_size_T_3 = cat(UInt<1>("h00"), dFirst_size_lo) @[Cat.scala 30:58]
    node _dFirst_size_T_4 = not(_dFirst_size_T_3) @[package.scala 232:53]
    node _dFirst_size_T_5 = and(_dFirst_size_T_2, _dFirst_size_T_4) @[package.scala 232:51]
    node dFirst_size_hi = bits(_dFirst_size_T_5, 6, 4) @[OneHot.scala 30:18]
    node dFirst_size_lo_1 = bits(_dFirst_size_T_5, 3, 0) @[OneHot.scala 31:18]
    node dFirst_size_hi_1 = orr(dFirst_size_hi) @[OneHot.scala 32:14]
    node _dFirst_size_T_6 = or(dFirst_size_hi, dFirst_size_lo_1) @[OneHot.scala 32:28]
    node dFirst_size_hi_2 = bits(_dFirst_size_T_6, 3, 2) @[OneHot.scala 30:18]
    node dFirst_size_lo_2 = bits(_dFirst_size_T_6, 1, 0) @[OneHot.scala 31:18]
    node dFirst_size_hi_3 = orr(dFirst_size_hi_2) @[OneHot.scala 32:14]
    node _dFirst_size_T_7 = or(dFirst_size_hi_2, dFirst_size_lo_2) @[OneHot.scala 32:28]
    node dFirst_size_lo_3 = bits(_dFirst_size_T_7, 1, 1) @[CircuitMath.scala 30:8]
    node dFirst_size_lo_4 = cat(dFirst_size_hi_3, dFirst_size_lo_3) @[Cat.scala 30:58]
    node dFirst_size = cat(dFirst_size_hi_1, dFirst_size_lo_4) @[Cat.scala 30:58]
    node _T_7 = and(bundleOut_0.d.ready, bundleOut_0.d.valid) @[Decoupled.scala 40:37]
    when _T_7 : @[Fragmenter.scala 208:29]
      node _acknum_T = sub(acknum, ack_decrement) @[Fragmenter.scala 209:55]
      node _acknum_T_1 = tail(_acknum_T, 1) @[Fragmenter.scala 209:55]
      node _acknum_T_2 = mux(dFirst, dFirst_acknum, _acknum_T_1) @[Fragmenter.scala 209:24]
      acknum <= _acknum_T_2 @[Fragmenter.scala 209:18]
      when dFirst : @[Fragmenter.scala 210:25]
        dOrig <= dFirst_size @[Fragmenter.scala 211:19]
        node _dToggle_T = bits(bundleOut_0.d.bits.source, 4, 4) @[Fragmenter.scala 212:41]
        dToggle <= _dToggle_T @[Fragmenter.scala 212:21]
        skip @[Fragmenter.scala 210:25]
      skip @[Fragmenter.scala 208:29]
    node doEarlyAck = bits(bundleOut_0.d.bits.source, 5, 5) @[Fragmenter.scala 219:54]
    node _drop_T = eq(dHasData, UInt<1>("h00")) @[Fragmenter.scala 222:20]
    node _drop_T_1 = mux(doEarlyAck, dFirst, dLast) @[Fragmenter.scala 222:37]
    node _drop_T_2 = eq(_drop_T_1, UInt<1>("h00")) @[Fragmenter.scala 222:33]
    node drop = and(_drop_T, _drop_T_2) @[Fragmenter.scala 222:30]
    node _bundleOut_0_d_ready_T = or(bundleIn_0.d.ready, drop) @[Fragmenter.scala 223:35]
    bundleOut_0.d.ready <= _bundleOut_0_d_ready_T @[Fragmenter.scala 223:21]
    node _bundleIn_0_d_valid_T = eq(drop, UInt<1>("h00")) @[Fragmenter.scala 224:39]
    node _bundleIn_0_d_valid_T_1 = and(bundleOut_0.d.valid, _bundleIn_0_d_valid_T) @[Fragmenter.scala 224:36]
    bundleIn_0.d.valid <= _bundleIn_0_d_valid_T_1 @[Fragmenter.scala 224:21]
    bundleIn_0.d.bits <- bundleOut_0.d.bits @[Fragmenter.scala 225:21]
    node _bundleIn_0_d_bits_source_T = shr(bundleOut_0.d.bits.source, 6) @[Fragmenter.scala 226:47]
    bundleIn_0.d.bits.source <= _bundleIn_0_d_bits_source_T @[Fragmenter.scala 226:26]
    node _bundleIn_0_d_bits_size_T = mux(dFirst, dFirst_size, dOrig) @[Fragmenter.scala 227:32]
    bundleIn_0.d.bits.size <= _bundleIn_0_d_bits_size_T @[Fragmenter.scala 227:26]
    inst repeater of Repeater_7 @[Fragmenter.scala 262:30]
    repeater.io is invalid
    repeater.clock <= clock
    repeater.reset <= reset
    repeater.io.enq <- bundleIn_0.a @[Fragmenter.scala 263:25]
    node _find_T = xor(repeater.io.deq.bits.address, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _find_T_1 = cvt(_find_T) @[Parameters.scala 137:49]
    node _find_T_2 = and(_find_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _find_T_3 = asSInt(_find_T_2) @[Parameters.scala 137:52]
    node _find_T_4 = eq(_find_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    wire find : UInt<1>[1] @[Parameters.scala 602:8]
    find is invalid @[Parameters.scala 602:8]
    find[0] <= _find_T_4 @[Parameters.scala 602:8]
    node _limit_T = eq(UInt<1>("h00"), repeater.io.deq.bits.opcode) @[Mux.scala 80:60]
    node _limit_T_1 = mux(_limit_T, UInt<2>("h02"), UInt<2>("h02")) @[Mux.scala 80:57]
    node _limit_T_2 = eq(UInt<1>("h01"), repeater.io.deq.bits.opcode) @[Mux.scala 80:60]
    node _limit_T_3 = mux(_limit_T_2, UInt<2>("h02"), _limit_T_1) @[Mux.scala 80:57]
    node _limit_T_4 = eq(UInt<2>("h02"), repeater.io.deq.bits.opcode) @[Mux.scala 80:60]
    node _limit_T_5 = mux(_limit_T_4, UInt<2>("h02"), _limit_T_3) @[Mux.scala 80:57]
    node _limit_T_6 = eq(UInt<2>("h03"), repeater.io.deq.bits.opcode) @[Mux.scala 80:60]
    node _limit_T_7 = mux(_limit_T_6, UInt<2>("h02"), _limit_T_5) @[Mux.scala 80:57]
    node _limit_T_8 = eq(UInt<3>("h04"), repeater.io.deq.bits.opcode) @[Mux.scala 80:60]
    node _limit_T_9 = mux(_limit_T_8, UInt<2>("h02"), _limit_T_7) @[Mux.scala 80:57]
    node _limit_T_10 = eq(UInt<3>("h05"), repeater.io.deq.bits.opcode) @[Mux.scala 80:60]
    node limit = mux(_limit_T_10, UInt<2>("h02"), _limit_T_9) @[Mux.scala 80:57]
    node _aFrag_T = gt(repeater.io.deq.bits.size, limit) @[Fragmenter.scala 285:31]
    node aFrag = mux(_aFrag_T, limit, repeater.io.deq.bits.size) @[Fragmenter.scala 285:24]
    node _aOrigOH1_T = asUInt(asSInt(UInt<6>("h03f"))) @[package.scala 234:70]
    node _aOrigOH1_T_1 = dshl(_aOrigOH1_T, repeater.io.deq.bits.size) @[package.scala 234:77]
    node _aOrigOH1_T_2 = bits(_aOrigOH1_T_1, 5, 0) @[package.scala 234:82]
    node aOrigOH1 = not(_aOrigOH1_T_2) @[package.scala 234:46]
    node _aFragOH1_T = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _aFragOH1_T_1 = dshl(_aFragOH1_T, aFrag) @[package.scala 234:77]
    node _aFragOH1_T_2 = bits(_aFragOH1_T_1, 1, 0) @[package.scala 234:82]
    node aFragOH1 = not(_aFragOH1_T_2) @[package.scala 234:46]
    node _aHasData_opdata_T = bits(repeater.io.deq.bits.opcode, 2, 2) @[Edges.scala 91:37]
    node aHasData = eq(_aHasData_opdata_T, UInt<1>("h00")) @[Edges.scala 91:28]
    node aMask = mux(aHasData, UInt<1>("h00"), aFragOH1) @[Fragmenter.scala 289:24]
    reg gennum : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[Fragmenter.scala 291:29]
    node aFirst = eq(gennum, UInt<1>("h00")) @[Fragmenter.scala 292:29]
    node _old_gennum1_T = shr(aOrigOH1, 2) @[Fragmenter.scala 293:48]
    node _old_gennum1_T_1 = sub(gennum, UInt<1>("h01")) @[Fragmenter.scala 293:79]
    node _old_gennum1_T_2 = tail(_old_gennum1_T_1, 1) @[Fragmenter.scala 293:79]
    node old_gennum1 = mux(aFirst, _old_gennum1_T, _old_gennum1_T_2) @[Fragmenter.scala 293:30]
    node _new_gennum_T = not(old_gennum1) @[Fragmenter.scala 294:28]
    node _new_gennum_T_1 = shr(aMask, 2) @[Fragmenter.scala 294:50]
    node _new_gennum_T_2 = or(_new_gennum_T, _new_gennum_T_1) @[Fragmenter.scala 294:41]
    node new_gennum = not(_new_gennum_T_2) @[Fragmenter.scala 294:26]
    node _aFragnum_T = shr(old_gennum1, 0) @[Fragmenter.scala 295:40]
    node _aFragnum_T_1 = not(_aFragnum_T) @[Fragmenter.scala 295:26]
    node _aFragnum_T_2 = shr(aFragOH1, 2) @[Fragmenter.scala 295:84]
    node _aFragnum_T_3 = or(_aFragnum_T_1, _aFragnum_T_2) @[Fragmenter.scala 295:72]
    node bundleOut_0_a_bits_source_lo_lo = not(_aFragnum_T_3) @[Fragmenter.scala 295:24]
    node aLast = eq(bundleOut_0_a_bits_source_lo_lo, UInt<1>("h00")) @[Fragmenter.scala 296:30]
    reg aToggle_r : UInt<1>, clock @[Reg.scala 15:16]
    when aFirst : @[Reg.scala 16:19]
      aToggle_r <= dToggle @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _aToggle_T = mux(aFirst, dToggle, aToggle_r) @[Fragmenter.scala 297:27]
    node bundleOut_0_a_bits_source_lo_hi = eq(_aToggle_T, UInt<1>("h00")) @[Fragmenter.scala 297:23]
    node bundleOut_0_a_bits_source_hi_lo = eq(repeater.io.deq.bits.opcode, UInt<1>("h00")) @[Fragmenter.scala 298:78]
    node _T_8 = and(bundleOut_0.a.ready, bundleOut_0.a.valid) @[Decoupled.scala 40:37]
    when _T_8 : @[Fragmenter.scala 300:29]
      gennum <= new_gennum @[Fragmenter.scala 300:38]
      skip @[Fragmenter.scala 300:29]
    node _repeater_io_repeat_T = eq(aHasData, UInt<1>("h00")) @[Fragmenter.scala 302:31]
    node _repeater_io_repeat_T_1 = neq(bundleOut_0_a_bits_source_lo_lo, UInt<1>("h00")) @[Fragmenter.scala 302:53]
    node _repeater_io_repeat_T_2 = and(_repeater_io_repeat_T, _repeater_io_repeat_T_1) @[Fragmenter.scala 302:41]
    repeater.io.repeat <= _repeater_io_repeat_T_2 @[Fragmenter.scala 302:28]
    bundleOut_0.a <- repeater.io.deq @[Fragmenter.scala 303:15]
    node _bundleOut_0_a_bits_address_T = shl(old_gennum1, 2) @[Fragmenter.scala 304:65]
    node _bundleOut_0_a_bits_address_T_1 = not(aOrigOH1) @[Fragmenter.scala 304:90]
    node _bundleOut_0_a_bits_address_T_2 = or(_bundleOut_0_a_bits_address_T, _bundleOut_0_a_bits_address_T_1) @[Fragmenter.scala 304:88]
    node _bundleOut_0_a_bits_address_T_3 = or(_bundleOut_0_a_bits_address_T_2, aFragOH1) @[Fragmenter.scala 304:100]
    node _bundleOut_0_a_bits_address_T_4 = or(_bundleOut_0_a_bits_address_T_3, UInt<2>("h03")) @[Fragmenter.scala 304:111]
    node _bundleOut_0_a_bits_address_T_5 = not(_bundleOut_0_a_bits_address_T_4) @[Fragmenter.scala 304:51]
    node _bundleOut_0_a_bits_address_T_6 = or(repeater.io.deq.bits.address, _bundleOut_0_a_bits_address_T_5) @[Fragmenter.scala 304:49]
    bundleOut_0.a.bits.address <= _bundleOut_0_a_bits_address_T_6 @[Fragmenter.scala 304:28]
    node bundleOut_0_a_bits_source_lo = cat(bundleOut_0_a_bits_source_lo_hi, bundleOut_0_a_bits_source_lo_lo) @[Cat.scala 30:58]
    node bundleOut_0_a_bits_source_hi = cat(repeater.io.deq.bits.source, bundleOut_0_a_bits_source_hi_lo) @[Cat.scala 30:58]
    node _bundleOut_0_a_bits_source_T = cat(bundleOut_0_a_bits_source_hi, bundleOut_0_a_bits_source_lo) @[Cat.scala 30:58]
    bundleOut_0.a.bits.source <= _bundleOut_0_a_bits_source_T @[Fragmenter.scala 305:27]
    bundleOut_0.a.bits.size <= aFrag @[Fragmenter.scala 306:25]
    node _T_9 = eq(repeater.io.full, UInt<1>("h00")) @[Fragmenter.scala 309:17]
    node _T_10 = eq(aHasData, UInt<1>("h00")) @[Fragmenter.scala 309:38]
    node _T_11 = or(_T_9, _T_10) @[Fragmenter.scala 309:35]
    node _T_12 = asUInt(reset) @[Fragmenter.scala 309:16]
    node _T_13 = or(_T_11, _T_12) @[Fragmenter.scala 309:16]
    node _T_14 = eq(_T_13, UInt<1>("h00")) @[Fragmenter.scala 309:16]
    when _T_14 : @[Fragmenter.scala 309:16]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Fragmenter.scala:309 assert (!repeater.io.full || !aHasData)\n") @[Fragmenter.scala 309:16]
      stop(clock, UInt<1>(1), 1) @[Fragmenter.scala 309:16]
      skip @[Fragmenter.scala 309:16]
    bundleOut_0.a.bits.data <= bundleIn_0.a.bits.data @[Fragmenter.scala 310:25]
    node _T_15 = eq(repeater.io.full, UInt<1>("h00")) @[Fragmenter.scala 312:17]
    node _T_16 = eq(repeater.io.deq.bits.mask, UInt<4>("h0f")) @[Fragmenter.scala 312:53]
    node _T_17 = or(_T_15, _T_16) @[Fragmenter.scala 312:35]
    node _T_18 = asUInt(reset) @[Fragmenter.scala 312:16]
    node _T_19 = or(_T_17, _T_18) @[Fragmenter.scala 312:16]
    node _T_20 = eq(_T_19, UInt<1>("h00")) @[Fragmenter.scala 312:16]
    when _T_20 : @[Fragmenter.scala 312:16]
      printf(clock, UInt<1>(1), "Assertion failed\n    at Fragmenter.scala:312 assert (!repeater.io.full || in_a.bits.mask === fullMask)\n") @[Fragmenter.scala 312:16]
      stop(clock, UInt<1>(1), 1) @[Fragmenter.scala 312:16]
      skip @[Fragmenter.scala 312:16]
    node _bundleOut_0_a_bits_mask_T = mux(repeater.io.full, UInt<4>("h0f"), bundleIn_0.a.bits.mask) @[Fragmenter.scala 313:31]
    bundleOut_0.a.bits.mask <= _bundleOut_0_a_bits_mask_T @[Fragmenter.scala 313:25]
    wire out : {} @[BundleMap.scala 132:19]
    wire _WIRE : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<3>, source : UInt<3>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _WIRE is invalid @[Bundles.scala 256:54]
    _WIRE.valid <= UInt<1>("h00") @[Fragmenter.scala 317:20]
    wire _WIRE_1 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _WIRE_1 is invalid @[Bundles.scala 257:54]
    _WIRE_1.ready <= UInt<1>("h01") @[Fragmenter.scala 318:20]
    wire _WIRE_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_2 is invalid @[Bundles.scala 259:54]
    _WIRE_2.ready <= UInt<1>("h01") @[Fragmenter.scala 319:20]
    wire _WIRE_3 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<2>, source : UInt<9>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _WIRE_3 is invalid @[Bundles.scala 256:54]
    _WIRE_3.ready <= UInt<1>("h01") @[Fragmenter.scala 320:21]
    wire _WIRE_4 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<2>, source : UInt<9>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _WIRE_4 is invalid @[Bundles.scala 257:54]
    _WIRE_4.valid <= UInt<1>("h00") @[Fragmenter.scala 321:21]
    wire _WIRE_5 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_5 is invalid @[Bundles.scala 259:54]
    _WIRE_5.valid <= UInt<1>("h00") @[Fragmenter.scala 322:21]
    
  module HellaCacheArbiter : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip requestor : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}}, s1_kill : UInt<1>, s1_data : {data : UInt<32>, mask : UInt<4>}, flip s2_nack : UInt<1>, flip s2_nack_cause_raw : UInt<1>, s2_kill : UInt<1>, flip s2_uncached : UInt<1>, flip s2_paddr : UInt<32>, flip resp : {valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, data : UInt<32>, mask : UInt<4>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<32>, data_raw : UInt<32>, store_data : UInt<32>}}, flip replay_next : UInt<1>, flip s2_xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>}}, flip ordered : UInt<1>, flip perf : {acquire : UInt<1>, release : UInt<1>, grant : UInt<1>, tlbMiss : UInt<1>, blocked : UInt<1>, canAcceptStoreThenLoad : UInt<1>, canAcceptStoreThenRMW : UInt<1>, canAcceptLoadThenLoad : UInt<1>, storeBufferEmptyAfterLoad : UInt<1>, storeBufferEmptyAfterStore : UInt<1>}, keep_clock_enabled : UInt<1>, flip clock_enabled : UInt<1>}[2], mem : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}}, s1_kill : UInt<1>, s1_data : {data : UInt<32>, mask : UInt<4>}, flip s2_nack : UInt<1>, flip s2_nack_cause_raw : UInt<1>, s2_kill : UInt<1>, flip s2_uncached : UInt<1>, flip s2_paddr : UInt<32>, flip resp : {valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, data : UInt<32>, mask : UInt<4>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<32>, data_raw : UInt<32>, store_data : UInt<32>}}, flip replay_next : UInt<1>, flip s2_xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>}}, flip ordered : UInt<1>, flip perf : {acquire : UInt<1>, release : UInt<1>, grant : UInt<1>, tlbMiss : UInt<1>, blocked : UInt<1>, canAcceptStoreThenLoad : UInt<1>, canAcceptStoreThenRMW : UInt<1>, canAcceptLoadThenLoad : UInt<1>, storeBufferEmptyAfterLoad : UInt<1>, storeBufferEmptyAfterStore : UInt<1>}, keep_clock_enabled : UInt<1>, flip clock_enabled : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg s1_id : UInt, clock @[HellaCacheArbiter.scala 19:20]
    reg s2_id : UInt, clock @[HellaCacheArbiter.scala 20:20]
    s2_id <= s1_id @[HellaCacheArbiter.scala 20:20]
    node _io_mem_keep_clock_enabled_T = or(io.requestor[0].keep_clock_enabled, io.requestor[1].keep_clock_enabled) @[HellaCacheArbiter.scala 22:81]
    io.mem.keep_clock_enabled <= _io_mem_keep_clock_enabled_T @[HellaCacheArbiter.scala 22:31]
    node _io_mem_req_valid_T = or(io.requestor[0].req.valid, io.requestor[1].req.valid) @[HellaCacheArbiter.scala 24:63]
    io.mem.req.valid <= _io_mem_req_valid_T @[HellaCacheArbiter.scala 24:22]
    io.requestor[0].req.ready <= io.mem.req.ready @[HellaCacheArbiter.scala 25:31]
    node _io_requestor_1_req_ready_T = eq(io.requestor[0].req.valid, UInt<1>("h00")) @[HellaCacheArbiter.scala 27:67]
    node _io_requestor_1_req_ready_T_1 = and(io.requestor[0].req.ready, _io_requestor_1_req_ready_T) @[HellaCacheArbiter.scala 27:64]
    io.requestor[1].req.ready <= _io_requestor_1_req_ready_T_1 @[HellaCacheArbiter.scala 27:33]
    io.mem.req.bits <- io.requestor[1].req.bits @[HellaCacheArbiter.scala 32:25]
    node _io_mem_req_bits_tag_T = cat(io.requestor[1].req.bits.tag, UInt<1>("h01")) @[Cat.scala 30:58]
    io.mem.req.bits.tag <= _io_mem_req_bits_tag_T @[HellaCacheArbiter.scala 33:29]
    s1_id <= UInt<1>("h01") @[HellaCacheArbiter.scala 34:15]
    io.mem.s1_kill <= io.requestor[1].s1_kill @[HellaCacheArbiter.scala 37:24]
    io.mem.s1_data <- io.requestor[1].s1_data @[HellaCacheArbiter.scala 38:24]
    io.mem.s2_kill <= io.requestor[1].s2_kill @[HellaCacheArbiter.scala 41:24]
    when io.requestor[0].req.valid : @[HellaCacheArbiter.scala 49:26]
      io.mem.req.bits <- io.requestor[0].req.bits @[HellaCacheArbiter.scala 32:25]
      node _io_mem_req_bits_tag_T_1 = cat(io.requestor[0].req.bits.tag, UInt<1>("h00")) @[Cat.scala 30:58]
      io.mem.req.bits.tag <= _io_mem_req_bits_tag_T_1 @[HellaCacheArbiter.scala 33:29]
      s1_id <= UInt<1>("h00") @[HellaCacheArbiter.scala 34:15]
      skip @[HellaCacheArbiter.scala 49:26]
    node _T = eq(s1_id, UInt<1>("h00")) @[HellaCacheArbiter.scala 50:21]
    when _T : @[HellaCacheArbiter.scala 50:34]
      io.mem.s1_kill <= io.requestor[0].s1_kill @[HellaCacheArbiter.scala 37:24]
      io.mem.s1_data <- io.requestor[0].s1_data @[HellaCacheArbiter.scala 38:24]
      skip @[HellaCacheArbiter.scala 50:34]
    node _T_1 = eq(s2_id, UInt<1>("h00")) @[HellaCacheArbiter.scala 51:21]
    when _T_1 : @[HellaCacheArbiter.scala 51:34]
      io.mem.s2_kill <= io.requestor[0].s2_kill @[HellaCacheArbiter.scala 41:24]
      skip @[HellaCacheArbiter.scala 51:34]
    node _tag_hit_T = bits(io.mem.resp.bits.tag, 0, 0) @[HellaCacheArbiter.scala 59:41]
    node tag_hit = eq(_tag_hit_T, UInt<1>("h00")) @[HellaCacheArbiter.scala 59:57]
    node _io_requestor_0_resp_valid_T = and(io.mem.resp.valid, tag_hit) @[HellaCacheArbiter.scala 60:39]
    io.requestor[0].resp.valid <= _io_requestor_0_resp_valid_T @[HellaCacheArbiter.scala 60:18]
    io.requestor[0].s2_xcpt <- io.mem.s2_xcpt @[HellaCacheArbiter.scala 61:31]
    io.requestor[0].ordered <= io.mem.ordered @[HellaCacheArbiter.scala 62:31]
    io.requestor[0].perf <- io.mem.perf @[HellaCacheArbiter.scala 63:28]
    node _io_requestor_0_s2_nack_T = eq(s2_id, UInt<1>("h00")) @[HellaCacheArbiter.scala 64:58]
    node _io_requestor_0_s2_nack_T_1 = and(io.mem.s2_nack, _io_requestor_0_s2_nack_T) @[HellaCacheArbiter.scala 64:49]
    io.requestor[0].s2_nack <= _io_requestor_0_s2_nack_T_1 @[HellaCacheArbiter.scala 64:31]
    io.requestor[0].s2_nack_cause_raw <= io.mem.s2_nack_cause_raw @[HellaCacheArbiter.scala 65:41]
    io.requestor[0].s2_uncached <= io.mem.s2_uncached @[HellaCacheArbiter.scala 66:35]
    io.requestor[0].s2_paddr <= io.mem.s2_paddr @[HellaCacheArbiter.scala 67:32]
    io.requestor[0].clock_enabled <= io.mem.clock_enabled @[HellaCacheArbiter.scala 68:37]
    io.requestor[0].resp.bits <- io.mem.resp.bits @[HellaCacheArbiter.scala 69:17]
    node _io_requestor_0_resp_bits_tag_T = shr(io.mem.resp.bits.tag, 1) @[HellaCacheArbiter.scala 70:45]
    io.requestor[0].resp.bits.tag <= _io_requestor_0_resp_bits_tag_T @[HellaCacheArbiter.scala 70:21]
    io.requestor[0].replay_next <= io.mem.replay_next @[HellaCacheArbiter.scala 72:35]
    node _tag_hit_T_1 = bits(io.mem.resp.bits.tag, 0, 0) @[HellaCacheArbiter.scala 59:41]
    node tag_hit_1 = eq(_tag_hit_T_1, UInt<1>("h01")) @[HellaCacheArbiter.scala 59:57]
    node _io_requestor_1_resp_valid_T = and(io.mem.resp.valid, tag_hit_1) @[HellaCacheArbiter.scala 60:39]
    io.requestor[1].resp.valid <= _io_requestor_1_resp_valid_T @[HellaCacheArbiter.scala 60:18]
    io.requestor[1].s2_xcpt <- io.mem.s2_xcpt @[HellaCacheArbiter.scala 61:31]
    io.requestor[1].ordered <= io.mem.ordered @[HellaCacheArbiter.scala 62:31]
    io.requestor[1].perf <- io.mem.perf @[HellaCacheArbiter.scala 63:28]
    node _io_requestor_1_s2_nack_T = eq(s2_id, UInt<1>("h01")) @[HellaCacheArbiter.scala 64:58]
    node _io_requestor_1_s2_nack_T_1 = and(io.mem.s2_nack, _io_requestor_1_s2_nack_T) @[HellaCacheArbiter.scala 64:49]
    io.requestor[1].s2_nack <= _io_requestor_1_s2_nack_T_1 @[HellaCacheArbiter.scala 64:31]
    io.requestor[1].s2_nack_cause_raw <= io.mem.s2_nack_cause_raw @[HellaCacheArbiter.scala 65:41]
    io.requestor[1].s2_uncached <= io.mem.s2_uncached @[HellaCacheArbiter.scala 66:35]
    io.requestor[1].s2_paddr <= io.mem.s2_paddr @[HellaCacheArbiter.scala 67:32]
    io.requestor[1].clock_enabled <= io.mem.clock_enabled @[HellaCacheArbiter.scala 68:37]
    io.requestor[1].resp.bits <- io.mem.resp.bits @[HellaCacheArbiter.scala 69:17]
    node _io_requestor_1_resp_bits_tag_T = shr(io.mem.resp.bits.tag, 1) @[HellaCacheArbiter.scala 70:45]
    io.requestor[1].resp.bits.tag <= _io_requestor_1_resp_bits_tag_T @[HellaCacheArbiter.scala 70:21]
    io.requestor[1].replay_next <= io.mem.replay_next @[HellaCacheArbiter.scala 72:35]
    
  module PTW : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip requestor : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {valid : UInt<1>, bits : {addr : UInt<20>}}}, flip resp : {valid : UInt<1>, bits : {ae : UInt<1>, pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<1>, fragmented_superpage : UInt<1>, homogeneous : UInt<1>}}, flip ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip customCSRs : {csrs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}}[2], mem : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}}, s1_kill : UInt<1>, s1_data : {data : UInt<32>, mask : UInt<4>}, flip s2_nack : UInt<1>, flip s2_nack_cause_raw : UInt<1>, s2_kill : UInt<1>, flip s2_uncached : UInt<1>, flip s2_paddr : UInt<32>, flip resp : {valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, data : UInt<32>, mask : UInt<4>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<32>, data_raw : UInt<32>, store_data : UInt<32>}}, flip replay_next : UInt<1>, flip s2_xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>}}, flip ordered : UInt<1>, flip perf : {acquire : UInt<1>, release : UInt<1>, grant : UInt<1>, tlbMiss : UInt<1>, blocked : UInt<1>, canAcceptStoreThenLoad : UInt<1>, canAcceptStoreThenRMW : UInt<1>, canAcceptLoadThenLoad : UInt<1>, storeBufferEmptyAfterLoad : UInt<1>, storeBufferEmptyAfterStore : UInt<1>}, keep_clock_enabled : UInt<1>, flip clock_enabled : UInt<1>}, dpath : {flip ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, flip sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<32>, asid : UInt<1>}}, flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], perf : {l2miss : UInt<1>, l2hit : UInt<1>, pte_miss : UInt<1>, pte_hit : UInt<1>}, flip customCSRs : {csrs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}, clock_enabled : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[PTW.scala 109:18]
    wire l2_refill_wire : UInt<1> @[PTW.scala 110:28]
    l2_refill_wire is invalid @[PTW.scala 110:28]
    inst arb of Arbiter @[PTW.scala 112:19]
    arb.io is invalid
    arb.clock <= clock
    arb.reset <= reset
    arb.io.in[0] <- io.requestor[0].req @[PTW.scala 113:13]
    arb.io.in[1] <- io.requestor[1].req @[PTW.scala 113:13]
    node _arb_io_out_ready_T = eq(state, UInt<3>("h00")) @[PTW.scala 114:30]
    node _arb_io_out_ready_T_1 = eq(l2_refill_wire, UInt<1>("h00")) @[PTW.scala 114:46]
    node _arb_io_out_ready_T_2 = and(_arb_io_out_ready_T, _arb_io_out_ready_T_1) @[PTW.scala 114:43]
    arb.io.out.ready <= _arb_io_out_ready_T_2 @[PTW.scala 114:20]
    wire resp_valid_x4 : UInt<1>[2] @[compatibility.scala 127:12]
    resp_valid_x4 is invalid @[compatibility.scala 127:12]
    resp_valid_x4[0] <= UInt<1>("h00") @[compatibility.scala 127:12]
    resp_valid_x4[1] <= UInt<1>("h00") @[compatibility.scala 127:12]
    reg resp_valid : UInt<1>[2], clock @[PTW.scala 116:23]
    resp_valid <- resp_valid_x4 @[PTW.scala 116:23]
    node _clock_en_T = neq(state, UInt<3>("h00")) @[PTW.scala 118:24]
    node _clock_en_T_1 = or(_clock_en_T, l2_refill_wire) @[PTW.scala 118:36]
    node _clock_en_T_2 = or(_clock_en_T_1, arb.io.out.valid) @[PTW.scala 118:54]
    node _clock_en_T_3 = or(_clock_en_T_2, io.dpath.sfence.valid) @[PTW.scala 118:74]
    node _clock_en_T_4 = bits(io.dpath.customCSRs.csrs[0].value, 0, 0) @[CustomCSRs.scala 37:61]
    node clock_en = or(_clock_en_T_3, _clock_en_T_4) @[PTW.scala 118:99]
    node _io_dpath_clock_enabled_T = and(UInt<1>("h00"), clock_en) @[PTW.scala 119:37]
    io.dpath.clock_enabled <= _io_dpath_clock_enabled_T @[PTW.scala 119:26]
    reg invalidated : UInt<1>, clock @[PTW.scala 125:24]
    reg count : UInt<1>, clock @[PTW.scala 126:18]
    reg resp_ae : UInt<1>, clock @[PTW.scala 127:24]
    resp_ae <= UInt<1>("h00") @[PTW.scala 127:24]
    reg resp_fragmented_superpage : UInt<1>, clock @[PTW.scala 128:42]
    resp_fragmented_superpage <= UInt<1>("h00") @[PTW.scala 128:42]
    reg r_req : {addr : UInt<20>}, clock @[PTW.scala 130:18]
    reg r_req_dest : UInt, clock @[PTW.scala 131:23]
    reg r_pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, clock @[PTW.scala 132:18]
    reg mem_resp_valid : UInt<1>, clock @[PTW.scala 134:31]
    mem_resp_valid <= io.mem.resp.valid @[PTW.scala 134:31]
    reg mem_resp_data : UInt, clock @[PTW.scala 135:30]
    mem_resp_data <= io.mem.resp.bits.data @[PTW.scala 135:30]
    wire tmp : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>} @[PTW.scala 146:33]
    tmp is invalid @[PTW.scala 146:33]
    wire _WIRE : UInt<64>
    _WIRE is invalid
    _WIRE <= mem_resp_data
    node _T = bits(_WIRE, 0, 0) @[PTW.scala 146:33]
    tmp.v <= _T @[PTW.scala 146:33]
    node _T_1 = bits(_WIRE, 1, 1) @[PTW.scala 146:33]
    tmp.r <= _T_1 @[PTW.scala 146:33]
    node _T_2 = bits(_WIRE, 2, 2) @[PTW.scala 146:33]
    tmp.w <= _T_2 @[PTW.scala 146:33]
    node _T_3 = bits(_WIRE, 3, 3) @[PTW.scala 146:33]
    tmp.x <= _T_3 @[PTW.scala 146:33]
    node _T_4 = bits(_WIRE, 4, 4) @[PTW.scala 146:33]
    tmp.u <= _T_4 @[PTW.scala 146:33]
    node _T_5 = bits(_WIRE, 5, 5) @[PTW.scala 146:33]
    tmp.g <= _T_5 @[PTW.scala 146:33]
    node _T_6 = bits(_WIRE, 6, 6) @[PTW.scala 146:33]
    tmp.a <= _T_6 @[PTW.scala 146:33]
    node _T_7 = bits(_WIRE, 7, 7) @[PTW.scala 146:33]
    tmp.d <= _T_7 @[PTW.scala 146:33]
    node _T_8 = bits(_WIRE, 9, 8) @[PTW.scala 146:33]
    tmp.reserved_for_software <= _T_8 @[PTW.scala 146:33]
    node _T_9 = bits(_WIRE, 63, 10) @[PTW.scala 146:33]
    tmp.ppn <= _T_9 @[PTW.scala 146:33]
    wire res : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}
    res is invalid
    res <- tmp
    node _T_10 = bits(tmp.ppn, 19, 0) @[PTW.scala 148:23]
    res.ppn <= _T_10 @[PTW.scala 148:13]
    node _T_11 = or(tmp.r, tmp.w) @[PTW.scala 149:17]
    node _T_12 = or(_T_11, tmp.x) @[PTW.scala 149:26]
    when _T_12 : @[PTW.scala 149:36]
      node _T_13 = leq(count, UInt<1>("h00")) @[PTW.scala 152:21]
      node _T_14 = bits(tmp.ppn, 9, 0) @[PTW.scala 152:36]
      node _T_15 = neq(_T_14, UInt<1>("h00")) @[PTW.scala 152:95]
      node _T_16 = and(_T_13, _T_15) @[PTW.scala 152:26]
      when _T_16 : @[PTW.scala 152:102]
        res.v <= UInt<1>("h00") @[PTW.scala 152:110]
        skip @[PTW.scala 152:102]
      skip @[PTW.scala 149:36]
    node _T_17 = shr(tmp.ppn, 20) @[PTW.scala 154:20]
    node invalid_paddr = neq(_T_17, UInt<1>("h00")) @[PTW.scala 154:32]
    node _traverse_T = eq(res.r, UInt<1>("h00")) @[PTW.scala 72:36]
    node _traverse_T_1 = and(res.v, _traverse_T) @[PTW.scala 72:33]
    node _traverse_T_2 = eq(res.w, UInt<1>("h00")) @[PTW.scala 72:42]
    node _traverse_T_3 = and(_traverse_T_1, _traverse_T_2) @[PTW.scala 72:39]
    node _traverse_T_4 = eq(res.x, UInt<1>("h00")) @[PTW.scala 72:48]
    node _traverse_T_5 = and(_traverse_T_3, _traverse_T_4) @[PTW.scala 72:45]
    node _traverse_T_6 = eq(invalid_paddr, UInt<1>("h00")) @[PTW.scala 156:33]
    node _traverse_T_7 = and(_traverse_T_5, _traverse_T_6) @[PTW.scala 156:30]
    node _traverse_T_8 = lt(count, UInt<1>("h01")) @[PTW.scala 156:57]
    node traverse = and(_traverse_T_7, _traverse_T_8) @[PTW.scala 156:48]
    node fragmented_superpage_ppn_choices_hi = shr(r_pte.ppn, 10) @[PTW.scala 163:69]
    node fragmented_superpage_ppn_choices_lo = bits(r_req.addr, 9, 0) @[PTW.scala 163:99]
    node choices_0 = cat(fragmented_superpage_ppn_choices_hi, fragmented_superpage_ppn_choices_lo) @[Cat.scala 30:58]
    node _T_18 = and(arb.io.out.ready, arb.io.out.valid) @[Decoupled.scala 40:37]
    when _T_18 : @[PTW.scala 167:28]
      r_req <- arb.io.out.bits.bits @[PTW.scala 168:11]
      r_req_dest <= arb.io.chosen @[PTW.scala 169:16]
      skip @[PTW.scala 167:28]
    reg state_reg : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Replacement.scala 168:70]
    reg valid : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[PTW.scala 175:24]
    reg tags : UInt<32>[4], clock @[PTW.scala 176:19]
    reg data : UInt<20>[4], clock @[PTW.scala 177:19]
    node lo_lo = eq(tags[0], UInt<1>("h00")) @[PTW.scala 179:27]
    node lo_hi = eq(tags[1], UInt<1>("h00")) @[PTW.scala 179:27]
    node hi_lo = eq(tags[2], UInt<1>("h00")) @[PTW.scala 179:27]
    node hi_hi = eq(tags[3], UInt<1>("h00")) @[PTW.scala 179:27]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_19 = cat(hi, lo) @[Cat.scala 30:58]
    node hits = and(_T_19, valid) @[PTW.scala 179:48]
    node hit = orr(hits) @[PTW.scala 180:20]
    node _T_20 = and(mem_resp_valid, traverse) @[PTW.scala 181:26]
    node _T_21 = eq(hit, UInt<1>("h00")) @[PTW.scala 181:41]
    node _T_22 = and(_T_20, _T_21) @[PTW.scala 181:38]
    node _T_23 = eq(invalidated, UInt<1>("h00")) @[PTW.scala 181:49]
    node _T_24 = and(_T_22, _T_23) @[PTW.scala 181:46]
    when _T_24 : @[PTW.scala 181:63]
      node _T_25 = andr(valid) @[PTW.scala 182:25]
      node hi_1 = bits(state_reg, 2, 2) @[Replacement.scala 243:38]
      node left_subtree_state = bits(state_reg, 1, 1) @[package.scala 154:13]
      node right_subtree_state = bits(state_reg, 0, 0) @[Replacement.scala 245:38]
      node _T_26 = bits(left_subtree_state, 0, 0) @[Replacement.scala 262:12]
      node _T_27 = bits(right_subtree_state, 0, 0) @[Replacement.scala 262:12]
      node lo_1 = mux(hi_1, _T_26, _T_27) @[Replacement.scala 250:16]
      node _T_28 = cat(hi_1, lo_1) @[Cat.scala 30:58]
      node _T_29 = not(valid) @[PTW.scala 182:57]
      node _T_30 = bits(_T_29, 0, 0) @[OneHot.scala 47:40]
      node _T_31 = bits(_T_29, 1, 1) @[OneHot.scala 47:40]
      node _T_32 = bits(_T_29, 2, 2) @[OneHot.scala 47:40]
      node _T_33 = bits(_T_29, 3, 3) @[OneHot.scala 47:40]
      node _T_34 = mux(_T_32, UInt<2>("h02"), UInt<2>("h03")) @[Mux.scala 47:69]
      node _T_35 = mux(_T_31, UInt<1>("h01"), _T_34) @[Mux.scala 47:69]
      node _T_36 = mux(_T_30, UInt<1>("h00"), _T_35) @[Mux.scala 47:69]
      node r = mux(_T_25, _T_28, _T_36) @[PTW.scala 182:18]
      node _T_37 = dshl(UInt<1>("h01"), r) @[OneHot.scala 58:35]
      node _T_38 = or(valid, _T_37) @[PTW.scala 183:22]
      valid <= _T_38 @[PTW.scala 183:13]
      tags[r] <= UInt<1>("h00") @[PTW.scala 184:15]
      data[r] <= res.ppn @[PTW.scala 185:15]
      skip @[PTW.scala 181:63]
    node _T_39 = eq(state, UInt<3>("h01")) @[PTW.scala 187:24]
    node _T_40 = and(hit, _T_39) @[PTW.scala 187:15]
    when _T_40 : @[PTW.scala 187:35]
      node hi_2 = bits(hits, 3, 2) @[OneHot.scala 30:18]
      node lo_2 = bits(hits, 1, 0) @[OneHot.scala 31:18]
      node hi_3 = orr(hi_2) @[OneHot.scala 32:14]
      node _T_41 = or(hi_2, lo_2) @[OneHot.scala 32:28]
      node lo_3 = bits(_T_41, 1, 1) @[CircuitMath.scala 30:8]
      node _T_42 = cat(hi_3, lo_3) @[Cat.scala 30:58]
      node state_reg_touch_way_sized = bits(_T_42, 1, 0) @[package.scala 154:13]
      node _state_reg_set_left_older_T = bits(state_reg_touch_way_sized, 1, 1) @[Replacement.scala 196:43]
      node state_reg_hi_hi = eq(_state_reg_set_left_older_T, UInt<1>("h00")) @[Replacement.scala 196:33]
      node state_reg_left_subtree_state = bits(state_reg, 1, 1) @[package.scala 154:13]
      node state_reg_right_subtree_state = bits(state_reg, 0, 0) @[Replacement.scala 198:38]
      node _state_reg_T = bits(state_reg_touch_way_sized, 0, 0) @[package.scala 154:13]
      node _state_reg_T_1 = bits(_state_reg_T, 0, 0) @[Replacement.scala 218:17]
      node _state_reg_T_2 = eq(_state_reg_T_1, UInt<1>("h00")) @[Replacement.scala 218:7]
      node state_reg_hi_lo = mux(state_reg_hi_hi, state_reg_left_subtree_state, _state_reg_T_2) @[Replacement.scala 203:16]
      node _state_reg_T_3 = bits(state_reg_touch_way_sized, 0, 0) @[Replacement.scala 207:62]
      node _state_reg_T_4 = bits(_state_reg_T_3, 0, 0) @[Replacement.scala 218:17]
      node _state_reg_T_5 = eq(_state_reg_T_4, UInt<1>("h00")) @[Replacement.scala 218:7]
      node state_reg_lo = mux(state_reg_hi_hi, _state_reg_T_5, state_reg_right_subtree_state) @[Replacement.scala 206:16]
      node state_reg_hi = cat(state_reg_hi_hi, state_reg_hi_lo) @[Cat.scala 30:58]
      node _state_reg_T_6 = cat(state_reg_hi, state_reg_lo) @[Cat.scala 30:58]
      state_reg <= _state_reg_T_6 @[Replacement.scala 172:15]
      skip @[PTW.scala 187:35]
    node _T_43 = eq(io.dpath.sfence.bits.rs1, UInt<1>("h00")) @[PTW.scala 188:36]
    node _T_44 = and(io.dpath.sfence.valid, _T_43) @[PTW.scala 188:33]
    when _T_44 : @[PTW.scala 188:63]
      valid <= UInt<1>("h00") @[PTW.scala 188:71]
      skip @[PTW.scala 188:63]
    node _T_45 = eq(state, UInt<3>("h01")) @[PTW.scala 191:27]
    node _T_46 = and(hit, _T_45) @[PTW.scala 191:18]
    node _T_47 = eq(count, UInt<1>("h00")) @[PTW.scala 191:46]
    node _T_48 = and(_T_46, _T_47) @[PTW.scala 191:37]
    node _T_49 = lt(count, UInt<1>("h01")) @[PTW.scala 193:19]
    node pte_cache_hit = and(hit, _T_49) @[PTW.scala 193:10]
    node _T_50 = bits(hits, 0, 0) @[Mux.scala 29:36]
    node _T_51 = bits(hits, 1, 1) @[Mux.scala 29:36]
    node _T_52 = bits(hits, 2, 2) @[Mux.scala 29:36]
    node _T_53 = bits(hits, 3, 3) @[Mux.scala 29:36]
    node _T_54 = mux(_T_50, data[0], UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_55 = mux(_T_51, data[1], UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_56 = mux(_T_52, data[2], UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_57 = mux(_T_53, data[3], UInt<1>("h00")) @[Mux.scala 27:72]
    node _T_58 = or(_T_54, _T_55) @[Mux.scala 27:72]
    node _T_59 = or(_T_58, _T_56) @[Mux.scala 27:72]
    node _T_60 = or(_T_59, _T_57) @[Mux.scala 27:72]
    wire pte_cache_data : UInt<20> @[Mux.scala 27:72]
    pte_cache_data <= _T_60 @[Mux.scala 27:72]
    reg pte_hit : UInt<1>, clock @[PTW.scala 195:24]
    pte_hit <= UInt<1>("h00") @[PTW.scala 195:24]
    io.dpath.perf.pte_miss <= UInt<1>("h00") @[PTW.scala 196:26]
    node _io_dpath_perf_pte_hit_T = eq(state, UInt<3>("h01")) @[PTW.scala 197:46]
    node _io_dpath_perf_pte_hit_T_1 = and(pte_hit, _io_dpath_perf_pte_hit_T) @[PTW.scala 197:36]
    node _io_dpath_perf_pte_hit_T_2 = eq(io.dpath.perf.l2hit, UInt<1>("h00")) @[PTW.scala 197:60]
    node _io_dpath_perf_pte_hit_T_3 = and(_io_dpath_perf_pte_hit_T_1, _io_dpath_perf_pte_hit_T_2) @[PTW.scala 197:57]
    io.dpath.perf.pte_hit <= _io_dpath_perf_pte_hit_T_3 @[PTW.scala 197:25]
    node _T_61 = or(io.dpath.perf.pte_miss, io.dpath.perf.pte_hit) @[PTW.scala 198:59]
    node _T_62 = and(io.dpath.perf.l2hit, _T_61) @[PTW.scala 198:32]
    node _T_63 = eq(_T_62, UInt<1>("h00")) @[PTW.scala 198:10]
    node _T_64 = bits(reset, 0, 0) @[PTW.scala 198:9]
    node _T_65 = or(_T_63, _T_64) @[PTW.scala 198:9]
    node _T_66 = eq(_T_65, UInt<1>("h00")) @[PTW.scala 198:9]
    when _T_66 : @[PTW.scala 198:9]
      printf(clock, UInt<1>(1), "Assertion failed: PTE Cache Hit/Miss Performance Monitor Events are lower priority than L2TLB Hit event\n    at PTW.scala:198 assert(!(io.dpath.perf.l2hit && (io.dpath.perf.pte_miss || io.dpath.perf.pte_hit)),\n") @[PTW.scala 198:9]
      stop(clock, UInt<1>(1), 1) @[PTW.scala 198:9]
      skip @[PTW.scala 198:9]
    reg l2_refill : UInt<1>, clock @[PTW.scala 201:26]
    l2_refill <= UInt<1>("h00") @[PTW.scala 201:26]
    l2_refill_wire <= l2_refill @[PTW.scala 202:18]
    io.dpath.perf.l2miss <= UInt<1>("h00") @[PTW.scala 203:24]
    io.dpath.perf.l2hit <= UInt<1>("h00") @[PTW.scala 204:23]
    reg state_reg_1 : UInt<0>, clock @[Replacement.scala 168:46]
    reg state_vec : UInt<0>[1024], clock @[Replacement.scala 304:30]
    smem l2_tlb_ram : UInt<37>[1][1024], undefined @[DescribedSRAM.scala 19:26]
    reg g : UInt<1024>[1], clock @[PTW.scala 223:16]
    wire _WIRE_1 : UInt<1024>[1] @[PTW.scala 224:28]
    _WIRE_1 is invalid @[PTW.scala 224:28]
    _WIRE_1[0] <= UInt<1024>("h00") @[PTW.scala 224:28]
    reg valid_1 : UInt<1024>[1], clock with : (reset => (reset, _WIRE_1)) @[PTW.scala 224:24]
    node r_tag = bits(r_req.addr, 19, 10) @[package.scala 154:13]
    node r_idx = bits(r_req.addr, 9, 0) @[package.scala 154:13]
    node _T_67 = dshr(valid_1[0], r_idx) @[PTW.scala 226:34]
    node r_valid_vec = bits(_T_67, 0, 0) @[PTW.scala 226:34]
    node _T_68 = eq(invalidated, UInt<1>("h00")) @[PTW.scala 227:24]
    node _T_69 = and(l2_refill, _T_68) @[PTW.scala 227:21]
    when _T_69 : @[PTW.scala 227:38]
      wire entry : {tag : UInt<10>, ppn : UInt<20>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[PTW.scala 228:23]
      entry is invalid @[PTW.scala 228:23]
      entry <- r_pte @[PTW.scala 231:13]
      entry.tag <= r_tag @[PTW.scala 232:17]
      node lo_lo_1 = cat(entry.w, entry.r) @[PTW.scala 233:78]
      node lo_hi_1 = cat(entry.u, entry.x) @[PTW.scala 233:78]
      node lo_4 = cat(lo_hi_1, lo_lo_1) @[PTW.scala 233:78]
      node hi_lo_1 = cat(entry.d, entry.a) @[PTW.scala 233:78]
      node hi_hi_1 = cat(entry.tag, entry.ppn) @[PTW.scala 233:78]
      node hi_4 = cat(hi_hi_1, hi_lo_1) @[PTW.scala 233:78]
      node lo_5 = cat(hi_4, lo_4) @[PTW.scala 233:78]
      node _T_70 = xorr(lo_5) @[ECC.scala 71:59]
      node hi_5 = xor(_T_70, UInt<1>("h00")) @[ECC.scala 71:64]
      node _T_71 = cat(hi_5, lo_5) @[Cat.scala 30:58]
      wire _WIRE_2 : UInt<37>[1] @[PTW.scala 233:27]
      _WIRE_2 is invalid @[PTW.scala 233:27]
      _WIRE_2[0] <= _T_71 @[PTW.scala 233:27]
      write mport MPORT = l2_tlb_ram[r_idx], clock
      when UInt<1>("h01") :
        MPORT[0] <= _WIRE_2[0]
        skip
      node mask = dshl(UInt<1>("h01"), r_idx) @[OneHot.scala 58:35]
      when UInt<1>("h01") : @[PTW.scala 237:27]
        node _T_72 = or(valid_1[0], mask) @[PTW.scala 238:36]
        valid_1[0] <= _T_72 @[PTW.scala 238:22]
        node _T_73 = or(g[0], mask) @[PTW.scala 239:41]
        node _T_74 = not(mask) @[PTW.scala 239:58]
        node _T_75 = and(g[0], _T_74) @[PTW.scala 239:56]
        node _T_76 = mux(r_pte.g, _T_73, _T_75) @[PTW.scala 239:24]
        g[0] <= _T_76 @[PTW.scala 239:18]
        skip @[PTW.scala 237:27]
      skip @[PTW.scala 227:38]
    when io.dpath.sfence.valid : @[PTW.scala 243:34]
      node _T_77 = bits(io.dpath.sfence.bits.addr, 21, 12) @[PTW.scala 246:89]
      node _T_78 = dshl(UInt<1>("h01"), _T_77) @[OneHot.scala 58:35]
      node _T_79 = not(_T_78) @[PTW.scala 246:54]
      node _T_80 = and(valid_1[0], _T_79) @[PTW.scala 246:52]
      node _T_81 = and(valid_1[0], g[0]) @[PTW.scala 247:52]
      node _T_82 = mux(io.dpath.sfence.bits.rs2, _T_81, UInt<1>("h00")) @[PTW.scala 247:14]
      node _T_83 = mux(io.dpath.sfence.bits.rs1, _T_80, _T_82) @[PTW.scala 246:14]
      valid_1[0] <= _T_83 @[PTW.scala 245:20]
      skip @[PTW.scala 243:34]
    node _T_84 = eq(l2_refill, UInt<1>("h00")) @[PTW.scala 251:20]
    node _T_85 = and(arb.io.out.ready, arb.io.out.valid) @[Decoupled.scala 40:37]
    node s0_valid = and(_T_84, _T_85) @[PTW.scala 251:31]
    node _T_86 = and(s0_valid, arb.io.out.bits.valid) @[PTW.scala 252:37]
    reg s1_valid : UInt<1>, clock @[PTW.scala 252:27]
    s1_valid <= _T_86 @[PTW.scala 252:27]
    reg s2_valid : UInt<1>, clock @[PTW.scala 253:27]
    s2_valid <= s1_valid @[PTW.scala 253:27]
    node _T_87 = bits(arb.io.out.bits.bits.addr, 9, 0) @[PTW.scala 254:54]
    wire _WIRE_3 : UInt @[PTW.scala 254:28]
    _WIRE_3 is invalid @[PTW.scala 254:28]
    _WIRE_3 is invalid @[PTW.scala 254:28]
    when s0_valid : @[PTW.scala 254:28]
      _WIRE_3 <= _T_87 @[PTW.scala 254:28]
      node _T_88 = or(_WIRE_3, UInt<10>("h00")) @[PTW.scala 254:28]
      node _T_89 = bits(_T_88, 9, 0) @[PTW.scala 254:28]
      read mport s1_rdata = l2_tlb_ram[_T_89], clock @[PTW.scala 254:28]
      skip @[PTW.scala 254:28]
    reg r_1 : UInt<37>, clock @[Reg.scala 15:16]
    when s1_valid : @[Reg.scala 16:19]
      r_1 <= s1_rdata[0] @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node uncorrected = bits(r_1, 35, 0) @[ECC.scala 74:24]
    node uncorrectable = xorr(r_1) @[ECC.scala 77:27]
    reg s2_valid_vec : UInt<1>, clock @[Reg.scala 15:16]
    when s1_valid : @[Reg.scala 16:19]
      s2_valid_vec <= r_valid_vec @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _T_90 = dshr(g[0], r_idx) @[PTW.scala 257:41]
    node _T_91 = bits(_T_90, 0, 0) @[PTW.scala 257:41]
    wire _WIRE_4 : UInt<1>[1] @[PTW.scala 257:33]
    _WIRE_4 is invalid @[PTW.scala 257:33]
    _WIRE_4[0] <= _T_91 @[PTW.scala 257:33]
    reg s2_g_vec : UInt<1>[1], clock @[Reg.scala 15:16]
    when s1_valid : @[Reg.scala 16:19]
      s2_g_vec[0] <= _WIRE_4[0] @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _T_92 = bits(s2_valid_vec, 0, 0) @[PTW.scala 258:75]
    node _T_93 = or(UInt<1>("h00"), uncorrectable) @[ECC.scala 14:27]
    node s2_error = and(_T_92, _T_93) @[PTW.scala 258:81]
    node _T_94 = and(s2_valid, s2_error) @[PTW.scala 259:20]
    when _T_94 : @[PTW.scala 259:33]
      valid_1[0] <= UInt<1>("h00") @[PTW.scala 259:53]
      skip @[PTW.scala 259:33]
    wire s2_entry_vec_0 : {tag : UInt<10>, ppn : UInt<20>, d : UInt<1>, a : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[PTW.scala 261:59]
    s2_entry_vec_0 is invalid @[PTW.scala 261:59]
    wire _WIRE_5 : UInt<36>
    _WIRE_5 is invalid
    _WIRE_5 <= uncorrected
    node _T_95 = bits(_WIRE_5, 0, 0) @[PTW.scala 261:59]
    s2_entry_vec_0.r <= _T_95 @[PTW.scala 261:59]
    node _T_96 = bits(_WIRE_5, 1, 1) @[PTW.scala 261:59]
    s2_entry_vec_0.w <= _T_96 @[PTW.scala 261:59]
    node _T_97 = bits(_WIRE_5, 2, 2) @[PTW.scala 261:59]
    s2_entry_vec_0.x <= _T_97 @[PTW.scala 261:59]
    node _T_98 = bits(_WIRE_5, 3, 3) @[PTW.scala 261:59]
    s2_entry_vec_0.u <= _T_98 @[PTW.scala 261:59]
    node _T_99 = bits(_WIRE_5, 4, 4) @[PTW.scala 261:59]
    s2_entry_vec_0.a <= _T_99 @[PTW.scala 261:59]
    node _T_100 = bits(_WIRE_5, 5, 5) @[PTW.scala 261:59]
    s2_entry_vec_0.d <= _T_100 @[PTW.scala 261:59]
    node _T_101 = bits(_WIRE_5, 25, 6) @[PTW.scala 261:59]
    s2_entry_vec_0.ppn <= _T_101 @[PTW.scala 261:59]
    node _T_102 = bits(_WIRE_5, 35, 26) @[PTW.scala 261:59]
    s2_entry_vec_0.tag <= _T_102 @[PTW.scala 261:59]
    node _T_103 = bits(s2_valid_vec, 0, 0) @[PTW.scala 262:77]
    node _T_104 = eq(r_tag, s2_entry_vec_0.tag) @[PTW.scala 262:93]
    node s2_hit_vec_0 = and(_T_103, _T_104) @[PTW.scala 262:83]
    node s2_hit = and(s2_valid, s2_hit_vec_0) @[PTW.scala 263:27]
    node _io_dpath_perf_l2miss_T = eq(s2_hit_vec_0, UInt<1>("h00")) @[PTW.scala 264:41]
    node _io_dpath_perf_l2miss_T_1 = and(s2_valid, _io_dpath_perf_l2miss_T) @[PTW.scala 264:38]
    io.dpath.perf.l2miss <= _io_dpath_perf_l2miss_T_1 @[PTW.scala 264:26]
    io.dpath.perf.l2hit <= s2_hit @[PTW.scala 265:25]
    when s2_hit : @[PTW.scala 266:19]
      state_vec[r_idx] <= UInt<1>("h00") @[Replacement.scala 308:20]
      node _T_105 = eq(s2_hit_vec_0, UInt<1>("h01")) @[PTW.scala 268:36]
      node _T_106 = or(_T_105, s2_error) @[PTW.scala 268:45]
      node _T_107 = bits(reset, 0, 0) @[PTW.scala 268:13]
      node _T_108 = or(_T_106, _T_107) @[PTW.scala 268:13]
      node _T_109 = eq(_T_108, UInt<1>("h00")) @[PTW.scala 268:13]
      when _T_109 : @[PTW.scala 268:13]
        printf(clock, UInt<1>(1), "Assertion failed: L2 TLB multi-hit\n    at PTW.scala:268 assert((PopCount(s2_hit_vec) === 1.U) || s2_error, \"L2 TLB multi-hit\")\n") @[PTW.scala 268:13]
        stop(clock, UInt<1>(1), 1) @[PTW.scala 268:13]
        skip @[PTW.scala 268:13]
      skip @[PTW.scala 266:19]
    wire s2_pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>} @[PTW.scala 271:22]
    s2_pte is invalid @[PTW.scala 271:22]
    s2_pte <- s2_entry_vec_0 @[PTW.scala 272:14]
    s2_pte.g <= s2_g_vec[0] @[PTW.scala 273:14]
    s2_pte.v <= UInt<1>("h01") @[PTW.scala 274:14]
    node _T_110 = and(s2_hit, s2_hit_vec_0) @[PTW.scala 277:21]
    node _invalidated_T = neq(state, UInt<3>("h00")) @[PTW.scala 285:65]
    node _invalidated_T_1 = and(invalidated, _invalidated_T) @[PTW.scala 285:56]
    node _invalidated_T_2 = or(io.dpath.sfence.valid, _invalidated_T_1) @[PTW.scala 285:40]
    invalidated <= _invalidated_T_2 @[PTW.scala 285:15]
    node _io_mem_req_valid_T = eq(state, UInt<3>("h01")) @[PTW.scala 287:29]
    node _io_mem_req_valid_T_1 = eq(state, UInt<3>("h03")) @[PTW.scala 287:48]
    node _io_mem_req_valid_T_2 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_1) @[PTW.scala 287:39]
    io.mem.req.valid <= _io_mem_req_valid_T_2 @[PTW.scala 287:20]
    io.mem.req.bits.phys <= UInt<1>("h01") @[PTW.scala 288:24]
    io.mem.req.bits.cmd <= UInt<1>("h00") @[PTW.scala 289:24]
    io.mem.req.bits.size <= UInt<2>("h02") @[PTW.scala 290:24]
    io.mem.req.bits.signed <= UInt<1>("h00") @[PTW.scala 291:26]
    io.mem.req.bits.addr <= UInt<1>("h00") @[PTW.scala 292:24]
    io.mem.req.bits.dprv <= UInt<1>("h01") @[PTW.scala 294:24]
    node _io_mem_s1_kill_T = neq(state, UInt<3>("h02")) @[PTW.scala 295:37]
    node _io_mem_s1_kill_T_1 = or(s2_hit, _io_mem_s1_kill_T) @[PTW.scala 295:28]
    io.mem.s1_kill <= _io_mem_s1_kill_T_1 @[PTW.scala 295:18]
    io.mem.s2_kill <= UInt<1>("h00") @[PTW.scala 296:18]
    node _pmaPgLevelHomogeneous_T = xor(UInt<1>("h00"), UInt<28>("h0c000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_1 = cvt(_pmaPgLevelHomogeneous_T) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_2 = and(_pmaPgLevelHomogeneous_T_1, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_3 = asSInt(_pmaPgLevelHomogeneous_T_2) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_4 = eq(_pmaPgLevelHomogeneous_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node pmaPgLevelHomogeneous_0 = or(UInt<1>("h00"), _pmaPgLevelHomogeneous_T_4) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_5 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _pmaPgLevelHomogeneous_T_6 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _pmaPgLevelHomogeneous_T_7 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _pmaPgLevelHomogeneous_T_8 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _pmaPgLevelHomogeneous_T_9 = xor(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_10 = cvt(_pmaPgLevelHomogeneous_T_9) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_11 = and(_pmaPgLevelHomogeneous_T_10, asSInt(UInt<16>("h0b000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_12 = asSInt(_pmaPgLevelHomogeneous_T_11) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_13 = eq(_pmaPgLevelHomogeneous_T_12, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_14 = xor(UInt<1>("h00"), UInt<14>("h03000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_15 = cvt(_pmaPgLevelHomogeneous_T_14) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_16 = and(_pmaPgLevelHomogeneous_T_15, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_17 = asSInt(_pmaPgLevelHomogeneous_T_16) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_18 = eq(_pmaPgLevelHomogeneous_T_17, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_19 = xor(UInt<1>("h00"), UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_20 = cvt(_pmaPgLevelHomogeneous_T_19) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_21 = and(_pmaPgLevelHomogeneous_T_20, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_22 = asSInt(_pmaPgLevelHomogeneous_T_21) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_23 = eq(_pmaPgLevelHomogeneous_T_22, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_24 = xor(UInt<1>("h00"), UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_25 = cvt(_pmaPgLevelHomogeneous_T_24) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_26 = and(_pmaPgLevelHomogeneous_T_25, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_27 = asSInt(_pmaPgLevelHomogeneous_T_26) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_28 = eq(_pmaPgLevelHomogeneous_T_27, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_29 = xor(UInt<1>("h00"), UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_30 = cvt(_pmaPgLevelHomogeneous_T_29) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_31 = and(_pmaPgLevelHomogeneous_T_30, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_32 = asSInt(_pmaPgLevelHomogeneous_T_31) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_33 = eq(_pmaPgLevelHomogeneous_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_34 = xor(UInt<1>("h00"), UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_35 = cvt(_pmaPgLevelHomogeneous_T_34) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_36 = and(_pmaPgLevelHomogeneous_T_35, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_37 = asSInt(_pmaPgLevelHomogeneous_T_36) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_38 = eq(_pmaPgLevelHomogeneous_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_39 = xor(UInt<1>("h00"), UInt<28>("h0c000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_40 = cvt(_pmaPgLevelHomogeneous_T_39) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_41 = and(_pmaPgLevelHomogeneous_T_40, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_42 = asSInt(_pmaPgLevelHomogeneous_T_41) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_43 = eq(_pmaPgLevelHomogeneous_T_42, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_44 = xor(UInt<1>("h00"), UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_45 = cvt(_pmaPgLevelHomogeneous_T_44) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_46 = and(_pmaPgLevelHomogeneous_T_45, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_47 = asSInt(_pmaPgLevelHomogeneous_T_46) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_48 = eq(_pmaPgLevelHomogeneous_T_47, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_49 = xor(UInt<1>("h00"), UInt<31>("h054000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_50 = cvt(_pmaPgLevelHomogeneous_T_49) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_51 = and(_pmaPgLevelHomogeneous_T_50, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_52 = asSInt(_pmaPgLevelHomogeneous_T_51) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_53 = eq(_pmaPgLevelHomogeneous_T_52, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_54 = xor(UInt<1>("h00"), UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_55 = cvt(_pmaPgLevelHomogeneous_T_54) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_56 = and(_pmaPgLevelHomogeneous_T_55, asSInt(UInt<15>("h04000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_57 = asSInt(_pmaPgLevelHomogeneous_T_56) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_58 = eq(_pmaPgLevelHomogeneous_T_57, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_59 = or(UInt<1>("h00"), _pmaPgLevelHomogeneous_T_13) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_60 = or(_pmaPgLevelHomogeneous_T_59, _pmaPgLevelHomogeneous_T_18) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_61 = or(_pmaPgLevelHomogeneous_T_60, _pmaPgLevelHomogeneous_T_23) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_62 = or(_pmaPgLevelHomogeneous_T_61, _pmaPgLevelHomogeneous_T_28) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_63 = or(_pmaPgLevelHomogeneous_T_62, _pmaPgLevelHomogeneous_T_33) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_64 = or(_pmaPgLevelHomogeneous_T_63, _pmaPgLevelHomogeneous_T_38) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_65 = or(_pmaPgLevelHomogeneous_T_64, _pmaPgLevelHomogeneous_T_43) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_66 = or(_pmaPgLevelHomogeneous_T_65, _pmaPgLevelHomogeneous_T_48) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_67 = or(_pmaPgLevelHomogeneous_T_66, _pmaPgLevelHomogeneous_T_53) @[TLBPermissions.scala 98:65]
    node pmaPgLevelHomogeneous_1 = or(_pmaPgLevelHomogeneous_T_67, _pmaPgLevelHomogeneous_T_58) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_68 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _pmaPgLevelHomogeneous_T_69 = xor(UInt<1>("h00"), UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_70 = cvt(_pmaPgLevelHomogeneous_T_69) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_71 = and(_pmaPgLevelHomogeneous_T_70, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_72 = asSInt(_pmaPgLevelHomogeneous_T_71) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_73 = eq(_pmaPgLevelHomogeneous_T_72, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_74 = xor(UInt<1>("h00"), UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_75 = cvt(_pmaPgLevelHomogeneous_T_74) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_76 = and(_pmaPgLevelHomogeneous_T_75, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_77 = asSInt(_pmaPgLevelHomogeneous_T_76) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_78 = eq(_pmaPgLevelHomogeneous_T_77, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_79 = or(UInt<1>("h00"), _pmaPgLevelHomogeneous_T_73) @[TLBPermissions.scala 84:66]
    node _pmaPgLevelHomogeneous_T_80 = or(_pmaPgLevelHomogeneous_T_79, _pmaPgLevelHomogeneous_T_78) @[TLBPermissions.scala 84:66]
    node _pmaPgLevelHomogeneous_T_81 = eq(_pmaPgLevelHomogeneous_T_80, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _pmaPgLevelHomogeneous_T_82 = xor(UInt<1>("h00"), UInt<1>("h00")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_83 = cvt(_pmaPgLevelHomogeneous_T_82) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_84 = and(_pmaPgLevelHomogeneous_T_83, asSInt(UInt<33>("h086134000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_85 = asSInt(_pmaPgLevelHomogeneous_T_84) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_86 = eq(_pmaPgLevelHomogeneous_T_85, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_87 = xor(UInt<1>("h00"), UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_88 = cvt(_pmaPgLevelHomogeneous_T_87) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_89 = and(_pmaPgLevelHomogeneous_T_88, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_90 = asSInt(_pmaPgLevelHomogeneous_T_89) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_91 = eq(_pmaPgLevelHomogeneous_T_90, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_92 = xor(UInt<1>("h00"), UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_93 = cvt(_pmaPgLevelHomogeneous_T_92) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_94 = and(_pmaPgLevelHomogeneous_T_93, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_95 = asSInt(_pmaPgLevelHomogeneous_T_94) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_96 = eq(_pmaPgLevelHomogeneous_T_95, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_97 = xor(UInt<1>("h00"), UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_98 = cvt(_pmaPgLevelHomogeneous_T_97) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_99 = and(_pmaPgLevelHomogeneous_T_98, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_100 = asSInt(_pmaPgLevelHomogeneous_T_99) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_101 = eq(_pmaPgLevelHomogeneous_T_100, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_102 = or(UInt<1>("h00"), _pmaPgLevelHomogeneous_T_86) @[TLBPermissions.scala 82:66]
    node _pmaPgLevelHomogeneous_T_103 = or(_pmaPgLevelHomogeneous_T_102, _pmaPgLevelHomogeneous_T_91) @[TLBPermissions.scala 82:66]
    node _pmaPgLevelHomogeneous_T_104 = or(_pmaPgLevelHomogeneous_T_103, _pmaPgLevelHomogeneous_T_96) @[TLBPermissions.scala 82:66]
    node _pmaPgLevelHomogeneous_T_105 = or(_pmaPgLevelHomogeneous_T_104, _pmaPgLevelHomogeneous_T_101) @[TLBPermissions.scala 82:66]
    node _pmaPgLevelHomogeneous_T_106 = xor(UInt<1>("h00"), UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_107 = cvt(_pmaPgLevelHomogeneous_T_106) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_108 = and(_pmaPgLevelHomogeneous_T_107, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_109 = asSInt(_pmaPgLevelHomogeneous_T_108) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_110 = eq(_pmaPgLevelHomogeneous_T_109, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_111 = xor(UInt<1>("h00"), UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_112 = cvt(_pmaPgLevelHomogeneous_T_111) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_113 = and(_pmaPgLevelHomogeneous_T_112, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_114 = asSInt(_pmaPgLevelHomogeneous_T_113) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_115 = eq(_pmaPgLevelHomogeneous_T_114, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_116 = or(UInt<1>("h00"), _pmaPgLevelHomogeneous_T_110) @[TLBPermissions.scala 84:66]
    node _pmaPgLevelHomogeneous_T_117 = or(_pmaPgLevelHomogeneous_T_116, _pmaPgLevelHomogeneous_T_115) @[TLBPermissions.scala 84:66]
    node _pmaPgLevelHomogeneous_T_118 = eq(_pmaPgLevelHomogeneous_T_117, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _pmaPgLevelHomogeneous_T_119 = xor(UInt<1>("h00"), UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_120 = cvt(_pmaPgLevelHomogeneous_T_119) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_121 = and(_pmaPgLevelHomogeneous_T_120, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_122 = asSInt(_pmaPgLevelHomogeneous_T_121) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_123 = eq(_pmaPgLevelHomogeneous_T_122, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_124 = xor(UInt<1>("h00"), UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_125 = cvt(_pmaPgLevelHomogeneous_T_124) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_126 = and(_pmaPgLevelHomogeneous_T_125, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_127 = asSInt(_pmaPgLevelHomogeneous_T_126) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_128 = eq(_pmaPgLevelHomogeneous_T_127, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_129 = or(UInt<1>("h00"), _pmaPgLevelHomogeneous_T_123) @[TLBPermissions.scala 84:66]
    node _pmaPgLevelHomogeneous_T_130 = or(_pmaPgLevelHomogeneous_T_129, _pmaPgLevelHomogeneous_T_128) @[TLBPermissions.scala 84:66]
    node _pmaPgLevelHomogeneous_T_131 = eq(_pmaPgLevelHomogeneous_T_130, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _pmaHomogeneous_T = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmaHomogeneous = mux(_pmaHomogeneous_T, pmaPgLevelHomogeneous_1, pmaPgLevelHomogeneous_0) @[package.scala 32:76]
    node _pmpHomogeneous_T = shr(UInt<1>("h00"), 12) @[PTW.scala 309:79]
    node _pmpHomogeneous_T_1 = shl(_pmpHomogeneous_T, 12) @[PTW.scala 309:92]
    wire _pmpHomogeneous_WIRE : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 139:40]
    _pmpHomogeneous_WIRE.mask <= UInt<32>("h00") @[PMP.scala 139:40]
    _pmpHomogeneous_WIRE.addr <= UInt<30>("h00") @[PMP.scala 139:40]
    _pmpHomogeneous_WIRE.cfg.r <= UInt<1>("h00") @[PMP.scala 139:40]
    _pmpHomogeneous_WIRE.cfg.w <= UInt<1>("h00") @[PMP.scala 139:40]
    _pmpHomogeneous_WIRE.cfg.x <= UInt<1>("h00") @[PMP.scala 139:40]
    _pmpHomogeneous_WIRE.cfg.a <= UInt<2>("h00") @[PMP.scala 139:40]
    _pmpHomogeneous_WIRE.cfg.res <= UInt<2>("h00") @[PMP.scala 139:40]
    _pmpHomogeneous_WIRE.cfg.l <= UInt<1>("h00") @[PMP.scala 139:40]
    node _pmpHomogeneous_T_2 = bits(io.dpath.pmp[0].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T = bits(io.dpath.pmp[0].mask, 21, 21) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_1 = bits(io.dpath.pmp[0].mask, 11, 11) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_2 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_maskHomogeneous = mux(_pmpHomogeneous_maskHomogeneous_T_2, _pmpHomogeneous_maskHomogeneous_T_1, _pmpHomogeneous_maskHomogeneous_T) @[package.scala 32:76]
    node _pmpHomogeneous_T_3 = shl(io.dpath.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_4 = not(_pmpHomogeneous_T_3) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_5 = or(_pmpHomogeneous_T_4, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_6 = not(_pmpHomogeneous_T_5) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_7 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_6) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_8 = shr(_pmpHomogeneous_T_7, 22) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_9 = neq(_pmpHomogeneous_T_8, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_10 = shl(io.dpath.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_11 = not(_pmpHomogeneous_T_10) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_12 = or(_pmpHomogeneous_T_11, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_13 = not(_pmpHomogeneous_T_12) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_14 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_13) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_15 = shr(_pmpHomogeneous_T_14, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_16 = neq(_pmpHomogeneous_T_15, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_17 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node _pmpHomogeneous_T_18 = mux(_pmpHomogeneous_T_17, _pmpHomogeneous_T_16, _pmpHomogeneous_T_9) @[package.scala 32:76]
    node _pmpHomogeneous_T_19 = or(pmpHomogeneous_maskHomogeneous, _pmpHomogeneous_T_18) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_20 = bits(io.dpath.pmp[0].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_21 = eq(_pmpHomogeneous_T_20, UInt<1>("h00")) @[PMP.scala 120:45]
    node _pmpHomogeneous_beginsAfterLower_T = shl(_pmpHomogeneous_WIRE.addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterLower_T_1 = not(_pmpHomogeneous_beginsAfterLower_T) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterLower_T_2 = or(_pmpHomogeneous_beginsAfterLower_T_1, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterLower_T_3 = not(_pmpHomogeneous_beginsAfterLower_T_2) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterLower_T_4 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterLower_T_3) @[PMP.scala 108:32]
    node pmpHomogeneous_beginsAfterLower = eq(_pmpHomogeneous_beginsAfterLower_T_4, UInt<1>("h00")) @[PMP.scala 108:28]
    node _pmpHomogeneous_beginsAfterUpper_T = shl(io.dpath.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterUpper_T_1 = not(_pmpHomogeneous_beginsAfterUpper_T) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterUpper_T_2 = or(_pmpHomogeneous_beginsAfterUpper_T_1, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterUpper_T_3 = not(_pmpHomogeneous_beginsAfterUpper_T_2) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterUpper_T_4 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterUpper_T_3) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper = eq(_pmpHomogeneous_beginsAfterUpper_T_4, UInt<1>("h00")) @[PMP.scala 109:28]
    node _pmpHomogeneous_pgMask_T = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_pgMask = mux(_pmpHomogeneous_pgMask_T, UInt<32>("h0fffff000"), UInt<32>("h0ffc00000")) @[package.scala 32:76]
    node _pmpHomogeneous_endsBeforeLower_T = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T_1 = shl(_pmpHomogeneous_WIRE.addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeLower_T_2 = not(_pmpHomogeneous_endsBeforeLower_T_1) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeLower_T_3 = or(_pmpHomogeneous_endsBeforeLower_T_2, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeLower_T_4 = not(_pmpHomogeneous_endsBeforeLower_T_3) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeLower_T_5 = and(_pmpHomogeneous_endsBeforeLower_T_4, pmpHomogeneous_pgMask) @[PMP.scala 112:58]
    node pmpHomogeneous_endsBeforeLower = lt(_pmpHomogeneous_endsBeforeLower_T, _pmpHomogeneous_endsBeforeLower_T_5) @[PMP.scala 112:40]
    node _pmpHomogeneous_endsBeforeUpper_T = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask) @[PMP.scala 113:30]
    node _pmpHomogeneous_endsBeforeUpper_T_1 = shl(io.dpath.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeUpper_T_2 = not(_pmpHomogeneous_endsBeforeUpper_T_1) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeUpper_T_3 = or(_pmpHomogeneous_endsBeforeUpper_T_2, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeUpper_T_4 = not(_pmpHomogeneous_endsBeforeUpper_T_3) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeUpper_T_5 = and(_pmpHomogeneous_endsBeforeUpper_T_4, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node pmpHomogeneous_endsBeforeUpper = lt(_pmpHomogeneous_endsBeforeUpper_T, _pmpHomogeneous_endsBeforeUpper_T_5) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_22 = or(pmpHomogeneous_endsBeforeLower, pmpHomogeneous_beginsAfterUpper) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_23 = and(pmpHomogeneous_beginsAfterLower, pmpHomogeneous_endsBeforeUpper) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_24 = or(_pmpHomogeneous_T_22, _pmpHomogeneous_T_23) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_25 = or(_pmpHomogeneous_T_21, _pmpHomogeneous_T_24) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_26 = mux(_pmpHomogeneous_T_2, _pmpHomogeneous_T_19, _pmpHomogeneous_T_25) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_27 = and(UInt<1>("h01"), _pmpHomogeneous_T_26) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_28 = bits(io.dpath.pmp[1].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_3 = bits(io.dpath.pmp[1].mask, 21, 21) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_4 = bits(io.dpath.pmp[1].mask, 11, 11) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_5 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_maskHomogeneous_1 = mux(_pmpHomogeneous_maskHomogeneous_T_5, _pmpHomogeneous_maskHomogeneous_T_4, _pmpHomogeneous_maskHomogeneous_T_3) @[package.scala 32:76]
    node _pmpHomogeneous_T_29 = shl(io.dpath.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_30 = not(_pmpHomogeneous_T_29) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_31 = or(_pmpHomogeneous_T_30, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_32 = not(_pmpHomogeneous_T_31) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_33 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_32) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_34 = shr(_pmpHomogeneous_T_33, 22) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_35 = neq(_pmpHomogeneous_T_34, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_36 = shl(io.dpath.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_37 = not(_pmpHomogeneous_T_36) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_38 = or(_pmpHomogeneous_T_37, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_39 = not(_pmpHomogeneous_T_38) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_40 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_39) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_41 = shr(_pmpHomogeneous_T_40, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_42 = neq(_pmpHomogeneous_T_41, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_43 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node _pmpHomogeneous_T_44 = mux(_pmpHomogeneous_T_43, _pmpHomogeneous_T_42, _pmpHomogeneous_T_35) @[package.scala 32:76]
    node _pmpHomogeneous_T_45 = or(pmpHomogeneous_maskHomogeneous_1, _pmpHomogeneous_T_44) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_46 = bits(io.dpath.pmp[1].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_47 = eq(_pmpHomogeneous_T_46, UInt<1>("h00")) @[PMP.scala 120:45]
    node _pmpHomogeneous_beginsAfterLower_T_5 = shl(io.dpath.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterLower_T_6 = not(_pmpHomogeneous_beginsAfterLower_T_5) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterLower_T_7 = or(_pmpHomogeneous_beginsAfterLower_T_6, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterLower_T_8 = not(_pmpHomogeneous_beginsAfterLower_T_7) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterLower_T_9 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterLower_T_8) @[PMP.scala 108:32]
    node pmpHomogeneous_beginsAfterLower_1 = eq(_pmpHomogeneous_beginsAfterLower_T_9, UInt<1>("h00")) @[PMP.scala 108:28]
    node _pmpHomogeneous_beginsAfterUpper_T_5 = shl(io.dpath.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterUpper_T_6 = not(_pmpHomogeneous_beginsAfterUpper_T_5) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterUpper_T_7 = or(_pmpHomogeneous_beginsAfterUpper_T_6, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterUpper_T_8 = not(_pmpHomogeneous_beginsAfterUpper_T_7) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterUpper_T_9 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterUpper_T_8) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_1 = eq(_pmpHomogeneous_beginsAfterUpper_T_9, UInt<1>("h00")) @[PMP.scala 109:28]
    node _pmpHomogeneous_pgMask_T_1 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_pgMask_1 = mux(_pmpHomogeneous_pgMask_T_1, UInt<32>("h0fffff000"), UInt<32>("h0ffc00000")) @[package.scala 32:76]
    node _pmpHomogeneous_endsBeforeLower_T_6 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_1) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T_7 = shl(io.dpath.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeLower_T_8 = not(_pmpHomogeneous_endsBeforeLower_T_7) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeLower_T_9 = or(_pmpHomogeneous_endsBeforeLower_T_8, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeLower_T_10 = not(_pmpHomogeneous_endsBeforeLower_T_9) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeLower_T_11 = and(_pmpHomogeneous_endsBeforeLower_T_10, pmpHomogeneous_pgMask_1) @[PMP.scala 112:58]
    node pmpHomogeneous_endsBeforeLower_1 = lt(_pmpHomogeneous_endsBeforeLower_T_6, _pmpHomogeneous_endsBeforeLower_T_11) @[PMP.scala 112:40]
    node _pmpHomogeneous_endsBeforeUpper_T_6 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_1) @[PMP.scala 113:30]
    node _pmpHomogeneous_endsBeforeUpper_T_7 = shl(io.dpath.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeUpper_T_8 = not(_pmpHomogeneous_endsBeforeUpper_T_7) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeUpper_T_9 = or(_pmpHomogeneous_endsBeforeUpper_T_8, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeUpper_T_10 = not(_pmpHomogeneous_endsBeforeUpper_T_9) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeUpper_T_11 = and(_pmpHomogeneous_endsBeforeUpper_T_10, pmpHomogeneous_pgMask_1) @[PMP.scala 113:53]
    node pmpHomogeneous_endsBeforeUpper_1 = lt(_pmpHomogeneous_endsBeforeUpper_T_6, _pmpHomogeneous_endsBeforeUpper_T_11) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_48 = or(pmpHomogeneous_endsBeforeLower_1, pmpHomogeneous_beginsAfterUpper_1) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_49 = and(pmpHomogeneous_beginsAfterLower_1, pmpHomogeneous_endsBeforeUpper_1) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_50 = or(_pmpHomogeneous_T_48, _pmpHomogeneous_T_49) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_51 = or(_pmpHomogeneous_T_47, _pmpHomogeneous_T_50) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_52 = mux(_pmpHomogeneous_T_28, _pmpHomogeneous_T_45, _pmpHomogeneous_T_51) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_53 = and(_pmpHomogeneous_T_27, _pmpHomogeneous_T_52) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_54 = bits(io.dpath.pmp[2].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_6 = bits(io.dpath.pmp[2].mask, 21, 21) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_7 = bits(io.dpath.pmp[2].mask, 11, 11) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_8 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_maskHomogeneous_2 = mux(_pmpHomogeneous_maskHomogeneous_T_8, _pmpHomogeneous_maskHomogeneous_T_7, _pmpHomogeneous_maskHomogeneous_T_6) @[package.scala 32:76]
    node _pmpHomogeneous_T_55 = shl(io.dpath.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_56 = not(_pmpHomogeneous_T_55) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_57 = or(_pmpHomogeneous_T_56, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_58 = not(_pmpHomogeneous_T_57) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_59 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_58) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_60 = shr(_pmpHomogeneous_T_59, 22) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_61 = neq(_pmpHomogeneous_T_60, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_62 = shl(io.dpath.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_63 = not(_pmpHomogeneous_T_62) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_64 = or(_pmpHomogeneous_T_63, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_65 = not(_pmpHomogeneous_T_64) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_66 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_65) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_67 = shr(_pmpHomogeneous_T_66, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_68 = neq(_pmpHomogeneous_T_67, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_69 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node _pmpHomogeneous_T_70 = mux(_pmpHomogeneous_T_69, _pmpHomogeneous_T_68, _pmpHomogeneous_T_61) @[package.scala 32:76]
    node _pmpHomogeneous_T_71 = or(pmpHomogeneous_maskHomogeneous_2, _pmpHomogeneous_T_70) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_72 = bits(io.dpath.pmp[2].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_73 = eq(_pmpHomogeneous_T_72, UInt<1>("h00")) @[PMP.scala 120:45]
    node _pmpHomogeneous_beginsAfterLower_T_10 = shl(io.dpath.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterLower_T_11 = not(_pmpHomogeneous_beginsAfterLower_T_10) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterLower_T_12 = or(_pmpHomogeneous_beginsAfterLower_T_11, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterLower_T_13 = not(_pmpHomogeneous_beginsAfterLower_T_12) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterLower_T_14 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterLower_T_13) @[PMP.scala 108:32]
    node pmpHomogeneous_beginsAfterLower_2 = eq(_pmpHomogeneous_beginsAfterLower_T_14, UInt<1>("h00")) @[PMP.scala 108:28]
    node _pmpHomogeneous_beginsAfterUpper_T_10 = shl(io.dpath.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterUpper_T_11 = not(_pmpHomogeneous_beginsAfterUpper_T_10) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterUpper_T_12 = or(_pmpHomogeneous_beginsAfterUpper_T_11, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterUpper_T_13 = not(_pmpHomogeneous_beginsAfterUpper_T_12) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterUpper_T_14 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterUpper_T_13) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_2 = eq(_pmpHomogeneous_beginsAfterUpper_T_14, UInt<1>("h00")) @[PMP.scala 109:28]
    node _pmpHomogeneous_pgMask_T_2 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_pgMask_2 = mux(_pmpHomogeneous_pgMask_T_2, UInt<32>("h0fffff000"), UInt<32>("h0ffc00000")) @[package.scala 32:76]
    node _pmpHomogeneous_endsBeforeLower_T_12 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_2) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T_13 = shl(io.dpath.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeLower_T_14 = not(_pmpHomogeneous_endsBeforeLower_T_13) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeLower_T_15 = or(_pmpHomogeneous_endsBeforeLower_T_14, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeLower_T_16 = not(_pmpHomogeneous_endsBeforeLower_T_15) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeLower_T_17 = and(_pmpHomogeneous_endsBeforeLower_T_16, pmpHomogeneous_pgMask_2) @[PMP.scala 112:58]
    node pmpHomogeneous_endsBeforeLower_2 = lt(_pmpHomogeneous_endsBeforeLower_T_12, _pmpHomogeneous_endsBeforeLower_T_17) @[PMP.scala 112:40]
    node _pmpHomogeneous_endsBeforeUpper_T_12 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_2) @[PMP.scala 113:30]
    node _pmpHomogeneous_endsBeforeUpper_T_13 = shl(io.dpath.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeUpper_T_14 = not(_pmpHomogeneous_endsBeforeUpper_T_13) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeUpper_T_15 = or(_pmpHomogeneous_endsBeforeUpper_T_14, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeUpper_T_16 = not(_pmpHomogeneous_endsBeforeUpper_T_15) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeUpper_T_17 = and(_pmpHomogeneous_endsBeforeUpper_T_16, pmpHomogeneous_pgMask_2) @[PMP.scala 113:53]
    node pmpHomogeneous_endsBeforeUpper_2 = lt(_pmpHomogeneous_endsBeforeUpper_T_12, _pmpHomogeneous_endsBeforeUpper_T_17) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_74 = or(pmpHomogeneous_endsBeforeLower_2, pmpHomogeneous_beginsAfterUpper_2) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_75 = and(pmpHomogeneous_beginsAfterLower_2, pmpHomogeneous_endsBeforeUpper_2) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_76 = or(_pmpHomogeneous_T_74, _pmpHomogeneous_T_75) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_77 = or(_pmpHomogeneous_T_73, _pmpHomogeneous_T_76) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_78 = mux(_pmpHomogeneous_T_54, _pmpHomogeneous_T_71, _pmpHomogeneous_T_77) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_79 = and(_pmpHomogeneous_T_53, _pmpHomogeneous_T_78) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_80 = bits(io.dpath.pmp[3].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_9 = bits(io.dpath.pmp[3].mask, 21, 21) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_10 = bits(io.dpath.pmp[3].mask, 11, 11) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_11 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_maskHomogeneous_3 = mux(_pmpHomogeneous_maskHomogeneous_T_11, _pmpHomogeneous_maskHomogeneous_T_10, _pmpHomogeneous_maskHomogeneous_T_9) @[package.scala 32:76]
    node _pmpHomogeneous_T_81 = shl(io.dpath.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_82 = not(_pmpHomogeneous_T_81) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_83 = or(_pmpHomogeneous_T_82, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_84 = not(_pmpHomogeneous_T_83) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_85 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_84) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_86 = shr(_pmpHomogeneous_T_85, 22) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_87 = neq(_pmpHomogeneous_T_86, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_88 = shl(io.dpath.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_89 = not(_pmpHomogeneous_T_88) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_90 = or(_pmpHomogeneous_T_89, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_91 = not(_pmpHomogeneous_T_90) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_92 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_91) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_93 = shr(_pmpHomogeneous_T_92, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_94 = neq(_pmpHomogeneous_T_93, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_95 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node _pmpHomogeneous_T_96 = mux(_pmpHomogeneous_T_95, _pmpHomogeneous_T_94, _pmpHomogeneous_T_87) @[package.scala 32:76]
    node _pmpHomogeneous_T_97 = or(pmpHomogeneous_maskHomogeneous_3, _pmpHomogeneous_T_96) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_98 = bits(io.dpath.pmp[3].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_99 = eq(_pmpHomogeneous_T_98, UInt<1>("h00")) @[PMP.scala 120:45]
    node _pmpHomogeneous_beginsAfterLower_T_15 = shl(io.dpath.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterLower_T_16 = not(_pmpHomogeneous_beginsAfterLower_T_15) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterLower_T_17 = or(_pmpHomogeneous_beginsAfterLower_T_16, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterLower_T_18 = not(_pmpHomogeneous_beginsAfterLower_T_17) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterLower_T_19 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterLower_T_18) @[PMP.scala 108:32]
    node pmpHomogeneous_beginsAfterLower_3 = eq(_pmpHomogeneous_beginsAfterLower_T_19, UInt<1>("h00")) @[PMP.scala 108:28]
    node _pmpHomogeneous_beginsAfterUpper_T_15 = shl(io.dpath.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterUpper_T_16 = not(_pmpHomogeneous_beginsAfterUpper_T_15) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterUpper_T_17 = or(_pmpHomogeneous_beginsAfterUpper_T_16, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterUpper_T_18 = not(_pmpHomogeneous_beginsAfterUpper_T_17) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterUpper_T_19 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterUpper_T_18) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_3 = eq(_pmpHomogeneous_beginsAfterUpper_T_19, UInt<1>("h00")) @[PMP.scala 109:28]
    node _pmpHomogeneous_pgMask_T_3 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_pgMask_3 = mux(_pmpHomogeneous_pgMask_T_3, UInt<32>("h0fffff000"), UInt<32>("h0ffc00000")) @[package.scala 32:76]
    node _pmpHomogeneous_endsBeforeLower_T_18 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_3) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T_19 = shl(io.dpath.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeLower_T_20 = not(_pmpHomogeneous_endsBeforeLower_T_19) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeLower_T_21 = or(_pmpHomogeneous_endsBeforeLower_T_20, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeLower_T_22 = not(_pmpHomogeneous_endsBeforeLower_T_21) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeLower_T_23 = and(_pmpHomogeneous_endsBeforeLower_T_22, pmpHomogeneous_pgMask_3) @[PMP.scala 112:58]
    node pmpHomogeneous_endsBeforeLower_3 = lt(_pmpHomogeneous_endsBeforeLower_T_18, _pmpHomogeneous_endsBeforeLower_T_23) @[PMP.scala 112:40]
    node _pmpHomogeneous_endsBeforeUpper_T_18 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_3) @[PMP.scala 113:30]
    node _pmpHomogeneous_endsBeforeUpper_T_19 = shl(io.dpath.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeUpper_T_20 = not(_pmpHomogeneous_endsBeforeUpper_T_19) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeUpper_T_21 = or(_pmpHomogeneous_endsBeforeUpper_T_20, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeUpper_T_22 = not(_pmpHomogeneous_endsBeforeUpper_T_21) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeUpper_T_23 = and(_pmpHomogeneous_endsBeforeUpper_T_22, pmpHomogeneous_pgMask_3) @[PMP.scala 113:53]
    node pmpHomogeneous_endsBeforeUpper_3 = lt(_pmpHomogeneous_endsBeforeUpper_T_18, _pmpHomogeneous_endsBeforeUpper_T_23) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_100 = or(pmpHomogeneous_endsBeforeLower_3, pmpHomogeneous_beginsAfterUpper_3) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_101 = and(pmpHomogeneous_beginsAfterLower_3, pmpHomogeneous_endsBeforeUpper_3) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_102 = or(_pmpHomogeneous_T_100, _pmpHomogeneous_T_101) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_103 = or(_pmpHomogeneous_T_99, _pmpHomogeneous_T_102) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_104 = mux(_pmpHomogeneous_T_80, _pmpHomogeneous_T_97, _pmpHomogeneous_T_103) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_105 = and(_pmpHomogeneous_T_79, _pmpHomogeneous_T_104) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_106 = bits(io.dpath.pmp[4].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_12 = bits(io.dpath.pmp[4].mask, 21, 21) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_13 = bits(io.dpath.pmp[4].mask, 11, 11) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_14 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_maskHomogeneous_4 = mux(_pmpHomogeneous_maskHomogeneous_T_14, _pmpHomogeneous_maskHomogeneous_T_13, _pmpHomogeneous_maskHomogeneous_T_12) @[package.scala 32:76]
    node _pmpHomogeneous_T_107 = shl(io.dpath.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_108 = not(_pmpHomogeneous_T_107) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_109 = or(_pmpHomogeneous_T_108, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_110 = not(_pmpHomogeneous_T_109) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_111 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_110) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_112 = shr(_pmpHomogeneous_T_111, 22) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_113 = neq(_pmpHomogeneous_T_112, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_114 = shl(io.dpath.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_115 = not(_pmpHomogeneous_T_114) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_116 = or(_pmpHomogeneous_T_115, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_117 = not(_pmpHomogeneous_T_116) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_118 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_117) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_119 = shr(_pmpHomogeneous_T_118, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_120 = neq(_pmpHomogeneous_T_119, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_121 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node _pmpHomogeneous_T_122 = mux(_pmpHomogeneous_T_121, _pmpHomogeneous_T_120, _pmpHomogeneous_T_113) @[package.scala 32:76]
    node _pmpHomogeneous_T_123 = or(pmpHomogeneous_maskHomogeneous_4, _pmpHomogeneous_T_122) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_124 = bits(io.dpath.pmp[4].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_125 = eq(_pmpHomogeneous_T_124, UInt<1>("h00")) @[PMP.scala 120:45]
    node _pmpHomogeneous_beginsAfterLower_T_20 = shl(io.dpath.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterLower_T_21 = not(_pmpHomogeneous_beginsAfterLower_T_20) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterLower_T_22 = or(_pmpHomogeneous_beginsAfterLower_T_21, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterLower_T_23 = not(_pmpHomogeneous_beginsAfterLower_T_22) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterLower_T_24 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterLower_T_23) @[PMP.scala 108:32]
    node pmpHomogeneous_beginsAfterLower_4 = eq(_pmpHomogeneous_beginsAfterLower_T_24, UInt<1>("h00")) @[PMP.scala 108:28]
    node _pmpHomogeneous_beginsAfterUpper_T_20 = shl(io.dpath.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterUpper_T_21 = not(_pmpHomogeneous_beginsAfterUpper_T_20) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterUpper_T_22 = or(_pmpHomogeneous_beginsAfterUpper_T_21, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterUpper_T_23 = not(_pmpHomogeneous_beginsAfterUpper_T_22) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterUpper_T_24 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterUpper_T_23) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_4 = eq(_pmpHomogeneous_beginsAfterUpper_T_24, UInt<1>("h00")) @[PMP.scala 109:28]
    node _pmpHomogeneous_pgMask_T_4 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_pgMask_4 = mux(_pmpHomogeneous_pgMask_T_4, UInt<32>("h0fffff000"), UInt<32>("h0ffc00000")) @[package.scala 32:76]
    node _pmpHomogeneous_endsBeforeLower_T_24 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_4) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T_25 = shl(io.dpath.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeLower_T_26 = not(_pmpHomogeneous_endsBeforeLower_T_25) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeLower_T_27 = or(_pmpHomogeneous_endsBeforeLower_T_26, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeLower_T_28 = not(_pmpHomogeneous_endsBeforeLower_T_27) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeLower_T_29 = and(_pmpHomogeneous_endsBeforeLower_T_28, pmpHomogeneous_pgMask_4) @[PMP.scala 112:58]
    node pmpHomogeneous_endsBeforeLower_4 = lt(_pmpHomogeneous_endsBeforeLower_T_24, _pmpHomogeneous_endsBeforeLower_T_29) @[PMP.scala 112:40]
    node _pmpHomogeneous_endsBeforeUpper_T_24 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_4) @[PMP.scala 113:30]
    node _pmpHomogeneous_endsBeforeUpper_T_25 = shl(io.dpath.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeUpper_T_26 = not(_pmpHomogeneous_endsBeforeUpper_T_25) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeUpper_T_27 = or(_pmpHomogeneous_endsBeforeUpper_T_26, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeUpper_T_28 = not(_pmpHomogeneous_endsBeforeUpper_T_27) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeUpper_T_29 = and(_pmpHomogeneous_endsBeforeUpper_T_28, pmpHomogeneous_pgMask_4) @[PMP.scala 113:53]
    node pmpHomogeneous_endsBeforeUpper_4 = lt(_pmpHomogeneous_endsBeforeUpper_T_24, _pmpHomogeneous_endsBeforeUpper_T_29) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_126 = or(pmpHomogeneous_endsBeforeLower_4, pmpHomogeneous_beginsAfterUpper_4) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_127 = and(pmpHomogeneous_beginsAfterLower_4, pmpHomogeneous_endsBeforeUpper_4) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_128 = or(_pmpHomogeneous_T_126, _pmpHomogeneous_T_127) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_129 = or(_pmpHomogeneous_T_125, _pmpHomogeneous_T_128) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_130 = mux(_pmpHomogeneous_T_106, _pmpHomogeneous_T_123, _pmpHomogeneous_T_129) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_131 = and(_pmpHomogeneous_T_105, _pmpHomogeneous_T_130) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_132 = bits(io.dpath.pmp[5].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_15 = bits(io.dpath.pmp[5].mask, 21, 21) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_16 = bits(io.dpath.pmp[5].mask, 11, 11) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_17 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_maskHomogeneous_5 = mux(_pmpHomogeneous_maskHomogeneous_T_17, _pmpHomogeneous_maskHomogeneous_T_16, _pmpHomogeneous_maskHomogeneous_T_15) @[package.scala 32:76]
    node _pmpHomogeneous_T_133 = shl(io.dpath.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_134 = not(_pmpHomogeneous_T_133) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_135 = or(_pmpHomogeneous_T_134, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_136 = not(_pmpHomogeneous_T_135) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_137 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_136) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_138 = shr(_pmpHomogeneous_T_137, 22) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_139 = neq(_pmpHomogeneous_T_138, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_140 = shl(io.dpath.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_141 = not(_pmpHomogeneous_T_140) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_142 = or(_pmpHomogeneous_T_141, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_143 = not(_pmpHomogeneous_T_142) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_144 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_143) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_145 = shr(_pmpHomogeneous_T_144, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_146 = neq(_pmpHomogeneous_T_145, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_147 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node _pmpHomogeneous_T_148 = mux(_pmpHomogeneous_T_147, _pmpHomogeneous_T_146, _pmpHomogeneous_T_139) @[package.scala 32:76]
    node _pmpHomogeneous_T_149 = or(pmpHomogeneous_maskHomogeneous_5, _pmpHomogeneous_T_148) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_150 = bits(io.dpath.pmp[5].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_151 = eq(_pmpHomogeneous_T_150, UInt<1>("h00")) @[PMP.scala 120:45]
    node _pmpHomogeneous_beginsAfterLower_T_25 = shl(io.dpath.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterLower_T_26 = not(_pmpHomogeneous_beginsAfterLower_T_25) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterLower_T_27 = or(_pmpHomogeneous_beginsAfterLower_T_26, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterLower_T_28 = not(_pmpHomogeneous_beginsAfterLower_T_27) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterLower_T_29 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterLower_T_28) @[PMP.scala 108:32]
    node pmpHomogeneous_beginsAfterLower_5 = eq(_pmpHomogeneous_beginsAfterLower_T_29, UInt<1>("h00")) @[PMP.scala 108:28]
    node _pmpHomogeneous_beginsAfterUpper_T_25 = shl(io.dpath.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterUpper_T_26 = not(_pmpHomogeneous_beginsAfterUpper_T_25) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterUpper_T_27 = or(_pmpHomogeneous_beginsAfterUpper_T_26, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterUpper_T_28 = not(_pmpHomogeneous_beginsAfterUpper_T_27) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterUpper_T_29 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterUpper_T_28) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_5 = eq(_pmpHomogeneous_beginsAfterUpper_T_29, UInt<1>("h00")) @[PMP.scala 109:28]
    node _pmpHomogeneous_pgMask_T_5 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_pgMask_5 = mux(_pmpHomogeneous_pgMask_T_5, UInt<32>("h0fffff000"), UInt<32>("h0ffc00000")) @[package.scala 32:76]
    node _pmpHomogeneous_endsBeforeLower_T_30 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_5) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T_31 = shl(io.dpath.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeLower_T_32 = not(_pmpHomogeneous_endsBeforeLower_T_31) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeLower_T_33 = or(_pmpHomogeneous_endsBeforeLower_T_32, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeLower_T_34 = not(_pmpHomogeneous_endsBeforeLower_T_33) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeLower_T_35 = and(_pmpHomogeneous_endsBeforeLower_T_34, pmpHomogeneous_pgMask_5) @[PMP.scala 112:58]
    node pmpHomogeneous_endsBeforeLower_5 = lt(_pmpHomogeneous_endsBeforeLower_T_30, _pmpHomogeneous_endsBeforeLower_T_35) @[PMP.scala 112:40]
    node _pmpHomogeneous_endsBeforeUpper_T_30 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_5) @[PMP.scala 113:30]
    node _pmpHomogeneous_endsBeforeUpper_T_31 = shl(io.dpath.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeUpper_T_32 = not(_pmpHomogeneous_endsBeforeUpper_T_31) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeUpper_T_33 = or(_pmpHomogeneous_endsBeforeUpper_T_32, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeUpper_T_34 = not(_pmpHomogeneous_endsBeforeUpper_T_33) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeUpper_T_35 = and(_pmpHomogeneous_endsBeforeUpper_T_34, pmpHomogeneous_pgMask_5) @[PMP.scala 113:53]
    node pmpHomogeneous_endsBeforeUpper_5 = lt(_pmpHomogeneous_endsBeforeUpper_T_30, _pmpHomogeneous_endsBeforeUpper_T_35) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_152 = or(pmpHomogeneous_endsBeforeLower_5, pmpHomogeneous_beginsAfterUpper_5) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_153 = and(pmpHomogeneous_beginsAfterLower_5, pmpHomogeneous_endsBeforeUpper_5) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_154 = or(_pmpHomogeneous_T_152, _pmpHomogeneous_T_153) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_155 = or(_pmpHomogeneous_T_151, _pmpHomogeneous_T_154) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_156 = mux(_pmpHomogeneous_T_132, _pmpHomogeneous_T_149, _pmpHomogeneous_T_155) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_157 = and(_pmpHomogeneous_T_131, _pmpHomogeneous_T_156) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_158 = bits(io.dpath.pmp[6].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_18 = bits(io.dpath.pmp[6].mask, 21, 21) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_19 = bits(io.dpath.pmp[6].mask, 11, 11) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_20 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_maskHomogeneous_6 = mux(_pmpHomogeneous_maskHomogeneous_T_20, _pmpHomogeneous_maskHomogeneous_T_19, _pmpHomogeneous_maskHomogeneous_T_18) @[package.scala 32:76]
    node _pmpHomogeneous_T_159 = shl(io.dpath.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_160 = not(_pmpHomogeneous_T_159) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_161 = or(_pmpHomogeneous_T_160, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_162 = not(_pmpHomogeneous_T_161) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_163 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_162) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_164 = shr(_pmpHomogeneous_T_163, 22) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_165 = neq(_pmpHomogeneous_T_164, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_166 = shl(io.dpath.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_167 = not(_pmpHomogeneous_T_166) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_168 = or(_pmpHomogeneous_T_167, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_169 = not(_pmpHomogeneous_T_168) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_170 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_169) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_171 = shr(_pmpHomogeneous_T_170, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_172 = neq(_pmpHomogeneous_T_171, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_173 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node _pmpHomogeneous_T_174 = mux(_pmpHomogeneous_T_173, _pmpHomogeneous_T_172, _pmpHomogeneous_T_165) @[package.scala 32:76]
    node _pmpHomogeneous_T_175 = or(pmpHomogeneous_maskHomogeneous_6, _pmpHomogeneous_T_174) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_176 = bits(io.dpath.pmp[6].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_177 = eq(_pmpHomogeneous_T_176, UInt<1>("h00")) @[PMP.scala 120:45]
    node _pmpHomogeneous_beginsAfterLower_T_30 = shl(io.dpath.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterLower_T_31 = not(_pmpHomogeneous_beginsAfterLower_T_30) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterLower_T_32 = or(_pmpHomogeneous_beginsAfterLower_T_31, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterLower_T_33 = not(_pmpHomogeneous_beginsAfterLower_T_32) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterLower_T_34 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterLower_T_33) @[PMP.scala 108:32]
    node pmpHomogeneous_beginsAfterLower_6 = eq(_pmpHomogeneous_beginsAfterLower_T_34, UInt<1>("h00")) @[PMP.scala 108:28]
    node _pmpHomogeneous_beginsAfterUpper_T_30 = shl(io.dpath.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterUpper_T_31 = not(_pmpHomogeneous_beginsAfterUpper_T_30) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterUpper_T_32 = or(_pmpHomogeneous_beginsAfterUpper_T_31, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterUpper_T_33 = not(_pmpHomogeneous_beginsAfterUpper_T_32) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterUpper_T_34 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterUpper_T_33) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_6 = eq(_pmpHomogeneous_beginsAfterUpper_T_34, UInt<1>("h00")) @[PMP.scala 109:28]
    node _pmpHomogeneous_pgMask_T_6 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_pgMask_6 = mux(_pmpHomogeneous_pgMask_T_6, UInt<32>("h0fffff000"), UInt<32>("h0ffc00000")) @[package.scala 32:76]
    node _pmpHomogeneous_endsBeforeLower_T_36 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_6) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T_37 = shl(io.dpath.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeLower_T_38 = not(_pmpHomogeneous_endsBeforeLower_T_37) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeLower_T_39 = or(_pmpHomogeneous_endsBeforeLower_T_38, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeLower_T_40 = not(_pmpHomogeneous_endsBeforeLower_T_39) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeLower_T_41 = and(_pmpHomogeneous_endsBeforeLower_T_40, pmpHomogeneous_pgMask_6) @[PMP.scala 112:58]
    node pmpHomogeneous_endsBeforeLower_6 = lt(_pmpHomogeneous_endsBeforeLower_T_36, _pmpHomogeneous_endsBeforeLower_T_41) @[PMP.scala 112:40]
    node _pmpHomogeneous_endsBeforeUpper_T_36 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_6) @[PMP.scala 113:30]
    node _pmpHomogeneous_endsBeforeUpper_T_37 = shl(io.dpath.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeUpper_T_38 = not(_pmpHomogeneous_endsBeforeUpper_T_37) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeUpper_T_39 = or(_pmpHomogeneous_endsBeforeUpper_T_38, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeUpper_T_40 = not(_pmpHomogeneous_endsBeforeUpper_T_39) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeUpper_T_41 = and(_pmpHomogeneous_endsBeforeUpper_T_40, pmpHomogeneous_pgMask_6) @[PMP.scala 113:53]
    node pmpHomogeneous_endsBeforeUpper_6 = lt(_pmpHomogeneous_endsBeforeUpper_T_36, _pmpHomogeneous_endsBeforeUpper_T_41) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_178 = or(pmpHomogeneous_endsBeforeLower_6, pmpHomogeneous_beginsAfterUpper_6) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_179 = and(pmpHomogeneous_beginsAfterLower_6, pmpHomogeneous_endsBeforeUpper_6) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_180 = or(_pmpHomogeneous_T_178, _pmpHomogeneous_T_179) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_181 = or(_pmpHomogeneous_T_177, _pmpHomogeneous_T_180) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_182 = mux(_pmpHomogeneous_T_158, _pmpHomogeneous_T_175, _pmpHomogeneous_T_181) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_183 = and(_pmpHomogeneous_T_157, _pmpHomogeneous_T_182) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_184 = bits(io.dpath.pmp[7].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_21 = bits(io.dpath.pmp[7].mask, 21, 21) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_22 = bits(io.dpath.pmp[7].mask, 11, 11) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_23 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_maskHomogeneous_7 = mux(_pmpHomogeneous_maskHomogeneous_T_23, _pmpHomogeneous_maskHomogeneous_T_22, _pmpHomogeneous_maskHomogeneous_T_21) @[package.scala 32:76]
    node _pmpHomogeneous_T_185 = shl(io.dpath.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_186 = not(_pmpHomogeneous_T_185) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_187 = or(_pmpHomogeneous_T_186, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_188 = not(_pmpHomogeneous_T_187) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_189 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_188) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_190 = shr(_pmpHomogeneous_T_189, 22) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_191 = neq(_pmpHomogeneous_T_190, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_192 = shl(io.dpath.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_193 = not(_pmpHomogeneous_T_192) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_194 = or(_pmpHomogeneous_T_193, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_195 = not(_pmpHomogeneous_T_194) @[PMP.scala 62:27]
    node _pmpHomogeneous_T_196 = xor(_pmpHomogeneous_T_1, _pmpHomogeneous_T_195) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_197 = shr(_pmpHomogeneous_T_196, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_198 = neq(_pmpHomogeneous_T_197, UInt<1>("h00")) @[PMP.scala 100:78]
    node _pmpHomogeneous_T_199 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node _pmpHomogeneous_T_200 = mux(_pmpHomogeneous_T_199, _pmpHomogeneous_T_198, _pmpHomogeneous_T_191) @[package.scala 32:76]
    node _pmpHomogeneous_T_201 = or(pmpHomogeneous_maskHomogeneous_7, _pmpHomogeneous_T_200) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_202 = bits(io.dpath.pmp[7].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_203 = eq(_pmpHomogeneous_T_202, UInt<1>("h00")) @[PMP.scala 120:45]
    node _pmpHomogeneous_beginsAfterLower_T_35 = shl(io.dpath.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterLower_T_36 = not(_pmpHomogeneous_beginsAfterLower_T_35) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterLower_T_37 = or(_pmpHomogeneous_beginsAfterLower_T_36, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterLower_T_38 = not(_pmpHomogeneous_beginsAfterLower_T_37) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterLower_T_39 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterLower_T_38) @[PMP.scala 108:32]
    node pmpHomogeneous_beginsAfterLower_7 = eq(_pmpHomogeneous_beginsAfterLower_T_39, UInt<1>("h00")) @[PMP.scala 108:28]
    node _pmpHomogeneous_beginsAfterUpper_T_35 = shl(io.dpath.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_beginsAfterUpper_T_36 = not(_pmpHomogeneous_beginsAfterUpper_T_35) @[PMP.scala 62:29]
    node _pmpHomogeneous_beginsAfterUpper_T_37 = or(_pmpHomogeneous_beginsAfterUpper_T_36, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_beginsAfterUpper_T_38 = not(_pmpHomogeneous_beginsAfterUpper_T_37) @[PMP.scala 62:27]
    node _pmpHomogeneous_beginsAfterUpper_T_39 = lt(_pmpHomogeneous_T_1, _pmpHomogeneous_beginsAfterUpper_T_38) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_7 = eq(_pmpHomogeneous_beginsAfterUpper_T_39, UInt<1>("h00")) @[PMP.scala 109:28]
    node _pmpHomogeneous_pgMask_T_7 = eq(count, UInt<1>("h01")) @[package.scala 32:86]
    node pmpHomogeneous_pgMask_7 = mux(_pmpHomogeneous_pgMask_T_7, UInt<32>("h0fffff000"), UInt<32>("h0ffc00000")) @[package.scala 32:76]
    node _pmpHomogeneous_endsBeforeLower_T_42 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_7) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T_43 = shl(io.dpath.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeLower_T_44 = not(_pmpHomogeneous_endsBeforeLower_T_43) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeLower_T_45 = or(_pmpHomogeneous_endsBeforeLower_T_44, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeLower_T_46 = not(_pmpHomogeneous_endsBeforeLower_T_45) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeLower_T_47 = and(_pmpHomogeneous_endsBeforeLower_T_46, pmpHomogeneous_pgMask_7) @[PMP.scala 112:58]
    node pmpHomogeneous_endsBeforeLower_7 = lt(_pmpHomogeneous_endsBeforeLower_T_42, _pmpHomogeneous_endsBeforeLower_T_47) @[PMP.scala 112:40]
    node _pmpHomogeneous_endsBeforeUpper_T_42 = and(_pmpHomogeneous_T_1, pmpHomogeneous_pgMask_7) @[PMP.scala 113:30]
    node _pmpHomogeneous_endsBeforeUpper_T_43 = shl(io.dpath.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_endsBeforeUpper_T_44 = not(_pmpHomogeneous_endsBeforeUpper_T_43) @[PMP.scala 62:29]
    node _pmpHomogeneous_endsBeforeUpper_T_45 = or(_pmpHomogeneous_endsBeforeUpper_T_44, UInt<2>("h03")) @[PMP.scala 62:48]
    node _pmpHomogeneous_endsBeforeUpper_T_46 = not(_pmpHomogeneous_endsBeforeUpper_T_45) @[PMP.scala 62:27]
    node _pmpHomogeneous_endsBeforeUpper_T_47 = and(_pmpHomogeneous_endsBeforeUpper_T_46, pmpHomogeneous_pgMask_7) @[PMP.scala 113:53]
    node pmpHomogeneous_endsBeforeUpper_7 = lt(_pmpHomogeneous_endsBeforeUpper_T_42, _pmpHomogeneous_endsBeforeUpper_T_47) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_204 = or(pmpHomogeneous_endsBeforeLower_7, pmpHomogeneous_beginsAfterUpper_7) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_205 = and(pmpHomogeneous_beginsAfterLower_7, pmpHomogeneous_endsBeforeUpper_7) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_206 = or(_pmpHomogeneous_T_204, _pmpHomogeneous_T_205) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_207 = or(_pmpHomogeneous_T_203, _pmpHomogeneous_T_206) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_208 = mux(_pmpHomogeneous_T_184, _pmpHomogeneous_T_201, _pmpHomogeneous_T_207) @[PMP.scala 120:8]
    node pmpHomogeneous = and(_pmpHomogeneous_T_183, _pmpHomogeneous_T_208) @[PMP.scala 140:10]
    node homogeneous = and(pmaHomogeneous, pmpHomogeneous) @[PTW.scala 310:36]
    io.requestor[0].resp.valid <= resp_valid[0] @[PTW.scala 313:32]
    io.requestor[0].resp.bits.ae <= resp_ae @[PTW.scala 314:34]
    io.requestor[0].resp.bits.pte <- r_pte @[PTW.scala 315:35]
    io.requestor[0].resp.bits.level <= count @[PTW.scala 316:37]
    node _io_requestor_0_resp_bits_homogeneous_T = or(homogeneous, UInt<1>("h00")) @[PTW.scala 317:58]
    io.requestor[0].resp.bits.homogeneous <= _io_requestor_0_resp_bits_homogeneous_T @[PTW.scala 317:43]
    node _io_requestor_0_resp_bits_fragmented_superpage_T = and(resp_fragmented_superpage, UInt<1>("h00")) @[PTW.scala 318:81]
    io.requestor[0].resp.bits.fragmented_superpage <= _io_requestor_0_resp_bits_fragmented_superpage_T @[PTW.scala 318:52]
    io.requestor[0].ptbr <- io.dpath.ptbr @[PTW.scala 319:26]
    io.requestor[0].customCSRs <- io.dpath.customCSRs @[PTW.scala 320:32]
    io.requestor[0].status <- io.dpath.status @[PTW.scala 321:28]
    io.requestor[0].pmp <- io.dpath.pmp @[PTW.scala 322:25]
    io.requestor[1].resp.valid <= resp_valid[1] @[PTW.scala 313:32]
    io.requestor[1].resp.bits.ae <= resp_ae @[PTW.scala 314:34]
    io.requestor[1].resp.bits.pte <- r_pte @[PTW.scala 315:35]
    io.requestor[1].resp.bits.level <= count @[PTW.scala 316:37]
    node _io_requestor_1_resp_bits_homogeneous_T = or(homogeneous, UInt<1>("h00")) @[PTW.scala 317:58]
    io.requestor[1].resp.bits.homogeneous <= _io_requestor_1_resp_bits_homogeneous_T @[PTW.scala 317:43]
    node _io_requestor_1_resp_bits_fragmented_superpage_T = and(resp_fragmented_superpage, UInt<1>("h00")) @[PTW.scala 318:81]
    io.requestor[1].resp.bits.fragmented_superpage <= _io_requestor_1_resp_bits_fragmented_superpage_T @[PTW.scala 318:52]
    io.requestor[1].ptbr <- io.dpath.ptbr @[PTW.scala 319:26]
    io.requestor[1].customCSRs <- io.dpath.customCSRs @[PTW.scala 320:32]
    io.requestor[1].status <- io.dpath.status @[PTW.scala 321:28]
    io.requestor[1].pmp <- io.dpath.pmp @[PTW.scala 322:25]
    wire next_state : UInt
    next_state is invalid
    next_state <= state
    inst state_barrier of OptimizationBarrier_54 @[package.scala 258:25]
    state_barrier.io is invalid
    state_barrier.clock <= clock
    state_barrier.reset <= reset
    state_barrier.io.x <= next_state @[package.scala 266:18]
    state <= state_barrier.io.y @[PTW.scala 327:9]
    node _T_111 = eq(UInt<3>("h00"), state) @[Conditional.scala 37:30]
    when _T_111 : @[Conditional.scala 40:58]
      node _T_112 = and(arb.io.out.ready, arb.io.out.valid) @[Decoupled.scala 40:37]
      when _T_112 : @[PTW.scala 331:32]
        node _next_state_T = mux(arb.io.out.bits.valid, UInt<3>("h01"), UInt<3>("h00")) @[PTW.scala 332:26]
        next_state <= _next_state_T @[PTW.scala 332:20]
        skip @[PTW.scala 331:32]
      node _count_T = sub(UInt<1>("h00"), UInt<1>("h00")) @[PTW.scala 334:39]
      node _count_T_1 = tail(_count_T, 1) @[PTW.scala 334:39]
      count <= _count_T_1 @[PTW.scala 334:13]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_113 = eq(UInt<3>("h01"), state) @[Conditional.scala 37:30]
      when _T_113 : @[Conditional.scala 39:67]
        when pte_cache_hit : @[PTW.scala 337:28]
          node _count_T_2 = add(count, UInt<1>("h01")) @[PTW.scala 338:24]
          node _count_T_3 = tail(_count_T_2, 1) @[PTW.scala 338:24]
          count <= _count_T_3 @[PTW.scala 338:15]
          pte_hit <= UInt<1>("h01") @[PTW.scala 339:17]
          skip @[PTW.scala 337:28]
        else : @[PTW.scala 340:19]
          node _next_state_T_1 = mux(io.mem.req.ready, UInt<3>("h02"), UInt<3>("h01")) @[PTW.scala 341:26]
          next_state <= _next_state_T_1 @[PTW.scala 341:20]
          skip @[PTW.scala 340:19]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_114 = eq(UInt<3>("h02"), state) @[Conditional.scala 37:30]
        when _T_114 : @[Conditional.scala 39:67]
          node _next_state_T_2 = mux(s2_hit, UInt<3>("h01"), UInt<3>("h04")) @[PTW.scala 346:24]
          next_state <= _next_state_T_2 @[PTW.scala 346:18]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_115 = eq(UInt<3>("h04"), state) @[Conditional.scala 37:30]
          when _T_115 : @[Conditional.scala 39:67]
            next_state <= UInt<3>("h05") @[PTW.scala 349:18]
            node _io_dpath_perf_pte_miss_T = lt(count, UInt<1>("h01")) @[PTW.scala 350:39]
            io.dpath.perf.pte_miss <= _io_dpath_perf_pte_miss_T @[PTW.scala 350:30]
            when io.mem.s2_xcpt.ae.ld : @[PTW.scala 351:35]
              resp_ae <= UInt<1>("h01") @[PTW.scala 352:17]
              next_state <= UInt<3>("h00") @[PTW.scala 353:20]
              node _T_116 = or(r_req_dest, UInt<1>("h00"))
              node _T_117 = bits(_T_116, 0, 0)
              resp_valid[_T_117] <= UInt<1>("h01") @[PTW.scala 354:32]
              skip @[PTW.scala 351:35]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_118 = eq(UInt<3>("h07"), state) @[Conditional.scala 37:30]
            when _T_118 : @[Conditional.scala 39:67]
              next_state <= UInt<3>("h00") @[PTW.scala 358:18]
              node _T_119 = or(r_req_dest, UInt<1>("h00"))
              node _T_120 = bits(_T_119, 0, 0)
              resp_valid[_T_120] <= UInt<1>("h01") @[PTW.scala 359:30]
              resp_ae <= UInt<1>("h00") @[PTW.scala 360:15]
              node _T_121 = eq(homogeneous, UInt<1>("h00")) @[PTW.scala 361:13]
              when _T_121 : @[PTW.scala 361:27]
                count <= UInt<1>("h01") @[PTW.scala 362:15]
                resp_fragmented_superpage <= UInt<1>("h01") @[PTW.scala 363:35]
                skip @[PTW.scala 361:27]
              skip @[Conditional.scala 39:67]
    node _r_pte_T = eq(s2_error, UInt<1>("h00")) @[PTW.scala 375:19]
    node _r_pte_T_1 = and(s2_hit, _r_pte_T) @[PTW.scala 375:16]
    node _r_pte_T_2 = eq(state, UInt<3>("h07")) @[PTW.scala 376:15]
    node _r_pte_T_3 = eq(homogeneous, UInt<1>("h00")) @[PTW.scala 376:43]
    node _r_pte_T_4 = and(_r_pte_T_2, _r_pte_T_3) @[PTW.scala 376:40]
    wire pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}
    pte is invalid
    pte <- r_pte
    pte.ppn <= choices_0 @[PTW.scala 370:13]
    node _r_pte_T_5 = eq(state, UInt<3>("h01")) @[PTW.scala 377:15]
    node _r_pte_T_6 = and(_r_pte_T_5, pte_cache_hit) @[PTW.scala 377:25]
    wire pte_1 : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}
    pte_1 is invalid
    pte_1 <- s2_pte
    pte_1.ppn <= pte_cache_data @[PTW.scala 370:13]
    node _r_pte_T_7 = and(arb.io.out.ready, arb.io.out.valid) @[Decoupled.scala 40:37]
    wire pte_2 : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}
    pte_2 is invalid
    pte_2 <- r_pte
    pte_2.ppn <= io.dpath.ptbr.ppn @[PTW.scala 370:13]
    node _r_pte_T_8 = mux(_r_pte_T_7, pte_2, r_pte) @[PTW.scala 378:8]
    node _r_pte_T_9 = mux(_r_pte_T_6, pte_1, _r_pte_T_8) @[PTW.scala 377:8]
    node _r_pte_T_10 = mux(_r_pte_T_4, pte, _r_pte_T_9) @[PTW.scala 376:8]
    node _r_pte_T_11 = mux(_r_pte_T_1, s2_pte, _r_pte_T_10) @[PTW.scala 375:8]
    node _r_pte_T_12 = mux(mem_resp_valid, res, _r_pte_T_11) @[PTW.scala 374:8]
    inst r_pte_barrier of OptimizationBarrier_55 @[package.scala 258:25]
    r_pte_barrier.io is invalid
    r_pte_barrier.clock <= clock
    r_pte_barrier.reset <= reset
    r_pte_barrier.io.x <- _r_pte_T_12 @[package.scala 266:18]
    r_pte <- r_pte_barrier.io.y @[PTW.scala 373:9]
    node _T_122 = eq(s2_error, UInt<1>("h00")) @[PTW.scala 381:19]
    node _T_123 = and(s2_hit, _T_122) @[PTW.scala 381:16]
    when _T_123 : @[PTW.scala 381:30]
      node _T_124 = eq(state, UInt<3>("h01")) @[PTW.scala 382:18]
      node _T_125 = eq(state, UInt<3>("h02")) @[PTW.scala 382:37]
      node _T_126 = or(_T_124, _T_125) @[PTW.scala 382:28]
      node _T_127 = bits(reset, 0, 0) @[PTW.scala 382:11]
      node _T_128 = or(_T_126, _T_127) @[PTW.scala 382:11]
      node _T_129 = eq(_T_128, UInt<1>("h00")) @[PTW.scala 382:11]
      when _T_129 : @[PTW.scala 382:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at PTW.scala:382 assert(state === s_req || state === s_wait1)\n") @[PTW.scala 382:11]
        stop(clock, UInt<1>(1), 1) @[PTW.scala 382:11]
        skip @[PTW.scala 382:11]
      next_state <= UInt<3>("h00") @[PTW.scala 383:16]
      node _T_130 = or(r_req_dest, UInt<1>("h00"))
      node _T_131 = bits(_T_130, 0, 0)
      resp_valid[_T_131] <= UInt<1>("h01") @[PTW.scala 384:28]
      resp_ae <= UInt<1>("h00") @[PTW.scala 385:13]
      count <= UInt<1>("h01") @[PTW.scala 386:11]
      skip @[PTW.scala 381:30]
    when mem_resp_valid : @[PTW.scala 388:25]
      node _T_132 = eq(state, UInt<3>("h05")) @[PTW.scala 389:18]
      node _T_133 = bits(reset, 0, 0) @[PTW.scala 389:11]
      node _T_134 = or(_T_132, _T_133) @[PTW.scala 389:11]
      node _T_135 = eq(_T_134, UInt<1>("h00")) @[PTW.scala 389:11]
      when _T_135 : @[PTW.scala 389:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at PTW.scala:389 assert(state === s_wait3)\n") @[PTW.scala 389:11]
        stop(clock, UInt<1>(1), 1) @[PTW.scala 389:11]
        skip @[PTW.scala 389:11]
      when traverse : @[PTW.scala 390:21]
        next_state <= UInt<3>("h01") @[PTW.scala 391:18]
        node _count_T_4 = add(count, UInt<1>("h01")) @[PTW.scala 392:22]
        node _count_T_5 = tail(_count_T_4, 1) @[PTW.scala 392:22]
        count <= _count_T_5 @[PTW.scala 392:13]
        skip @[PTW.scala 390:21]
      else : @[PTW.scala 393:17]
        node _l2_refill_T = eq(invalid_paddr, UInt<1>("h00")) @[PTW.scala 394:29]
        node _l2_refill_T_1 = and(res.v, _l2_refill_T) @[PTW.scala 394:26]
        node _l2_refill_T_2 = eq(count, UInt<1>("h01")) @[PTW.scala 394:53]
        node _l2_refill_T_3 = and(_l2_refill_T_1, _l2_refill_T_2) @[PTW.scala 394:44]
        l2_refill <= _l2_refill_T_3 @[PTW.scala 394:17]
        node ae = and(res.v, invalid_paddr) @[PTW.scala 395:22]
        resp_ae <= ae @[PTW.scala 396:15]
        node _T_136 = neq(count, UInt<1>("h01")) @[PTW.scala 397:42]
        node _T_137 = and(UInt<1>("h00"), _T_136) @[PTW.scala 397:33]
        node _T_138 = eq(ae, UInt<1>("h00")) @[PTW.scala 397:60]
        node _T_139 = and(_T_137, _T_138) @[PTW.scala 397:57]
        when _T_139 : @[PTW.scala 397:65]
          next_state <= UInt<3>("h07") @[PTW.scala 398:20]
          skip @[PTW.scala 397:65]
        else : @[PTW.scala 399:19]
          next_state <= UInt<3>("h00") @[PTW.scala 400:20]
          node _T_140 = or(r_req_dest, UInt<1>("h00"))
          node _T_141 = bits(_T_140, 0, 0)
          resp_valid[_T_141] <= UInt<1>("h01") @[PTW.scala 401:32]
          skip @[PTW.scala 399:19]
        skip @[PTW.scala 393:17]
      skip @[PTW.scala 388:25]
    when io.mem.s2_nack : @[PTW.scala 405:25]
      node _T_142 = eq(state, UInt<3>("h04")) @[PTW.scala 406:18]
      node _T_143 = bits(reset, 0, 0) @[PTW.scala 406:11]
      node _T_144 = or(_T_142, _T_143) @[PTW.scala 406:11]
      node _T_145 = eq(_T_144, UInt<1>("h00")) @[PTW.scala 406:11]
      when _T_145 : @[PTW.scala 406:11]
        printf(clock, UInt<1>(1), "Assertion failed\n    at PTW.scala:406 assert(state === s_wait2)\n") @[PTW.scala 406:11]
        stop(clock, UInt<1>(1), 1) @[PTW.scala 406:11]
        skip @[PTW.scala 406:11]
      next_state <= UInt<3>("h01") @[PTW.scala 407:16]
      skip @[PTW.scala 405:25]
    node _leaf_T = eq(traverse, UInt<1>("h00")) @[PTW.scala 411:34]
    node _leaf_T_1 = and(mem_resp_valid, _leaf_T) @[PTW.scala 411:31]
    node _leaf_T_2 = eq(count, UInt<1>("h00")) @[PTW.scala 411:53]
    node leaf = and(_leaf_T_1, _leaf_T_2) @[PTW.scala 411:44]
    node _T_146 = and(leaf, res.v) @[PTW.scala 412:17]
    node _T_147 = eq(invalid_paddr, UInt<1>("h00")) @[PTW.scala 412:29]
    node _T_148 = and(_T_146, _T_147) @[PTW.scala 412:26]
    node _T_149 = and(leaf, res.v) @[PTW.scala 413:17]
    node _T_150 = and(_T_149, invalid_paddr) @[PTW.scala 413:26]
    node _T_151 = bits(mem_resp_data, 0, 0) @[PTW.scala 414:34]
    node _T_152 = eq(_T_151, UInt<1>("h00")) @[PTW.scala 414:20]
    node _T_153 = and(leaf, _T_152) @[PTW.scala 414:17]
    node _T_154 = eq(res.v, UInt<1>("h00")) @[PTW.scala 416:22]
    node _T_155 = and(leaf, _T_154) @[PTW.scala 416:19]
    node _T_156 = bits(mem_resp_data, 0, 0) @[PTW.scala 416:45]
    node _T_157 = and(_T_155, _T_156) @[PTW.scala 416:29]
    node _leaf_T_3 = eq(traverse, UInt<1>("h00")) @[PTW.scala 411:34]
    node _leaf_T_4 = and(mem_resp_valid, _leaf_T_3) @[PTW.scala 411:31]
    node _leaf_T_5 = eq(count, UInt<1>("h01")) @[PTW.scala 411:53]
    node leaf_1 = and(_leaf_T_4, _leaf_T_5) @[PTW.scala 411:44]
    node _T_158 = and(leaf_1, res.v) @[PTW.scala 412:17]
    node _T_159 = eq(invalid_paddr, UInt<1>("h00")) @[PTW.scala 412:29]
    node _T_160 = and(_T_158, _T_159) @[PTW.scala 412:26]
    node _T_161 = and(leaf_1, res.v) @[PTW.scala 413:17]
    node _T_162 = and(_T_161, invalid_paddr) @[PTW.scala 413:26]
    node _T_163 = bits(mem_resp_data, 0, 0) @[PTW.scala 414:34]
    node _T_164 = eq(_T_163, UInt<1>("h00")) @[PTW.scala 414:20]
    node _T_165 = and(leaf_1, _T_164) @[PTW.scala 414:17]
    node _T_166 = eq(count, UInt<1>("h01")) @[PTW.scala 418:34]
    node _T_167 = and(mem_resp_valid, _T_166) @[PTW.scala 418:25]
    node _T_168 = eq(res.r, UInt<1>("h00")) @[PTW.scala 72:36]
    node _T_169 = and(res.v, _T_168) @[PTW.scala 72:33]
    node _T_170 = eq(res.w, UInt<1>("h00")) @[PTW.scala 72:42]
    node _T_171 = and(_T_169, _T_170) @[PTW.scala 72:39]
    node _T_172 = eq(res.x, UInt<1>("h00")) @[PTW.scala 72:48]
    node _T_173 = and(_T_171, _T_172) @[PTW.scala 72:45]
    node _T_174 = and(_T_167, _T_173) @[PTW.scala 418:49]
    node _T_175 = eq(state, UInt<3>("h04")) @[PTW.scala 420:16]
    node _T_176 = and(_T_175, io.mem.s2_xcpt.ae.ld) @[PTW.scala 420:28]
    
  module Rocket : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip hartid : UInt<1>, flip reset_vector : UInt<32>, flip interrupts : {debug : UInt<1>, mtip : UInt<1>, msip : UInt<1>, meip : UInt<1>, lip : UInt<1>[0]}, imem : {might_request : UInt<1>, flip clock_enabled : UInt<1>, req : {valid : UInt<1>, bits : {pc : UInt<32>, speculative : UInt<1>}}, sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<32>, asid : UInt<1>}}, flip resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {btb : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, data : UInt<32>, mask : UInt<2>, xcpt : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, replay : UInt<1>}}, btb_update : {valid : UInt<1>, bits : {prediction : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, target : UInt<32>, taken : UInt<1>, isValid : UInt<1>, br_pc : UInt<32>, cfiType : UInt<2>}}, bht_update : {valid : UInt<1>, bits : {prediction : {history : UInt<8>, value : UInt<1>}, pc : UInt<32>, branch : UInt<1>, taken : UInt<1>, mispredict : UInt<1>}}, ras_update : {valid : UInt<1>, bits : {cfiType : UInt<2>, returnAddr : UInt<32>}}, flush_icache : UInt<1>, flip npc : UInt<32>, flip perf : {acquire : UInt<1>, tlbMiss : UInt<1>}}, dmem : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}}, s1_kill : UInt<1>, s1_data : {data : UInt<32>, mask : UInt<4>}, flip s2_nack : UInt<1>, flip s2_nack_cause_raw : UInt<1>, s2_kill : UInt<1>, flip s2_uncached : UInt<1>, flip s2_paddr : UInt<32>, flip resp : {valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, data : UInt<32>, mask : UInt<4>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<32>, data_raw : UInt<32>, store_data : UInt<32>}}, flip replay_next : UInt<1>, flip s2_xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>}}, flip ordered : UInt<1>, flip perf : {acquire : UInt<1>, release : UInt<1>, grant : UInt<1>, tlbMiss : UInt<1>, blocked : UInt<1>, canAcceptStoreThenLoad : UInt<1>, canAcceptStoreThenRMW : UInt<1>, canAcceptLoadThenLoad : UInt<1>, storeBufferEmptyAfterLoad : UInt<1>, storeBufferEmptyAfterStore : UInt<1>}, keep_clock_enabled : UInt<1>, flip clock_enabled : UInt<1>}, flip ptw : {flip ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, flip sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<32>, asid : UInt<1>}}, flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], perf : {l2miss : UInt<1>, l2hit : UInt<1>, pte_miss : UInt<1>, pte_hit : UInt<1>}, flip customCSRs : {csrs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}, clock_enabled : UInt<1>}, flip fpu : {flip hartid : UInt<1>, flip time : UInt<32>, flip inst : UInt<32>, flip fromint_data : UInt<32>, flip fcsr_rm : UInt<3>, fcsr_flags : {valid : UInt<1>, bits : UInt<5>}, store_data : UInt<0>, toint_data : UInt<32>, flip dmem_resp_val : UInt<1>, flip dmem_resp_type : UInt<3>, flip dmem_resp_tag : UInt<5>, flip dmem_resp_data : UInt<0>, flip valid : UInt<1>, fcsr_rdy : UInt<1>, nack_mem : UInt<1>, illegal_rm : UInt<1>, flip killx : UInt<1>, flip killm : UInt<1>, dec : {ldst : UInt<1>, wen : UInt<1>, ren1 : UInt<1>, ren2 : UInt<1>, ren3 : UInt<1>, swap12 : UInt<1>, swap23 : UInt<1>, typeTagIn : UInt<2>, typeTagOut : UInt<2>, fromint : UInt<1>, toint : UInt<1>, fastpipe : UInt<1>, fma : UInt<1>, div : UInt<1>, sqrt : UInt<1>, wflags : UInt<1>}, sboard_set : UInt<1>, sboard_clr : UInt<1>, sboard_clra : UInt<5>, flip keep_clock_enabled : UInt<1>}, flip rocc : {flip cmd : {flip ready : UInt<1>, valid : UInt<1>, bits : {inst : {funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>}, rs1 : UInt<32>, rs2 : UInt<32>, status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}}}, resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {rd : UInt<5>, data : UInt<32>}}, mem : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, phys : UInt<1>, no_alloc : UInt<1>, no_xcpt : UInt<1>, data : UInt<32>, mask : UInt<4>}}, s1_kill : UInt<1>, s1_data : {data : UInt<32>, mask : UInt<4>}, flip s2_nack : UInt<1>, flip s2_nack_cause_raw : UInt<1>, s2_kill : UInt<1>, flip s2_uncached : UInt<1>, flip s2_paddr : UInt<32>, flip resp : {valid : UInt<1>, bits : {addr : UInt<32>, tag : UInt<7>, cmd : UInt<5>, size : UInt<2>, signed : UInt<1>, dprv : UInt<2>, data : UInt<32>, mask : UInt<4>, replay : UInt<1>, has_data : UInt<1>, data_word_bypass : UInt<32>, data_raw : UInt<32>, store_data : UInt<32>}}, flip replay_next : UInt<1>, flip s2_xcpt : {ma : {ld : UInt<1>, st : UInt<1>}, pf : {ld : UInt<1>, st : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>}}, flip ordered : UInt<1>, flip perf : {acquire : UInt<1>, release : UInt<1>, grant : UInt<1>, tlbMiss : UInt<1>, blocked : UInt<1>, canAcceptStoreThenLoad : UInt<1>, canAcceptStoreThenRMW : UInt<1>, canAcceptLoadThenLoad : UInt<1>, storeBufferEmptyAfterLoad : UInt<1>, storeBufferEmptyAfterStore : UInt<1>}, keep_clock_enabled : UInt<1>, flip clock_enabled : UInt<1>}, busy : UInt<1>, interrupt : UInt<1>, flip exception : UInt<1>}, trace : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1], bpwatch : {valid : UInt<1>[1], rvalid : UInt<1>[1], wvalid : UInt<1>[1], ivalid : UInt<1>[1], action : UInt<3>}[1], cease : UInt<1>, wfi : UInt<1>, flip traceStall : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg clock_en_reg : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[RocketCore.scala 112:29]
    reg long_latency_stall : UInt<1>, clock @[RocketCore.scala 113:31]
    reg id_reg_pause : UInt<1>, clock @[RocketCore.scala 114:25]
    reg imem_might_request_reg : UInt<1>, clock @[RocketCore.scala 115:35]
    wire clock_en : UInt<1>
    clock_en is invalid
    clock_en <= UInt<1>("h01")
    wire hits : UInt<1>[11] @[Events.scala 12:18]
    hits is invalid @[Events.scala 12:18]
    wire hits_1 : UInt<1>[10] @[Events.scala 12:18]
    hits_1 is invalid @[Events.scala 12:18]
    wire hits_2 : UInt<1>[6] @[Events.scala 12:18]
    hits_2 is invalid @[Events.scala 12:18]
    reg ex_ctrl : {legal : UInt<1>, fp : UInt<1>, rocc : UInt<1>, branch : UInt<1>, jal : UInt<1>, jalr : UInt<1>, rxs2 : UInt<1>, rxs1 : UInt<1>, scie : UInt<1>, sel_alu2 : UInt<2>, sel_alu1 : UInt<2>, sel_imm : UInt<3>, alu_dw : UInt<1>, alu_fn : UInt<4>, mem : UInt<1>, mem_cmd : UInt<5>, rfs1 : UInt<1>, rfs2 : UInt<1>, rfs3 : UInt<1>, wfd : UInt<1>, mul : UInt<1>, div : UInt<1>, wxd : UInt<1>, csr : UInt<3>, fence_i : UInt<1>, fence : UInt<1>, amo : UInt<1>, dp : UInt<1>}, clock @[RocketCore.scala 190:20]
    reg mem_ctrl : {legal : UInt<1>, fp : UInt<1>, rocc : UInt<1>, branch : UInt<1>, jal : UInt<1>, jalr : UInt<1>, rxs2 : UInt<1>, rxs1 : UInt<1>, scie : UInt<1>, sel_alu2 : UInt<2>, sel_alu1 : UInt<2>, sel_imm : UInt<3>, alu_dw : UInt<1>, alu_fn : UInt<4>, mem : UInt<1>, mem_cmd : UInt<5>, rfs1 : UInt<1>, rfs2 : UInt<1>, rfs3 : UInt<1>, wfd : UInt<1>, mul : UInt<1>, div : UInt<1>, wxd : UInt<1>, csr : UInt<3>, fence_i : UInt<1>, fence : UInt<1>, amo : UInt<1>, dp : UInt<1>}, clock @[RocketCore.scala 191:21]
    reg wb_ctrl : {legal : UInt<1>, fp : UInt<1>, rocc : UInt<1>, branch : UInt<1>, jal : UInt<1>, jalr : UInt<1>, rxs2 : UInt<1>, rxs1 : UInt<1>, scie : UInt<1>, sel_alu2 : UInt<2>, sel_alu1 : UInt<2>, sel_imm : UInt<3>, alu_dw : UInt<1>, alu_fn : UInt<4>, mem : UInt<1>, mem_cmd : UInt<5>, rfs1 : UInt<1>, rfs2 : UInt<1>, rfs3 : UInt<1>, wfd : UInt<1>, mul : UInt<1>, div : UInt<1>, wxd : UInt<1>, csr : UInt<3>, fence_i : UInt<1>, fence : UInt<1>, amo : UInt<1>, dp : UInt<1>}, clock @[RocketCore.scala 192:20]
    reg ex_reg_xcpt_interrupt : UInt<1>, clock @[RocketCore.scala 194:35]
    reg ex_reg_valid : UInt<1>, clock @[RocketCore.scala 195:35]
    reg ex_reg_rvc : UInt<1>, clock @[RocketCore.scala 196:35]
    reg ex_reg_btb_resp : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, clock @[RocketCore.scala 197:35]
    reg ex_reg_xcpt : UInt<1>, clock @[RocketCore.scala 198:35]
    reg ex_reg_flush_pipe : UInt<1>, clock @[RocketCore.scala 199:35]
    reg ex_reg_load_use : UInt<1>, clock @[RocketCore.scala 200:35]
    reg ex_reg_cause : UInt, clock @[RocketCore.scala 201:35]
    reg ex_reg_replay : UInt<1>, clock @[RocketCore.scala 202:26]
    reg ex_reg_pc : UInt, clock @[RocketCore.scala 203:22]
    reg ex_reg_mem_size : UInt, clock @[RocketCore.scala 204:28]
    reg ex_reg_inst : UInt, clock @[RocketCore.scala 205:24]
    reg ex_reg_raw_inst : UInt, clock @[RocketCore.scala 206:28]
    reg ex_scie_unpipelined : UInt<1>, clock @[RocketCore.scala 207:32]
    reg ex_scie_pipelined : UInt<1>, clock @[RocketCore.scala 208:30]
    reg ex_reg_wphit : UInt<1>[1], clock @[RocketCore.scala 209:36]
    reg mem_reg_xcpt_interrupt : UInt<1>, clock @[RocketCore.scala 211:36]
    reg mem_reg_valid : UInt<1>, clock @[RocketCore.scala 212:36]
    reg mem_reg_rvc : UInt<1>, clock @[RocketCore.scala 213:36]
    reg mem_reg_btb_resp : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, clock @[RocketCore.scala 214:36]
    reg mem_reg_xcpt : UInt<1>, clock @[RocketCore.scala 215:36]
    reg mem_reg_replay : UInt<1>, clock @[RocketCore.scala 216:36]
    reg mem_reg_flush_pipe : UInt<1>, clock @[RocketCore.scala 217:36]
    reg mem_reg_cause : UInt, clock @[RocketCore.scala 218:36]
    reg mem_reg_slow_bypass : UInt<1>, clock @[RocketCore.scala 219:36]
    reg mem_reg_load : UInt<1>, clock @[RocketCore.scala 220:36]
    reg mem_reg_store : UInt<1>, clock @[RocketCore.scala 221:36]
    reg mem_reg_sfence : UInt<1>, clock @[RocketCore.scala 222:27]
    reg mem_reg_pc : UInt, clock @[RocketCore.scala 223:23]
    reg mem_reg_inst : UInt, clock @[RocketCore.scala 224:25]
    reg mem_reg_mem_size : UInt, clock @[RocketCore.scala 225:29]
    reg mem_reg_raw_inst : UInt, clock @[RocketCore.scala 226:29]
    reg mem_scie_unpipelined : UInt<1>, clock @[RocketCore.scala 227:33]
    reg mem_scie_pipelined : UInt<1>, clock @[RocketCore.scala 228:31]
    reg mem_reg_wdata : UInt, clock @[RocketCore.scala 229:26]
    reg mem_reg_rs2 : UInt, clock @[RocketCore.scala 230:24]
    reg mem_br_taken : UInt<1>, clock @[RocketCore.scala 231:25]
    wire take_pc_mem : UInt<1> @[RocketCore.scala 232:25]
    take_pc_mem is invalid @[RocketCore.scala 232:25]
    reg mem_reg_wphit : UInt<1>[1], clock @[RocketCore.scala 233:35]
    reg wb_reg_valid : UInt<1>, clock @[RocketCore.scala 235:35]
    reg wb_reg_xcpt : UInt<1>, clock @[RocketCore.scala 236:35]
    reg wb_reg_replay : UInt<1>, clock @[RocketCore.scala 237:35]
    reg wb_reg_flush_pipe : UInt<1>, clock @[RocketCore.scala 238:35]
    reg wb_reg_cause : UInt, clock @[RocketCore.scala 239:35]
    reg wb_reg_sfence : UInt<1>, clock @[RocketCore.scala 240:26]
    reg wb_reg_pc : UInt, clock @[RocketCore.scala 241:22]
    reg wb_reg_mem_size : UInt, clock @[RocketCore.scala 242:28]
    reg wb_reg_inst : UInt, clock @[RocketCore.scala 243:24]
    reg wb_reg_raw_inst : UInt, clock @[RocketCore.scala 244:28]
    reg wb_reg_wdata : UInt, clock @[RocketCore.scala 245:25]
    reg wb_reg_rs2 : UInt, clock @[RocketCore.scala 246:23]
    wire take_pc_wb : UInt<1> @[RocketCore.scala 247:24]
    take_pc_wb is invalid @[RocketCore.scala 247:24]
    reg wb_reg_wphit : UInt<1>[1], clock @[RocketCore.scala 248:35]
    node take_pc_mem_wb = or(take_pc_wb, take_pc_mem) @[RocketCore.scala 250:35]
    inst ibuf of IBuf @[RocketCore.scala 254:20]
    ibuf.io is invalid
    ibuf.clock <= clock
    ibuf.reset <= reset
    ibuf.io.imem <- io.imem.resp @[RocketCore.scala 258:16]
    ibuf.io.kill <= take_pc_mem_wb @[RocketCore.scala 259:16]
    wire id_ctrl : {legal : UInt<1>, fp : UInt<1>, rocc : UInt<1>, branch : UInt<1>, jal : UInt<1>, jalr : UInt<1>, rxs2 : UInt<1>, rxs1 : UInt<1>, scie : UInt<1>, sel_alu2 : UInt<2>, sel_alu1 : UInt<2>, sel_imm : UInt<3>, alu_dw : UInt<1>, alu_fn : UInt<4>, mem : UInt<1>, mem_cmd : UInt<5>, rfs1 : UInt<1>, rfs2 : UInt<1>, rfs3 : UInt<1>, wfd : UInt<1>, mul : UInt<1>, div : UInt<1>, wxd : UInt<1>, csr : UInt<3>, fence_i : UInt<1>, fence : UInt<1>, amo : UInt<1>, dp : UInt<1>} @[RocketCore.scala 263:21]
    id_ctrl is invalid @[RocketCore.scala 263:21]
    node _id_ctrl_decoder_bit_T = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_1 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h02000033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_2 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_3 = eq(_id_ctrl_decoder_bit_T_2, UInt<32>("h02001033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_4 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_5 = eq(_id_ctrl_decoder_bit_T_4, UInt<32>("h02003033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_6 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_7 = eq(_id_ctrl_decoder_bit_T_6, UInt<32>("h02002033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_8 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_9 = eq(_id_ctrl_decoder_bit_T_8, UInt<32>("h02004033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_10 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_11 = eq(_id_ctrl_decoder_bit_T_10, UInt<32>("h02005033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_12 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_13 = eq(_id_ctrl_decoder_bit_T_12, UInt<32>("h02006033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_14 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_15 = eq(_id_ctrl_decoder_bit_T_14, UInt<32>("h02007033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_16 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_17 = eq(_id_ctrl_decoder_bit_T_16, UInt<32>("h0202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_18 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_19 = eq(_id_ctrl_decoder_bit_T_18, UInt<32>("h02000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_20 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_21 = eq(_id_ctrl_decoder_bit_T_20, UInt<32>("h0800202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_22 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_23 = eq(_id_ctrl_decoder_bit_T_22, UInt<32>("h06000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_24 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_25 = eq(_id_ctrl_decoder_bit_T_24, UInt<32>("h04000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_26 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_27 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h08000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_28 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_29 = eq(_id_ctrl_decoder_bit_T_28, UInt<32>("h0c000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_30 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_31 = eq(_id_ctrl_decoder_bit_T_30, UInt<32>("h0a000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_32 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_33 = eq(_id_ctrl_decoder_bit_T_32, UInt<32>("h0e000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_34 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f9f0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_35 = eq(_id_ctrl_decoder_bit_T_34, UInt<32>("h01000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_36 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0f800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_37 = eq(_id_ctrl_decoder_bit_T_36, UInt<32>("h01800202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_38 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_39 = eq(_id_ctrl_decoder_bit_T_38, UInt<32>("h01013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_40 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_41 = eq(_id_ctrl_decoder_bit_T_40, UInt<32>("h05013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_42 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_43 = eq(_id_ctrl_decoder_bit_T_42, UInt<32>("h040005013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_44 = eq(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h07b200073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_45 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_46 = eq(_id_ctrl_decoder_bit_T_45, UInt<32>("h0100f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_47 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_48 = eq(_id_ctrl_decoder_bit_T_47, UInt<32>("h01063")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_49 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_50 = eq(_id_ctrl_decoder_bit_T_49, UInt<32>("h063")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_51 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_52 = eq(_id_ctrl_decoder_bit_T_51, UInt<32>("h04063")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_53 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_54 = eq(_id_ctrl_decoder_bit_T_53, UInt<32>("h06063")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_55 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_56 = eq(_id_ctrl_decoder_bit_T_55, UInt<32>("h05063")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_57 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_58 = eq(_id_ctrl_decoder_bit_T_57, UInt<32>("h07063")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_59 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h07f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_60 = eq(_id_ctrl_decoder_bit_T_59, UInt<32>("h06f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_61 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_62 = eq(_id_ctrl_decoder_bit_T_61, UInt<32>("h067")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_63 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h07f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_64 = eq(_id_ctrl_decoder_bit_T_63, UInt<32>("h017")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_65 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_66 = eq(_id_ctrl_decoder_bit_T_65, UInt<32>("h03")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_67 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_68 = eq(_id_ctrl_decoder_bit_T_67, UInt<32>("h01003")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_69 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_70 = eq(_id_ctrl_decoder_bit_T_69, UInt<32>("h02003")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_71 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_72 = eq(_id_ctrl_decoder_bit_T_71, UInt<32>("h04003")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_73 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_74 = eq(_id_ctrl_decoder_bit_T_73, UInt<32>("h05003")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_75 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_76 = eq(_id_ctrl_decoder_bit_T_75, UInt<32>("h023")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_77 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_78 = eq(_id_ctrl_decoder_bit_T_77, UInt<32>("h01023")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_79 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_80 = eq(_id_ctrl_decoder_bit_T_79, UInt<32>("h02023")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_81 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h07f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_82 = eq(_id_ctrl_decoder_bit_T_81, UInt<32>("h037")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_83 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_84 = eq(_id_ctrl_decoder_bit_T_83, UInt<32>("h013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_85 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_86 = eq(_id_ctrl_decoder_bit_T_85, UInt<32>("h02013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_87 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_88 = eq(_id_ctrl_decoder_bit_T_87, UInt<32>("h03013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_89 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_90 = eq(_id_ctrl_decoder_bit_T_89, UInt<32>("h07013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_91 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_92 = eq(_id_ctrl_decoder_bit_T_91, UInt<32>("h06013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_93 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_94 = eq(_id_ctrl_decoder_bit_T_93, UInt<32>("h04013")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_95 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_96 = eq(_id_ctrl_decoder_bit_T_95, UInt<32>("h033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_97 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_98 = eq(_id_ctrl_decoder_bit_T_97, UInt<32>("h040000033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_99 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_100 = eq(_id_ctrl_decoder_bit_T_99, UInt<32>("h02033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_101 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_102 = eq(_id_ctrl_decoder_bit_T_101, UInt<32>("h03033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_103 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_104 = eq(_id_ctrl_decoder_bit_T_103, UInt<32>("h07033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_105 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_106 = eq(_id_ctrl_decoder_bit_T_105, UInt<32>("h06033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_107 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_108 = eq(_id_ctrl_decoder_bit_T_107, UInt<32>("h04033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_109 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_110 = eq(_id_ctrl_decoder_bit_T_109, UInt<32>("h01033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_111 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_112 = eq(_id_ctrl_decoder_bit_T_111, UInt<32>("h05033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_113 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0fe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_114 = eq(_id_ctrl_decoder_bit_T_113, UInt<32>("h040005033")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_115 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_116 = eq(_id_ctrl_decoder_bit_T_115, UInt<32>("h0f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_117 = eq(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_118 = eq(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0100073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_119 = eq(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h030200073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_120 = eq(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h010500073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_121 = eq(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h030500073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_122 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_123 = eq(_id_ctrl_decoder_bit_T_122, UInt<32>("h01073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_124 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_125 = eq(_id_ctrl_decoder_bit_T_124, UInt<32>("h02073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_126 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_127 = eq(_id_ctrl_decoder_bit_T_126, UInt<32>("h03073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_128 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_129 = eq(_id_ctrl_decoder_bit_T_128, UInt<32>("h05073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_130 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_131 = eq(_id_ctrl_decoder_bit_T_130, UInt<32>("h06073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_132 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_133 = eq(_id_ctrl_decoder_bit_T_132, UInt<32>("h07073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_134 = or(UInt<1>("h00"), _id_ctrl_decoder_bit_T_1) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_135 = or(_id_ctrl_decoder_bit_T_134, _id_ctrl_decoder_bit_T_3) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_136 = or(_id_ctrl_decoder_bit_T_135, _id_ctrl_decoder_bit_T_5) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_137 = or(_id_ctrl_decoder_bit_T_136, _id_ctrl_decoder_bit_T_7) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_138 = or(_id_ctrl_decoder_bit_T_137, _id_ctrl_decoder_bit_T_9) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_139 = or(_id_ctrl_decoder_bit_T_138, _id_ctrl_decoder_bit_T_11) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_140 = or(_id_ctrl_decoder_bit_T_139, _id_ctrl_decoder_bit_T_13) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_141 = or(_id_ctrl_decoder_bit_T_140, _id_ctrl_decoder_bit_T_15) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_142 = or(_id_ctrl_decoder_bit_T_141, _id_ctrl_decoder_bit_T_17) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_143 = or(_id_ctrl_decoder_bit_T_142, _id_ctrl_decoder_bit_T_19) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_144 = or(_id_ctrl_decoder_bit_T_143, _id_ctrl_decoder_bit_T_21) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_145 = or(_id_ctrl_decoder_bit_T_144, _id_ctrl_decoder_bit_T_23) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_146 = or(_id_ctrl_decoder_bit_T_145, _id_ctrl_decoder_bit_T_25) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_147 = or(_id_ctrl_decoder_bit_T_146, _id_ctrl_decoder_bit_T_27) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_148 = or(_id_ctrl_decoder_bit_T_147, _id_ctrl_decoder_bit_T_29) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_149 = or(_id_ctrl_decoder_bit_T_148, _id_ctrl_decoder_bit_T_31) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_150 = or(_id_ctrl_decoder_bit_T_149, _id_ctrl_decoder_bit_T_33) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_151 = or(_id_ctrl_decoder_bit_T_150, _id_ctrl_decoder_bit_T_35) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_152 = or(_id_ctrl_decoder_bit_T_151, _id_ctrl_decoder_bit_T_37) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_153 = or(_id_ctrl_decoder_bit_T_152, _id_ctrl_decoder_bit_T_39) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_154 = or(_id_ctrl_decoder_bit_T_153, _id_ctrl_decoder_bit_T_41) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_155 = or(_id_ctrl_decoder_bit_T_154, _id_ctrl_decoder_bit_T_43) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_156 = or(_id_ctrl_decoder_bit_T_155, _id_ctrl_decoder_bit_T_44) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_157 = or(_id_ctrl_decoder_bit_T_156, _id_ctrl_decoder_bit_T_46) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_158 = or(_id_ctrl_decoder_bit_T_157, _id_ctrl_decoder_bit_T_48) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_159 = or(_id_ctrl_decoder_bit_T_158, _id_ctrl_decoder_bit_T_50) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_160 = or(_id_ctrl_decoder_bit_T_159, _id_ctrl_decoder_bit_T_52) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_161 = or(_id_ctrl_decoder_bit_T_160, _id_ctrl_decoder_bit_T_54) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_162 = or(_id_ctrl_decoder_bit_T_161, _id_ctrl_decoder_bit_T_56) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_163 = or(_id_ctrl_decoder_bit_T_162, _id_ctrl_decoder_bit_T_58) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_164 = or(_id_ctrl_decoder_bit_T_163, _id_ctrl_decoder_bit_T_60) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_165 = or(_id_ctrl_decoder_bit_T_164, _id_ctrl_decoder_bit_T_62) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_166 = or(_id_ctrl_decoder_bit_T_165, _id_ctrl_decoder_bit_T_64) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_167 = or(_id_ctrl_decoder_bit_T_166, _id_ctrl_decoder_bit_T_66) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_168 = or(_id_ctrl_decoder_bit_T_167, _id_ctrl_decoder_bit_T_68) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_169 = or(_id_ctrl_decoder_bit_T_168, _id_ctrl_decoder_bit_T_70) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_170 = or(_id_ctrl_decoder_bit_T_169, _id_ctrl_decoder_bit_T_72) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_171 = or(_id_ctrl_decoder_bit_T_170, _id_ctrl_decoder_bit_T_74) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_172 = or(_id_ctrl_decoder_bit_T_171, _id_ctrl_decoder_bit_T_76) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_173 = or(_id_ctrl_decoder_bit_T_172, _id_ctrl_decoder_bit_T_78) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_174 = or(_id_ctrl_decoder_bit_T_173, _id_ctrl_decoder_bit_T_80) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_175 = or(_id_ctrl_decoder_bit_T_174, _id_ctrl_decoder_bit_T_82) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_176 = or(_id_ctrl_decoder_bit_T_175, _id_ctrl_decoder_bit_T_84) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_177 = or(_id_ctrl_decoder_bit_T_176, _id_ctrl_decoder_bit_T_86) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_178 = or(_id_ctrl_decoder_bit_T_177, _id_ctrl_decoder_bit_T_88) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_179 = or(_id_ctrl_decoder_bit_T_178, _id_ctrl_decoder_bit_T_90) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_180 = or(_id_ctrl_decoder_bit_T_179, _id_ctrl_decoder_bit_T_92) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_181 = or(_id_ctrl_decoder_bit_T_180, _id_ctrl_decoder_bit_T_94) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_182 = or(_id_ctrl_decoder_bit_T_181, _id_ctrl_decoder_bit_T_96) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_183 = or(_id_ctrl_decoder_bit_T_182, _id_ctrl_decoder_bit_T_98) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_184 = or(_id_ctrl_decoder_bit_T_183, _id_ctrl_decoder_bit_T_100) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_185 = or(_id_ctrl_decoder_bit_T_184, _id_ctrl_decoder_bit_T_102) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_186 = or(_id_ctrl_decoder_bit_T_185, _id_ctrl_decoder_bit_T_104) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_187 = or(_id_ctrl_decoder_bit_T_186, _id_ctrl_decoder_bit_T_106) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_188 = or(_id_ctrl_decoder_bit_T_187, _id_ctrl_decoder_bit_T_108) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_189 = or(_id_ctrl_decoder_bit_T_188, _id_ctrl_decoder_bit_T_110) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_190 = or(_id_ctrl_decoder_bit_T_189, _id_ctrl_decoder_bit_T_112) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_191 = or(_id_ctrl_decoder_bit_T_190, _id_ctrl_decoder_bit_T_114) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_192 = or(_id_ctrl_decoder_bit_T_191, _id_ctrl_decoder_bit_T_116) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_193 = or(_id_ctrl_decoder_bit_T_192, _id_ctrl_decoder_bit_T_117) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_194 = or(_id_ctrl_decoder_bit_T_193, _id_ctrl_decoder_bit_T_118) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_195 = or(_id_ctrl_decoder_bit_T_194, _id_ctrl_decoder_bit_T_119) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_196 = or(_id_ctrl_decoder_bit_T_195, _id_ctrl_decoder_bit_T_120) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_197 = or(_id_ctrl_decoder_bit_T_196, _id_ctrl_decoder_bit_T_121) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_198 = or(_id_ctrl_decoder_bit_T_197, _id_ctrl_decoder_bit_T_123) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_199 = or(_id_ctrl_decoder_bit_T_198, _id_ctrl_decoder_bit_T_125) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_200 = or(_id_ctrl_decoder_bit_T_199, _id_ctrl_decoder_bit_T_127) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_201 = or(_id_ctrl_decoder_bit_T_200, _id_ctrl_decoder_bit_T_129) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_202 = or(_id_ctrl_decoder_bit_T_201, _id_ctrl_decoder_bit_T_131) @[Decode.scala 15:30]
    node id_ctrl_decoder_0 = or(_id_ctrl_decoder_bit_T_202, _id_ctrl_decoder_bit_T_133) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_1 = eq(_id_ctrl_decoder_T, UInt<32>("h040")) @[Decode.scala 14:121]
    node id_ctrl_decoder_3 = or(UInt<1>("h00"), _id_ctrl_decoder_T_1) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_2 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h048")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_3 = eq(_id_ctrl_decoder_T_2, UInt<32>("h048")) @[Decode.scala 14:121]
    node id_ctrl_decoder_4 = or(UInt<1>("h00"), _id_ctrl_decoder_T_3) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_4 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h01c")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_5 = eq(_id_ctrl_decoder_T_4, UInt<32>("h04")) @[Decode.scala 14:121]
    node id_ctrl_decoder_5 = or(UInt<1>("h00"), _id_ctrl_decoder_T_5) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_6 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h070")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_7 = eq(_id_ctrl_decoder_T_6, UInt<32>("h020")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_8 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h064")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_9 = eq(_id_ctrl_decoder_T_8, UInt<32>("h020")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_10 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_11 = eq(_id_ctrl_decoder_T_10, UInt<32>("h020")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_12 = or(UInt<1>("h00"), _id_ctrl_decoder_T_7) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_13 = or(_id_ctrl_decoder_T_12, _id_ctrl_decoder_T_9) @[Decode.scala 15:30]
    node id_ctrl_decoder_6 = or(_id_ctrl_decoder_T_13, _id_ctrl_decoder_T_11) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_14 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h04004")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_15 = eq(_id_ctrl_decoder_T_14, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_16 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h044")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_17 = eq(_id_ctrl_decoder_T_16, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_18 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h018")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_19 = eq(_id_ctrl_decoder_T_18, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_20 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_21 = eq(_id_ctrl_decoder_T_20, UInt<32>("h02000")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_22 = or(UInt<1>("h00"), _id_ctrl_decoder_T_15) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_23 = or(_id_ctrl_decoder_T_22, _id_ctrl_decoder_T_17) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_24 = or(_id_ctrl_decoder_T_23, _id_ctrl_decoder_T_19) @[Decode.scala 15:30]
    node id_ctrl_decoder_7 = or(_id_ctrl_decoder_T_24, _id_ctrl_decoder_T_21) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_25 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h058")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_26 = eq(_id_ctrl_decoder_T_25, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_27 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h020")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_28 = eq(_id_ctrl_decoder_T_27, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_29 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h0c")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_30 = eq(_id_ctrl_decoder_T_29, UInt<32>("h04")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_31 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h04050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_32 = eq(_id_ctrl_decoder_T_31, UInt<32>("h04050")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_33 = or(UInt<1>("h00"), _id_ctrl_decoder_T_26) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_34 = or(_id_ctrl_decoder_T_33, _id_ctrl_decoder_T_28) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_35 = or(_id_ctrl_decoder_T_34, _id_ctrl_decoder_T_30) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_36 = or(_id_ctrl_decoder_T_35, _id_ctrl_decoder_T_3) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo = or(_id_ctrl_decoder_T_36, _id_ctrl_decoder_T_32) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_37 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h048")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_38 = eq(_id_ctrl_decoder_T_37, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_39 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h04008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_40 = eq(_id_ctrl_decoder_T_39, UInt<32>("h04000")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_41 = or(UInt<1>("h00"), _id_ctrl_decoder_T_38) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_42 = or(_id_ctrl_decoder_T_41, _id_ctrl_decoder_T_19) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi = or(_id_ctrl_decoder_T_42, _id_ctrl_decoder_T_40) @[Decode.scala 15:30]
    node id_ctrl_decoder_9 = cat(id_ctrl_decoder_hi, id_ctrl_decoder_lo) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_43 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_44 = eq(_id_ctrl_decoder_T_43, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_45 = or(UInt<1>("h00"), _id_ctrl_decoder_T_15) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_46 = or(_id_ctrl_decoder_T_45, _id_ctrl_decoder_T_44) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_47 = or(_id_ctrl_decoder_T_46, _id_ctrl_decoder_T_17) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_1 = or(_id_ctrl_decoder_T_47, _id_ctrl_decoder_T_19) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_48 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h024")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_49 = eq(_id_ctrl_decoder_T_48, UInt<32>("h04")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_50 = or(UInt<1>("h00"), _id_ctrl_decoder_T_49) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_1 = or(_id_ctrl_decoder_T_50, _id_ctrl_decoder_T_3) @[Decode.scala 15:30]
    node id_ctrl_decoder_10 = cat(id_ctrl_decoder_hi_1, id_ctrl_decoder_lo_1) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_51 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h08")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_52 = eq(_id_ctrl_decoder_T_51, UInt<32>("h08")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_53 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h044")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_54 = eq(_id_ctrl_decoder_T_53, UInt<32>("h040")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_55 = or(UInt<1>("h00"), _id_ctrl_decoder_T_52) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_2 = or(_id_ctrl_decoder_T_55, _id_ctrl_decoder_T_54) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_56 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h044")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_57 = eq(_id_ctrl_decoder_T_56, UInt<32>("h04")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_58 = or(UInt<1>("h00"), _id_ctrl_decoder_T_57) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_lo = or(_id_ctrl_decoder_T_58, _id_ctrl_decoder_T_52) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_59 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h014")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_60 = eq(_id_ctrl_decoder_T_59, UInt<32>("h010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_61 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h030")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_62 = eq(_id_ctrl_decoder_T_61, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_63 = or(UInt<1>("h00"), _id_ctrl_decoder_T_5) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_64 = or(_id_ctrl_decoder_T_63, _id_ctrl_decoder_T_60) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_hi = or(_id_ctrl_decoder_T_64, _id_ctrl_decoder_T_62) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_2 = cat(id_ctrl_decoder_hi_hi, id_ctrl_decoder_hi_lo) @[Cat.scala 30:58]
    node id_ctrl_decoder_11 = cat(id_ctrl_decoder_hi_2, id_ctrl_decoder_lo_2) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_65 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h00")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_66 = eq(_id_ctrl_decoder_T_65, UInt<32>("h00")) @[Decode.scala 14:121]
    node id_ctrl_decoder_12 = or(UInt<1>("h00"), _id_ctrl_decoder_T_66) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_67 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h03054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_68 = eq(_id_ctrl_decoder_T_67, UInt<32>("h01010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_69 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h01058")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_70 = eq(_id_ctrl_decoder_T_69, UInt<32>("h01040")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_71 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h07044")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_72 = eq(_id_ctrl_decoder_T_71, UInt<32>("h07000")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_73 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02001074")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_74 = eq(_id_ctrl_decoder_T_73, UInt<32>("h02001030")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_75 = or(UInt<1>("h00"), _id_ctrl_decoder_T_68) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_76 = or(_id_ctrl_decoder_T_75, _id_ctrl_decoder_T_70) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_77 = or(_id_ctrl_decoder_T_76, _id_ctrl_decoder_T_72) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_lo = or(_id_ctrl_decoder_T_77, _id_ctrl_decoder_T_74) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_78 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h04054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_79 = eq(_id_ctrl_decoder_T_78, UInt<32>("h040")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_80 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h03044")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_81 = eq(_id_ctrl_decoder_T_80, UInt<32>("h03000")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_82 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h06044")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_83 = eq(_id_ctrl_decoder_T_82, UInt<32>("h06000")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_84 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h06018")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_85 = eq(_id_ctrl_decoder_T_84, UInt<32>("h06000")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_86 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02002074")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_87 = eq(_id_ctrl_decoder_T_86, UInt<32>("h02002030")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_88 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h040003034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_89 = eq(_id_ctrl_decoder_T_88, UInt<32>("h040000030")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_90 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h040001054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_91 = eq(_id_ctrl_decoder_T_90, UInt<32>("h040001010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_92 = or(UInt<1>("h00"), _id_ctrl_decoder_T_79) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_93 = or(_id_ctrl_decoder_T_92, _id_ctrl_decoder_T_81) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_94 = or(_id_ctrl_decoder_T_93, _id_ctrl_decoder_T_83) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_95 = or(_id_ctrl_decoder_T_94, _id_ctrl_decoder_T_85) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_96 = or(_id_ctrl_decoder_T_95, _id_ctrl_decoder_T_87) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_97 = or(_id_ctrl_decoder_T_96, _id_ctrl_decoder_T_89) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_hi = or(_id_ctrl_decoder_T_97, _id_ctrl_decoder_T_91) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_98 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02002054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_99 = eq(_id_ctrl_decoder_T_98, UInt<32>("h02010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_100 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_101 = eq(_id_ctrl_decoder_T_100, UInt<32>("h02010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_102 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h040004054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_103 = eq(_id_ctrl_decoder_T_102, UInt<32>("h04010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_104 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h05054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_105 = eq(_id_ctrl_decoder_T_104, UInt<32>("h04010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_106 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h04058")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_107 = eq(_id_ctrl_decoder_T_106, UInt<32>("h04040")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_108 = or(UInt<1>("h00"), _id_ctrl_decoder_T_99) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_109 = or(_id_ctrl_decoder_T_108, _id_ctrl_decoder_T_101) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_110 = or(_id_ctrl_decoder_T_109, _id_ctrl_decoder_T_103) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_111 = or(_id_ctrl_decoder_T_110, _id_ctrl_decoder_T_105) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_lo_1 = or(_id_ctrl_decoder_T_111, _id_ctrl_decoder_T_107) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_112 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02006054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_113 = eq(_id_ctrl_decoder_T_112, UInt<32>("h02010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_114 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h06034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_115 = eq(_id_ctrl_decoder_T_114, UInt<32>("h02010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_116 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h040003054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_117 = eq(_id_ctrl_decoder_T_116, UInt<32>("h040001010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_118 = or(UInt<1>("h00"), _id_ctrl_decoder_T_113) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_119 = or(_id_ctrl_decoder_T_118, _id_ctrl_decoder_T_115) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_120 = or(_id_ctrl_decoder_T_119, _id_ctrl_decoder_T_107) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_121 = or(_id_ctrl_decoder_T_120, _id_ctrl_decoder_T_89) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_hi_1 = or(_id_ctrl_decoder_T_121, _id_ctrl_decoder_T_117) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_3 = cat(id_ctrl_decoder_lo_hi, id_ctrl_decoder_lo_lo) @[Cat.scala 30:58]
    node id_ctrl_decoder_hi_3 = cat(id_ctrl_decoder_hi_hi_1, id_ctrl_decoder_hi_lo_1) @[Cat.scala 30:58]
    node id_ctrl_decoder_13 = cat(id_ctrl_decoder_hi_3, id_ctrl_decoder_lo_3) @[Cat.scala 30:58]
    node _id_ctrl_decoder_bit_T_203 = or(UInt<1>("h00"), _id_ctrl_decoder_bit_T_17) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_204 = or(_id_ctrl_decoder_bit_T_203, _id_ctrl_decoder_bit_T_19) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_205 = or(_id_ctrl_decoder_bit_T_204, _id_ctrl_decoder_bit_T_21) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_206 = or(_id_ctrl_decoder_bit_T_205, _id_ctrl_decoder_bit_T_23) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_207 = or(_id_ctrl_decoder_bit_T_206, _id_ctrl_decoder_bit_T_25) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_208 = or(_id_ctrl_decoder_bit_T_207, _id_ctrl_decoder_bit_T_27) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_209 = or(_id_ctrl_decoder_bit_T_208, _id_ctrl_decoder_bit_T_29) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_210 = or(_id_ctrl_decoder_bit_T_209, _id_ctrl_decoder_bit_T_31) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_211 = or(_id_ctrl_decoder_bit_T_210, _id_ctrl_decoder_bit_T_33) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_212 = or(_id_ctrl_decoder_bit_T_211, _id_ctrl_decoder_bit_T_35) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_213 = or(_id_ctrl_decoder_bit_T_212, _id_ctrl_decoder_bit_T_37) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_214 = or(_id_ctrl_decoder_bit_T_213, _id_ctrl_decoder_bit_T_66) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_215 = or(_id_ctrl_decoder_bit_T_214, _id_ctrl_decoder_bit_T_68) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_216 = or(_id_ctrl_decoder_bit_T_215, _id_ctrl_decoder_bit_T_70) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_217 = or(_id_ctrl_decoder_bit_T_216, _id_ctrl_decoder_bit_T_72) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_218 = or(_id_ctrl_decoder_bit_T_217, _id_ctrl_decoder_bit_T_74) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_219 = or(_id_ctrl_decoder_bit_T_218, _id_ctrl_decoder_bit_T_76) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_220 = or(_id_ctrl_decoder_bit_T_219, _id_ctrl_decoder_bit_T_78) @[Decode.scala 15:30]
    node id_ctrl_decoder_14 = or(_id_ctrl_decoder_bit_T_220, _id_ctrl_decoder_bit_T_80) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_122 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h028")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_123 = eq(_id_ctrl_decoder_T_122, UInt<32>("h020")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_124 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h018000020")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_125 = eq(_id_ctrl_decoder_T_124, UInt<32>("h018000020")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_126 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h020000020")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_127 = eq(_id_ctrl_decoder_T_126, UInt<32>("h020000020")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_128 = or(UInt<1>("h00"), _id_ctrl_decoder_T_123) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_129 = or(_id_ctrl_decoder_T_128, _id_ctrl_decoder_T_125) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_lo_1 = or(_id_ctrl_decoder_T_129, _id_ctrl_decoder_T_127) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_130 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h010000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_131 = eq(_id_ctrl_decoder_T_130, UInt<32>("h010000008")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_132 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h040000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_133 = eq(_id_ctrl_decoder_T_132, UInt<32>("h040000008")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_134 = or(UInt<1>("h00"), _id_ctrl_decoder_T_131) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_hi_1 = or(_id_ctrl_decoder_T_134, _id_ctrl_decoder_T_133) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_135 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h08000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_136 = eq(_id_ctrl_decoder_T_135, UInt<32>("h08000008")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_137 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h080000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_138 = eq(_id_ctrl_decoder_T_137, UInt<32>("h080000008")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_139 = or(UInt<1>("h00"), _id_ctrl_decoder_T_136) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_140 = or(_id_ctrl_decoder_T_139, _id_ctrl_decoder_T_131) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_lo_2 = or(_id_ctrl_decoder_T_140, _id_ctrl_decoder_T_138) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_141 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h018000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_142 = eq(_id_ctrl_decoder_T_141, UInt<32>("h08")) @[Decode.scala 14:121]
    node id_ctrl_decoder_hi_hi_lo = or(UInt<1>("h00"), _id_ctrl_decoder_T_142) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_4 = cat(id_ctrl_decoder_lo_hi_1, id_ctrl_decoder_lo_lo_1) @[Cat.scala 30:58]
    node id_ctrl_decoder_hi_hi_2 = cat(UInt<1>("h00"), id_ctrl_decoder_hi_hi_lo) @[Cat.scala 30:58]
    node id_ctrl_decoder_hi_4 = cat(id_ctrl_decoder_hi_hi_2, id_ctrl_decoder_hi_lo_2) @[Cat.scala 30:58]
    node id_ctrl_decoder_15 = cat(id_ctrl_decoder_hi_4, id_ctrl_decoder_lo_4) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_143 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02000074")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_144 = eq(_id_ctrl_decoder_T_143, UInt<32>("h02000030")) @[Decode.scala 14:121]
    node id_ctrl_decoder_21 = or(UInt<1>("h00"), _id_ctrl_decoder_T_144) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_145 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h028")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_146 = eq(_id_ctrl_decoder_T_145, UInt<32>("h00")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_147 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_148 = eq(_id_ctrl_decoder_T_147, UInt<32>("h010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_149 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h01010")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_150 = eq(_id_ctrl_decoder_T_149, UInt<32>("h01010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_151 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_152 = eq(_id_ctrl_decoder_T_151, UInt<32>("h02008")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_153 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02010")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_154 = eq(_id_ctrl_decoder_T_153, UInt<32>("h02010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_155 = or(UInt<1>("h00"), _id_ctrl_decoder_T_146) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_156 = or(_id_ctrl_decoder_T_155, _id_ctrl_decoder_T_30) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_157 = or(_id_ctrl_decoder_T_156, _id_ctrl_decoder_T_148) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_158 = or(_id_ctrl_decoder_T_157, _id_ctrl_decoder_T_3) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_159 = or(_id_ctrl_decoder_T_158, _id_ctrl_decoder_T_150) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_160 = or(_id_ctrl_decoder_T_159, _id_ctrl_decoder_T_152) @[Decode.scala 15:30]
    node id_ctrl_decoder_22 = or(_id_ctrl_decoder_T_160, _id_ctrl_decoder_T_154) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_161 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h01050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_162 = eq(_id_ctrl_decoder_T_161, UInt<32>("h01050")) @[Decode.scala 14:121]
    node id_ctrl_decoder_lo_5 = or(UInt<1>("h00"), _id_ctrl_decoder_T_162) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_163 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_164 = eq(_id_ctrl_decoder_T_163, UInt<32>("h02050")) @[Decode.scala 14:121]
    node id_ctrl_decoder_hi_lo_3 = or(UInt<1>("h00"), _id_ctrl_decoder_T_164) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_165 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_166 = eq(_id_ctrl_decoder_T_165, UInt<32>("h050")) @[Decode.scala 14:121]
    node id_ctrl_decoder_hi_hi_3 = or(UInt<1>("h00"), _id_ctrl_decoder_T_166) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_5 = cat(id_ctrl_decoder_hi_hi_3, id_ctrl_decoder_hi_lo_3) @[Cat.scala 30:58]
    node id_ctrl_decoder_23 = cat(id_ctrl_decoder_hi_5, id_ctrl_decoder_lo_5) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_167 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h01048")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_168 = eq(_id_ctrl_decoder_T_167, UInt<32>("h01008")) @[Decode.scala 14:121]
    node id_ctrl_decoder_24 = or(UInt<1>("h00"), _id_ctrl_decoder_T_168) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_169 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02048")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_170 = eq(_id_ctrl_decoder_T_169, UInt<32>("h08")) @[Decode.scala 14:121]
    node id_ctrl_decoder_25 = or(UInt<1>("h00"), _id_ctrl_decoder_T_170) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_171 = and(ibuf.io.inst[0].bits.inst.bits, UInt<32>("h02048")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_172 = eq(_id_ctrl_decoder_T_171, UInt<32>("h02008")) @[Decode.scala 14:121]
    node id_ctrl_decoder_26 = or(UInt<1>("h00"), _id_ctrl_decoder_T_172) @[Decode.scala 15:30]
    id_ctrl.legal <= id_ctrl_decoder_0 @[IDecode.scala 65:42]
    id_ctrl.fp <= UInt<1>("h00") @[IDecode.scala 65:42]
    id_ctrl.rocc <= UInt<1>("h00") @[IDecode.scala 65:42]
    id_ctrl.branch <= id_ctrl_decoder_3 @[IDecode.scala 65:42]
    id_ctrl.jal <= id_ctrl_decoder_4 @[IDecode.scala 65:42]
    id_ctrl.jalr <= id_ctrl_decoder_5 @[IDecode.scala 65:42]
    id_ctrl.rxs2 <= id_ctrl_decoder_6 @[IDecode.scala 65:42]
    id_ctrl.rxs1 <= id_ctrl_decoder_7 @[IDecode.scala 65:42]
    id_ctrl.scie <= UInt<1>("h00") @[IDecode.scala 65:42]
    id_ctrl.sel_alu2 <= id_ctrl_decoder_9 @[IDecode.scala 65:42]
    id_ctrl.sel_alu1 <= id_ctrl_decoder_10 @[IDecode.scala 65:42]
    id_ctrl.sel_imm <= id_ctrl_decoder_11 @[IDecode.scala 65:42]
    id_ctrl.alu_dw <= id_ctrl_decoder_12 @[IDecode.scala 65:42]
    id_ctrl.alu_fn <= id_ctrl_decoder_13 @[IDecode.scala 65:42]
    id_ctrl.mem <= id_ctrl_decoder_14 @[IDecode.scala 65:42]
    id_ctrl.mem_cmd <= id_ctrl_decoder_15 @[IDecode.scala 65:42]
    id_ctrl.rfs1 <= UInt<1>("h00") @[IDecode.scala 65:42]
    id_ctrl.rfs2 <= UInt<1>("h00") @[IDecode.scala 65:42]
    id_ctrl.rfs3 <= UInt<1>("h00") @[IDecode.scala 65:42]
    id_ctrl.wfd <= UInt<1>("h00") @[IDecode.scala 65:42]
    id_ctrl.mul <= UInt<1>("h00") @[IDecode.scala 65:42]
    id_ctrl.div <= id_ctrl_decoder_21 @[IDecode.scala 65:42]
    id_ctrl.wxd <= id_ctrl_decoder_22 @[IDecode.scala 65:42]
    id_ctrl.csr <= id_ctrl_decoder_23 @[IDecode.scala 65:42]
    id_ctrl.fence_i <= id_ctrl_decoder_24 @[IDecode.scala 65:42]
    id_ctrl.fence <= id_ctrl_decoder_25 @[IDecode.scala 65:42]
    id_ctrl.amo <= id_ctrl_decoder_26 @[IDecode.scala 65:42]
    id_ctrl.dp <= UInt<1>("h00") @[IDecode.scala 65:42]
    node id_raddr3 = bits(ibuf.io.inst[0].bits.inst.rs3, 4, 0) @[RocketCore.scala 267:72]
    node id_raddr2 = bits(ibuf.io.inst[0].bits.inst.rs2, 4, 0) @[RocketCore.scala 267:72]
    node id_raddr1 = bits(ibuf.io.inst[0].bits.inst.rs1, 4, 0) @[RocketCore.scala 267:72]
    node id_waddr = bits(ibuf.io.inst[0].bits.inst.rd, 4, 0) @[RocketCore.scala 267:72]
    wire id_load_use : UInt<1> @[RocketCore.scala 273:25]
    id_load_use is invalid @[RocketCore.scala 273:25]
    reg id_reg_fence : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[RocketCore.scala 274:25]
    cmem rf : UInt<32>[31] @[RocketCore.scala 1015:15]
    wire id_rs_0 : UInt @[RocketCore.scala 1021:26]
    id_rs_0 is invalid @[RocketCore.scala 1021:26]
    node _id_rs_T = eq(id_raddr1, UInt<1>("h00")) @[RocketCore.scala 1022:45]
    node _id_rs_T_1 = and(UInt<1>("h00"), _id_rs_T) @[RocketCore.scala 1022:37]
    node _id_rs_T_2 = bits(id_raddr1, 4, 0) @[RocketCore.scala 1016:44]
    node _id_rs_T_3 = not(_id_rs_T_2) @[RocketCore.scala 1016:39]
    infer mport id_rs_MPORT = rf[_id_rs_T_3], clock @[RocketCore.scala 1016:38]
    node _id_rs_T_4 = mux(_id_rs_T_1, UInt<1>("h00"), id_rs_MPORT) @[RocketCore.scala 1022:25]
    id_rs_0 <= _id_rs_T_4 @[RocketCore.scala 1022:19]
    wire id_rs_1 : UInt @[RocketCore.scala 1021:26]
    id_rs_1 is invalid @[RocketCore.scala 1021:26]
    node _id_rs_T_5 = eq(id_raddr2, UInt<1>("h00")) @[RocketCore.scala 1022:45]
    node _id_rs_T_6 = and(UInt<1>("h00"), _id_rs_T_5) @[RocketCore.scala 1022:37]
    node _id_rs_T_7 = bits(id_raddr2, 4, 0) @[RocketCore.scala 1016:44]
    node _id_rs_T_8 = not(_id_rs_T_7) @[RocketCore.scala 1016:39]
    infer mport id_rs_MPORT_1 = rf[_id_rs_T_8], clock @[RocketCore.scala 1016:38]
    node _id_rs_T_9 = mux(_id_rs_T_6, UInt<1>("h00"), id_rs_MPORT_1) @[RocketCore.scala 1022:25]
    id_rs_1 <= _id_rs_T_9 @[RocketCore.scala 1022:19]
    wire ctrl_killd : UInt<1> @[RocketCore.scala 279:24]
    ctrl_killd is invalid @[RocketCore.scala 279:24]
    node _id_npc_T = asSInt(ibuf.io.pc) @[RocketCore.scala 280:28]
    node _id_npc_sign_T = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1037:24]
    node _id_npc_sign_T_1 = bits(ibuf.io.inst[0].bits.inst.bits, 31, 31) @[RocketCore.scala 1037:48]
    node _id_npc_sign_T_2 = asSInt(_id_npc_sign_T_1) @[RocketCore.scala 1037:53]
    node id_npc_sign = mux(_id_npc_sign_T, asSInt(UInt<1>("h00")), _id_npc_sign_T_2) @[RocketCore.scala 1037:19]
    node _id_npc_b30_20_T = eq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1038:26]
    node _id_npc_b30_20_T_1 = bits(ibuf.io.inst[0].bits.inst.bits, 30, 20) @[RocketCore.scala 1038:41]
    node _id_npc_b30_20_T_2 = asSInt(_id_npc_b30_20_T_1) @[RocketCore.scala 1038:49]
    node id_npc_b30_20 = mux(_id_npc_b30_20_T, _id_npc_b30_20_T_2, id_npc_sign) @[RocketCore.scala 1038:21]
    node _id_npc_b19_12_T = neq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1039:26]
    node _id_npc_b19_12_T_1 = neq(UInt<3>("h03"), UInt<3>("h03")) @[RocketCore.scala 1039:43]
    node _id_npc_b19_12_T_2 = and(_id_npc_b19_12_T, _id_npc_b19_12_T_1) @[RocketCore.scala 1039:36]
    node _id_npc_b19_12_T_3 = bits(ibuf.io.inst[0].bits.inst.bits, 19, 12) @[RocketCore.scala 1039:65]
    node _id_npc_b19_12_T_4 = asSInt(_id_npc_b19_12_T_3) @[RocketCore.scala 1039:73]
    node id_npc_b19_12 = mux(_id_npc_b19_12_T_2, id_npc_sign, _id_npc_b19_12_T_4) @[RocketCore.scala 1039:21]
    node _id_npc_b11_T = eq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1040:23]
    node _id_npc_b11_T_1 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1040:40]
    node _id_npc_b11_T_2 = or(_id_npc_b11_T, _id_npc_b11_T_1) @[RocketCore.scala 1040:33]
    node _id_npc_b11_T_3 = eq(UInt<3>("h03"), UInt<3>("h03")) @[RocketCore.scala 1041:23]
    node _id_npc_b11_T_4 = bits(ibuf.io.inst[0].bits.inst.bits, 20, 20) @[RocketCore.scala 1041:39]
    node _id_npc_b11_T_5 = asSInt(_id_npc_b11_T_4) @[RocketCore.scala 1041:44]
    node _id_npc_b11_T_6 = eq(UInt<3>("h03"), UInt<3>("h01")) @[RocketCore.scala 1042:23]
    node _id_npc_b11_T_7 = bits(ibuf.io.inst[0].bits.inst.bits, 7, 7) @[RocketCore.scala 1042:39]
    node _id_npc_b11_T_8 = asSInt(_id_npc_b11_T_7) @[RocketCore.scala 1042:43]
    node _id_npc_b11_T_9 = mux(_id_npc_b11_T_6, _id_npc_b11_T_8, id_npc_sign) @[RocketCore.scala 1042:18]
    node _id_npc_b11_T_10 = mux(_id_npc_b11_T_3, _id_npc_b11_T_5, _id_npc_b11_T_9) @[RocketCore.scala 1041:18]
    node id_npc_b11 = mux(_id_npc_b11_T_2, asSInt(UInt<1>("h00")), _id_npc_b11_T_10) @[RocketCore.scala 1040:18]
    node _id_npc_b10_5_T = eq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1043:25]
    node _id_npc_b10_5_T_1 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1043:42]
    node _id_npc_b10_5_T_2 = or(_id_npc_b10_5_T, _id_npc_b10_5_T_1) @[RocketCore.scala 1043:35]
    node _id_npc_b10_5_T_3 = bits(ibuf.io.inst[0].bits.inst.bits, 30, 25) @[RocketCore.scala 1043:66]
    node id_npc_lo_hi_hi = mux(_id_npc_b10_5_T_2, UInt<1>("h00"), _id_npc_b10_5_T_3) @[RocketCore.scala 1043:20]
    node _id_npc_b4_1_T = eq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1044:24]
    node _id_npc_b4_1_T_1 = eq(UInt<3>("h03"), UInt<3>("h00")) @[RocketCore.scala 1045:24]
    node _id_npc_b4_1_T_2 = eq(UInt<3>("h03"), UInt<3>("h01")) @[RocketCore.scala 1045:41]
    node _id_npc_b4_1_T_3 = or(_id_npc_b4_1_T_1, _id_npc_b4_1_T_2) @[RocketCore.scala 1045:34]
    node _id_npc_b4_1_T_4 = bits(ibuf.io.inst[0].bits.inst.bits, 11, 8) @[RocketCore.scala 1045:57]
    node _id_npc_b4_1_T_5 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1046:24]
    node _id_npc_b4_1_T_6 = bits(ibuf.io.inst[0].bits.inst.bits, 19, 16) @[RocketCore.scala 1046:39]
    node _id_npc_b4_1_T_7 = bits(ibuf.io.inst[0].bits.inst.bits, 24, 21) @[RocketCore.scala 1046:52]
    node _id_npc_b4_1_T_8 = mux(_id_npc_b4_1_T_5, _id_npc_b4_1_T_6, _id_npc_b4_1_T_7) @[RocketCore.scala 1046:19]
    node _id_npc_b4_1_T_9 = mux(_id_npc_b4_1_T_3, _id_npc_b4_1_T_4, _id_npc_b4_1_T_8) @[RocketCore.scala 1045:19]
    node id_npc_lo_hi_lo = mux(_id_npc_b4_1_T, UInt<1>("h00"), _id_npc_b4_1_T_9) @[RocketCore.scala 1044:19]
    node _id_npc_b0_T = eq(UInt<3>("h03"), UInt<3>("h00")) @[RocketCore.scala 1047:22]
    node _id_npc_b0_T_1 = bits(ibuf.io.inst[0].bits.inst.bits, 7, 7) @[RocketCore.scala 1047:37]
    node _id_npc_b0_T_2 = eq(UInt<3>("h03"), UInt<3>("h04")) @[RocketCore.scala 1048:22]
    node _id_npc_b0_T_3 = bits(ibuf.io.inst[0].bits.inst.bits, 20, 20) @[RocketCore.scala 1048:37]
    node _id_npc_b0_T_4 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1049:22]
    node _id_npc_b0_T_5 = bits(ibuf.io.inst[0].bits.inst.bits, 15, 15) @[RocketCore.scala 1049:37]
    node _id_npc_b0_T_6 = mux(_id_npc_b0_T_4, _id_npc_b0_T_5, UInt<1>("h00")) @[RocketCore.scala 1049:17]
    node _id_npc_b0_T_7 = mux(_id_npc_b0_T_2, _id_npc_b0_T_3, _id_npc_b0_T_6) @[RocketCore.scala 1048:17]
    node id_npc_lo_lo = mux(_id_npc_b0_T, _id_npc_b0_T_1, _id_npc_b0_T_7) @[RocketCore.scala 1047:17]
    node id_npc_lo_hi = cat(id_npc_lo_hi_hi, id_npc_lo_hi_lo) @[Cat.scala 30:58]
    node id_npc_lo = cat(id_npc_lo_hi, id_npc_lo_lo) @[Cat.scala 30:58]
    node id_npc_hi_lo_lo = asUInt(id_npc_b11) @[Cat.scala 30:58]
    node id_npc_hi_lo_hi = asUInt(id_npc_b19_12) @[Cat.scala 30:58]
    node id_npc_hi_lo = cat(id_npc_hi_lo_hi, id_npc_hi_lo_lo) @[Cat.scala 30:58]
    node id_npc_hi_hi_lo = asUInt(id_npc_b30_20) @[Cat.scala 30:58]
    node id_npc_hi_hi_hi = asUInt(id_npc_sign) @[Cat.scala 30:58]
    node id_npc_hi_hi = cat(id_npc_hi_hi_hi, id_npc_hi_hi_lo) @[Cat.scala 30:58]
    node id_npc_hi = cat(id_npc_hi_hi, id_npc_hi_lo) @[Cat.scala 30:58]
    node _id_npc_T_1 = cat(id_npc_hi, id_npc_lo) @[Cat.scala 30:58]
    node _id_npc_T_2 = asSInt(_id_npc_T_1) @[RocketCore.scala 1051:53]
    node _id_npc_T_3 = add(_id_npc_T, _id_npc_T_2) @[RocketCore.scala 280:35]
    node _id_npc_T_4 = tail(_id_npc_T_3, 1) @[RocketCore.scala 280:35]
    node _id_npc_T_5 = asSInt(_id_npc_T_4) @[RocketCore.scala 280:35]
    node id_npc = asUInt(_id_npc_T_5) @[RocketCore.scala 280:65]
    inst csr of CSRFile @[RocketCore.scala 282:19]
    csr.io is invalid
    csr.clock <= clock
    csr.reset <= reset
    node _id_csr_en_T = eq(id_ctrl.csr, UInt<3>("h06")) @[package.scala 15:47]
    node _id_csr_en_T_1 = eq(id_ctrl.csr, UInt<3>("h07")) @[package.scala 15:47]
    node _id_csr_en_T_2 = eq(id_ctrl.csr, UInt<3>("h05")) @[package.scala 15:47]
    node _id_csr_en_T_3 = or(_id_csr_en_T, _id_csr_en_T_1) @[package.scala 72:59]
    node id_csr_en = or(_id_csr_en_T_3, _id_csr_en_T_2) @[package.scala 72:59]
    node id_system_insn = eq(id_ctrl.csr, UInt<3>("h04")) @[RocketCore.scala 284:36]
    node _id_csr_ren_T = eq(id_ctrl.csr, UInt<3>("h06")) @[package.scala 15:47]
    node _id_csr_ren_T_1 = eq(id_ctrl.csr, UInt<3>("h07")) @[package.scala 15:47]
    node _id_csr_ren_T_2 = or(_id_csr_ren_T, _id_csr_ren_T_1) @[package.scala 72:59]
    node _id_csr_ren_T_3 = eq(id_raddr1, UInt<1>("h00")) @[RocketCore.scala 285:67]
    node id_csr_ren = and(_id_csr_ren_T_2, _id_csr_ren_T_3) @[RocketCore.scala 285:54]
    node id_csr = mux(id_csr_ren, UInt<3>("h02"), id_ctrl.csr) @[RocketCore.scala 286:19]
    node _id_sfence_T = eq(id_ctrl.mem_cmd, UInt<5>("h014")) @[RocketCore.scala 287:50]
    node id_sfence = and(id_ctrl.mem, _id_sfence_T) @[RocketCore.scala 287:31]
    node _id_csr_flush_T = or(id_sfence, id_system_insn) @[RocketCore.scala 288:32]
    node _id_csr_flush_T_1 = eq(id_csr_ren, UInt<1>("h00")) @[RocketCore.scala 288:67]
    node _id_csr_flush_T_2 = and(id_csr_en, _id_csr_flush_T_1) @[RocketCore.scala 288:64]
    node _id_csr_flush_T_3 = and(_id_csr_flush_T_2, csr.io.decode[0].write_flush) @[RocketCore.scala 288:79]
    node id_csr_flush = or(_id_csr_flush_T, _id_csr_flush_T_3) @[RocketCore.scala 288:50]
    wire id_scie_decoder : {flip insn : UInt<32>, unpipelined : UInt<1>, pipelined : UInt<1>, multicycle : UInt<1>} @[RocketCore.scala 290:56]
    id_scie_decoder is invalid @[RocketCore.scala 290:56]
    node _id_illegal_insn_T = eq(id_ctrl.legal, UInt<1>("h00")) @[RocketCore.scala 296:25]
    node _id_illegal_insn_T_1 = or(id_ctrl.mul, id_ctrl.div) @[RocketCore.scala 297:18]
    node _id_illegal_insn_T_2 = bits(csr.io.status.isa, 12, 12) @[RocketCore.scala 297:55]
    node _id_illegal_insn_T_3 = eq(_id_illegal_insn_T_2, UInt<1>("h00")) @[RocketCore.scala 297:37]
    node _id_illegal_insn_T_4 = and(_id_illegal_insn_T_1, _id_illegal_insn_T_3) @[RocketCore.scala 297:34]
    node _id_illegal_insn_T_5 = or(_id_illegal_insn_T, _id_illegal_insn_T_4) @[RocketCore.scala 296:40]
    node _id_illegal_insn_T_6 = bits(csr.io.status.isa, 0, 0) @[RocketCore.scala 298:38]
    node _id_illegal_insn_T_7 = eq(_id_illegal_insn_T_6, UInt<1>("h00")) @[RocketCore.scala 298:20]
    node _id_illegal_insn_T_8 = and(id_ctrl.amo, _id_illegal_insn_T_7) @[RocketCore.scala 298:17]
    node _id_illegal_insn_T_9 = or(_id_illegal_insn_T_5, _id_illegal_insn_T_8) @[RocketCore.scala 297:65]
    node _id_illegal_insn_T_10 = or(csr.io.decode[0].fp_illegal, io.fpu.illegal_rm) @[RocketCore.scala 299:48]
    node _id_illegal_insn_T_11 = and(id_ctrl.fp, _id_illegal_insn_T_10) @[RocketCore.scala 299:16]
    node _id_illegal_insn_T_12 = or(_id_illegal_insn_T_9, _id_illegal_insn_T_11) @[RocketCore.scala 298:48]
    node _id_illegal_insn_T_13 = bits(csr.io.status.isa, 3, 3) @[RocketCore.scala 300:37]
    node _id_illegal_insn_T_14 = eq(_id_illegal_insn_T_13, UInt<1>("h00")) @[RocketCore.scala 300:19]
    node _id_illegal_insn_T_15 = and(id_ctrl.dp, _id_illegal_insn_T_14) @[RocketCore.scala 300:16]
    node _id_illegal_insn_T_16 = or(_id_illegal_insn_T_12, _id_illegal_insn_T_15) @[RocketCore.scala 299:70]
    node _id_illegal_insn_T_17 = bits(csr.io.status.isa, 2, 2) @[RocketCore.scala 301:51]
    node _id_illegal_insn_T_18 = eq(_id_illegal_insn_T_17, UInt<1>("h00")) @[RocketCore.scala 301:33]
    node _id_illegal_insn_T_19 = and(ibuf.io.inst[0].bits.rvc, _id_illegal_insn_T_18) @[RocketCore.scala 301:30]
    node _id_illegal_insn_T_20 = or(_id_illegal_insn_T_16, _id_illegal_insn_T_19) @[RocketCore.scala 300:47]
    node _id_illegal_insn_T_21 = eq(id_ctrl.scie, UInt<1>("h00")) @[RocketCore.scala 302:26]
    node _id_illegal_insn_T_22 = and(UInt<1>("h00"), _id_illegal_insn_T_21) @[RocketCore.scala 302:23]
    node _id_illegal_insn_T_23 = and(_id_illegal_insn_T_22, id_ctrl.rxs2) @[RocketCore.scala 302:40]
    node _id_illegal_insn_T_24 = or(_id_illegal_insn_T_20, _id_illegal_insn_T_23) @[RocketCore.scala 301:61]
    node _id_illegal_insn_T_25 = eq(id_ctrl.scie, UInt<1>("h00")) @[RocketCore.scala 303:26]
    node _id_illegal_insn_T_26 = and(UInt<1>("h00"), _id_illegal_insn_T_25) @[RocketCore.scala 303:23]
    node _id_illegal_insn_T_27 = and(_id_illegal_insn_T_26, id_ctrl.rxs1) @[RocketCore.scala 303:40]
    node _id_illegal_insn_T_28 = or(_id_illegal_insn_T_24, _id_illegal_insn_T_27) @[RocketCore.scala 302:56]
    node _id_illegal_insn_T_29 = eq(id_ctrl.scie, UInt<1>("h00")) @[RocketCore.scala 304:25]
    node _id_illegal_insn_T_30 = and(UInt<1>("h00"), _id_illegal_insn_T_29) @[RocketCore.scala 304:22]
    node _id_illegal_insn_T_31 = and(_id_illegal_insn_T_30, id_ctrl.wxd) @[RocketCore.scala 304:39]
    node _id_illegal_insn_T_32 = or(_id_illegal_insn_T_28, _id_illegal_insn_T_31) @[RocketCore.scala 303:56]
    node _id_illegal_insn_T_33 = and(id_ctrl.rocc, csr.io.decode[0].rocc_illegal) @[RocketCore.scala 305:18]
    node _id_illegal_insn_T_34 = or(_id_illegal_insn_T_32, _id_illegal_insn_T_33) @[RocketCore.scala 304:54]
    node _id_illegal_insn_T_35 = or(id_scie_decoder.unpipelined, id_scie_decoder.pipelined) @[RocketCore.scala 306:51]
    node _id_illegal_insn_T_36 = eq(_id_illegal_insn_T_35, UInt<1>("h00")) @[RocketCore.scala 306:21]
    node _id_illegal_insn_T_37 = and(id_ctrl.scie, _id_illegal_insn_T_36) @[RocketCore.scala 306:18]
    node _id_illegal_insn_T_38 = or(_id_illegal_insn_T_34, _id_illegal_insn_T_37) @[RocketCore.scala 305:51]
    node _id_illegal_insn_T_39 = eq(id_csr_ren, UInt<1>("h00")) @[RocketCore.scala 307:52]
    node _id_illegal_insn_T_40 = and(_id_illegal_insn_T_39, csr.io.decode[0].write_illegal) @[RocketCore.scala 307:64]
    node _id_illegal_insn_T_41 = or(csr.io.decode[0].read_illegal, _id_illegal_insn_T_40) @[RocketCore.scala 307:49]
    node _id_illegal_insn_T_42 = and(id_csr_en, _id_illegal_insn_T_41) @[RocketCore.scala 307:15]
    node _id_illegal_insn_T_43 = or(_id_illegal_insn_T_38, _id_illegal_insn_T_42) @[RocketCore.scala 306:81]
    node _id_illegal_insn_T_44 = eq(ibuf.io.inst[0].bits.rvc, UInt<1>("h00")) @[RocketCore.scala 308:5]
    node _id_illegal_insn_T_45 = or(id_sfence, id_system_insn) @[RocketCore.scala 308:46]
    node _id_illegal_insn_T_46 = and(_id_illegal_insn_T_45, csr.io.decode[0].system_illegal) @[RocketCore.scala 308:65]
    node _id_illegal_insn_T_47 = and(_id_illegal_insn_T_44, _id_illegal_insn_T_46) @[RocketCore.scala 308:31]
    node id_illegal_insn = or(_id_illegal_insn_T_43, _id_illegal_insn_T_47) @[RocketCore.scala 307:99]
    node id_amo_aq = bits(ibuf.io.inst[0].bits.inst.bits, 26, 26) @[RocketCore.scala 310:29]
    node id_amo_rl = bits(ibuf.io.inst[0].bits.inst.bits, 25, 25) @[RocketCore.scala 311:29]
    node id_fence_pred = bits(ibuf.io.inst[0].bits.inst.bits, 27, 24) @[RocketCore.scala 312:33]
    node id_fence_succ = bits(ibuf.io.inst[0].bits.inst.bits, 23, 20) @[RocketCore.scala 313:33]
    node _id_fence_next_T = and(id_ctrl.amo, id_amo_aq) @[RocketCore.scala 314:52]
    node id_fence_next = or(id_ctrl.fence, _id_fence_next_T) @[RocketCore.scala 314:37]
    node _id_mem_busy_T = eq(io.dmem.ordered, UInt<1>("h00")) @[RocketCore.scala 315:21]
    node id_mem_busy = or(_id_mem_busy_T, io.dmem.req.valid) @[RocketCore.scala 315:38]
    node _T = eq(id_mem_busy, UInt<1>("h00")) @[RocketCore.scala 316:9]
    when _T : @[RocketCore.scala 316:23]
      id_reg_fence <= UInt<1>("h00") @[RocketCore.scala 316:38]
      skip @[RocketCore.scala 316:23]
    node _id_rocc_busy_T = and(ex_reg_valid, ex_ctrl.rocc) @[RocketCore.scala 318:35]
    node _id_rocc_busy_T_1 = or(io.rocc.busy, _id_rocc_busy_T) @[RocketCore.scala 318:19]
    node _id_rocc_busy_T_2 = and(mem_reg_valid, mem_ctrl.rocc) @[RocketCore.scala 319:20]
    node _id_rocc_busy_T_3 = or(_id_rocc_busy_T_1, _id_rocc_busy_T_2) @[RocketCore.scala 318:51]
    node _id_rocc_busy_T_4 = and(wb_reg_valid, wb_ctrl.rocc) @[RocketCore.scala 319:53]
    node _id_rocc_busy_T_5 = or(_id_rocc_busy_T_3, _id_rocc_busy_T_4) @[RocketCore.scala 319:37]
    node id_rocc_busy = and(UInt<1>("h00"), _id_rocc_busy_T_5) @[RocketCore.scala 317:38]
    node _id_do_fence_x8_T = and(id_rocc_busy, id_ctrl.fence) @[RocketCore.scala 320:46]
    node _id_do_fence_x8_T_1 = and(id_ctrl.amo, id_amo_rl) @[RocketCore.scala 321:33]
    node _id_do_fence_x8_T_2 = or(_id_do_fence_x8_T_1, id_ctrl.fence_i) @[RocketCore.scala 321:46]
    node _id_do_fence_x8_T_3 = or(id_ctrl.mem, id_ctrl.rocc) @[RocketCore.scala 321:97]
    node _id_do_fence_x8_T_4 = and(id_reg_fence, _id_do_fence_x8_T_3) @[RocketCore.scala 321:81]
    node _id_do_fence_x8_T_5 = or(_id_do_fence_x8_T_2, _id_do_fence_x8_T_4) @[RocketCore.scala 321:65]
    node _id_do_fence_x8_T_6 = and(id_mem_busy, _id_do_fence_x8_T_5) @[RocketCore.scala 321:17]
    node id_do_fence_x8 = or(_id_do_fence_x8_T, _id_do_fence_x8_T_6) @[RocketCore.scala 320:63]
    wire id_do_fence : UInt<1>
    id_do_fence is invalid
    id_do_fence <= id_do_fence_x8
    inst bpu of BreakpointUnit @[RocketCore.scala 323:19]
    bpu.io is invalid
    bpu.clock <= clock
    bpu.reset <= reset
    bpu.io.status <- csr.io.status @[RocketCore.scala 324:17]
    bpu.io.bp <- csr.io.bp @[RocketCore.scala 325:13]
    bpu.io.pc <= ibuf.io.pc @[RocketCore.scala 326:13]
    bpu.io.ea <= mem_reg_wdata @[RocketCore.scala 327:13]
    bpu.io.mcontext <= csr.io.mcontext @[RocketCore.scala 328:19]
    bpu.io.scontext <= csr.io.scontext @[RocketCore.scala 329:19]
    node _T_1 = or(csr.io.interrupt, bpu.io.debug_if) @[RocketCore.scala 975:26]
    node _T_2 = or(_T_1, bpu.io.xcpt_if) @[RocketCore.scala 975:26]
    node _T_3 = or(_T_2, ibuf.io.inst[0].bits.xcpt0.pf.inst) @[RocketCore.scala 975:26]
    node _T_4 = or(_T_3, ibuf.io.inst[0].bits.xcpt0.ae.inst) @[RocketCore.scala 975:26]
    node _T_5 = or(_T_4, ibuf.io.inst[0].bits.xcpt1.pf.inst) @[RocketCore.scala 975:26]
    node _T_6 = or(_T_5, ibuf.io.inst[0].bits.xcpt1.ae.inst) @[RocketCore.scala 975:26]
    node id_xcpt = or(_T_6, id_illegal_insn) @[RocketCore.scala 975:26]
    node _T_7 = mux(ibuf.io.inst[0].bits.xcpt1.ae.inst, UInt<1>("h01"), UInt<2>("h02")) @[Mux.scala 47:69]
    node _T_8 = mux(ibuf.io.inst[0].bits.xcpt1.pf.inst, UInt<4>("h0c"), _T_7) @[Mux.scala 47:69]
    node _T_9 = mux(ibuf.io.inst[0].bits.xcpt0.ae.inst, UInt<1>("h01"), _T_8) @[Mux.scala 47:69]
    node _T_10 = mux(ibuf.io.inst[0].bits.xcpt0.pf.inst, UInt<4>("h0c"), _T_9) @[Mux.scala 47:69]
    node _T_11 = mux(bpu.io.xcpt_if, UInt<2>("h03"), _T_10) @[Mux.scala 47:69]
    node _T_12 = mux(bpu.io.debug_if, UInt<4>("h0e"), _T_11) @[Mux.scala 47:69]
    node id_cause = mux(csr.io.interrupt, csr.io.interrupt_cause, _T_12) @[Mux.scala 47:69]
    node _T_13 = eq(id_cause, UInt<4>("h0e")) @[RocketCore.scala 979:38]
    node _T_14 = and(id_xcpt, _T_13) @[RocketCore.scala 979:28]
    node _T_15 = eq(id_cause, UInt<2>("h03")) @[RocketCore.scala 979:38]
    node _T_16 = and(id_xcpt, _T_15) @[RocketCore.scala 979:28]
    node _T_17 = eq(id_cause, UInt<1>("h01")) @[RocketCore.scala 979:38]
    node _T_18 = and(id_xcpt, _T_17) @[RocketCore.scala 979:28]
    node _T_19 = eq(id_cause, UInt<2>("h02")) @[RocketCore.scala 979:38]
    node _T_20 = and(id_xcpt, _T_19) @[RocketCore.scala 979:28]
    node dcache_bypass_data = bits(io.dmem.resp.bits.data_word_bypass, 31, 0) @[RocketCore.scala 355:62]
    node _ex_waddr_T = bits(ex_reg_inst, 11, 7) @[RocketCore.scala 359:29]
    node ex_waddr = and(_ex_waddr_T, UInt<5>("h01f")) @[RocketCore.scala 359:36]
    node _mem_waddr_T = bits(mem_reg_inst, 11, 7) @[RocketCore.scala 360:31]
    node mem_waddr = and(_mem_waddr_T, UInt<5>("h01f")) @[RocketCore.scala 360:38]
    node _wb_waddr_T = bits(wb_reg_inst, 11, 7) @[RocketCore.scala 361:29]
    node wb_waddr = and(_wb_waddr_T, UInt<5>("h01f")) @[RocketCore.scala 361:36]
    node _T_21 = and(ex_reg_valid, ex_ctrl.wxd) @[RocketCore.scala 364:19]
    node _T_22 = and(mem_reg_valid, mem_ctrl.wxd) @[RocketCore.scala 365:20]
    node _T_23 = eq(mem_ctrl.mem, UInt<1>("h00")) @[RocketCore.scala 365:39]
    node _T_24 = and(_T_22, _T_23) @[RocketCore.scala 365:36]
    node _T_25 = and(mem_reg_valid, mem_ctrl.wxd) @[RocketCore.scala 366:20]
    node _id_bypass_src_T = eq(UInt<1>("h00"), id_raddr1) @[RocketCore.scala 367:82]
    node id_bypass_src_0_0 = and(UInt<1>("h01"), _id_bypass_src_T) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_1 = eq(ex_waddr, id_raddr1) @[RocketCore.scala 367:82]
    node id_bypass_src_0_1 = and(_T_21, _id_bypass_src_T_1) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_2 = eq(mem_waddr, id_raddr1) @[RocketCore.scala 367:82]
    node id_bypass_src_0_2 = and(_T_24, _id_bypass_src_T_2) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_3 = eq(mem_waddr, id_raddr1) @[RocketCore.scala 367:82]
    node id_bypass_src_0_3 = and(_T_25, _id_bypass_src_T_3) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_4 = eq(UInt<1>("h00"), id_raddr2) @[RocketCore.scala 367:82]
    node id_bypass_src_1_0 = and(UInt<1>("h01"), _id_bypass_src_T_4) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_5 = eq(ex_waddr, id_raddr2) @[RocketCore.scala 367:82]
    node id_bypass_src_1_1 = and(_T_21, _id_bypass_src_T_5) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_6 = eq(mem_waddr, id_raddr2) @[RocketCore.scala 367:82]
    node id_bypass_src_1_2 = and(_T_24, _id_bypass_src_T_6) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_7 = eq(mem_waddr, id_raddr2) @[RocketCore.scala 367:82]
    node id_bypass_src_1_3 = and(_T_25, _id_bypass_src_T_7) @[RocketCore.scala 367:74]
    reg ex_reg_rs_bypass : UInt<1>[2], clock @[RocketCore.scala 371:29]
    reg ex_reg_rs_lsb : UInt<2>[2], clock @[RocketCore.scala 372:26]
    reg ex_reg_rs_msb : UInt[2], clock @[RocketCore.scala 373:26]
    node _ex_rs_T = eq(ex_reg_rs_lsb[0], UInt<1>("h01")) @[package.scala 32:86]
    node _ex_rs_T_1 = mux(_ex_rs_T, mem_reg_wdata, UInt<1>("h00")) @[package.scala 32:76]
    node _ex_rs_T_2 = eq(ex_reg_rs_lsb[0], UInt<2>("h02")) @[package.scala 32:86]
    node _ex_rs_T_3 = mux(_ex_rs_T_2, wb_reg_wdata, _ex_rs_T_1) @[package.scala 32:76]
    node _ex_rs_T_4 = eq(ex_reg_rs_lsb[0], UInt<2>("h03")) @[package.scala 32:86]
    node _ex_rs_T_5 = mux(_ex_rs_T_4, dcache_bypass_data, _ex_rs_T_3) @[package.scala 32:76]
    node _ex_rs_T_6 = cat(ex_reg_rs_msb[0], ex_reg_rs_lsb[0]) @[Cat.scala 30:58]
    node ex_rs_0 = mux(ex_reg_rs_bypass[0], _ex_rs_T_5, _ex_rs_T_6) @[RocketCore.scala 375:14]
    node _ex_rs_T_7 = eq(ex_reg_rs_lsb[1], UInt<1>("h01")) @[package.scala 32:86]
    node _ex_rs_T_8 = mux(_ex_rs_T_7, mem_reg_wdata, UInt<1>("h00")) @[package.scala 32:76]
    node _ex_rs_T_9 = eq(ex_reg_rs_lsb[1], UInt<2>("h02")) @[package.scala 32:86]
    node _ex_rs_T_10 = mux(_ex_rs_T_9, wb_reg_wdata, _ex_rs_T_8) @[package.scala 32:76]
    node _ex_rs_T_11 = eq(ex_reg_rs_lsb[1], UInt<2>("h03")) @[package.scala 32:86]
    node _ex_rs_T_12 = mux(_ex_rs_T_11, dcache_bypass_data, _ex_rs_T_10) @[package.scala 32:76]
    node _ex_rs_T_13 = cat(ex_reg_rs_msb[1], ex_reg_rs_lsb[1]) @[Cat.scala 30:58]
    node ex_rs_1 = mux(ex_reg_rs_bypass[1], _ex_rs_T_12, _ex_rs_T_13) @[RocketCore.scala 375:14]
    node _ex_imm_sign_T = eq(ex_ctrl.sel_imm, UInt<3>("h05")) @[RocketCore.scala 1037:24]
    node _ex_imm_sign_T_1 = bits(ex_reg_inst, 31, 31) @[RocketCore.scala 1037:48]
    node _ex_imm_sign_T_2 = asSInt(_ex_imm_sign_T_1) @[RocketCore.scala 1037:53]
    node ex_imm_sign = mux(_ex_imm_sign_T, asSInt(UInt<1>("h00")), _ex_imm_sign_T_2) @[RocketCore.scala 1037:19]
    node _ex_imm_b30_20_T = eq(ex_ctrl.sel_imm, UInt<3>("h02")) @[RocketCore.scala 1038:26]
    node _ex_imm_b30_20_T_1 = bits(ex_reg_inst, 30, 20) @[RocketCore.scala 1038:41]
    node _ex_imm_b30_20_T_2 = asSInt(_ex_imm_b30_20_T_1) @[RocketCore.scala 1038:49]
    node ex_imm_b30_20 = mux(_ex_imm_b30_20_T, _ex_imm_b30_20_T_2, ex_imm_sign) @[RocketCore.scala 1038:21]
    node _ex_imm_b19_12_T = neq(ex_ctrl.sel_imm, UInt<3>("h02")) @[RocketCore.scala 1039:26]
    node _ex_imm_b19_12_T_1 = neq(ex_ctrl.sel_imm, UInt<3>("h03")) @[RocketCore.scala 1039:43]
    node _ex_imm_b19_12_T_2 = and(_ex_imm_b19_12_T, _ex_imm_b19_12_T_1) @[RocketCore.scala 1039:36]
    node _ex_imm_b19_12_T_3 = bits(ex_reg_inst, 19, 12) @[RocketCore.scala 1039:65]
    node _ex_imm_b19_12_T_4 = asSInt(_ex_imm_b19_12_T_3) @[RocketCore.scala 1039:73]
    node ex_imm_b19_12 = mux(_ex_imm_b19_12_T_2, ex_imm_sign, _ex_imm_b19_12_T_4) @[RocketCore.scala 1039:21]
    node _ex_imm_b11_T = eq(ex_ctrl.sel_imm, UInt<3>("h02")) @[RocketCore.scala 1040:23]
    node _ex_imm_b11_T_1 = eq(ex_ctrl.sel_imm, UInt<3>("h05")) @[RocketCore.scala 1040:40]
    node _ex_imm_b11_T_2 = or(_ex_imm_b11_T, _ex_imm_b11_T_1) @[RocketCore.scala 1040:33]
    node _ex_imm_b11_T_3 = eq(ex_ctrl.sel_imm, UInt<3>("h03")) @[RocketCore.scala 1041:23]
    node _ex_imm_b11_T_4 = bits(ex_reg_inst, 20, 20) @[RocketCore.scala 1041:39]
    node _ex_imm_b11_T_5 = asSInt(_ex_imm_b11_T_4) @[RocketCore.scala 1041:44]
    node _ex_imm_b11_T_6 = eq(ex_ctrl.sel_imm, UInt<3>("h01")) @[RocketCore.scala 1042:23]
    node _ex_imm_b11_T_7 = bits(ex_reg_inst, 7, 7) @[RocketCore.scala 1042:39]
    node _ex_imm_b11_T_8 = asSInt(_ex_imm_b11_T_7) @[RocketCore.scala 1042:43]
    node _ex_imm_b11_T_9 = mux(_ex_imm_b11_T_6, _ex_imm_b11_T_8, ex_imm_sign) @[RocketCore.scala 1042:18]
    node _ex_imm_b11_T_10 = mux(_ex_imm_b11_T_3, _ex_imm_b11_T_5, _ex_imm_b11_T_9) @[RocketCore.scala 1041:18]
    node ex_imm_b11 = mux(_ex_imm_b11_T_2, asSInt(UInt<1>("h00")), _ex_imm_b11_T_10) @[RocketCore.scala 1040:18]
    node _ex_imm_b10_5_T = eq(ex_ctrl.sel_imm, UInt<3>("h02")) @[RocketCore.scala 1043:25]
    node _ex_imm_b10_5_T_1 = eq(ex_ctrl.sel_imm, UInt<3>("h05")) @[RocketCore.scala 1043:42]
    node _ex_imm_b10_5_T_2 = or(_ex_imm_b10_5_T, _ex_imm_b10_5_T_1) @[RocketCore.scala 1043:35]
    node _ex_imm_b10_5_T_3 = bits(ex_reg_inst, 30, 25) @[RocketCore.scala 1043:66]
    node ex_imm_lo_hi_hi = mux(_ex_imm_b10_5_T_2, UInt<1>("h00"), _ex_imm_b10_5_T_3) @[RocketCore.scala 1043:20]
    node _ex_imm_b4_1_T = eq(ex_ctrl.sel_imm, UInt<3>("h02")) @[RocketCore.scala 1044:24]
    node _ex_imm_b4_1_T_1 = eq(ex_ctrl.sel_imm, UInt<3>("h00")) @[RocketCore.scala 1045:24]
    node _ex_imm_b4_1_T_2 = eq(ex_ctrl.sel_imm, UInt<3>("h01")) @[RocketCore.scala 1045:41]
    node _ex_imm_b4_1_T_3 = or(_ex_imm_b4_1_T_1, _ex_imm_b4_1_T_2) @[RocketCore.scala 1045:34]
    node _ex_imm_b4_1_T_4 = bits(ex_reg_inst, 11, 8) @[RocketCore.scala 1045:57]
    node _ex_imm_b4_1_T_5 = eq(ex_ctrl.sel_imm, UInt<3>("h05")) @[RocketCore.scala 1046:24]
    node _ex_imm_b4_1_T_6 = bits(ex_reg_inst, 19, 16) @[RocketCore.scala 1046:39]
    node _ex_imm_b4_1_T_7 = bits(ex_reg_inst, 24, 21) @[RocketCore.scala 1046:52]
    node _ex_imm_b4_1_T_8 = mux(_ex_imm_b4_1_T_5, _ex_imm_b4_1_T_6, _ex_imm_b4_1_T_7) @[RocketCore.scala 1046:19]
    node _ex_imm_b4_1_T_9 = mux(_ex_imm_b4_1_T_3, _ex_imm_b4_1_T_4, _ex_imm_b4_1_T_8) @[RocketCore.scala 1045:19]
    node ex_imm_lo_hi_lo = mux(_ex_imm_b4_1_T, UInt<1>("h00"), _ex_imm_b4_1_T_9) @[RocketCore.scala 1044:19]
    node _ex_imm_b0_T = eq(ex_ctrl.sel_imm, UInt<3>("h00")) @[RocketCore.scala 1047:22]
    node _ex_imm_b0_T_1 = bits(ex_reg_inst, 7, 7) @[RocketCore.scala 1047:37]
    node _ex_imm_b0_T_2 = eq(ex_ctrl.sel_imm, UInt<3>("h04")) @[RocketCore.scala 1048:22]
    node _ex_imm_b0_T_3 = bits(ex_reg_inst, 20, 20) @[RocketCore.scala 1048:37]
    node _ex_imm_b0_T_4 = eq(ex_ctrl.sel_imm, UInt<3>("h05")) @[RocketCore.scala 1049:22]
    node _ex_imm_b0_T_5 = bits(ex_reg_inst, 15, 15) @[RocketCore.scala 1049:37]
    node _ex_imm_b0_T_6 = mux(_ex_imm_b0_T_4, _ex_imm_b0_T_5, UInt<1>("h00")) @[RocketCore.scala 1049:17]
    node _ex_imm_b0_T_7 = mux(_ex_imm_b0_T_2, _ex_imm_b0_T_3, _ex_imm_b0_T_6) @[RocketCore.scala 1048:17]
    node ex_imm_lo_lo = mux(_ex_imm_b0_T, _ex_imm_b0_T_1, _ex_imm_b0_T_7) @[RocketCore.scala 1047:17]
    node ex_imm_lo_hi = cat(ex_imm_lo_hi_hi, ex_imm_lo_hi_lo) @[Cat.scala 30:58]
    node ex_imm_lo = cat(ex_imm_lo_hi, ex_imm_lo_lo) @[Cat.scala 30:58]
    node ex_imm_hi_lo_lo = asUInt(ex_imm_b11) @[Cat.scala 30:58]
    node ex_imm_hi_lo_hi = asUInt(ex_imm_b19_12) @[Cat.scala 30:58]
    node ex_imm_hi_lo = cat(ex_imm_hi_lo_hi, ex_imm_hi_lo_lo) @[Cat.scala 30:58]
    node ex_imm_hi_hi_lo = asUInt(ex_imm_b30_20) @[Cat.scala 30:58]
    node ex_imm_hi_hi_hi = asUInt(ex_imm_sign) @[Cat.scala 30:58]
    node ex_imm_hi_hi = cat(ex_imm_hi_hi_hi, ex_imm_hi_hi_lo) @[Cat.scala 30:58]
    node ex_imm_hi = cat(ex_imm_hi_hi, ex_imm_hi_lo) @[Cat.scala 30:58]
    node _ex_imm_T = cat(ex_imm_hi, ex_imm_lo) @[Cat.scala 30:58]
    node ex_imm = asSInt(_ex_imm_T) @[RocketCore.scala 1051:53]
    node _ex_op1_T = asSInt(ex_rs_0) @[RocketCore.scala 378:24]
    node _ex_op1_T_1 = asSInt(ex_reg_pc) @[RocketCore.scala 379:24]
    node _ex_op1_T_2 = eq(UInt<2>("h01"), ex_ctrl.sel_alu1) @[Mux.scala 80:60]
    node _ex_op1_T_3 = mux(_ex_op1_T_2, _ex_op1_T, asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _ex_op1_T_4 = eq(UInt<2>("h02"), ex_ctrl.sel_alu1) @[Mux.scala 80:60]
    node ex_op1 = mux(_ex_op1_T_4, _ex_op1_T_1, _ex_op1_T_3) @[Mux.scala 80:57]
    node _ex_op2_T = asSInt(ex_rs_1) @[RocketCore.scala 381:24]
    node _ex_op2_T_1 = mux(ex_reg_rvc, asSInt(UInt<3>("h02")), asSInt(UInt<4>("h04"))) @[RocketCore.scala 383:19]
    node _ex_op2_T_2 = eq(UInt<2>("h02"), ex_ctrl.sel_alu2) @[Mux.scala 80:60]
    node _ex_op2_T_3 = mux(_ex_op2_T_2, _ex_op2_T, asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _ex_op2_T_4 = eq(UInt<2>("h03"), ex_ctrl.sel_alu2) @[Mux.scala 80:60]
    node _ex_op2_T_5 = mux(_ex_op2_T_4, ex_imm, _ex_op2_T_3) @[Mux.scala 80:57]
    node _ex_op2_T_6 = eq(UInt<2>("h01"), ex_ctrl.sel_alu2) @[Mux.scala 80:60]
    node ex_op2 = mux(_ex_op2_T_6, _ex_op2_T_1, _ex_op2_T_5) @[Mux.scala 80:57]
    inst alu of ALU @[RocketCore.scala 385:19]
    alu.io is invalid
    alu.clock <= clock
    alu.reset <= reset
    alu.io.dw <= ex_ctrl.alu_dw @[RocketCore.scala 386:13]
    alu.io.fn <= ex_ctrl.alu_fn @[RocketCore.scala 387:13]
    node _alu_io_in2_T = asUInt(ex_op2) @[RocketCore.scala 388:24]
    alu.io.in2 <= _alu_io_in2_T @[RocketCore.scala 388:14]
    node _alu_io_in1_T = asUInt(ex_op1) @[RocketCore.scala 389:24]
    alu.io.in1 <= _alu_io_in1_T @[RocketCore.scala 389:14]
    inst div of MulDiv @[RocketCore.scala 409:19]
    div.io is invalid
    div.clock <= clock
    div.reset <= reset
    node _div_io_req_valid_T = and(ex_reg_valid, ex_ctrl.div) @[RocketCore.scala 410:36]
    div.io.req.valid <= _div_io_req_valid_T @[RocketCore.scala 410:20]
    div.io.req.bits.dw <= ex_ctrl.alu_dw @[RocketCore.scala 411:22]
    div.io.req.bits.fn <= ex_ctrl.alu_fn @[RocketCore.scala 412:22]
    div.io.req.bits.in1 <= ex_rs_0 @[RocketCore.scala 413:23]
    div.io.req.bits.in2 <= ex_rs_1 @[RocketCore.scala 414:23]
    div.io.req.bits.tag <= ex_waddr @[RocketCore.scala 415:23]
    node _ex_reg_valid_T = eq(ctrl_killd, UInt<1>("h00")) @[RocketCore.scala 423:19]
    ex_reg_valid <= _ex_reg_valid_T @[RocketCore.scala 423:16]
    node _ex_reg_replay_T = eq(take_pc_mem_wb, UInt<1>("h00")) @[RocketCore.scala 424:20]
    node _ex_reg_replay_T_1 = and(_ex_reg_replay_T, ibuf.io.inst[0].valid) @[RocketCore.scala 424:29]
    node _ex_reg_replay_T_2 = and(_ex_reg_replay_T_1, ibuf.io.inst[0].bits.replay) @[RocketCore.scala 424:54]
    ex_reg_replay <= _ex_reg_replay_T_2 @[RocketCore.scala 424:17]
    node _ex_reg_xcpt_T = eq(ctrl_killd, UInt<1>("h00")) @[RocketCore.scala 425:18]
    node _ex_reg_xcpt_T_1 = and(_ex_reg_xcpt_T, id_xcpt) @[RocketCore.scala 425:30]
    ex_reg_xcpt <= _ex_reg_xcpt_T_1 @[RocketCore.scala 425:15]
    node _ex_reg_xcpt_interrupt_T = eq(take_pc_mem_wb, UInt<1>("h00")) @[RocketCore.scala 426:28]
    node _ex_reg_xcpt_interrupt_T_1 = and(_ex_reg_xcpt_interrupt_T, ibuf.io.inst[0].valid) @[RocketCore.scala 426:37]
    node _ex_reg_xcpt_interrupt_T_2 = and(_ex_reg_xcpt_interrupt_T_1, csr.io.interrupt) @[RocketCore.scala 426:62]
    ex_reg_xcpt_interrupt <= _ex_reg_xcpt_interrupt_T_2 @[RocketCore.scala 426:25]
    node _T_26 = eq(ctrl_killd, UInt<1>("h00")) @[RocketCore.scala 428:9]
    when _T_26 : @[RocketCore.scala 428:22]
      ex_ctrl <- id_ctrl @[RocketCore.scala 429:13]
      ex_reg_rvc <= ibuf.io.inst[0].bits.rvc @[RocketCore.scala 430:16]
      ex_ctrl.csr <= id_csr @[RocketCore.scala 431:17]
      node _ex_scie_unpipelined_T = and(id_ctrl.scie, id_scie_decoder.unpipelined) @[RocketCore.scala 432:41]
      ex_scie_unpipelined <= _ex_scie_unpipelined_T @[RocketCore.scala 432:25]
      node _ex_scie_pipelined_T = and(id_ctrl.scie, id_scie_decoder.pipelined) @[RocketCore.scala 433:39]
      ex_scie_pipelined <= _ex_scie_pipelined_T @[RocketCore.scala 433:23]
      node _T_27 = eq(id_fence_succ, UInt<1>("h00")) @[RocketCore.scala 434:42]
      node _T_28 = and(id_ctrl.fence, _T_27) @[RocketCore.scala 434:25]
      when _T_28 : @[RocketCore.scala 434:49]
        id_reg_pause <= UInt<1>("h01") @[RocketCore.scala 434:64]
        skip @[RocketCore.scala 434:49]
      when id_fence_next : @[RocketCore.scala 435:26]
        id_reg_fence <= UInt<1>("h01") @[RocketCore.scala 435:41]
        skip @[RocketCore.scala 435:26]
      when id_xcpt : @[RocketCore.scala 436:20]
        ex_ctrl.alu_fn <= UInt<1>("h00") @[RocketCore.scala 437:22]
        ex_ctrl.alu_dw <= UInt<1>("h01") @[RocketCore.scala 438:22]
        ex_ctrl.sel_alu1 <= UInt<2>("h01") @[RocketCore.scala 439:24]
        ex_ctrl.sel_alu2 <= UInt<2>("h00") @[RocketCore.scala 440:24]
        node _T_29 = cat(ibuf.io.inst[0].bits.xcpt1.pf.inst, ibuf.io.inst[0].bits.xcpt1.ae.inst) @[RocketCore.scala 441:22]
        node _T_30 = orr(_T_29) @[RocketCore.scala 441:29]
        when _T_30 : @[RocketCore.scala 441:34]
          ex_ctrl.sel_alu1 <= UInt<2>("h02") @[RocketCore.scala 442:26]
          ex_ctrl.sel_alu2 <= UInt<2>("h01") @[RocketCore.scala 443:26]
          ex_reg_rvc <= UInt<1>("h01") @[RocketCore.scala 444:20]
          skip @[RocketCore.scala 441:34]
        node _T_31 = cat(ibuf.io.inst[0].bits.xcpt0.pf.inst, ibuf.io.inst[0].bits.xcpt0.ae.inst) @[RocketCore.scala 446:40]
        node _T_32 = orr(_T_31) @[RocketCore.scala 446:47]
        node _T_33 = or(bpu.io.xcpt_if, _T_32) @[RocketCore.scala 446:28]
        when _T_33 : @[RocketCore.scala 446:52]
          ex_ctrl.sel_alu1 <= UInt<2>("h02") @[RocketCore.scala 447:26]
          ex_ctrl.sel_alu2 <= UInt<2>("h00") @[RocketCore.scala 448:26]
          skip @[RocketCore.scala 446:52]
        skip @[RocketCore.scala 436:20]
      node _ex_reg_flush_pipe_T = or(id_ctrl.fence_i, id_csr_flush) @[RocketCore.scala 451:42]
      ex_reg_flush_pipe <= _ex_reg_flush_pipe_T @[RocketCore.scala 451:23]
      ex_reg_load_use <= id_load_use @[RocketCore.scala 452:21]
      node _ex_reg_mem_size_T = bits(ibuf.io.inst[0].bits.inst.bits, 13, 12) @[RocketCore.scala 453:34]
      ex_reg_mem_size <= _ex_reg_mem_size_T @[RocketCore.scala 453:21]
      node _T_34 = eq(id_ctrl.mem_cmd, UInt<5>("h014")) @[package.scala 15:47]
      node _T_35 = eq(id_ctrl.mem_cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_36 = or(_T_34, _T_35) @[package.scala 72:59]
      when _T_36 : @[RocketCore.scala 454:59]
        node ex_reg_mem_size_hi = neq(id_raddr2, UInt<1>("h00")) @[RocketCore.scala 455:40]
        node ex_reg_mem_size_lo = neq(id_raddr1, UInt<1>("h00")) @[RocketCore.scala 455:63]
        node _ex_reg_mem_size_T_1 = cat(ex_reg_mem_size_hi, ex_reg_mem_size_lo) @[Cat.scala 30:58]
        ex_reg_mem_size <= _ex_reg_mem_size_T_1 @[RocketCore.scala 455:23]
        skip @[RocketCore.scala 454:59]
      node _do_bypass_T = or(id_bypass_src_0_0, id_bypass_src_0_1) @[RocketCore.scala 464:48]
      node _do_bypass_T_1 = or(_do_bypass_T, id_bypass_src_0_2) @[RocketCore.scala 464:48]
      node do_bypass = or(_do_bypass_T_1, id_bypass_src_0_3) @[RocketCore.scala 464:48]
      node _bypass_src_T = mux(id_bypass_src_0_2, UInt<2>("h02"), UInt<2>("h03")) @[Mux.scala 47:69]
      node _bypass_src_T_1 = mux(id_bypass_src_0_1, UInt<1>("h01"), _bypass_src_T) @[Mux.scala 47:69]
      node bypass_src = mux(id_bypass_src_0_0, UInt<1>("h00"), _bypass_src_T_1) @[Mux.scala 47:69]
      ex_reg_rs_bypass[0] <= do_bypass @[RocketCore.scala 466:27]
      ex_reg_rs_lsb[0] <= bypass_src @[RocketCore.scala 467:24]
      node _T_37 = eq(do_bypass, UInt<1>("h00")) @[RocketCore.scala 468:26]
      node _T_38 = and(id_ctrl.rxs1, _T_37) @[RocketCore.scala 468:23]
      when _T_38 : @[RocketCore.scala 468:38]
        node _ex_reg_rs_lsb_0_T = bits(id_rs_0, 1, 0) @[RocketCore.scala 469:37]
        ex_reg_rs_lsb[0] <= _ex_reg_rs_lsb_0_T @[RocketCore.scala 469:26]
        node _ex_reg_rs_msb_0_T = shr(id_rs_0, 2) @[RocketCore.scala 470:38]
        ex_reg_rs_msb[0] <= _ex_reg_rs_msb_0_T @[RocketCore.scala 470:26]
        skip @[RocketCore.scala 468:38]
      node _do_bypass_T_2 = or(id_bypass_src_1_0, id_bypass_src_1_1) @[RocketCore.scala 464:48]
      node _do_bypass_T_3 = or(_do_bypass_T_2, id_bypass_src_1_2) @[RocketCore.scala 464:48]
      node do_bypass_1 = or(_do_bypass_T_3, id_bypass_src_1_3) @[RocketCore.scala 464:48]
      node _bypass_src_T_2 = mux(id_bypass_src_1_2, UInt<2>("h02"), UInt<2>("h03")) @[Mux.scala 47:69]
      node _bypass_src_T_3 = mux(id_bypass_src_1_1, UInt<1>("h01"), _bypass_src_T_2) @[Mux.scala 47:69]
      node bypass_src_1 = mux(id_bypass_src_1_0, UInt<1>("h00"), _bypass_src_T_3) @[Mux.scala 47:69]
      ex_reg_rs_bypass[1] <= do_bypass_1 @[RocketCore.scala 466:27]
      ex_reg_rs_lsb[1] <= bypass_src_1 @[RocketCore.scala 467:24]
      node _T_39 = eq(do_bypass_1, UInt<1>("h00")) @[RocketCore.scala 468:26]
      node _T_40 = and(id_ctrl.rxs2, _T_39) @[RocketCore.scala 468:23]
      when _T_40 : @[RocketCore.scala 468:38]
        node _ex_reg_rs_lsb_1_T = bits(id_rs_1, 1, 0) @[RocketCore.scala 469:37]
        ex_reg_rs_lsb[1] <= _ex_reg_rs_lsb_1_T @[RocketCore.scala 469:26]
        node _ex_reg_rs_msb_1_T = shr(id_rs_1, 2) @[RocketCore.scala 470:38]
        ex_reg_rs_msb[1] <= _ex_reg_rs_msb_1_T @[RocketCore.scala 470:26]
        skip @[RocketCore.scala 468:38]
      when id_illegal_insn : @[RocketCore.scala 473:28]
        node _inst_T = bits(ibuf.io.inst[0].bits.raw, 15, 0) @[RocketCore.scala 474:62]
        node inst = mux(ibuf.io.inst[0].bits.rvc, _inst_T, ibuf.io.inst[0].bits.raw) @[RocketCore.scala 474:21]
        ex_reg_rs_bypass[0] <= UInt<1>("h00") @[RocketCore.scala 475:27]
        node _ex_reg_rs_lsb_0_T_1 = bits(inst, 1, 0) @[RocketCore.scala 476:31]
        ex_reg_rs_lsb[0] <= _ex_reg_rs_lsb_0_T_1 @[RocketCore.scala 476:24]
        node _ex_reg_rs_msb_0_T_1 = shr(inst, 2) @[RocketCore.scala 477:32]
        ex_reg_rs_msb[0] <= _ex_reg_rs_msb_0_T_1 @[RocketCore.scala 477:24]
        skip @[RocketCore.scala 473:28]
      skip @[RocketCore.scala 428:22]
    node _T_41 = eq(ctrl_killd, UInt<1>("h00")) @[RocketCore.scala 480:9]
    node _T_42 = or(_T_41, csr.io.interrupt) @[RocketCore.scala 480:21]
    node _T_43 = or(_T_42, ibuf.io.inst[0].bits.replay) @[RocketCore.scala 480:41]
    when _T_43 : @[RocketCore.scala 480:73]
      ex_reg_cause <= id_cause @[RocketCore.scala 481:18]
      ex_reg_inst <= ibuf.io.inst[0].bits.inst.bits @[RocketCore.scala 482:17]
      ex_reg_raw_inst <= ibuf.io.inst[0].bits.raw @[RocketCore.scala 483:21]
      ex_reg_pc <= ibuf.io.pc @[RocketCore.scala 484:15]
      ex_reg_btb_resp <- ibuf.io.btb_resp @[RocketCore.scala 485:21]
      ex_reg_wphit[0] <= bpu.io.bpwatch[0].ivalid[0] @[RocketCore.scala 486:18]
      skip @[RocketCore.scala 480:73]
    node _ex_pc_valid_T = or(ex_reg_valid, ex_reg_replay) @[RocketCore.scala 490:34]
    node ex_pc_valid = or(_ex_pc_valid_T, ex_reg_xcpt_interrupt) @[RocketCore.scala 490:51]
    node _wb_dcache_miss_T = eq(io.dmem.resp.valid, UInt<1>("h00")) @[RocketCore.scala 491:39]
    node wb_dcache_miss = and(wb_ctrl.mem, _wb_dcache_miss_T) @[RocketCore.scala 491:36]
    node _replay_ex_structural_T = eq(io.dmem.req.ready, UInt<1>("h00")) @[RocketCore.scala 492:45]
    node _replay_ex_structural_T_1 = and(ex_ctrl.mem, _replay_ex_structural_T) @[RocketCore.scala 492:42]
    node _replay_ex_structural_T_2 = eq(div.io.req.ready, UInt<1>("h00")) @[RocketCore.scala 493:45]
    node _replay_ex_structural_T_3 = and(ex_ctrl.div, _replay_ex_structural_T_2) @[RocketCore.scala 493:42]
    node replay_ex_structural = or(_replay_ex_structural_T_1, _replay_ex_structural_T_3) @[RocketCore.scala 492:64]
    node replay_ex_load_use = and(wb_dcache_miss, ex_reg_load_use) @[RocketCore.scala 494:43]
    node _replay_ex_T = or(replay_ex_structural, replay_ex_load_use) @[RocketCore.scala 495:75]
    node _replay_ex_T_1 = and(ex_reg_valid, _replay_ex_T) @[RocketCore.scala 495:50]
    node replay_ex = or(ex_reg_replay, _replay_ex_T_1) @[RocketCore.scala 495:33]
    node _ctrl_killx_T = or(take_pc_mem_wb, replay_ex) @[RocketCore.scala 496:35]
    node _ctrl_killx_T_1 = eq(ex_reg_valid, UInt<1>("h00")) @[RocketCore.scala 496:51]
    node ctrl_killx = or(_ctrl_killx_T, _ctrl_killx_T_1) @[RocketCore.scala 496:48]
    node _ex_slow_bypass_T = eq(ex_ctrl.mem_cmd, UInt<3>("h07")) @[RocketCore.scala 498:40]
    node _ex_slow_bypass_T_1 = lt(ex_reg_mem_size, UInt<2>("h02")) @[RocketCore.scala 498:69]
    node ex_slow_bypass = or(_ex_slow_bypass_T, _ex_slow_bypass_T_1) @[RocketCore.scala 498:50]
    node _ex_sfence_T = and(UInt<1>("h00"), ex_ctrl.mem) @[RocketCore.scala 499:33]
    node _ex_sfence_T_1 = eq(ex_ctrl.mem_cmd, UInt<5>("h014")) @[RocketCore.scala 499:67]
    node ex_sfence = and(_ex_sfence_T, _ex_sfence_T_1) @[RocketCore.scala 499:48]
    node ex_xcpt = or(ex_reg_xcpt_interrupt, ex_reg_xcpt) @[RocketCore.scala 502:28]
    node _T_44 = eq(ex_reg_cause, UInt<4>("h0e")) @[RocketCore.scala 979:38]
    node _T_45 = and(ex_xcpt, _T_44) @[RocketCore.scala 979:28]
    node _T_46 = eq(ex_reg_cause, UInt<2>("h03")) @[RocketCore.scala 979:38]
    node _T_47 = and(ex_xcpt, _T_46) @[RocketCore.scala 979:28]
    node _T_48 = eq(ex_reg_cause, UInt<1>("h01")) @[RocketCore.scala 979:38]
    node _T_49 = and(ex_xcpt, _T_48) @[RocketCore.scala 979:28]
    node _T_50 = eq(ex_reg_cause, UInt<2>("h02")) @[RocketCore.scala 979:38]
    node _T_51 = and(ex_xcpt, _T_50) @[RocketCore.scala 979:28]
    node _mem_pc_valid_T = or(mem_reg_valid, mem_reg_replay) @[RocketCore.scala 508:36]
    node mem_pc_valid = or(_mem_pc_valid_T, mem_reg_xcpt_interrupt) @[RocketCore.scala 508:54]
    node _mem_br_target_T = asSInt(mem_reg_pc) @[RocketCore.scala 509:34]
    node _mem_br_target_T_1 = and(mem_ctrl.branch, mem_br_taken) @[RocketCore.scala 510:25]
    node _mem_br_target_sign_T = eq(UInt<3>("h01"), UInt<3>("h05")) @[RocketCore.scala 1037:24]
    node _mem_br_target_sign_T_1 = bits(mem_reg_inst, 31, 31) @[RocketCore.scala 1037:48]
    node _mem_br_target_sign_T_2 = asSInt(_mem_br_target_sign_T_1) @[RocketCore.scala 1037:53]
    node mem_br_target_sign = mux(_mem_br_target_sign_T, asSInt(UInt<1>("h00")), _mem_br_target_sign_T_2) @[RocketCore.scala 1037:19]
    node _mem_br_target_b30_20_T = eq(UInt<3>("h01"), UInt<3>("h02")) @[RocketCore.scala 1038:26]
    node _mem_br_target_b30_20_T_1 = bits(mem_reg_inst, 30, 20) @[RocketCore.scala 1038:41]
    node _mem_br_target_b30_20_T_2 = asSInt(_mem_br_target_b30_20_T_1) @[RocketCore.scala 1038:49]
    node mem_br_target_b30_20 = mux(_mem_br_target_b30_20_T, _mem_br_target_b30_20_T_2, mem_br_target_sign) @[RocketCore.scala 1038:21]
    node _mem_br_target_b19_12_T = neq(UInt<3>("h01"), UInt<3>("h02")) @[RocketCore.scala 1039:26]
    node _mem_br_target_b19_12_T_1 = neq(UInt<3>("h01"), UInt<3>("h03")) @[RocketCore.scala 1039:43]
    node _mem_br_target_b19_12_T_2 = and(_mem_br_target_b19_12_T, _mem_br_target_b19_12_T_1) @[RocketCore.scala 1039:36]
    node _mem_br_target_b19_12_T_3 = bits(mem_reg_inst, 19, 12) @[RocketCore.scala 1039:65]
    node _mem_br_target_b19_12_T_4 = asSInt(_mem_br_target_b19_12_T_3) @[RocketCore.scala 1039:73]
    node mem_br_target_b19_12 = mux(_mem_br_target_b19_12_T_2, mem_br_target_sign, _mem_br_target_b19_12_T_4) @[RocketCore.scala 1039:21]
    node _mem_br_target_b11_T = eq(UInt<3>("h01"), UInt<3>("h02")) @[RocketCore.scala 1040:23]
    node _mem_br_target_b11_T_1 = eq(UInt<3>("h01"), UInt<3>("h05")) @[RocketCore.scala 1040:40]
    node _mem_br_target_b11_T_2 = or(_mem_br_target_b11_T, _mem_br_target_b11_T_1) @[RocketCore.scala 1040:33]
    node _mem_br_target_b11_T_3 = eq(UInt<3>("h01"), UInt<3>("h03")) @[RocketCore.scala 1041:23]
    node _mem_br_target_b11_T_4 = bits(mem_reg_inst, 20, 20) @[RocketCore.scala 1041:39]
    node _mem_br_target_b11_T_5 = asSInt(_mem_br_target_b11_T_4) @[RocketCore.scala 1041:44]
    node _mem_br_target_b11_T_6 = eq(UInt<3>("h01"), UInt<3>("h01")) @[RocketCore.scala 1042:23]
    node _mem_br_target_b11_T_7 = bits(mem_reg_inst, 7, 7) @[RocketCore.scala 1042:39]
    node _mem_br_target_b11_T_8 = asSInt(_mem_br_target_b11_T_7) @[RocketCore.scala 1042:43]
    node _mem_br_target_b11_T_9 = mux(_mem_br_target_b11_T_6, _mem_br_target_b11_T_8, mem_br_target_sign) @[RocketCore.scala 1042:18]
    node _mem_br_target_b11_T_10 = mux(_mem_br_target_b11_T_3, _mem_br_target_b11_T_5, _mem_br_target_b11_T_9) @[RocketCore.scala 1041:18]
    node mem_br_target_b11 = mux(_mem_br_target_b11_T_2, asSInt(UInt<1>("h00")), _mem_br_target_b11_T_10) @[RocketCore.scala 1040:18]
    node _mem_br_target_b10_5_T = eq(UInt<3>("h01"), UInt<3>("h02")) @[RocketCore.scala 1043:25]
    node _mem_br_target_b10_5_T_1 = eq(UInt<3>("h01"), UInt<3>("h05")) @[RocketCore.scala 1043:42]
    node _mem_br_target_b10_5_T_2 = or(_mem_br_target_b10_5_T, _mem_br_target_b10_5_T_1) @[RocketCore.scala 1043:35]
    node _mem_br_target_b10_5_T_3 = bits(mem_reg_inst, 30, 25) @[RocketCore.scala 1043:66]
    node mem_br_target_lo_hi_hi = mux(_mem_br_target_b10_5_T_2, UInt<1>("h00"), _mem_br_target_b10_5_T_3) @[RocketCore.scala 1043:20]
    node _mem_br_target_b4_1_T = eq(UInt<3>("h01"), UInt<3>("h02")) @[RocketCore.scala 1044:24]
    node _mem_br_target_b4_1_T_1 = eq(UInt<3>("h01"), UInt<3>("h00")) @[RocketCore.scala 1045:24]
    node _mem_br_target_b4_1_T_2 = eq(UInt<3>("h01"), UInt<3>("h01")) @[RocketCore.scala 1045:41]
    node _mem_br_target_b4_1_T_3 = or(_mem_br_target_b4_1_T_1, _mem_br_target_b4_1_T_2) @[RocketCore.scala 1045:34]
    node _mem_br_target_b4_1_T_4 = bits(mem_reg_inst, 11, 8) @[RocketCore.scala 1045:57]
    node _mem_br_target_b4_1_T_5 = eq(UInt<3>("h01"), UInt<3>("h05")) @[RocketCore.scala 1046:24]
    node _mem_br_target_b4_1_T_6 = bits(mem_reg_inst, 19, 16) @[RocketCore.scala 1046:39]
    node _mem_br_target_b4_1_T_7 = bits(mem_reg_inst, 24, 21) @[RocketCore.scala 1046:52]
    node _mem_br_target_b4_1_T_8 = mux(_mem_br_target_b4_1_T_5, _mem_br_target_b4_1_T_6, _mem_br_target_b4_1_T_7) @[RocketCore.scala 1046:19]
    node _mem_br_target_b4_1_T_9 = mux(_mem_br_target_b4_1_T_3, _mem_br_target_b4_1_T_4, _mem_br_target_b4_1_T_8) @[RocketCore.scala 1045:19]
    node mem_br_target_lo_hi_lo = mux(_mem_br_target_b4_1_T, UInt<1>("h00"), _mem_br_target_b4_1_T_9) @[RocketCore.scala 1044:19]
    node _mem_br_target_b0_T = eq(UInt<3>("h01"), UInt<3>("h00")) @[RocketCore.scala 1047:22]
    node _mem_br_target_b0_T_1 = bits(mem_reg_inst, 7, 7) @[RocketCore.scala 1047:37]
    node _mem_br_target_b0_T_2 = eq(UInt<3>("h01"), UInt<3>("h04")) @[RocketCore.scala 1048:22]
    node _mem_br_target_b0_T_3 = bits(mem_reg_inst, 20, 20) @[RocketCore.scala 1048:37]
    node _mem_br_target_b0_T_4 = eq(UInt<3>("h01"), UInt<3>("h05")) @[RocketCore.scala 1049:22]
    node _mem_br_target_b0_T_5 = bits(mem_reg_inst, 15, 15) @[RocketCore.scala 1049:37]
    node _mem_br_target_b0_T_6 = mux(_mem_br_target_b0_T_4, _mem_br_target_b0_T_5, UInt<1>("h00")) @[RocketCore.scala 1049:17]
    node _mem_br_target_b0_T_7 = mux(_mem_br_target_b0_T_2, _mem_br_target_b0_T_3, _mem_br_target_b0_T_6) @[RocketCore.scala 1048:17]
    node mem_br_target_lo_lo = mux(_mem_br_target_b0_T, _mem_br_target_b0_T_1, _mem_br_target_b0_T_7) @[RocketCore.scala 1047:17]
    node mem_br_target_lo_hi = cat(mem_br_target_lo_hi_hi, mem_br_target_lo_hi_lo) @[Cat.scala 30:58]
    node mem_br_target_lo = cat(mem_br_target_lo_hi, mem_br_target_lo_lo) @[Cat.scala 30:58]
    node mem_br_target_hi_lo_lo = asUInt(mem_br_target_b11) @[Cat.scala 30:58]
    node mem_br_target_hi_lo_hi = asUInt(mem_br_target_b19_12) @[Cat.scala 30:58]
    node mem_br_target_hi_lo = cat(mem_br_target_hi_lo_hi, mem_br_target_hi_lo_lo) @[Cat.scala 30:58]
    node mem_br_target_hi_hi_lo = asUInt(mem_br_target_b30_20) @[Cat.scala 30:58]
    node mem_br_target_hi_hi_hi = asUInt(mem_br_target_sign) @[Cat.scala 30:58]
    node mem_br_target_hi_hi = cat(mem_br_target_hi_hi_hi, mem_br_target_hi_hi_lo) @[Cat.scala 30:58]
    node mem_br_target_hi = cat(mem_br_target_hi_hi, mem_br_target_hi_lo) @[Cat.scala 30:58]
    node _mem_br_target_T_2 = cat(mem_br_target_hi, mem_br_target_lo) @[Cat.scala 30:58]
    node _mem_br_target_T_3 = asSInt(_mem_br_target_T_2) @[RocketCore.scala 1051:53]
    node _mem_br_target_sign_T_3 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1037:24]
    node _mem_br_target_sign_T_4 = bits(mem_reg_inst, 31, 31) @[RocketCore.scala 1037:48]
    node _mem_br_target_sign_T_5 = asSInt(_mem_br_target_sign_T_4) @[RocketCore.scala 1037:53]
    node mem_br_target_sign_1 = mux(_mem_br_target_sign_T_3, asSInt(UInt<1>("h00")), _mem_br_target_sign_T_5) @[RocketCore.scala 1037:19]
    node _mem_br_target_b30_20_T_3 = eq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1038:26]
    node _mem_br_target_b30_20_T_4 = bits(mem_reg_inst, 30, 20) @[RocketCore.scala 1038:41]
    node _mem_br_target_b30_20_T_5 = asSInt(_mem_br_target_b30_20_T_4) @[RocketCore.scala 1038:49]
    node mem_br_target_b30_20_1 = mux(_mem_br_target_b30_20_T_3, _mem_br_target_b30_20_T_5, mem_br_target_sign_1) @[RocketCore.scala 1038:21]
    node _mem_br_target_b19_12_T_5 = neq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1039:26]
    node _mem_br_target_b19_12_T_6 = neq(UInt<3>("h03"), UInt<3>("h03")) @[RocketCore.scala 1039:43]
    node _mem_br_target_b19_12_T_7 = and(_mem_br_target_b19_12_T_5, _mem_br_target_b19_12_T_6) @[RocketCore.scala 1039:36]
    node _mem_br_target_b19_12_T_8 = bits(mem_reg_inst, 19, 12) @[RocketCore.scala 1039:65]
    node _mem_br_target_b19_12_T_9 = asSInt(_mem_br_target_b19_12_T_8) @[RocketCore.scala 1039:73]
    node mem_br_target_b19_12_1 = mux(_mem_br_target_b19_12_T_7, mem_br_target_sign_1, _mem_br_target_b19_12_T_9) @[RocketCore.scala 1039:21]
    node _mem_br_target_b11_T_11 = eq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1040:23]
    node _mem_br_target_b11_T_12 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1040:40]
    node _mem_br_target_b11_T_13 = or(_mem_br_target_b11_T_11, _mem_br_target_b11_T_12) @[RocketCore.scala 1040:33]
    node _mem_br_target_b11_T_14 = eq(UInt<3>("h03"), UInt<3>("h03")) @[RocketCore.scala 1041:23]
    node _mem_br_target_b11_T_15 = bits(mem_reg_inst, 20, 20) @[RocketCore.scala 1041:39]
    node _mem_br_target_b11_T_16 = asSInt(_mem_br_target_b11_T_15) @[RocketCore.scala 1041:44]
    node _mem_br_target_b11_T_17 = eq(UInt<3>("h03"), UInt<3>("h01")) @[RocketCore.scala 1042:23]
    node _mem_br_target_b11_T_18 = bits(mem_reg_inst, 7, 7) @[RocketCore.scala 1042:39]
    node _mem_br_target_b11_T_19 = asSInt(_mem_br_target_b11_T_18) @[RocketCore.scala 1042:43]
    node _mem_br_target_b11_T_20 = mux(_mem_br_target_b11_T_17, _mem_br_target_b11_T_19, mem_br_target_sign_1) @[RocketCore.scala 1042:18]
    node _mem_br_target_b11_T_21 = mux(_mem_br_target_b11_T_14, _mem_br_target_b11_T_16, _mem_br_target_b11_T_20) @[RocketCore.scala 1041:18]
    node mem_br_target_b11_1 = mux(_mem_br_target_b11_T_13, asSInt(UInt<1>("h00")), _mem_br_target_b11_T_21) @[RocketCore.scala 1040:18]
    node _mem_br_target_b10_5_T_4 = eq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1043:25]
    node _mem_br_target_b10_5_T_5 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1043:42]
    node _mem_br_target_b10_5_T_6 = or(_mem_br_target_b10_5_T_4, _mem_br_target_b10_5_T_5) @[RocketCore.scala 1043:35]
    node _mem_br_target_b10_5_T_7 = bits(mem_reg_inst, 30, 25) @[RocketCore.scala 1043:66]
    node mem_br_target_lo_hi_hi_1 = mux(_mem_br_target_b10_5_T_6, UInt<1>("h00"), _mem_br_target_b10_5_T_7) @[RocketCore.scala 1043:20]
    node _mem_br_target_b4_1_T_10 = eq(UInt<3>("h03"), UInt<3>("h02")) @[RocketCore.scala 1044:24]
    node _mem_br_target_b4_1_T_11 = eq(UInt<3>("h03"), UInt<3>("h00")) @[RocketCore.scala 1045:24]
    node _mem_br_target_b4_1_T_12 = eq(UInt<3>("h03"), UInt<3>("h01")) @[RocketCore.scala 1045:41]
    node _mem_br_target_b4_1_T_13 = or(_mem_br_target_b4_1_T_11, _mem_br_target_b4_1_T_12) @[RocketCore.scala 1045:34]
    node _mem_br_target_b4_1_T_14 = bits(mem_reg_inst, 11, 8) @[RocketCore.scala 1045:57]
    node _mem_br_target_b4_1_T_15 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1046:24]
    node _mem_br_target_b4_1_T_16 = bits(mem_reg_inst, 19, 16) @[RocketCore.scala 1046:39]
    node _mem_br_target_b4_1_T_17 = bits(mem_reg_inst, 24, 21) @[RocketCore.scala 1046:52]
    node _mem_br_target_b4_1_T_18 = mux(_mem_br_target_b4_1_T_15, _mem_br_target_b4_1_T_16, _mem_br_target_b4_1_T_17) @[RocketCore.scala 1046:19]
    node _mem_br_target_b4_1_T_19 = mux(_mem_br_target_b4_1_T_13, _mem_br_target_b4_1_T_14, _mem_br_target_b4_1_T_18) @[RocketCore.scala 1045:19]
    node mem_br_target_lo_hi_lo_1 = mux(_mem_br_target_b4_1_T_10, UInt<1>("h00"), _mem_br_target_b4_1_T_19) @[RocketCore.scala 1044:19]
    node _mem_br_target_b0_T_8 = eq(UInt<3>("h03"), UInt<3>("h00")) @[RocketCore.scala 1047:22]
    node _mem_br_target_b0_T_9 = bits(mem_reg_inst, 7, 7) @[RocketCore.scala 1047:37]
    node _mem_br_target_b0_T_10 = eq(UInt<3>("h03"), UInt<3>("h04")) @[RocketCore.scala 1048:22]
    node _mem_br_target_b0_T_11 = bits(mem_reg_inst, 20, 20) @[RocketCore.scala 1048:37]
    node _mem_br_target_b0_T_12 = eq(UInt<3>("h03"), UInt<3>("h05")) @[RocketCore.scala 1049:22]
    node _mem_br_target_b0_T_13 = bits(mem_reg_inst, 15, 15) @[RocketCore.scala 1049:37]
    node _mem_br_target_b0_T_14 = mux(_mem_br_target_b0_T_12, _mem_br_target_b0_T_13, UInt<1>("h00")) @[RocketCore.scala 1049:17]
    node _mem_br_target_b0_T_15 = mux(_mem_br_target_b0_T_10, _mem_br_target_b0_T_11, _mem_br_target_b0_T_14) @[RocketCore.scala 1048:17]
    node mem_br_target_lo_lo_1 = mux(_mem_br_target_b0_T_8, _mem_br_target_b0_T_9, _mem_br_target_b0_T_15) @[RocketCore.scala 1047:17]
    node mem_br_target_lo_hi_1 = cat(mem_br_target_lo_hi_hi_1, mem_br_target_lo_hi_lo_1) @[Cat.scala 30:58]
    node mem_br_target_lo_1 = cat(mem_br_target_lo_hi_1, mem_br_target_lo_lo_1) @[Cat.scala 30:58]
    node mem_br_target_hi_lo_lo_1 = asUInt(mem_br_target_b11_1) @[Cat.scala 30:58]
    node mem_br_target_hi_lo_hi_1 = asUInt(mem_br_target_b19_12_1) @[Cat.scala 30:58]
    node mem_br_target_hi_lo_1 = cat(mem_br_target_hi_lo_hi_1, mem_br_target_hi_lo_lo_1) @[Cat.scala 30:58]
    node mem_br_target_hi_hi_lo_1 = asUInt(mem_br_target_b30_20_1) @[Cat.scala 30:58]
    node mem_br_target_hi_hi_hi_1 = asUInt(mem_br_target_sign_1) @[Cat.scala 30:58]
    node mem_br_target_hi_hi_1 = cat(mem_br_target_hi_hi_hi_1, mem_br_target_hi_hi_lo_1) @[Cat.scala 30:58]
    node mem_br_target_hi_1 = cat(mem_br_target_hi_hi_1, mem_br_target_hi_lo_1) @[Cat.scala 30:58]
    node _mem_br_target_T_4 = cat(mem_br_target_hi_1, mem_br_target_lo_1) @[Cat.scala 30:58]
    node _mem_br_target_T_5 = asSInt(_mem_br_target_T_4) @[RocketCore.scala 1051:53]
    node _mem_br_target_T_6 = mux(mem_reg_rvc, asSInt(UInt<3>("h02")), asSInt(UInt<4>("h04"))) @[RocketCore.scala 512:8]
    node _mem_br_target_T_7 = mux(mem_ctrl.jal, _mem_br_target_T_5, _mem_br_target_T_6) @[RocketCore.scala 511:8]
    node _mem_br_target_T_8 = mux(_mem_br_target_T_1, _mem_br_target_T_3, _mem_br_target_T_7) @[RocketCore.scala 510:8]
    node _mem_br_target_T_9 = add(_mem_br_target_T, _mem_br_target_T_8) @[RocketCore.scala 509:41]
    node _mem_br_target_T_10 = tail(_mem_br_target_T_9, 1) @[RocketCore.scala 509:41]
    node mem_br_target = asSInt(_mem_br_target_T_10) @[RocketCore.scala 509:41]
    node _mem_npc_T = or(mem_ctrl.jalr, mem_reg_sfence) @[RocketCore.scala 513:36]
    node _mem_npc_T_1 = asSInt(mem_reg_wdata) @[RocketCore.scala 513:106]
    node _mem_npc_T_2 = mux(_mem_npc_T, _mem_npc_T_1, mem_br_target) @[RocketCore.scala 513:21]
    node _mem_npc_T_3 = and(_mem_npc_T_2, asSInt(UInt<2>("h02"))) @[RocketCore.scala 513:129]
    node _mem_npc_T_4 = asSInt(_mem_npc_T_3) @[RocketCore.scala 513:129]
    node mem_npc = asUInt(_mem_npc_T_4) @[RocketCore.scala 513:141]
    node _mem_wrong_npc_T = neq(mem_npc, ex_reg_pc) @[RocketCore.scala 515:30]
    node _mem_wrong_npc_T_1 = or(ibuf.io.inst[0].valid, ibuf.io.imem.valid) @[RocketCore.scala 516:31]
    node _mem_wrong_npc_T_2 = neq(mem_npc, ibuf.io.pc) @[RocketCore.scala 516:62]
    node _mem_wrong_npc_T_3 = mux(_mem_wrong_npc_T_1, _mem_wrong_npc_T_2, UInt<1>("h01")) @[RocketCore.scala 516:8]
    node mem_wrong_npc = mux(ex_pc_valid, _mem_wrong_npc_T, _mem_wrong_npc_T_3) @[RocketCore.scala 515:8]
    node _mem_npc_misaligned_T = bits(csr.io.status.isa, 2, 2) @[RocketCore.scala 517:46]
    node _mem_npc_misaligned_T_1 = eq(_mem_npc_misaligned_T, UInt<1>("h00")) @[RocketCore.scala 517:28]
    node _mem_npc_misaligned_T_2 = bits(mem_npc, 1, 1) @[RocketCore.scala 517:66]
    node _mem_npc_misaligned_T_3 = and(_mem_npc_misaligned_T_1, _mem_npc_misaligned_T_2) @[RocketCore.scala 517:56]
    node _mem_npc_misaligned_T_4 = eq(mem_reg_sfence, UInt<1>("h00")) @[RocketCore.scala 517:73]
    node mem_npc_misaligned = and(_mem_npc_misaligned_T_3, _mem_npc_misaligned_T_4) @[RocketCore.scala 517:70]
    node _mem_int_wdata_T = eq(mem_reg_xcpt, UInt<1>("h00")) @[RocketCore.scala 518:27]
    node _mem_int_wdata_T_1 = xor(mem_ctrl.jalr, mem_npc_misaligned) @[RocketCore.scala 518:59]
    node _mem_int_wdata_T_2 = and(_mem_int_wdata_T, _mem_int_wdata_T_1) @[RocketCore.scala 518:41]
    node _mem_int_wdata_T_3 = asSInt(mem_reg_wdata) @[RocketCore.scala 518:111]
    node _mem_int_wdata_T_4 = mux(_mem_int_wdata_T_2, mem_br_target, _mem_int_wdata_T_3) @[RocketCore.scala 518:26]
    node mem_int_wdata = asUInt(_mem_int_wdata_T_4) @[RocketCore.scala 518:119]
    node _mem_cfi_T = or(mem_ctrl.branch, mem_ctrl.jalr) @[RocketCore.scala 519:33]
    node mem_cfi = or(_mem_cfi_T, mem_ctrl.jal) @[RocketCore.scala 519:50]
    node _mem_cfi_taken_T = and(mem_ctrl.branch, mem_br_taken) @[RocketCore.scala 520:40]
    node _mem_cfi_taken_T_1 = or(_mem_cfi_taken_T, mem_ctrl.jalr) @[RocketCore.scala 520:57]
    node mem_cfi_taken = or(_mem_cfi_taken_T_1, mem_ctrl.jal) @[RocketCore.scala 520:74]
    node _mem_direction_misprediction_T = and(UInt<1>("h00"), mem_reg_btb_resp.taken) @[RocketCore.scala 521:83]
    node _mem_direction_misprediction_T_1 = neq(mem_br_taken, _mem_direction_misprediction_T) @[RocketCore.scala 521:69]
    node mem_direction_misprediction = and(mem_ctrl.branch, _mem_direction_misprediction_T_1) @[RocketCore.scala 521:53]
    node _take_pc_mem_T = or(mem_cfi_taken, mem_reg_sfence) @[RocketCore.scala 523:54]
    node _take_pc_mem_T_1 = and(mem_reg_valid, _take_pc_mem_T) @[RocketCore.scala 523:32]
    take_pc_mem <= _take_pc_mem_T_1 @[RocketCore.scala 523:15]
    node _mem_reg_valid_T = eq(ctrl_killx, UInt<1>("h00")) @[RocketCore.scala 525:20]
    mem_reg_valid <= _mem_reg_valid_T @[RocketCore.scala 525:17]
    node _mem_reg_replay_T = eq(take_pc_mem_wb, UInt<1>("h00")) @[RocketCore.scala 526:21]
    node _mem_reg_replay_T_1 = and(_mem_reg_replay_T, replay_ex) @[RocketCore.scala 526:37]
    mem_reg_replay <= _mem_reg_replay_T_1 @[RocketCore.scala 526:18]
    node _mem_reg_xcpt_T = eq(ctrl_killx, UInt<1>("h00")) @[RocketCore.scala 527:19]
    node _mem_reg_xcpt_T_1 = and(_mem_reg_xcpt_T, ex_xcpt) @[RocketCore.scala 527:31]
    mem_reg_xcpt <= _mem_reg_xcpt_T_1 @[RocketCore.scala 527:16]
    node _mem_reg_xcpt_interrupt_T = eq(take_pc_mem_wb, UInt<1>("h00")) @[RocketCore.scala 528:29]
    node _mem_reg_xcpt_interrupt_T_1 = and(_mem_reg_xcpt_interrupt_T, ex_reg_xcpt_interrupt) @[RocketCore.scala 528:45]
    mem_reg_xcpt_interrupt <= _mem_reg_xcpt_interrupt_T_1 @[RocketCore.scala 528:26]
    node _T_52 = and(mem_reg_valid, mem_reg_flush_pipe) @[RocketCore.scala 532:23]
    when _T_52 : @[RocketCore.scala 532:46]
      mem_reg_sfence <= UInt<1>("h00") @[RocketCore.scala 533:20]
      skip @[RocketCore.scala 532:46]
    else : @[RocketCore.scala 534:28]
      when ex_pc_valid : @[RocketCore.scala 534:28]
        mem_ctrl <- ex_ctrl @[RocketCore.scala 535:14]
        mem_scie_unpipelined <= ex_scie_unpipelined @[RocketCore.scala 536:26]
        mem_scie_pipelined <= ex_scie_pipelined @[RocketCore.scala 537:24]
        mem_reg_rvc <= ex_reg_rvc @[RocketCore.scala 538:17]
        node _mem_reg_load_T = eq(ex_ctrl.mem_cmd, UInt<1>("h00")) @[Consts.scala 81:31]
        node _mem_reg_load_T_1 = eq(ex_ctrl.mem_cmd, UInt<3>("h06")) @[Consts.scala 81:48]
        node _mem_reg_load_T_2 = or(_mem_reg_load_T, _mem_reg_load_T_1) @[Consts.scala 81:41]
        node _mem_reg_load_T_3 = eq(ex_ctrl.mem_cmd, UInt<3>("h07")) @[Consts.scala 81:65]
        node _mem_reg_load_T_4 = or(_mem_reg_load_T_2, _mem_reg_load_T_3) @[Consts.scala 81:58]
        node _mem_reg_load_T_5 = eq(ex_ctrl.mem_cmd, UInt<3>("h04")) @[package.scala 15:47]
        node _mem_reg_load_T_6 = eq(ex_ctrl.mem_cmd, UInt<4>("h09")) @[package.scala 15:47]
        node _mem_reg_load_T_7 = eq(ex_ctrl.mem_cmd, UInt<4>("h0a")) @[package.scala 15:47]
        node _mem_reg_load_T_8 = eq(ex_ctrl.mem_cmd, UInt<4>("h0b")) @[package.scala 15:47]
        node _mem_reg_load_T_9 = or(_mem_reg_load_T_5, _mem_reg_load_T_6) @[package.scala 72:59]
        node _mem_reg_load_T_10 = or(_mem_reg_load_T_9, _mem_reg_load_T_7) @[package.scala 72:59]
        node _mem_reg_load_T_11 = or(_mem_reg_load_T_10, _mem_reg_load_T_8) @[package.scala 72:59]
        node _mem_reg_load_T_12 = eq(ex_ctrl.mem_cmd, UInt<4>("h08")) @[package.scala 15:47]
        node _mem_reg_load_T_13 = eq(ex_ctrl.mem_cmd, UInt<4>("h0c")) @[package.scala 15:47]
        node _mem_reg_load_T_14 = eq(ex_ctrl.mem_cmd, UInt<4>("h0d")) @[package.scala 15:47]
        node _mem_reg_load_T_15 = eq(ex_ctrl.mem_cmd, UInt<4>("h0e")) @[package.scala 15:47]
        node _mem_reg_load_T_16 = eq(ex_ctrl.mem_cmd, UInt<4>("h0f")) @[package.scala 15:47]
        node _mem_reg_load_T_17 = or(_mem_reg_load_T_12, _mem_reg_load_T_13) @[package.scala 72:59]
        node _mem_reg_load_T_18 = or(_mem_reg_load_T_17, _mem_reg_load_T_14) @[package.scala 72:59]
        node _mem_reg_load_T_19 = or(_mem_reg_load_T_18, _mem_reg_load_T_15) @[package.scala 72:59]
        node _mem_reg_load_T_20 = or(_mem_reg_load_T_19, _mem_reg_load_T_16) @[package.scala 72:59]
        node _mem_reg_load_T_21 = or(_mem_reg_load_T_11, _mem_reg_load_T_20) @[Consts.scala 79:44]
        node _mem_reg_load_T_22 = or(_mem_reg_load_T_4, _mem_reg_load_T_21) @[Consts.scala 81:75]
        node _mem_reg_load_T_23 = and(ex_ctrl.mem, _mem_reg_load_T_22) @[RocketCore.scala 539:33]
        mem_reg_load <= _mem_reg_load_T_23 @[RocketCore.scala 539:18]
        node _mem_reg_store_T = eq(ex_ctrl.mem_cmd, UInt<1>("h01")) @[Consts.scala 82:32]
        node _mem_reg_store_T_1 = eq(ex_ctrl.mem_cmd, UInt<5>("h011")) @[Consts.scala 82:49]
        node _mem_reg_store_T_2 = or(_mem_reg_store_T, _mem_reg_store_T_1) @[Consts.scala 82:42]
        node _mem_reg_store_T_3 = eq(ex_ctrl.mem_cmd, UInt<3>("h07")) @[Consts.scala 82:66]
        node _mem_reg_store_T_4 = or(_mem_reg_store_T_2, _mem_reg_store_T_3) @[Consts.scala 82:59]
        node _mem_reg_store_T_5 = eq(ex_ctrl.mem_cmd, UInt<3>("h04")) @[package.scala 15:47]
        node _mem_reg_store_T_6 = eq(ex_ctrl.mem_cmd, UInt<4>("h09")) @[package.scala 15:47]
        node _mem_reg_store_T_7 = eq(ex_ctrl.mem_cmd, UInt<4>("h0a")) @[package.scala 15:47]
        node _mem_reg_store_T_8 = eq(ex_ctrl.mem_cmd, UInt<4>("h0b")) @[package.scala 15:47]
        node _mem_reg_store_T_9 = or(_mem_reg_store_T_5, _mem_reg_store_T_6) @[package.scala 72:59]
        node _mem_reg_store_T_10 = or(_mem_reg_store_T_9, _mem_reg_store_T_7) @[package.scala 72:59]
        node _mem_reg_store_T_11 = or(_mem_reg_store_T_10, _mem_reg_store_T_8) @[package.scala 72:59]
        node _mem_reg_store_T_12 = eq(ex_ctrl.mem_cmd, UInt<4>("h08")) @[package.scala 15:47]
        node _mem_reg_store_T_13 = eq(ex_ctrl.mem_cmd, UInt<4>("h0c")) @[package.scala 15:47]
        node _mem_reg_store_T_14 = eq(ex_ctrl.mem_cmd, UInt<4>("h0d")) @[package.scala 15:47]
        node _mem_reg_store_T_15 = eq(ex_ctrl.mem_cmd, UInt<4>("h0e")) @[package.scala 15:47]
        node _mem_reg_store_T_16 = eq(ex_ctrl.mem_cmd, UInt<4>("h0f")) @[package.scala 15:47]
        node _mem_reg_store_T_17 = or(_mem_reg_store_T_12, _mem_reg_store_T_13) @[package.scala 72:59]
        node _mem_reg_store_T_18 = or(_mem_reg_store_T_17, _mem_reg_store_T_14) @[package.scala 72:59]
        node _mem_reg_store_T_19 = or(_mem_reg_store_T_18, _mem_reg_store_T_15) @[package.scala 72:59]
        node _mem_reg_store_T_20 = or(_mem_reg_store_T_19, _mem_reg_store_T_16) @[package.scala 72:59]
        node _mem_reg_store_T_21 = or(_mem_reg_store_T_11, _mem_reg_store_T_20) @[Consts.scala 79:44]
        node _mem_reg_store_T_22 = or(_mem_reg_store_T_4, _mem_reg_store_T_21) @[Consts.scala 82:76]
        node _mem_reg_store_T_23 = and(ex_ctrl.mem, _mem_reg_store_T_22) @[RocketCore.scala 540:34]
        mem_reg_store <= _mem_reg_store_T_23 @[RocketCore.scala 540:19]
        mem_reg_sfence <= ex_sfence @[RocketCore.scala 541:20]
        mem_reg_btb_resp <- ex_reg_btb_resp @[RocketCore.scala 542:22]
        mem_reg_flush_pipe <= ex_reg_flush_pipe @[RocketCore.scala 543:24]
        mem_reg_slow_bypass <= ex_slow_bypass @[RocketCore.scala 544:25]
        mem_reg_wphit <- ex_reg_wphit @[RocketCore.scala 545:19]
        mem_reg_cause <= ex_reg_cause @[RocketCore.scala 547:19]
        mem_reg_inst <= ex_reg_inst @[RocketCore.scala 548:18]
        mem_reg_raw_inst <= ex_reg_raw_inst @[RocketCore.scala 549:22]
        mem_reg_mem_size <= ex_reg_mem_size @[RocketCore.scala 550:22]
        mem_reg_pc <= ex_reg_pc @[RocketCore.scala 551:16]
        node _mem_reg_wdata_T = mux(ex_scie_unpipelined, UInt<1>("h00"), alu.io.out) @[RocketCore.scala 552:25]
        mem_reg_wdata <= _mem_reg_wdata_T @[RocketCore.scala 552:19]
        mem_br_taken <= alu.io.cmp_out @[RocketCore.scala 553:18]
        node _T_53 = or(ex_ctrl.mem, ex_ctrl.rocc) @[RocketCore.scala 555:40]
        node _T_54 = or(_T_53, ex_sfence) @[RocketCore.scala 555:56]
        node _T_55 = and(ex_ctrl.rxs2, _T_54) @[RocketCore.scala 555:24]
        when _T_55 : @[RocketCore.scala 555:71]
          node size = mux(ex_ctrl.rocc, UInt<2>("h02"), ex_reg_mem_size) @[RocketCore.scala 556:21]
          node mem_reg_rs2_size = bits(size, 1, 0) @[AMOALU.scala 10:17]
          node _mem_reg_rs2_T = eq(mem_reg_rs2_size, UInt<1>("h00")) @[AMOALU.scala 26:19]
          node mem_reg_rs2_hi = bits(ex_rs_1, 7, 0) @[AMOALU.scala 26:66]
          node mem_reg_rs2_hi_1 = cat(mem_reg_rs2_hi, mem_reg_rs2_hi) @[Cat.scala 30:58]
          node _mem_reg_rs2_T_1 = cat(mem_reg_rs2_hi_1, mem_reg_rs2_hi_1) @[Cat.scala 30:58]
          node _mem_reg_rs2_T_2 = eq(mem_reg_rs2_size, UInt<1>("h01")) @[AMOALU.scala 26:19]
          node mem_reg_rs2_hi_2 = bits(ex_rs_1, 15, 0) @[AMOALU.scala 26:66]
          node _mem_reg_rs2_T_3 = cat(mem_reg_rs2_hi_2, mem_reg_rs2_hi_2) @[Cat.scala 30:58]
          node _mem_reg_rs2_T_4 = mux(_mem_reg_rs2_T_2, _mem_reg_rs2_T_3, ex_rs_1) @[AMOALU.scala 26:13]
          node _mem_reg_rs2_T_5 = mux(_mem_reg_rs2_T, _mem_reg_rs2_T_1, _mem_reg_rs2_T_4) @[AMOALU.scala 26:13]
          mem_reg_rs2 <= _mem_reg_rs2_T_5 @[RocketCore.scala 557:19]
          skip @[RocketCore.scala 555:71]
        node _T_56 = and(ex_ctrl.jalr, csr.io.status.debug) @[RocketCore.scala 559:24]
        when _T_56 : @[RocketCore.scala 559:48]
          mem_ctrl.fence_i <= UInt<1>("h01") @[RocketCore.scala 561:24]
          mem_reg_flush_pipe <= UInt<1>("h01") @[RocketCore.scala 562:26]
          skip @[RocketCore.scala 559:48]
        skip @[RocketCore.scala 534:28]
    node _mem_breakpoint_T = and(mem_reg_load, bpu.io.xcpt_ld) @[RocketCore.scala 566:38]
    node _mem_breakpoint_T_1 = and(mem_reg_store, bpu.io.xcpt_st) @[RocketCore.scala 566:75]
    node mem_breakpoint = or(_mem_breakpoint_T, _mem_breakpoint_T_1) @[RocketCore.scala 566:57]
    node _mem_debug_breakpoint_T = and(mem_reg_load, bpu.io.debug_ld) @[RocketCore.scala 567:44]
    node _mem_debug_breakpoint_T_1 = and(mem_reg_store, bpu.io.debug_st) @[RocketCore.scala 567:82]
    node mem_debug_breakpoint = or(_mem_debug_breakpoint_T, _mem_debug_breakpoint_T_1) @[RocketCore.scala 567:64]
    node mem_ldst_xcpt = or(mem_debug_breakpoint, mem_breakpoint) @[RocketCore.scala 975:26]
    node mem_ldst_cause = mux(mem_debug_breakpoint, UInt<4>("h0e"), UInt<2>("h03")) @[Mux.scala 47:69]
    node _T_57 = or(mem_reg_xcpt_interrupt, mem_reg_xcpt) @[RocketCore.scala 573:29]
    node _T_58 = and(mem_reg_valid, mem_npc_misaligned) @[RocketCore.scala 574:20]
    node _T_59 = and(mem_reg_valid, mem_ldst_xcpt) @[RocketCore.scala 575:20]
    node _T_60 = or(_T_57, _T_58) @[RocketCore.scala 975:26]
    node mem_xcpt = or(_T_60, _T_59) @[RocketCore.scala 975:26]
    node _T_61 = mux(_T_58, UInt<1>("h00"), mem_ldst_cause) @[Mux.scala 47:69]
    node mem_cause = mux(_T_57, mem_reg_cause, _T_61) @[Mux.scala 47:69]
    node _T_62 = eq(mem_cause, UInt<4>("h0e")) @[RocketCore.scala 979:38]
    node _T_63 = and(mem_xcpt, _T_62) @[RocketCore.scala 979:28]
    node _T_64 = eq(mem_cause, UInt<2>("h03")) @[RocketCore.scala 979:38]
    node _T_65 = and(mem_xcpt, _T_64) @[RocketCore.scala 979:28]
    node _T_66 = eq(mem_cause, UInt<1>("h01")) @[RocketCore.scala 979:38]
    node _T_67 = and(mem_xcpt, _T_66) @[RocketCore.scala 979:28]
    node _T_68 = eq(mem_cause, UInt<2>("h02")) @[RocketCore.scala 979:38]
    node _T_69 = and(mem_xcpt, _T_68) @[RocketCore.scala 979:28]
    node _T_70 = eq(mem_cause, UInt<1>("h00")) @[RocketCore.scala 979:38]
    node _T_71 = and(mem_xcpt, _T_70) @[RocketCore.scala 979:28]
    node _dcache_kill_mem_T = and(mem_reg_valid, mem_ctrl.wxd) @[RocketCore.scala 584:39]
    node dcache_kill_mem = and(_dcache_kill_mem_T, io.dmem.replay_next) @[RocketCore.scala 584:55]
    node _fpu_kill_mem_T = and(mem_reg_valid, mem_ctrl.fp) @[RocketCore.scala 585:36]
    node fpu_kill_mem = and(_fpu_kill_mem_T, io.fpu.nack_mem) @[RocketCore.scala 585:51]
    node _replay_mem_T = or(dcache_kill_mem, mem_reg_replay) @[RocketCore.scala 586:37]
    node replay_mem = or(_replay_mem_T, fpu_kill_mem) @[RocketCore.scala 586:55]
    node _killm_common_T = or(dcache_kill_mem, take_pc_wb) @[RocketCore.scala 587:38]
    node _killm_common_T_1 = or(_killm_common_T, mem_reg_xcpt) @[RocketCore.scala 587:52]
    node _killm_common_T_2 = eq(mem_reg_valid, UInt<1>("h00")) @[RocketCore.scala 587:71]
    node killm_common = or(_killm_common_T_1, _killm_common_T_2) @[RocketCore.scala 587:68]
    node div_io_kill_x12 = and(div.io.req.ready, div.io.req.valid) @[Decoupled.scala 40:37]
    reg div_io_kill_REG : UInt<1>, clock @[RocketCore.scala 588:37]
    div_io_kill_REG <= div_io_kill_x12 @[RocketCore.scala 588:37]
    node _div_io_kill_T = and(killm_common, div_io_kill_REG) @[RocketCore.scala 588:31]
    div.io.kill <= _div_io_kill_T @[RocketCore.scala 588:15]
    node _ctrl_killm_T = or(killm_common, mem_xcpt) @[RocketCore.scala 589:33]
    node ctrl_killm = or(_ctrl_killm_T, fpu_kill_mem) @[RocketCore.scala 589:45]
    node _wb_reg_valid_T = eq(ctrl_killm, UInt<1>("h00")) @[RocketCore.scala 592:19]
    wb_reg_valid <= _wb_reg_valid_T @[RocketCore.scala 592:16]
    node _wb_reg_replay_T = eq(take_pc_wb, UInt<1>("h00")) @[RocketCore.scala 593:34]
    node _wb_reg_replay_T_1 = and(replay_mem, _wb_reg_replay_T) @[RocketCore.scala 593:31]
    wb_reg_replay <= _wb_reg_replay_T_1 @[RocketCore.scala 593:17]
    node _wb_reg_xcpt_T = eq(take_pc_wb, UInt<1>("h00")) @[RocketCore.scala 594:30]
    node _wb_reg_xcpt_T_1 = and(mem_xcpt, _wb_reg_xcpt_T) @[RocketCore.scala 594:27]
    wb_reg_xcpt <= _wb_reg_xcpt_T_1 @[RocketCore.scala 594:15]
    node _wb_reg_flush_pipe_T = eq(ctrl_killm, UInt<1>("h00")) @[RocketCore.scala 595:24]
    node _wb_reg_flush_pipe_T_1 = and(_wb_reg_flush_pipe_T, mem_reg_flush_pipe) @[RocketCore.scala 595:36]
    wb_reg_flush_pipe <= _wb_reg_flush_pipe_T_1 @[RocketCore.scala 595:21]
    when mem_pc_valid : @[RocketCore.scala 596:23]
      wb_ctrl <- mem_ctrl @[RocketCore.scala 597:13]
      wb_reg_sfence <= mem_reg_sfence @[RocketCore.scala 598:19]
      node _wb_reg_wdata_T = eq(mem_reg_xcpt, UInt<1>("h00")) @[RocketCore.scala 600:11]
      node _wb_reg_wdata_T_1 = and(_wb_reg_wdata_T, mem_ctrl.fp) @[RocketCore.scala 600:25]
      node _wb_reg_wdata_T_2 = and(_wb_reg_wdata_T_1, mem_ctrl.wxd) @[RocketCore.scala 600:40]
      node _wb_reg_wdata_T_3 = mux(_wb_reg_wdata_T_2, io.fpu.toint_data, mem_int_wdata) @[RocketCore.scala 600:10]
      node _wb_reg_wdata_T_4 = mux(mem_scie_pipelined, UInt<1>("h00"), _wb_reg_wdata_T_3) @[RocketCore.scala 599:24]
      wb_reg_wdata <= _wb_reg_wdata_T_4 @[RocketCore.scala 599:18]
      node _T_72 = or(mem_ctrl.rocc, mem_reg_sfence) @[RocketCore.scala 601:25]
      when _T_72 : @[RocketCore.scala 601:44]
        wb_reg_rs2 <= mem_reg_rs2 @[RocketCore.scala 602:18]
        skip @[RocketCore.scala 601:44]
      wb_reg_cause <= mem_cause @[RocketCore.scala 604:18]
      wb_reg_inst <= mem_reg_inst @[RocketCore.scala 605:17]
      wb_reg_raw_inst <= mem_reg_raw_inst @[RocketCore.scala 606:21]
      wb_reg_mem_size <= mem_reg_mem_size @[RocketCore.scala 607:21]
      wb_reg_pc <= mem_reg_pc @[RocketCore.scala 608:15]
      node _T_73 = and(bpu.io.bpwatch[0].rvalid[0], mem_reg_load) @[RocketCore.scala 609:80]
      node _T_74 = and(bpu.io.bpwatch[0].wvalid[0], mem_reg_store) @[RocketCore.scala 609:115]
      node _T_75 = or(_T_73, _T_74) @[RocketCore.scala 609:97]
      node _T_76 = or(mem_reg_wphit[0], _T_75) @[package.scala 66:75]
      wb_reg_wphit[0] <= _T_76 @[RocketCore.scala 609:18]
      skip @[RocketCore.scala 596:23]
    node _T_77 = and(wb_reg_valid, wb_ctrl.mem) @[RocketCore.scala 615:19]
    node _T_78 = and(_T_77, io.dmem.s2_xcpt.ma.st) @[RocketCore.scala 615:34]
    node _T_79 = and(wb_reg_valid, wb_ctrl.mem) @[RocketCore.scala 616:19]
    node _T_80 = and(_T_79, io.dmem.s2_xcpt.ma.ld) @[RocketCore.scala 616:34]
    node _T_81 = and(wb_reg_valid, wb_ctrl.mem) @[RocketCore.scala 617:19]
    node _T_82 = and(_T_81, io.dmem.s2_xcpt.pf.st) @[RocketCore.scala 617:34]
    node _T_83 = and(wb_reg_valid, wb_ctrl.mem) @[RocketCore.scala 618:19]
    node _T_84 = and(_T_83, io.dmem.s2_xcpt.pf.ld) @[RocketCore.scala 618:34]
    node _T_85 = and(wb_reg_valid, wb_ctrl.mem) @[RocketCore.scala 619:19]
    node _T_86 = and(_T_85, io.dmem.s2_xcpt.ae.st) @[RocketCore.scala 619:34]
    node _T_87 = and(wb_reg_valid, wb_ctrl.mem) @[RocketCore.scala 620:19]
    node _T_88 = and(_T_87, io.dmem.s2_xcpt.ae.ld) @[RocketCore.scala 620:34]
    node _T_89 = or(wb_reg_xcpt, _T_78) @[RocketCore.scala 975:26]
    node _T_90 = or(_T_89, _T_80) @[RocketCore.scala 975:26]
    node _T_91 = or(_T_90, _T_82) @[RocketCore.scala 975:26]
    node _T_92 = or(_T_91, _T_84) @[RocketCore.scala 975:26]
    node _T_93 = or(_T_92, _T_86) @[RocketCore.scala 975:26]
    node wb_xcpt = or(_T_93, _T_88) @[RocketCore.scala 975:26]
    node _T_94 = mux(_T_86, UInt<3>("h07"), UInt<3>("h05")) @[Mux.scala 47:69]
    node _T_95 = mux(_T_84, UInt<4>("h0d"), _T_94) @[Mux.scala 47:69]
    node _T_96 = mux(_T_82, UInt<4>("h0f"), _T_95) @[Mux.scala 47:69]
    node _T_97 = mux(_T_80, UInt<3>("h04"), _T_96) @[Mux.scala 47:69]
    node _T_98 = mux(_T_78, UInt<3>("h06"), _T_97) @[Mux.scala 47:69]
    node wb_cause = mux(wb_reg_xcpt, wb_reg_cause, _T_98) @[Mux.scala 47:69]
    node _T_99 = eq(wb_cause, UInt<3>("h06")) @[RocketCore.scala 979:38]
    node _T_100 = and(wb_xcpt, _T_99) @[RocketCore.scala 979:28]
    node _T_101 = eq(wb_cause, UInt<3>("h04")) @[RocketCore.scala 979:38]
    node _T_102 = and(wb_xcpt, _T_101) @[RocketCore.scala 979:28]
    node _T_103 = eq(wb_cause, UInt<3>("h07")) @[RocketCore.scala 979:38]
    node _T_104 = and(wb_xcpt, _T_103) @[RocketCore.scala 979:28]
    node _T_105 = eq(wb_cause, UInt<3>("h05")) @[RocketCore.scala 979:38]
    node _T_106 = and(wb_xcpt, _T_105) @[RocketCore.scala 979:28]
    node _wb_pc_valid_T = or(wb_reg_valid, wb_reg_replay) @[RocketCore.scala 634:34]
    node wb_pc_valid = or(_wb_pc_valid_T, wb_reg_xcpt) @[RocketCore.scala 634:51]
    node wb_wxd = and(wb_reg_valid, wb_ctrl.wxd) @[RocketCore.scala 635:29]
    node _wb_set_sboard_T = or(wb_ctrl.div, wb_dcache_miss) @[RocketCore.scala 636:35]
    node wb_set_sboard = or(_wb_set_sboard_T, wb_ctrl.rocc) @[RocketCore.scala 636:53]
    node replay_wb_common = or(io.dmem.s2_nack, wb_reg_replay) @[RocketCore.scala 637:42]
    node _replay_wb_rocc_T = and(wb_reg_valid, wb_ctrl.rocc) @[RocketCore.scala 638:37]
    node _replay_wb_rocc_T_1 = eq(io.rocc.cmd.ready, UInt<1>("h00")) @[RocketCore.scala 638:56]
    node replay_wb_rocc = and(_replay_wb_rocc_T, _replay_wb_rocc_T_1) @[RocketCore.scala 638:53]
    node replay_wb = or(replay_wb_common, replay_wb_rocc) @[RocketCore.scala 639:36]
    node _take_pc_wb_T = or(replay_wb, wb_xcpt) @[RocketCore.scala 640:27]
    node _take_pc_wb_T_1 = or(_take_pc_wb_T, csr.io.eret) @[RocketCore.scala 640:38]
    node _take_pc_wb_T_2 = or(_take_pc_wb_T_1, wb_reg_flush_pipe) @[RocketCore.scala 640:53]
    take_pc_wb <= _take_pc_wb_T_2 @[RocketCore.scala 640:14]
    node _dmem_resp_xpu_T = bits(io.dmem.resp.bits.tag, 0, 0) @[RocketCore.scala 643:45]
    node _dmem_resp_xpu_T_1 = bits(_dmem_resp_xpu_T, 0, 0) @[RocketCore.scala 643:49]
    node dmem_resp_xpu = eq(_dmem_resp_xpu_T_1, UInt<1>("h00")) @[RocketCore.scala 643:23]
    node _dmem_resp_fpu_T = bits(io.dmem.resp.bits.tag, 0, 0) @[RocketCore.scala 644:45]
    node dmem_resp_fpu = bits(_dmem_resp_fpu_T, 0, 0) @[RocketCore.scala 644:49]
    node dmem_resp_waddr = bits(io.dmem.resp.bits.tag, 5, 1) @[RocketCore.scala 645:46]
    node dmem_resp_valid = and(io.dmem.resp.valid, io.dmem.resp.bits.has_data) @[RocketCore.scala 646:44]
    node dmem_resp_replay = and(dmem_resp_valid, io.dmem.resp.bits.replay) @[RocketCore.scala 647:42]
    node _div_io_resp_ready_T = eq(wb_wxd, UInt<1>("h00")) @[RocketCore.scala 649:24]
    div.io.resp.ready <= _div_io_resp_ready_T @[RocketCore.scala 649:21]
    wire ll_wdata : UInt
    ll_wdata is invalid
    ll_wdata <= div.io.resp.bits.data
    wire ll_waddr : UInt
    ll_waddr is invalid
    ll_waddr <= div.io.resp.bits.tag
    node ll_wen_x1 = and(div.io.resp.ready, div.io.resp.valid) @[Decoupled.scala 40:37]
    wire ll_wen : UInt<1>
    ll_wen is invalid
    ll_wen <= ll_wen_x1
    node _T_107 = and(dmem_resp_replay, dmem_resp_xpu) @[RocketCore.scala 662:26]
    when _T_107 : @[RocketCore.scala 662:44]
      div.io.resp.ready <= UInt<1>("h00") @[RocketCore.scala 663:23]
      ll_waddr <= dmem_resp_waddr @[RocketCore.scala 666:14]
      ll_wen <= UInt<1>("h01") @[RocketCore.scala 667:12]
      skip @[RocketCore.scala 662:44]
    node _wb_valid_T = eq(replay_wb, UInt<1>("h00")) @[RocketCore.scala 670:34]
    node _wb_valid_T_1 = and(wb_reg_valid, _wb_valid_T) @[RocketCore.scala 670:31]
    node _wb_valid_T_2 = eq(wb_xcpt, UInt<1>("h00")) @[RocketCore.scala 670:48]
    node wb_valid = and(_wb_valid_T_1, _wb_valid_T_2) @[RocketCore.scala 670:45]
    node wb_wen = and(wb_valid, wb_ctrl.wxd) @[RocketCore.scala 671:25]
    node rf_wen = or(wb_wen, ll_wen) @[RocketCore.scala 672:23]
    node rf_waddr = mux(ll_wen, ll_waddr, wb_waddr) @[RocketCore.scala 673:21]
    node _rf_wdata_T = and(dmem_resp_valid, dmem_resp_xpu) @[RocketCore.scala 674:38]
    node _rf_wdata_T_1 = bits(io.dmem.resp.bits.data, 31, 0) @[RocketCore.scala 674:78]
    node _rf_wdata_T_2 = neq(wb_ctrl.csr, UInt<3>("h00")) @[RocketCore.scala 676:34]
    node _rf_wdata_T_3 = mux(wb_ctrl.mul, wb_reg_wdata, wb_reg_wdata) @[RocketCore.scala 677:21]
    node _rf_wdata_T_4 = mux(_rf_wdata_T_2, csr.io.rw.rdata, _rf_wdata_T_3) @[RocketCore.scala 676:21]
    node _rf_wdata_T_5 = mux(ll_wen, ll_wdata, _rf_wdata_T_4) @[RocketCore.scala 675:21]
    node rf_wdata = mux(_rf_wdata_T, _rf_wdata_T_1, _rf_wdata_T_5) @[RocketCore.scala 674:21]
    when rf_wen : @[RocketCore.scala 679:17]
      node _T_108 = neq(rf_waddr, UInt<1>("h00")) @[RocketCore.scala 1027:16]
      when _T_108 : @[RocketCore.scala 1027:29]
        node _T_109 = bits(rf_waddr, 4, 0) @[RocketCore.scala 1016:44]
        node _T_110 = not(_T_109) @[RocketCore.scala 1016:39]
        infer mport MPORT = rf[_T_110], clock @[RocketCore.scala 1016:38]
        MPORT <= rf_wdata @[RocketCore.scala 1028:20]
        node _T_111 = eq(rf_waddr, id_raddr1) @[RocketCore.scala 1030:20]
        when _T_111 : @[RocketCore.scala 1030:31]
          id_rs_0 <= rf_wdata @[RocketCore.scala 1030:39]
          skip @[RocketCore.scala 1030:31]
        node _T_112 = eq(rf_waddr, id_raddr2) @[RocketCore.scala 1030:20]
        when _T_112 : @[RocketCore.scala 1030:31]
          id_rs_1 <= rf_wdata @[RocketCore.scala 1030:39]
          skip @[RocketCore.scala 1030:31]
        skip @[RocketCore.scala 1027:29]
      skip @[RocketCore.scala 679:17]
    csr.io.ungated_clock <= clock @[RocketCore.scala 682:24]
    node _csr_io_decode_0_csr_T = bits(ibuf.io.inst[0].bits.raw, 31, 20) @[RocketCore.scala 683:41]
    csr.io.decode[0].csr <= _csr_io_decode_0_csr_T @[RocketCore.scala 683:24]
    csr.io.exception <= wb_xcpt @[RocketCore.scala 684:20]
    csr.io.cause <= wb_cause @[RocketCore.scala 685:16]
    csr.io.retire <= wb_valid @[RocketCore.scala 686:17]
    node _csr_io_inst_0_T = bits(wb_reg_raw_inst, 1, 0) @[RocketCore.scala 687:66]
    node _csr_io_inst_0_T_1 = andr(_csr_io_inst_0_T) @[RocketCore.scala 687:73]
    node _csr_io_inst_0_T_2 = shr(wb_reg_inst, 16) @[RocketCore.scala 687:91]
    node csr_io_inst_0_hi = mux(_csr_io_inst_0_T_1, _csr_io_inst_0_T_2, UInt<1>("h00")) @[RocketCore.scala 687:50]
    node csr_io_inst_0_lo = bits(wb_reg_raw_inst, 15, 0) @[RocketCore.scala 687:119]
    node _csr_io_inst_0_T_3 = cat(csr_io_inst_0_hi, csr_io_inst_0_lo) @[Cat.scala 30:58]
    csr.io.inst[0] <= _csr_io_inst_0_T_3 @[RocketCore.scala 687:18]
    csr.io.interrupts <- io.interrupts @[RocketCore.scala 688:21]
    csr.io.hartid <= io.hartid @[RocketCore.scala 689:17]
    io.fpu.fcsr_rm <= csr.io.fcsr_rm @[RocketCore.scala 690:18]
    csr.io.fcsr_flags <- io.fpu.fcsr_flags @[RocketCore.scala 691:21]
    node _io_fpu_time_T = bits(csr.io.time, 31, 0) @[RocketCore.scala 692:29]
    io.fpu.time <= _io_fpu_time_T @[RocketCore.scala 692:15]
    io.fpu.hartid <= io.hartid @[RocketCore.scala 693:17]
    csr.io.rocc_interrupt <= io.rocc.interrupt @[RocketCore.scala 694:25]
    csr.io.pc <= wb_reg_pc @[RocketCore.scala 695:13]
    node _tval_valid_T = eq(wb_cause, UInt<2>("h02")) @[package.scala 15:47]
    node _tval_valid_T_1 = eq(wb_cause, UInt<2>("h03")) @[package.scala 15:47]
    node _tval_valid_T_2 = eq(wb_cause, UInt<3>("h04")) @[package.scala 15:47]
    node _tval_valid_T_3 = eq(wb_cause, UInt<3>("h06")) @[package.scala 15:47]
    node _tval_valid_T_4 = eq(wb_cause, UInt<3>("h05")) @[package.scala 15:47]
    node _tval_valid_T_5 = eq(wb_cause, UInt<3>("h07")) @[package.scala 15:47]
    node _tval_valid_T_6 = eq(wb_cause, UInt<1>("h01")) @[package.scala 15:47]
    node _tval_valid_T_7 = eq(wb_cause, UInt<4>("h0d")) @[package.scala 15:47]
    node _tval_valid_T_8 = eq(wb_cause, UInt<4>("h0f")) @[package.scala 15:47]
    node _tval_valid_T_9 = eq(wb_cause, UInt<4>("h0c")) @[package.scala 15:47]
    node _tval_valid_T_10 = or(_tval_valid_T, _tval_valid_T_1) @[package.scala 72:59]
    node _tval_valid_T_11 = or(_tval_valid_T_10, _tval_valid_T_2) @[package.scala 72:59]
    node _tval_valid_T_12 = or(_tval_valid_T_11, _tval_valid_T_3) @[package.scala 72:59]
    node _tval_valid_T_13 = or(_tval_valid_T_12, _tval_valid_T_4) @[package.scala 72:59]
    node _tval_valid_T_14 = or(_tval_valid_T_13, _tval_valid_T_5) @[package.scala 72:59]
    node _tval_valid_T_15 = or(_tval_valid_T_14, _tval_valid_T_6) @[package.scala 72:59]
    node _tval_valid_T_16 = or(_tval_valid_T_15, _tval_valid_T_7) @[package.scala 72:59]
    node _tval_valid_T_17 = or(_tval_valid_T_16, _tval_valid_T_8) @[package.scala 72:59]
    node _tval_valid_T_18 = or(_tval_valid_T_17, _tval_valid_T_9) @[package.scala 72:59]
    node tval_valid = and(wb_xcpt, _tval_valid_T_18) @[RocketCore.scala 696:28]
    node _csr_io_tval_T = mux(tval_valid, wb_reg_wdata, UInt<1>("h00")) @[RocketCore.scala 700:21]
    csr.io.tval <= _csr_io_tval_T @[RocketCore.scala 700:15]
    io.ptw.ptbr <- csr.io.ptbr @[RocketCore.scala 701:15]
    io.ptw.customCSRs.csrs[0] <- csr.io.customCSRs[0] @[RocketCore.scala 702:79]
    io.ptw.customCSRs.csrs[1] <- csr.io.customCSRs[1] @[RocketCore.scala 702:79]
    io.ptw.customCSRs.csrs[2] <- csr.io.customCSRs[2] @[RocketCore.scala 702:79]
    io.ptw.customCSRs.csrs[3] <- csr.io.customCSRs[3] @[RocketCore.scala 702:79]
    io.ptw.status <- csr.io.status @[RocketCore.scala 703:17]
    io.ptw.pmp <- csr.io.pmp @[RocketCore.scala 704:14]
    node _csr_io_rw_addr_T = bits(wb_reg_inst, 31, 20) @[RocketCore.scala 705:32]
    csr.io.rw.addr <= _csr_io_rw_addr_T @[RocketCore.scala 705:18]
    node _csr_io_rw_cmd_T = mux(wb_reg_valid, UInt<1>("h00"), UInt<3>("h04")) @[CSR.scala 132:15]
    node _csr_io_rw_cmd_T_1 = not(_csr_io_rw_cmd_T) @[CSR.scala 132:11]
    node _csr_io_rw_cmd_T_2 = and(wb_ctrl.csr, _csr_io_rw_cmd_T_1) @[CSR.scala 132:9]
    csr.io.rw.cmd <= _csr_io_rw_cmd_T_2 @[RocketCore.scala 706:17]
    csr.io.rw.wdata <= wb_reg_wdata @[RocketCore.scala 707:19]
    io.trace <- csr.io.trace @[RocketCore.scala 708:12]
    io.bpwatch[0].valid[0] <= wb_reg_wphit[0] @[RocketCore.scala 710:20]
    io.bpwatch[0].action <= csr.io.bp[0].control.action @[RocketCore.scala 711:18]
    node _T_113 = neq(id_raddr1, UInt<1>("h00")) @[RocketCore.scala 714:55]
    node _T_114 = and(id_ctrl.rxs1, _T_113) @[RocketCore.scala 714:42]
    node _T_115 = neq(id_raddr2, UInt<1>("h00")) @[RocketCore.scala 715:55]
    node _T_116 = and(id_ctrl.rxs2, _T_115) @[RocketCore.scala 715:42]
    node _T_117 = neq(id_waddr, UInt<1>("h00")) @[RocketCore.scala 716:55]
    node _T_118 = and(id_ctrl.wxd, _T_117) @[RocketCore.scala 716:42]
    reg _r : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[RocketCore.scala 1001:25]
    node _r_T = shr(_r, 1) @[RocketCore.scala 1002:35]
    node r = shl(_r_T, 1) @[RocketCore.scala 1002:40]
    node _T_119 = dshl(UInt<1>("h01"), ll_waddr) @[RocketCore.scala 1005:62]
    node _T_120 = mux(ll_wen, _T_119, UInt<1>("h00")) @[RocketCore.scala 1005:49]
    node _T_121 = not(_T_120) @[RocketCore.scala 997:64]
    node _T_122 = and(r, _T_121) @[RocketCore.scala 997:62]
    node _T_123 = or(UInt<1>("h00"), ll_wen) @[RocketCore.scala 1008:17]
    when _T_123 : @[RocketCore.scala 1009:18]
      _r <= _T_122 @[RocketCore.scala 1009:23]
      skip @[RocketCore.scala 1009:18]
    node _id_sboard_hazard_T = dshr(r, id_raddr1) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_1 = bits(_id_sboard_hazard_T, 0, 0) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_2 = eq(ll_waddr, id_raddr1) @[RocketCore.scala 726:70]
    node _id_sboard_hazard_T_3 = and(ll_wen, _id_sboard_hazard_T_2) @[RocketCore.scala 726:58]
    node _id_sboard_hazard_T_4 = eq(_id_sboard_hazard_T_3, UInt<1>("h00")) @[RocketCore.scala 729:80]
    node _id_sboard_hazard_T_5 = and(_id_sboard_hazard_T_1, _id_sboard_hazard_T_4) @[RocketCore.scala 729:77]
    node _id_sboard_hazard_T_6 = and(_T_114, _id_sboard_hazard_T_5) @[RocketCore.scala 984:27]
    node _id_sboard_hazard_T_7 = dshr(r, id_raddr2) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_8 = bits(_id_sboard_hazard_T_7, 0, 0) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_9 = eq(ll_waddr, id_raddr2) @[RocketCore.scala 726:70]
    node _id_sboard_hazard_T_10 = and(ll_wen, _id_sboard_hazard_T_9) @[RocketCore.scala 726:58]
    node _id_sboard_hazard_T_11 = eq(_id_sboard_hazard_T_10, UInt<1>("h00")) @[RocketCore.scala 729:80]
    node _id_sboard_hazard_T_12 = and(_id_sboard_hazard_T_8, _id_sboard_hazard_T_11) @[RocketCore.scala 729:77]
    node _id_sboard_hazard_T_13 = and(_T_116, _id_sboard_hazard_T_12) @[RocketCore.scala 984:27]
    node _id_sboard_hazard_T_14 = dshr(r, id_waddr) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_15 = bits(_id_sboard_hazard_T_14, 0, 0) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_16 = eq(ll_waddr, id_waddr) @[RocketCore.scala 726:70]
    node _id_sboard_hazard_T_17 = and(ll_wen, _id_sboard_hazard_T_16) @[RocketCore.scala 726:58]
    node _id_sboard_hazard_T_18 = eq(_id_sboard_hazard_T_17, UInt<1>("h00")) @[RocketCore.scala 729:80]
    node _id_sboard_hazard_T_19 = and(_id_sboard_hazard_T_15, _id_sboard_hazard_T_18) @[RocketCore.scala 729:77]
    node _id_sboard_hazard_T_20 = and(_T_118, _id_sboard_hazard_T_19) @[RocketCore.scala 984:27]
    node _id_sboard_hazard_T_21 = or(_id_sboard_hazard_T_6, _id_sboard_hazard_T_13) @[RocketCore.scala 984:50]
    node id_sboard_hazard = or(_id_sboard_hazard_T_21, _id_sboard_hazard_T_20) @[RocketCore.scala 984:50]
    node _T_124 = and(wb_set_sboard, wb_wen) @[RocketCore.scala 730:28]
    node _T_125 = dshl(UInt<1>("h01"), wb_waddr) @[RocketCore.scala 1005:62]
    node _T_126 = mux(_T_124, _T_125, UInt<1>("h00")) @[RocketCore.scala 1005:49]
    node _T_127 = or(_T_122, _T_126) @[RocketCore.scala 996:60]
    node _T_128 = or(_T_123, _T_124) @[RocketCore.scala 1008:17]
    when _T_128 : @[RocketCore.scala 1009:18]
      _r <= _T_127 @[RocketCore.scala 1009:23]
      skip @[RocketCore.scala 1009:18]
    node _ex_cannot_bypass_T = neq(ex_ctrl.csr, UInt<3>("h00")) @[RocketCore.scala 733:38]
    node _ex_cannot_bypass_T_1 = or(_ex_cannot_bypass_T, ex_ctrl.jalr) @[RocketCore.scala 733:48]
    node _ex_cannot_bypass_T_2 = or(_ex_cannot_bypass_T_1, ex_ctrl.mem) @[RocketCore.scala 733:64]
    node _ex_cannot_bypass_T_3 = or(_ex_cannot_bypass_T_2, ex_ctrl.mul) @[RocketCore.scala 733:79]
    node _ex_cannot_bypass_T_4 = or(_ex_cannot_bypass_T_3, ex_ctrl.div) @[RocketCore.scala 733:94]
    node _ex_cannot_bypass_T_5 = or(_ex_cannot_bypass_T_4, ex_ctrl.fp) @[RocketCore.scala 733:109]
    node _ex_cannot_bypass_T_6 = or(_ex_cannot_bypass_T_5, ex_ctrl.rocc) @[RocketCore.scala 733:123]
    node ex_cannot_bypass = or(_ex_cannot_bypass_T_6, ex_scie_pipelined) @[RocketCore.scala 733:139]
    node _data_hazard_ex_T = eq(id_raddr1, ex_waddr) @[RocketCore.scala 734:70]
    node _data_hazard_ex_T_1 = and(_T_114, _data_hazard_ex_T) @[RocketCore.scala 984:27]
    node _data_hazard_ex_T_2 = eq(id_raddr2, ex_waddr) @[RocketCore.scala 734:70]
    node _data_hazard_ex_T_3 = and(_T_116, _data_hazard_ex_T_2) @[RocketCore.scala 984:27]
    node _data_hazard_ex_T_4 = eq(id_waddr, ex_waddr) @[RocketCore.scala 734:70]
    node _data_hazard_ex_T_5 = and(_T_118, _data_hazard_ex_T_4) @[RocketCore.scala 984:27]
    node _data_hazard_ex_T_6 = or(_data_hazard_ex_T_1, _data_hazard_ex_T_3) @[RocketCore.scala 984:50]
    node _data_hazard_ex_T_7 = or(_data_hazard_ex_T_6, _data_hazard_ex_T_5) @[RocketCore.scala 984:50]
    node data_hazard_ex = and(ex_ctrl.wxd, _data_hazard_ex_T_7) @[RocketCore.scala 734:36]
    node _fp_data_hazard_ex_T = eq(id_raddr1, ex_waddr) @[RocketCore.scala 735:76]
    node _fp_data_hazard_ex_T_1 = and(io.fpu.dec.ren1, _fp_data_hazard_ex_T) @[RocketCore.scala 984:27]
    node _fp_data_hazard_ex_T_2 = eq(id_raddr2, ex_waddr) @[RocketCore.scala 735:76]
    node _fp_data_hazard_ex_T_3 = and(io.fpu.dec.ren2, _fp_data_hazard_ex_T_2) @[RocketCore.scala 984:27]
    node _fp_data_hazard_ex_T_4 = eq(id_raddr3, ex_waddr) @[RocketCore.scala 735:76]
    node _fp_data_hazard_ex_T_5 = and(io.fpu.dec.ren3, _fp_data_hazard_ex_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_ex_T_6 = eq(id_waddr, ex_waddr) @[RocketCore.scala 735:76]
    node _fp_data_hazard_ex_T_7 = and(io.fpu.dec.wen, _fp_data_hazard_ex_T_6) @[RocketCore.scala 984:27]
    node _fp_data_hazard_ex_T_8 = or(_fp_data_hazard_ex_T_1, _fp_data_hazard_ex_T_3) @[RocketCore.scala 984:50]
    node _fp_data_hazard_ex_T_9 = or(_fp_data_hazard_ex_T_8, _fp_data_hazard_ex_T_5) @[RocketCore.scala 984:50]
    node _fp_data_hazard_ex_T_10 = or(_fp_data_hazard_ex_T_9, _fp_data_hazard_ex_T_7) @[RocketCore.scala 984:50]
    node fp_data_hazard_ex = and(ex_ctrl.wfd, _fp_data_hazard_ex_T_10) @[RocketCore.scala 735:39]
    node _id_ex_hazard_T = and(data_hazard_ex, ex_cannot_bypass) @[RocketCore.scala 736:54]
    node _id_ex_hazard_T_1 = or(_id_ex_hazard_T, fp_data_hazard_ex) @[RocketCore.scala 736:74]
    node id_ex_hazard = and(ex_reg_valid, _id_ex_hazard_T_1) @[RocketCore.scala 736:35]
    node mem_mem_cmd_bh = and(UInt<1>("h01"), mem_reg_slow_bypass) @[RocketCore.scala 740:43]
    node _mem_cannot_bypass_T = neq(mem_ctrl.csr, UInt<3>("h00")) @[RocketCore.scala 742:40]
    node _mem_cannot_bypass_T_1 = and(mem_ctrl.mem, mem_mem_cmd_bh) @[RocketCore.scala 742:66]
    node _mem_cannot_bypass_T_2 = or(_mem_cannot_bypass_T, _mem_cannot_bypass_T_1) @[RocketCore.scala 742:50]
    node _mem_cannot_bypass_T_3 = or(_mem_cannot_bypass_T_2, mem_ctrl.mul) @[RocketCore.scala 742:84]
    node _mem_cannot_bypass_T_4 = or(_mem_cannot_bypass_T_3, mem_ctrl.div) @[RocketCore.scala 742:100]
    node _mem_cannot_bypass_T_5 = or(_mem_cannot_bypass_T_4, mem_ctrl.fp) @[RocketCore.scala 742:116]
    node mem_cannot_bypass = or(_mem_cannot_bypass_T_5, mem_ctrl.rocc) @[RocketCore.scala 742:131]
    node _data_hazard_mem_T = eq(id_raddr1, mem_waddr) @[RocketCore.scala 743:72]
    node _data_hazard_mem_T_1 = and(_T_114, _data_hazard_mem_T) @[RocketCore.scala 984:27]
    node _data_hazard_mem_T_2 = eq(id_raddr2, mem_waddr) @[RocketCore.scala 743:72]
    node _data_hazard_mem_T_3 = and(_T_116, _data_hazard_mem_T_2) @[RocketCore.scala 984:27]
    node _data_hazard_mem_T_4 = eq(id_waddr, mem_waddr) @[RocketCore.scala 743:72]
    node _data_hazard_mem_T_5 = and(_T_118, _data_hazard_mem_T_4) @[RocketCore.scala 984:27]
    node _data_hazard_mem_T_6 = or(_data_hazard_mem_T_1, _data_hazard_mem_T_3) @[RocketCore.scala 984:50]
    node _data_hazard_mem_T_7 = or(_data_hazard_mem_T_6, _data_hazard_mem_T_5) @[RocketCore.scala 984:50]
    node data_hazard_mem = and(mem_ctrl.wxd, _data_hazard_mem_T_7) @[RocketCore.scala 743:38]
    node _fp_data_hazard_mem_T = eq(id_raddr1, mem_waddr) @[RocketCore.scala 744:78]
    node _fp_data_hazard_mem_T_1 = and(io.fpu.dec.ren1, _fp_data_hazard_mem_T) @[RocketCore.scala 984:27]
    node _fp_data_hazard_mem_T_2 = eq(id_raddr2, mem_waddr) @[RocketCore.scala 744:78]
    node _fp_data_hazard_mem_T_3 = and(io.fpu.dec.ren2, _fp_data_hazard_mem_T_2) @[RocketCore.scala 984:27]
    node _fp_data_hazard_mem_T_4 = eq(id_raddr3, mem_waddr) @[RocketCore.scala 744:78]
    node _fp_data_hazard_mem_T_5 = and(io.fpu.dec.ren3, _fp_data_hazard_mem_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_mem_T_6 = eq(id_waddr, mem_waddr) @[RocketCore.scala 744:78]
    node _fp_data_hazard_mem_T_7 = and(io.fpu.dec.wen, _fp_data_hazard_mem_T_6) @[RocketCore.scala 984:27]
    node _fp_data_hazard_mem_T_8 = or(_fp_data_hazard_mem_T_1, _fp_data_hazard_mem_T_3) @[RocketCore.scala 984:50]
    node _fp_data_hazard_mem_T_9 = or(_fp_data_hazard_mem_T_8, _fp_data_hazard_mem_T_5) @[RocketCore.scala 984:50]
    node _fp_data_hazard_mem_T_10 = or(_fp_data_hazard_mem_T_9, _fp_data_hazard_mem_T_7) @[RocketCore.scala 984:50]
    node fp_data_hazard_mem = and(mem_ctrl.wfd, _fp_data_hazard_mem_T_10) @[RocketCore.scala 744:41]
    node _id_mem_hazard_T = and(data_hazard_mem, mem_cannot_bypass) @[RocketCore.scala 745:57]
    node _id_mem_hazard_T_1 = or(_id_mem_hazard_T, fp_data_hazard_mem) @[RocketCore.scala 745:78]
    node id_mem_hazard = and(mem_reg_valid, _id_mem_hazard_T_1) @[RocketCore.scala 745:37]
    node _id_load_use_T = and(mem_reg_valid, data_hazard_mem) @[RocketCore.scala 746:32]
    node _id_load_use_T_1 = and(_id_load_use_T, mem_ctrl.mem) @[RocketCore.scala 746:51]
    id_load_use <= _id_load_use_T_1 @[RocketCore.scala 746:15]
    node _data_hazard_wb_T = eq(id_raddr1, wb_waddr) @[RocketCore.scala 749:70]
    node _data_hazard_wb_T_1 = and(_T_114, _data_hazard_wb_T) @[RocketCore.scala 984:27]
    node _data_hazard_wb_T_2 = eq(id_raddr2, wb_waddr) @[RocketCore.scala 749:70]
    node _data_hazard_wb_T_3 = and(_T_116, _data_hazard_wb_T_2) @[RocketCore.scala 984:27]
    node _data_hazard_wb_T_4 = eq(id_waddr, wb_waddr) @[RocketCore.scala 749:70]
    node _data_hazard_wb_T_5 = and(_T_118, _data_hazard_wb_T_4) @[RocketCore.scala 984:27]
    node _data_hazard_wb_T_6 = or(_data_hazard_wb_T_1, _data_hazard_wb_T_3) @[RocketCore.scala 984:50]
    node _data_hazard_wb_T_7 = or(_data_hazard_wb_T_6, _data_hazard_wb_T_5) @[RocketCore.scala 984:50]
    node data_hazard_wb = and(wb_ctrl.wxd, _data_hazard_wb_T_7) @[RocketCore.scala 749:36]
    node _fp_data_hazard_wb_T = eq(id_raddr1, wb_waddr) @[RocketCore.scala 750:76]
    node _fp_data_hazard_wb_T_1 = and(io.fpu.dec.ren1, _fp_data_hazard_wb_T) @[RocketCore.scala 984:27]
    node _fp_data_hazard_wb_T_2 = eq(id_raddr2, wb_waddr) @[RocketCore.scala 750:76]
    node _fp_data_hazard_wb_T_3 = and(io.fpu.dec.ren2, _fp_data_hazard_wb_T_2) @[RocketCore.scala 984:27]
    node _fp_data_hazard_wb_T_4 = eq(id_raddr3, wb_waddr) @[RocketCore.scala 750:76]
    node _fp_data_hazard_wb_T_5 = and(io.fpu.dec.ren3, _fp_data_hazard_wb_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_wb_T_6 = eq(id_waddr, wb_waddr) @[RocketCore.scala 750:76]
    node _fp_data_hazard_wb_T_7 = and(io.fpu.dec.wen, _fp_data_hazard_wb_T_6) @[RocketCore.scala 984:27]
    node _fp_data_hazard_wb_T_8 = or(_fp_data_hazard_wb_T_1, _fp_data_hazard_wb_T_3) @[RocketCore.scala 984:50]
    node _fp_data_hazard_wb_T_9 = or(_fp_data_hazard_wb_T_8, _fp_data_hazard_wb_T_5) @[RocketCore.scala 984:50]
    node _fp_data_hazard_wb_T_10 = or(_fp_data_hazard_wb_T_9, _fp_data_hazard_wb_T_7) @[RocketCore.scala 984:50]
    node fp_data_hazard_wb = and(wb_ctrl.wfd, _fp_data_hazard_wb_T_10) @[RocketCore.scala 750:39]
    node _id_wb_hazard_T = and(data_hazard_wb, wb_set_sboard) @[RocketCore.scala 751:54]
    node _id_wb_hazard_T_1 = or(_id_wb_hazard_T, fp_data_hazard_wb) @[RocketCore.scala 751:71]
    node id_wb_hazard = and(wb_reg_valid, _id_wb_hazard_T_1) @[RocketCore.scala 751:35]
    reg blocked : UInt<1>, clock @[RocketCore.scala 764:22]
    node _dcache_blocked_blocked_T = eq(io.dmem.req.ready, UInt<1>("h00")) @[RocketCore.scala 765:16]
    node _dcache_blocked_blocked_T_1 = and(_dcache_blocked_blocked_T, io.dmem.clock_enabled) @[RocketCore.scala 765:35]
    node _dcache_blocked_blocked_T_2 = eq(io.dmem.perf.grant, UInt<1>("h00")) @[RocketCore.scala 765:63]
    node _dcache_blocked_blocked_T_3 = and(_dcache_blocked_blocked_T_1, _dcache_blocked_blocked_T_2) @[RocketCore.scala 765:60]
    node _dcache_blocked_blocked_T_4 = or(blocked, io.dmem.req.valid) @[RocketCore.scala 765:95]
    node _dcache_blocked_blocked_T_5 = or(_dcache_blocked_blocked_T_4, io.dmem.s2_nack) @[RocketCore.scala 765:116]
    node _dcache_blocked_blocked_T_6 = and(_dcache_blocked_blocked_T_3, _dcache_blocked_blocked_T_5) @[RocketCore.scala 765:83]
    blocked <= _dcache_blocked_blocked_T_6 @[RocketCore.scala 765:13]
    node _dcache_blocked_T = eq(io.dmem.perf.grant, UInt<1>("h00")) @[RocketCore.scala 766:16]
    node dcache_blocked = and(blocked, _dcache_blocked_T) @[RocketCore.scala 766:13]
    reg rocc_blocked : UInt<1>, clock @[RocketCore.scala 768:25]
    node _rocc_blocked_T = eq(wb_xcpt, UInt<1>("h00")) @[RocketCore.scala 769:19]
    node _rocc_blocked_T_1 = eq(io.rocc.cmd.ready, UInt<1>("h00")) @[RocketCore.scala 769:31]
    node _rocc_blocked_T_2 = and(_rocc_blocked_T, _rocc_blocked_T_1) @[RocketCore.scala 769:28]
    node _rocc_blocked_T_3 = or(io.rocc.cmd.valid, rocc_blocked) @[RocketCore.scala 769:72]
    node _rocc_blocked_T_4 = and(_rocc_blocked_T_2, _rocc_blocked_T_3) @[RocketCore.scala 769:50]
    rocc_blocked <= _rocc_blocked_T_4 @[RocketCore.scala 769:16]
    node _ctrl_stalld_T = or(id_ex_hazard, id_mem_hazard) @[RocketCore.scala 772:18]
    node _ctrl_stalld_T_1 = or(_ctrl_stalld_T, id_wb_hazard) @[RocketCore.scala 772:35]
    node _ctrl_stalld_T_2 = or(_ctrl_stalld_T_1, id_sboard_hazard) @[RocketCore.scala 772:51]
    node _ctrl_stalld_T_3 = or(ex_reg_valid, mem_reg_valid) @[RocketCore.scala 773:40]
    node _ctrl_stalld_T_4 = or(_ctrl_stalld_T_3, wb_reg_valid) @[RocketCore.scala 773:57]
    node _ctrl_stalld_T_5 = and(csr.io.singleStep, _ctrl_stalld_T_4) @[RocketCore.scala 773:23]
    node _ctrl_stalld_T_6 = or(_ctrl_stalld_T_2, _ctrl_stalld_T_5) @[RocketCore.scala 772:71]
    node _ctrl_stalld_T_7 = and(id_csr_en, csr.io.decode[0].fp_csr) @[RocketCore.scala 774:15]
    node _ctrl_stalld_T_8 = eq(io.fpu.fcsr_rdy, UInt<1>("h00")) @[RocketCore.scala 774:45]
    node _ctrl_stalld_T_9 = and(_ctrl_stalld_T_7, _ctrl_stalld_T_8) @[RocketCore.scala 774:42]
    node _ctrl_stalld_T_10 = or(_ctrl_stalld_T_6, _ctrl_stalld_T_9) @[RocketCore.scala 773:74]
    node _ctrl_stalld_T_11 = and(id_ctrl.fp, UInt<1>("h00")) @[RocketCore.scala 775:16]
    node _ctrl_stalld_T_12 = or(_ctrl_stalld_T_10, _ctrl_stalld_T_11) @[RocketCore.scala 774:62]
    node _ctrl_stalld_T_13 = and(id_ctrl.mem, dcache_blocked) @[RocketCore.scala 776:17]
    node _ctrl_stalld_T_14 = or(_ctrl_stalld_T_12, _ctrl_stalld_T_13) @[RocketCore.scala 775:32]
    node _ctrl_stalld_T_15 = and(id_ctrl.rocc, rocc_blocked) @[RocketCore.scala 777:18]
    node _ctrl_stalld_T_16 = or(_ctrl_stalld_T_14, _ctrl_stalld_T_15) @[RocketCore.scala 776:35]
    node _ctrl_stalld_T_17 = eq(wb_wxd, UInt<1>("h00")) @[RocketCore.scala 778:65]
    node _ctrl_stalld_T_18 = and(div.io.resp.valid, _ctrl_stalld_T_17) @[RocketCore.scala 778:62]
    node _ctrl_stalld_T_19 = or(div.io.req.ready, _ctrl_stalld_T_18) @[RocketCore.scala 778:40]
    node _ctrl_stalld_T_20 = eq(_ctrl_stalld_T_19, UInt<1>("h00")) @[RocketCore.scala 778:21]
    node _ctrl_stalld_T_21 = or(_ctrl_stalld_T_20, div.io.req.valid) @[RocketCore.scala 778:75]
    node _ctrl_stalld_T_22 = and(id_ctrl.div, _ctrl_stalld_T_21) @[RocketCore.scala 778:17]
    node _ctrl_stalld_T_23 = or(_ctrl_stalld_T_16, _ctrl_stalld_T_22) @[RocketCore.scala 777:34]
    node _ctrl_stalld_T_24 = eq(clock_en, UInt<1>("h00")) @[RocketCore.scala 779:5]
    node _ctrl_stalld_T_25 = or(_ctrl_stalld_T_23, _ctrl_stalld_T_24) @[RocketCore.scala 778:96]
    node _ctrl_stalld_T_26 = or(_ctrl_stalld_T_25, id_do_fence) @[RocketCore.scala 779:15]
    node _ctrl_stalld_T_27 = or(_ctrl_stalld_T_26, csr.io.csr_stall) @[RocketCore.scala 780:17]
    node _ctrl_stalld_T_28 = or(_ctrl_stalld_T_27, id_reg_pause) @[RocketCore.scala 781:22]
    node ctrl_stalld = or(_ctrl_stalld_T_28, io.traceStall) @[RocketCore.scala 782:18]
    node _ctrl_killd_T = eq(ibuf.io.inst[0].valid, UInt<1>("h00")) @[RocketCore.scala 784:17]
    node _ctrl_killd_T_1 = or(_ctrl_killd_T, ibuf.io.inst[0].bits.replay) @[RocketCore.scala 784:40]
    node _ctrl_killd_T_2 = or(_ctrl_killd_T_1, take_pc_mem_wb) @[RocketCore.scala 784:71]
    node _ctrl_killd_T_3 = or(_ctrl_killd_T_2, ctrl_stalld) @[RocketCore.scala 784:89]
    node _ctrl_killd_T_4 = or(_ctrl_killd_T_3, csr.io.interrupt) @[RocketCore.scala 784:104]
    ctrl_killd <= _ctrl_killd_T_4 @[RocketCore.scala 784:14]
    io.imem.req.valid <= take_pc_mem_wb @[RocketCore.scala 786:21]
    node _io_imem_req_bits_speculative_T = eq(take_pc_wb, UInt<1>("h00")) @[RocketCore.scala 787:35]
    io.imem.req.bits.speculative <= _io_imem_req_bits_speculative_T @[RocketCore.scala 787:32]
    node _io_imem_req_bits_pc_T = or(wb_xcpt, csr.io.eret) @[RocketCore.scala 789:17]
    node _io_imem_req_bits_pc_T_1 = mux(replay_wb, wb_reg_pc, mem_npc) @[RocketCore.scala 790:8]
    node _io_imem_req_bits_pc_T_2 = mux(_io_imem_req_bits_pc_T, csr.io.evec, _io_imem_req_bits_pc_T_1) @[RocketCore.scala 789:8]
    io.imem.req.bits.pc <= _io_imem_req_bits_pc_T_2 @[RocketCore.scala 788:23]
    node _io_imem_flush_icache_T = and(wb_reg_valid, wb_ctrl.fence_i) @[RocketCore.scala 792:40]
    node _io_imem_flush_icache_T_1 = eq(io.dmem.s2_nack, UInt<1>("h00")) @[RocketCore.scala 792:62]
    node _io_imem_flush_icache_T_2 = and(_io_imem_flush_icache_T, _io_imem_flush_icache_T_1) @[RocketCore.scala 792:59]
    io.imem.flush_icache <= _io_imem_flush_icache_T_2 @[RocketCore.scala 792:24]
    node _io_imem_might_request_imem_might_request_reg_T = or(ex_pc_valid, mem_pc_valid) @[RocketCore.scala 794:43]
    node _io_imem_might_request_imem_might_request_reg_T_1 = bits(io.ptw.customCSRs.csrs[0].value, 1, 1) @[CustomCSRs.scala 38:61]
    node _io_imem_might_request_imem_might_request_reg_T_2 = or(_io_imem_might_request_imem_might_request_reg_T, _io_imem_might_request_imem_might_request_reg_T_1) @[RocketCore.scala 794:59]
    imem_might_request_reg <= _io_imem_might_request_imem_might_request_reg_T_2 @[RocketCore.scala 794:28]
    io.imem.might_request <= imem_might_request_reg @[RocketCore.scala 793:25]
    node _io_imem_sfence_valid_T = and(wb_reg_valid, wb_reg_sfence) @[RocketCore.scala 797:40]
    io.imem.sfence.valid <= _io_imem_sfence_valid_T @[RocketCore.scala 797:24]
    node _io_imem_sfence_bits_rs1_T = bits(wb_reg_mem_size, 0, 0) @[RocketCore.scala 798:45]
    io.imem.sfence.bits.rs1 <= _io_imem_sfence_bits_rs1_T @[RocketCore.scala 798:27]
    node _io_imem_sfence_bits_rs2_T = bits(wb_reg_mem_size, 1, 1) @[RocketCore.scala 799:45]
    io.imem.sfence.bits.rs2 <= _io_imem_sfence_bits_rs2_T @[RocketCore.scala 799:27]
    io.imem.sfence.bits.addr <= wb_reg_wdata @[RocketCore.scala 800:28]
    io.imem.sfence.bits.asid <= wb_reg_rs2 @[RocketCore.scala 801:28]
    io.ptw.sfence <- io.imem.sfence @[RocketCore.scala 802:17]
    node _ibuf_io_inst_0_ready_T = eq(ctrl_stalld, UInt<1>("h00")) @[RocketCore.scala 804:28]
    ibuf.io.inst[0].ready <= _ibuf_io_inst_0_ready_T @[RocketCore.scala 804:25]
    node _io_imem_btb_update_valid_T = eq(take_pc_wb, UInt<1>("h00")) @[RocketCore.scala 806:48]
    node _io_imem_btb_update_valid_T_1 = and(mem_reg_valid, _io_imem_btb_update_valid_T) @[RocketCore.scala 806:45]
    node _io_imem_btb_update_valid_T_2 = and(_io_imem_btb_update_valid_T_1, mem_wrong_npc) @[RocketCore.scala 806:60]
    node _io_imem_btb_update_valid_T_3 = eq(mem_cfi, UInt<1>("h00")) @[RocketCore.scala 806:81]
    node _io_imem_btb_update_valid_T_4 = or(_io_imem_btb_update_valid_T_3, mem_cfi_taken) @[RocketCore.scala 806:90]
    node _io_imem_btb_update_valid_T_5 = and(_io_imem_btb_update_valid_T_2, _io_imem_btb_update_valid_T_4) @[RocketCore.scala 806:77]
    io.imem.btb_update.valid <= _io_imem_btb_update_valid_T_5 @[RocketCore.scala 806:28]
    io.imem.btb_update.bits.isValid <= mem_cfi @[RocketCore.scala 807:35]
    node _io_imem_btb_update_bits_cfiType_T = or(mem_ctrl.jal, mem_ctrl.jalr) @[RocketCore.scala 809:23]
    node _io_imem_btb_update_bits_cfiType_T_1 = bits(mem_waddr, 0, 0) @[RocketCore.scala 809:53]
    node _io_imem_btb_update_bits_cfiType_T_2 = and(_io_imem_btb_update_bits_cfiType_T, _io_imem_btb_update_bits_cfiType_T_1) @[RocketCore.scala 809:41]
    node _io_imem_btb_update_bits_cfiType_T_3 = bits(mem_reg_inst, 19, 15) @[RocketCore.scala 810:39]
    node _io_imem_btb_update_bits_cfiType_T_4 = and(_io_imem_btb_update_bits_cfiType_T_3, UInt<5>("h01f")) @[RocketCore.scala 810:47]
    node _io_imem_btb_update_bits_cfiType_T_5 = and(_io_imem_btb_update_bits_cfiType_T_4, UInt<5>("h01b")) @[RocketCore.scala 810:62]
    node _io_imem_btb_update_bits_cfiType_T_6 = eq(UInt<1>("h01"), _io_imem_btb_update_bits_cfiType_T_5) @[RocketCore.scala 810:62]
    node _io_imem_btb_update_bits_cfiType_T_7 = and(mem_ctrl.jalr, _io_imem_btb_update_bits_cfiType_T_6) @[RocketCore.scala 810:23]
    node _io_imem_btb_update_bits_cfiType_T_8 = or(mem_ctrl.jal, mem_ctrl.jalr) @[RocketCore.scala 811:22]
    node _io_imem_btb_update_bits_cfiType_T_9 = mux(_io_imem_btb_update_bits_cfiType_T_8, UInt<1>("h01"), UInt<1>("h00")) @[RocketCore.scala 811:8]
    node _io_imem_btb_update_bits_cfiType_T_10 = mux(_io_imem_btb_update_bits_cfiType_T_7, UInt<2>("h03"), _io_imem_btb_update_bits_cfiType_T_9) @[RocketCore.scala 810:8]
    node _io_imem_btb_update_bits_cfiType_T_11 = mux(_io_imem_btb_update_bits_cfiType_T_2, UInt<2>("h02"), _io_imem_btb_update_bits_cfiType_T_10) @[RocketCore.scala 809:8]
    io.imem.btb_update.bits.cfiType <= _io_imem_btb_update_bits_cfiType_T_11 @[RocketCore.scala 808:35]
    io.imem.btb_update.bits.target <= io.imem.req.bits.pc @[RocketCore.scala 813:34]
    node _io_imem_btb_update_bits_br_pc_T = mux(mem_reg_rvc, UInt<1>("h00"), UInt<2>("h02")) @[RocketCore.scala 814:74]
    node _io_imem_btb_update_bits_br_pc_T_1 = add(mem_reg_pc, _io_imem_btb_update_bits_br_pc_T) @[RocketCore.scala 814:69]
    node _io_imem_btb_update_bits_br_pc_T_2 = tail(_io_imem_btb_update_bits_br_pc_T_1, 1) @[RocketCore.scala 814:69]
    io.imem.btb_update.bits.br_pc <= _io_imem_btb_update_bits_br_pc_T_2 @[RocketCore.scala 814:33]
    node _io_imem_btb_update_bits_pc_T = not(io.imem.btb_update.bits.br_pc) @[RocketCore.scala 815:35]
    node _io_imem_btb_update_bits_pc_T_1 = or(_io_imem_btb_update_bits_pc_T, UInt<2>("h03")) @[RocketCore.scala 815:66]
    node _io_imem_btb_update_bits_pc_T_2 = not(_io_imem_btb_update_bits_pc_T_1) @[RocketCore.scala 815:33]
    io.imem.btb_update.bits.pc <= _io_imem_btb_update_bits_pc_T_2 @[RocketCore.scala 815:30]
    io.imem.btb_update.bits.prediction <- mem_reg_btb_resp @[RocketCore.scala 816:38]
    node _io_imem_bht_update_valid_T = eq(take_pc_wb, UInt<1>("h00")) @[RocketCore.scala 818:48]
    node _io_imem_bht_update_valid_T_1 = and(mem_reg_valid, _io_imem_bht_update_valid_T) @[RocketCore.scala 818:45]
    io.imem.bht_update.valid <= _io_imem_bht_update_valid_T_1 @[RocketCore.scala 818:28]
    io.imem.bht_update.bits.pc <= io.imem.btb_update.bits.pc @[RocketCore.scala 819:30]
    io.imem.bht_update.bits.taken <= mem_br_taken @[RocketCore.scala 820:33]
    io.imem.bht_update.bits.mispredict <= mem_wrong_npc @[RocketCore.scala 821:38]
    io.imem.bht_update.bits.branch <= mem_ctrl.branch @[RocketCore.scala 822:34]
    io.imem.bht_update.bits.prediction <- mem_reg_btb_resp.bht @[RocketCore.scala 823:38]
    node _io_fpu_valid_T = eq(ctrl_killd, UInt<1>("h00")) @[RocketCore.scala 825:19]
    node _io_fpu_valid_T_1 = and(_io_fpu_valid_T, id_ctrl.fp) @[RocketCore.scala 825:31]
    io.fpu.valid <= _io_fpu_valid_T_1 @[RocketCore.scala 825:16]
    io.fpu.killx <= ctrl_killx @[RocketCore.scala 826:16]
    io.fpu.killm <= killm_common @[RocketCore.scala 827:16]
    io.fpu.inst <= ibuf.io.inst[0].bits.inst.bits @[RocketCore.scala 828:15]
    io.fpu.fromint_data <= ex_rs_0 @[RocketCore.scala 829:23]
    node _io_fpu_dmem_resp_val_T = and(dmem_resp_valid, dmem_resp_fpu) @[RocketCore.scala 830:43]
    io.fpu.dmem_resp_val <= _io_fpu_dmem_resp_val_T @[RocketCore.scala 830:24]
    io.fpu.dmem_resp_data <= io.dmem.resp.bits.data_word_bypass @[RocketCore.scala 831:25]
    io.fpu.dmem_resp_type <= io.dmem.resp.bits.size @[RocketCore.scala 832:25]
    io.fpu.dmem_resp_tag <= dmem_resp_waddr @[RocketCore.scala 833:24]
    node _io_fpu_keep_clock_enabled_T = bits(io.ptw.customCSRs.csrs[0].value, 2, 2) @[CustomCSRs.scala 39:59]
    io.fpu.keep_clock_enabled <= _io_fpu_keep_clock_enabled_T @[RocketCore.scala 834:29]
    node _io_dmem_req_valid_T = and(ex_reg_valid, ex_ctrl.mem) @[RocketCore.scala 836:41]
    io.dmem.req.valid <= _io_dmem_req_valid_T @[RocketCore.scala 836:25]
    node ex_dcache_tag = cat(ex_waddr, ex_ctrl.fp) @[Cat.scala 30:58]
    io.dmem.req.bits.tag <= ex_dcache_tag @[RocketCore.scala 839:25]
    io.dmem.req.bits.cmd <= ex_ctrl.mem_cmd @[RocketCore.scala 840:25]
    io.dmem.req.bits.size <= ex_reg_mem_size @[RocketCore.scala 841:25]
    node _io_dmem_req_bits_signed_T = bits(ex_reg_inst, 14, 14) @[RocketCore.scala 842:42]
    node _io_dmem_req_bits_signed_T_1 = eq(_io_dmem_req_bits_signed_T, UInt<1>("h00")) @[RocketCore.scala 842:30]
    io.dmem.req.bits.signed <= _io_dmem_req_bits_signed_T_1 @[RocketCore.scala 842:27]
    io.dmem.req.bits.phys <= UInt<1>("h00") @[RocketCore.scala 843:25]
    io.dmem.req.bits.addr <= alu.io.adder_out @[RocketCore.scala 844:25]
    io.dmem.req.bits.dprv <= csr.io.status.dprv @[RocketCore.scala 846:25]
    io.dmem.s1_data.data <= mem_reg_rs2 @[RocketCore.scala 847:24]
    node _io_dmem_s1_kill_T = or(killm_common, mem_ldst_xcpt) @[RocketCore.scala 848:35]
    node _io_dmem_s1_kill_T_1 = or(_io_dmem_s1_kill_T, fpu_kill_mem) @[RocketCore.scala 848:52]
    io.dmem.s1_kill <= _io_dmem_s1_kill_T_1 @[RocketCore.scala 848:19]
    io.dmem.s2_kill <= UInt<1>("h00") @[RocketCore.scala 849:19]
    node _io_dmem_keep_clock_enabled_T = and(ibuf.io.inst[0].valid, id_ctrl.mem) @[RocketCore.scala 851:55]
    node _io_dmem_keep_clock_enabled_T_1 = eq(csr.io.csr_stall, UInt<1>("h00")) @[RocketCore.scala 851:73]
    node _io_dmem_keep_clock_enabled_T_2 = and(_io_dmem_keep_clock_enabled_T, _io_dmem_keep_clock_enabled_T_1) @[RocketCore.scala 851:70]
    io.dmem.keep_clock_enabled <= _io_dmem_keep_clock_enabled_T_2 @[RocketCore.scala 851:30]
    node _io_rocc_cmd_valid_T = and(wb_reg_valid, wb_ctrl.rocc) @[RocketCore.scala 853:37]
    node _io_rocc_cmd_valid_T_1 = eq(replay_wb_common, UInt<1>("h00")) @[RocketCore.scala 853:56]
    node _io_rocc_cmd_valid_T_2 = and(_io_rocc_cmd_valid_T, _io_rocc_cmd_valid_T_1) @[RocketCore.scala 853:53]
    io.rocc.cmd.valid <= _io_rocc_cmd_valid_T_2 @[RocketCore.scala 853:21]
    node _io_rocc_exception_T = orr(csr.io.status.xs) @[RocketCore.scala 854:52]
    node _io_rocc_exception_T_1 = and(wb_xcpt, _io_rocc_exception_T) @[RocketCore.scala 854:32]
    io.rocc.exception <= _io_rocc_exception_T_1 @[RocketCore.scala 854:21]
    io.rocc.cmd.bits.status <- csr.io.status @[RocketCore.scala 855:27]
    wire _io_rocc_cmd_bits_inst_WIRE : {funct : UInt<7>, rs2 : UInt<5>, rs1 : UInt<5>, xd : UInt<1>, xs1 : UInt<1>, xs2 : UInt<1>, rd : UInt<5>, opcode : UInt<7>} @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE is invalid @[RocketCore.scala 856:58]
    wire _io_rocc_cmd_bits_inst_WIRE_1 : UInt<32>
    _io_rocc_cmd_bits_inst_WIRE_1 is invalid
    _io_rocc_cmd_bits_inst_WIRE_1 <= wb_reg_inst
    node _io_rocc_cmd_bits_inst_T = bits(_io_rocc_cmd_bits_inst_WIRE_1, 6, 0) @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE.opcode <= _io_rocc_cmd_bits_inst_T @[RocketCore.scala 856:58]
    node _io_rocc_cmd_bits_inst_T_1 = bits(_io_rocc_cmd_bits_inst_WIRE_1, 11, 7) @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE.rd <= _io_rocc_cmd_bits_inst_T_1 @[RocketCore.scala 856:58]
    node _io_rocc_cmd_bits_inst_T_2 = bits(_io_rocc_cmd_bits_inst_WIRE_1, 12, 12) @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE.xs2 <= _io_rocc_cmd_bits_inst_T_2 @[RocketCore.scala 856:58]
    node _io_rocc_cmd_bits_inst_T_3 = bits(_io_rocc_cmd_bits_inst_WIRE_1, 13, 13) @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE.xs1 <= _io_rocc_cmd_bits_inst_T_3 @[RocketCore.scala 856:58]
    node _io_rocc_cmd_bits_inst_T_4 = bits(_io_rocc_cmd_bits_inst_WIRE_1, 14, 14) @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE.xd <= _io_rocc_cmd_bits_inst_T_4 @[RocketCore.scala 856:58]
    node _io_rocc_cmd_bits_inst_T_5 = bits(_io_rocc_cmd_bits_inst_WIRE_1, 19, 15) @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE.rs1 <= _io_rocc_cmd_bits_inst_T_5 @[RocketCore.scala 856:58]
    node _io_rocc_cmd_bits_inst_T_6 = bits(_io_rocc_cmd_bits_inst_WIRE_1, 24, 20) @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE.rs2 <= _io_rocc_cmd_bits_inst_T_6 @[RocketCore.scala 856:58]
    node _io_rocc_cmd_bits_inst_T_7 = bits(_io_rocc_cmd_bits_inst_WIRE_1, 31, 25) @[RocketCore.scala 856:58]
    _io_rocc_cmd_bits_inst_WIRE.funct <= _io_rocc_cmd_bits_inst_T_7 @[RocketCore.scala 856:58]
    io.rocc.cmd.bits.inst <- _io_rocc_cmd_bits_inst_WIRE @[RocketCore.scala 856:25]
    io.rocc.cmd.bits.rs1 <= wb_reg_wdata @[RocketCore.scala 857:24]
    io.rocc.cmd.bits.rs2 <= wb_reg_rs2 @[RocketCore.scala 858:24]
    node _unpause_T = bits(csr.io.time, 4, 0) @[RocketCore.scala 861:28]
    node _unpause_T_1 = eq(_unpause_T, UInt<1>("h00")) @[RocketCore.scala 861:62]
    node _unpause_T_2 = or(_unpause_T_1, csr.io.inhibit_cycle) @[RocketCore.scala 861:68]
    node _unpause_T_3 = or(_unpause_T_2, io.dmem.perf.release) @[RocketCore.scala 861:92]
    node unpause = or(_unpause_T_3, take_pc_mem_wb) @[RocketCore.scala 861:116]
    when unpause : @[RocketCore.scala 862:18]
      id_reg_pause <= UInt<1>("h00") @[RocketCore.scala 862:33]
      skip @[RocketCore.scala 862:18]
    node _io_cease_T = eq(clock_en_reg, UInt<1>("h00")) @[RocketCore.scala 863:38]
    node _io_cease_T_1 = and(csr.io.status.cease, _io_cease_T) @[RocketCore.scala 863:35]
    io.cease <= _io_cease_T_1 @[RocketCore.scala 863:12]
    io.wfi <= csr.io.status.wfi @[RocketCore.scala 864:10]
    reg icache_blocked_REG : UInt<1>, clock @[RocketCore.scala 880:55]
    icache_blocked_REG <= io.imem.resp.valid @[RocketCore.scala 880:55]
    node _icache_blocked_T = or(io.imem.resp.valid, icache_blocked_REG) @[RocketCore.scala 880:45]
    node icache_blocked = eq(_icache_blocked_T, UInt<1>("h00")) @[RocketCore.scala 880:24]
    wire coreMonitorBundle : {clock : Clock, reset : UInt<1>, excpt : UInt<1>, priv_mode : UInt<3>, hartid : UInt<32>, timer : UInt<32>, valid : UInt<1>, pc : UInt<32>, wrdst : UInt<5>, wrdata : UInt<32>, wrenx : UInt<1>, wrenf : UInt<1>, rd0src : UInt<5>, rd0val : UInt<32>, rd1src : UInt<5>, rd1val : UInt<32>, inst : UInt<32>} @[RocketCore.scala 883:31]
    coreMonitorBundle is invalid @[RocketCore.scala 883:31]
    coreMonitorBundle.clock <= clock @[RocketCore.scala 885:27]
    coreMonitorBundle.reset <= reset @[RocketCore.scala 886:27]
    coreMonitorBundle.hartid <= io.hartid @[RocketCore.scala 887:28]
    node _coreMonitorBundle_timer_T = bits(csr.io.time, 31, 0) @[RocketCore.scala 888:41]
    coreMonitorBundle.timer <= _coreMonitorBundle_timer_T @[RocketCore.scala 888:27]
    node _coreMonitorBundle_valid_T = eq(csr.io.trace[0].exception, UInt<1>("h00")) @[RocketCore.scala 889:55]
    node _coreMonitorBundle_valid_T_1 = and(csr.io.trace[0].valid, _coreMonitorBundle_valid_T) @[RocketCore.scala 889:52]
    coreMonitorBundle.valid <= _coreMonitorBundle_valid_T_1 @[RocketCore.scala 889:27]
    node _coreMonitorBundle_pc_T = bits(csr.io.trace[0].iaddr, 31, 0) @[RocketCore.scala 890:48]
    coreMonitorBundle.pc <= _coreMonitorBundle_pc_T @[RocketCore.scala 890:24]
    node _coreMonitorBundle_wrenx_T = eq(wb_set_sboard, UInt<1>("h00")) @[RocketCore.scala 891:40]
    node _coreMonitorBundle_wrenx_T_1 = and(wb_wen, _coreMonitorBundle_wrenx_T) @[RocketCore.scala 891:37]
    coreMonitorBundle.wrenx <= _coreMonitorBundle_wrenx_T_1 @[RocketCore.scala 891:27]
    coreMonitorBundle.wrenf <= UInt<1>("h00") @[RocketCore.scala 892:27]
    coreMonitorBundle.wrdst <= wb_waddr @[RocketCore.scala 893:27]
    coreMonitorBundle.wrdata <= rf_wdata @[RocketCore.scala 894:28]
    node _coreMonitorBundle_rd0src_T = bits(wb_reg_inst, 19, 15) @[RocketCore.scala 895:42]
    coreMonitorBundle.rd0src <= _coreMonitorBundle_rd0src_T @[RocketCore.scala 895:28]
    reg coreMonitorBundle_rd0val_x20 : UInt, clock @[RocketCore.scala 896:43]
    coreMonitorBundle_rd0val_x20 <= ex_rs_0 @[RocketCore.scala 896:43]
    reg coreMonitorBundle_rd0val_REG : UInt, clock @[RocketCore.scala 896:34]
    coreMonitorBundle_rd0val_REG <= coreMonitorBundle_rd0val_x20 @[RocketCore.scala 896:34]
    coreMonitorBundle.rd0val <= coreMonitorBundle_rd0val_REG @[RocketCore.scala 896:28]
    node _coreMonitorBundle_rd1src_T = bits(wb_reg_inst, 24, 20) @[RocketCore.scala 897:42]
    coreMonitorBundle.rd1src <= _coreMonitorBundle_rd1src_T @[RocketCore.scala 897:28]
    reg coreMonitorBundle_rd1val_x26 : UInt, clock @[RocketCore.scala 898:43]
    coreMonitorBundle_rd1val_x26 <= ex_rs_1 @[RocketCore.scala 898:43]
    reg coreMonitorBundle_rd1val_REG : UInt, clock @[RocketCore.scala 898:34]
    coreMonitorBundle_rd1val_REG <= coreMonitorBundle_rd1val_x26 @[RocketCore.scala 898:34]
    coreMonitorBundle.rd1val <= coreMonitorBundle_rd1val_REG @[RocketCore.scala 898:28]
    coreMonitorBundle.inst <= csr.io.trace[0].insn @[RocketCore.scala 899:26]
    coreMonitorBundle.excpt <= csr.io.trace[0].exception @[RocketCore.scala 900:27]
    coreMonitorBundle.priv_mode <= csr.io.trace[0].priv @[RocketCore.scala 901:31]
    when csr.io.trace[0].valid : @[RocketCore.scala 930:34]
      node _T_129 = or(wb_ctrl.wxd, wb_ctrl.wfd) @[RocketCore.scala 934:26]
      node _T_130 = mux(_T_129, coreMonitorBundle.wrdst, UInt<1>("h00")) @[RocketCore.scala 934:13]
      node _T_131 = mux(coreMonitorBundle.wrenx, coreMonitorBundle.wrdata, UInt<1>("h00")) @[RocketCore.scala 935:13]
      node _T_132 = or(wb_ctrl.rxs1, wb_ctrl.rfs1) @[RocketCore.scala 937:27]
      node _T_133 = mux(_T_132, coreMonitorBundle.rd0src, UInt<1>("h00")) @[RocketCore.scala 937:13]
      node _T_134 = or(wb_ctrl.rxs1, wb_ctrl.rfs1) @[RocketCore.scala 938:27]
      node _T_135 = mux(_T_134, coreMonitorBundle.rd0val, UInt<1>("h00")) @[RocketCore.scala 938:13]
      node _T_136 = or(wb_ctrl.rxs2, wb_ctrl.rfs2) @[RocketCore.scala 939:27]
      node _T_137 = mux(_T_136, coreMonitorBundle.rd1src, UInt<1>("h00")) @[RocketCore.scala 939:13]
      node _T_138 = or(wb_ctrl.rxs2, wb_ctrl.rfs2) @[RocketCore.scala 940:27]
      node _T_139 = mux(_T_138, coreMonitorBundle.rd1val, UInt<1>("h00")) @[RocketCore.scala 940:13]
      node _T_140 = bits(reset, 0, 0) @[RocketCore.scala 931:13]
      node _T_141 = eq(_T_140, UInt<1>("h00")) @[RocketCore.scala 931:13]
      when _T_141 : @[RocketCore.scala 931:13]
        printf(clock, UInt<1>(1), "C%d: %d [%d] pc=[%x] W[r%d=%x][%d] R[r%d=%x] R[r%d=%x] inst=[%x] DASM(%x)\n", io.hartid, coreMonitorBundle.timer, coreMonitorBundle.valid, coreMonitorBundle.pc, _T_130, _T_131, coreMonitorBundle.wrenx, _T_133, _T_135, _T_137, _T_139, coreMonitorBundle.inst, coreMonitorBundle.inst) @[RocketCore.scala 931:13]
        skip @[RocketCore.scala 931:13]
      skip @[RocketCore.scala 930:34]
    wire xrfWriteBundle : {clock : Clock, reset : UInt<1>, excpt : UInt<1>, priv_mode : UInt<3>, hartid : UInt<32>, timer : UInt<32>, valid : UInt<1>, pc : UInt<32>, wrdst : UInt<5>, wrdata : UInt<32>, wrenx : UInt<1>, wrenf : UInt<1>, rd0src : UInt<5>, rd0val : UInt<32>, rd1src : UInt<5>, rd1val : UInt<32>, inst : UInt<32>} @[RocketCore.scala 946:28]
    xrfWriteBundle is invalid @[RocketCore.scala 946:28]
    xrfWriteBundle.clock <= clock @[RocketCore.scala 948:24]
    xrfWriteBundle.reset <= reset @[RocketCore.scala 949:24]
    xrfWriteBundle.hartid <= io.hartid @[RocketCore.scala 950:25]
    node _xrfWriteBundle_timer_T = bits(csr.io.time, 31, 0) @[RocketCore.scala 951:38]
    xrfWriteBundle.timer <= _xrfWriteBundle_timer_T @[RocketCore.scala 951:24]
    xrfWriteBundle.valid <= UInt<1>("h00") @[RocketCore.scala 952:24]
    xrfWriteBundle.pc <= UInt<1>("h00") @[RocketCore.scala 953:21]
    xrfWriteBundle.wrdst <= rf_waddr @[RocketCore.scala 954:24]
    node _xrfWriteBundle_wrenx_T = and(csr.io.trace[0].valid, wb_wen) @[RocketCore.scala 955:61]
    node _xrfWriteBundle_wrenx_T_1 = eq(wb_waddr, rf_waddr) @[RocketCore.scala 955:84]
    node _xrfWriteBundle_wrenx_T_2 = and(_xrfWriteBundle_wrenx_T, _xrfWriteBundle_wrenx_T_1) @[RocketCore.scala 955:71]
    node _xrfWriteBundle_wrenx_T_3 = eq(_xrfWriteBundle_wrenx_T_2, UInt<1>("h00")) @[RocketCore.scala 955:37]
    node _xrfWriteBundle_wrenx_T_4 = and(rf_wen, _xrfWriteBundle_wrenx_T_3) @[RocketCore.scala 955:34]
    xrfWriteBundle.wrenx <= _xrfWriteBundle_wrenx_T_4 @[RocketCore.scala 955:24]
    xrfWriteBundle.wrenf <= UInt<1>("h00") @[RocketCore.scala 956:24]
    xrfWriteBundle.wrdata <= rf_wdata @[RocketCore.scala 957:25]
    xrfWriteBundle.rd0src <= UInt<1>("h00") @[RocketCore.scala 958:25]
    xrfWriteBundle.rd0val <= UInt<1>("h00") @[RocketCore.scala 959:25]
    xrfWriteBundle.rd1src <= UInt<1>("h00") @[RocketCore.scala 960:25]
    xrfWriteBundle.rd1val <= UInt<1>("h00") @[RocketCore.scala 961:25]
    xrfWriteBundle.inst <= UInt<1>("h00") @[RocketCore.scala 962:23]
    xrfWriteBundle.excpt <= UInt<1>("h00") @[RocketCore.scala 963:24]
    xrfWriteBundle.priv_mode <= csr.io.trace[0].priv @[RocketCore.scala 964:28]
    inst PlusArgTimeout of PlusArgTimeout @[PlusArg.scala 89:11]
    PlusArgTimeout.clock <= clock
    PlusArgTimeout.reset <= reset
    PlusArgTimeout.io.count <= csr.io.time @[PlusArg.scala 89:82]
    
  module TLB : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {vaddr : UInt<32>, passthrough : UInt<1>, size : UInt<2>, cmd : UInt<5>}}, resp : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, must_alloc : UInt<1>, prefetchable : UInt<1>}, flip sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<32>, asid : UInt<1>}}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {valid : UInt<1>, bits : {addr : UInt<20>}}}, flip resp : {valid : UInt<1>, bits : {ae : UInt<1>, pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<1>, fragmented_superpage : UInt<1>, homogeneous : UInt<1>}}, flip ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip customCSRs : {csrs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}}, flip kill : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node vpn = bits(io.req.bits.vaddr, 31, 12) @[TLB.scala 163:30]
    reg sectored_entries : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[4], valid : UInt<1>[4]}[1][1], clock @[TLB.scala 165:29]
    reg superpage_entries : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[1], valid : UInt<1>[1]}[4], clock @[TLB.scala 166:30]
    reg special_entry : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[1], valid : UInt<1>[1]}, clock @[TLB.scala 167:56]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[TLB.scala 173:18]
    reg r_refill_tag : UInt<20>, clock @[TLB.scala 174:25]
    reg r_superpage_repl_addr : UInt<2>, clock @[TLB.scala 175:34]
    reg r_sectored_repl_addr : UInt<0>, clock @[TLB.scala 176:33]
    reg r_sectored_hit_addr : UInt<0>, clock @[TLB.scala 177:32]
    reg r_sectored_hit : UInt<1>, clock @[TLB.scala 178:27]
    node priv_s = bits(io.ptw.status.dprv, 0, 0) @[TLB.scala 181:20]
    node priv_uses_vm = leq(io.ptw.status.dprv, UInt<1>("h01")) @[TLB.scala 182:27]
    node _vm_enabled_T = bits(io.ptw.ptbr.mode, 0, 0) @[TLB.scala 183:53]
    node _vm_enabled_T_1 = and(UInt<1>("h00"), _vm_enabled_T) @[TLB.scala 183:34]
    node _vm_enabled_T_2 = and(_vm_enabled_T_1, priv_uses_vm) @[TLB.scala 183:83]
    node _vm_enabled_T_3 = eq(io.req.bits.passthrough, UInt<1>("h00")) @[TLB.scala 183:102]
    node vm_enabled = and(_vm_enabled_T_2, _vm_enabled_T_3) @[TLB.scala 183:99]
    node refill_ppn = bits(io.ptw.resp.bits.pte.ppn, 19, 0) @[TLB.scala 186:44]
    node do_refill = and(UInt<1>("h00"), io.ptw.resp.valid) @[TLB.scala 187:33]
    node _invalidate_refill_T = eq(state, UInt<2>("h01")) @[package.scala 15:47]
    node _invalidate_refill_T_1 = eq(state, UInt<2>("h03")) @[package.scala 15:47]
    node _invalidate_refill_T_2 = or(_invalidate_refill_T, _invalidate_refill_T_1) @[package.scala 72:59]
    node invalidate_refill = or(_invalidate_refill_T_2, io.sfence.valid) @[TLB.scala 188:88]
    node _mpu_ppn_T = and(vm_enabled, UInt<1>("h01")) @[TLB.scala 190:32]
    wire _mpu_ppn_data_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE is invalid @[TLB.scala 86:77]
    wire _mpu_ppn_data_WIRE_1 : UInt<35>
    _mpu_ppn_data_WIRE_1 is invalid
    _mpu_ppn_data_WIRE_1 <= special_entry.data[UInt<1>("h00")]
    node _mpu_ppn_data_T = bits(_mpu_ppn_data_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.fragmented_superpage <= _mpu_ppn_data_T @[TLB.scala 86:77]
    node _mpu_ppn_data_T_1 = bits(_mpu_ppn_data_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.c <= _mpu_ppn_data_T_1 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_2 = bits(_mpu_ppn_data_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.eff <= _mpu_ppn_data_T_2 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_3 = bits(_mpu_ppn_data_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.paa <= _mpu_ppn_data_T_3 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_4 = bits(_mpu_ppn_data_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pal <= _mpu_ppn_data_T_4 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_5 = bits(_mpu_ppn_data_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ppp <= _mpu_ppn_data_T_5 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_6 = bits(_mpu_ppn_data_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pr <= _mpu_ppn_data_T_6 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_7 = bits(_mpu_ppn_data_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.px <= _mpu_ppn_data_T_7 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_8 = bits(_mpu_ppn_data_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pw <= _mpu_ppn_data_T_8 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_9 = bits(_mpu_ppn_data_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sr <= _mpu_ppn_data_T_9 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_10 = bits(_mpu_ppn_data_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sx <= _mpu_ppn_data_T_10 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_11 = bits(_mpu_ppn_data_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sw <= _mpu_ppn_data_T_11 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_12 = bits(_mpu_ppn_data_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ae <= _mpu_ppn_data_T_12 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_13 = bits(_mpu_ppn_data_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.g <= _mpu_ppn_data_T_13 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_14 = bits(_mpu_ppn_data_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.u <= _mpu_ppn_data_T_14 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_15 = bits(_mpu_ppn_data_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ppn <= _mpu_ppn_data_T_15 @[TLB.scala 86:77]
    inst mpu_ppn_data_barrier of OptimizationBarrier @[package.scala 258:25]
    mpu_ppn_data_barrier.io is invalid
    mpu_ppn_data_barrier.clock <= clock
    mpu_ppn_data_barrier.reset <= reset
    mpu_ppn_data_barrier.io.x <- _mpu_ppn_data_WIRE @[package.scala 266:18]
    node _mpu_ppn_T_1 = shr(io.req.bits.vaddr, 12) @[TLB.scala 190:123]
    node _mpu_ppn_T_2 = mux(_mpu_ppn_T, mpu_ppn_data_barrier.io.y.ppn, _mpu_ppn_T_1) @[TLB.scala 190:20]
    node mpu_ppn = mux(do_refill, refill_ppn, _mpu_ppn_T_2) @[TLB.scala 189:20]
    node mpu_physaddr_lo = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 191:52]
    node mpu_physaddr = cat(mpu_ppn, mpu_physaddr_lo) @[Cat.scala 30:58]
    node _mpu_priv_T = or(do_refill, io.req.bits.passthrough) @[TLB.scala 192:56]
    node _mpu_priv_T_1 = and(UInt<1>("h00"), _mpu_priv_T) @[TLB.scala 192:42]
    node _mpu_priv_T_2 = cat(io.ptw.status.debug, io.ptw.status.dprv) @[Cat.scala 30:58]
    node mpu_priv = mux(_mpu_priv_T_1, UInt<1>("h01"), _mpu_priv_T_2) @[TLB.scala 192:27]
    inst pmp of PMPChecker @[TLB.scala 193:19]
    pmp.io is invalid
    pmp.clock <= clock
    pmp.reset <= reset
    pmp.io.addr <= mpu_physaddr @[TLB.scala 194:15]
    pmp.io.size <= io.req.bits.size @[TLB.scala 195:15]
    pmp.io.pmp[0] <- io.ptw.pmp[0] @[TLB.scala 196:14]
    pmp.io.pmp[1] <- io.ptw.pmp[1] @[TLB.scala 196:14]
    pmp.io.pmp[2] <- io.ptw.pmp[2] @[TLB.scala 196:14]
    pmp.io.pmp[3] <- io.ptw.pmp[3] @[TLB.scala 196:14]
    pmp.io.pmp[4] <- io.ptw.pmp[4] @[TLB.scala 196:14]
    pmp.io.pmp[5] <- io.ptw.pmp[5] @[TLB.scala 196:14]
    pmp.io.pmp[6] <- io.ptw.pmp[6] @[TLB.scala 196:14]
    pmp.io.pmp[7] <- io.ptw.pmp[7] @[TLB.scala 196:14]
    pmp.io.prv <= mpu_priv @[TLB.scala 197:14]
    node _legal_address_T = xor(mpu_physaddr, UInt<14>("h03000")) @[Parameters.scala 137:31]
    node _legal_address_T_1 = cvt(_legal_address_T) @[Parameters.scala 137:49]
    node _legal_address_T_2 = and(_legal_address_T_1, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_3 = asSInt(_legal_address_T_2) @[Parameters.scala 137:52]
    node _legal_address_T_4 = eq(_legal_address_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_5 = xor(mpu_physaddr, UInt<15>("h04000")) @[Parameters.scala 137:31]
    node _legal_address_T_6 = cvt(_legal_address_T_5) @[Parameters.scala 137:49]
    node _legal_address_T_7 = and(_legal_address_T_6, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_8 = asSInt(_legal_address_T_7) @[Parameters.scala 137:52]
    node _legal_address_T_9 = eq(_legal_address_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_10 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _legal_address_T_11 = cvt(_legal_address_T_10) @[Parameters.scala 137:49]
    node _legal_address_T_12 = and(_legal_address_T_11, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_13 = asSInt(_legal_address_T_12) @[Parameters.scala 137:52]
    node _legal_address_T_14 = eq(_legal_address_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_15 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _legal_address_T_16 = cvt(_legal_address_T_15) @[Parameters.scala 137:49]
    node _legal_address_T_17 = and(_legal_address_T_16, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_18 = asSInt(_legal_address_T_17) @[Parameters.scala 137:52]
    node _legal_address_T_19 = eq(_legal_address_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_20 = xor(mpu_physaddr, UInt<31>("h054000000")) @[Parameters.scala 137:31]
    node _legal_address_T_21 = cvt(_legal_address_T_20) @[Parameters.scala 137:49]
    node _legal_address_T_22 = and(_legal_address_T_21, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_23 = asSInt(_legal_address_T_22) @[Parameters.scala 137:52]
    node _legal_address_T_24 = eq(_legal_address_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_25 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _legal_address_T_26 = cvt(_legal_address_T_25) @[Parameters.scala 137:49]
    node _legal_address_T_27 = and(_legal_address_T_26, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_28 = asSInt(_legal_address_T_27) @[Parameters.scala 137:52]
    node _legal_address_T_29 = eq(_legal_address_T_28, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_30 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
    node _legal_address_T_31 = cvt(_legal_address_T_30) @[Parameters.scala 137:49]
    node _legal_address_T_32 = and(_legal_address_T_31, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
    node _legal_address_T_33 = asSInt(_legal_address_T_32) @[Parameters.scala 137:52]
    node _legal_address_T_34 = eq(_legal_address_T_33, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_35 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _legal_address_T_36 = cvt(_legal_address_T_35) @[Parameters.scala 137:49]
    node _legal_address_T_37 = and(_legal_address_T_36, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_38 = asSInt(_legal_address_T_37) @[Parameters.scala 137:52]
    node _legal_address_T_39 = eq(_legal_address_T_38, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_40 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _legal_address_T_41 = cvt(_legal_address_T_40) @[Parameters.scala 137:49]
    node _legal_address_T_42 = and(_legal_address_T_41, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_43 = asSInt(_legal_address_T_42) @[Parameters.scala 137:52]
    node _legal_address_T_44 = eq(_legal_address_T_43, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_45 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _legal_address_T_46 = cvt(_legal_address_T_45) @[Parameters.scala 137:49]
    node _legal_address_T_47 = and(_legal_address_T_46, asSInt(UInt<15>("h04000"))) @[Parameters.scala 137:52]
    node _legal_address_T_48 = asSInt(_legal_address_T_47) @[Parameters.scala 137:52]
    node _legal_address_T_49 = eq(_legal_address_T_48, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_50 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _legal_address_T_51 = cvt(_legal_address_T_50) @[Parameters.scala 137:49]
    node _legal_address_T_52 = and(_legal_address_T_51, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_53 = asSInt(_legal_address_T_52) @[Parameters.scala 137:52]
    node _legal_address_T_54 = eq(_legal_address_T_53, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    wire _legal_address_WIRE : UInt<1>[11] @[Parameters.scala 598:36]
    _legal_address_WIRE is invalid @[Parameters.scala 598:36]
    _legal_address_WIRE[0] <= _legal_address_T_4 @[Parameters.scala 598:36]
    _legal_address_WIRE[1] <= _legal_address_T_9 @[Parameters.scala 598:36]
    _legal_address_WIRE[2] <= _legal_address_T_14 @[Parameters.scala 598:36]
    _legal_address_WIRE[3] <= _legal_address_T_19 @[Parameters.scala 598:36]
    _legal_address_WIRE[4] <= _legal_address_T_24 @[Parameters.scala 598:36]
    _legal_address_WIRE[5] <= _legal_address_T_29 @[Parameters.scala 598:36]
    _legal_address_WIRE[6] <= _legal_address_T_34 @[Parameters.scala 598:36]
    _legal_address_WIRE[7] <= _legal_address_T_39 @[Parameters.scala 598:36]
    _legal_address_WIRE[8] <= _legal_address_T_44 @[Parameters.scala 598:36]
    _legal_address_WIRE[9] <= _legal_address_T_49 @[Parameters.scala 598:36]
    _legal_address_WIRE[10] <= _legal_address_T_54 @[Parameters.scala 598:36]
    node _legal_address_T_55 = or(_legal_address_WIRE[0], _legal_address_WIRE[1]) @[TLB.scala 198:67]
    node _legal_address_T_56 = or(_legal_address_T_55, _legal_address_WIRE[2]) @[TLB.scala 198:67]
    node _legal_address_T_57 = or(_legal_address_T_56, _legal_address_WIRE[3]) @[TLB.scala 198:67]
    node _legal_address_T_58 = or(_legal_address_T_57, _legal_address_WIRE[4]) @[TLB.scala 198:67]
    node _legal_address_T_59 = or(_legal_address_T_58, _legal_address_WIRE[5]) @[TLB.scala 198:67]
    node _legal_address_T_60 = or(_legal_address_T_59, _legal_address_WIRE[6]) @[TLB.scala 198:67]
    node _legal_address_T_61 = or(_legal_address_T_60, _legal_address_WIRE[7]) @[TLB.scala 198:67]
    node _legal_address_T_62 = or(_legal_address_T_61, _legal_address_WIRE[8]) @[TLB.scala 198:67]
    node _legal_address_T_63 = or(_legal_address_T_62, _legal_address_WIRE[9]) @[TLB.scala 198:67]
    node legal_address = or(_legal_address_T_63, _legal_address_WIRE[10]) @[TLB.scala 198:67]
    node _cacheable_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _cacheable_T_1 = cvt(_cacheable_T) @[Parameters.scala 137:49]
    node _cacheable_T_2 = and(_cacheable_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _cacheable_T_3 = asSInt(_cacheable_T_2) @[Parameters.scala 137:52]
    node _cacheable_T_4 = eq(_cacheable_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _cacheable_T_5 = and(legal_address, UInt<1>("h00")) @[TLB.scala 200:19]
    node cacheable = and(_cacheable_T_5, UInt<1>("h00")) @[TLB.scala 201:49]
    node _homogeneous_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _homogeneous_T_1 = cvt(_homogeneous_T) @[Parameters.scala 137:49]
    node _homogeneous_T_2 = and(_homogeneous_T_1, asSInt(UInt<16>("h0b000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_3 = asSInt(_homogeneous_T_2) @[Parameters.scala 137:52]
    node _homogeneous_T_4 = eq(_homogeneous_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_5 = xor(mpu_physaddr, UInt<14>("h03000")) @[Parameters.scala 137:31]
    node _homogeneous_T_6 = cvt(_homogeneous_T_5) @[Parameters.scala 137:49]
    node _homogeneous_T_7 = and(_homogeneous_T_6, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_8 = asSInt(_homogeneous_T_7) @[Parameters.scala 137:52]
    node _homogeneous_T_9 = eq(_homogeneous_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_10 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_11 = cvt(_homogeneous_T_10) @[Parameters.scala 137:49]
    node _homogeneous_T_12 = and(_homogeneous_T_11, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_13 = asSInt(_homogeneous_T_12) @[Parameters.scala 137:52]
    node _homogeneous_T_14 = eq(_homogeneous_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_15 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_16 = cvt(_homogeneous_T_15) @[Parameters.scala 137:49]
    node _homogeneous_T_17 = and(_homogeneous_T_16, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_18 = asSInt(_homogeneous_T_17) @[Parameters.scala 137:52]
    node _homogeneous_T_19 = eq(_homogeneous_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_20 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _homogeneous_T_21 = cvt(_homogeneous_T_20) @[Parameters.scala 137:49]
    node _homogeneous_T_22 = and(_homogeneous_T_21, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_23 = asSInt(_homogeneous_T_22) @[Parameters.scala 137:52]
    node _homogeneous_T_24 = eq(_homogeneous_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_25 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_26 = cvt(_homogeneous_T_25) @[Parameters.scala 137:49]
    node _homogeneous_T_27 = and(_homogeneous_T_26, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_28 = asSInt(_homogeneous_T_27) @[Parameters.scala 137:52]
    node _homogeneous_T_29 = eq(_homogeneous_T_28, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_30 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_31 = cvt(_homogeneous_T_30) @[Parameters.scala 137:49]
    node _homogeneous_T_32 = and(_homogeneous_T_31, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_33 = asSInt(_homogeneous_T_32) @[Parameters.scala 137:52]
    node _homogeneous_T_34 = eq(_homogeneous_T_33, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_35 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_36 = cvt(_homogeneous_T_35) @[Parameters.scala 137:49]
    node _homogeneous_T_37 = and(_homogeneous_T_36, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_38 = asSInt(_homogeneous_T_37) @[Parameters.scala 137:52]
    node _homogeneous_T_39 = eq(_homogeneous_T_38, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_40 = xor(mpu_physaddr, UInt<31>("h054000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_41 = cvt(_homogeneous_T_40) @[Parameters.scala 137:49]
    node _homogeneous_T_42 = and(_homogeneous_T_41, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_43 = asSInt(_homogeneous_T_42) @[Parameters.scala 137:52]
    node _homogeneous_T_44 = eq(_homogeneous_T_43, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_45 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_46 = cvt(_homogeneous_T_45) @[Parameters.scala 137:49]
    node _homogeneous_T_47 = and(_homogeneous_T_46, asSInt(UInt<15>("h04000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_48 = asSInt(_homogeneous_T_47) @[Parameters.scala 137:52]
    node _homogeneous_T_49 = eq(_homogeneous_T_48, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_50 = or(UInt<1>("h00"), _homogeneous_T_4) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_51 = or(_homogeneous_T_50, _homogeneous_T_9) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_52 = or(_homogeneous_T_51, _homogeneous_T_14) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_53 = or(_homogeneous_T_52, _homogeneous_T_19) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_54 = or(_homogeneous_T_53, _homogeneous_T_24) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_55 = or(_homogeneous_T_54, _homogeneous_T_29) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_56 = or(_homogeneous_T_55, _homogeneous_T_34) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_57 = or(_homogeneous_T_56, _homogeneous_T_39) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_58 = or(_homogeneous_T_57, _homogeneous_T_44) @[TLBPermissions.scala 98:65]
    node homogeneous = or(_homogeneous_T_58, _homogeneous_T_49) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_59 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_60 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_61 = cvt(_homogeneous_T_60) @[Parameters.scala 137:49]
    node _homogeneous_T_62 = and(_homogeneous_T_61, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_63 = asSInt(_homogeneous_T_62) @[Parameters.scala 137:52]
    node _homogeneous_T_64 = eq(_homogeneous_T_63, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_65 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_66 = cvt(_homogeneous_T_65) @[Parameters.scala 137:49]
    node _homogeneous_T_67 = and(_homogeneous_T_66, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_68 = asSInt(_homogeneous_T_67) @[Parameters.scala 137:52]
    node _homogeneous_T_69 = eq(_homogeneous_T_68, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_70 = or(UInt<1>("h00"), _homogeneous_T_64) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_71 = or(_homogeneous_T_70, _homogeneous_T_69) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_72 = eq(_homogeneous_T_71, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_73 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _homogeneous_T_74 = cvt(_homogeneous_T_73) @[Parameters.scala 137:49]
    node _homogeneous_T_75 = and(_homogeneous_T_74, asSInt(UInt<33>("h086134000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_76 = asSInt(_homogeneous_T_75) @[Parameters.scala 137:52]
    node _homogeneous_T_77 = eq(_homogeneous_T_76, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_78 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_79 = cvt(_homogeneous_T_78) @[Parameters.scala 137:49]
    node _homogeneous_T_80 = and(_homogeneous_T_79, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_81 = asSInt(_homogeneous_T_80) @[Parameters.scala 137:52]
    node _homogeneous_T_82 = eq(_homogeneous_T_81, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_83 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_84 = cvt(_homogeneous_T_83) @[Parameters.scala 137:49]
    node _homogeneous_T_85 = and(_homogeneous_T_84, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_86 = asSInt(_homogeneous_T_85) @[Parameters.scala 137:52]
    node _homogeneous_T_87 = eq(_homogeneous_T_86, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_88 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_89 = cvt(_homogeneous_T_88) @[Parameters.scala 137:49]
    node _homogeneous_T_90 = and(_homogeneous_T_89, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_91 = asSInt(_homogeneous_T_90) @[Parameters.scala 137:52]
    node _homogeneous_T_92 = eq(_homogeneous_T_91, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_93 = or(UInt<1>("h00"), _homogeneous_T_77) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_94 = or(_homogeneous_T_93, _homogeneous_T_82) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_95 = or(_homogeneous_T_94, _homogeneous_T_87) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_96 = or(_homogeneous_T_95, _homogeneous_T_92) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_97 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_98 = cvt(_homogeneous_T_97) @[Parameters.scala 137:49]
    node _homogeneous_T_99 = and(_homogeneous_T_98, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_100 = asSInt(_homogeneous_T_99) @[Parameters.scala 137:52]
    node _homogeneous_T_101 = eq(_homogeneous_T_100, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_102 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_103 = cvt(_homogeneous_T_102) @[Parameters.scala 137:49]
    node _homogeneous_T_104 = and(_homogeneous_T_103, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_105 = asSInt(_homogeneous_T_104) @[Parameters.scala 137:52]
    node _homogeneous_T_106 = eq(_homogeneous_T_105, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_107 = or(UInt<1>("h00"), _homogeneous_T_101) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_108 = or(_homogeneous_T_107, _homogeneous_T_106) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_109 = eq(_homogeneous_T_108, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_110 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_111 = cvt(_homogeneous_T_110) @[Parameters.scala 137:49]
    node _homogeneous_T_112 = and(_homogeneous_T_111, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_113 = asSInt(_homogeneous_T_112) @[Parameters.scala 137:52]
    node _homogeneous_T_114 = eq(_homogeneous_T_113, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_115 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_116 = cvt(_homogeneous_T_115) @[Parameters.scala 137:49]
    node _homogeneous_T_117 = and(_homogeneous_T_116, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_118 = asSInt(_homogeneous_T_117) @[Parameters.scala 137:52]
    node _homogeneous_T_119 = eq(_homogeneous_T_118, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_120 = or(UInt<1>("h00"), _homogeneous_T_114) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_121 = or(_homogeneous_T_120, _homogeneous_T_119) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_122 = eq(_homogeneous_T_121, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _deny_access_to_debug_T = leq(mpu_priv, UInt<2>("h03")) @[TLB.scala 203:39]
    node _deny_access_to_debug_T_1 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _deny_access_to_debug_T_2 = cvt(_deny_access_to_debug_T_1) @[Parameters.scala 137:49]
    node _deny_access_to_debug_T_3 = and(_deny_access_to_debug_T_2, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _deny_access_to_debug_T_4 = asSInt(_deny_access_to_debug_T_3) @[Parameters.scala 137:52]
    node _deny_access_to_debug_T_5 = eq(_deny_access_to_debug_T_4, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node deny_access_to_debug = and(_deny_access_to_debug_T, _deny_access_to_debug_T_5) @[TLB.scala 203:48]
    node _prot_r_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_r_T_1 = cvt(_prot_r_T) @[Parameters.scala 137:49]
    node _prot_r_T_2 = and(_prot_r_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _prot_r_T_3 = asSInt(_prot_r_T_2) @[Parameters.scala 137:52]
    node _prot_r_T_4 = eq(_prot_r_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_r_T_5 = and(legal_address, UInt<1>("h01")) @[TLB.scala 200:19]
    node _prot_r_T_6 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 204:44]
    node _prot_r_T_7 = and(_prot_r_T_5, _prot_r_T_6) @[TLB.scala 204:41]
    node prot_r = and(_prot_r_T_7, pmp.io.r) @[TLB.scala 204:66]
    node _prot_w_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_w_T_1 = cvt(_prot_w_T) @[Parameters.scala 137:49]
    node _prot_w_T_2 = and(_prot_w_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_w_T_3 = asSInt(_prot_w_T_2) @[Parameters.scala 137:52]
    node _prot_w_T_4 = eq(_prot_w_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_w_T_6 = cvt(_prot_w_T_5) @[Parameters.scala 137:49]
    node _prot_w_T_7 = and(_prot_w_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_8 = asSInt(_prot_w_T_7) @[Parameters.scala 137:52]
    node _prot_w_T_9 = eq(_prot_w_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_w_T_11 = cvt(_prot_w_T_10) @[Parameters.scala 137:49]
    node _prot_w_T_12 = and(_prot_w_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_w_T_13 = asSInt(_prot_w_T_12) @[Parameters.scala 137:52]
    node _prot_w_T_14 = eq(_prot_w_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_w_T_16 = cvt(_prot_w_T_15) @[Parameters.scala 137:49]
    node _prot_w_T_17 = and(_prot_w_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_18 = asSInt(_prot_w_T_17) @[Parameters.scala 137:52]
    node _prot_w_T_19 = eq(_prot_w_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_w_T_21 = cvt(_prot_w_T_20) @[Parameters.scala 137:49]
    node _prot_w_T_22 = and(_prot_w_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_23 = asSInt(_prot_w_T_22) @[Parameters.scala 137:52]
    node _prot_w_T_24 = eq(_prot_w_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_25 = or(_prot_w_T_4, _prot_w_T_9) @[Parameters.scala 615:89]
    node _prot_w_T_26 = or(_prot_w_T_25, _prot_w_T_14) @[Parameters.scala 615:89]
    node _prot_w_T_27 = or(_prot_w_T_26, _prot_w_T_19) @[Parameters.scala 615:89]
    node _prot_w_T_28 = or(_prot_w_T_27, _prot_w_T_24) @[Parameters.scala 615:89]
    node _prot_w_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_w_T_30 = cvt(_prot_w_T_29) @[Parameters.scala 137:49]
    node _prot_w_T_31 = and(_prot_w_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_32 = asSInt(_prot_w_T_31) @[Parameters.scala 137:52]
    node _prot_w_T_33 = eq(_prot_w_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_w_T_35 = cvt(_prot_w_T_34) @[Parameters.scala 137:49]
    node _prot_w_T_36 = and(_prot_w_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_37 = asSInt(_prot_w_T_36) @[Parameters.scala 137:52]
    node _prot_w_T_38 = eq(_prot_w_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_39 = or(_prot_w_T_33, _prot_w_T_38) @[Parameters.scala 615:89]
    node _prot_w_T_40 = mux(_prot_w_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_w_T_41 = mux(_prot_w_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_w_T_42 = or(_prot_w_T_40, _prot_w_T_41) @[Mux.scala 27:72]
    wire _prot_w_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_w_WIRE <= _prot_w_T_42 @[Mux.scala 27:72]
    node _prot_w_T_43 = and(legal_address, _prot_w_WIRE) @[TLB.scala 200:19]
    node _prot_w_T_44 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 205:48]
    node _prot_w_T_45 = and(_prot_w_T_43, _prot_w_T_44) @[TLB.scala 205:45]
    node prot_w = and(_prot_w_T_45, pmp.io.w) @[TLB.scala 205:70]
    node _prot_pp_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_pp_T_1 = cvt(_prot_pp_T) @[Parameters.scala 137:49]
    node _prot_pp_T_2 = and(_prot_pp_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_3 = asSInt(_prot_pp_T_2) @[Parameters.scala 137:52]
    node _prot_pp_T_4 = eq(_prot_pp_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_6 = cvt(_prot_pp_T_5) @[Parameters.scala 137:49]
    node _prot_pp_T_7 = and(_prot_pp_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_8 = asSInt(_prot_pp_T_7) @[Parameters.scala 137:52]
    node _prot_pp_T_9 = eq(_prot_pp_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_11 = cvt(_prot_pp_T_10) @[Parameters.scala 137:49]
    node _prot_pp_T_12 = and(_prot_pp_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_13 = asSInt(_prot_pp_T_12) @[Parameters.scala 137:52]
    node _prot_pp_T_14 = eq(_prot_pp_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_16 = cvt(_prot_pp_T_15) @[Parameters.scala 137:49]
    node _prot_pp_T_17 = and(_prot_pp_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_18 = asSInt(_prot_pp_T_17) @[Parameters.scala 137:52]
    node _prot_pp_T_19 = eq(_prot_pp_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_21 = cvt(_prot_pp_T_20) @[Parameters.scala 137:49]
    node _prot_pp_T_22 = and(_prot_pp_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_23 = asSInt(_prot_pp_T_22) @[Parameters.scala 137:52]
    node _prot_pp_T_24 = eq(_prot_pp_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_25 = or(_prot_pp_T_4, _prot_pp_T_9) @[Parameters.scala 615:89]
    node _prot_pp_T_26 = or(_prot_pp_T_25, _prot_pp_T_14) @[Parameters.scala 615:89]
    node _prot_pp_T_27 = or(_prot_pp_T_26, _prot_pp_T_19) @[Parameters.scala 615:89]
    node _prot_pp_T_28 = or(_prot_pp_T_27, _prot_pp_T_24) @[Parameters.scala 615:89]
    node _prot_pp_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_pp_T_30 = cvt(_prot_pp_T_29) @[Parameters.scala 137:49]
    node _prot_pp_T_31 = and(_prot_pp_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_32 = asSInt(_prot_pp_T_31) @[Parameters.scala 137:52]
    node _prot_pp_T_33 = eq(_prot_pp_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_pp_T_35 = cvt(_prot_pp_T_34) @[Parameters.scala 137:49]
    node _prot_pp_T_36 = and(_prot_pp_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_37 = asSInt(_prot_pp_T_36) @[Parameters.scala 137:52]
    node _prot_pp_T_38 = eq(_prot_pp_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_39 = or(_prot_pp_T_33, _prot_pp_T_38) @[Parameters.scala 615:89]
    node _prot_pp_T_40 = mux(_prot_pp_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_pp_T_41 = mux(_prot_pp_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_pp_T_42 = or(_prot_pp_T_40, _prot_pp_T_41) @[Mux.scala 27:72]
    wire _prot_pp_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_pp_WIRE <= _prot_pp_T_42 @[Mux.scala 27:72]
    node prot_pp = and(legal_address, _prot_pp_WIRE) @[TLB.scala 200:19]
    node _prot_al_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_al_T_1 = cvt(_prot_al_T) @[Parameters.scala 137:49]
    node _prot_al_T_2 = and(_prot_al_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_al_T_3 = asSInt(_prot_al_T_2) @[Parameters.scala 137:52]
    node _prot_al_T_4 = eq(_prot_al_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_al_T_6 = cvt(_prot_al_T_5) @[Parameters.scala 137:49]
    node _prot_al_T_7 = and(_prot_al_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_8 = asSInt(_prot_al_T_7) @[Parameters.scala 137:52]
    node _prot_al_T_9 = eq(_prot_al_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_al_T_11 = cvt(_prot_al_T_10) @[Parameters.scala 137:49]
    node _prot_al_T_12 = and(_prot_al_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_al_T_13 = asSInt(_prot_al_T_12) @[Parameters.scala 137:52]
    node _prot_al_T_14 = eq(_prot_al_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_al_T_16 = cvt(_prot_al_T_15) @[Parameters.scala 137:49]
    node _prot_al_T_17 = and(_prot_al_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_18 = asSInt(_prot_al_T_17) @[Parameters.scala 137:52]
    node _prot_al_T_19 = eq(_prot_al_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_al_T_21 = cvt(_prot_al_T_20) @[Parameters.scala 137:49]
    node _prot_al_T_22 = and(_prot_al_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_23 = asSInt(_prot_al_T_22) @[Parameters.scala 137:52]
    node _prot_al_T_24 = eq(_prot_al_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_25 = or(_prot_al_T_4, _prot_al_T_9) @[Parameters.scala 615:89]
    node _prot_al_T_26 = or(_prot_al_T_25, _prot_al_T_14) @[Parameters.scala 615:89]
    node _prot_al_T_27 = or(_prot_al_T_26, _prot_al_T_19) @[Parameters.scala 615:89]
    node _prot_al_T_28 = or(_prot_al_T_27, _prot_al_T_24) @[Parameters.scala 615:89]
    node _prot_al_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_al_T_30 = cvt(_prot_al_T_29) @[Parameters.scala 137:49]
    node _prot_al_T_31 = and(_prot_al_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_32 = asSInt(_prot_al_T_31) @[Parameters.scala 137:52]
    node _prot_al_T_33 = eq(_prot_al_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_al_T_35 = cvt(_prot_al_T_34) @[Parameters.scala 137:49]
    node _prot_al_T_36 = and(_prot_al_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_37 = asSInt(_prot_al_T_36) @[Parameters.scala 137:52]
    node _prot_al_T_38 = eq(_prot_al_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_39 = or(_prot_al_T_33, _prot_al_T_38) @[Parameters.scala 615:89]
    node _prot_al_T_40 = mux(_prot_al_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_al_T_41 = mux(_prot_al_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_al_T_42 = or(_prot_al_T_40, _prot_al_T_41) @[Mux.scala 27:72]
    wire _prot_al_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_al_WIRE <= _prot_al_T_42 @[Mux.scala 27:72]
    node prot_al = and(legal_address, _prot_al_WIRE) @[TLB.scala 200:19]
    node _prot_aa_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_aa_T_1 = cvt(_prot_aa_T) @[Parameters.scala 137:49]
    node _prot_aa_T_2 = and(_prot_aa_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_3 = asSInt(_prot_aa_T_2) @[Parameters.scala 137:52]
    node _prot_aa_T_4 = eq(_prot_aa_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_6 = cvt(_prot_aa_T_5) @[Parameters.scala 137:49]
    node _prot_aa_T_7 = and(_prot_aa_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_8 = asSInt(_prot_aa_T_7) @[Parameters.scala 137:52]
    node _prot_aa_T_9 = eq(_prot_aa_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_11 = cvt(_prot_aa_T_10) @[Parameters.scala 137:49]
    node _prot_aa_T_12 = and(_prot_aa_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_13 = asSInt(_prot_aa_T_12) @[Parameters.scala 137:52]
    node _prot_aa_T_14 = eq(_prot_aa_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_16 = cvt(_prot_aa_T_15) @[Parameters.scala 137:49]
    node _prot_aa_T_17 = and(_prot_aa_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_18 = asSInt(_prot_aa_T_17) @[Parameters.scala 137:52]
    node _prot_aa_T_19 = eq(_prot_aa_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_21 = cvt(_prot_aa_T_20) @[Parameters.scala 137:49]
    node _prot_aa_T_22 = and(_prot_aa_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_23 = asSInt(_prot_aa_T_22) @[Parameters.scala 137:52]
    node _prot_aa_T_24 = eq(_prot_aa_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_25 = or(_prot_aa_T_4, _prot_aa_T_9) @[Parameters.scala 615:89]
    node _prot_aa_T_26 = or(_prot_aa_T_25, _prot_aa_T_14) @[Parameters.scala 615:89]
    node _prot_aa_T_27 = or(_prot_aa_T_26, _prot_aa_T_19) @[Parameters.scala 615:89]
    node _prot_aa_T_28 = or(_prot_aa_T_27, _prot_aa_T_24) @[Parameters.scala 615:89]
    node _prot_aa_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_aa_T_30 = cvt(_prot_aa_T_29) @[Parameters.scala 137:49]
    node _prot_aa_T_31 = and(_prot_aa_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_32 = asSInt(_prot_aa_T_31) @[Parameters.scala 137:52]
    node _prot_aa_T_33 = eq(_prot_aa_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_aa_T_35 = cvt(_prot_aa_T_34) @[Parameters.scala 137:49]
    node _prot_aa_T_36 = and(_prot_aa_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_37 = asSInt(_prot_aa_T_36) @[Parameters.scala 137:52]
    node _prot_aa_T_38 = eq(_prot_aa_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_39 = or(_prot_aa_T_33, _prot_aa_T_38) @[Parameters.scala 615:89]
    node _prot_aa_T_40 = mux(_prot_aa_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_aa_T_41 = mux(_prot_aa_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_aa_T_42 = or(_prot_aa_T_40, _prot_aa_T_41) @[Mux.scala 27:72]
    wire _prot_aa_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_aa_WIRE <= _prot_aa_T_42 @[Mux.scala 27:72]
    node prot_aa = and(legal_address, _prot_aa_WIRE) @[TLB.scala 200:19]
    node _prot_x_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_x_T_1 = cvt(_prot_x_T) @[Parameters.scala 137:49]
    node _prot_x_T_2 = and(_prot_x_T_1, asSInt(UInt<33>("h086134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_3 = asSInt(_prot_x_T_2) @[Parameters.scala 137:52]
    node _prot_x_T_4 = eq(_prot_x_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_5 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_x_T_6 = cvt(_prot_x_T_5) @[Parameters.scala 137:49]
    node _prot_x_T_7 = and(_prot_x_T_6, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_8 = asSInt(_prot_x_T_7) @[Parameters.scala 137:52]
    node _prot_x_T_9 = eq(_prot_x_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_10 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_x_T_11 = cvt(_prot_x_T_10) @[Parameters.scala 137:49]
    node _prot_x_T_12 = and(_prot_x_T_11, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_13 = asSInt(_prot_x_T_12) @[Parameters.scala 137:52]
    node _prot_x_T_14 = eq(_prot_x_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_15 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_x_T_16 = cvt(_prot_x_T_15) @[Parameters.scala 137:49]
    node _prot_x_T_17 = and(_prot_x_T_16, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_18 = asSInt(_prot_x_T_17) @[Parameters.scala 137:52]
    node _prot_x_T_19 = eq(_prot_x_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_20 = or(_prot_x_T_4, _prot_x_T_9) @[Parameters.scala 615:89]
    node _prot_x_T_21 = or(_prot_x_T_20, _prot_x_T_14) @[Parameters.scala 615:89]
    node _prot_x_T_22 = or(_prot_x_T_21, _prot_x_T_19) @[Parameters.scala 615:89]
    node _prot_x_T_23 = xor(mpu_physaddr, UInt<15>("h04000")) @[Parameters.scala 137:31]
    node _prot_x_T_24 = cvt(_prot_x_T_23) @[Parameters.scala 137:49]
    node _prot_x_T_25 = and(_prot_x_T_24, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_26 = asSInt(_prot_x_T_25) @[Parameters.scala 137:52]
    node _prot_x_T_27 = eq(_prot_x_T_26, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_28 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _prot_x_T_29 = cvt(_prot_x_T_28) @[Parameters.scala 137:49]
    node _prot_x_T_30 = and(_prot_x_T_29, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_31 = asSInt(_prot_x_T_30) @[Parameters.scala 137:52]
    node _prot_x_T_32 = eq(_prot_x_T_31, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_33 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_x_T_34 = cvt(_prot_x_T_33) @[Parameters.scala 137:49]
    node _prot_x_T_35 = and(_prot_x_T_34, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_36 = asSInt(_prot_x_T_35) @[Parameters.scala 137:52]
    node _prot_x_T_37 = eq(_prot_x_T_36, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_38 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 137:31]
    node _prot_x_T_39 = cvt(_prot_x_T_38) @[Parameters.scala 137:49]
    node _prot_x_T_40 = and(_prot_x_T_39, asSInt(UInt<33>("h094000000"))) @[Parameters.scala 137:52]
    node _prot_x_T_41 = asSInt(_prot_x_T_40) @[Parameters.scala 137:52]
    node _prot_x_T_42 = eq(_prot_x_T_41, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_43 = xor(mpu_physaddr, UInt<29>("h014000000")) @[Parameters.scala 137:31]
    node _prot_x_T_44 = cvt(_prot_x_T_43) @[Parameters.scala 137:49]
    node _prot_x_T_45 = and(_prot_x_T_44, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_46 = asSInt(_prot_x_T_45) @[Parameters.scala 137:52]
    node _prot_x_T_47 = eq(_prot_x_T_46, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_48 = or(_prot_x_T_27, _prot_x_T_32) @[Parameters.scala 615:89]
    node _prot_x_T_49 = or(_prot_x_T_48, _prot_x_T_37) @[Parameters.scala 615:89]
    node _prot_x_T_50 = or(_prot_x_T_49, _prot_x_T_42) @[Parameters.scala 615:89]
    node _prot_x_T_51 = or(_prot_x_T_50, _prot_x_T_47) @[Parameters.scala 615:89]
    node _prot_x_T_52 = mux(_prot_x_T_22, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_x_T_53 = mux(_prot_x_T_51, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_x_T_54 = or(_prot_x_T_52, _prot_x_T_53) @[Mux.scala 27:72]
    wire _prot_x_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_x_WIRE <= _prot_x_T_54 @[Mux.scala 27:72]
    node _prot_x_T_55 = and(legal_address, _prot_x_WIRE) @[TLB.scala 200:19]
    node _prot_x_T_56 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 209:43]
    node _prot_x_T_57 = and(_prot_x_T_55, _prot_x_T_56) @[TLB.scala 209:40]
    node prot_x = and(_prot_x_T_57, pmp.io.x) @[TLB.scala 209:65]
    node _prot_eff_T = xor(mpu_physaddr, UInt<14>("h02000")) @[Parameters.scala 137:31]
    node _prot_eff_T_1 = cvt(_prot_eff_T) @[Parameters.scala 137:49]
    node _prot_eff_T_2 = and(_prot_eff_T_1, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_3 = asSInt(_prot_eff_T_2) @[Parameters.scala 137:52]
    node _prot_eff_T_4 = eq(_prot_eff_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_5 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_eff_T_6 = cvt(_prot_eff_T_5) @[Parameters.scala 137:49]
    node _prot_eff_T_7 = and(_prot_eff_T_6, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_8 = asSInt(_prot_eff_T_7) @[Parameters.scala 137:52]
    node _prot_eff_T_9 = eq(_prot_eff_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_10 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_eff_T_11 = cvt(_prot_eff_T_10) @[Parameters.scala 137:49]
    node _prot_eff_T_12 = and(_prot_eff_T_11, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_13 = asSInt(_prot_eff_T_12) @[Parameters.scala 137:52]
    node _prot_eff_T_14 = eq(_prot_eff_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_16 = cvt(_prot_eff_T_15) @[Parameters.scala 137:49]
    node _prot_eff_T_17 = and(_prot_eff_T_16, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_18 = asSInt(_prot_eff_T_17) @[Parameters.scala 137:52]
    node _prot_eff_T_19 = eq(_prot_eff_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_21 = cvt(_prot_eff_T_20) @[Parameters.scala 137:49]
    node _prot_eff_T_22 = and(_prot_eff_T_21, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_23 = asSInt(_prot_eff_T_22) @[Parameters.scala 137:52]
    node _prot_eff_T_24 = eq(_prot_eff_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_25 = or(_prot_eff_T_4, _prot_eff_T_9) @[Parameters.scala 615:89]
    node _prot_eff_T_26 = or(_prot_eff_T_25, _prot_eff_T_14) @[Parameters.scala 615:89]
    node _prot_eff_T_27 = or(_prot_eff_T_26, _prot_eff_T_19) @[Parameters.scala 615:89]
    node _prot_eff_T_28 = or(_prot_eff_T_27, _prot_eff_T_24) @[Parameters.scala 615:89]
    node _prot_eff_T_29 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_eff_T_30 = cvt(_prot_eff_T_29) @[Parameters.scala 137:49]
    node _prot_eff_T_31 = and(_prot_eff_T_30, asSInt(UInt<33>("h096032000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_32 = asSInt(_prot_eff_T_31) @[Parameters.scala 137:52]
    node _prot_eff_T_33 = eq(_prot_eff_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_34 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_35 = cvt(_prot_eff_T_34) @[Parameters.scala 137:49]
    node _prot_eff_T_36 = and(_prot_eff_T_35, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_37 = asSInt(_prot_eff_T_36) @[Parameters.scala 137:52]
    node _prot_eff_T_38 = eq(_prot_eff_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_39 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_40 = cvt(_prot_eff_T_39) @[Parameters.scala 137:49]
    node _prot_eff_T_41 = and(_prot_eff_T_40, asSInt(UInt<33>("h094000000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_42 = asSInt(_prot_eff_T_41) @[Parameters.scala 137:52]
    node _prot_eff_T_43 = eq(_prot_eff_T_42, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_44 = xor(mpu_physaddr, UInt<29>("h014000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_45 = cvt(_prot_eff_T_44) @[Parameters.scala 137:49]
    node _prot_eff_T_46 = and(_prot_eff_T_45, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_47 = asSInt(_prot_eff_T_46) @[Parameters.scala 137:52]
    node _prot_eff_T_48 = eq(_prot_eff_T_47, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_49 = or(_prot_eff_T_33, _prot_eff_T_38) @[Parameters.scala 615:89]
    node _prot_eff_T_50 = or(_prot_eff_T_49, _prot_eff_T_43) @[Parameters.scala 615:89]
    node _prot_eff_T_51 = or(_prot_eff_T_50, _prot_eff_T_48) @[Parameters.scala 615:89]
    node _prot_eff_T_52 = mux(_prot_eff_T_28, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_eff_T_53 = mux(_prot_eff_T_51, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_eff_T_54 = or(_prot_eff_T_52, _prot_eff_T_53) @[Mux.scala 27:72]
    wire _prot_eff_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_eff_WIRE <= _prot_eff_T_54 @[Mux.scala 27:72]
    node prot_eff = and(legal_address, _prot_eff_WIRE) @[TLB.scala 200:19]
    node _sector_hits_T = or(sectored_entries[UInt<1>("h00")][0].valid[0], sectored_entries[UInt<1>("h00")][0].valid[1]) @[package.scala 72:59]
    node _sector_hits_T_1 = or(_sector_hits_T, sectored_entries[UInt<1>("h00")][0].valid[2]) @[package.scala 72:59]
    node _sector_hits_T_2 = or(_sector_hits_T_1, sectored_entries[UInt<1>("h00")][0].valid[3]) @[package.scala 72:59]
    node _sector_hits_T_3 = xor(sectored_entries[UInt<1>("h00")][0].tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_4 = shr(_sector_hits_T_3, 2) @[TLB.scala 88:48]
    node _sector_hits_T_5 = eq(_sector_hits_T_4, UInt<1>("h00")) @[TLB.scala 88:66]
    node sector_hits_0 = and(_sector_hits_T_2, _sector_hits_T_5) @[TLB.scala 87:40]
    node _superpage_hits_T = xor(superpage_entries[0].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_1 = shr(_superpage_hits_T, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_2 = eq(_superpage_hits_T_1, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_0 = and(superpage_entries[0].valid[UInt<1>("h00")], _superpage_hits_T_2) @[TLB.scala 100:18]
    node _superpage_hits_T_3 = xor(superpage_entries[1].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_4 = shr(_superpage_hits_T_3, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_5 = eq(_superpage_hits_T_4, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_1 = and(superpage_entries[1].valid[UInt<1>("h00")], _superpage_hits_T_5) @[TLB.scala 100:18]
    node _superpage_hits_T_6 = xor(superpage_entries[2].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_7 = shr(_superpage_hits_T_6, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_8 = eq(_superpage_hits_T_7, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_2 = and(superpage_entries[2].valid[UInt<1>("h00")], _superpage_hits_T_8) @[TLB.scala 100:18]
    node _superpage_hits_T_9 = xor(superpage_entries[3].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_10 = shr(_superpage_hits_T_9, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_11 = eq(_superpage_hits_T_10, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_3 = and(superpage_entries[3].valid[UInt<1>("h00")], _superpage_hits_T_11) @[TLB.scala 100:18]
    node hitsVec_idx = bits(vpn, 1, 0) @[package.scala 154:13]
    node _hitsVec_T = xor(sectored_entries[UInt<1>("h00")][0].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_1 = shr(_hitsVec_T, 2) @[TLB.scala 88:48]
    node _hitsVec_T_2 = eq(_hitsVec_T_1, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_3 = and(sectored_entries[UInt<1>("h00")][0].valid[hitsVec_idx], _hitsVec_T_2) @[TLB.scala 100:18]
    node hitsVec_0 = and(vm_enabled, _hitsVec_T_3) @[TLB.scala 214:44]
    node _hitsVec_T_4 = xor(superpage_entries[0].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_5 = shr(_hitsVec_T_4, 0) @[TLB.scala 88:48]
    node _hitsVec_T_6 = eq(_hitsVec_T_5, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_7 = and(superpage_entries[0].valid[UInt<1>("h00")], _hitsVec_T_6) @[TLB.scala 100:18]
    node hitsVec_1 = and(vm_enabled, _hitsVec_T_7) @[TLB.scala 214:44]
    node _hitsVec_T_8 = xor(superpage_entries[1].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_9 = shr(_hitsVec_T_8, 0) @[TLB.scala 88:48]
    node _hitsVec_T_10 = eq(_hitsVec_T_9, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_11 = and(superpage_entries[1].valid[UInt<1>("h00")], _hitsVec_T_10) @[TLB.scala 100:18]
    node hitsVec_2 = and(vm_enabled, _hitsVec_T_11) @[TLB.scala 214:44]
    node _hitsVec_T_12 = xor(superpage_entries[2].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_13 = shr(_hitsVec_T_12, 0) @[TLB.scala 88:48]
    node _hitsVec_T_14 = eq(_hitsVec_T_13, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_15 = and(superpage_entries[2].valid[UInt<1>("h00")], _hitsVec_T_14) @[TLB.scala 100:18]
    node hitsVec_3 = and(vm_enabled, _hitsVec_T_15) @[TLB.scala 214:44]
    node _hitsVec_T_16 = xor(superpage_entries[3].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_17 = shr(_hitsVec_T_16, 0) @[TLB.scala 88:48]
    node _hitsVec_T_18 = eq(_hitsVec_T_17, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_19 = and(superpage_entries[3].valid[UInt<1>("h00")], _hitsVec_T_18) @[TLB.scala 100:18]
    node hitsVec_4 = and(vm_enabled, _hitsVec_T_19) @[TLB.scala 214:44]
    node _hitsVec_T_20 = xor(special_entry.tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_21 = shr(_hitsVec_T_20, 0) @[TLB.scala 88:48]
    node _hitsVec_T_22 = eq(_hitsVec_T_21, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_23 = and(special_entry.valid[UInt<1>("h00")], _hitsVec_T_22) @[TLB.scala 100:18]
    node hitsVec_5 = and(vm_enabled, _hitsVec_T_23) @[TLB.scala 214:44]
    node real_hits_lo_hi = cat(hitsVec_2, hitsVec_1) @[Cat.scala 30:58]
    node real_hits_lo = cat(real_hits_lo_hi, hitsVec_0) @[Cat.scala 30:58]
    node real_hits_hi_hi = cat(hitsVec_5, hitsVec_4) @[Cat.scala 30:58]
    node real_hits_hi = cat(real_hits_hi_hi, hitsVec_3) @[Cat.scala 30:58]
    node real_hits = cat(real_hits_hi, real_hits_lo) @[Cat.scala 30:58]
    node hits_hi = eq(vm_enabled, UInt<1>("h00")) @[TLB.scala 216:18]
    node hits = cat(hits_hi, real_hits) @[Cat.scala 30:58]
    node _ppn_T = eq(vm_enabled, UInt<1>("h00")) @[TLB.scala 217:30]
    node _ppn_data_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _ppn_data_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_1 : UInt<35>
    _ppn_data_WIRE_1 is invalid
    _ppn_data_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_ppn_data_T]
    node _ppn_data_T_1 = bits(_ppn_data_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE.fragmented_superpage <= _ppn_data_T_1 @[TLB.scala 86:77]
    node _ppn_data_T_2 = bits(_ppn_data_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE.c <= _ppn_data_T_2 @[TLB.scala 86:77]
    node _ppn_data_T_3 = bits(_ppn_data_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE.eff <= _ppn_data_T_3 @[TLB.scala 86:77]
    node _ppn_data_T_4 = bits(_ppn_data_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE.paa <= _ppn_data_T_4 @[TLB.scala 86:77]
    node _ppn_data_T_5 = bits(_ppn_data_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE.pal <= _ppn_data_T_5 @[TLB.scala 86:77]
    node _ppn_data_T_6 = bits(_ppn_data_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE.ppp <= _ppn_data_T_6 @[TLB.scala 86:77]
    node _ppn_data_T_7 = bits(_ppn_data_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE.pr <= _ppn_data_T_7 @[TLB.scala 86:77]
    node _ppn_data_T_8 = bits(_ppn_data_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE.px <= _ppn_data_T_8 @[TLB.scala 86:77]
    node _ppn_data_T_9 = bits(_ppn_data_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE.pw <= _ppn_data_T_9 @[TLB.scala 86:77]
    node _ppn_data_T_10 = bits(_ppn_data_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE.sr <= _ppn_data_T_10 @[TLB.scala 86:77]
    node _ppn_data_T_11 = bits(_ppn_data_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE.sx <= _ppn_data_T_11 @[TLB.scala 86:77]
    node _ppn_data_T_12 = bits(_ppn_data_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE.sw <= _ppn_data_T_12 @[TLB.scala 86:77]
    node _ppn_data_T_13 = bits(_ppn_data_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE.ae <= _ppn_data_T_13 @[TLB.scala 86:77]
    node _ppn_data_T_14 = bits(_ppn_data_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE.g <= _ppn_data_T_14 @[TLB.scala 86:77]
    node _ppn_data_T_15 = bits(_ppn_data_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE.u <= _ppn_data_T_15 @[TLB.scala 86:77]
    node _ppn_data_T_16 = bits(_ppn_data_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE.ppn <= _ppn_data_T_16 @[TLB.scala 86:77]
    inst ppn_data_barrier of OptimizationBarrier_1 @[package.scala 258:25]
    ppn_data_barrier.io is invalid
    ppn_data_barrier.clock <= clock
    ppn_data_barrier.reset <= reset
    ppn_data_barrier.io.x <- _ppn_data_WIRE @[package.scala 266:18]
    wire _ppn_data_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_3 : UInt<35>
    _ppn_data_WIRE_3 is invalid
    _ppn_data_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _ppn_data_T_17 = bits(_ppn_data_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.fragmented_superpage <= _ppn_data_T_17 @[TLB.scala 86:77]
    node _ppn_data_T_18 = bits(_ppn_data_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.c <= _ppn_data_T_18 @[TLB.scala 86:77]
    node _ppn_data_T_19 = bits(_ppn_data_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.eff <= _ppn_data_T_19 @[TLB.scala 86:77]
    node _ppn_data_T_20 = bits(_ppn_data_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.paa <= _ppn_data_T_20 @[TLB.scala 86:77]
    node _ppn_data_T_21 = bits(_ppn_data_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pal <= _ppn_data_T_21 @[TLB.scala 86:77]
    node _ppn_data_T_22 = bits(_ppn_data_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ppp <= _ppn_data_T_22 @[TLB.scala 86:77]
    node _ppn_data_T_23 = bits(_ppn_data_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pr <= _ppn_data_T_23 @[TLB.scala 86:77]
    node _ppn_data_T_24 = bits(_ppn_data_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.px <= _ppn_data_T_24 @[TLB.scala 86:77]
    node _ppn_data_T_25 = bits(_ppn_data_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pw <= _ppn_data_T_25 @[TLB.scala 86:77]
    node _ppn_data_T_26 = bits(_ppn_data_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sr <= _ppn_data_T_26 @[TLB.scala 86:77]
    node _ppn_data_T_27 = bits(_ppn_data_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sx <= _ppn_data_T_27 @[TLB.scala 86:77]
    node _ppn_data_T_28 = bits(_ppn_data_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sw <= _ppn_data_T_28 @[TLB.scala 86:77]
    node _ppn_data_T_29 = bits(_ppn_data_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ae <= _ppn_data_T_29 @[TLB.scala 86:77]
    node _ppn_data_T_30 = bits(_ppn_data_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.g <= _ppn_data_T_30 @[TLB.scala 86:77]
    node _ppn_data_T_31 = bits(_ppn_data_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.u <= _ppn_data_T_31 @[TLB.scala 86:77]
    node _ppn_data_T_32 = bits(_ppn_data_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ppn <= _ppn_data_T_32 @[TLB.scala 86:77]
    inst ppn_data_barrier_1 of OptimizationBarrier_2 @[package.scala 258:25]
    ppn_data_barrier_1.io is invalid
    ppn_data_barrier_1.clock <= clock
    ppn_data_barrier_1.reset <= reset
    ppn_data_barrier_1.io.x <- _ppn_data_WIRE_2 @[package.scala 266:18]
    wire _ppn_data_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_5 : UInt<35>
    _ppn_data_WIRE_5 is invalid
    _ppn_data_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _ppn_data_T_33 = bits(_ppn_data_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.fragmented_superpage <= _ppn_data_T_33 @[TLB.scala 86:77]
    node _ppn_data_T_34 = bits(_ppn_data_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.c <= _ppn_data_T_34 @[TLB.scala 86:77]
    node _ppn_data_T_35 = bits(_ppn_data_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.eff <= _ppn_data_T_35 @[TLB.scala 86:77]
    node _ppn_data_T_36 = bits(_ppn_data_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.paa <= _ppn_data_T_36 @[TLB.scala 86:77]
    node _ppn_data_T_37 = bits(_ppn_data_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pal <= _ppn_data_T_37 @[TLB.scala 86:77]
    node _ppn_data_T_38 = bits(_ppn_data_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ppp <= _ppn_data_T_38 @[TLB.scala 86:77]
    node _ppn_data_T_39 = bits(_ppn_data_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pr <= _ppn_data_T_39 @[TLB.scala 86:77]
    node _ppn_data_T_40 = bits(_ppn_data_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.px <= _ppn_data_T_40 @[TLB.scala 86:77]
    node _ppn_data_T_41 = bits(_ppn_data_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pw <= _ppn_data_T_41 @[TLB.scala 86:77]
    node _ppn_data_T_42 = bits(_ppn_data_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sr <= _ppn_data_T_42 @[TLB.scala 86:77]
    node _ppn_data_T_43 = bits(_ppn_data_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sx <= _ppn_data_T_43 @[TLB.scala 86:77]
    node _ppn_data_T_44 = bits(_ppn_data_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sw <= _ppn_data_T_44 @[TLB.scala 86:77]
    node _ppn_data_T_45 = bits(_ppn_data_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ae <= _ppn_data_T_45 @[TLB.scala 86:77]
    node _ppn_data_T_46 = bits(_ppn_data_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.g <= _ppn_data_T_46 @[TLB.scala 86:77]
    node _ppn_data_T_47 = bits(_ppn_data_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.u <= _ppn_data_T_47 @[TLB.scala 86:77]
    node _ppn_data_T_48 = bits(_ppn_data_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ppn <= _ppn_data_T_48 @[TLB.scala 86:77]
    inst ppn_data_barrier_2 of OptimizationBarrier_3 @[package.scala 258:25]
    ppn_data_barrier_2.io is invalid
    ppn_data_barrier_2.clock <= clock
    ppn_data_barrier_2.reset <= reset
    ppn_data_barrier_2.io.x <- _ppn_data_WIRE_4 @[package.scala 266:18]
    wire _ppn_data_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_7 : UInt<35>
    _ppn_data_WIRE_7 is invalid
    _ppn_data_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _ppn_data_T_49 = bits(_ppn_data_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.fragmented_superpage <= _ppn_data_T_49 @[TLB.scala 86:77]
    node _ppn_data_T_50 = bits(_ppn_data_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.c <= _ppn_data_T_50 @[TLB.scala 86:77]
    node _ppn_data_T_51 = bits(_ppn_data_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.eff <= _ppn_data_T_51 @[TLB.scala 86:77]
    node _ppn_data_T_52 = bits(_ppn_data_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.paa <= _ppn_data_T_52 @[TLB.scala 86:77]
    node _ppn_data_T_53 = bits(_ppn_data_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pal <= _ppn_data_T_53 @[TLB.scala 86:77]
    node _ppn_data_T_54 = bits(_ppn_data_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ppp <= _ppn_data_T_54 @[TLB.scala 86:77]
    node _ppn_data_T_55 = bits(_ppn_data_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pr <= _ppn_data_T_55 @[TLB.scala 86:77]
    node _ppn_data_T_56 = bits(_ppn_data_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.px <= _ppn_data_T_56 @[TLB.scala 86:77]
    node _ppn_data_T_57 = bits(_ppn_data_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pw <= _ppn_data_T_57 @[TLB.scala 86:77]
    node _ppn_data_T_58 = bits(_ppn_data_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sr <= _ppn_data_T_58 @[TLB.scala 86:77]
    node _ppn_data_T_59 = bits(_ppn_data_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sx <= _ppn_data_T_59 @[TLB.scala 86:77]
    node _ppn_data_T_60 = bits(_ppn_data_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sw <= _ppn_data_T_60 @[TLB.scala 86:77]
    node _ppn_data_T_61 = bits(_ppn_data_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ae <= _ppn_data_T_61 @[TLB.scala 86:77]
    node _ppn_data_T_62 = bits(_ppn_data_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.g <= _ppn_data_T_62 @[TLB.scala 86:77]
    node _ppn_data_T_63 = bits(_ppn_data_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.u <= _ppn_data_T_63 @[TLB.scala 86:77]
    node _ppn_data_T_64 = bits(_ppn_data_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ppn <= _ppn_data_T_64 @[TLB.scala 86:77]
    inst ppn_data_barrier_3 of OptimizationBarrier_4 @[package.scala 258:25]
    ppn_data_barrier_3.io is invalid
    ppn_data_barrier_3.clock <= clock
    ppn_data_barrier_3.reset <= reset
    ppn_data_barrier_3.io.x <- _ppn_data_WIRE_6 @[package.scala 266:18]
    wire _ppn_data_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_9 : UInt<35>
    _ppn_data_WIRE_9 is invalid
    _ppn_data_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _ppn_data_T_65 = bits(_ppn_data_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.fragmented_superpage <= _ppn_data_T_65 @[TLB.scala 86:77]
    node _ppn_data_T_66 = bits(_ppn_data_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.c <= _ppn_data_T_66 @[TLB.scala 86:77]
    node _ppn_data_T_67 = bits(_ppn_data_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.eff <= _ppn_data_T_67 @[TLB.scala 86:77]
    node _ppn_data_T_68 = bits(_ppn_data_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.paa <= _ppn_data_T_68 @[TLB.scala 86:77]
    node _ppn_data_T_69 = bits(_ppn_data_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pal <= _ppn_data_T_69 @[TLB.scala 86:77]
    node _ppn_data_T_70 = bits(_ppn_data_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ppp <= _ppn_data_T_70 @[TLB.scala 86:77]
    node _ppn_data_T_71 = bits(_ppn_data_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pr <= _ppn_data_T_71 @[TLB.scala 86:77]
    node _ppn_data_T_72 = bits(_ppn_data_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.px <= _ppn_data_T_72 @[TLB.scala 86:77]
    node _ppn_data_T_73 = bits(_ppn_data_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pw <= _ppn_data_T_73 @[TLB.scala 86:77]
    node _ppn_data_T_74 = bits(_ppn_data_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sr <= _ppn_data_T_74 @[TLB.scala 86:77]
    node _ppn_data_T_75 = bits(_ppn_data_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sx <= _ppn_data_T_75 @[TLB.scala 86:77]
    node _ppn_data_T_76 = bits(_ppn_data_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sw <= _ppn_data_T_76 @[TLB.scala 86:77]
    node _ppn_data_T_77 = bits(_ppn_data_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ae <= _ppn_data_T_77 @[TLB.scala 86:77]
    node _ppn_data_T_78 = bits(_ppn_data_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.g <= _ppn_data_T_78 @[TLB.scala 86:77]
    node _ppn_data_T_79 = bits(_ppn_data_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.u <= _ppn_data_T_79 @[TLB.scala 86:77]
    node _ppn_data_T_80 = bits(_ppn_data_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ppn <= _ppn_data_T_80 @[TLB.scala 86:77]
    inst ppn_data_barrier_4 of OptimizationBarrier_5 @[package.scala 258:25]
    ppn_data_barrier_4.io is invalid
    ppn_data_barrier_4.clock <= clock
    ppn_data_barrier_4.reset <= reset
    ppn_data_barrier_4.io.x <- _ppn_data_WIRE_8 @[package.scala 266:18]
    wire _ppn_data_WIRE_10 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_10 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_11 : UInt<35>
    _ppn_data_WIRE_11 is invalid
    _ppn_data_WIRE_11 <= special_entry.data[UInt<1>("h00")]
    node _ppn_data_T_81 = bits(_ppn_data_WIRE_11, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.fragmented_superpage <= _ppn_data_T_81 @[TLB.scala 86:77]
    node _ppn_data_T_82 = bits(_ppn_data_WIRE_11, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.c <= _ppn_data_T_82 @[TLB.scala 86:77]
    node _ppn_data_T_83 = bits(_ppn_data_WIRE_11, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.eff <= _ppn_data_T_83 @[TLB.scala 86:77]
    node _ppn_data_T_84 = bits(_ppn_data_WIRE_11, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.paa <= _ppn_data_T_84 @[TLB.scala 86:77]
    node _ppn_data_T_85 = bits(_ppn_data_WIRE_11, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pal <= _ppn_data_T_85 @[TLB.scala 86:77]
    node _ppn_data_T_86 = bits(_ppn_data_WIRE_11, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ppp <= _ppn_data_T_86 @[TLB.scala 86:77]
    node _ppn_data_T_87 = bits(_ppn_data_WIRE_11, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pr <= _ppn_data_T_87 @[TLB.scala 86:77]
    node _ppn_data_T_88 = bits(_ppn_data_WIRE_11, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.px <= _ppn_data_T_88 @[TLB.scala 86:77]
    node _ppn_data_T_89 = bits(_ppn_data_WIRE_11, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pw <= _ppn_data_T_89 @[TLB.scala 86:77]
    node _ppn_data_T_90 = bits(_ppn_data_WIRE_11, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sr <= _ppn_data_T_90 @[TLB.scala 86:77]
    node _ppn_data_T_91 = bits(_ppn_data_WIRE_11, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sx <= _ppn_data_T_91 @[TLB.scala 86:77]
    node _ppn_data_T_92 = bits(_ppn_data_WIRE_11, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sw <= _ppn_data_T_92 @[TLB.scala 86:77]
    node _ppn_data_T_93 = bits(_ppn_data_WIRE_11, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ae <= _ppn_data_T_93 @[TLB.scala 86:77]
    node _ppn_data_T_94 = bits(_ppn_data_WIRE_11, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.g <= _ppn_data_T_94 @[TLB.scala 86:77]
    node _ppn_data_T_95 = bits(_ppn_data_WIRE_11, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.u <= _ppn_data_T_95 @[TLB.scala 86:77]
    node _ppn_data_T_96 = bits(_ppn_data_WIRE_11, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ppn <= _ppn_data_T_96 @[TLB.scala 86:77]
    inst ppn_data_barrier_5 of OptimizationBarrier_6 @[package.scala 258:25]
    ppn_data_barrier_5.io is invalid
    ppn_data_barrier_5.clock <= clock
    ppn_data_barrier_5.reset <= reset
    ppn_data_barrier_5.io.x <- _ppn_data_WIRE_10 @[package.scala 266:18]
    node _ppn_T_1 = bits(vpn, 19, 0) @[TLB.scala 217:77]
    node _ppn_T_2 = mux(hitsVec_0, ppn_data_barrier.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_3 = mux(hitsVec_1, ppn_data_barrier_1.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_4 = mux(hitsVec_2, ppn_data_barrier_2.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_5 = mux(hitsVec_3, ppn_data_barrier_3.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_6 = mux(hitsVec_4, ppn_data_barrier_4.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_7 = mux(hitsVec_5, ppn_data_barrier_5.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_8 = mux(_ppn_T, _ppn_T_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_9 = or(_ppn_T_2, _ppn_T_3) @[Mux.scala 27:72]
    node _ppn_T_10 = or(_ppn_T_9, _ppn_T_4) @[Mux.scala 27:72]
    node _ppn_T_11 = or(_ppn_T_10, _ppn_T_5) @[Mux.scala 27:72]
    node _ppn_T_12 = or(_ppn_T_11, _ppn_T_6) @[Mux.scala 27:72]
    node _ppn_T_13 = or(_ppn_T_12, _ppn_T_7) @[Mux.scala 27:72]
    node _ppn_T_14 = or(_ppn_T_13, _ppn_T_8) @[Mux.scala 27:72]
    wire ppn : UInt<20> @[Mux.scala 27:72]
    ppn <= _ppn_T_14 @[Mux.scala 27:72]
    when do_refill : @[TLB.scala 220:20]
      wire newEntry : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 222:24]
      newEntry is invalid @[TLB.scala 222:24]
      newEntry.ppn <= io.ptw.resp.bits.pte.ppn @[TLB.scala 223:18]
      newEntry.c <= cacheable @[TLB.scala 224:16]
      newEntry.u <= io.ptw.resp.bits.pte.u @[TLB.scala 225:16]
      node _newEntry_g_T = and(io.ptw.resp.bits.pte.g, io.ptw.resp.bits.pte.v) @[TLB.scala 226:25]
      newEntry.g <= _newEntry_g_T @[TLB.scala 226:16]
      newEntry.ae <= io.ptw.resp.bits.ae @[TLB.scala 227:17]
      node _newEntry_sr_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sr_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sr_T) @[PTW.scala 73:44]
      node _newEntry_sr_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sr_T_1) @[PTW.scala 73:38]
      node _newEntry_sr_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sr_T_2) @[PTW.scala 73:32]
      node _newEntry_sr_T_4 = and(_newEntry_sr_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sr_T_5 = and(_newEntry_sr_T_4, io.ptw.resp.bits.pte.r) @[PTW.scala 77:35]
      newEntry.sr <= _newEntry_sr_T_5 @[TLB.scala 228:17]
      node _newEntry_sw_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sw_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sw_T) @[PTW.scala 73:44]
      node _newEntry_sw_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sw_T_1) @[PTW.scala 73:38]
      node _newEntry_sw_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sw_T_2) @[PTW.scala 73:32]
      node _newEntry_sw_T_4 = and(_newEntry_sw_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sw_T_5 = and(_newEntry_sw_T_4, io.ptw.resp.bits.pte.w) @[PTW.scala 78:35]
      node _newEntry_sw_T_6 = and(_newEntry_sw_T_5, io.ptw.resp.bits.pte.d) @[PTW.scala 78:40]
      newEntry.sw <= _newEntry_sw_T_6 @[TLB.scala 229:17]
      node _newEntry_sx_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sx_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sx_T) @[PTW.scala 73:44]
      node _newEntry_sx_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sx_T_1) @[PTW.scala 73:38]
      node _newEntry_sx_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sx_T_2) @[PTW.scala 73:32]
      node _newEntry_sx_T_4 = and(_newEntry_sx_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sx_T_5 = and(_newEntry_sx_T_4, io.ptw.resp.bits.pte.x) @[PTW.scala 79:35]
      newEntry.sx <= _newEntry_sx_T_5 @[TLB.scala 230:17]
      newEntry.pr <= prot_r @[TLB.scala 231:17]
      newEntry.pw <= prot_w @[TLB.scala 232:17]
      newEntry.px <= prot_x @[TLB.scala 233:17]
      newEntry.ppp <= prot_pp @[TLB.scala 234:18]
      newEntry.pal <= prot_al @[TLB.scala 235:18]
      newEntry.paa <= prot_aa @[TLB.scala 236:18]
      newEntry.eff <= prot_eff @[TLB.scala 237:18]
      newEntry.fragmented_superpage <= io.ptw.resp.bits.fragmented_superpage @[TLB.scala 238:35]
      node _T = eq(io.ptw.resp.bits.homogeneous, UInt<1>("h00")) @[TLB.scala 240:37]
      node _T_1 = and(UInt<1>("h01"), _T) @[TLB.scala 240:34]
      when _T_1 : @[TLB.scala 240:68]
        special_entry.tag <= r_refill_tag @[TLB.scala 118:14]
        node _special_entry_level_T = bits(io.ptw.resp.bits.level, 0, 0) @[package.scala 154:13]
        special_entry.level <= _special_entry_level_T @[TLB.scala 119:16]
        special_entry.valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
        node special_entry_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
        node special_entry_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
        node special_entry_data_0_lo_lo = cat(special_entry_data_0_lo_lo_hi, special_entry_data_0_lo_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi = cat(special_entry_data_0_lo_hi_hi, special_entry_data_0_lo_hi_lo) @[TLB.scala 123:24]
        node special_entry_data_0_lo = cat(special_entry_data_0_lo_hi, special_entry_data_0_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo = cat(special_entry_data_0_hi_lo_hi, special_entry_data_0_hi_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi = cat(special_entry_data_0_hi_hi_hi, special_entry_data_0_hi_hi_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi = cat(special_entry_data_0_hi_hi, special_entry_data_0_hi_lo) @[TLB.scala 123:24]
        node _special_entry_data_0_T = cat(special_entry_data_0_hi, special_entry_data_0_lo) @[TLB.scala 123:24]
        special_entry.data[UInt<1>("h00")] <= _special_entry_data_0_T @[TLB.scala 123:15]
        when invalidate_refill : @[TLB.scala 243:34]
          special_entry.valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
          skip @[TLB.scala 243:34]
        skip @[TLB.scala 240:68]
      else : @[TLB.scala 245:54]
        node _T_2 = lt(io.ptw.resp.bits.level, UInt<1>("h01")) @[TLB.scala 245:40]
        when _T_2 : @[TLB.scala 245:54]
          node _T_3 = eq(r_superpage_repl_addr, UInt<1>("h00")) @[TLB.scala 246:82]
          when _T_3 : @[TLB.scala 246:89]
            superpage_entries[0].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[0].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[0].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_0_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_lo = cat(superpage_entries_0_data_0_lo_lo_hi, superpage_entries_0_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi = cat(superpage_entries_0_data_0_lo_hi_hi, superpage_entries_0_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo = cat(superpage_entries_0_data_0_lo_hi, superpage_entries_0_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo = cat(superpage_entries_0_data_0_hi_lo_hi, superpage_entries_0_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi = cat(superpage_entries_0_data_0_hi_hi_hi, superpage_entries_0_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi = cat(superpage_entries_0_data_0_hi_hi, superpage_entries_0_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_0_data_0_T = cat(superpage_entries_0_data_0_hi, superpage_entries_0_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[0].data[UInt<1>("h00")] <= _superpage_entries_0_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_4 = eq(r_superpage_repl_addr, UInt<1>("h01")) @[TLB.scala 246:82]
          when _T_4 : @[TLB.scala 246:89]
            superpage_entries[1].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[1].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[1].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_1_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_lo = cat(superpage_entries_1_data_0_lo_lo_hi, superpage_entries_1_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi = cat(superpage_entries_1_data_0_lo_hi_hi, superpage_entries_1_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo = cat(superpage_entries_1_data_0_lo_hi, superpage_entries_1_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo = cat(superpage_entries_1_data_0_hi_lo_hi, superpage_entries_1_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi = cat(superpage_entries_1_data_0_hi_hi_hi, superpage_entries_1_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi = cat(superpage_entries_1_data_0_hi_hi, superpage_entries_1_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_1_data_0_T = cat(superpage_entries_1_data_0_hi, superpage_entries_1_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[1].data[UInt<1>("h00")] <= _superpage_entries_1_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[1].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_5 = eq(r_superpage_repl_addr, UInt<2>("h02")) @[TLB.scala 246:82]
          when _T_5 : @[TLB.scala 246:89]
            superpage_entries[2].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[2].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[2].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_2_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_lo = cat(superpage_entries_2_data_0_lo_lo_hi, superpage_entries_2_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi = cat(superpage_entries_2_data_0_lo_hi_hi, superpage_entries_2_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo = cat(superpage_entries_2_data_0_lo_hi, superpage_entries_2_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo = cat(superpage_entries_2_data_0_hi_lo_hi, superpage_entries_2_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi = cat(superpage_entries_2_data_0_hi_hi_hi, superpage_entries_2_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi = cat(superpage_entries_2_data_0_hi_hi, superpage_entries_2_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_2_data_0_T = cat(superpage_entries_2_data_0_hi, superpage_entries_2_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[2].data[UInt<1>("h00")] <= _superpage_entries_2_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[2].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_6 = eq(r_superpage_repl_addr, UInt<2>("h03")) @[TLB.scala 246:82]
          when _T_6 : @[TLB.scala 246:89]
            superpage_entries[3].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[3].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[3].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_3_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_lo = cat(superpage_entries_3_data_0_lo_lo_hi, superpage_entries_3_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi = cat(superpage_entries_3_data_0_lo_hi_hi, superpage_entries_3_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo = cat(superpage_entries_3_data_0_lo_hi, superpage_entries_3_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo = cat(superpage_entries_3_data_0_hi_lo_hi, superpage_entries_3_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi = cat(superpage_entries_3_data_0_hi_hi_hi, superpage_entries_3_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi = cat(superpage_entries_3_data_0_hi_hi, superpage_entries_3_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_3_data_0_T = cat(superpage_entries_3_data_0_hi, superpage_entries_3_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[3].data[UInt<1>("h00")] <= _superpage_entries_3_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[3].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          skip @[TLB.scala 245:54]
        else : @[TLB.scala 250:17]
          node waddr = mux(r_sectored_hit, r_sectored_hit_addr, r_sectored_repl_addr) @[TLB.scala 252:22]
          node _T_7 = eq(waddr, UInt<1>("h00")) @[TLB.scala 253:75]
          when _T_7 : @[TLB.scala 253:82]
            node _T_8 = eq(r_sectored_hit, UInt<1>("h00")) @[TLB.scala 254:15]
            when _T_8 : @[TLB.scala 254:32]
              sectored_entries[UInt<1>("h00")][0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[1] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[2] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[3] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 254:32]
            sectored_entries[UInt<1>("h00")][0].tag <= r_refill_tag @[TLB.scala 118:14]
            sectored_entries[UInt<1>("h00")][0].level <= UInt<1>("h00") @[TLB.scala 119:16]
            node idx = bits(r_refill_tag, 1, 0) @[package.scala 154:13]
            sectored_entries[UInt<1>("h00")][0].valid[idx] <= UInt<1>("h01") @[TLB.scala 122:16]
            node sectored_entries_0_0_data_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_lo = cat(sectored_entries_0_0_data_lo_lo_hi, sectored_entries_0_0_data_lo_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi = cat(sectored_entries_0_0_data_lo_hi_hi, sectored_entries_0_0_data_lo_hi_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo = cat(sectored_entries_0_0_data_lo_hi, sectored_entries_0_0_data_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo = cat(sectored_entries_0_0_data_hi_lo_hi, sectored_entries_0_0_data_hi_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi = cat(sectored_entries_0_0_data_hi_hi_hi, sectored_entries_0_0_data_hi_hi_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi = cat(sectored_entries_0_0_data_hi_hi, sectored_entries_0_0_data_hi_lo) @[TLB.scala 123:24]
            node _sectored_entries_0_0_data_T = cat(sectored_entries_0_0_data_hi, sectored_entries_0_0_data_lo) @[TLB.scala 123:24]
            sectored_entries[UInt<1>("h00")][0].data[idx] <= _sectored_entries_0_0_data_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 256:34]
              sectored_entries[UInt<1>("h00")][0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[1] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[2] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[3] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 256:34]
            skip @[TLB.scala 253:82]
          skip @[TLB.scala 250:17]
      skip @[TLB.scala 220:20]
    node _entries_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _entries_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_1 : UInt<35>
    _entries_WIRE_1 is invalid
    _entries_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_entries_T]
    node _entries_T_1 = bits(_entries_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE.fragmented_superpage <= _entries_T_1 @[TLB.scala 86:77]
    node _entries_T_2 = bits(_entries_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE.c <= _entries_T_2 @[TLB.scala 86:77]
    node _entries_T_3 = bits(_entries_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE.eff <= _entries_T_3 @[TLB.scala 86:77]
    node _entries_T_4 = bits(_entries_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE.paa <= _entries_T_4 @[TLB.scala 86:77]
    node _entries_T_5 = bits(_entries_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE.pal <= _entries_T_5 @[TLB.scala 86:77]
    node _entries_T_6 = bits(_entries_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE.ppp <= _entries_T_6 @[TLB.scala 86:77]
    node _entries_T_7 = bits(_entries_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE.pr <= _entries_T_7 @[TLB.scala 86:77]
    node _entries_T_8 = bits(_entries_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE.px <= _entries_T_8 @[TLB.scala 86:77]
    node _entries_T_9 = bits(_entries_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE.pw <= _entries_T_9 @[TLB.scala 86:77]
    node _entries_T_10 = bits(_entries_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE.sr <= _entries_T_10 @[TLB.scala 86:77]
    node _entries_T_11 = bits(_entries_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE.sx <= _entries_T_11 @[TLB.scala 86:77]
    node _entries_T_12 = bits(_entries_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE.sw <= _entries_T_12 @[TLB.scala 86:77]
    node _entries_T_13 = bits(_entries_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE.ae <= _entries_T_13 @[TLB.scala 86:77]
    node _entries_T_14 = bits(_entries_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE.g <= _entries_T_14 @[TLB.scala 86:77]
    node _entries_T_15 = bits(_entries_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE.u <= _entries_T_15 @[TLB.scala 86:77]
    node _entries_T_16 = bits(_entries_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE.ppn <= _entries_T_16 @[TLB.scala 86:77]
    inst entries_barrier of OptimizationBarrier_7 @[package.scala 258:25]
    entries_barrier.io is invalid
    entries_barrier.clock <= clock
    entries_barrier.reset <= reset
    entries_barrier.io.x <- _entries_WIRE @[package.scala 266:18]
    wire _entries_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_3 : UInt<35>
    _entries_WIRE_3 is invalid
    _entries_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _entries_T_17 = bits(_entries_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_2.fragmented_superpage <= _entries_T_17 @[TLB.scala 86:77]
    node _entries_T_18 = bits(_entries_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_2.c <= _entries_T_18 @[TLB.scala 86:77]
    node _entries_T_19 = bits(_entries_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_2.eff <= _entries_T_19 @[TLB.scala 86:77]
    node _entries_T_20 = bits(_entries_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_2.paa <= _entries_T_20 @[TLB.scala 86:77]
    node _entries_T_21 = bits(_entries_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_2.pal <= _entries_T_21 @[TLB.scala 86:77]
    node _entries_T_22 = bits(_entries_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_2.ppp <= _entries_T_22 @[TLB.scala 86:77]
    node _entries_T_23 = bits(_entries_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_2.pr <= _entries_T_23 @[TLB.scala 86:77]
    node _entries_T_24 = bits(_entries_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_2.px <= _entries_T_24 @[TLB.scala 86:77]
    node _entries_T_25 = bits(_entries_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_2.pw <= _entries_T_25 @[TLB.scala 86:77]
    node _entries_T_26 = bits(_entries_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_2.sr <= _entries_T_26 @[TLB.scala 86:77]
    node _entries_T_27 = bits(_entries_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_2.sx <= _entries_T_27 @[TLB.scala 86:77]
    node _entries_T_28 = bits(_entries_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_2.sw <= _entries_T_28 @[TLB.scala 86:77]
    node _entries_T_29 = bits(_entries_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_2.ae <= _entries_T_29 @[TLB.scala 86:77]
    node _entries_T_30 = bits(_entries_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_2.g <= _entries_T_30 @[TLB.scala 86:77]
    node _entries_T_31 = bits(_entries_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_2.u <= _entries_T_31 @[TLB.scala 86:77]
    node _entries_T_32 = bits(_entries_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_2.ppn <= _entries_T_32 @[TLB.scala 86:77]
    inst entries_barrier_1 of OptimizationBarrier_8 @[package.scala 258:25]
    entries_barrier_1.io is invalid
    entries_barrier_1.clock <= clock
    entries_barrier_1.reset <= reset
    entries_barrier_1.io.x <- _entries_WIRE_2 @[package.scala 266:18]
    wire _entries_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_5 : UInt<35>
    _entries_WIRE_5 is invalid
    _entries_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _entries_T_33 = bits(_entries_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_4.fragmented_superpage <= _entries_T_33 @[TLB.scala 86:77]
    node _entries_T_34 = bits(_entries_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_4.c <= _entries_T_34 @[TLB.scala 86:77]
    node _entries_T_35 = bits(_entries_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_4.eff <= _entries_T_35 @[TLB.scala 86:77]
    node _entries_T_36 = bits(_entries_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_4.paa <= _entries_T_36 @[TLB.scala 86:77]
    node _entries_T_37 = bits(_entries_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_4.pal <= _entries_T_37 @[TLB.scala 86:77]
    node _entries_T_38 = bits(_entries_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_4.ppp <= _entries_T_38 @[TLB.scala 86:77]
    node _entries_T_39 = bits(_entries_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_4.pr <= _entries_T_39 @[TLB.scala 86:77]
    node _entries_T_40 = bits(_entries_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_4.px <= _entries_T_40 @[TLB.scala 86:77]
    node _entries_T_41 = bits(_entries_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_4.pw <= _entries_T_41 @[TLB.scala 86:77]
    node _entries_T_42 = bits(_entries_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_4.sr <= _entries_T_42 @[TLB.scala 86:77]
    node _entries_T_43 = bits(_entries_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_4.sx <= _entries_T_43 @[TLB.scala 86:77]
    node _entries_T_44 = bits(_entries_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_4.sw <= _entries_T_44 @[TLB.scala 86:77]
    node _entries_T_45 = bits(_entries_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_4.ae <= _entries_T_45 @[TLB.scala 86:77]
    node _entries_T_46 = bits(_entries_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_4.g <= _entries_T_46 @[TLB.scala 86:77]
    node _entries_T_47 = bits(_entries_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_4.u <= _entries_T_47 @[TLB.scala 86:77]
    node _entries_T_48 = bits(_entries_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_4.ppn <= _entries_T_48 @[TLB.scala 86:77]
    inst entries_barrier_2 of OptimizationBarrier_9 @[package.scala 258:25]
    entries_barrier_2.io is invalid
    entries_barrier_2.clock <= clock
    entries_barrier_2.reset <= reset
    entries_barrier_2.io.x <- _entries_WIRE_4 @[package.scala 266:18]
    wire _entries_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_7 : UInt<35>
    _entries_WIRE_7 is invalid
    _entries_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _entries_T_49 = bits(_entries_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_6.fragmented_superpage <= _entries_T_49 @[TLB.scala 86:77]
    node _entries_T_50 = bits(_entries_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_6.c <= _entries_T_50 @[TLB.scala 86:77]
    node _entries_T_51 = bits(_entries_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_6.eff <= _entries_T_51 @[TLB.scala 86:77]
    node _entries_T_52 = bits(_entries_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_6.paa <= _entries_T_52 @[TLB.scala 86:77]
    node _entries_T_53 = bits(_entries_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_6.pal <= _entries_T_53 @[TLB.scala 86:77]
    node _entries_T_54 = bits(_entries_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_6.ppp <= _entries_T_54 @[TLB.scala 86:77]
    node _entries_T_55 = bits(_entries_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_6.pr <= _entries_T_55 @[TLB.scala 86:77]
    node _entries_T_56 = bits(_entries_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_6.px <= _entries_T_56 @[TLB.scala 86:77]
    node _entries_T_57 = bits(_entries_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_6.pw <= _entries_T_57 @[TLB.scala 86:77]
    node _entries_T_58 = bits(_entries_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_6.sr <= _entries_T_58 @[TLB.scala 86:77]
    node _entries_T_59 = bits(_entries_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_6.sx <= _entries_T_59 @[TLB.scala 86:77]
    node _entries_T_60 = bits(_entries_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_6.sw <= _entries_T_60 @[TLB.scala 86:77]
    node _entries_T_61 = bits(_entries_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_6.ae <= _entries_T_61 @[TLB.scala 86:77]
    node _entries_T_62 = bits(_entries_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_6.g <= _entries_T_62 @[TLB.scala 86:77]
    node _entries_T_63 = bits(_entries_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_6.u <= _entries_T_63 @[TLB.scala 86:77]
    node _entries_T_64 = bits(_entries_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_6.ppn <= _entries_T_64 @[TLB.scala 86:77]
    inst entries_barrier_3 of OptimizationBarrier_10 @[package.scala 258:25]
    entries_barrier_3.io is invalid
    entries_barrier_3.clock <= clock
    entries_barrier_3.reset <= reset
    entries_barrier_3.io.x <- _entries_WIRE_6 @[package.scala 266:18]
    wire _entries_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_9 : UInt<35>
    _entries_WIRE_9 is invalid
    _entries_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _entries_T_65 = bits(_entries_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_8.fragmented_superpage <= _entries_T_65 @[TLB.scala 86:77]
    node _entries_T_66 = bits(_entries_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_8.c <= _entries_T_66 @[TLB.scala 86:77]
    node _entries_T_67 = bits(_entries_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_8.eff <= _entries_T_67 @[TLB.scala 86:77]
    node _entries_T_68 = bits(_entries_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_8.paa <= _entries_T_68 @[TLB.scala 86:77]
    node _entries_T_69 = bits(_entries_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_8.pal <= _entries_T_69 @[TLB.scala 86:77]
    node _entries_T_70 = bits(_entries_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_8.ppp <= _entries_T_70 @[TLB.scala 86:77]
    node _entries_T_71 = bits(_entries_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_8.pr <= _entries_T_71 @[TLB.scala 86:77]
    node _entries_T_72 = bits(_entries_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_8.px <= _entries_T_72 @[TLB.scala 86:77]
    node _entries_T_73 = bits(_entries_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_8.pw <= _entries_T_73 @[TLB.scala 86:77]
    node _entries_T_74 = bits(_entries_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_8.sr <= _entries_T_74 @[TLB.scala 86:77]
    node _entries_T_75 = bits(_entries_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_8.sx <= _entries_T_75 @[TLB.scala 86:77]
    node _entries_T_76 = bits(_entries_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_8.sw <= _entries_T_76 @[TLB.scala 86:77]
    node _entries_T_77 = bits(_entries_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_8.ae <= _entries_T_77 @[TLB.scala 86:77]
    node _entries_T_78 = bits(_entries_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_8.g <= _entries_T_78 @[TLB.scala 86:77]
    node _entries_T_79 = bits(_entries_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_8.u <= _entries_T_79 @[TLB.scala 86:77]
    node _entries_T_80 = bits(_entries_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_8.ppn <= _entries_T_80 @[TLB.scala 86:77]
    inst entries_barrier_4 of OptimizationBarrier_11 @[package.scala 258:25]
    entries_barrier_4.io is invalid
    entries_barrier_4.clock <= clock
    entries_barrier_4.reset <= reset
    entries_barrier_4.io.x <- _entries_WIRE_8 @[package.scala 266:18]
    wire _entries_WIRE_10 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_10 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_11 : UInt<35>
    _entries_WIRE_11 is invalid
    _entries_WIRE_11 <= special_entry.data[UInt<1>("h00")]
    node _entries_T_81 = bits(_entries_WIRE_11, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_10.fragmented_superpage <= _entries_T_81 @[TLB.scala 86:77]
    node _entries_T_82 = bits(_entries_WIRE_11, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_10.c <= _entries_T_82 @[TLB.scala 86:77]
    node _entries_T_83 = bits(_entries_WIRE_11, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_10.eff <= _entries_T_83 @[TLB.scala 86:77]
    node _entries_T_84 = bits(_entries_WIRE_11, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_10.paa <= _entries_T_84 @[TLB.scala 86:77]
    node _entries_T_85 = bits(_entries_WIRE_11, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_10.pal <= _entries_T_85 @[TLB.scala 86:77]
    node _entries_T_86 = bits(_entries_WIRE_11, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_10.ppp <= _entries_T_86 @[TLB.scala 86:77]
    node _entries_T_87 = bits(_entries_WIRE_11, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_10.pr <= _entries_T_87 @[TLB.scala 86:77]
    node _entries_T_88 = bits(_entries_WIRE_11, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_10.px <= _entries_T_88 @[TLB.scala 86:77]
    node _entries_T_89 = bits(_entries_WIRE_11, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_10.pw <= _entries_T_89 @[TLB.scala 86:77]
    node _entries_T_90 = bits(_entries_WIRE_11, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_10.sr <= _entries_T_90 @[TLB.scala 86:77]
    node _entries_T_91 = bits(_entries_WIRE_11, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_10.sx <= _entries_T_91 @[TLB.scala 86:77]
    node _entries_T_92 = bits(_entries_WIRE_11, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_10.sw <= _entries_T_92 @[TLB.scala 86:77]
    node _entries_T_93 = bits(_entries_WIRE_11, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_10.ae <= _entries_T_93 @[TLB.scala 86:77]
    node _entries_T_94 = bits(_entries_WIRE_11, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_10.g <= _entries_T_94 @[TLB.scala 86:77]
    node _entries_T_95 = bits(_entries_WIRE_11, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_10.u <= _entries_T_95 @[TLB.scala 86:77]
    node _entries_T_96 = bits(_entries_WIRE_11, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_10.ppn <= _entries_T_96 @[TLB.scala 86:77]
    inst entries_barrier_5 of OptimizationBarrier_12 @[package.scala 258:25]
    entries_barrier_5.io is invalid
    entries_barrier_5.clock <= clock
    entries_barrier_5.reset <= reset
    entries_barrier_5.io.x <- _entries_WIRE_10 @[package.scala 266:18]
    node _normal_entries_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _normal_entries_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_1 : UInt<35>
    _normal_entries_WIRE_1 is invalid
    _normal_entries_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_normal_entries_T]
    node _normal_entries_T_1 = bits(_normal_entries_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE.fragmented_superpage <= _normal_entries_T_1 @[TLB.scala 86:77]
    node _normal_entries_T_2 = bits(_normal_entries_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE.c <= _normal_entries_T_2 @[TLB.scala 86:77]
    node _normal_entries_T_3 = bits(_normal_entries_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE.eff <= _normal_entries_T_3 @[TLB.scala 86:77]
    node _normal_entries_T_4 = bits(_normal_entries_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE.paa <= _normal_entries_T_4 @[TLB.scala 86:77]
    node _normal_entries_T_5 = bits(_normal_entries_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE.pal <= _normal_entries_T_5 @[TLB.scala 86:77]
    node _normal_entries_T_6 = bits(_normal_entries_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE.ppp <= _normal_entries_T_6 @[TLB.scala 86:77]
    node _normal_entries_T_7 = bits(_normal_entries_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE.pr <= _normal_entries_T_7 @[TLB.scala 86:77]
    node _normal_entries_T_8 = bits(_normal_entries_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE.px <= _normal_entries_T_8 @[TLB.scala 86:77]
    node _normal_entries_T_9 = bits(_normal_entries_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE.pw <= _normal_entries_T_9 @[TLB.scala 86:77]
    node _normal_entries_T_10 = bits(_normal_entries_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE.sr <= _normal_entries_T_10 @[TLB.scala 86:77]
    node _normal_entries_T_11 = bits(_normal_entries_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE.sx <= _normal_entries_T_11 @[TLB.scala 86:77]
    node _normal_entries_T_12 = bits(_normal_entries_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE.sw <= _normal_entries_T_12 @[TLB.scala 86:77]
    node _normal_entries_T_13 = bits(_normal_entries_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE.ae <= _normal_entries_T_13 @[TLB.scala 86:77]
    node _normal_entries_T_14 = bits(_normal_entries_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE.g <= _normal_entries_T_14 @[TLB.scala 86:77]
    node _normal_entries_T_15 = bits(_normal_entries_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE.u <= _normal_entries_T_15 @[TLB.scala 86:77]
    node _normal_entries_T_16 = bits(_normal_entries_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE.ppn <= _normal_entries_T_16 @[TLB.scala 86:77]
    inst normal_entries_barrier of OptimizationBarrier_13 @[package.scala 258:25]
    normal_entries_barrier.io is invalid
    normal_entries_barrier.clock <= clock
    normal_entries_barrier.reset <= reset
    normal_entries_barrier.io.x <- _normal_entries_WIRE @[package.scala 266:18]
    wire _normal_entries_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_3 : UInt<35>
    _normal_entries_WIRE_3 is invalid
    _normal_entries_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _normal_entries_T_17 = bits(_normal_entries_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.fragmented_superpage <= _normal_entries_T_17 @[TLB.scala 86:77]
    node _normal_entries_T_18 = bits(_normal_entries_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.c <= _normal_entries_T_18 @[TLB.scala 86:77]
    node _normal_entries_T_19 = bits(_normal_entries_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.eff <= _normal_entries_T_19 @[TLB.scala 86:77]
    node _normal_entries_T_20 = bits(_normal_entries_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.paa <= _normal_entries_T_20 @[TLB.scala 86:77]
    node _normal_entries_T_21 = bits(_normal_entries_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pal <= _normal_entries_T_21 @[TLB.scala 86:77]
    node _normal_entries_T_22 = bits(_normal_entries_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ppp <= _normal_entries_T_22 @[TLB.scala 86:77]
    node _normal_entries_T_23 = bits(_normal_entries_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pr <= _normal_entries_T_23 @[TLB.scala 86:77]
    node _normal_entries_T_24 = bits(_normal_entries_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.px <= _normal_entries_T_24 @[TLB.scala 86:77]
    node _normal_entries_T_25 = bits(_normal_entries_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pw <= _normal_entries_T_25 @[TLB.scala 86:77]
    node _normal_entries_T_26 = bits(_normal_entries_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sr <= _normal_entries_T_26 @[TLB.scala 86:77]
    node _normal_entries_T_27 = bits(_normal_entries_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sx <= _normal_entries_T_27 @[TLB.scala 86:77]
    node _normal_entries_T_28 = bits(_normal_entries_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sw <= _normal_entries_T_28 @[TLB.scala 86:77]
    node _normal_entries_T_29 = bits(_normal_entries_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ae <= _normal_entries_T_29 @[TLB.scala 86:77]
    node _normal_entries_T_30 = bits(_normal_entries_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.g <= _normal_entries_T_30 @[TLB.scala 86:77]
    node _normal_entries_T_31 = bits(_normal_entries_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.u <= _normal_entries_T_31 @[TLB.scala 86:77]
    node _normal_entries_T_32 = bits(_normal_entries_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ppn <= _normal_entries_T_32 @[TLB.scala 86:77]
    inst normal_entries_barrier_1 of OptimizationBarrier_14 @[package.scala 258:25]
    normal_entries_barrier_1.io is invalid
    normal_entries_barrier_1.clock <= clock
    normal_entries_barrier_1.reset <= reset
    normal_entries_barrier_1.io.x <- _normal_entries_WIRE_2 @[package.scala 266:18]
    wire _normal_entries_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_5 : UInt<35>
    _normal_entries_WIRE_5 is invalid
    _normal_entries_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _normal_entries_T_33 = bits(_normal_entries_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.fragmented_superpage <= _normal_entries_T_33 @[TLB.scala 86:77]
    node _normal_entries_T_34 = bits(_normal_entries_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.c <= _normal_entries_T_34 @[TLB.scala 86:77]
    node _normal_entries_T_35 = bits(_normal_entries_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.eff <= _normal_entries_T_35 @[TLB.scala 86:77]
    node _normal_entries_T_36 = bits(_normal_entries_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.paa <= _normal_entries_T_36 @[TLB.scala 86:77]
    node _normal_entries_T_37 = bits(_normal_entries_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pal <= _normal_entries_T_37 @[TLB.scala 86:77]
    node _normal_entries_T_38 = bits(_normal_entries_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ppp <= _normal_entries_T_38 @[TLB.scala 86:77]
    node _normal_entries_T_39 = bits(_normal_entries_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pr <= _normal_entries_T_39 @[TLB.scala 86:77]
    node _normal_entries_T_40 = bits(_normal_entries_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.px <= _normal_entries_T_40 @[TLB.scala 86:77]
    node _normal_entries_T_41 = bits(_normal_entries_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pw <= _normal_entries_T_41 @[TLB.scala 86:77]
    node _normal_entries_T_42 = bits(_normal_entries_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sr <= _normal_entries_T_42 @[TLB.scala 86:77]
    node _normal_entries_T_43 = bits(_normal_entries_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sx <= _normal_entries_T_43 @[TLB.scala 86:77]
    node _normal_entries_T_44 = bits(_normal_entries_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sw <= _normal_entries_T_44 @[TLB.scala 86:77]
    node _normal_entries_T_45 = bits(_normal_entries_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ae <= _normal_entries_T_45 @[TLB.scala 86:77]
    node _normal_entries_T_46 = bits(_normal_entries_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.g <= _normal_entries_T_46 @[TLB.scala 86:77]
    node _normal_entries_T_47 = bits(_normal_entries_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.u <= _normal_entries_T_47 @[TLB.scala 86:77]
    node _normal_entries_T_48 = bits(_normal_entries_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ppn <= _normal_entries_T_48 @[TLB.scala 86:77]
    inst normal_entries_barrier_2 of OptimizationBarrier_15 @[package.scala 258:25]
    normal_entries_barrier_2.io is invalid
    normal_entries_barrier_2.clock <= clock
    normal_entries_barrier_2.reset <= reset
    normal_entries_barrier_2.io.x <- _normal_entries_WIRE_4 @[package.scala 266:18]
    wire _normal_entries_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_7 : UInt<35>
    _normal_entries_WIRE_7 is invalid
    _normal_entries_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _normal_entries_T_49 = bits(_normal_entries_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.fragmented_superpage <= _normal_entries_T_49 @[TLB.scala 86:77]
    node _normal_entries_T_50 = bits(_normal_entries_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.c <= _normal_entries_T_50 @[TLB.scala 86:77]
    node _normal_entries_T_51 = bits(_normal_entries_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.eff <= _normal_entries_T_51 @[TLB.scala 86:77]
    node _normal_entries_T_52 = bits(_normal_entries_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.paa <= _normal_entries_T_52 @[TLB.scala 86:77]
    node _normal_entries_T_53 = bits(_normal_entries_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pal <= _normal_entries_T_53 @[TLB.scala 86:77]
    node _normal_entries_T_54 = bits(_normal_entries_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ppp <= _normal_entries_T_54 @[TLB.scala 86:77]
    node _normal_entries_T_55 = bits(_normal_entries_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pr <= _normal_entries_T_55 @[TLB.scala 86:77]
    node _normal_entries_T_56 = bits(_normal_entries_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.px <= _normal_entries_T_56 @[TLB.scala 86:77]
    node _normal_entries_T_57 = bits(_normal_entries_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pw <= _normal_entries_T_57 @[TLB.scala 86:77]
    node _normal_entries_T_58 = bits(_normal_entries_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sr <= _normal_entries_T_58 @[TLB.scala 86:77]
    node _normal_entries_T_59 = bits(_normal_entries_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sx <= _normal_entries_T_59 @[TLB.scala 86:77]
    node _normal_entries_T_60 = bits(_normal_entries_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sw <= _normal_entries_T_60 @[TLB.scala 86:77]
    node _normal_entries_T_61 = bits(_normal_entries_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ae <= _normal_entries_T_61 @[TLB.scala 86:77]
    node _normal_entries_T_62 = bits(_normal_entries_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.g <= _normal_entries_T_62 @[TLB.scala 86:77]
    node _normal_entries_T_63 = bits(_normal_entries_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.u <= _normal_entries_T_63 @[TLB.scala 86:77]
    node _normal_entries_T_64 = bits(_normal_entries_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ppn <= _normal_entries_T_64 @[TLB.scala 86:77]
    inst normal_entries_barrier_3 of OptimizationBarrier_16 @[package.scala 258:25]
    normal_entries_barrier_3.io is invalid
    normal_entries_barrier_3.clock <= clock
    normal_entries_barrier_3.reset <= reset
    normal_entries_barrier_3.io.x <- _normal_entries_WIRE_6 @[package.scala 266:18]
    wire _normal_entries_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_9 : UInt<35>
    _normal_entries_WIRE_9 is invalid
    _normal_entries_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _normal_entries_T_65 = bits(_normal_entries_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.fragmented_superpage <= _normal_entries_T_65 @[TLB.scala 86:77]
    node _normal_entries_T_66 = bits(_normal_entries_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.c <= _normal_entries_T_66 @[TLB.scala 86:77]
    node _normal_entries_T_67 = bits(_normal_entries_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.eff <= _normal_entries_T_67 @[TLB.scala 86:77]
    node _normal_entries_T_68 = bits(_normal_entries_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.paa <= _normal_entries_T_68 @[TLB.scala 86:77]
    node _normal_entries_T_69 = bits(_normal_entries_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pal <= _normal_entries_T_69 @[TLB.scala 86:77]
    node _normal_entries_T_70 = bits(_normal_entries_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ppp <= _normal_entries_T_70 @[TLB.scala 86:77]
    node _normal_entries_T_71 = bits(_normal_entries_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pr <= _normal_entries_T_71 @[TLB.scala 86:77]
    node _normal_entries_T_72 = bits(_normal_entries_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.px <= _normal_entries_T_72 @[TLB.scala 86:77]
    node _normal_entries_T_73 = bits(_normal_entries_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pw <= _normal_entries_T_73 @[TLB.scala 86:77]
    node _normal_entries_T_74 = bits(_normal_entries_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sr <= _normal_entries_T_74 @[TLB.scala 86:77]
    node _normal_entries_T_75 = bits(_normal_entries_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sx <= _normal_entries_T_75 @[TLB.scala 86:77]
    node _normal_entries_T_76 = bits(_normal_entries_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sw <= _normal_entries_T_76 @[TLB.scala 86:77]
    node _normal_entries_T_77 = bits(_normal_entries_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ae <= _normal_entries_T_77 @[TLB.scala 86:77]
    node _normal_entries_T_78 = bits(_normal_entries_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.g <= _normal_entries_T_78 @[TLB.scala 86:77]
    node _normal_entries_T_79 = bits(_normal_entries_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.u <= _normal_entries_T_79 @[TLB.scala 86:77]
    node _normal_entries_T_80 = bits(_normal_entries_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ppn <= _normal_entries_T_80 @[TLB.scala 86:77]
    inst normal_entries_barrier_4 of OptimizationBarrier_17 @[package.scala 258:25]
    normal_entries_barrier_4.io is invalid
    normal_entries_barrier_4.clock <= clock
    normal_entries_barrier_4.reset <= reset
    normal_entries_barrier_4.io.x <- _normal_entries_WIRE_8 @[package.scala 266:18]
    node ptw_ae_array_lo_hi = cat(entries_barrier_2.io.y.ae, entries_barrier_1.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo = cat(ptw_ae_array_lo_hi, entries_barrier.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi = cat(entries_barrier_5.io.y.ae, entries_barrier_4.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi = cat(ptw_ae_array_hi_hi, entries_barrier_3.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_1 = cat(ptw_ae_array_hi, ptw_ae_array_lo) @[Cat.scala 30:58]
    node ptw_ae_array = cat(UInt<1>("h00"), ptw_ae_array_lo_1) @[Cat.scala 30:58]
    node _priv_rw_ok_T = eq(priv_s, UInt<1>("h00")) @[TLB.scala 265:24]
    node _priv_rw_ok_T_1 = or(_priv_rw_ok_T, io.ptw.status.sum) @[TLB.scala 265:32]
    node priv_rw_ok_lo_hi = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_lo = cat(priv_rw_ok_lo_hi, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi = cat(priv_rw_ok_hi_hi, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_rw_ok_T_2 = cat(priv_rw_ok_hi, priv_rw_ok_lo) @[Cat.scala 30:58]
    node _priv_rw_ok_T_3 = mux(_priv_rw_ok_T_1, _priv_rw_ok_T_2, UInt<1>("h00")) @[TLB.scala 265:23]
    node priv_rw_ok_lo_hi_1 = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_1 = cat(priv_rw_ok_lo_hi_1, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi_1 = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_1 = cat(priv_rw_ok_hi_hi_1, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_rw_ok_T_4 = cat(priv_rw_ok_hi_1, priv_rw_ok_lo_1) @[Cat.scala 30:58]
    node _priv_rw_ok_T_5 = not(_priv_rw_ok_T_4) @[TLB.scala 265:98]
    node _priv_rw_ok_T_6 = mux(priv_s, _priv_rw_ok_T_5, UInt<1>("h00")) @[TLB.scala 265:89]
    node priv_rw_ok = or(_priv_rw_ok_T_3, _priv_rw_ok_T_6) @[TLB.scala 265:84]
    node priv_x_ok_lo_hi = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_lo = cat(priv_x_ok_lo_hi, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_hi = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi = cat(priv_x_ok_hi_hi, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_x_ok_T = cat(priv_x_ok_hi, priv_x_ok_lo) @[Cat.scala 30:58]
    node _priv_x_ok_T_1 = not(_priv_x_ok_T) @[TLB.scala 266:31]
    node priv_x_ok_lo_hi_1 = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_lo_1 = cat(priv_x_ok_lo_hi_1, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_hi_1 = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_1 = cat(priv_x_ok_hi_hi_1, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_x_ok_T_2 = cat(priv_x_ok_hi_1, priv_x_ok_lo_1) @[Cat.scala 30:58]
    node priv_x_ok = mux(priv_s, _priv_x_ok_T_1, _priv_x_ok_T_2) @[TLB.scala 266:22]
    node r_array_lo_hi = cat(entries_barrier_2.io.y.sr, entries_barrier_1.io.y.sr) @[Cat.scala 30:58]
    node r_array_lo = cat(r_array_lo_hi, entries_barrier.io.y.sr) @[Cat.scala 30:58]
    node r_array_hi_hi = cat(entries_barrier_5.io.y.sr, entries_barrier_4.io.y.sr) @[Cat.scala 30:58]
    node r_array_hi = cat(r_array_hi_hi, entries_barrier_3.io.y.sr) @[Cat.scala 30:58]
    node _r_array_T = cat(r_array_hi, r_array_lo) @[Cat.scala 30:58]
    node r_array_lo_hi_1 = cat(entries_barrier_2.io.y.sx, entries_barrier_1.io.y.sx) @[Cat.scala 30:58]
    node r_array_lo_1 = cat(r_array_lo_hi_1, entries_barrier.io.y.sx) @[Cat.scala 30:58]
    node r_array_hi_hi_1 = cat(entries_barrier_5.io.y.sx, entries_barrier_4.io.y.sx) @[Cat.scala 30:58]
    node r_array_hi_1 = cat(r_array_hi_hi_1, entries_barrier_3.io.y.sx) @[Cat.scala 30:58]
    node _r_array_T_1 = cat(r_array_hi_1, r_array_lo_1) @[Cat.scala 30:58]
    node _r_array_T_2 = mux(io.ptw.status.mxr, _r_array_T_1, UInt<1>("h00")) @[TLB.scala 267:73]
    node _r_array_T_3 = or(_r_array_T, _r_array_T_2) @[TLB.scala 267:68]
    node r_array_lo_2 = and(priv_rw_ok, _r_array_T_3) @[TLB.scala 267:40]
    node r_array = cat(UInt<1>("h01"), r_array_lo_2) @[Cat.scala 30:58]
    node w_array_lo_hi = cat(entries_barrier_2.io.y.sw, entries_barrier_1.io.y.sw) @[Cat.scala 30:58]
    node w_array_lo = cat(w_array_lo_hi, entries_barrier.io.y.sw) @[Cat.scala 30:58]
    node w_array_hi_hi = cat(entries_barrier_5.io.y.sw, entries_barrier_4.io.y.sw) @[Cat.scala 30:58]
    node w_array_hi = cat(w_array_hi_hi, entries_barrier_3.io.y.sw) @[Cat.scala 30:58]
    node _w_array_T = cat(w_array_hi, w_array_lo) @[Cat.scala 30:58]
    node w_array_lo_1 = and(priv_rw_ok, _w_array_T) @[TLB.scala 268:40]
    node w_array = cat(UInt<1>("h01"), w_array_lo_1) @[Cat.scala 30:58]
    node x_array_lo_hi = cat(entries_barrier_2.io.y.sx, entries_barrier_1.io.y.sx) @[Cat.scala 30:58]
    node x_array_lo = cat(x_array_lo_hi, entries_barrier.io.y.sx) @[Cat.scala 30:58]
    node x_array_hi_hi = cat(entries_barrier_5.io.y.sx, entries_barrier_4.io.y.sx) @[Cat.scala 30:58]
    node x_array_hi = cat(x_array_hi_hi, entries_barrier_3.io.y.sx) @[Cat.scala 30:58]
    node _x_array_T = cat(x_array_hi, x_array_lo) @[Cat.scala 30:58]
    node x_array_lo_1 = and(priv_x_ok, _x_array_T) @[TLB.scala 269:39]
    node x_array = cat(UInt<1>("h01"), x_array_lo_1) @[Cat.scala 30:58]
    node _pr_array_T = bits(prot_r, 0, 0) @[Bitwise.scala 72:15]
    node pr_array_hi = mux(_pr_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pr_array_lo = cat(normal_entries_barrier_1.io.y.pr, normal_entries_barrier.io.y.pr) @[Cat.scala 30:58]
    node pr_array_hi_hi = cat(normal_entries_barrier_4.io.y.pr, normal_entries_barrier_3.io.y.pr) @[Cat.scala 30:58]
    node pr_array_hi_1 = cat(pr_array_hi_hi, normal_entries_barrier_2.io.y.pr) @[Cat.scala 30:58]
    node pr_array_lo_1 = cat(pr_array_hi_1, pr_array_lo) @[Cat.scala 30:58]
    node _pr_array_T_1 = cat(pr_array_hi, pr_array_lo_1) @[Cat.scala 30:58]
    node _pr_array_T_2 = not(ptw_ae_array) @[TLB.scala 270:89]
    node pr_array = and(_pr_array_T_1, _pr_array_T_2) @[TLB.scala 270:87]
    node _pw_array_T = bits(prot_w, 0, 0) @[Bitwise.scala 72:15]
    node pw_array_hi = mux(_pw_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pw_array_lo = cat(normal_entries_barrier_1.io.y.pw, normal_entries_barrier.io.y.pw) @[Cat.scala 30:58]
    node pw_array_hi_hi = cat(normal_entries_barrier_4.io.y.pw, normal_entries_barrier_3.io.y.pw) @[Cat.scala 30:58]
    node pw_array_hi_1 = cat(pw_array_hi_hi, normal_entries_barrier_2.io.y.pw) @[Cat.scala 30:58]
    node pw_array_lo_1 = cat(pw_array_hi_1, pw_array_lo) @[Cat.scala 30:58]
    node _pw_array_T_1 = cat(pw_array_hi, pw_array_lo_1) @[Cat.scala 30:58]
    node _pw_array_T_2 = not(ptw_ae_array) @[TLB.scala 271:89]
    node pw_array = and(_pw_array_T_1, _pw_array_T_2) @[TLB.scala 271:87]
    node _px_array_T = bits(prot_x, 0, 0) @[Bitwise.scala 72:15]
    node px_array_hi = mux(_px_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node px_array_lo = cat(normal_entries_barrier_1.io.y.px, normal_entries_barrier.io.y.px) @[Cat.scala 30:58]
    node px_array_hi_hi = cat(normal_entries_barrier_4.io.y.px, normal_entries_barrier_3.io.y.px) @[Cat.scala 30:58]
    node px_array_hi_1 = cat(px_array_hi_hi, normal_entries_barrier_2.io.y.px) @[Cat.scala 30:58]
    node px_array_lo_1 = cat(px_array_hi_1, px_array_lo) @[Cat.scala 30:58]
    node _px_array_T_1 = cat(px_array_hi, px_array_lo_1) @[Cat.scala 30:58]
    node _px_array_T_2 = not(ptw_ae_array) @[TLB.scala 272:89]
    node px_array = and(_px_array_T_1, _px_array_T_2) @[TLB.scala 272:87]
    node _eff_array_T = bits(prot_eff, 0, 0) @[Bitwise.scala 72:15]
    node eff_array_hi = mux(_eff_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node eff_array_lo = cat(normal_entries_barrier_1.io.y.eff, normal_entries_barrier.io.y.eff) @[Cat.scala 30:58]
    node eff_array_hi_hi = cat(normal_entries_barrier_4.io.y.eff, normal_entries_barrier_3.io.y.eff) @[Cat.scala 30:58]
    node eff_array_hi_1 = cat(eff_array_hi_hi, normal_entries_barrier_2.io.y.eff) @[Cat.scala 30:58]
    node eff_array_lo_1 = cat(eff_array_hi_1, eff_array_lo) @[Cat.scala 30:58]
    node eff_array = cat(eff_array_hi, eff_array_lo_1) @[Cat.scala 30:58]
    node _c_array_T = bits(cacheable, 0, 0) @[Bitwise.scala 72:15]
    node c_array_hi = mux(_c_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node c_array_lo = cat(normal_entries_barrier_1.io.y.c, normal_entries_barrier.io.y.c) @[Cat.scala 30:58]
    node c_array_hi_hi = cat(normal_entries_barrier_4.io.y.c, normal_entries_barrier_3.io.y.c) @[Cat.scala 30:58]
    node c_array_hi_1 = cat(c_array_hi_hi, normal_entries_barrier_2.io.y.c) @[Cat.scala 30:58]
    node c_array_lo_1 = cat(c_array_hi_1, c_array_lo) @[Cat.scala 30:58]
    node c_array = cat(c_array_hi, c_array_lo_1) @[Cat.scala 30:58]
    node _ppp_array_T = bits(prot_pp, 0, 0) @[Bitwise.scala 72:15]
    node ppp_array_hi = mux(_ppp_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node ppp_array_lo = cat(normal_entries_barrier_1.io.y.ppp, normal_entries_barrier.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_hi_hi = cat(normal_entries_barrier_4.io.y.ppp, normal_entries_barrier_3.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_hi_1 = cat(ppp_array_hi_hi, normal_entries_barrier_2.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_lo_1 = cat(ppp_array_hi_1, ppp_array_lo) @[Cat.scala 30:58]
    node ppp_array = cat(ppp_array_hi, ppp_array_lo_1) @[Cat.scala 30:58]
    node _paa_array_T = bits(prot_aa, 0, 0) @[Bitwise.scala 72:15]
    node paa_array_hi = mux(_paa_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node paa_array_lo = cat(normal_entries_barrier_1.io.y.paa, normal_entries_barrier.io.y.paa) @[Cat.scala 30:58]
    node paa_array_hi_hi = cat(normal_entries_barrier_4.io.y.paa, normal_entries_barrier_3.io.y.paa) @[Cat.scala 30:58]
    node paa_array_hi_1 = cat(paa_array_hi_hi, normal_entries_barrier_2.io.y.paa) @[Cat.scala 30:58]
    node paa_array_lo_1 = cat(paa_array_hi_1, paa_array_lo) @[Cat.scala 30:58]
    node paa_array = cat(paa_array_hi, paa_array_lo_1) @[Cat.scala 30:58]
    node _pal_array_T = bits(prot_al, 0, 0) @[Bitwise.scala 72:15]
    node pal_array_hi = mux(_pal_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pal_array_lo = cat(normal_entries_barrier_1.io.y.pal, normal_entries_barrier.io.y.pal) @[Cat.scala 30:58]
    node pal_array_hi_hi = cat(normal_entries_barrier_4.io.y.pal, normal_entries_barrier_3.io.y.pal) @[Cat.scala 30:58]
    node pal_array_hi_1 = cat(pal_array_hi_hi, normal_entries_barrier_2.io.y.pal) @[Cat.scala 30:58]
    node pal_array_lo_1 = cat(pal_array_hi_1, pal_array_lo) @[Cat.scala 30:58]
    node pal_array = cat(pal_array_hi, pal_array_lo_1) @[Cat.scala 30:58]
    node ppp_array_if_cached = or(ppp_array, c_array) @[TLB.scala 278:39]
    node _paa_array_if_cached_T = mux(UInt<1>("h01"), c_array, UInt<1>("h00")) @[TLB.scala 279:44]
    node paa_array_if_cached = or(paa_array, _paa_array_if_cached_T) @[TLB.scala 279:39]
    node _pal_array_if_cached_T = mux(UInt<1>("h01"), c_array, UInt<1>("h00")) @[TLB.scala 280:44]
    node pal_array_if_cached = or(pal_array, _pal_array_if_cached_T) @[TLB.scala 280:39]
    node _prefetchable_array_T = and(cacheable, homogeneous) @[TLB.scala 281:43]
    node prefetchable_array_hi = shl(_prefetchable_array_T, 1) @[TLB.scala 281:59]
    node prefetchable_array_lo = cat(normal_entries_barrier_1.io.y.c, normal_entries_barrier.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_hi_hi = cat(normal_entries_barrier_4.io.y.c, normal_entries_barrier_3.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_hi_1 = cat(prefetchable_array_hi_hi, normal_entries_barrier_2.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_lo_1 = cat(prefetchable_array_hi_1, prefetchable_array_lo) @[Cat.scala 30:58]
    node prefetchable_array = cat(prefetchable_array_hi, prefetchable_array_lo_1) @[Cat.scala 30:58]
    node _misaligned_T = dshl(UInt<1>("h01"), io.req.bits.size) @[OneHot.scala 58:35]
    node _misaligned_T_1 = sub(_misaligned_T, UInt<1>("h01")) @[TLB.scala 283:69]
    node _misaligned_T_2 = tail(_misaligned_T_1, 1) @[TLB.scala 283:69]
    node _misaligned_T_3 = and(io.req.bits.vaddr, _misaligned_T_2) @[TLB.scala 283:39]
    node misaligned = orr(_misaligned_T_3) @[TLB.scala 283:75]
    node _cmd_lrsc_T = eq(io.req.bits.cmd, UInt<3>("h06")) @[package.scala 15:47]
    node _cmd_lrsc_T_1 = eq(io.req.bits.cmd, UInt<3>("h07")) @[package.scala 15:47]
    node _cmd_lrsc_T_2 = or(_cmd_lrsc_T, _cmd_lrsc_T_1) @[package.scala 72:59]
    node cmd_lrsc = and(UInt<1>("h01"), _cmd_lrsc_T_2) @[TLB.scala 294:37]
    node _cmd_amo_logical_T = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_amo_logical_T_1 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_amo_logical_T_2 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_amo_logical_T_3 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_amo_logical_T_4 = or(_cmd_amo_logical_T, _cmd_amo_logical_T_1) @[package.scala 72:59]
    node _cmd_amo_logical_T_5 = or(_cmd_amo_logical_T_4, _cmd_amo_logical_T_2) @[package.scala 72:59]
    node _cmd_amo_logical_T_6 = or(_cmd_amo_logical_T_5, _cmd_amo_logical_T_3) @[package.scala 72:59]
    node cmd_amo_logical = and(UInt<1>("h01"), _cmd_amo_logical_T_6) @[TLB.scala 295:44]
    node _cmd_amo_arithmetic_T = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_1 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_2 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_3 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_4 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_5 = or(_cmd_amo_arithmetic_T, _cmd_amo_arithmetic_T_1) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_6 = or(_cmd_amo_arithmetic_T_5, _cmd_amo_arithmetic_T_2) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_7 = or(_cmd_amo_arithmetic_T_6, _cmd_amo_arithmetic_T_3) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_8 = or(_cmd_amo_arithmetic_T_7, _cmd_amo_arithmetic_T_4) @[package.scala 72:59]
    node cmd_amo_arithmetic = and(UInt<1>("h01"), _cmd_amo_arithmetic_T_8) @[TLB.scala 296:47]
    node cmd_put_partial = eq(io.req.bits.cmd, UInt<5>("h011")) @[TLB.scala 297:41]
    node _cmd_read_T = eq(io.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _cmd_read_T_1 = eq(io.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _cmd_read_T_2 = or(_cmd_read_T, _cmd_read_T_1) @[Consts.scala 81:41]
    node _cmd_read_T_3 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _cmd_read_T_4 = or(_cmd_read_T_2, _cmd_read_T_3) @[Consts.scala 81:58]
    node _cmd_read_T_5 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_read_T_6 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_read_T_7 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_read_T_8 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_read_T_9 = or(_cmd_read_T_5, _cmd_read_T_6) @[package.scala 72:59]
    node _cmd_read_T_10 = or(_cmd_read_T_9, _cmd_read_T_7) @[package.scala 72:59]
    node _cmd_read_T_11 = or(_cmd_read_T_10, _cmd_read_T_8) @[package.scala 72:59]
    node _cmd_read_T_12 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_read_T_13 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_read_T_14 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_read_T_15 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_read_T_16 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_read_T_17 = or(_cmd_read_T_12, _cmd_read_T_13) @[package.scala 72:59]
    node _cmd_read_T_18 = or(_cmd_read_T_17, _cmd_read_T_14) @[package.scala 72:59]
    node _cmd_read_T_19 = or(_cmd_read_T_18, _cmd_read_T_15) @[package.scala 72:59]
    node _cmd_read_T_20 = or(_cmd_read_T_19, _cmd_read_T_16) @[package.scala 72:59]
    node _cmd_read_T_21 = or(_cmd_read_T_11, _cmd_read_T_20) @[Consts.scala 79:44]
    node cmd_read = or(_cmd_read_T_4, _cmd_read_T_21) @[Consts.scala 81:75]
    node _cmd_write_T = eq(io.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _cmd_write_T_1 = eq(io.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _cmd_write_T_2 = or(_cmd_write_T, _cmd_write_T_1) @[Consts.scala 82:42]
    node _cmd_write_T_3 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _cmd_write_T_4 = or(_cmd_write_T_2, _cmd_write_T_3) @[Consts.scala 82:59]
    node _cmd_write_T_5 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_write_T_6 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_write_T_7 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_write_T_8 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_write_T_9 = or(_cmd_write_T_5, _cmd_write_T_6) @[package.scala 72:59]
    node _cmd_write_T_10 = or(_cmd_write_T_9, _cmd_write_T_7) @[package.scala 72:59]
    node _cmd_write_T_11 = or(_cmd_write_T_10, _cmd_write_T_8) @[package.scala 72:59]
    node _cmd_write_T_12 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_write_T_13 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_write_T_14 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_write_T_15 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_write_T_16 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_write_T_17 = or(_cmd_write_T_12, _cmd_write_T_13) @[package.scala 72:59]
    node _cmd_write_T_18 = or(_cmd_write_T_17, _cmd_write_T_14) @[package.scala 72:59]
    node _cmd_write_T_19 = or(_cmd_write_T_18, _cmd_write_T_15) @[package.scala 72:59]
    node _cmd_write_T_20 = or(_cmd_write_T_19, _cmd_write_T_16) @[package.scala 72:59]
    node _cmd_write_T_21 = or(_cmd_write_T_11, _cmd_write_T_20) @[Consts.scala 79:44]
    node cmd_write = or(_cmd_write_T_4, _cmd_write_T_21) @[Consts.scala 82:76]
    node _cmd_write_perms_T = eq(io.req.bits.cmd, UInt<3>("h05")) @[package.scala 15:47]
    node _cmd_write_perms_T_1 = eq(io.req.bits.cmd, UInt<5>("h017")) @[package.scala 15:47]
    node _cmd_write_perms_T_2 = or(_cmd_write_perms_T, _cmd_write_perms_T_1) @[package.scala 72:59]
    node cmd_write_perms = or(cmd_write, _cmd_write_perms_T_2) @[TLB.scala 300:35]
    node lrscAllowed = mux(UInt<1>("h01"), UInt<1>("h00"), c_array) @[TLB.scala 303:24]
    node _ae_array_T = mux(misaligned, eff_array, UInt<1>("h00")) @[TLB.scala 305:8]
    node _ae_array_T_1 = not(lrscAllowed) @[TLB.scala 306:19]
    node _ae_array_T_2 = mux(cmd_lrsc, _ae_array_T_1, UInt<1>("h00")) @[TLB.scala 306:8]
    node ae_array = or(_ae_array_T, _ae_array_T_2) @[TLB.scala 305:37]
    node _ae_ld_array_T = not(pr_array) @[TLB.scala 307:46]
    node _ae_ld_array_T_1 = or(ae_array, _ae_ld_array_T) @[TLB.scala 307:44]
    node ae_ld_array = mux(cmd_read, _ae_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 307:24]
    node _ae_st_array_T = not(pw_array) @[TLB.scala 309:37]
    node _ae_st_array_T_1 = or(ae_array, _ae_st_array_T) @[TLB.scala 309:35]
    node _ae_st_array_T_2 = mux(cmd_write_perms, _ae_st_array_T_1, UInt<1>("h00")) @[TLB.scala 309:8]
    node _ae_st_array_T_3 = not(ppp_array_if_cached) @[TLB.scala 310:26]
    node _ae_st_array_T_4 = mux(cmd_put_partial, _ae_st_array_T_3, UInt<1>("h00")) @[TLB.scala 310:8]
    node _ae_st_array_T_5 = or(_ae_st_array_T_2, _ae_st_array_T_4) @[TLB.scala 309:53]
    node _ae_st_array_T_6 = not(pal_array_if_cached) @[TLB.scala 311:26]
    node _ae_st_array_T_7 = mux(cmd_amo_logical, _ae_st_array_T_6, UInt<1>("h00")) @[TLB.scala 311:8]
    node _ae_st_array_T_8 = or(_ae_st_array_T_5, _ae_st_array_T_7) @[TLB.scala 310:53]
    node _ae_st_array_T_9 = not(paa_array_if_cached) @[TLB.scala 312:29]
    node _ae_st_array_T_10 = mux(cmd_amo_arithmetic, _ae_st_array_T_9, UInt<1>("h00")) @[TLB.scala 312:8]
    node ae_st_array = or(_ae_st_array_T_8, _ae_st_array_T_10) @[TLB.scala 311:53]
    node _must_alloc_array_T = not(ppp_array) @[TLB.scala 314:26]
    node _must_alloc_array_T_1 = mux(cmd_put_partial, _must_alloc_array_T, UInt<1>("h00")) @[TLB.scala 314:8]
    node _must_alloc_array_T_2 = not(paa_array) @[TLB.scala 315:26]
    node _must_alloc_array_T_3 = mux(cmd_amo_logical, _must_alloc_array_T_2, UInt<1>("h00")) @[TLB.scala 315:8]
    node _must_alloc_array_T_4 = or(_must_alloc_array_T_1, _must_alloc_array_T_3) @[TLB.scala 314:43]
    node _must_alloc_array_T_5 = not(pal_array) @[TLB.scala 316:29]
    node _must_alloc_array_T_6 = mux(cmd_amo_arithmetic, _must_alloc_array_T_5, UInt<1>("h00")) @[TLB.scala 316:8]
    node _must_alloc_array_T_7 = or(_must_alloc_array_T_4, _must_alloc_array_T_6) @[TLB.scala 315:43]
    node _must_alloc_array_T_8 = not(UInt<7>("h00")) @[TLB.scala 317:19]
    node _must_alloc_array_T_9 = mux(cmd_lrsc, _must_alloc_array_T_8, UInt<1>("h00")) @[TLB.scala 317:8]
    node must_alloc_array = or(_must_alloc_array_T_7, _must_alloc_array_T_9) @[TLB.scala 316:46]
    node _ma_ld_array_T = and(misaligned, cmd_read) @[TLB.scala 318:36]
    node _ma_ld_array_T_1 = not(eff_array) @[TLB.scala 318:49]
    node ma_ld_array = mux(_ma_ld_array_T, _ma_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 318:24]
    node _ma_st_array_T = and(misaligned, cmd_write) @[TLB.scala 319:36]
    node _ma_st_array_T_1 = not(eff_array) @[TLB.scala 319:50]
    node ma_st_array = mux(_ma_st_array_T, _ma_st_array_T_1, UInt<1>("h00")) @[TLB.scala 319:24]
    node _pf_ld_array_T = or(r_array, ptw_ae_array) @[TLB.scala 320:45]
    node _pf_ld_array_T_1 = not(_pf_ld_array_T) @[TLB.scala 320:35]
    node pf_ld_array = mux(cmd_read, _pf_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 320:24]
    node _pf_st_array_T = or(w_array, ptw_ae_array) @[TLB.scala 321:52]
    node _pf_st_array_T_1 = not(_pf_st_array_T) @[TLB.scala 321:42]
    node pf_st_array = mux(cmd_write_perms, _pf_st_array_T_1, UInt<1>("h00")) @[TLB.scala 321:24]
    node _pf_inst_array_T = or(x_array, ptw_ae_array) @[TLB.scala 322:33]
    node pf_inst_array = not(_pf_inst_array_T) @[TLB.scala 322:23]
    node tlb_hit = orr(real_hits) @[TLB.scala 324:27]
    node _tlb_miss_T = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLB.scala 325:32]
    node _tlb_miss_T_1 = and(vm_enabled, _tlb_miss_T) @[TLB.scala 325:29]
    node _tlb_miss_T_2 = eq(tlb_hit, UInt<1>("h00")) @[TLB.scala 325:43]
    node tlb_miss = and(_tlb_miss_T_1, _tlb_miss_T_2) @[TLB.scala 325:40]
    reg state_reg : UInt<0>, clock @[Replacement.scala 168:46]
    reg state_vec : UInt<0>[1], clock @[Replacement.scala 304:30]
    reg state_reg_1 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Replacement.scala 168:70]
    node _T_9 = and(io.req.valid, vm_enabled) @[TLB.scala 329:22]
    when _T_9 : @[TLB.scala 329:37]
      when sector_hits_0 : @[TLB.scala 330:28]
        state_vec[UInt<1>("h00")] <= UInt<1>("h00") @[Replacement.scala 308:20]
        skip @[TLB.scala 330:28]
      node _T_10 = or(superpage_hits_0, superpage_hits_1) @[package.scala 72:59]
      node _T_11 = or(_T_10, superpage_hits_2) @[package.scala 72:59]
      node _T_12 = or(_T_11, superpage_hits_3) @[package.scala 72:59]
      when _T_12 : @[TLB.scala 331:31]
        node lo = cat(superpage_hits_1, superpage_hits_0) @[Cat.scala 30:58]
        node hi = cat(superpage_hits_3, superpage_hits_2) @[Cat.scala 30:58]
        node _T_13 = cat(hi, lo) @[Cat.scala 30:58]
        node hi_1 = bits(_T_13, 3, 2) @[OneHot.scala 30:18]
        node lo_1 = bits(_T_13, 1, 0) @[OneHot.scala 31:18]
        node hi_2 = orr(hi_1) @[OneHot.scala 32:14]
        node _T_14 = or(hi_1, lo_1) @[OneHot.scala 32:28]
        node lo_2 = bits(_T_14, 1, 1) @[CircuitMath.scala 30:8]
        node _T_15 = cat(hi_2, lo_2) @[Cat.scala 30:58]
        node state_reg_touch_way_sized = bits(_T_15, 1, 0) @[package.scala 154:13]
        node _state_reg_set_left_older_T = bits(state_reg_touch_way_sized, 1, 1) @[Replacement.scala 196:43]
        node state_reg_hi_hi = eq(_state_reg_set_left_older_T, UInt<1>("h00")) @[Replacement.scala 196:33]
        node state_reg_left_subtree_state = bits(state_reg_1, 1, 1) @[package.scala 154:13]
        node state_reg_right_subtree_state = bits(state_reg_1, 0, 0) @[Replacement.scala 198:38]
        node _state_reg_T = bits(state_reg_touch_way_sized, 0, 0) @[package.scala 154:13]
        node _state_reg_T_1 = bits(_state_reg_T, 0, 0) @[Replacement.scala 218:17]
        node _state_reg_T_2 = eq(_state_reg_T_1, UInt<1>("h00")) @[Replacement.scala 218:7]
        node state_reg_hi_lo = mux(state_reg_hi_hi, state_reg_left_subtree_state, _state_reg_T_2) @[Replacement.scala 203:16]
        node _state_reg_T_3 = bits(state_reg_touch_way_sized, 0, 0) @[Replacement.scala 207:62]
        node _state_reg_T_4 = bits(_state_reg_T_3, 0, 0) @[Replacement.scala 218:17]
        node _state_reg_T_5 = eq(_state_reg_T_4, UInt<1>("h00")) @[Replacement.scala 218:7]
        node state_reg_lo = mux(state_reg_hi_hi, _state_reg_T_5, state_reg_right_subtree_state) @[Replacement.scala 206:16]
        node state_reg_hi = cat(state_reg_hi_hi, state_reg_hi_lo) @[Cat.scala 30:58]
        node _state_reg_T_6 = cat(state_reg_hi, state_reg_lo) @[Cat.scala 30:58]
        state_reg_1 <= _state_reg_T_6 @[Replacement.scala 172:15]
        skip @[TLB.scala 331:31]
      skip @[TLB.scala 329:37]
    node _multipleHits_T = bits(real_hits, 2, 0) @[Misc.scala 180:37]
    node _multipleHits_T_1 = bits(_multipleHits_T, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne = bits(_multipleHits_T_1, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_2 = bits(_multipleHits_T, 2, 1) @[Misc.scala 181:39]
    node _multipleHits_T_3 = bits(_multipleHits_T_2, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_1 = bits(_multipleHits_T_3, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_4 = bits(_multipleHits_T_2, 1, 1) @[Misc.scala 181:39]
    node multipleHits_rightOne = bits(_multipleHits_T_4, 0, 0) @[Misc.scala 177:18]
    node multipleHits_rightOne_1 = or(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:16]
    node _multipleHits_T_5 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 182:37]
    node _multipleHits_T_6 = and(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:61]
    node multipleHits_rightTwo = or(_multipleHits_T_5, _multipleHits_T_6) @[Misc.scala 182:49]
    node multipleHits_leftOne_2 = or(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:16]
    node _multipleHits_T_7 = or(UInt<1>("h00"), multipleHits_rightTwo) @[Misc.scala 182:37]
    node _multipleHits_T_8 = and(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:61]
    node multipleHits_leftTwo = or(_multipleHits_T_7, _multipleHits_T_8) @[Misc.scala 182:49]
    node _multipleHits_T_9 = bits(real_hits, 5, 3) @[Misc.scala 181:39]
    node _multipleHits_T_10 = bits(_multipleHits_T_9, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_3 = bits(_multipleHits_T_10, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_11 = bits(_multipleHits_T_9, 2, 1) @[Misc.scala 181:39]
    node _multipleHits_T_12 = bits(_multipleHits_T_11, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_4 = bits(_multipleHits_T_12, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_13 = bits(_multipleHits_T_11, 1, 1) @[Misc.scala 181:39]
    node multipleHits_rightOne_2 = bits(_multipleHits_T_13, 0, 0) @[Misc.scala 177:18]
    node multipleHits_rightOne_3 = or(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:16]
    node _multipleHits_T_14 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 182:37]
    node _multipleHits_T_15 = and(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:61]
    node multipleHits_rightTwo_1 = or(_multipleHits_T_14, _multipleHits_T_15) @[Misc.scala 182:49]
    node multipleHits_rightOne_4 = or(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:16]
    node _multipleHits_T_16 = or(UInt<1>("h00"), multipleHits_rightTwo_1) @[Misc.scala 182:37]
    node _multipleHits_T_17 = and(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:61]
    node multipleHits_rightTwo_2 = or(_multipleHits_T_16, _multipleHits_T_17) @[Misc.scala 182:49]
    node _multipleHits_T_18 = or(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:16]
    node _multipleHits_T_19 = or(multipleHits_leftTwo, multipleHits_rightTwo_2) @[Misc.scala 182:37]
    node _multipleHits_T_20 = and(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:61]
    node multipleHits = or(_multipleHits_T_19, _multipleHits_T_20) @[Misc.scala 182:49]
    node _io_req_ready_T = eq(state, UInt<2>("h00")) @[TLB.scala 341:25]
    io.req.ready <= _io_req_ready_T @[TLB.scala 341:16]
    node _io_resp_pf_ld_T = and(UInt<1>("h00"), cmd_read) @[TLB.scala 342:28]
    node _io_resp_pf_ld_T_1 = and(pf_ld_array, hits) @[TLB.scala 342:57]
    node _io_resp_pf_ld_T_2 = orr(_io_resp_pf_ld_T_1) @[TLB.scala 342:65]
    node _io_resp_pf_ld_T_3 = or(_io_resp_pf_ld_T, _io_resp_pf_ld_T_2) @[TLB.scala 342:41]
    io.resp.pf.ld <= _io_resp_pf_ld_T_3 @[TLB.scala 342:17]
    node _io_resp_pf_st_T = and(UInt<1>("h00"), cmd_write_perms) @[TLB.scala 343:28]
    node _io_resp_pf_st_T_1 = and(pf_st_array, hits) @[TLB.scala 343:64]
    node _io_resp_pf_st_T_2 = orr(_io_resp_pf_st_T_1) @[TLB.scala 343:72]
    node _io_resp_pf_st_T_3 = or(_io_resp_pf_st_T, _io_resp_pf_st_T_2) @[TLB.scala 343:48]
    io.resp.pf.st <= _io_resp_pf_st_T_3 @[TLB.scala 343:17]
    node _io_resp_pf_inst_T = and(pf_inst_array, hits) @[TLB.scala 344:47]
    node _io_resp_pf_inst_T_1 = orr(_io_resp_pf_inst_T) @[TLB.scala 344:55]
    node _io_resp_pf_inst_T_2 = or(UInt<1>("h00"), _io_resp_pf_inst_T_1) @[TLB.scala 344:29]
    io.resp.pf.inst <= _io_resp_pf_inst_T_2 @[TLB.scala 344:19]
    node _io_resp_ae_ld_T = and(ae_ld_array, hits) @[TLB.scala 345:33]
    node _io_resp_ae_ld_T_1 = orr(_io_resp_ae_ld_T) @[TLB.scala 345:41]
    io.resp.ae.ld <= _io_resp_ae_ld_T_1 @[TLB.scala 345:17]
    node _io_resp_ae_st_T = and(ae_st_array, hits) @[TLB.scala 346:33]
    node _io_resp_ae_st_T_1 = orr(_io_resp_ae_st_T) @[TLB.scala 346:41]
    io.resp.ae.st <= _io_resp_ae_st_T_1 @[TLB.scala 346:17]
    node _io_resp_ae_inst_T = not(px_array) @[TLB.scala 347:23]
    node _io_resp_ae_inst_T_1 = and(_io_resp_ae_inst_T, hits) @[TLB.scala 347:33]
    node _io_resp_ae_inst_T_2 = orr(_io_resp_ae_inst_T_1) @[TLB.scala 347:41]
    io.resp.ae.inst <= _io_resp_ae_inst_T_2 @[TLB.scala 347:19]
    node _io_resp_ma_ld_T = and(ma_ld_array, hits) @[TLB.scala 348:33]
    node _io_resp_ma_ld_T_1 = orr(_io_resp_ma_ld_T) @[TLB.scala 348:41]
    io.resp.ma.ld <= _io_resp_ma_ld_T_1 @[TLB.scala 348:17]
    node _io_resp_ma_st_T = and(ma_st_array, hits) @[TLB.scala 349:33]
    node _io_resp_ma_st_T_1 = orr(_io_resp_ma_st_T) @[TLB.scala 349:41]
    io.resp.ma.st <= _io_resp_ma_st_T_1 @[TLB.scala 349:17]
    io.resp.ma.inst <= UInt<1>("h00") @[TLB.scala 350:19]
    node _io_resp_cacheable_T = and(c_array, hits) @[TLB.scala 351:33]
    node _io_resp_cacheable_T_1 = orr(_io_resp_cacheable_T) @[TLB.scala 351:41]
    io.resp.cacheable <= _io_resp_cacheable_T_1 @[TLB.scala 351:21]
    node _io_resp_must_alloc_T = and(must_alloc_array, hits) @[TLB.scala 352:43]
    node _io_resp_must_alloc_T_1 = orr(_io_resp_must_alloc_T) @[TLB.scala 352:51]
    io.resp.must_alloc <= _io_resp_must_alloc_T_1 @[TLB.scala 352:22]
    node _io_resp_prefetchable_T = and(prefetchable_array, hits) @[TLB.scala 353:47]
    node _io_resp_prefetchable_T_1 = orr(_io_resp_prefetchable_T) @[TLB.scala 353:55]
    node _io_resp_prefetchable_T_2 = and(_io_resp_prefetchable_T_1, UInt<1>("h01")) @[TLB.scala 353:59]
    io.resp.prefetchable <= _io_resp_prefetchable_T_2 @[TLB.scala 353:24]
    node _io_resp_miss_T = or(do_refill, tlb_miss) @[TLB.scala 354:29]
    node _io_resp_miss_T_1 = or(_io_resp_miss_T, multipleHits) @[TLB.scala 354:41]
    io.resp.miss <= _io_resp_miss_T_1 @[TLB.scala 354:16]
    node io_resp_paddr_lo = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 355:46]
    node _io_resp_paddr_T = cat(ppn, io_resp_paddr_lo) @[Cat.scala 30:58]
    io.resp.paddr <= _io_resp_paddr_T @[TLB.scala 355:17]
    node _io_ptw_req_valid_T = eq(state, UInt<2>("h01")) @[TLB.scala 357:29]
    io.ptw.req.valid <= _io_ptw_req_valid_T @[TLB.scala 357:20]
    node _io_ptw_req_bits_valid_T = eq(io.kill, UInt<1>("h00")) @[TLB.scala 358:28]
    io.ptw.req.bits.valid <= _io_ptw_req_bits_valid_T @[TLB.scala 358:25]
    io.ptw.req.bits.bits.addr <= r_refill_tag @[TLB.scala 359:29]
    
  module DCacheModuleImpl_Anon : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {vaddr : UInt<32>, passthrough : UInt<1>, size : UInt<2>, cmd : UInt<5>}}, resp : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, must_alloc : UInt<1>, prefetchable : UInt<1>}, flip sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<32>, asid : UInt<1>}}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {valid : UInt<1>, bits : {addr : UInt<20>}}}, flip resp : {valid : UInt<1>, bits : {ae : UInt<1>, pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<1>, fragmented_superpage : UInt<1>, homogeneous : UInt<1>}}, flip ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip customCSRs : {csrs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}}, flip kill : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node vpn = bits(io.req.bits.vaddr, 31, 12) @[TLB.scala 163:30]
    reg sectored_entries : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[4], valid : UInt<1>[4]}[1][1], clock @[TLB.scala 165:29]
    reg superpage_entries : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[1], valid : UInt<1>[1]}[4], clock @[TLB.scala 166:30]
    reg special_entry : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[1], valid : UInt<1>[1]}, clock @[TLB.scala 167:56]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[TLB.scala 173:18]
    reg r_refill_tag : UInt<20>, clock @[TLB.scala 174:25]
    reg r_superpage_repl_addr : UInt<2>, clock @[TLB.scala 175:34]
    reg r_sectored_repl_addr : UInt<0>, clock @[TLB.scala 176:33]
    reg r_sectored_hit_addr : UInt<0>, clock @[TLB.scala 177:32]
    reg r_sectored_hit : UInt<1>, clock @[TLB.scala 178:27]
    node priv_s = bits(io.ptw.status.dprv, 0, 0) @[TLB.scala 181:20]
    node priv_uses_vm = leq(io.ptw.status.dprv, UInt<1>("h01")) @[TLB.scala 182:27]
    node _vm_enabled_T = bits(io.ptw.ptbr.mode, 0, 0) @[TLB.scala 183:53]
    node _vm_enabled_T_1 = and(UInt<1>("h00"), _vm_enabled_T) @[TLB.scala 183:34]
    node _vm_enabled_T_2 = and(_vm_enabled_T_1, priv_uses_vm) @[TLB.scala 183:83]
    node _vm_enabled_T_3 = eq(io.req.bits.passthrough, UInt<1>("h00")) @[TLB.scala 183:102]
    node vm_enabled = and(_vm_enabled_T_2, _vm_enabled_T_3) @[TLB.scala 183:99]
    node refill_ppn = bits(io.ptw.resp.bits.pte.ppn, 19, 0) @[TLB.scala 186:44]
    node do_refill = and(UInt<1>("h00"), io.ptw.resp.valid) @[TLB.scala 187:33]
    node _invalidate_refill_T = eq(state, UInt<2>("h01")) @[package.scala 15:47]
    node _invalidate_refill_T_1 = eq(state, UInt<2>("h03")) @[package.scala 15:47]
    node _invalidate_refill_T_2 = or(_invalidate_refill_T, _invalidate_refill_T_1) @[package.scala 72:59]
    node invalidate_refill = or(_invalidate_refill_T_2, io.sfence.valid) @[TLB.scala 188:88]
    node _mpu_ppn_T = and(vm_enabled, UInt<1>("h01")) @[TLB.scala 190:32]
    wire _mpu_ppn_data_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE is invalid @[TLB.scala 86:77]
    wire _mpu_ppn_data_WIRE_1 : UInt<35>
    _mpu_ppn_data_WIRE_1 is invalid
    _mpu_ppn_data_WIRE_1 <= special_entry.data[UInt<1>("h00")]
    node _mpu_ppn_data_T = bits(_mpu_ppn_data_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.fragmented_superpage <= _mpu_ppn_data_T @[TLB.scala 86:77]
    node _mpu_ppn_data_T_1 = bits(_mpu_ppn_data_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.c <= _mpu_ppn_data_T_1 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_2 = bits(_mpu_ppn_data_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.eff <= _mpu_ppn_data_T_2 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_3 = bits(_mpu_ppn_data_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.paa <= _mpu_ppn_data_T_3 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_4 = bits(_mpu_ppn_data_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pal <= _mpu_ppn_data_T_4 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_5 = bits(_mpu_ppn_data_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ppp <= _mpu_ppn_data_T_5 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_6 = bits(_mpu_ppn_data_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pr <= _mpu_ppn_data_T_6 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_7 = bits(_mpu_ppn_data_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.px <= _mpu_ppn_data_T_7 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_8 = bits(_mpu_ppn_data_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pw <= _mpu_ppn_data_T_8 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_9 = bits(_mpu_ppn_data_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sr <= _mpu_ppn_data_T_9 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_10 = bits(_mpu_ppn_data_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sx <= _mpu_ppn_data_T_10 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_11 = bits(_mpu_ppn_data_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sw <= _mpu_ppn_data_T_11 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_12 = bits(_mpu_ppn_data_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ae <= _mpu_ppn_data_T_12 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_13 = bits(_mpu_ppn_data_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.g <= _mpu_ppn_data_T_13 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_14 = bits(_mpu_ppn_data_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.u <= _mpu_ppn_data_T_14 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_15 = bits(_mpu_ppn_data_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ppn <= _mpu_ppn_data_T_15 @[TLB.scala 86:77]
    inst mpu_ppn_data_barrier of OptimizationBarrier_18 @[package.scala 258:25]
    mpu_ppn_data_barrier.io is invalid
    mpu_ppn_data_barrier.clock <= clock
    mpu_ppn_data_barrier.reset <= reset
    mpu_ppn_data_barrier.io.x <- _mpu_ppn_data_WIRE @[package.scala 266:18]
    node _mpu_ppn_T_1 = shr(io.req.bits.vaddr, 12) @[TLB.scala 190:123]
    node _mpu_ppn_T_2 = mux(_mpu_ppn_T, mpu_ppn_data_barrier.io.y.ppn, _mpu_ppn_T_1) @[TLB.scala 190:20]
    node mpu_ppn = mux(do_refill, refill_ppn, _mpu_ppn_T_2) @[TLB.scala 189:20]
    node mpu_physaddr_lo = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 191:52]
    node mpu_physaddr = cat(mpu_ppn, mpu_physaddr_lo) @[Cat.scala 30:58]
    node _mpu_priv_T = or(do_refill, io.req.bits.passthrough) @[TLB.scala 192:56]
    node _mpu_priv_T_1 = and(UInt<1>("h00"), _mpu_priv_T) @[TLB.scala 192:42]
    node _mpu_priv_T_2 = cat(io.ptw.status.debug, io.ptw.status.dprv) @[Cat.scala 30:58]
    node mpu_priv = mux(_mpu_priv_T_1, UInt<1>("h01"), _mpu_priv_T_2) @[TLB.scala 192:27]
    inst pmp of PMPChecker_1 @[TLB.scala 193:19]
    pmp.io is invalid
    pmp.clock <= clock
    pmp.reset <= reset
    pmp.io.addr <= mpu_physaddr @[TLB.scala 194:15]
    pmp.io.size <= io.req.bits.size @[TLB.scala 195:15]
    pmp.io.pmp[0] <- io.ptw.pmp[0] @[TLB.scala 196:14]
    pmp.io.pmp[1] <- io.ptw.pmp[1] @[TLB.scala 196:14]
    pmp.io.pmp[2] <- io.ptw.pmp[2] @[TLB.scala 196:14]
    pmp.io.pmp[3] <- io.ptw.pmp[3] @[TLB.scala 196:14]
    pmp.io.pmp[4] <- io.ptw.pmp[4] @[TLB.scala 196:14]
    pmp.io.pmp[5] <- io.ptw.pmp[5] @[TLB.scala 196:14]
    pmp.io.pmp[6] <- io.ptw.pmp[6] @[TLB.scala 196:14]
    pmp.io.pmp[7] <- io.ptw.pmp[7] @[TLB.scala 196:14]
    pmp.io.prv <= mpu_priv @[TLB.scala 197:14]
    node _legal_address_T = xor(mpu_physaddr, UInt<14>("h03000")) @[Parameters.scala 137:31]
    node _legal_address_T_1 = cvt(_legal_address_T) @[Parameters.scala 137:49]
    node _legal_address_T_2 = and(_legal_address_T_1, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_3 = asSInt(_legal_address_T_2) @[Parameters.scala 137:52]
    node _legal_address_T_4 = eq(_legal_address_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_5 = xor(mpu_physaddr, UInt<15>("h04000")) @[Parameters.scala 137:31]
    node _legal_address_T_6 = cvt(_legal_address_T_5) @[Parameters.scala 137:49]
    node _legal_address_T_7 = and(_legal_address_T_6, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_8 = asSInt(_legal_address_T_7) @[Parameters.scala 137:52]
    node _legal_address_T_9 = eq(_legal_address_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_10 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _legal_address_T_11 = cvt(_legal_address_T_10) @[Parameters.scala 137:49]
    node _legal_address_T_12 = and(_legal_address_T_11, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_13 = asSInt(_legal_address_T_12) @[Parameters.scala 137:52]
    node _legal_address_T_14 = eq(_legal_address_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_15 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _legal_address_T_16 = cvt(_legal_address_T_15) @[Parameters.scala 137:49]
    node _legal_address_T_17 = and(_legal_address_T_16, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_18 = asSInt(_legal_address_T_17) @[Parameters.scala 137:52]
    node _legal_address_T_19 = eq(_legal_address_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_20 = xor(mpu_physaddr, UInt<31>("h054000000")) @[Parameters.scala 137:31]
    node _legal_address_T_21 = cvt(_legal_address_T_20) @[Parameters.scala 137:49]
    node _legal_address_T_22 = and(_legal_address_T_21, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_23 = asSInt(_legal_address_T_22) @[Parameters.scala 137:52]
    node _legal_address_T_24 = eq(_legal_address_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_25 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _legal_address_T_26 = cvt(_legal_address_T_25) @[Parameters.scala 137:49]
    node _legal_address_T_27 = and(_legal_address_T_26, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_28 = asSInt(_legal_address_T_27) @[Parameters.scala 137:52]
    node _legal_address_T_29 = eq(_legal_address_T_28, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_30 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
    node _legal_address_T_31 = cvt(_legal_address_T_30) @[Parameters.scala 137:49]
    node _legal_address_T_32 = and(_legal_address_T_31, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
    node _legal_address_T_33 = asSInt(_legal_address_T_32) @[Parameters.scala 137:52]
    node _legal_address_T_34 = eq(_legal_address_T_33, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_35 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _legal_address_T_36 = cvt(_legal_address_T_35) @[Parameters.scala 137:49]
    node _legal_address_T_37 = and(_legal_address_T_36, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_38 = asSInt(_legal_address_T_37) @[Parameters.scala 137:52]
    node _legal_address_T_39 = eq(_legal_address_T_38, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_40 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _legal_address_T_41 = cvt(_legal_address_T_40) @[Parameters.scala 137:49]
    node _legal_address_T_42 = and(_legal_address_T_41, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_43 = asSInt(_legal_address_T_42) @[Parameters.scala 137:52]
    node _legal_address_T_44 = eq(_legal_address_T_43, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_45 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _legal_address_T_46 = cvt(_legal_address_T_45) @[Parameters.scala 137:49]
    node _legal_address_T_47 = and(_legal_address_T_46, asSInt(UInt<15>("h04000"))) @[Parameters.scala 137:52]
    node _legal_address_T_48 = asSInt(_legal_address_T_47) @[Parameters.scala 137:52]
    node _legal_address_T_49 = eq(_legal_address_T_48, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_50 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _legal_address_T_51 = cvt(_legal_address_T_50) @[Parameters.scala 137:49]
    node _legal_address_T_52 = and(_legal_address_T_51, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_53 = asSInt(_legal_address_T_52) @[Parameters.scala 137:52]
    node _legal_address_T_54 = eq(_legal_address_T_53, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    wire _legal_address_WIRE : UInt<1>[11] @[Parameters.scala 598:36]
    _legal_address_WIRE is invalid @[Parameters.scala 598:36]
    _legal_address_WIRE[0] <= _legal_address_T_4 @[Parameters.scala 598:36]
    _legal_address_WIRE[1] <= _legal_address_T_9 @[Parameters.scala 598:36]
    _legal_address_WIRE[2] <= _legal_address_T_14 @[Parameters.scala 598:36]
    _legal_address_WIRE[3] <= _legal_address_T_19 @[Parameters.scala 598:36]
    _legal_address_WIRE[4] <= _legal_address_T_24 @[Parameters.scala 598:36]
    _legal_address_WIRE[5] <= _legal_address_T_29 @[Parameters.scala 598:36]
    _legal_address_WIRE[6] <= _legal_address_T_34 @[Parameters.scala 598:36]
    _legal_address_WIRE[7] <= _legal_address_T_39 @[Parameters.scala 598:36]
    _legal_address_WIRE[8] <= _legal_address_T_44 @[Parameters.scala 598:36]
    _legal_address_WIRE[9] <= _legal_address_T_49 @[Parameters.scala 598:36]
    _legal_address_WIRE[10] <= _legal_address_T_54 @[Parameters.scala 598:36]
    node _legal_address_T_55 = or(_legal_address_WIRE[0], _legal_address_WIRE[1]) @[TLB.scala 198:67]
    node _legal_address_T_56 = or(_legal_address_T_55, _legal_address_WIRE[2]) @[TLB.scala 198:67]
    node _legal_address_T_57 = or(_legal_address_T_56, _legal_address_WIRE[3]) @[TLB.scala 198:67]
    node _legal_address_T_58 = or(_legal_address_T_57, _legal_address_WIRE[4]) @[TLB.scala 198:67]
    node _legal_address_T_59 = or(_legal_address_T_58, _legal_address_WIRE[5]) @[TLB.scala 198:67]
    node _legal_address_T_60 = or(_legal_address_T_59, _legal_address_WIRE[6]) @[TLB.scala 198:67]
    node _legal_address_T_61 = or(_legal_address_T_60, _legal_address_WIRE[7]) @[TLB.scala 198:67]
    node _legal_address_T_62 = or(_legal_address_T_61, _legal_address_WIRE[8]) @[TLB.scala 198:67]
    node _legal_address_T_63 = or(_legal_address_T_62, _legal_address_WIRE[9]) @[TLB.scala 198:67]
    node legal_address = or(_legal_address_T_63, _legal_address_WIRE[10]) @[TLB.scala 198:67]
    node _cacheable_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _cacheable_T_1 = cvt(_cacheable_T) @[Parameters.scala 137:49]
    node _cacheable_T_2 = and(_cacheable_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _cacheable_T_3 = asSInt(_cacheable_T_2) @[Parameters.scala 137:52]
    node _cacheable_T_4 = eq(_cacheable_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _cacheable_T_5 = and(legal_address, UInt<1>("h00")) @[TLB.scala 200:19]
    node cacheable = and(_cacheable_T_5, UInt<1>("h00")) @[TLB.scala 201:49]
    node _homogeneous_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _homogeneous_T_1 = cvt(_homogeneous_T) @[Parameters.scala 137:49]
    node _homogeneous_T_2 = and(_homogeneous_T_1, asSInt(UInt<16>("h0b000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_3 = asSInt(_homogeneous_T_2) @[Parameters.scala 137:52]
    node _homogeneous_T_4 = eq(_homogeneous_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_5 = xor(mpu_physaddr, UInt<14>("h03000")) @[Parameters.scala 137:31]
    node _homogeneous_T_6 = cvt(_homogeneous_T_5) @[Parameters.scala 137:49]
    node _homogeneous_T_7 = and(_homogeneous_T_6, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_8 = asSInt(_homogeneous_T_7) @[Parameters.scala 137:52]
    node _homogeneous_T_9 = eq(_homogeneous_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_10 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_11 = cvt(_homogeneous_T_10) @[Parameters.scala 137:49]
    node _homogeneous_T_12 = and(_homogeneous_T_11, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_13 = asSInt(_homogeneous_T_12) @[Parameters.scala 137:52]
    node _homogeneous_T_14 = eq(_homogeneous_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_15 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_16 = cvt(_homogeneous_T_15) @[Parameters.scala 137:49]
    node _homogeneous_T_17 = and(_homogeneous_T_16, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_18 = asSInt(_homogeneous_T_17) @[Parameters.scala 137:52]
    node _homogeneous_T_19 = eq(_homogeneous_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_20 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _homogeneous_T_21 = cvt(_homogeneous_T_20) @[Parameters.scala 137:49]
    node _homogeneous_T_22 = and(_homogeneous_T_21, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_23 = asSInt(_homogeneous_T_22) @[Parameters.scala 137:52]
    node _homogeneous_T_24 = eq(_homogeneous_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_25 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_26 = cvt(_homogeneous_T_25) @[Parameters.scala 137:49]
    node _homogeneous_T_27 = and(_homogeneous_T_26, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_28 = asSInt(_homogeneous_T_27) @[Parameters.scala 137:52]
    node _homogeneous_T_29 = eq(_homogeneous_T_28, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_30 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_31 = cvt(_homogeneous_T_30) @[Parameters.scala 137:49]
    node _homogeneous_T_32 = and(_homogeneous_T_31, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_33 = asSInt(_homogeneous_T_32) @[Parameters.scala 137:52]
    node _homogeneous_T_34 = eq(_homogeneous_T_33, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_35 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_36 = cvt(_homogeneous_T_35) @[Parameters.scala 137:49]
    node _homogeneous_T_37 = and(_homogeneous_T_36, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_38 = asSInt(_homogeneous_T_37) @[Parameters.scala 137:52]
    node _homogeneous_T_39 = eq(_homogeneous_T_38, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_40 = xor(mpu_physaddr, UInt<31>("h054000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_41 = cvt(_homogeneous_T_40) @[Parameters.scala 137:49]
    node _homogeneous_T_42 = and(_homogeneous_T_41, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_43 = asSInt(_homogeneous_T_42) @[Parameters.scala 137:52]
    node _homogeneous_T_44 = eq(_homogeneous_T_43, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_45 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_46 = cvt(_homogeneous_T_45) @[Parameters.scala 137:49]
    node _homogeneous_T_47 = and(_homogeneous_T_46, asSInt(UInt<15>("h04000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_48 = asSInt(_homogeneous_T_47) @[Parameters.scala 137:52]
    node _homogeneous_T_49 = eq(_homogeneous_T_48, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_50 = or(UInt<1>("h00"), _homogeneous_T_4) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_51 = or(_homogeneous_T_50, _homogeneous_T_9) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_52 = or(_homogeneous_T_51, _homogeneous_T_14) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_53 = or(_homogeneous_T_52, _homogeneous_T_19) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_54 = or(_homogeneous_T_53, _homogeneous_T_24) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_55 = or(_homogeneous_T_54, _homogeneous_T_29) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_56 = or(_homogeneous_T_55, _homogeneous_T_34) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_57 = or(_homogeneous_T_56, _homogeneous_T_39) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_58 = or(_homogeneous_T_57, _homogeneous_T_44) @[TLBPermissions.scala 98:65]
    node homogeneous = or(_homogeneous_T_58, _homogeneous_T_49) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_59 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_60 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_61 = cvt(_homogeneous_T_60) @[Parameters.scala 137:49]
    node _homogeneous_T_62 = and(_homogeneous_T_61, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_63 = asSInt(_homogeneous_T_62) @[Parameters.scala 137:52]
    node _homogeneous_T_64 = eq(_homogeneous_T_63, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_65 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_66 = cvt(_homogeneous_T_65) @[Parameters.scala 137:49]
    node _homogeneous_T_67 = and(_homogeneous_T_66, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_68 = asSInt(_homogeneous_T_67) @[Parameters.scala 137:52]
    node _homogeneous_T_69 = eq(_homogeneous_T_68, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_70 = or(UInt<1>("h00"), _homogeneous_T_64) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_71 = or(_homogeneous_T_70, _homogeneous_T_69) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_72 = eq(_homogeneous_T_71, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_73 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _homogeneous_T_74 = cvt(_homogeneous_T_73) @[Parameters.scala 137:49]
    node _homogeneous_T_75 = and(_homogeneous_T_74, asSInt(UInt<33>("h086134000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_76 = asSInt(_homogeneous_T_75) @[Parameters.scala 137:52]
    node _homogeneous_T_77 = eq(_homogeneous_T_76, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_78 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_79 = cvt(_homogeneous_T_78) @[Parameters.scala 137:49]
    node _homogeneous_T_80 = and(_homogeneous_T_79, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_81 = asSInt(_homogeneous_T_80) @[Parameters.scala 137:52]
    node _homogeneous_T_82 = eq(_homogeneous_T_81, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_83 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_84 = cvt(_homogeneous_T_83) @[Parameters.scala 137:49]
    node _homogeneous_T_85 = and(_homogeneous_T_84, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_86 = asSInt(_homogeneous_T_85) @[Parameters.scala 137:52]
    node _homogeneous_T_87 = eq(_homogeneous_T_86, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_88 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_89 = cvt(_homogeneous_T_88) @[Parameters.scala 137:49]
    node _homogeneous_T_90 = and(_homogeneous_T_89, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_91 = asSInt(_homogeneous_T_90) @[Parameters.scala 137:52]
    node _homogeneous_T_92 = eq(_homogeneous_T_91, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_93 = or(UInt<1>("h00"), _homogeneous_T_77) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_94 = or(_homogeneous_T_93, _homogeneous_T_82) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_95 = or(_homogeneous_T_94, _homogeneous_T_87) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_96 = or(_homogeneous_T_95, _homogeneous_T_92) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_97 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_98 = cvt(_homogeneous_T_97) @[Parameters.scala 137:49]
    node _homogeneous_T_99 = and(_homogeneous_T_98, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_100 = asSInt(_homogeneous_T_99) @[Parameters.scala 137:52]
    node _homogeneous_T_101 = eq(_homogeneous_T_100, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_102 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_103 = cvt(_homogeneous_T_102) @[Parameters.scala 137:49]
    node _homogeneous_T_104 = and(_homogeneous_T_103, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_105 = asSInt(_homogeneous_T_104) @[Parameters.scala 137:52]
    node _homogeneous_T_106 = eq(_homogeneous_T_105, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_107 = or(UInt<1>("h00"), _homogeneous_T_101) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_108 = or(_homogeneous_T_107, _homogeneous_T_106) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_109 = eq(_homogeneous_T_108, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_110 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_111 = cvt(_homogeneous_T_110) @[Parameters.scala 137:49]
    node _homogeneous_T_112 = and(_homogeneous_T_111, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_113 = asSInt(_homogeneous_T_112) @[Parameters.scala 137:52]
    node _homogeneous_T_114 = eq(_homogeneous_T_113, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_115 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_116 = cvt(_homogeneous_T_115) @[Parameters.scala 137:49]
    node _homogeneous_T_117 = and(_homogeneous_T_116, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_118 = asSInt(_homogeneous_T_117) @[Parameters.scala 137:52]
    node _homogeneous_T_119 = eq(_homogeneous_T_118, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_120 = or(UInt<1>("h00"), _homogeneous_T_114) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_121 = or(_homogeneous_T_120, _homogeneous_T_119) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_122 = eq(_homogeneous_T_121, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _deny_access_to_debug_T = leq(mpu_priv, UInt<2>("h03")) @[TLB.scala 203:39]
    node _deny_access_to_debug_T_1 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _deny_access_to_debug_T_2 = cvt(_deny_access_to_debug_T_1) @[Parameters.scala 137:49]
    node _deny_access_to_debug_T_3 = and(_deny_access_to_debug_T_2, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _deny_access_to_debug_T_4 = asSInt(_deny_access_to_debug_T_3) @[Parameters.scala 137:52]
    node _deny_access_to_debug_T_5 = eq(_deny_access_to_debug_T_4, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node deny_access_to_debug = and(_deny_access_to_debug_T, _deny_access_to_debug_T_5) @[TLB.scala 203:48]
    node _prot_r_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_r_T_1 = cvt(_prot_r_T) @[Parameters.scala 137:49]
    node _prot_r_T_2 = and(_prot_r_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _prot_r_T_3 = asSInt(_prot_r_T_2) @[Parameters.scala 137:52]
    node _prot_r_T_4 = eq(_prot_r_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_r_T_5 = and(legal_address, UInt<1>("h01")) @[TLB.scala 200:19]
    node _prot_r_T_6 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 204:44]
    node _prot_r_T_7 = and(_prot_r_T_5, _prot_r_T_6) @[TLB.scala 204:41]
    node prot_r = and(_prot_r_T_7, pmp.io.r) @[TLB.scala 204:66]
    node _prot_w_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_w_T_1 = cvt(_prot_w_T) @[Parameters.scala 137:49]
    node _prot_w_T_2 = and(_prot_w_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_w_T_3 = asSInt(_prot_w_T_2) @[Parameters.scala 137:52]
    node _prot_w_T_4 = eq(_prot_w_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_w_T_6 = cvt(_prot_w_T_5) @[Parameters.scala 137:49]
    node _prot_w_T_7 = and(_prot_w_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_8 = asSInt(_prot_w_T_7) @[Parameters.scala 137:52]
    node _prot_w_T_9 = eq(_prot_w_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_w_T_11 = cvt(_prot_w_T_10) @[Parameters.scala 137:49]
    node _prot_w_T_12 = and(_prot_w_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_w_T_13 = asSInt(_prot_w_T_12) @[Parameters.scala 137:52]
    node _prot_w_T_14 = eq(_prot_w_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_w_T_16 = cvt(_prot_w_T_15) @[Parameters.scala 137:49]
    node _prot_w_T_17 = and(_prot_w_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_18 = asSInt(_prot_w_T_17) @[Parameters.scala 137:52]
    node _prot_w_T_19 = eq(_prot_w_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_w_T_21 = cvt(_prot_w_T_20) @[Parameters.scala 137:49]
    node _prot_w_T_22 = and(_prot_w_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_23 = asSInt(_prot_w_T_22) @[Parameters.scala 137:52]
    node _prot_w_T_24 = eq(_prot_w_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_25 = or(_prot_w_T_4, _prot_w_T_9) @[Parameters.scala 615:89]
    node _prot_w_T_26 = or(_prot_w_T_25, _prot_w_T_14) @[Parameters.scala 615:89]
    node _prot_w_T_27 = or(_prot_w_T_26, _prot_w_T_19) @[Parameters.scala 615:89]
    node _prot_w_T_28 = or(_prot_w_T_27, _prot_w_T_24) @[Parameters.scala 615:89]
    node _prot_w_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_w_T_30 = cvt(_prot_w_T_29) @[Parameters.scala 137:49]
    node _prot_w_T_31 = and(_prot_w_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_32 = asSInt(_prot_w_T_31) @[Parameters.scala 137:52]
    node _prot_w_T_33 = eq(_prot_w_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_w_T_35 = cvt(_prot_w_T_34) @[Parameters.scala 137:49]
    node _prot_w_T_36 = and(_prot_w_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_37 = asSInt(_prot_w_T_36) @[Parameters.scala 137:52]
    node _prot_w_T_38 = eq(_prot_w_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_39 = or(_prot_w_T_33, _prot_w_T_38) @[Parameters.scala 615:89]
    node _prot_w_T_40 = mux(_prot_w_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_w_T_41 = mux(_prot_w_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_w_T_42 = or(_prot_w_T_40, _prot_w_T_41) @[Mux.scala 27:72]
    wire _prot_w_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_w_WIRE <= _prot_w_T_42 @[Mux.scala 27:72]
    node _prot_w_T_43 = and(legal_address, _prot_w_WIRE) @[TLB.scala 200:19]
    node _prot_w_T_44 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 205:48]
    node _prot_w_T_45 = and(_prot_w_T_43, _prot_w_T_44) @[TLB.scala 205:45]
    node prot_w = and(_prot_w_T_45, pmp.io.w) @[TLB.scala 205:70]
    node _prot_pp_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_pp_T_1 = cvt(_prot_pp_T) @[Parameters.scala 137:49]
    node _prot_pp_T_2 = and(_prot_pp_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_3 = asSInt(_prot_pp_T_2) @[Parameters.scala 137:52]
    node _prot_pp_T_4 = eq(_prot_pp_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_6 = cvt(_prot_pp_T_5) @[Parameters.scala 137:49]
    node _prot_pp_T_7 = and(_prot_pp_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_8 = asSInt(_prot_pp_T_7) @[Parameters.scala 137:52]
    node _prot_pp_T_9 = eq(_prot_pp_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_11 = cvt(_prot_pp_T_10) @[Parameters.scala 137:49]
    node _prot_pp_T_12 = and(_prot_pp_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_13 = asSInt(_prot_pp_T_12) @[Parameters.scala 137:52]
    node _prot_pp_T_14 = eq(_prot_pp_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_16 = cvt(_prot_pp_T_15) @[Parameters.scala 137:49]
    node _prot_pp_T_17 = and(_prot_pp_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_18 = asSInt(_prot_pp_T_17) @[Parameters.scala 137:52]
    node _prot_pp_T_19 = eq(_prot_pp_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_21 = cvt(_prot_pp_T_20) @[Parameters.scala 137:49]
    node _prot_pp_T_22 = and(_prot_pp_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_23 = asSInt(_prot_pp_T_22) @[Parameters.scala 137:52]
    node _prot_pp_T_24 = eq(_prot_pp_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_25 = or(_prot_pp_T_4, _prot_pp_T_9) @[Parameters.scala 615:89]
    node _prot_pp_T_26 = or(_prot_pp_T_25, _prot_pp_T_14) @[Parameters.scala 615:89]
    node _prot_pp_T_27 = or(_prot_pp_T_26, _prot_pp_T_19) @[Parameters.scala 615:89]
    node _prot_pp_T_28 = or(_prot_pp_T_27, _prot_pp_T_24) @[Parameters.scala 615:89]
    node _prot_pp_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_pp_T_30 = cvt(_prot_pp_T_29) @[Parameters.scala 137:49]
    node _prot_pp_T_31 = and(_prot_pp_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_32 = asSInt(_prot_pp_T_31) @[Parameters.scala 137:52]
    node _prot_pp_T_33 = eq(_prot_pp_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_pp_T_35 = cvt(_prot_pp_T_34) @[Parameters.scala 137:49]
    node _prot_pp_T_36 = and(_prot_pp_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_37 = asSInt(_prot_pp_T_36) @[Parameters.scala 137:52]
    node _prot_pp_T_38 = eq(_prot_pp_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_39 = or(_prot_pp_T_33, _prot_pp_T_38) @[Parameters.scala 615:89]
    node _prot_pp_T_40 = mux(_prot_pp_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_pp_T_41 = mux(_prot_pp_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_pp_T_42 = or(_prot_pp_T_40, _prot_pp_T_41) @[Mux.scala 27:72]
    wire _prot_pp_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_pp_WIRE <= _prot_pp_T_42 @[Mux.scala 27:72]
    node prot_pp = and(legal_address, _prot_pp_WIRE) @[TLB.scala 200:19]
    node _prot_al_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_al_T_1 = cvt(_prot_al_T) @[Parameters.scala 137:49]
    node _prot_al_T_2 = and(_prot_al_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_al_T_3 = asSInt(_prot_al_T_2) @[Parameters.scala 137:52]
    node _prot_al_T_4 = eq(_prot_al_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_al_T_6 = cvt(_prot_al_T_5) @[Parameters.scala 137:49]
    node _prot_al_T_7 = and(_prot_al_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_8 = asSInt(_prot_al_T_7) @[Parameters.scala 137:52]
    node _prot_al_T_9 = eq(_prot_al_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_al_T_11 = cvt(_prot_al_T_10) @[Parameters.scala 137:49]
    node _prot_al_T_12 = and(_prot_al_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_al_T_13 = asSInt(_prot_al_T_12) @[Parameters.scala 137:52]
    node _prot_al_T_14 = eq(_prot_al_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_al_T_16 = cvt(_prot_al_T_15) @[Parameters.scala 137:49]
    node _prot_al_T_17 = and(_prot_al_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_18 = asSInt(_prot_al_T_17) @[Parameters.scala 137:52]
    node _prot_al_T_19 = eq(_prot_al_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_al_T_21 = cvt(_prot_al_T_20) @[Parameters.scala 137:49]
    node _prot_al_T_22 = and(_prot_al_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_23 = asSInt(_prot_al_T_22) @[Parameters.scala 137:52]
    node _prot_al_T_24 = eq(_prot_al_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_25 = or(_prot_al_T_4, _prot_al_T_9) @[Parameters.scala 615:89]
    node _prot_al_T_26 = or(_prot_al_T_25, _prot_al_T_14) @[Parameters.scala 615:89]
    node _prot_al_T_27 = or(_prot_al_T_26, _prot_al_T_19) @[Parameters.scala 615:89]
    node _prot_al_T_28 = or(_prot_al_T_27, _prot_al_T_24) @[Parameters.scala 615:89]
    node _prot_al_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_al_T_30 = cvt(_prot_al_T_29) @[Parameters.scala 137:49]
    node _prot_al_T_31 = and(_prot_al_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_32 = asSInt(_prot_al_T_31) @[Parameters.scala 137:52]
    node _prot_al_T_33 = eq(_prot_al_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_al_T_35 = cvt(_prot_al_T_34) @[Parameters.scala 137:49]
    node _prot_al_T_36 = and(_prot_al_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_37 = asSInt(_prot_al_T_36) @[Parameters.scala 137:52]
    node _prot_al_T_38 = eq(_prot_al_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_39 = or(_prot_al_T_33, _prot_al_T_38) @[Parameters.scala 615:89]
    node _prot_al_T_40 = mux(_prot_al_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_al_T_41 = mux(_prot_al_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_al_T_42 = or(_prot_al_T_40, _prot_al_T_41) @[Mux.scala 27:72]
    wire _prot_al_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_al_WIRE <= _prot_al_T_42 @[Mux.scala 27:72]
    node prot_al = and(legal_address, _prot_al_WIRE) @[TLB.scala 200:19]
    node _prot_aa_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_aa_T_1 = cvt(_prot_aa_T) @[Parameters.scala 137:49]
    node _prot_aa_T_2 = and(_prot_aa_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_3 = asSInt(_prot_aa_T_2) @[Parameters.scala 137:52]
    node _prot_aa_T_4 = eq(_prot_aa_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_6 = cvt(_prot_aa_T_5) @[Parameters.scala 137:49]
    node _prot_aa_T_7 = and(_prot_aa_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_8 = asSInt(_prot_aa_T_7) @[Parameters.scala 137:52]
    node _prot_aa_T_9 = eq(_prot_aa_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_11 = cvt(_prot_aa_T_10) @[Parameters.scala 137:49]
    node _prot_aa_T_12 = and(_prot_aa_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_13 = asSInt(_prot_aa_T_12) @[Parameters.scala 137:52]
    node _prot_aa_T_14 = eq(_prot_aa_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_16 = cvt(_prot_aa_T_15) @[Parameters.scala 137:49]
    node _prot_aa_T_17 = and(_prot_aa_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_18 = asSInt(_prot_aa_T_17) @[Parameters.scala 137:52]
    node _prot_aa_T_19 = eq(_prot_aa_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_21 = cvt(_prot_aa_T_20) @[Parameters.scala 137:49]
    node _prot_aa_T_22 = and(_prot_aa_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_23 = asSInt(_prot_aa_T_22) @[Parameters.scala 137:52]
    node _prot_aa_T_24 = eq(_prot_aa_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_25 = or(_prot_aa_T_4, _prot_aa_T_9) @[Parameters.scala 615:89]
    node _prot_aa_T_26 = or(_prot_aa_T_25, _prot_aa_T_14) @[Parameters.scala 615:89]
    node _prot_aa_T_27 = or(_prot_aa_T_26, _prot_aa_T_19) @[Parameters.scala 615:89]
    node _prot_aa_T_28 = or(_prot_aa_T_27, _prot_aa_T_24) @[Parameters.scala 615:89]
    node _prot_aa_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_aa_T_30 = cvt(_prot_aa_T_29) @[Parameters.scala 137:49]
    node _prot_aa_T_31 = and(_prot_aa_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_32 = asSInt(_prot_aa_T_31) @[Parameters.scala 137:52]
    node _prot_aa_T_33 = eq(_prot_aa_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_aa_T_35 = cvt(_prot_aa_T_34) @[Parameters.scala 137:49]
    node _prot_aa_T_36 = and(_prot_aa_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_37 = asSInt(_prot_aa_T_36) @[Parameters.scala 137:52]
    node _prot_aa_T_38 = eq(_prot_aa_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_39 = or(_prot_aa_T_33, _prot_aa_T_38) @[Parameters.scala 615:89]
    node _prot_aa_T_40 = mux(_prot_aa_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_aa_T_41 = mux(_prot_aa_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_aa_T_42 = or(_prot_aa_T_40, _prot_aa_T_41) @[Mux.scala 27:72]
    wire _prot_aa_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_aa_WIRE <= _prot_aa_T_42 @[Mux.scala 27:72]
    node prot_aa = and(legal_address, _prot_aa_WIRE) @[TLB.scala 200:19]
    node _prot_x_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_x_T_1 = cvt(_prot_x_T) @[Parameters.scala 137:49]
    node _prot_x_T_2 = and(_prot_x_T_1, asSInt(UInt<33>("h086134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_3 = asSInt(_prot_x_T_2) @[Parameters.scala 137:52]
    node _prot_x_T_4 = eq(_prot_x_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_5 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_x_T_6 = cvt(_prot_x_T_5) @[Parameters.scala 137:49]
    node _prot_x_T_7 = and(_prot_x_T_6, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_8 = asSInt(_prot_x_T_7) @[Parameters.scala 137:52]
    node _prot_x_T_9 = eq(_prot_x_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_10 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_x_T_11 = cvt(_prot_x_T_10) @[Parameters.scala 137:49]
    node _prot_x_T_12 = and(_prot_x_T_11, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_13 = asSInt(_prot_x_T_12) @[Parameters.scala 137:52]
    node _prot_x_T_14 = eq(_prot_x_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_15 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_x_T_16 = cvt(_prot_x_T_15) @[Parameters.scala 137:49]
    node _prot_x_T_17 = and(_prot_x_T_16, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_18 = asSInt(_prot_x_T_17) @[Parameters.scala 137:52]
    node _prot_x_T_19 = eq(_prot_x_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_20 = or(_prot_x_T_4, _prot_x_T_9) @[Parameters.scala 615:89]
    node _prot_x_T_21 = or(_prot_x_T_20, _prot_x_T_14) @[Parameters.scala 615:89]
    node _prot_x_T_22 = or(_prot_x_T_21, _prot_x_T_19) @[Parameters.scala 615:89]
    node _prot_x_T_23 = xor(mpu_physaddr, UInt<15>("h04000")) @[Parameters.scala 137:31]
    node _prot_x_T_24 = cvt(_prot_x_T_23) @[Parameters.scala 137:49]
    node _prot_x_T_25 = and(_prot_x_T_24, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_26 = asSInt(_prot_x_T_25) @[Parameters.scala 137:52]
    node _prot_x_T_27 = eq(_prot_x_T_26, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_28 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _prot_x_T_29 = cvt(_prot_x_T_28) @[Parameters.scala 137:49]
    node _prot_x_T_30 = and(_prot_x_T_29, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_31 = asSInt(_prot_x_T_30) @[Parameters.scala 137:52]
    node _prot_x_T_32 = eq(_prot_x_T_31, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_33 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_x_T_34 = cvt(_prot_x_T_33) @[Parameters.scala 137:49]
    node _prot_x_T_35 = and(_prot_x_T_34, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_36 = asSInt(_prot_x_T_35) @[Parameters.scala 137:52]
    node _prot_x_T_37 = eq(_prot_x_T_36, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_38 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 137:31]
    node _prot_x_T_39 = cvt(_prot_x_T_38) @[Parameters.scala 137:49]
    node _prot_x_T_40 = and(_prot_x_T_39, asSInt(UInt<33>("h094000000"))) @[Parameters.scala 137:52]
    node _prot_x_T_41 = asSInt(_prot_x_T_40) @[Parameters.scala 137:52]
    node _prot_x_T_42 = eq(_prot_x_T_41, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_43 = xor(mpu_physaddr, UInt<29>("h014000000")) @[Parameters.scala 137:31]
    node _prot_x_T_44 = cvt(_prot_x_T_43) @[Parameters.scala 137:49]
    node _prot_x_T_45 = and(_prot_x_T_44, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_46 = asSInt(_prot_x_T_45) @[Parameters.scala 137:52]
    node _prot_x_T_47 = eq(_prot_x_T_46, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_48 = or(_prot_x_T_27, _prot_x_T_32) @[Parameters.scala 615:89]
    node _prot_x_T_49 = or(_prot_x_T_48, _prot_x_T_37) @[Parameters.scala 615:89]
    node _prot_x_T_50 = or(_prot_x_T_49, _prot_x_T_42) @[Parameters.scala 615:89]
    node _prot_x_T_51 = or(_prot_x_T_50, _prot_x_T_47) @[Parameters.scala 615:89]
    node _prot_x_T_52 = mux(_prot_x_T_22, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_x_T_53 = mux(_prot_x_T_51, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_x_T_54 = or(_prot_x_T_52, _prot_x_T_53) @[Mux.scala 27:72]
    wire _prot_x_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_x_WIRE <= _prot_x_T_54 @[Mux.scala 27:72]
    node _prot_x_T_55 = and(legal_address, _prot_x_WIRE) @[TLB.scala 200:19]
    node _prot_x_T_56 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 209:43]
    node _prot_x_T_57 = and(_prot_x_T_55, _prot_x_T_56) @[TLB.scala 209:40]
    node prot_x = and(_prot_x_T_57, pmp.io.x) @[TLB.scala 209:65]
    node _prot_eff_T = xor(mpu_physaddr, UInt<14>("h02000")) @[Parameters.scala 137:31]
    node _prot_eff_T_1 = cvt(_prot_eff_T) @[Parameters.scala 137:49]
    node _prot_eff_T_2 = and(_prot_eff_T_1, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_3 = asSInt(_prot_eff_T_2) @[Parameters.scala 137:52]
    node _prot_eff_T_4 = eq(_prot_eff_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_5 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_eff_T_6 = cvt(_prot_eff_T_5) @[Parameters.scala 137:49]
    node _prot_eff_T_7 = and(_prot_eff_T_6, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_8 = asSInt(_prot_eff_T_7) @[Parameters.scala 137:52]
    node _prot_eff_T_9 = eq(_prot_eff_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_10 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_eff_T_11 = cvt(_prot_eff_T_10) @[Parameters.scala 137:49]
    node _prot_eff_T_12 = and(_prot_eff_T_11, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_13 = asSInt(_prot_eff_T_12) @[Parameters.scala 137:52]
    node _prot_eff_T_14 = eq(_prot_eff_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_16 = cvt(_prot_eff_T_15) @[Parameters.scala 137:49]
    node _prot_eff_T_17 = and(_prot_eff_T_16, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_18 = asSInt(_prot_eff_T_17) @[Parameters.scala 137:52]
    node _prot_eff_T_19 = eq(_prot_eff_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_21 = cvt(_prot_eff_T_20) @[Parameters.scala 137:49]
    node _prot_eff_T_22 = and(_prot_eff_T_21, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_23 = asSInt(_prot_eff_T_22) @[Parameters.scala 137:52]
    node _prot_eff_T_24 = eq(_prot_eff_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_25 = or(_prot_eff_T_4, _prot_eff_T_9) @[Parameters.scala 615:89]
    node _prot_eff_T_26 = or(_prot_eff_T_25, _prot_eff_T_14) @[Parameters.scala 615:89]
    node _prot_eff_T_27 = or(_prot_eff_T_26, _prot_eff_T_19) @[Parameters.scala 615:89]
    node _prot_eff_T_28 = or(_prot_eff_T_27, _prot_eff_T_24) @[Parameters.scala 615:89]
    node _prot_eff_T_29 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_eff_T_30 = cvt(_prot_eff_T_29) @[Parameters.scala 137:49]
    node _prot_eff_T_31 = and(_prot_eff_T_30, asSInt(UInt<33>("h096032000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_32 = asSInt(_prot_eff_T_31) @[Parameters.scala 137:52]
    node _prot_eff_T_33 = eq(_prot_eff_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_34 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_35 = cvt(_prot_eff_T_34) @[Parameters.scala 137:49]
    node _prot_eff_T_36 = and(_prot_eff_T_35, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_37 = asSInt(_prot_eff_T_36) @[Parameters.scala 137:52]
    node _prot_eff_T_38 = eq(_prot_eff_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_39 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_40 = cvt(_prot_eff_T_39) @[Parameters.scala 137:49]
    node _prot_eff_T_41 = and(_prot_eff_T_40, asSInt(UInt<33>("h094000000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_42 = asSInt(_prot_eff_T_41) @[Parameters.scala 137:52]
    node _prot_eff_T_43 = eq(_prot_eff_T_42, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_44 = xor(mpu_physaddr, UInt<29>("h014000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_45 = cvt(_prot_eff_T_44) @[Parameters.scala 137:49]
    node _prot_eff_T_46 = and(_prot_eff_T_45, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_47 = asSInt(_prot_eff_T_46) @[Parameters.scala 137:52]
    node _prot_eff_T_48 = eq(_prot_eff_T_47, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_49 = or(_prot_eff_T_33, _prot_eff_T_38) @[Parameters.scala 615:89]
    node _prot_eff_T_50 = or(_prot_eff_T_49, _prot_eff_T_43) @[Parameters.scala 615:89]
    node _prot_eff_T_51 = or(_prot_eff_T_50, _prot_eff_T_48) @[Parameters.scala 615:89]
    node _prot_eff_T_52 = mux(_prot_eff_T_28, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_eff_T_53 = mux(_prot_eff_T_51, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_eff_T_54 = or(_prot_eff_T_52, _prot_eff_T_53) @[Mux.scala 27:72]
    wire _prot_eff_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_eff_WIRE <= _prot_eff_T_54 @[Mux.scala 27:72]
    node prot_eff = and(legal_address, _prot_eff_WIRE) @[TLB.scala 200:19]
    node _sector_hits_T = or(sectored_entries[UInt<1>("h00")][0].valid[0], sectored_entries[UInt<1>("h00")][0].valid[1]) @[package.scala 72:59]
    node _sector_hits_T_1 = or(_sector_hits_T, sectored_entries[UInt<1>("h00")][0].valid[2]) @[package.scala 72:59]
    node _sector_hits_T_2 = or(_sector_hits_T_1, sectored_entries[UInt<1>("h00")][0].valid[3]) @[package.scala 72:59]
    node _sector_hits_T_3 = xor(sectored_entries[UInt<1>("h00")][0].tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_4 = shr(_sector_hits_T_3, 2) @[TLB.scala 88:48]
    node _sector_hits_T_5 = eq(_sector_hits_T_4, UInt<1>("h00")) @[TLB.scala 88:66]
    node sector_hits_0 = and(_sector_hits_T_2, _sector_hits_T_5) @[TLB.scala 87:40]
    node _superpage_hits_T = xor(superpage_entries[0].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_1 = shr(_superpage_hits_T, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_2 = eq(_superpage_hits_T_1, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_0 = and(superpage_entries[0].valid[UInt<1>("h00")], _superpage_hits_T_2) @[TLB.scala 100:18]
    node _superpage_hits_T_3 = xor(superpage_entries[1].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_4 = shr(_superpage_hits_T_3, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_5 = eq(_superpage_hits_T_4, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_1 = and(superpage_entries[1].valid[UInt<1>("h00")], _superpage_hits_T_5) @[TLB.scala 100:18]
    node _superpage_hits_T_6 = xor(superpage_entries[2].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_7 = shr(_superpage_hits_T_6, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_8 = eq(_superpage_hits_T_7, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_2 = and(superpage_entries[2].valid[UInt<1>("h00")], _superpage_hits_T_8) @[TLB.scala 100:18]
    node _superpage_hits_T_9 = xor(superpage_entries[3].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_10 = shr(_superpage_hits_T_9, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_11 = eq(_superpage_hits_T_10, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_3 = and(superpage_entries[3].valid[UInt<1>("h00")], _superpage_hits_T_11) @[TLB.scala 100:18]
    node hitsVec_idx = bits(vpn, 1, 0) @[package.scala 154:13]
    node _hitsVec_T = xor(sectored_entries[UInt<1>("h00")][0].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_1 = shr(_hitsVec_T, 2) @[TLB.scala 88:48]
    node _hitsVec_T_2 = eq(_hitsVec_T_1, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_3 = and(sectored_entries[UInt<1>("h00")][0].valid[hitsVec_idx], _hitsVec_T_2) @[TLB.scala 100:18]
    node hitsVec_0 = and(vm_enabled, _hitsVec_T_3) @[TLB.scala 214:44]
    node _hitsVec_T_4 = xor(superpage_entries[0].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_5 = shr(_hitsVec_T_4, 0) @[TLB.scala 88:48]
    node _hitsVec_T_6 = eq(_hitsVec_T_5, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_7 = and(superpage_entries[0].valid[UInt<1>("h00")], _hitsVec_T_6) @[TLB.scala 100:18]
    node hitsVec_1 = and(vm_enabled, _hitsVec_T_7) @[TLB.scala 214:44]
    node _hitsVec_T_8 = xor(superpage_entries[1].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_9 = shr(_hitsVec_T_8, 0) @[TLB.scala 88:48]
    node _hitsVec_T_10 = eq(_hitsVec_T_9, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_11 = and(superpage_entries[1].valid[UInt<1>("h00")], _hitsVec_T_10) @[TLB.scala 100:18]
    node hitsVec_2 = and(vm_enabled, _hitsVec_T_11) @[TLB.scala 214:44]
    node _hitsVec_T_12 = xor(superpage_entries[2].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_13 = shr(_hitsVec_T_12, 0) @[TLB.scala 88:48]
    node _hitsVec_T_14 = eq(_hitsVec_T_13, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_15 = and(superpage_entries[2].valid[UInt<1>("h00")], _hitsVec_T_14) @[TLB.scala 100:18]
    node hitsVec_3 = and(vm_enabled, _hitsVec_T_15) @[TLB.scala 214:44]
    node _hitsVec_T_16 = xor(superpage_entries[3].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_17 = shr(_hitsVec_T_16, 0) @[TLB.scala 88:48]
    node _hitsVec_T_18 = eq(_hitsVec_T_17, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_19 = and(superpage_entries[3].valid[UInt<1>("h00")], _hitsVec_T_18) @[TLB.scala 100:18]
    node hitsVec_4 = and(vm_enabled, _hitsVec_T_19) @[TLB.scala 214:44]
    node _hitsVec_T_20 = xor(special_entry.tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_21 = shr(_hitsVec_T_20, 0) @[TLB.scala 88:48]
    node _hitsVec_T_22 = eq(_hitsVec_T_21, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_23 = and(special_entry.valid[UInt<1>("h00")], _hitsVec_T_22) @[TLB.scala 100:18]
    node hitsVec_5 = and(vm_enabled, _hitsVec_T_23) @[TLB.scala 214:44]
    node real_hits_lo_hi = cat(hitsVec_2, hitsVec_1) @[Cat.scala 30:58]
    node real_hits_lo = cat(real_hits_lo_hi, hitsVec_0) @[Cat.scala 30:58]
    node real_hits_hi_hi = cat(hitsVec_5, hitsVec_4) @[Cat.scala 30:58]
    node real_hits_hi = cat(real_hits_hi_hi, hitsVec_3) @[Cat.scala 30:58]
    node real_hits = cat(real_hits_hi, real_hits_lo) @[Cat.scala 30:58]
    node hits_hi = eq(vm_enabled, UInt<1>("h00")) @[TLB.scala 216:18]
    node hits = cat(hits_hi, real_hits) @[Cat.scala 30:58]
    node _ppn_T = eq(vm_enabled, UInt<1>("h00")) @[TLB.scala 217:30]
    node _ppn_data_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _ppn_data_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_1 : UInt<35>
    _ppn_data_WIRE_1 is invalid
    _ppn_data_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_ppn_data_T]
    node _ppn_data_T_1 = bits(_ppn_data_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE.fragmented_superpage <= _ppn_data_T_1 @[TLB.scala 86:77]
    node _ppn_data_T_2 = bits(_ppn_data_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE.c <= _ppn_data_T_2 @[TLB.scala 86:77]
    node _ppn_data_T_3 = bits(_ppn_data_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE.eff <= _ppn_data_T_3 @[TLB.scala 86:77]
    node _ppn_data_T_4 = bits(_ppn_data_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE.paa <= _ppn_data_T_4 @[TLB.scala 86:77]
    node _ppn_data_T_5 = bits(_ppn_data_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE.pal <= _ppn_data_T_5 @[TLB.scala 86:77]
    node _ppn_data_T_6 = bits(_ppn_data_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE.ppp <= _ppn_data_T_6 @[TLB.scala 86:77]
    node _ppn_data_T_7 = bits(_ppn_data_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE.pr <= _ppn_data_T_7 @[TLB.scala 86:77]
    node _ppn_data_T_8 = bits(_ppn_data_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE.px <= _ppn_data_T_8 @[TLB.scala 86:77]
    node _ppn_data_T_9 = bits(_ppn_data_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE.pw <= _ppn_data_T_9 @[TLB.scala 86:77]
    node _ppn_data_T_10 = bits(_ppn_data_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE.sr <= _ppn_data_T_10 @[TLB.scala 86:77]
    node _ppn_data_T_11 = bits(_ppn_data_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE.sx <= _ppn_data_T_11 @[TLB.scala 86:77]
    node _ppn_data_T_12 = bits(_ppn_data_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE.sw <= _ppn_data_T_12 @[TLB.scala 86:77]
    node _ppn_data_T_13 = bits(_ppn_data_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE.ae <= _ppn_data_T_13 @[TLB.scala 86:77]
    node _ppn_data_T_14 = bits(_ppn_data_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE.g <= _ppn_data_T_14 @[TLB.scala 86:77]
    node _ppn_data_T_15 = bits(_ppn_data_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE.u <= _ppn_data_T_15 @[TLB.scala 86:77]
    node _ppn_data_T_16 = bits(_ppn_data_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE.ppn <= _ppn_data_T_16 @[TLB.scala 86:77]
    inst ppn_data_barrier of OptimizationBarrier_19 @[package.scala 258:25]
    ppn_data_barrier.io is invalid
    ppn_data_barrier.clock <= clock
    ppn_data_barrier.reset <= reset
    ppn_data_barrier.io.x <- _ppn_data_WIRE @[package.scala 266:18]
    wire _ppn_data_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_3 : UInt<35>
    _ppn_data_WIRE_3 is invalid
    _ppn_data_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _ppn_data_T_17 = bits(_ppn_data_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.fragmented_superpage <= _ppn_data_T_17 @[TLB.scala 86:77]
    node _ppn_data_T_18 = bits(_ppn_data_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.c <= _ppn_data_T_18 @[TLB.scala 86:77]
    node _ppn_data_T_19 = bits(_ppn_data_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.eff <= _ppn_data_T_19 @[TLB.scala 86:77]
    node _ppn_data_T_20 = bits(_ppn_data_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.paa <= _ppn_data_T_20 @[TLB.scala 86:77]
    node _ppn_data_T_21 = bits(_ppn_data_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pal <= _ppn_data_T_21 @[TLB.scala 86:77]
    node _ppn_data_T_22 = bits(_ppn_data_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ppp <= _ppn_data_T_22 @[TLB.scala 86:77]
    node _ppn_data_T_23 = bits(_ppn_data_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pr <= _ppn_data_T_23 @[TLB.scala 86:77]
    node _ppn_data_T_24 = bits(_ppn_data_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.px <= _ppn_data_T_24 @[TLB.scala 86:77]
    node _ppn_data_T_25 = bits(_ppn_data_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pw <= _ppn_data_T_25 @[TLB.scala 86:77]
    node _ppn_data_T_26 = bits(_ppn_data_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sr <= _ppn_data_T_26 @[TLB.scala 86:77]
    node _ppn_data_T_27 = bits(_ppn_data_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sx <= _ppn_data_T_27 @[TLB.scala 86:77]
    node _ppn_data_T_28 = bits(_ppn_data_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sw <= _ppn_data_T_28 @[TLB.scala 86:77]
    node _ppn_data_T_29 = bits(_ppn_data_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ae <= _ppn_data_T_29 @[TLB.scala 86:77]
    node _ppn_data_T_30 = bits(_ppn_data_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.g <= _ppn_data_T_30 @[TLB.scala 86:77]
    node _ppn_data_T_31 = bits(_ppn_data_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.u <= _ppn_data_T_31 @[TLB.scala 86:77]
    node _ppn_data_T_32 = bits(_ppn_data_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ppn <= _ppn_data_T_32 @[TLB.scala 86:77]
    inst ppn_data_barrier_1 of OptimizationBarrier_20 @[package.scala 258:25]
    ppn_data_barrier_1.io is invalid
    ppn_data_barrier_1.clock <= clock
    ppn_data_barrier_1.reset <= reset
    ppn_data_barrier_1.io.x <- _ppn_data_WIRE_2 @[package.scala 266:18]
    wire _ppn_data_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_5 : UInt<35>
    _ppn_data_WIRE_5 is invalid
    _ppn_data_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _ppn_data_T_33 = bits(_ppn_data_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.fragmented_superpage <= _ppn_data_T_33 @[TLB.scala 86:77]
    node _ppn_data_T_34 = bits(_ppn_data_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.c <= _ppn_data_T_34 @[TLB.scala 86:77]
    node _ppn_data_T_35 = bits(_ppn_data_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.eff <= _ppn_data_T_35 @[TLB.scala 86:77]
    node _ppn_data_T_36 = bits(_ppn_data_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.paa <= _ppn_data_T_36 @[TLB.scala 86:77]
    node _ppn_data_T_37 = bits(_ppn_data_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pal <= _ppn_data_T_37 @[TLB.scala 86:77]
    node _ppn_data_T_38 = bits(_ppn_data_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ppp <= _ppn_data_T_38 @[TLB.scala 86:77]
    node _ppn_data_T_39 = bits(_ppn_data_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pr <= _ppn_data_T_39 @[TLB.scala 86:77]
    node _ppn_data_T_40 = bits(_ppn_data_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.px <= _ppn_data_T_40 @[TLB.scala 86:77]
    node _ppn_data_T_41 = bits(_ppn_data_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pw <= _ppn_data_T_41 @[TLB.scala 86:77]
    node _ppn_data_T_42 = bits(_ppn_data_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sr <= _ppn_data_T_42 @[TLB.scala 86:77]
    node _ppn_data_T_43 = bits(_ppn_data_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sx <= _ppn_data_T_43 @[TLB.scala 86:77]
    node _ppn_data_T_44 = bits(_ppn_data_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sw <= _ppn_data_T_44 @[TLB.scala 86:77]
    node _ppn_data_T_45 = bits(_ppn_data_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ae <= _ppn_data_T_45 @[TLB.scala 86:77]
    node _ppn_data_T_46 = bits(_ppn_data_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.g <= _ppn_data_T_46 @[TLB.scala 86:77]
    node _ppn_data_T_47 = bits(_ppn_data_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.u <= _ppn_data_T_47 @[TLB.scala 86:77]
    node _ppn_data_T_48 = bits(_ppn_data_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ppn <= _ppn_data_T_48 @[TLB.scala 86:77]
    inst ppn_data_barrier_2 of OptimizationBarrier_21 @[package.scala 258:25]
    ppn_data_barrier_2.io is invalid
    ppn_data_barrier_2.clock <= clock
    ppn_data_barrier_2.reset <= reset
    ppn_data_barrier_2.io.x <- _ppn_data_WIRE_4 @[package.scala 266:18]
    wire _ppn_data_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_7 : UInt<35>
    _ppn_data_WIRE_7 is invalid
    _ppn_data_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _ppn_data_T_49 = bits(_ppn_data_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.fragmented_superpage <= _ppn_data_T_49 @[TLB.scala 86:77]
    node _ppn_data_T_50 = bits(_ppn_data_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.c <= _ppn_data_T_50 @[TLB.scala 86:77]
    node _ppn_data_T_51 = bits(_ppn_data_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.eff <= _ppn_data_T_51 @[TLB.scala 86:77]
    node _ppn_data_T_52 = bits(_ppn_data_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.paa <= _ppn_data_T_52 @[TLB.scala 86:77]
    node _ppn_data_T_53 = bits(_ppn_data_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pal <= _ppn_data_T_53 @[TLB.scala 86:77]
    node _ppn_data_T_54 = bits(_ppn_data_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ppp <= _ppn_data_T_54 @[TLB.scala 86:77]
    node _ppn_data_T_55 = bits(_ppn_data_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pr <= _ppn_data_T_55 @[TLB.scala 86:77]
    node _ppn_data_T_56 = bits(_ppn_data_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.px <= _ppn_data_T_56 @[TLB.scala 86:77]
    node _ppn_data_T_57 = bits(_ppn_data_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pw <= _ppn_data_T_57 @[TLB.scala 86:77]
    node _ppn_data_T_58 = bits(_ppn_data_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sr <= _ppn_data_T_58 @[TLB.scala 86:77]
    node _ppn_data_T_59 = bits(_ppn_data_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sx <= _ppn_data_T_59 @[TLB.scala 86:77]
    node _ppn_data_T_60 = bits(_ppn_data_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sw <= _ppn_data_T_60 @[TLB.scala 86:77]
    node _ppn_data_T_61 = bits(_ppn_data_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ae <= _ppn_data_T_61 @[TLB.scala 86:77]
    node _ppn_data_T_62 = bits(_ppn_data_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.g <= _ppn_data_T_62 @[TLB.scala 86:77]
    node _ppn_data_T_63 = bits(_ppn_data_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.u <= _ppn_data_T_63 @[TLB.scala 86:77]
    node _ppn_data_T_64 = bits(_ppn_data_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ppn <= _ppn_data_T_64 @[TLB.scala 86:77]
    inst ppn_data_barrier_3 of OptimizationBarrier_22 @[package.scala 258:25]
    ppn_data_barrier_3.io is invalid
    ppn_data_barrier_3.clock <= clock
    ppn_data_barrier_3.reset <= reset
    ppn_data_barrier_3.io.x <- _ppn_data_WIRE_6 @[package.scala 266:18]
    wire _ppn_data_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_9 : UInt<35>
    _ppn_data_WIRE_9 is invalid
    _ppn_data_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _ppn_data_T_65 = bits(_ppn_data_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.fragmented_superpage <= _ppn_data_T_65 @[TLB.scala 86:77]
    node _ppn_data_T_66 = bits(_ppn_data_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.c <= _ppn_data_T_66 @[TLB.scala 86:77]
    node _ppn_data_T_67 = bits(_ppn_data_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.eff <= _ppn_data_T_67 @[TLB.scala 86:77]
    node _ppn_data_T_68 = bits(_ppn_data_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.paa <= _ppn_data_T_68 @[TLB.scala 86:77]
    node _ppn_data_T_69 = bits(_ppn_data_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pal <= _ppn_data_T_69 @[TLB.scala 86:77]
    node _ppn_data_T_70 = bits(_ppn_data_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ppp <= _ppn_data_T_70 @[TLB.scala 86:77]
    node _ppn_data_T_71 = bits(_ppn_data_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pr <= _ppn_data_T_71 @[TLB.scala 86:77]
    node _ppn_data_T_72 = bits(_ppn_data_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.px <= _ppn_data_T_72 @[TLB.scala 86:77]
    node _ppn_data_T_73 = bits(_ppn_data_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pw <= _ppn_data_T_73 @[TLB.scala 86:77]
    node _ppn_data_T_74 = bits(_ppn_data_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sr <= _ppn_data_T_74 @[TLB.scala 86:77]
    node _ppn_data_T_75 = bits(_ppn_data_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sx <= _ppn_data_T_75 @[TLB.scala 86:77]
    node _ppn_data_T_76 = bits(_ppn_data_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sw <= _ppn_data_T_76 @[TLB.scala 86:77]
    node _ppn_data_T_77 = bits(_ppn_data_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ae <= _ppn_data_T_77 @[TLB.scala 86:77]
    node _ppn_data_T_78 = bits(_ppn_data_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.g <= _ppn_data_T_78 @[TLB.scala 86:77]
    node _ppn_data_T_79 = bits(_ppn_data_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.u <= _ppn_data_T_79 @[TLB.scala 86:77]
    node _ppn_data_T_80 = bits(_ppn_data_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ppn <= _ppn_data_T_80 @[TLB.scala 86:77]
    inst ppn_data_barrier_4 of OptimizationBarrier_23 @[package.scala 258:25]
    ppn_data_barrier_4.io is invalid
    ppn_data_barrier_4.clock <= clock
    ppn_data_barrier_4.reset <= reset
    ppn_data_barrier_4.io.x <- _ppn_data_WIRE_8 @[package.scala 266:18]
    wire _ppn_data_WIRE_10 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_10 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_11 : UInt<35>
    _ppn_data_WIRE_11 is invalid
    _ppn_data_WIRE_11 <= special_entry.data[UInt<1>("h00")]
    node _ppn_data_T_81 = bits(_ppn_data_WIRE_11, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.fragmented_superpage <= _ppn_data_T_81 @[TLB.scala 86:77]
    node _ppn_data_T_82 = bits(_ppn_data_WIRE_11, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.c <= _ppn_data_T_82 @[TLB.scala 86:77]
    node _ppn_data_T_83 = bits(_ppn_data_WIRE_11, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.eff <= _ppn_data_T_83 @[TLB.scala 86:77]
    node _ppn_data_T_84 = bits(_ppn_data_WIRE_11, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.paa <= _ppn_data_T_84 @[TLB.scala 86:77]
    node _ppn_data_T_85 = bits(_ppn_data_WIRE_11, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pal <= _ppn_data_T_85 @[TLB.scala 86:77]
    node _ppn_data_T_86 = bits(_ppn_data_WIRE_11, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ppp <= _ppn_data_T_86 @[TLB.scala 86:77]
    node _ppn_data_T_87 = bits(_ppn_data_WIRE_11, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pr <= _ppn_data_T_87 @[TLB.scala 86:77]
    node _ppn_data_T_88 = bits(_ppn_data_WIRE_11, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.px <= _ppn_data_T_88 @[TLB.scala 86:77]
    node _ppn_data_T_89 = bits(_ppn_data_WIRE_11, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pw <= _ppn_data_T_89 @[TLB.scala 86:77]
    node _ppn_data_T_90 = bits(_ppn_data_WIRE_11, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sr <= _ppn_data_T_90 @[TLB.scala 86:77]
    node _ppn_data_T_91 = bits(_ppn_data_WIRE_11, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sx <= _ppn_data_T_91 @[TLB.scala 86:77]
    node _ppn_data_T_92 = bits(_ppn_data_WIRE_11, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sw <= _ppn_data_T_92 @[TLB.scala 86:77]
    node _ppn_data_T_93 = bits(_ppn_data_WIRE_11, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ae <= _ppn_data_T_93 @[TLB.scala 86:77]
    node _ppn_data_T_94 = bits(_ppn_data_WIRE_11, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.g <= _ppn_data_T_94 @[TLB.scala 86:77]
    node _ppn_data_T_95 = bits(_ppn_data_WIRE_11, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.u <= _ppn_data_T_95 @[TLB.scala 86:77]
    node _ppn_data_T_96 = bits(_ppn_data_WIRE_11, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ppn <= _ppn_data_T_96 @[TLB.scala 86:77]
    inst ppn_data_barrier_5 of OptimizationBarrier_24 @[package.scala 258:25]
    ppn_data_barrier_5.io is invalid
    ppn_data_barrier_5.clock <= clock
    ppn_data_barrier_5.reset <= reset
    ppn_data_barrier_5.io.x <- _ppn_data_WIRE_10 @[package.scala 266:18]
    node _ppn_T_1 = bits(vpn, 19, 0) @[TLB.scala 217:77]
    node _ppn_T_2 = mux(hitsVec_0, ppn_data_barrier.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_3 = mux(hitsVec_1, ppn_data_barrier_1.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_4 = mux(hitsVec_2, ppn_data_barrier_2.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_5 = mux(hitsVec_3, ppn_data_barrier_3.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_6 = mux(hitsVec_4, ppn_data_barrier_4.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_7 = mux(hitsVec_5, ppn_data_barrier_5.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_8 = mux(_ppn_T, _ppn_T_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_9 = or(_ppn_T_2, _ppn_T_3) @[Mux.scala 27:72]
    node _ppn_T_10 = or(_ppn_T_9, _ppn_T_4) @[Mux.scala 27:72]
    node _ppn_T_11 = or(_ppn_T_10, _ppn_T_5) @[Mux.scala 27:72]
    node _ppn_T_12 = or(_ppn_T_11, _ppn_T_6) @[Mux.scala 27:72]
    node _ppn_T_13 = or(_ppn_T_12, _ppn_T_7) @[Mux.scala 27:72]
    node _ppn_T_14 = or(_ppn_T_13, _ppn_T_8) @[Mux.scala 27:72]
    wire ppn : UInt<20> @[Mux.scala 27:72]
    ppn <= _ppn_T_14 @[Mux.scala 27:72]
    when do_refill : @[TLB.scala 220:20]
      wire newEntry : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 222:24]
      newEntry is invalid @[TLB.scala 222:24]
      newEntry.ppn <= io.ptw.resp.bits.pte.ppn @[TLB.scala 223:18]
      newEntry.c <= cacheable @[TLB.scala 224:16]
      newEntry.u <= io.ptw.resp.bits.pte.u @[TLB.scala 225:16]
      node _newEntry_g_T = and(io.ptw.resp.bits.pte.g, io.ptw.resp.bits.pte.v) @[TLB.scala 226:25]
      newEntry.g <= _newEntry_g_T @[TLB.scala 226:16]
      newEntry.ae <= io.ptw.resp.bits.ae @[TLB.scala 227:17]
      node _newEntry_sr_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sr_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sr_T) @[PTW.scala 73:44]
      node _newEntry_sr_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sr_T_1) @[PTW.scala 73:38]
      node _newEntry_sr_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sr_T_2) @[PTW.scala 73:32]
      node _newEntry_sr_T_4 = and(_newEntry_sr_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sr_T_5 = and(_newEntry_sr_T_4, io.ptw.resp.bits.pte.r) @[PTW.scala 77:35]
      newEntry.sr <= _newEntry_sr_T_5 @[TLB.scala 228:17]
      node _newEntry_sw_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sw_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sw_T) @[PTW.scala 73:44]
      node _newEntry_sw_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sw_T_1) @[PTW.scala 73:38]
      node _newEntry_sw_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sw_T_2) @[PTW.scala 73:32]
      node _newEntry_sw_T_4 = and(_newEntry_sw_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sw_T_5 = and(_newEntry_sw_T_4, io.ptw.resp.bits.pte.w) @[PTW.scala 78:35]
      node _newEntry_sw_T_6 = and(_newEntry_sw_T_5, io.ptw.resp.bits.pte.d) @[PTW.scala 78:40]
      newEntry.sw <= _newEntry_sw_T_6 @[TLB.scala 229:17]
      node _newEntry_sx_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sx_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sx_T) @[PTW.scala 73:44]
      node _newEntry_sx_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sx_T_1) @[PTW.scala 73:38]
      node _newEntry_sx_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sx_T_2) @[PTW.scala 73:32]
      node _newEntry_sx_T_4 = and(_newEntry_sx_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sx_T_5 = and(_newEntry_sx_T_4, io.ptw.resp.bits.pte.x) @[PTW.scala 79:35]
      newEntry.sx <= _newEntry_sx_T_5 @[TLB.scala 230:17]
      newEntry.pr <= prot_r @[TLB.scala 231:17]
      newEntry.pw <= prot_w @[TLB.scala 232:17]
      newEntry.px <= prot_x @[TLB.scala 233:17]
      newEntry.ppp <= prot_pp @[TLB.scala 234:18]
      newEntry.pal <= prot_al @[TLB.scala 235:18]
      newEntry.paa <= prot_aa @[TLB.scala 236:18]
      newEntry.eff <= prot_eff @[TLB.scala 237:18]
      newEntry.fragmented_superpage <= io.ptw.resp.bits.fragmented_superpage @[TLB.scala 238:35]
      node _T = eq(io.ptw.resp.bits.homogeneous, UInt<1>("h00")) @[TLB.scala 240:37]
      node _T_1 = and(UInt<1>("h01"), _T) @[TLB.scala 240:34]
      when _T_1 : @[TLB.scala 240:68]
        special_entry.tag <= r_refill_tag @[TLB.scala 118:14]
        node _special_entry_level_T = bits(io.ptw.resp.bits.level, 0, 0) @[package.scala 154:13]
        special_entry.level <= _special_entry_level_T @[TLB.scala 119:16]
        special_entry.valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
        node special_entry_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
        node special_entry_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
        node special_entry_data_0_lo_lo = cat(special_entry_data_0_lo_lo_hi, special_entry_data_0_lo_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi = cat(special_entry_data_0_lo_hi_hi, special_entry_data_0_lo_hi_lo) @[TLB.scala 123:24]
        node special_entry_data_0_lo = cat(special_entry_data_0_lo_hi, special_entry_data_0_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo = cat(special_entry_data_0_hi_lo_hi, special_entry_data_0_hi_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi = cat(special_entry_data_0_hi_hi_hi, special_entry_data_0_hi_hi_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi = cat(special_entry_data_0_hi_hi, special_entry_data_0_hi_lo) @[TLB.scala 123:24]
        node _special_entry_data_0_T = cat(special_entry_data_0_hi, special_entry_data_0_lo) @[TLB.scala 123:24]
        special_entry.data[UInt<1>("h00")] <= _special_entry_data_0_T @[TLB.scala 123:15]
        when invalidate_refill : @[TLB.scala 243:34]
          special_entry.valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
          skip @[TLB.scala 243:34]
        skip @[TLB.scala 240:68]
      else : @[TLB.scala 245:54]
        node _T_2 = lt(io.ptw.resp.bits.level, UInt<1>("h01")) @[TLB.scala 245:40]
        when _T_2 : @[TLB.scala 245:54]
          node _T_3 = eq(r_superpage_repl_addr, UInt<1>("h00")) @[TLB.scala 246:82]
          when _T_3 : @[TLB.scala 246:89]
            superpage_entries[0].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[0].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[0].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_0_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_lo = cat(superpage_entries_0_data_0_lo_lo_hi, superpage_entries_0_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi = cat(superpage_entries_0_data_0_lo_hi_hi, superpage_entries_0_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo = cat(superpage_entries_0_data_0_lo_hi, superpage_entries_0_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo = cat(superpage_entries_0_data_0_hi_lo_hi, superpage_entries_0_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi = cat(superpage_entries_0_data_0_hi_hi_hi, superpage_entries_0_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi = cat(superpage_entries_0_data_0_hi_hi, superpage_entries_0_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_0_data_0_T = cat(superpage_entries_0_data_0_hi, superpage_entries_0_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[0].data[UInt<1>("h00")] <= _superpage_entries_0_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_4 = eq(r_superpage_repl_addr, UInt<1>("h01")) @[TLB.scala 246:82]
          when _T_4 : @[TLB.scala 246:89]
            superpage_entries[1].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[1].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[1].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_1_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_lo = cat(superpage_entries_1_data_0_lo_lo_hi, superpage_entries_1_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi = cat(superpage_entries_1_data_0_lo_hi_hi, superpage_entries_1_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo = cat(superpage_entries_1_data_0_lo_hi, superpage_entries_1_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo = cat(superpage_entries_1_data_0_hi_lo_hi, superpage_entries_1_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi = cat(superpage_entries_1_data_0_hi_hi_hi, superpage_entries_1_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi = cat(superpage_entries_1_data_0_hi_hi, superpage_entries_1_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_1_data_0_T = cat(superpage_entries_1_data_0_hi, superpage_entries_1_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[1].data[UInt<1>("h00")] <= _superpage_entries_1_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[1].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_5 = eq(r_superpage_repl_addr, UInt<2>("h02")) @[TLB.scala 246:82]
          when _T_5 : @[TLB.scala 246:89]
            superpage_entries[2].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[2].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[2].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_2_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_lo = cat(superpage_entries_2_data_0_lo_lo_hi, superpage_entries_2_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi = cat(superpage_entries_2_data_0_lo_hi_hi, superpage_entries_2_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo = cat(superpage_entries_2_data_0_lo_hi, superpage_entries_2_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo = cat(superpage_entries_2_data_0_hi_lo_hi, superpage_entries_2_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi = cat(superpage_entries_2_data_0_hi_hi_hi, superpage_entries_2_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi = cat(superpage_entries_2_data_0_hi_hi, superpage_entries_2_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_2_data_0_T = cat(superpage_entries_2_data_0_hi, superpage_entries_2_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[2].data[UInt<1>("h00")] <= _superpage_entries_2_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[2].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_6 = eq(r_superpage_repl_addr, UInt<2>("h03")) @[TLB.scala 246:82]
          when _T_6 : @[TLB.scala 246:89]
            superpage_entries[3].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[3].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[3].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_3_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_lo = cat(superpage_entries_3_data_0_lo_lo_hi, superpage_entries_3_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi = cat(superpage_entries_3_data_0_lo_hi_hi, superpage_entries_3_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo = cat(superpage_entries_3_data_0_lo_hi, superpage_entries_3_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo = cat(superpage_entries_3_data_0_hi_lo_hi, superpage_entries_3_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi = cat(superpage_entries_3_data_0_hi_hi_hi, superpage_entries_3_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi = cat(superpage_entries_3_data_0_hi_hi, superpage_entries_3_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_3_data_0_T = cat(superpage_entries_3_data_0_hi, superpage_entries_3_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[3].data[UInt<1>("h00")] <= _superpage_entries_3_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[3].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          skip @[TLB.scala 245:54]
        else : @[TLB.scala 250:17]
          node waddr = mux(r_sectored_hit, r_sectored_hit_addr, r_sectored_repl_addr) @[TLB.scala 252:22]
          node _T_7 = eq(waddr, UInt<1>("h00")) @[TLB.scala 253:75]
          when _T_7 : @[TLB.scala 253:82]
            node _T_8 = eq(r_sectored_hit, UInt<1>("h00")) @[TLB.scala 254:15]
            when _T_8 : @[TLB.scala 254:32]
              sectored_entries[UInt<1>("h00")][0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[1] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[2] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[3] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 254:32]
            sectored_entries[UInt<1>("h00")][0].tag <= r_refill_tag @[TLB.scala 118:14]
            sectored_entries[UInt<1>("h00")][0].level <= UInt<1>("h00") @[TLB.scala 119:16]
            node idx = bits(r_refill_tag, 1, 0) @[package.scala 154:13]
            sectored_entries[UInt<1>("h00")][0].valid[idx] <= UInt<1>("h01") @[TLB.scala 122:16]
            node sectored_entries_0_0_data_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_lo = cat(sectored_entries_0_0_data_lo_lo_hi, sectored_entries_0_0_data_lo_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi = cat(sectored_entries_0_0_data_lo_hi_hi, sectored_entries_0_0_data_lo_hi_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo = cat(sectored_entries_0_0_data_lo_hi, sectored_entries_0_0_data_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo = cat(sectored_entries_0_0_data_hi_lo_hi, sectored_entries_0_0_data_hi_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi = cat(sectored_entries_0_0_data_hi_hi_hi, sectored_entries_0_0_data_hi_hi_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi = cat(sectored_entries_0_0_data_hi_hi, sectored_entries_0_0_data_hi_lo) @[TLB.scala 123:24]
            node _sectored_entries_0_0_data_T = cat(sectored_entries_0_0_data_hi, sectored_entries_0_0_data_lo) @[TLB.scala 123:24]
            sectored_entries[UInt<1>("h00")][0].data[idx] <= _sectored_entries_0_0_data_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 256:34]
              sectored_entries[UInt<1>("h00")][0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[1] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[2] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[3] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 256:34]
            skip @[TLB.scala 253:82]
          skip @[TLB.scala 250:17]
      skip @[TLB.scala 220:20]
    node _entries_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _entries_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_1 : UInt<35>
    _entries_WIRE_1 is invalid
    _entries_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_entries_T]
    node _entries_T_1 = bits(_entries_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE.fragmented_superpage <= _entries_T_1 @[TLB.scala 86:77]
    node _entries_T_2 = bits(_entries_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE.c <= _entries_T_2 @[TLB.scala 86:77]
    node _entries_T_3 = bits(_entries_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE.eff <= _entries_T_3 @[TLB.scala 86:77]
    node _entries_T_4 = bits(_entries_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE.paa <= _entries_T_4 @[TLB.scala 86:77]
    node _entries_T_5 = bits(_entries_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE.pal <= _entries_T_5 @[TLB.scala 86:77]
    node _entries_T_6 = bits(_entries_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE.ppp <= _entries_T_6 @[TLB.scala 86:77]
    node _entries_T_7 = bits(_entries_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE.pr <= _entries_T_7 @[TLB.scala 86:77]
    node _entries_T_8 = bits(_entries_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE.px <= _entries_T_8 @[TLB.scala 86:77]
    node _entries_T_9 = bits(_entries_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE.pw <= _entries_T_9 @[TLB.scala 86:77]
    node _entries_T_10 = bits(_entries_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE.sr <= _entries_T_10 @[TLB.scala 86:77]
    node _entries_T_11 = bits(_entries_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE.sx <= _entries_T_11 @[TLB.scala 86:77]
    node _entries_T_12 = bits(_entries_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE.sw <= _entries_T_12 @[TLB.scala 86:77]
    node _entries_T_13 = bits(_entries_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE.ae <= _entries_T_13 @[TLB.scala 86:77]
    node _entries_T_14 = bits(_entries_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE.g <= _entries_T_14 @[TLB.scala 86:77]
    node _entries_T_15 = bits(_entries_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE.u <= _entries_T_15 @[TLB.scala 86:77]
    node _entries_T_16 = bits(_entries_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE.ppn <= _entries_T_16 @[TLB.scala 86:77]
    inst entries_barrier of OptimizationBarrier_25 @[package.scala 258:25]
    entries_barrier.io is invalid
    entries_barrier.clock <= clock
    entries_barrier.reset <= reset
    entries_barrier.io.x <- _entries_WIRE @[package.scala 266:18]
    wire _entries_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_3 : UInt<35>
    _entries_WIRE_3 is invalid
    _entries_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _entries_T_17 = bits(_entries_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_2.fragmented_superpage <= _entries_T_17 @[TLB.scala 86:77]
    node _entries_T_18 = bits(_entries_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_2.c <= _entries_T_18 @[TLB.scala 86:77]
    node _entries_T_19 = bits(_entries_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_2.eff <= _entries_T_19 @[TLB.scala 86:77]
    node _entries_T_20 = bits(_entries_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_2.paa <= _entries_T_20 @[TLB.scala 86:77]
    node _entries_T_21 = bits(_entries_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_2.pal <= _entries_T_21 @[TLB.scala 86:77]
    node _entries_T_22 = bits(_entries_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_2.ppp <= _entries_T_22 @[TLB.scala 86:77]
    node _entries_T_23 = bits(_entries_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_2.pr <= _entries_T_23 @[TLB.scala 86:77]
    node _entries_T_24 = bits(_entries_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_2.px <= _entries_T_24 @[TLB.scala 86:77]
    node _entries_T_25 = bits(_entries_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_2.pw <= _entries_T_25 @[TLB.scala 86:77]
    node _entries_T_26 = bits(_entries_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_2.sr <= _entries_T_26 @[TLB.scala 86:77]
    node _entries_T_27 = bits(_entries_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_2.sx <= _entries_T_27 @[TLB.scala 86:77]
    node _entries_T_28 = bits(_entries_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_2.sw <= _entries_T_28 @[TLB.scala 86:77]
    node _entries_T_29 = bits(_entries_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_2.ae <= _entries_T_29 @[TLB.scala 86:77]
    node _entries_T_30 = bits(_entries_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_2.g <= _entries_T_30 @[TLB.scala 86:77]
    node _entries_T_31 = bits(_entries_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_2.u <= _entries_T_31 @[TLB.scala 86:77]
    node _entries_T_32 = bits(_entries_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_2.ppn <= _entries_T_32 @[TLB.scala 86:77]
    inst entries_barrier_1 of OptimizationBarrier_26 @[package.scala 258:25]
    entries_barrier_1.io is invalid
    entries_barrier_1.clock <= clock
    entries_barrier_1.reset <= reset
    entries_barrier_1.io.x <- _entries_WIRE_2 @[package.scala 266:18]
    wire _entries_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_5 : UInt<35>
    _entries_WIRE_5 is invalid
    _entries_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _entries_T_33 = bits(_entries_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_4.fragmented_superpage <= _entries_T_33 @[TLB.scala 86:77]
    node _entries_T_34 = bits(_entries_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_4.c <= _entries_T_34 @[TLB.scala 86:77]
    node _entries_T_35 = bits(_entries_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_4.eff <= _entries_T_35 @[TLB.scala 86:77]
    node _entries_T_36 = bits(_entries_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_4.paa <= _entries_T_36 @[TLB.scala 86:77]
    node _entries_T_37 = bits(_entries_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_4.pal <= _entries_T_37 @[TLB.scala 86:77]
    node _entries_T_38 = bits(_entries_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_4.ppp <= _entries_T_38 @[TLB.scala 86:77]
    node _entries_T_39 = bits(_entries_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_4.pr <= _entries_T_39 @[TLB.scala 86:77]
    node _entries_T_40 = bits(_entries_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_4.px <= _entries_T_40 @[TLB.scala 86:77]
    node _entries_T_41 = bits(_entries_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_4.pw <= _entries_T_41 @[TLB.scala 86:77]
    node _entries_T_42 = bits(_entries_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_4.sr <= _entries_T_42 @[TLB.scala 86:77]
    node _entries_T_43 = bits(_entries_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_4.sx <= _entries_T_43 @[TLB.scala 86:77]
    node _entries_T_44 = bits(_entries_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_4.sw <= _entries_T_44 @[TLB.scala 86:77]
    node _entries_T_45 = bits(_entries_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_4.ae <= _entries_T_45 @[TLB.scala 86:77]
    node _entries_T_46 = bits(_entries_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_4.g <= _entries_T_46 @[TLB.scala 86:77]
    node _entries_T_47 = bits(_entries_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_4.u <= _entries_T_47 @[TLB.scala 86:77]
    node _entries_T_48 = bits(_entries_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_4.ppn <= _entries_T_48 @[TLB.scala 86:77]
    inst entries_barrier_2 of OptimizationBarrier_27 @[package.scala 258:25]
    entries_barrier_2.io is invalid
    entries_barrier_2.clock <= clock
    entries_barrier_2.reset <= reset
    entries_barrier_2.io.x <- _entries_WIRE_4 @[package.scala 266:18]
    wire _entries_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_7 : UInt<35>
    _entries_WIRE_7 is invalid
    _entries_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _entries_T_49 = bits(_entries_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_6.fragmented_superpage <= _entries_T_49 @[TLB.scala 86:77]
    node _entries_T_50 = bits(_entries_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_6.c <= _entries_T_50 @[TLB.scala 86:77]
    node _entries_T_51 = bits(_entries_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_6.eff <= _entries_T_51 @[TLB.scala 86:77]
    node _entries_T_52 = bits(_entries_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_6.paa <= _entries_T_52 @[TLB.scala 86:77]
    node _entries_T_53 = bits(_entries_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_6.pal <= _entries_T_53 @[TLB.scala 86:77]
    node _entries_T_54 = bits(_entries_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_6.ppp <= _entries_T_54 @[TLB.scala 86:77]
    node _entries_T_55 = bits(_entries_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_6.pr <= _entries_T_55 @[TLB.scala 86:77]
    node _entries_T_56 = bits(_entries_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_6.px <= _entries_T_56 @[TLB.scala 86:77]
    node _entries_T_57 = bits(_entries_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_6.pw <= _entries_T_57 @[TLB.scala 86:77]
    node _entries_T_58 = bits(_entries_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_6.sr <= _entries_T_58 @[TLB.scala 86:77]
    node _entries_T_59 = bits(_entries_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_6.sx <= _entries_T_59 @[TLB.scala 86:77]
    node _entries_T_60 = bits(_entries_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_6.sw <= _entries_T_60 @[TLB.scala 86:77]
    node _entries_T_61 = bits(_entries_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_6.ae <= _entries_T_61 @[TLB.scala 86:77]
    node _entries_T_62 = bits(_entries_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_6.g <= _entries_T_62 @[TLB.scala 86:77]
    node _entries_T_63 = bits(_entries_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_6.u <= _entries_T_63 @[TLB.scala 86:77]
    node _entries_T_64 = bits(_entries_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_6.ppn <= _entries_T_64 @[TLB.scala 86:77]
    inst entries_barrier_3 of OptimizationBarrier_28 @[package.scala 258:25]
    entries_barrier_3.io is invalid
    entries_barrier_3.clock <= clock
    entries_barrier_3.reset <= reset
    entries_barrier_3.io.x <- _entries_WIRE_6 @[package.scala 266:18]
    wire _entries_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_9 : UInt<35>
    _entries_WIRE_9 is invalid
    _entries_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _entries_T_65 = bits(_entries_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_8.fragmented_superpage <= _entries_T_65 @[TLB.scala 86:77]
    node _entries_T_66 = bits(_entries_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_8.c <= _entries_T_66 @[TLB.scala 86:77]
    node _entries_T_67 = bits(_entries_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_8.eff <= _entries_T_67 @[TLB.scala 86:77]
    node _entries_T_68 = bits(_entries_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_8.paa <= _entries_T_68 @[TLB.scala 86:77]
    node _entries_T_69 = bits(_entries_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_8.pal <= _entries_T_69 @[TLB.scala 86:77]
    node _entries_T_70 = bits(_entries_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_8.ppp <= _entries_T_70 @[TLB.scala 86:77]
    node _entries_T_71 = bits(_entries_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_8.pr <= _entries_T_71 @[TLB.scala 86:77]
    node _entries_T_72 = bits(_entries_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_8.px <= _entries_T_72 @[TLB.scala 86:77]
    node _entries_T_73 = bits(_entries_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_8.pw <= _entries_T_73 @[TLB.scala 86:77]
    node _entries_T_74 = bits(_entries_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_8.sr <= _entries_T_74 @[TLB.scala 86:77]
    node _entries_T_75 = bits(_entries_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_8.sx <= _entries_T_75 @[TLB.scala 86:77]
    node _entries_T_76 = bits(_entries_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_8.sw <= _entries_T_76 @[TLB.scala 86:77]
    node _entries_T_77 = bits(_entries_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_8.ae <= _entries_T_77 @[TLB.scala 86:77]
    node _entries_T_78 = bits(_entries_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_8.g <= _entries_T_78 @[TLB.scala 86:77]
    node _entries_T_79 = bits(_entries_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_8.u <= _entries_T_79 @[TLB.scala 86:77]
    node _entries_T_80 = bits(_entries_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_8.ppn <= _entries_T_80 @[TLB.scala 86:77]
    inst entries_barrier_4 of OptimizationBarrier_29 @[package.scala 258:25]
    entries_barrier_4.io is invalid
    entries_barrier_4.clock <= clock
    entries_barrier_4.reset <= reset
    entries_barrier_4.io.x <- _entries_WIRE_8 @[package.scala 266:18]
    wire _entries_WIRE_10 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_10 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_11 : UInt<35>
    _entries_WIRE_11 is invalid
    _entries_WIRE_11 <= special_entry.data[UInt<1>("h00")]
    node _entries_T_81 = bits(_entries_WIRE_11, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_10.fragmented_superpage <= _entries_T_81 @[TLB.scala 86:77]
    node _entries_T_82 = bits(_entries_WIRE_11, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_10.c <= _entries_T_82 @[TLB.scala 86:77]
    node _entries_T_83 = bits(_entries_WIRE_11, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_10.eff <= _entries_T_83 @[TLB.scala 86:77]
    node _entries_T_84 = bits(_entries_WIRE_11, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_10.paa <= _entries_T_84 @[TLB.scala 86:77]
    node _entries_T_85 = bits(_entries_WIRE_11, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_10.pal <= _entries_T_85 @[TLB.scala 86:77]
    node _entries_T_86 = bits(_entries_WIRE_11, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_10.ppp <= _entries_T_86 @[TLB.scala 86:77]
    node _entries_T_87 = bits(_entries_WIRE_11, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_10.pr <= _entries_T_87 @[TLB.scala 86:77]
    node _entries_T_88 = bits(_entries_WIRE_11, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_10.px <= _entries_T_88 @[TLB.scala 86:77]
    node _entries_T_89 = bits(_entries_WIRE_11, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_10.pw <= _entries_T_89 @[TLB.scala 86:77]
    node _entries_T_90 = bits(_entries_WIRE_11, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_10.sr <= _entries_T_90 @[TLB.scala 86:77]
    node _entries_T_91 = bits(_entries_WIRE_11, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_10.sx <= _entries_T_91 @[TLB.scala 86:77]
    node _entries_T_92 = bits(_entries_WIRE_11, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_10.sw <= _entries_T_92 @[TLB.scala 86:77]
    node _entries_T_93 = bits(_entries_WIRE_11, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_10.ae <= _entries_T_93 @[TLB.scala 86:77]
    node _entries_T_94 = bits(_entries_WIRE_11, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_10.g <= _entries_T_94 @[TLB.scala 86:77]
    node _entries_T_95 = bits(_entries_WIRE_11, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_10.u <= _entries_T_95 @[TLB.scala 86:77]
    node _entries_T_96 = bits(_entries_WIRE_11, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_10.ppn <= _entries_T_96 @[TLB.scala 86:77]
    inst entries_barrier_5 of OptimizationBarrier_30 @[package.scala 258:25]
    entries_barrier_5.io is invalid
    entries_barrier_5.clock <= clock
    entries_barrier_5.reset <= reset
    entries_barrier_5.io.x <- _entries_WIRE_10 @[package.scala 266:18]
    node _normal_entries_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _normal_entries_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_1 : UInt<35>
    _normal_entries_WIRE_1 is invalid
    _normal_entries_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_normal_entries_T]
    node _normal_entries_T_1 = bits(_normal_entries_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE.fragmented_superpage <= _normal_entries_T_1 @[TLB.scala 86:77]
    node _normal_entries_T_2 = bits(_normal_entries_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE.c <= _normal_entries_T_2 @[TLB.scala 86:77]
    node _normal_entries_T_3 = bits(_normal_entries_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE.eff <= _normal_entries_T_3 @[TLB.scala 86:77]
    node _normal_entries_T_4 = bits(_normal_entries_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE.paa <= _normal_entries_T_4 @[TLB.scala 86:77]
    node _normal_entries_T_5 = bits(_normal_entries_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE.pal <= _normal_entries_T_5 @[TLB.scala 86:77]
    node _normal_entries_T_6 = bits(_normal_entries_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE.ppp <= _normal_entries_T_6 @[TLB.scala 86:77]
    node _normal_entries_T_7 = bits(_normal_entries_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE.pr <= _normal_entries_T_7 @[TLB.scala 86:77]
    node _normal_entries_T_8 = bits(_normal_entries_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE.px <= _normal_entries_T_8 @[TLB.scala 86:77]
    node _normal_entries_T_9 = bits(_normal_entries_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE.pw <= _normal_entries_T_9 @[TLB.scala 86:77]
    node _normal_entries_T_10 = bits(_normal_entries_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE.sr <= _normal_entries_T_10 @[TLB.scala 86:77]
    node _normal_entries_T_11 = bits(_normal_entries_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE.sx <= _normal_entries_T_11 @[TLB.scala 86:77]
    node _normal_entries_T_12 = bits(_normal_entries_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE.sw <= _normal_entries_T_12 @[TLB.scala 86:77]
    node _normal_entries_T_13 = bits(_normal_entries_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE.ae <= _normal_entries_T_13 @[TLB.scala 86:77]
    node _normal_entries_T_14 = bits(_normal_entries_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE.g <= _normal_entries_T_14 @[TLB.scala 86:77]
    node _normal_entries_T_15 = bits(_normal_entries_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE.u <= _normal_entries_T_15 @[TLB.scala 86:77]
    node _normal_entries_T_16 = bits(_normal_entries_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE.ppn <= _normal_entries_T_16 @[TLB.scala 86:77]
    inst normal_entries_barrier of OptimizationBarrier_31 @[package.scala 258:25]
    normal_entries_barrier.io is invalid
    normal_entries_barrier.clock <= clock
    normal_entries_barrier.reset <= reset
    normal_entries_barrier.io.x <- _normal_entries_WIRE @[package.scala 266:18]
    wire _normal_entries_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_3 : UInt<35>
    _normal_entries_WIRE_3 is invalid
    _normal_entries_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _normal_entries_T_17 = bits(_normal_entries_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.fragmented_superpage <= _normal_entries_T_17 @[TLB.scala 86:77]
    node _normal_entries_T_18 = bits(_normal_entries_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.c <= _normal_entries_T_18 @[TLB.scala 86:77]
    node _normal_entries_T_19 = bits(_normal_entries_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.eff <= _normal_entries_T_19 @[TLB.scala 86:77]
    node _normal_entries_T_20 = bits(_normal_entries_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.paa <= _normal_entries_T_20 @[TLB.scala 86:77]
    node _normal_entries_T_21 = bits(_normal_entries_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pal <= _normal_entries_T_21 @[TLB.scala 86:77]
    node _normal_entries_T_22 = bits(_normal_entries_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ppp <= _normal_entries_T_22 @[TLB.scala 86:77]
    node _normal_entries_T_23 = bits(_normal_entries_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pr <= _normal_entries_T_23 @[TLB.scala 86:77]
    node _normal_entries_T_24 = bits(_normal_entries_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.px <= _normal_entries_T_24 @[TLB.scala 86:77]
    node _normal_entries_T_25 = bits(_normal_entries_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pw <= _normal_entries_T_25 @[TLB.scala 86:77]
    node _normal_entries_T_26 = bits(_normal_entries_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sr <= _normal_entries_T_26 @[TLB.scala 86:77]
    node _normal_entries_T_27 = bits(_normal_entries_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sx <= _normal_entries_T_27 @[TLB.scala 86:77]
    node _normal_entries_T_28 = bits(_normal_entries_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sw <= _normal_entries_T_28 @[TLB.scala 86:77]
    node _normal_entries_T_29 = bits(_normal_entries_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ae <= _normal_entries_T_29 @[TLB.scala 86:77]
    node _normal_entries_T_30 = bits(_normal_entries_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.g <= _normal_entries_T_30 @[TLB.scala 86:77]
    node _normal_entries_T_31 = bits(_normal_entries_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.u <= _normal_entries_T_31 @[TLB.scala 86:77]
    node _normal_entries_T_32 = bits(_normal_entries_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ppn <= _normal_entries_T_32 @[TLB.scala 86:77]
    inst normal_entries_barrier_1 of OptimizationBarrier_32 @[package.scala 258:25]
    normal_entries_barrier_1.io is invalid
    normal_entries_barrier_1.clock <= clock
    normal_entries_barrier_1.reset <= reset
    normal_entries_barrier_1.io.x <- _normal_entries_WIRE_2 @[package.scala 266:18]
    wire _normal_entries_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_5 : UInt<35>
    _normal_entries_WIRE_5 is invalid
    _normal_entries_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _normal_entries_T_33 = bits(_normal_entries_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.fragmented_superpage <= _normal_entries_T_33 @[TLB.scala 86:77]
    node _normal_entries_T_34 = bits(_normal_entries_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.c <= _normal_entries_T_34 @[TLB.scala 86:77]
    node _normal_entries_T_35 = bits(_normal_entries_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.eff <= _normal_entries_T_35 @[TLB.scala 86:77]
    node _normal_entries_T_36 = bits(_normal_entries_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.paa <= _normal_entries_T_36 @[TLB.scala 86:77]
    node _normal_entries_T_37 = bits(_normal_entries_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pal <= _normal_entries_T_37 @[TLB.scala 86:77]
    node _normal_entries_T_38 = bits(_normal_entries_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ppp <= _normal_entries_T_38 @[TLB.scala 86:77]
    node _normal_entries_T_39 = bits(_normal_entries_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pr <= _normal_entries_T_39 @[TLB.scala 86:77]
    node _normal_entries_T_40 = bits(_normal_entries_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.px <= _normal_entries_T_40 @[TLB.scala 86:77]
    node _normal_entries_T_41 = bits(_normal_entries_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pw <= _normal_entries_T_41 @[TLB.scala 86:77]
    node _normal_entries_T_42 = bits(_normal_entries_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sr <= _normal_entries_T_42 @[TLB.scala 86:77]
    node _normal_entries_T_43 = bits(_normal_entries_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sx <= _normal_entries_T_43 @[TLB.scala 86:77]
    node _normal_entries_T_44 = bits(_normal_entries_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sw <= _normal_entries_T_44 @[TLB.scala 86:77]
    node _normal_entries_T_45 = bits(_normal_entries_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ae <= _normal_entries_T_45 @[TLB.scala 86:77]
    node _normal_entries_T_46 = bits(_normal_entries_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.g <= _normal_entries_T_46 @[TLB.scala 86:77]
    node _normal_entries_T_47 = bits(_normal_entries_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.u <= _normal_entries_T_47 @[TLB.scala 86:77]
    node _normal_entries_T_48 = bits(_normal_entries_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ppn <= _normal_entries_T_48 @[TLB.scala 86:77]
    inst normal_entries_barrier_2 of OptimizationBarrier_33 @[package.scala 258:25]
    normal_entries_barrier_2.io is invalid
    normal_entries_barrier_2.clock <= clock
    normal_entries_barrier_2.reset <= reset
    normal_entries_barrier_2.io.x <- _normal_entries_WIRE_4 @[package.scala 266:18]
    wire _normal_entries_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_7 : UInt<35>
    _normal_entries_WIRE_7 is invalid
    _normal_entries_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _normal_entries_T_49 = bits(_normal_entries_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.fragmented_superpage <= _normal_entries_T_49 @[TLB.scala 86:77]
    node _normal_entries_T_50 = bits(_normal_entries_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.c <= _normal_entries_T_50 @[TLB.scala 86:77]
    node _normal_entries_T_51 = bits(_normal_entries_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.eff <= _normal_entries_T_51 @[TLB.scala 86:77]
    node _normal_entries_T_52 = bits(_normal_entries_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.paa <= _normal_entries_T_52 @[TLB.scala 86:77]
    node _normal_entries_T_53 = bits(_normal_entries_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pal <= _normal_entries_T_53 @[TLB.scala 86:77]
    node _normal_entries_T_54 = bits(_normal_entries_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ppp <= _normal_entries_T_54 @[TLB.scala 86:77]
    node _normal_entries_T_55 = bits(_normal_entries_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pr <= _normal_entries_T_55 @[TLB.scala 86:77]
    node _normal_entries_T_56 = bits(_normal_entries_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.px <= _normal_entries_T_56 @[TLB.scala 86:77]
    node _normal_entries_T_57 = bits(_normal_entries_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pw <= _normal_entries_T_57 @[TLB.scala 86:77]
    node _normal_entries_T_58 = bits(_normal_entries_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sr <= _normal_entries_T_58 @[TLB.scala 86:77]
    node _normal_entries_T_59 = bits(_normal_entries_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sx <= _normal_entries_T_59 @[TLB.scala 86:77]
    node _normal_entries_T_60 = bits(_normal_entries_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sw <= _normal_entries_T_60 @[TLB.scala 86:77]
    node _normal_entries_T_61 = bits(_normal_entries_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ae <= _normal_entries_T_61 @[TLB.scala 86:77]
    node _normal_entries_T_62 = bits(_normal_entries_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.g <= _normal_entries_T_62 @[TLB.scala 86:77]
    node _normal_entries_T_63 = bits(_normal_entries_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.u <= _normal_entries_T_63 @[TLB.scala 86:77]
    node _normal_entries_T_64 = bits(_normal_entries_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ppn <= _normal_entries_T_64 @[TLB.scala 86:77]
    inst normal_entries_barrier_3 of OptimizationBarrier_34 @[package.scala 258:25]
    normal_entries_barrier_3.io is invalid
    normal_entries_barrier_3.clock <= clock
    normal_entries_barrier_3.reset <= reset
    normal_entries_barrier_3.io.x <- _normal_entries_WIRE_6 @[package.scala 266:18]
    wire _normal_entries_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_9 : UInt<35>
    _normal_entries_WIRE_9 is invalid
    _normal_entries_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _normal_entries_T_65 = bits(_normal_entries_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.fragmented_superpage <= _normal_entries_T_65 @[TLB.scala 86:77]
    node _normal_entries_T_66 = bits(_normal_entries_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.c <= _normal_entries_T_66 @[TLB.scala 86:77]
    node _normal_entries_T_67 = bits(_normal_entries_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.eff <= _normal_entries_T_67 @[TLB.scala 86:77]
    node _normal_entries_T_68 = bits(_normal_entries_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.paa <= _normal_entries_T_68 @[TLB.scala 86:77]
    node _normal_entries_T_69 = bits(_normal_entries_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pal <= _normal_entries_T_69 @[TLB.scala 86:77]
    node _normal_entries_T_70 = bits(_normal_entries_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ppp <= _normal_entries_T_70 @[TLB.scala 86:77]
    node _normal_entries_T_71 = bits(_normal_entries_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pr <= _normal_entries_T_71 @[TLB.scala 86:77]
    node _normal_entries_T_72 = bits(_normal_entries_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.px <= _normal_entries_T_72 @[TLB.scala 86:77]
    node _normal_entries_T_73 = bits(_normal_entries_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pw <= _normal_entries_T_73 @[TLB.scala 86:77]
    node _normal_entries_T_74 = bits(_normal_entries_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sr <= _normal_entries_T_74 @[TLB.scala 86:77]
    node _normal_entries_T_75 = bits(_normal_entries_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sx <= _normal_entries_T_75 @[TLB.scala 86:77]
    node _normal_entries_T_76 = bits(_normal_entries_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sw <= _normal_entries_T_76 @[TLB.scala 86:77]
    node _normal_entries_T_77 = bits(_normal_entries_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ae <= _normal_entries_T_77 @[TLB.scala 86:77]
    node _normal_entries_T_78 = bits(_normal_entries_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.g <= _normal_entries_T_78 @[TLB.scala 86:77]
    node _normal_entries_T_79 = bits(_normal_entries_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.u <= _normal_entries_T_79 @[TLB.scala 86:77]
    node _normal_entries_T_80 = bits(_normal_entries_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ppn <= _normal_entries_T_80 @[TLB.scala 86:77]
    inst normal_entries_barrier_4 of OptimizationBarrier_35 @[package.scala 258:25]
    normal_entries_barrier_4.io is invalid
    normal_entries_barrier_4.clock <= clock
    normal_entries_barrier_4.reset <= reset
    normal_entries_barrier_4.io.x <- _normal_entries_WIRE_8 @[package.scala 266:18]
    node ptw_ae_array_lo_hi = cat(entries_barrier_2.io.y.ae, entries_barrier_1.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo = cat(ptw_ae_array_lo_hi, entries_barrier.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi = cat(entries_barrier_5.io.y.ae, entries_barrier_4.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi = cat(ptw_ae_array_hi_hi, entries_barrier_3.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_1 = cat(ptw_ae_array_hi, ptw_ae_array_lo) @[Cat.scala 30:58]
    node ptw_ae_array = cat(UInt<1>("h00"), ptw_ae_array_lo_1) @[Cat.scala 30:58]
    node _priv_rw_ok_T = eq(priv_s, UInt<1>("h00")) @[TLB.scala 265:24]
    node _priv_rw_ok_T_1 = or(_priv_rw_ok_T, io.ptw.status.sum) @[TLB.scala 265:32]
    node priv_rw_ok_lo_hi = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_lo = cat(priv_rw_ok_lo_hi, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi = cat(priv_rw_ok_hi_hi, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_rw_ok_T_2 = cat(priv_rw_ok_hi, priv_rw_ok_lo) @[Cat.scala 30:58]
    node _priv_rw_ok_T_3 = mux(_priv_rw_ok_T_1, _priv_rw_ok_T_2, UInt<1>("h00")) @[TLB.scala 265:23]
    node priv_rw_ok_lo_hi_1 = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_1 = cat(priv_rw_ok_lo_hi_1, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi_1 = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_1 = cat(priv_rw_ok_hi_hi_1, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_rw_ok_T_4 = cat(priv_rw_ok_hi_1, priv_rw_ok_lo_1) @[Cat.scala 30:58]
    node _priv_rw_ok_T_5 = not(_priv_rw_ok_T_4) @[TLB.scala 265:98]
    node _priv_rw_ok_T_6 = mux(priv_s, _priv_rw_ok_T_5, UInt<1>("h00")) @[TLB.scala 265:89]
    node priv_rw_ok = or(_priv_rw_ok_T_3, _priv_rw_ok_T_6) @[TLB.scala 265:84]
    node priv_x_ok_lo_hi = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_lo = cat(priv_x_ok_lo_hi, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_hi = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi = cat(priv_x_ok_hi_hi, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_x_ok_T = cat(priv_x_ok_hi, priv_x_ok_lo) @[Cat.scala 30:58]
    node _priv_x_ok_T_1 = not(_priv_x_ok_T) @[TLB.scala 266:31]
    node priv_x_ok_lo_hi_1 = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_lo_1 = cat(priv_x_ok_lo_hi_1, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_hi_1 = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_1 = cat(priv_x_ok_hi_hi_1, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_x_ok_T_2 = cat(priv_x_ok_hi_1, priv_x_ok_lo_1) @[Cat.scala 30:58]
    node priv_x_ok = mux(priv_s, _priv_x_ok_T_1, _priv_x_ok_T_2) @[TLB.scala 266:22]
    node r_array_lo_hi = cat(entries_barrier_2.io.y.sr, entries_barrier_1.io.y.sr) @[Cat.scala 30:58]
    node r_array_lo = cat(r_array_lo_hi, entries_barrier.io.y.sr) @[Cat.scala 30:58]
    node r_array_hi_hi = cat(entries_barrier_5.io.y.sr, entries_barrier_4.io.y.sr) @[Cat.scala 30:58]
    node r_array_hi = cat(r_array_hi_hi, entries_barrier_3.io.y.sr) @[Cat.scala 30:58]
    node _r_array_T = cat(r_array_hi, r_array_lo) @[Cat.scala 30:58]
    node r_array_lo_hi_1 = cat(entries_barrier_2.io.y.sx, entries_barrier_1.io.y.sx) @[Cat.scala 30:58]
    node r_array_lo_1 = cat(r_array_lo_hi_1, entries_barrier.io.y.sx) @[Cat.scala 30:58]
    node r_array_hi_hi_1 = cat(entries_barrier_5.io.y.sx, entries_barrier_4.io.y.sx) @[Cat.scala 30:58]
    node r_array_hi_1 = cat(r_array_hi_hi_1, entries_barrier_3.io.y.sx) @[Cat.scala 30:58]
    node _r_array_T_1 = cat(r_array_hi_1, r_array_lo_1) @[Cat.scala 30:58]
    node _r_array_T_2 = mux(io.ptw.status.mxr, _r_array_T_1, UInt<1>("h00")) @[TLB.scala 267:73]
    node _r_array_T_3 = or(_r_array_T, _r_array_T_2) @[TLB.scala 267:68]
    node r_array_lo_2 = and(priv_rw_ok, _r_array_T_3) @[TLB.scala 267:40]
    node r_array = cat(UInt<1>("h01"), r_array_lo_2) @[Cat.scala 30:58]
    node w_array_lo_hi = cat(entries_barrier_2.io.y.sw, entries_barrier_1.io.y.sw) @[Cat.scala 30:58]
    node w_array_lo = cat(w_array_lo_hi, entries_barrier.io.y.sw) @[Cat.scala 30:58]
    node w_array_hi_hi = cat(entries_barrier_5.io.y.sw, entries_barrier_4.io.y.sw) @[Cat.scala 30:58]
    node w_array_hi = cat(w_array_hi_hi, entries_barrier_3.io.y.sw) @[Cat.scala 30:58]
    node _w_array_T = cat(w_array_hi, w_array_lo) @[Cat.scala 30:58]
    node w_array_lo_1 = and(priv_rw_ok, _w_array_T) @[TLB.scala 268:40]
    node w_array = cat(UInt<1>("h01"), w_array_lo_1) @[Cat.scala 30:58]
    node x_array_lo_hi = cat(entries_barrier_2.io.y.sx, entries_barrier_1.io.y.sx) @[Cat.scala 30:58]
    node x_array_lo = cat(x_array_lo_hi, entries_barrier.io.y.sx) @[Cat.scala 30:58]
    node x_array_hi_hi = cat(entries_barrier_5.io.y.sx, entries_barrier_4.io.y.sx) @[Cat.scala 30:58]
    node x_array_hi = cat(x_array_hi_hi, entries_barrier_3.io.y.sx) @[Cat.scala 30:58]
    node _x_array_T = cat(x_array_hi, x_array_lo) @[Cat.scala 30:58]
    node x_array_lo_1 = and(priv_x_ok, _x_array_T) @[TLB.scala 269:39]
    node x_array = cat(UInt<1>("h01"), x_array_lo_1) @[Cat.scala 30:58]
    node _pr_array_T = bits(prot_r, 0, 0) @[Bitwise.scala 72:15]
    node pr_array_hi = mux(_pr_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pr_array_lo = cat(normal_entries_barrier_1.io.y.pr, normal_entries_barrier.io.y.pr) @[Cat.scala 30:58]
    node pr_array_hi_hi = cat(normal_entries_barrier_4.io.y.pr, normal_entries_barrier_3.io.y.pr) @[Cat.scala 30:58]
    node pr_array_hi_1 = cat(pr_array_hi_hi, normal_entries_barrier_2.io.y.pr) @[Cat.scala 30:58]
    node pr_array_lo_1 = cat(pr_array_hi_1, pr_array_lo) @[Cat.scala 30:58]
    node _pr_array_T_1 = cat(pr_array_hi, pr_array_lo_1) @[Cat.scala 30:58]
    node _pr_array_T_2 = not(ptw_ae_array) @[TLB.scala 270:89]
    node pr_array = and(_pr_array_T_1, _pr_array_T_2) @[TLB.scala 270:87]
    node _pw_array_T = bits(prot_w, 0, 0) @[Bitwise.scala 72:15]
    node pw_array_hi = mux(_pw_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pw_array_lo = cat(normal_entries_barrier_1.io.y.pw, normal_entries_barrier.io.y.pw) @[Cat.scala 30:58]
    node pw_array_hi_hi = cat(normal_entries_barrier_4.io.y.pw, normal_entries_barrier_3.io.y.pw) @[Cat.scala 30:58]
    node pw_array_hi_1 = cat(pw_array_hi_hi, normal_entries_barrier_2.io.y.pw) @[Cat.scala 30:58]
    node pw_array_lo_1 = cat(pw_array_hi_1, pw_array_lo) @[Cat.scala 30:58]
    node _pw_array_T_1 = cat(pw_array_hi, pw_array_lo_1) @[Cat.scala 30:58]
    node _pw_array_T_2 = not(ptw_ae_array) @[TLB.scala 271:89]
    node pw_array = and(_pw_array_T_1, _pw_array_T_2) @[TLB.scala 271:87]
    node _px_array_T = bits(prot_x, 0, 0) @[Bitwise.scala 72:15]
    node px_array_hi = mux(_px_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node px_array_lo = cat(normal_entries_barrier_1.io.y.px, normal_entries_barrier.io.y.px) @[Cat.scala 30:58]
    node px_array_hi_hi = cat(normal_entries_barrier_4.io.y.px, normal_entries_barrier_3.io.y.px) @[Cat.scala 30:58]
    node px_array_hi_1 = cat(px_array_hi_hi, normal_entries_barrier_2.io.y.px) @[Cat.scala 30:58]
    node px_array_lo_1 = cat(px_array_hi_1, px_array_lo) @[Cat.scala 30:58]
    node _px_array_T_1 = cat(px_array_hi, px_array_lo_1) @[Cat.scala 30:58]
    node _px_array_T_2 = not(ptw_ae_array) @[TLB.scala 272:89]
    node px_array = and(_px_array_T_1, _px_array_T_2) @[TLB.scala 272:87]
    node _eff_array_T = bits(prot_eff, 0, 0) @[Bitwise.scala 72:15]
    node eff_array_hi = mux(_eff_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node eff_array_lo = cat(normal_entries_barrier_1.io.y.eff, normal_entries_barrier.io.y.eff) @[Cat.scala 30:58]
    node eff_array_hi_hi = cat(normal_entries_barrier_4.io.y.eff, normal_entries_barrier_3.io.y.eff) @[Cat.scala 30:58]
    node eff_array_hi_1 = cat(eff_array_hi_hi, normal_entries_barrier_2.io.y.eff) @[Cat.scala 30:58]
    node eff_array_lo_1 = cat(eff_array_hi_1, eff_array_lo) @[Cat.scala 30:58]
    node eff_array = cat(eff_array_hi, eff_array_lo_1) @[Cat.scala 30:58]
    node _c_array_T = bits(cacheable, 0, 0) @[Bitwise.scala 72:15]
    node c_array_hi = mux(_c_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node c_array_lo = cat(normal_entries_barrier_1.io.y.c, normal_entries_barrier.io.y.c) @[Cat.scala 30:58]
    node c_array_hi_hi = cat(normal_entries_barrier_4.io.y.c, normal_entries_barrier_3.io.y.c) @[Cat.scala 30:58]
    node c_array_hi_1 = cat(c_array_hi_hi, normal_entries_barrier_2.io.y.c) @[Cat.scala 30:58]
    node c_array_lo_1 = cat(c_array_hi_1, c_array_lo) @[Cat.scala 30:58]
    node c_array = cat(c_array_hi, c_array_lo_1) @[Cat.scala 30:58]
    node _ppp_array_T = bits(prot_pp, 0, 0) @[Bitwise.scala 72:15]
    node ppp_array_hi = mux(_ppp_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node ppp_array_lo = cat(normal_entries_barrier_1.io.y.ppp, normal_entries_barrier.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_hi_hi = cat(normal_entries_barrier_4.io.y.ppp, normal_entries_barrier_3.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_hi_1 = cat(ppp_array_hi_hi, normal_entries_barrier_2.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_lo_1 = cat(ppp_array_hi_1, ppp_array_lo) @[Cat.scala 30:58]
    node ppp_array = cat(ppp_array_hi, ppp_array_lo_1) @[Cat.scala 30:58]
    node _paa_array_T = bits(prot_aa, 0, 0) @[Bitwise.scala 72:15]
    node paa_array_hi = mux(_paa_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node paa_array_lo = cat(normal_entries_barrier_1.io.y.paa, normal_entries_barrier.io.y.paa) @[Cat.scala 30:58]
    node paa_array_hi_hi = cat(normal_entries_barrier_4.io.y.paa, normal_entries_barrier_3.io.y.paa) @[Cat.scala 30:58]
    node paa_array_hi_1 = cat(paa_array_hi_hi, normal_entries_barrier_2.io.y.paa) @[Cat.scala 30:58]
    node paa_array_lo_1 = cat(paa_array_hi_1, paa_array_lo) @[Cat.scala 30:58]
    node paa_array = cat(paa_array_hi, paa_array_lo_1) @[Cat.scala 30:58]
    node _pal_array_T = bits(prot_al, 0, 0) @[Bitwise.scala 72:15]
    node pal_array_hi = mux(_pal_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pal_array_lo = cat(normal_entries_barrier_1.io.y.pal, normal_entries_barrier.io.y.pal) @[Cat.scala 30:58]
    node pal_array_hi_hi = cat(normal_entries_barrier_4.io.y.pal, normal_entries_barrier_3.io.y.pal) @[Cat.scala 30:58]
    node pal_array_hi_1 = cat(pal_array_hi_hi, normal_entries_barrier_2.io.y.pal) @[Cat.scala 30:58]
    node pal_array_lo_1 = cat(pal_array_hi_1, pal_array_lo) @[Cat.scala 30:58]
    node pal_array = cat(pal_array_hi, pal_array_lo_1) @[Cat.scala 30:58]
    node ppp_array_if_cached = or(ppp_array, c_array) @[TLB.scala 278:39]
    node _paa_array_if_cached_T = mux(UInt<1>("h01"), c_array, UInt<1>("h00")) @[TLB.scala 279:44]
    node paa_array_if_cached = or(paa_array, _paa_array_if_cached_T) @[TLB.scala 279:39]
    node _pal_array_if_cached_T = mux(UInt<1>("h01"), c_array, UInt<1>("h00")) @[TLB.scala 280:44]
    node pal_array_if_cached = or(pal_array, _pal_array_if_cached_T) @[TLB.scala 280:39]
    node _prefetchable_array_T = and(cacheable, homogeneous) @[TLB.scala 281:43]
    node prefetchable_array_hi = shl(_prefetchable_array_T, 1) @[TLB.scala 281:59]
    node prefetchable_array_lo = cat(normal_entries_barrier_1.io.y.c, normal_entries_barrier.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_hi_hi = cat(normal_entries_barrier_4.io.y.c, normal_entries_barrier_3.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_hi_1 = cat(prefetchable_array_hi_hi, normal_entries_barrier_2.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_lo_1 = cat(prefetchable_array_hi_1, prefetchable_array_lo) @[Cat.scala 30:58]
    node prefetchable_array = cat(prefetchable_array_hi, prefetchable_array_lo_1) @[Cat.scala 30:58]
    node _misaligned_T = dshl(UInt<1>("h01"), io.req.bits.size) @[OneHot.scala 58:35]
    node _misaligned_T_1 = sub(_misaligned_T, UInt<1>("h01")) @[TLB.scala 283:69]
    node _misaligned_T_2 = tail(_misaligned_T_1, 1) @[TLB.scala 283:69]
    node _misaligned_T_3 = and(io.req.bits.vaddr, _misaligned_T_2) @[TLB.scala 283:39]
    node misaligned = orr(_misaligned_T_3) @[TLB.scala 283:75]
    node _cmd_lrsc_T = eq(io.req.bits.cmd, UInt<3>("h06")) @[package.scala 15:47]
    node _cmd_lrsc_T_1 = eq(io.req.bits.cmd, UInt<3>("h07")) @[package.scala 15:47]
    node _cmd_lrsc_T_2 = or(_cmd_lrsc_T, _cmd_lrsc_T_1) @[package.scala 72:59]
    node cmd_lrsc = and(UInt<1>("h01"), _cmd_lrsc_T_2) @[TLB.scala 294:37]
    node _cmd_amo_logical_T = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_amo_logical_T_1 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_amo_logical_T_2 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_amo_logical_T_3 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_amo_logical_T_4 = or(_cmd_amo_logical_T, _cmd_amo_logical_T_1) @[package.scala 72:59]
    node _cmd_amo_logical_T_5 = or(_cmd_amo_logical_T_4, _cmd_amo_logical_T_2) @[package.scala 72:59]
    node _cmd_amo_logical_T_6 = or(_cmd_amo_logical_T_5, _cmd_amo_logical_T_3) @[package.scala 72:59]
    node cmd_amo_logical = and(UInt<1>("h01"), _cmd_amo_logical_T_6) @[TLB.scala 295:44]
    node _cmd_amo_arithmetic_T = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_1 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_2 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_3 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_4 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_5 = or(_cmd_amo_arithmetic_T, _cmd_amo_arithmetic_T_1) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_6 = or(_cmd_amo_arithmetic_T_5, _cmd_amo_arithmetic_T_2) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_7 = or(_cmd_amo_arithmetic_T_6, _cmd_amo_arithmetic_T_3) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_8 = or(_cmd_amo_arithmetic_T_7, _cmd_amo_arithmetic_T_4) @[package.scala 72:59]
    node cmd_amo_arithmetic = and(UInt<1>("h01"), _cmd_amo_arithmetic_T_8) @[TLB.scala 296:47]
    node cmd_put_partial = eq(io.req.bits.cmd, UInt<5>("h011")) @[TLB.scala 297:41]
    node _cmd_read_T = eq(io.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _cmd_read_T_1 = eq(io.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _cmd_read_T_2 = or(_cmd_read_T, _cmd_read_T_1) @[Consts.scala 81:41]
    node _cmd_read_T_3 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _cmd_read_T_4 = or(_cmd_read_T_2, _cmd_read_T_3) @[Consts.scala 81:58]
    node _cmd_read_T_5 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_read_T_6 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_read_T_7 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_read_T_8 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_read_T_9 = or(_cmd_read_T_5, _cmd_read_T_6) @[package.scala 72:59]
    node _cmd_read_T_10 = or(_cmd_read_T_9, _cmd_read_T_7) @[package.scala 72:59]
    node _cmd_read_T_11 = or(_cmd_read_T_10, _cmd_read_T_8) @[package.scala 72:59]
    node _cmd_read_T_12 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_read_T_13 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_read_T_14 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_read_T_15 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_read_T_16 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_read_T_17 = or(_cmd_read_T_12, _cmd_read_T_13) @[package.scala 72:59]
    node _cmd_read_T_18 = or(_cmd_read_T_17, _cmd_read_T_14) @[package.scala 72:59]
    node _cmd_read_T_19 = or(_cmd_read_T_18, _cmd_read_T_15) @[package.scala 72:59]
    node _cmd_read_T_20 = or(_cmd_read_T_19, _cmd_read_T_16) @[package.scala 72:59]
    node _cmd_read_T_21 = or(_cmd_read_T_11, _cmd_read_T_20) @[Consts.scala 79:44]
    node cmd_read = or(_cmd_read_T_4, _cmd_read_T_21) @[Consts.scala 81:75]
    node _cmd_write_T = eq(io.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _cmd_write_T_1 = eq(io.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _cmd_write_T_2 = or(_cmd_write_T, _cmd_write_T_1) @[Consts.scala 82:42]
    node _cmd_write_T_3 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _cmd_write_T_4 = or(_cmd_write_T_2, _cmd_write_T_3) @[Consts.scala 82:59]
    node _cmd_write_T_5 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_write_T_6 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_write_T_7 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_write_T_8 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_write_T_9 = or(_cmd_write_T_5, _cmd_write_T_6) @[package.scala 72:59]
    node _cmd_write_T_10 = or(_cmd_write_T_9, _cmd_write_T_7) @[package.scala 72:59]
    node _cmd_write_T_11 = or(_cmd_write_T_10, _cmd_write_T_8) @[package.scala 72:59]
    node _cmd_write_T_12 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_write_T_13 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_write_T_14 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_write_T_15 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_write_T_16 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_write_T_17 = or(_cmd_write_T_12, _cmd_write_T_13) @[package.scala 72:59]
    node _cmd_write_T_18 = or(_cmd_write_T_17, _cmd_write_T_14) @[package.scala 72:59]
    node _cmd_write_T_19 = or(_cmd_write_T_18, _cmd_write_T_15) @[package.scala 72:59]
    node _cmd_write_T_20 = or(_cmd_write_T_19, _cmd_write_T_16) @[package.scala 72:59]
    node _cmd_write_T_21 = or(_cmd_write_T_11, _cmd_write_T_20) @[Consts.scala 79:44]
    node cmd_write = or(_cmd_write_T_4, _cmd_write_T_21) @[Consts.scala 82:76]
    node _cmd_write_perms_T = eq(io.req.bits.cmd, UInt<3>("h05")) @[package.scala 15:47]
    node _cmd_write_perms_T_1 = eq(io.req.bits.cmd, UInt<5>("h017")) @[package.scala 15:47]
    node _cmd_write_perms_T_2 = or(_cmd_write_perms_T, _cmd_write_perms_T_1) @[package.scala 72:59]
    node cmd_write_perms = or(cmd_write, _cmd_write_perms_T_2) @[TLB.scala 300:35]
    node lrscAllowed = mux(UInt<1>("h01"), UInt<1>("h00"), c_array) @[TLB.scala 303:24]
    node _ae_array_T = mux(misaligned, eff_array, UInt<1>("h00")) @[TLB.scala 305:8]
    node _ae_array_T_1 = not(lrscAllowed) @[TLB.scala 306:19]
    node _ae_array_T_2 = mux(cmd_lrsc, _ae_array_T_1, UInt<1>("h00")) @[TLB.scala 306:8]
    node ae_array = or(_ae_array_T, _ae_array_T_2) @[TLB.scala 305:37]
    node _ae_ld_array_T = not(pr_array) @[TLB.scala 307:46]
    node _ae_ld_array_T_1 = or(ae_array, _ae_ld_array_T) @[TLB.scala 307:44]
    node ae_ld_array = mux(cmd_read, _ae_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 307:24]
    node _ae_st_array_T = not(pw_array) @[TLB.scala 309:37]
    node _ae_st_array_T_1 = or(ae_array, _ae_st_array_T) @[TLB.scala 309:35]
    node _ae_st_array_T_2 = mux(cmd_write_perms, _ae_st_array_T_1, UInt<1>("h00")) @[TLB.scala 309:8]
    node _ae_st_array_T_3 = not(ppp_array_if_cached) @[TLB.scala 310:26]
    node _ae_st_array_T_4 = mux(cmd_put_partial, _ae_st_array_T_3, UInt<1>("h00")) @[TLB.scala 310:8]
    node _ae_st_array_T_5 = or(_ae_st_array_T_2, _ae_st_array_T_4) @[TLB.scala 309:53]
    node _ae_st_array_T_6 = not(pal_array_if_cached) @[TLB.scala 311:26]
    node _ae_st_array_T_7 = mux(cmd_amo_logical, _ae_st_array_T_6, UInt<1>("h00")) @[TLB.scala 311:8]
    node _ae_st_array_T_8 = or(_ae_st_array_T_5, _ae_st_array_T_7) @[TLB.scala 310:53]
    node _ae_st_array_T_9 = not(paa_array_if_cached) @[TLB.scala 312:29]
    node _ae_st_array_T_10 = mux(cmd_amo_arithmetic, _ae_st_array_T_9, UInt<1>("h00")) @[TLB.scala 312:8]
    node ae_st_array = or(_ae_st_array_T_8, _ae_st_array_T_10) @[TLB.scala 311:53]
    node _must_alloc_array_T = not(ppp_array) @[TLB.scala 314:26]
    node _must_alloc_array_T_1 = mux(cmd_put_partial, _must_alloc_array_T, UInt<1>("h00")) @[TLB.scala 314:8]
    node _must_alloc_array_T_2 = not(paa_array) @[TLB.scala 315:26]
    node _must_alloc_array_T_3 = mux(cmd_amo_logical, _must_alloc_array_T_2, UInt<1>("h00")) @[TLB.scala 315:8]
    node _must_alloc_array_T_4 = or(_must_alloc_array_T_1, _must_alloc_array_T_3) @[TLB.scala 314:43]
    node _must_alloc_array_T_5 = not(pal_array) @[TLB.scala 316:29]
    node _must_alloc_array_T_6 = mux(cmd_amo_arithmetic, _must_alloc_array_T_5, UInt<1>("h00")) @[TLB.scala 316:8]
    node _must_alloc_array_T_7 = or(_must_alloc_array_T_4, _must_alloc_array_T_6) @[TLB.scala 315:43]
    node _must_alloc_array_T_8 = not(UInt<7>("h00")) @[TLB.scala 317:19]
    node _must_alloc_array_T_9 = mux(cmd_lrsc, _must_alloc_array_T_8, UInt<1>("h00")) @[TLB.scala 317:8]
    node must_alloc_array = or(_must_alloc_array_T_7, _must_alloc_array_T_9) @[TLB.scala 316:46]
    node _ma_ld_array_T = and(misaligned, cmd_read) @[TLB.scala 318:36]
    node _ma_ld_array_T_1 = not(eff_array) @[TLB.scala 318:49]
    node ma_ld_array = mux(_ma_ld_array_T, _ma_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 318:24]
    node _ma_st_array_T = and(misaligned, cmd_write) @[TLB.scala 319:36]
    node _ma_st_array_T_1 = not(eff_array) @[TLB.scala 319:50]
    node ma_st_array = mux(_ma_st_array_T, _ma_st_array_T_1, UInt<1>("h00")) @[TLB.scala 319:24]
    node _pf_ld_array_T = or(r_array, ptw_ae_array) @[TLB.scala 320:45]
    node _pf_ld_array_T_1 = not(_pf_ld_array_T) @[TLB.scala 320:35]
    node pf_ld_array = mux(cmd_read, _pf_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 320:24]
    node _pf_st_array_T = or(w_array, ptw_ae_array) @[TLB.scala 321:52]
    node _pf_st_array_T_1 = not(_pf_st_array_T) @[TLB.scala 321:42]
    node pf_st_array = mux(cmd_write_perms, _pf_st_array_T_1, UInt<1>("h00")) @[TLB.scala 321:24]
    node _pf_inst_array_T = or(x_array, ptw_ae_array) @[TLB.scala 322:33]
    node pf_inst_array = not(_pf_inst_array_T) @[TLB.scala 322:23]
    node tlb_hit = orr(real_hits) @[TLB.scala 324:27]
    node _tlb_miss_T = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLB.scala 325:32]
    node _tlb_miss_T_1 = and(vm_enabled, _tlb_miss_T) @[TLB.scala 325:29]
    node _tlb_miss_T_2 = eq(tlb_hit, UInt<1>("h00")) @[TLB.scala 325:43]
    node tlb_miss = and(_tlb_miss_T_1, _tlb_miss_T_2) @[TLB.scala 325:40]
    reg state_reg : UInt<0>, clock @[Replacement.scala 168:46]
    reg state_vec : UInt<0>[1], clock @[Replacement.scala 304:30]
    reg state_reg_1 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Replacement.scala 168:70]
    node _T_9 = and(io.req.valid, vm_enabled) @[TLB.scala 329:22]
    when _T_9 : @[TLB.scala 329:37]
      when sector_hits_0 : @[TLB.scala 330:28]
        state_vec[UInt<1>("h00")] <= UInt<1>("h00") @[Replacement.scala 308:20]
        skip @[TLB.scala 330:28]
      node _T_10 = or(superpage_hits_0, superpage_hits_1) @[package.scala 72:59]
      node _T_11 = or(_T_10, superpage_hits_2) @[package.scala 72:59]
      node _T_12 = or(_T_11, superpage_hits_3) @[package.scala 72:59]
      when _T_12 : @[TLB.scala 331:31]
        node lo = cat(superpage_hits_1, superpage_hits_0) @[Cat.scala 30:58]
        node hi = cat(superpage_hits_3, superpage_hits_2) @[Cat.scala 30:58]
        node _T_13 = cat(hi, lo) @[Cat.scala 30:58]
        node hi_1 = bits(_T_13, 3, 2) @[OneHot.scala 30:18]
        node lo_1 = bits(_T_13, 1, 0) @[OneHot.scala 31:18]
        node hi_2 = orr(hi_1) @[OneHot.scala 32:14]
        node _T_14 = or(hi_1, lo_1) @[OneHot.scala 32:28]
        node lo_2 = bits(_T_14, 1, 1) @[CircuitMath.scala 30:8]
        node _T_15 = cat(hi_2, lo_2) @[Cat.scala 30:58]
        node state_reg_touch_way_sized = bits(_T_15, 1, 0) @[package.scala 154:13]
        node _state_reg_set_left_older_T = bits(state_reg_touch_way_sized, 1, 1) @[Replacement.scala 196:43]
        node state_reg_hi_hi = eq(_state_reg_set_left_older_T, UInt<1>("h00")) @[Replacement.scala 196:33]
        node state_reg_left_subtree_state = bits(state_reg_1, 1, 1) @[package.scala 154:13]
        node state_reg_right_subtree_state = bits(state_reg_1, 0, 0) @[Replacement.scala 198:38]
        node _state_reg_T = bits(state_reg_touch_way_sized, 0, 0) @[package.scala 154:13]
        node _state_reg_T_1 = bits(_state_reg_T, 0, 0) @[Replacement.scala 218:17]
        node _state_reg_T_2 = eq(_state_reg_T_1, UInt<1>("h00")) @[Replacement.scala 218:7]
        node state_reg_hi_lo = mux(state_reg_hi_hi, state_reg_left_subtree_state, _state_reg_T_2) @[Replacement.scala 203:16]
        node _state_reg_T_3 = bits(state_reg_touch_way_sized, 0, 0) @[Replacement.scala 207:62]
        node _state_reg_T_4 = bits(_state_reg_T_3, 0, 0) @[Replacement.scala 218:17]
        node _state_reg_T_5 = eq(_state_reg_T_4, UInt<1>("h00")) @[Replacement.scala 218:7]
        node state_reg_lo = mux(state_reg_hi_hi, _state_reg_T_5, state_reg_right_subtree_state) @[Replacement.scala 206:16]
        node state_reg_hi = cat(state_reg_hi_hi, state_reg_hi_lo) @[Cat.scala 30:58]
        node _state_reg_T_6 = cat(state_reg_hi, state_reg_lo) @[Cat.scala 30:58]
        state_reg_1 <= _state_reg_T_6 @[Replacement.scala 172:15]
        skip @[TLB.scala 331:31]
      skip @[TLB.scala 329:37]
    node _multipleHits_T = bits(real_hits, 2, 0) @[Misc.scala 180:37]
    node _multipleHits_T_1 = bits(_multipleHits_T, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne = bits(_multipleHits_T_1, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_2 = bits(_multipleHits_T, 2, 1) @[Misc.scala 181:39]
    node _multipleHits_T_3 = bits(_multipleHits_T_2, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_1 = bits(_multipleHits_T_3, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_4 = bits(_multipleHits_T_2, 1, 1) @[Misc.scala 181:39]
    node multipleHits_rightOne = bits(_multipleHits_T_4, 0, 0) @[Misc.scala 177:18]
    node multipleHits_rightOne_1 = or(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:16]
    node _multipleHits_T_5 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 182:37]
    node _multipleHits_T_6 = and(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:61]
    node multipleHits_rightTwo = or(_multipleHits_T_5, _multipleHits_T_6) @[Misc.scala 182:49]
    node multipleHits_leftOne_2 = or(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:16]
    node _multipleHits_T_7 = or(UInt<1>("h00"), multipleHits_rightTwo) @[Misc.scala 182:37]
    node _multipleHits_T_8 = and(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:61]
    node multipleHits_leftTwo = or(_multipleHits_T_7, _multipleHits_T_8) @[Misc.scala 182:49]
    node _multipleHits_T_9 = bits(real_hits, 5, 3) @[Misc.scala 181:39]
    node _multipleHits_T_10 = bits(_multipleHits_T_9, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_3 = bits(_multipleHits_T_10, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_11 = bits(_multipleHits_T_9, 2, 1) @[Misc.scala 181:39]
    node _multipleHits_T_12 = bits(_multipleHits_T_11, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_4 = bits(_multipleHits_T_12, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_13 = bits(_multipleHits_T_11, 1, 1) @[Misc.scala 181:39]
    node multipleHits_rightOne_2 = bits(_multipleHits_T_13, 0, 0) @[Misc.scala 177:18]
    node multipleHits_rightOne_3 = or(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:16]
    node _multipleHits_T_14 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 182:37]
    node _multipleHits_T_15 = and(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:61]
    node multipleHits_rightTwo_1 = or(_multipleHits_T_14, _multipleHits_T_15) @[Misc.scala 182:49]
    node multipleHits_rightOne_4 = or(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:16]
    node _multipleHits_T_16 = or(UInt<1>("h00"), multipleHits_rightTwo_1) @[Misc.scala 182:37]
    node _multipleHits_T_17 = and(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:61]
    node multipleHits_rightTwo_2 = or(_multipleHits_T_16, _multipleHits_T_17) @[Misc.scala 182:49]
    node _multipleHits_T_18 = or(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:16]
    node _multipleHits_T_19 = or(multipleHits_leftTwo, multipleHits_rightTwo_2) @[Misc.scala 182:37]
    node _multipleHits_T_20 = and(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:61]
    node multipleHits = or(_multipleHits_T_19, _multipleHits_T_20) @[Misc.scala 182:49]
    node _io_req_ready_T = eq(state, UInt<2>("h00")) @[TLB.scala 341:25]
    io.req.ready <= _io_req_ready_T @[TLB.scala 341:16]
    node _io_resp_pf_ld_T = and(UInt<1>("h00"), cmd_read) @[TLB.scala 342:28]
    node _io_resp_pf_ld_T_1 = and(pf_ld_array, hits) @[TLB.scala 342:57]
    node _io_resp_pf_ld_T_2 = orr(_io_resp_pf_ld_T_1) @[TLB.scala 342:65]
    node _io_resp_pf_ld_T_3 = or(_io_resp_pf_ld_T, _io_resp_pf_ld_T_2) @[TLB.scala 342:41]
    io.resp.pf.ld <= _io_resp_pf_ld_T_3 @[TLB.scala 342:17]
    node _io_resp_pf_st_T = and(UInt<1>("h00"), cmd_write_perms) @[TLB.scala 343:28]
    node _io_resp_pf_st_T_1 = and(pf_st_array, hits) @[TLB.scala 343:64]
    node _io_resp_pf_st_T_2 = orr(_io_resp_pf_st_T_1) @[TLB.scala 343:72]
    node _io_resp_pf_st_T_3 = or(_io_resp_pf_st_T, _io_resp_pf_st_T_2) @[TLB.scala 343:48]
    io.resp.pf.st <= _io_resp_pf_st_T_3 @[TLB.scala 343:17]
    node _io_resp_pf_inst_T = and(pf_inst_array, hits) @[TLB.scala 344:47]
    node _io_resp_pf_inst_T_1 = orr(_io_resp_pf_inst_T) @[TLB.scala 344:55]
    node _io_resp_pf_inst_T_2 = or(UInt<1>("h00"), _io_resp_pf_inst_T_1) @[TLB.scala 344:29]
    io.resp.pf.inst <= _io_resp_pf_inst_T_2 @[TLB.scala 344:19]
    node _io_resp_ae_ld_T = and(ae_ld_array, hits) @[TLB.scala 345:33]
    node _io_resp_ae_ld_T_1 = orr(_io_resp_ae_ld_T) @[TLB.scala 345:41]
    io.resp.ae.ld <= _io_resp_ae_ld_T_1 @[TLB.scala 345:17]
    node _io_resp_ae_st_T = and(ae_st_array, hits) @[TLB.scala 346:33]
    node _io_resp_ae_st_T_1 = orr(_io_resp_ae_st_T) @[TLB.scala 346:41]
    io.resp.ae.st <= _io_resp_ae_st_T_1 @[TLB.scala 346:17]
    node _io_resp_ae_inst_T = not(px_array) @[TLB.scala 347:23]
    node _io_resp_ae_inst_T_1 = and(_io_resp_ae_inst_T, hits) @[TLB.scala 347:33]
    node _io_resp_ae_inst_T_2 = orr(_io_resp_ae_inst_T_1) @[TLB.scala 347:41]
    io.resp.ae.inst <= _io_resp_ae_inst_T_2 @[TLB.scala 347:19]
    node _io_resp_ma_ld_T = and(ma_ld_array, hits) @[TLB.scala 348:33]
    node _io_resp_ma_ld_T_1 = orr(_io_resp_ma_ld_T) @[TLB.scala 348:41]
    io.resp.ma.ld <= _io_resp_ma_ld_T_1 @[TLB.scala 348:17]
    node _io_resp_ma_st_T = and(ma_st_array, hits) @[TLB.scala 349:33]
    node _io_resp_ma_st_T_1 = orr(_io_resp_ma_st_T) @[TLB.scala 349:41]
    io.resp.ma.st <= _io_resp_ma_st_T_1 @[TLB.scala 349:17]
    io.resp.ma.inst <= UInt<1>("h00") @[TLB.scala 350:19]
    node _io_resp_cacheable_T = and(c_array, hits) @[TLB.scala 351:33]
    node _io_resp_cacheable_T_1 = orr(_io_resp_cacheable_T) @[TLB.scala 351:41]
    io.resp.cacheable <= _io_resp_cacheable_T_1 @[TLB.scala 351:21]
    node _io_resp_must_alloc_T = and(must_alloc_array, hits) @[TLB.scala 352:43]
    node _io_resp_must_alloc_T_1 = orr(_io_resp_must_alloc_T) @[TLB.scala 352:51]
    io.resp.must_alloc <= _io_resp_must_alloc_T_1 @[TLB.scala 352:22]
    node _io_resp_prefetchable_T = and(prefetchable_array, hits) @[TLB.scala 353:47]
    node _io_resp_prefetchable_T_1 = orr(_io_resp_prefetchable_T) @[TLB.scala 353:55]
    node _io_resp_prefetchable_T_2 = and(_io_resp_prefetchable_T_1, UInt<1>("h01")) @[TLB.scala 353:59]
    io.resp.prefetchable <= _io_resp_prefetchable_T_2 @[TLB.scala 353:24]
    node _io_resp_miss_T = or(do_refill, tlb_miss) @[TLB.scala 354:29]
    node _io_resp_miss_T_1 = or(_io_resp_miss_T, multipleHits) @[TLB.scala 354:41]
    io.resp.miss <= _io_resp_miss_T_1 @[TLB.scala 354:16]
    node io_resp_paddr_lo = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 355:46]
    node _io_resp_paddr_T = cat(ppn, io_resp_paddr_lo) @[Cat.scala 30:58]
    io.resp.paddr <= _io_resp_paddr_T @[TLB.scala 355:17]
    node _io_ptw_req_valid_T = eq(state, UInt<2>("h01")) @[TLB.scala 357:29]
    io.ptw.req.valid <= _io_ptw_req_valid_T @[TLB.scala 357:20]
    node _io_ptw_req_bits_valid_T = eq(io.kill, UInt<1>("h00")) @[TLB.scala 358:28]
    io.ptw.req.bits.valid <= _io_ptw_req_bits_valid_T @[TLB.scala 358:25]
    io.ptw.req.bits.bits.addr <= r_refill_tag @[TLB.scala 359:29]
    
  module MaxPeriodFibonacciLFSR : 
    input clock : Clock
    input reset : Reset
    output io : {flip seed : {valid : UInt<1>, bits : UInt<1>[16]}, flip increment : UInt<1>, out : UInt<1>[16]}
    
    wire _state_WIRE : UInt<1>[16] @[PRNG.scala 38:28]
    _state_WIRE[0] <= UInt<1>("h01") @[PRNG.scala 38:28]
    _state_WIRE[1] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[2] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[3] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[4] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[5] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[6] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[7] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[8] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[9] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[10] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[11] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[12] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[13] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[14] <= UInt<1>("h00") @[PRNG.scala 38:28]
    _state_WIRE[15] <= UInt<1>("h00") @[PRNG.scala 38:28]
    reg state : UInt<1>[16], clock with : (reset => (reset, _state_WIRE)) @[PRNG.scala 47:50]
    when io.increment : @[PRNG.scala 61:23]
      node _T = xor(state[15], state[13]) @[LFSR.scala 15:41]
      node _T_1 = xor(_T, state[12]) @[LFSR.scala 15:41]
      node _T_2 = xor(_T_1, state[10]) @[LFSR.scala 15:41]
      state[0] <= _T_2 @[PRNG.scala 62:11]
      state[1] <= state[0] @[PRNG.scala 62:11]
      state[2] <= state[1] @[PRNG.scala 62:11]
      state[3] <= state[2] @[PRNG.scala 62:11]
      state[4] <= state[3] @[PRNG.scala 62:11]
      state[5] <= state[4] @[PRNG.scala 62:11]
      state[6] <= state[5] @[PRNG.scala 62:11]
      state[7] <= state[6] @[PRNG.scala 62:11]
      state[8] <= state[7] @[PRNG.scala 62:11]
      state[9] <= state[8] @[PRNG.scala 62:11]
      state[10] <= state[9] @[PRNG.scala 62:11]
      state[11] <= state[10] @[PRNG.scala 62:11]
      state[12] <= state[11] @[PRNG.scala 62:11]
      state[13] <= state[12] @[PRNG.scala 62:11]
      state[14] <= state[13] @[PRNG.scala 62:11]
      state[15] <= state[14] @[PRNG.scala 62:11]
      skip @[PRNG.scala 61:23]
    when io.seed.valid : @[PRNG.scala 65:25]
      state[0] <= io.seed.bits[0] @[PRNG.scala 66:11]
      state[1] <= io.seed.bits[1] @[PRNG.scala 66:11]
      state[2] <= io.seed.bits[2] @[PRNG.scala 66:11]
      state[3] <= io.seed.bits[3] @[PRNG.scala 66:11]
      state[4] <= io.seed.bits[4] @[PRNG.scala 66:11]
      state[5] <= io.seed.bits[5] @[PRNG.scala 66:11]
      state[6] <= io.seed.bits[6] @[PRNG.scala 66:11]
      state[7] <= io.seed.bits[7] @[PRNG.scala 66:11]
      state[8] <= io.seed.bits[8] @[PRNG.scala 66:11]
      state[9] <= io.seed.bits[9] @[PRNG.scala 66:11]
      state[10] <= io.seed.bits[10] @[PRNG.scala 66:11]
      state[11] <= io.seed.bits[11] @[PRNG.scala 66:11]
      state[12] <= io.seed.bits[12] @[PRNG.scala 66:11]
      state[13] <= io.seed.bits[13] @[PRNG.scala 66:11]
      state[14] <= io.seed.bits[14] @[PRNG.scala 66:11]
      state[15] <= io.seed.bits[15] @[PRNG.scala 66:11]
      skip @[PRNG.scala 65:25]
    io.out[0] <= state[0] @[PRNG.scala 69:10]
    io.out[1] <= state[1] @[PRNG.scala 69:10]
    io.out[2] <= state[2] @[PRNG.scala 69:10]
    io.out[3] <= state[3] @[PRNG.scala 69:10]
    io.out[4] <= state[4] @[PRNG.scala 69:10]
    io.out[5] <= state[5] @[PRNG.scala 69:10]
    io.out[6] <= state[6] @[PRNG.scala 69:10]
    io.out[7] <= state[7] @[PRNG.scala 69:10]
    io.out[8] <= state[8] @[PRNG.scala 69:10]
    io.out[9] <= state[9] @[PRNG.scala 69:10]
    io.out[10] <= state[10] @[PRNG.scala 69:10]
    io.out[11] <= state[11] @[PRNG.scala 69:10]
    io.out[12] <= state[12] @[PRNG.scala 69:10]
    io.out[13] <= state[13] @[PRNG.scala 69:10]
    io.out[14] <= state[14] @[PRNG.scala 69:10]
    io.out[15] <= state[15] @[PRNG.scala 69:10]
    
  module DCacheModuleImpl_Anon_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {write : UInt<1>, addr : UInt<32>, idx : UInt<8>, way_en : UInt<1>, data : UInt<20>}}[8], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {write : UInt<1>, addr : UInt<32>, idx : UInt<8>, way_en : UInt<1>, data : UInt<20>}}, chosen : UInt<3>}
    
    io.chosen <= UInt<3>("h07") @[Arbiter.scala 123:13]
    io.out.bits.data <= io.in[7].bits.data @[Arbiter.scala 124:15]
    io.out.bits.way_en <= io.in[7].bits.way_en @[Arbiter.scala 124:15]
    io.out.bits.idx <= io.in[7].bits.idx @[Arbiter.scala 124:15]
    io.out.bits.addr <= io.in[7].bits.addr @[Arbiter.scala 124:15]
    io.out.bits.write <= io.in[7].bits.write @[Arbiter.scala 124:15]
    when io.in[6].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<3>("h06") @[Arbiter.scala 127:17]
      io.out.bits.data <= io.in[6].bits.data @[Arbiter.scala 128:19]
      io.out.bits.way_en <= io.in[6].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.idx <= io.in[6].bits.idx @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[6].bits.addr @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[6].bits.write @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    when io.in[5].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<3>("h05") @[Arbiter.scala 127:17]
      io.out.bits.data <= io.in[5].bits.data @[Arbiter.scala 128:19]
      io.out.bits.way_en <= io.in[5].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.idx <= io.in[5].bits.idx @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[5].bits.addr @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[5].bits.write @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    when io.in[4].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<3>("h04") @[Arbiter.scala 127:17]
      io.out.bits.data <= io.in[4].bits.data @[Arbiter.scala 128:19]
      io.out.bits.way_en <= io.in[4].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.idx <= io.in[4].bits.idx @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[4].bits.addr @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[4].bits.write @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    when io.in[3].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<2>("h03") @[Arbiter.scala 127:17]
      io.out.bits.data <= io.in[3].bits.data @[Arbiter.scala 128:19]
      io.out.bits.way_en <= io.in[3].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.idx <= io.in[3].bits.idx @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[3].bits.addr @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[3].bits.write @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    when io.in[2].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<2>("h02") @[Arbiter.scala 127:17]
      io.out.bits.data <= io.in[2].bits.data @[Arbiter.scala 128:19]
      io.out.bits.way_en <= io.in[2].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.idx <= io.in[2].bits.idx @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[2].bits.addr @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[2].bits.write @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    when io.in[1].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<1>("h01") @[Arbiter.scala 127:17]
      io.out.bits.data <= io.in[1].bits.data @[Arbiter.scala 128:19]
      io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.idx <= io.in[1].bits.idx @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[1].bits.addr @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[1].bits.write @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    when io.in[0].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 127:17]
      io.out.bits.data <= io.in[0].bits.data @[Arbiter.scala 128:19]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.idx <= io.in[0].bits.idx @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[0].bits.addr @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[0].bits.write @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    node _grant_T = or(io.in[0].valid, io.in[1].valid) @[Arbiter.scala 31:68]
    node _grant_T_1 = or(_grant_T, io.in[2].valid) @[Arbiter.scala 31:68]
    node _grant_T_2 = or(_grant_T_1, io.in[3].valid) @[Arbiter.scala 31:68]
    node _grant_T_3 = or(_grant_T_2, io.in[4].valid) @[Arbiter.scala 31:68]
    node _grant_T_4 = or(_grant_T_3, io.in[5].valid) @[Arbiter.scala 31:68]
    node _grant_T_5 = or(_grant_T_4, io.in[6].valid) @[Arbiter.scala 31:68]
    node grant_1 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node grant_2 = eq(_grant_T, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node grant_3 = eq(_grant_T_1, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node grant_4 = eq(_grant_T_2, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node grant_5 = eq(_grant_T_3, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node grant_6 = eq(_grant_T_4, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node grant_7 = eq(_grant_T_5, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _io_in_0_ready_T = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 134:19]
    io.in[0].ready <= _io_in_0_ready_T @[Arbiter.scala 134:14]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[Arbiter.scala 134:19]
    io.in[1].ready <= _io_in_1_ready_T @[Arbiter.scala 134:14]
    node _io_in_2_ready_T = and(grant_2, io.out.ready) @[Arbiter.scala 134:19]
    io.in[2].ready <= _io_in_2_ready_T @[Arbiter.scala 134:14]
    node _io_in_3_ready_T = and(grant_3, io.out.ready) @[Arbiter.scala 134:19]
    io.in[3].ready <= _io_in_3_ready_T @[Arbiter.scala 134:14]
    node _io_in_4_ready_T = and(grant_4, io.out.ready) @[Arbiter.scala 134:19]
    io.in[4].ready <= _io_in_4_ready_T @[Arbiter.scala 134:14]
    node _io_in_5_ready_T = and(grant_5, io.out.ready) @[Arbiter.scala 134:19]
    io.in[5].ready <= _io_in_5_ready_T @[Arbiter.scala 134:14]
    node _io_in_6_ready_T = and(grant_6, io.out.ready) @[Arbiter.scala 134:19]
    io.in[6].ready <= _io_in_6_ready_T @[Arbiter.scala 134:14]
    node _io_in_7_ready_T = and(grant_7, io.out.ready) @[Arbiter.scala 134:19]
    io.in[7].ready <= _io_in_7_ready_T @[Arbiter.scala 134:14]
    node _io_out_valid_T = eq(grant_7, UInt<1>("h00")) @[Arbiter.scala 135:19]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[7].valid) @[Arbiter.scala 135:31]
    io.out.valid <= _io_out_valid_T_1 @[Arbiter.scala 135:16]
    
  module DCacheDataArray : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {valid : UInt<1>, bits : {addr : UInt<14>, write : UInt<1>, wdata : UInt<32>, wordMask : UInt<1>, eccMask : UInt<4>, way_en : UInt<1>}}, resp : UInt<32>[1]}
    
    clock is invalid
    reset is invalid
    io is invalid
    node eccMask_0 = bits(io.req.bits.eccMask, 0, 0) @[DCache.scala 50:82]
    node eccMask_1 = bits(io.req.bits.eccMask, 1, 1) @[DCache.scala 50:82]
    node eccMask_2 = bits(io.req.bits.eccMask, 2, 2) @[DCache.scala 50:82]
    node eccMask_3 = bits(io.req.bits.eccMask, 3, 3) @[DCache.scala 50:82]
    node wWords_0 = bits(io.req.bits.wdata, 31, 0) @[package.scala 202:50]
    node addr = shr(io.req.bits.addr, 2) @[DCache.scala 53:31]
    smem data_arrays_0 : UInt<8>[4][4096], undefined @[DescribedSRAM.scala 19:26]
    node _rdata_valid_T = bits(io.req.bits.wordMask, 0, 0) @[DCache.scala 65:85]
    node _rdata_valid_T_1 = or(UInt<1>("h01"), _rdata_valid_T) @[DCache.scala 65:62]
    node rdata_valid = and(io.req.valid, _rdata_valid_T_1) @[DCache.scala 65:30]
    node _rdata_T = and(rdata_valid, io.req.bits.write) @[DCache.scala 66:17]
    when _rdata_T : @[DCache.scala 66:39]
      node rdata_wData_0 = bits(wWords_0, 7, 0) @[package.scala 202:50]
      node rdata_wData_1 = bits(wWords_0, 15, 8) @[package.scala 202:50]
      node rdata_wData_2 = bits(wWords_0, 23, 16) @[package.scala 202:50]
      node rdata_wData_3 = bits(wWords_0, 31, 24) @[package.scala 202:50]
      wire _rdata_WIRE : UInt<8>[4] @[DCache.scala 69:28]
      _rdata_WIRE is invalid @[DCache.scala 69:28]
      _rdata_WIRE[0] <= rdata_wData_0 @[DCache.scala 69:28]
      _rdata_WIRE[1] <= rdata_wData_1 @[DCache.scala 69:28]
      _rdata_WIRE[2] <= rdata_wData_2 @[DCache.scala 69:28]
      _rdata_WIRE[3] <= rdata_wData_3 @[DCache.scala 69:28]
      write mport rdata_MPORT = data_arrays_0[addr], clock
      when eccMask_0 :
        rdata_MPORT[0] <= _rdata_WIRE[0]
        skip
      when eccMask_1 :
        rdata_MPORT[1] <= _rdata_WIRE[1]
        skip
      when eccMask_2 :
        rdata_MPORT[2] <= _rdata_WIRE[2]
        skip
      when eccMask_3 :
        rdata_MPORT[3] <= _rdata_WIRE[3]
        skip
      skip @[DCache.scala 66:39]
    node _rdata_data_T = eq(io.req.bits.write, UInt<1>("h00")) @[DCache.scala 71:42]
    node _rdata_data_T_1 = and(rdata_valid, _rdata_data_T) @[DCache.scala 71:39]
    wire _rdata_data_WIRE : UInt @[DCache.scala 71:26]
    _rdata_data_WIRE is invalid @[DCache.scala 71:26]
    _rdata_data_WIRE is invalid @[DCache.scala 71:26]
    when _rdata_data_T_1 : @[DCache.scala 71:26]
      _rdata_data_WIRE <= addr @[DCache.scala 71:26]
      node _rdata_data_T_2 = or(_rdata_data_WIRE, UInt<12>("h00")) @[DCache.scala 71:26]
      node _rdata_data_T_3 = bits(_rdata_data_T_2, 11, 0) @[DCache.scala 71:26]
      read mport rdata_data = data_arrays_0[_rdata_data_T_3], clock @[DCache.scala 71:26]
      skip @[DCache.scala 71:26]
    node rdata_lo = cat(rdata_data[1], rdata_data[0]) @[Cat.scala 30:58]
    node rdata_hi = cat(rdata_data[3], rdata_data[2]) @[Cat.scala 30:58]
    node rdata_0_0 = cat(rdata_hi, rdata_lo) @[Cat.scala 30:58]
    io.resp[0] <= rdata_0_0 @[DCache.scala 74:69]
    
  module DCacheModuleImpl_Anon_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<14>, write : UInt<1>, wdata : UInt<32>, wordMask : UInt<1>, eccMask : UInt<4>, way_en : UInt<1>}}[4], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<14>, write : UInt<1>, wdata : UInt<32>, wordMask : UInt<1>, eccMask : UInt<4>, way_en : UInt<1>}}, chosen : UInt<2>}
    
    io.chosen <= UInt<2>("h03") @[Arbiter.scala 123:13]
    io.out.bits.way_en <= io.in[3].bits.way_en @[Arbiter.scala 124:15]
    io.out.bits.eccMask <= io.in[3].bits.eccMask @[Arbiter.scala 124:15]
    io.out.bits.wordMask <= io.in[3].bits.wordMask @[Arbiter.scala 124:15]
    io.out.bits.wdata <= io.in[3].bits.wdata @[Arbiter.scala 124:15]
    io.out.bits.write <= io.in[3].bits.write @[Arbiter.scala 124:15]
    io.out.bits.addr <= io.in[3].bits.addr @[Arbiter.scala 124:15]
    when io.in[2].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<2>("h02") @[Arbiter.scala 127:17]
      io.out.bits.way_en <= io.in[2].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.eccMask <= io.in[2].bits.eccMask @[Arbiter.scala 128:19]
      io.out.bits.wordMask <= io.in[2].bits.wordMask @[Arbiter.scala 128:19]
      io.out.bits.wdata <= io.in[2].bits.wdata @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[2].bits.write @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[2].bits.addr @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    when io.in[1].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<1>("h01") @[Arbiter.scala 127:17]
      io.out.bits.way_en <= io.in[1].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.eccMask <= io.in[1].bits.eccMask @[Arbiter.scala 128:19]
      io.out.bits.wordMask <= io.in[1].bits.wordMask @[Arbiter.scala 128:19]
      io.out.bits.wdata <= io.in[1].bits.wdata @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[1].bits.write @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[1].bits.addr @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    when io.in[0].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 127:17]
      io.out.bits.way_en <= io.in[0].bits.way_en @[Arbiter.scala 128:19]
      io.out.bits.eccMask <= io.in[0].bits.eccMask @[Arbiter.scala 128:19]
      io.out.bits.wordMask <= io.in[0].bits.wordMask @[Arbiter.scala 128:19]
      io.out.bits.wdata <= io.in[0].bits.wdata @[Arbiter.scala 128:19]
      io.out.bits.write <= io.in[0].bits.write @[Arbiter.scala 128:19]
      io.out.bits.addr <= io.in[0].bits.addr @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    node _grant_T = or(io.in[0].valid, io.in[1].valid) @[Arbiter.scala 31:68]
    node _grant_T_1 = or(_grant_T, io.in[2].valid) @[Arbiter.scala 31:68]
    node grant_1 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node grant_2 = eq(_grant_T, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node grant_3 = eq(_grant_T_1, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _io_in_0_ready_T = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 134:19]
    io.in[0].ready <= _io_in_0_ready_T @[Arbiter.scala 134:14]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[Arbiter.scala 134:19]
    io.in[1].ready <= _io_in_1_ready_T @[Arbiter.scala 134:14]
    node _io_in_2_ready_T = and(grant_2, io.out.ready) @[Arbiter.scala 134:19]
    io.in[2].ready <= _io_in_2_ready_T @[Arbiter.scala 134:14]
    node _io_in_3_ready_T = and(grant_3, io.out.ready) @[Arbiter.scala 134:19]
    io.in[3].ready <= _io_in_3_ready_T @[Arbiter.scala 134:14]
    node _io_out_valid_T = eq(grant_3, UInt<1>("h00")) @[Arbiter.scala 135:19]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[3].valid) @[Arbiter.scala 135:31]
    io.out.valid <= _io_out_valid_T_1 @[Arbiter.scala 135:16]
    
  module AMOALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip mask : UInt<4>, flip cmd : UInt<5>, flip lhs : UInt<32>, flip rhs : UInt<32>, out : UInt<32>, out_unmasked : UInt<32>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _max_T = eq(io.cmd, UInt<4>("h0d")) @[AMOALU.scala 64:20]
    node _max_T_1 = eq(io.cmd, UInt<4>("h0f")) @[AMOALU.scala 64:43]
    node max = or(_max_T, _max_T_1) @[AMOALU.scala 64:33]
    node _min_T = eq(io.cmd, UInt<4>("h0c")) @[AMOALU.scala 65:20]
    node _min_T_1 = eq(io.cmd, UInt<4>("h0e")) @[AMOALU.scala 65:43]
    node min = or(_min_T, _min_T_1) @[AMOALU.scala 65:33]
    node add = eq(io.cmd, UInt<4>("h08")) @[AMOALU.scala 66:20]
    node _logic_and_T = eq(io.cmd, UInt<4>("h0a")) @[AMOALU.scala 67:26]
    node _logic_and_T_1 = eq(io.cmd, UInt<4>("h0b")) @[AMOALU.scala 67:48]
    node logic_and = or(_logic_and_T, _logic_and_T_1) @[AMOALU.scala 67:38]
    node _logic_xor_T = eq(io.cmd, UInt<4>("h09")) @[AMOALU.scala 68:26]
    node _logic_xor_T_1 = eq(io.cmd, UInt<4>("h0a")) @[AMOALU.scala 68:49]
    node logic_xor = or(_logic_xor_T, _logic_xor_T_1) @[AMOALU.scala 68:39]
    node adder_out_mask = not(UInt<32>("h00")) @[AMOALU.scala 72:16]
    node _adder_out_T = and(io.lhs, adder_out_mask) @[AMOALU.scala 73:13]
    node _adder_out_T_1 = and(io.rhs, adder_out_mask) @[AMOALU.scala 73:31]
    node _adder_out_T_2 = add(_adder_out_T, _adder_out_T_1) @[AMOALU.scala 73:21]
    node adder_out = tail(_adder_out_T_2, 1) @[AMOALU.scala 73:21]
    node _less_T = bits(io.mask, 2, 2) @[AMOALU.scala 91:49]
    node less_signed_mask = xor(UInt<4>("h0c"), UInt<4>("h0e")) @[AMOALU.scala 85:29]
    node _less_signed_T = and(io.cmd, less_signed_mask) @[AMOALU.scala 86:17]
    node _less_signed_T_1 = and(UInt<4>("h0c"), less_signed_mask) @[AMOALU.scala 86:39]
    node less_signed = eq(_less_signed_T, _less_signed_T_1) @[AMOALU.scala 86:25]
    node _less_T_1 = bits(io.lhs, 31, 31) @[AMOALU.scala 88:12]
    node _less_T_2 = bits(io.rhs, 31, 31) @[AMOALU.scala 88:23]
    node _less_T_3 = eq(_less_T_1, _less_T_2) @[AMOALU.scala 88:18]
    node _less_T_4 = bits(io.lhs, 31, 0) @[AMOALU.scala 79:26]
    node _less_T_5 = bits(io.rhs, 31, 0) @[AMOALU.scala 79:38]
    node _less_T_6 = lt(_less_T_4, _less_T_5) @[AMOALU.scala 79:35]
    node _less_T_7 = bits(io.lhs, 31, 31) @[AMOALU.scala 88:68]
    node _less_T_8 = bits(io.rhs, 31, 31) @[AMOALU.scala 88:76]
    node _less_T_9 = mux(less_signed, _less_T_7, _less_T_8) @[AMOALU.scala 88:58]
    node less = mux(_less_T_3, _less_T_6, _less_T_9) @[AMOALU.scala 88:10]
    node _minmax_T = mux(less, min, max) @[AMOALU.scala 94:23]
    node minmax = mux(_minmax_T, io.lhs, io.rhs) @[AMOALU.scala 94:19]
    node _logic_T = and(io.lhs, io.rhs) @[AMOALU.scala 96:27]
    node _logic_T_1 = mux(logic_and, _logic_T, UInt<1>("h00")) @[AMOALU.scala 96:8]
    node _logic_T_2 = xor(io.lhs, io.rhs) @[AMOALU.scala 97:27]
    node _logic_T_3 = mux(logic_xor, _logic_T_2, UInt<1>("h00")) @[AMOALU.scala 97:8]
    node logic = or(_logic_T_1, _logic_T_3) @[AMOALU.scala 96:42]
    node _out_T = or(logic_and, logic_xor) @[AMOALU.scala 100:19]
    node _out_T_1 = mux(_out_T, logic, minmax) @[AMOALU.scala 100:8]
    node out = mux(add, adder_out, _out_T_1) @[AMOALU.scala 99:8]
    node _wmask_T = bits(io.mask, 0, 0) @[Bitwise.scala 26:51]
    node _wmask_T_1 = bits(io.mask, 1, 1) @[Bitwise.scala 26:51]
    node _wmask_T_2 = bits(io.mask, 2, 2) @[Bitwise.scala 26:51]
    node _wmask_T_3 = bits(io.mask, 3, 3) @[Bitwise.scala 26:51]
    node _wmask_T_4 = bits(_wmask_T, 0, 0) @[Bitwise.scala 72:15]
    node wmask_lo_lo = mux(_wmask_T_4, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _wmask_T_5 = bits(_wmask_T_1, 0, 0) @[Bitwise.scala 72:15]
    node wmask_lo_hi = mux(_wmask_T_5, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _wmask_T_6 = bits(_wmask_T_2, 0, 0) @[Bitwise.scala 72:15]
    node wmask_hi_lo = mux(_wmask_T_6, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node _wmask_T_7 = bits(_wmask_T_3, 0, 0) @[Bitwise.scala 72:15]
    node wmask_hi_hi = mux(_wmask_T_7, UInt<8>("h0ff"), UInt<8>("h00")) @[Bitwise.scala 72:12]
    node wmask_lo = cat(wmask_lo_hi, wmask_lo_lo) @[Cat.scala 30:58]
    node wmask_hi = cat(wmask_hi_hi, wmask_hi_lo) @[Cat.scala 30:58]
    node wmask = cat(wmask_hi, wmask_lo) @[Cat.scala 30:58]
    node _io_out_T = and(wmask, out) @[AMOALU.scala 104:19]
    node _io_out_T_1 = not(wmask) @[AMOALU.scala 104:27]
    node _io_out_T_2 = and(_io_out_T_1, io.lhs) @[AMOALU.scala 104:34]
    node _io_out_T_3 = or(_io_out_T, _io_out_T_2) @[AMOALU.scala 104:25]
    io.out <= _io_out_T_3 @[AMOALU.scala 104:10]
    io.out_unmasked <= out @[AMOALU.scala 105:19]
    
  module ICache : 
    input clock : Clock
    input reset : Reset
    output auto : {master_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}}}
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {addr : UInt<32>}}, flip s1_paddr : UInt<32>, flip s2_vaddr : UInt<32>, flip s1_kill : UInt<1>, flip s2_kill : UInt<1>, flip s2_prefetch : UInt<1>, resp : {valid : UInt<1>, bits : {data : UInt<32>, replay : UInt<1>, ae : UInt<1>}}, flip invalidate : UInt<1>, errors : {bus : {valid : UInt<1>, bits : UInt<32>}}, perf : {acquire : UInt<1>}, flip clock_enabled : UInt<1>, keep_clock_enabled : UInt<1>}
    
    clock is invalid
    reset is invalid
    auto is invalid
    io is invalid
    wire tl_out : {a : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, flip d : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, sink : UInt<1>, denied : UInt<1>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}}} @[Nodes.scala 1207:84]
    tl_out is invalid @[Nodes.scala 1207:84]
    auto.master_out <- tl_out @[LazyModule.scala 311:12]
    reg scratchpadOn : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 150:29]
    reg s1_slaveValid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 162:30]
    s1_slaveValid <= UInt<1>("h00") @[ICache.scala 162:30]
    reg s2_slaveValid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 163:30]
    s2_slaveValid <= s1_slaveValid @[ICache.scala 163:30]
    reg s3_slaveValid : UInt<1>, clock @[ICache.scala 164:30]
    s3_slaveValid <= UInt<1>("h00") @[ICache.scala 164:30]
    node s0_valid = and(io.req.ready, io.req.valid) @[Decoupled.scala 40:37]
    reg s1_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 169:21]
    reg s1_vaddr : UInt<32>, clock @[Reg.scala 15:16]
    when s0_valid : @[Reg.scala 16:19]
      s1_vaddr <= io.req.bits.addr @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    wire s1_tag_hit : UInt<1>[1] @[ICache.scala 171:24]
    s1_tag_hit is invalid @[ICache.scala 171:24]
    node _s1_hit_T = mux(s1_slaveValid, UInt<1>("h01"), UInt<1>("h00")) @[ICache.scala 172:46]
    node s1_hit = or(s1_tag_hit[0], _s1_hit_T) @[ICache.scala 172:40]
    node _s2_valid_T = eq(io.s1_kill, UInt<1>("h00")) @[ICache.scala 174:38]
    node _s2_valid_T_1 = and(s1_valid, _s2_valid_T) @[ICache.scala 174:35]
    reg s2_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 174:25]
    s2_valid <= _s2_valid_T_1 @[ICache.scala 174:25]
    reg s2_hit : UInt<1>, clock @[ICache.scala 175:23]
    s2_hit <= s1_hit @[ICache.scala 175:23]
    reg invalidated : UInt<1>, clock @[ICache.scala 177:24]
    reg refill_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 178:29]
    reg send_hint : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 179:26]
    node _refill_fire_T = and(tl_out.a.ready, tl_out.a.valid) @[Decoupled.scala 40:37]
    node _refill_fire_T_1 = eq(send_hint, UInt<1>("h00")) @[ICache.scala 180:40]
    node refill_fire = and(_refill_fire_T, _refill_fire_T_1) @[ICache.scala 180:37]
    reg hint_outstanding : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[ICache.scala 181:33]
    node _s2_miss_T = eq(s2_hit, UInt<1>("h00")) @[ICache.scala 182:29]
    node _s2_miss_T_1 = and(s2_valid, _s2_miss_T) @[ICache.scala 182:26]
    node _s2_miss_T_2 = eq(io.s2_kill, UInt<1>("h00")) @[ICache.scala 182:40]
    node s2_miss = and(_s2_miss_T_1, _s2_miss_T_2) @[ICache.scala 182:37]
    node _s1_can_request_refill_T = or(s2_miss, refill_valid) @[ICache.scala 183:41]
    node s1_can_request_refill = eq(_s1_can_request_refill_T, UInt<1>("h00")) @[ICache.scala 183:31]
    reg s2_request_refill_REG : UInt<1>, clock @[ICache.scala 184:45]
    s2_request_refill_REG <= s1_can_request_refill @[ICache.scala 184:45]
    node s2_request_refill = and(s2_miss, s2_request_refill_REG) @[ICache.scala 184:35]
    node _refill_paddr_T = and(s1_valid, s1_can_request_refill) @[ICache.scala 185:54]
    reg refill_paddr : UInt<32>, clock @[Reg.scala 15:16]
    when _refill_paddr_T : @[Reg.scala 16:19]
      refill_paddr <= io.s1_paddr @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _refill_vaddr_T = and(s1_valid, s1_can_request_refill) @[ICache.scala 186:51]
    reg refill_vaddr : UInt<32>, clock @[Reg.scala 15:16]
    when _refill_vaddr_T : @[Reg.scala 16:19]
      refill_vaddr <= s1_vaddr @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node refill_tag = shr(refill_paddr, 12) @[ICache.scala 187:33]
    node refill_idx = bits(refill_paddr, 11, 6) @[ICache.scala 483:21]
    node _refill_one_beat_T = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    node refill_one_beat_opdata = bits(tl_out.d.bits.opcode, 0, 0) @[Edges.scala 105:36]
    node refill_one_beat = and(_refill_one_beat_T, refill_one_beat_opdata) @[ICache.scala 189:41]
    node _io_req_ready_T = or(refill_one_beat, UInt<1>("h00")) @[ICache.scala 191:37]
    node _io_req_ready_T_1 = or(_io_req_ready_T, s3_slaveValid) @[ICache.scala 191:54]
    node _io_req_ready_T_2 = eq(_io_req_ready_T_1, UInt<1>("h00")) @[ICache.scala 191:19]
    io.req.ready <= _io_req_ready_T_2 @[ICache.scala 191:16]
    s1_valid <= s0_valid @[ICache.scala 192:12]
    node _T = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    node _beats1_decode_T = asUInt(asSInt(UInt<12>("h0fff"))) @[package.scala 234:70]
    node _beats1_decode_T_1 = dshl(_beats1_decode_T, tl_out.d.bits.size) @[package.scala 234:77]
    node _beats1_decode_T_2 = bits(_beats1_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beats1_decode_T_3 = not(_beats1_decode_T_2) @[package.scala 234:46]
    node beats1_decode = shr(_beats1_decode_T_3, 2) @[Edges.scala 219:59]
    node beats1_opdata = bits(tl_out.d.bits.opcode, 0, 0) @[Edges.scala 105:36]
    node beats1 = mux(beats1_opdata, beats1_decode, UInt<1>("h00")) @[Edges.scala 220:14]
    reg counter : UInt<10>, clock with : (reset => (reset, UInt<10>("h00"))) @[Edges.scala 228:27]
    node _counter1_T = sub(counter, UInt<1>("h01")) @[Edges.scala 229:28]
    node counter1 = tail(_counter1_T, 1) @[Edges.scala 229:28]
    node first = eq(counter, UInt<1>("h00")) @[Edges.scala 230:25]
    node _last_T = eq(counter, UInt<1>("h01")) @[Edges.scala 231:25]
    node _last_T_1 = eq(beats1, UInt<1>("h00")) @[Edges.scala 231:47]
    node last = or(_last_T, _last_T_1) @[Edges.scala 231:37]
    node d_done = and(last, _T) @[Edges.scala 232:22]
    node _count_T = not(counter1) @[Edges.scala 233:27]
    node refill_cnt = and(beats1, _count_T) @[Edges.scala 233:25]
    when _T : @[Edges.scala 234:17]
      node _counter_T = mux(first, beats1, counter1) @[Edges.scala 235:21]
      counter <= _counter_T @[Edges.scala 235:15]
      skip @[Edges.scala 234:17]
    node refill_done = and(refill_one_beat, d_done) @[ICache.scala 195:37]
    node _bundleOut_0_d_ready_T = eq(s3_slaveValid, UInt<1>("h00")) @[ICache.scala 196:21]
    tl_out.d.ready <= _bundleOut_0_d_ready_T @[ICache.scala 196:18]
    smem tag_array : UInt<21>[1][64], undefined @[DescribedSRAM.scala 19:26]
    node _tag_rdata_T = bits(io.req.bits.addr, 11, 6) @[ICache.scala 218:42]
    node _tag_rdata_T_1 = eq(refill_done, UInt<1>("h00")) @[ICache.scala 218:70]
    node _tag_rdata_T_2 = and(_tag_rdata_T_1, s0_valid) @[ICache.scala 218:83]
    wire _tag_rdata_WIRE : UInt @[ICache.scala 218:33]
    _tag_rdata_WIRE is invalid @[ICache.scala 218:33]
    _tag_rdata_WIRE is invalid @[ICache.scala 218:33]
    when _tag_rdata_T_2 : @[ICache.scala 218:33]
      _tag_rdata_WIRE <= _tag_rdata_T @[ICache.scala 218:33]
      node _tag_rdata_T_3 = or(_tag_rdata_WIRE, UInt<6>("h00")) @[ICache.scala 218:33]
      node _tag_rdata_T_4 = bits(_tag_rdata_T_3, 5, 0) @[ICache.scala 218:33]
      read mport tag_rdata = tag_array[_tag_rdata_T_4], clock @[ICache.scala 218:33]
      skip @[ICache.scala 218:33]
    reg accruedRefillError : UInt<1>, clock @[ICache.scala 219:31]
    node _refillError_T = gt(refill_cnt, UInt<1>("h00")) @[ICache.scala 220:58]
    node _refillError_T_1 = and(_refillError_T, accruedRefillError) @[ICache.scala 220:62]
    node refillError = or(tl_out.d.bits.corrupt, _refillError_T_1) @[ICache.scala 220:43]
    when refill_done : @[ICache.scala 221:22]
      node enc_tag = cat(refillError, refill_tag) @[Cat.scala 30:58]
      wire _WIRE : UInt<21>[1] @[compatibility.scala 127:12]
      _WIRE is invalid @[compatibility.scala 127:12]
      _WIRE[0] <= enc_tag @[compatibility.scala 127:12]
      node _T_1 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 224:88]
      write mport MPORT = tag_array[refill_idx], clock
      when _T_1 :
        MPORT[0] <= _WIRE[0]
        skip
      skip @[ICache.scala 221:22]
    node _io_errors_bus_valid_T = and(tl_out.d.ready, tl_out.d.valid) @[Decoupled.scala 40:37]
    node _io_errors_bus_valid_T_1 = or(tl_out.d.bits.denied, tl_out.d.bits.corrupt) @[ICache.scala 228:67]
    node _io_errors_bus_valid_T_2 = and(_io_errors_bus_valid_T, _io_errors_bus_valid_T_1) @[ICache.scala 228:42]
    io.errors.bus.valid <= _io_errors_bus_valid_T_2 @[ICache.scala 228:23]
    node _io_errors_bus_bits_T = shr(refill_paddr, 6) @[ICache.scala 229:40]
    node _io_errors_bus_bits_T_1 = shl(_io_errors_bus_bits_T, 6) @[ICache.scala 229:57]
    io.errors.bus.bits <= _io_errors_bus_bits_T_1 @[ICache.scala 229:23]
    reg vb_array : UInt<64>, clock with : (reset => (reset, UInt<64>("h00"))) @[ICache.scala 231:21]
    when refill_one_beat : @[ICache.scala 232:26]
      accruedRefillError <= refillError @[ICache.scala 233:24]
      node _vb_array_T = cat(UInt<1>("h00"), refill_idx) @[Cat.scala 30:58]
      node _vb_array_T_1 = eq(invalidated, UInt<1>("h00")) @[ICache.scala 235:75]
      node _vb_array_T_2 = and(refill_done, _vb_array_T_1) @[ICache.scala 235:72]
      node _vb_array_T_3 = dshl(UInt<1>("h01"), _vb_array_T) @[ICache.scala 235:32]
      node _vb_array_T_4 = or(vb_array, _vb_array_T_3) @[ICache.scala 235:32]
      node _vb_array_T_5 = not(vb_array) @[ICache.scala 235:32]
      node _vb_array_T_6 = or(_vb_array_T_5, _vb_array_T_3) @[ICache.scala 235:32]
      node _vb_array_T_7 = not(_vb_array_T_6) @[ICache.scala 235:32]
      node _vb_array_T_8 = mux(_vb_array_T_2, _vb_array_T_4, _vb_array_T_7) @[ICache.scala 235:32]
      vb_array <= _vb_array_T_8 @[ICache.scala 235:14]
      skip @[ICache.scala 232:26]
    wire invalidate : UInt<1>
    invalidate is invalid
    invalidate <= io.invalidate
    when invalidate : @[ICache.scala 238:21]
      vb_array <= UInt<1>("h00") @[ICache.scala 239:14]
      invalidated <= UInt<1>("h01") @[ICache.scala 240:17]
      skip @[ICache.scala 238:21]
    wire s1_tag_disparity : UInt<1>[1] @[ICache.scala 243:30]
    s1_tag_disparity is invalid @[ICache.scala 243:30]
    wire s1_tl_error : UInt<1>[1] @[ICache.scala 244:25]
    s1_tl_error is invalid @[ICache.scala 244:25]
    wire s1_dout : UInt<32>[1] @[ICache.scala 246:21]
    s1_dout is invalid @[ICache.scala 246:21]
    reg s1s3_slaveAddr : UInt<12>, clock @[ICache.scala 249:27]
    reg s1s3_slaveData : UInt<32>, clock @[ICache.scala 250:27]
    node s1_vb_lo = bits(io.s1_paddr, 11, 6) @[ICache.scala 483:21]
    node s1_tag = shr(io.s1_paddr, 12) @[ICache.scala 254:30]
    node _scratchpadHit_T = lt(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 159:43]
    node _scratchpadHit_T_1 = bits(s1s3_slaveAddr, 11, 6) @[ICache.scala 160:40]
    node _scratchpadHit_T_2 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 257:91]
    node _scratchpadHit_T_3 = and(UInt<1>("h00"), _scratchpadHit_T_2) @[ICache.scala 257:58]
    node _scratchpadHit_T_4 = bits(io.s1_paddr, 11, 6) @[ICache.scala 157:90]
    node _scratchpadHit_T_5 = and(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 157:66]
    node _scratchpadHit_T_6 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 258:69]
    node _scratchpadHit_T_7 = and(_scratchpadHit_T_5, _scratchpadHit_T_6) @[ICache.scala 258:39]
    node _scratchpadHit_T_8 = mux(s1_slaveValid, _scratchpadHit_T_3, _scratchpadHit_T_7) @[ICache.scala 256:10]
    node scratchpadHit = and(_scratchpadHit_T, _scratchpadHit_T_8) @[ICache.scala 255:47]
    node _s1_vb_T = cat(UInt<1>("h00"), s1_vb_lo) @[Cat.scala 30:58]
    node _s1_vb_T_1 = dshr(vb_array, _s1_vb_T) @[ICache.scala 259:25]
    node _s1_vb_T_2 = bits(_s1_vb_T_1, 0, 0) @[ICache.scala 259:25]
    node _s1_vb_T_3 = eq(s1_slaveValid, UInt<1>("h00")) @[ICache.scala 259:51]
    node s1_vb = and(_s1_vb_T_2, _s1_vb_T_3) @[ICache.scala 259:48]
    node tl_error = bits(tag_rdata[0], 20, 20) @[package.scala 154:13]
    node tag = bits(tag_rdata[0], 19, 0) @[package.scala 154:13]
    node _tagMatch_T = eq(tag, s1_tag) @[ICache.scala 262:33]
    node tagMatch = and(s1_vb, _tagMatch_T) @[ICache.scala 262:26]
    node _s1_tag_disparity_0_T = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 14:27]
    node _s1_tag_disparity_0_T_1 = and(s1_vb, _s1_tag_disparity_0_T) @[ICache.scala 263:34]
    s1_tag_disparity[0] <= _s1_tag_disparity_0_T_1 @[ICache.scala 263:25]
    node _s1_tl_error_0_T = bits(tl_error, 0, 0) @[ICache.scala 264:44]
    node _s1_tl_error_0_T_1 = and(tagMatch, _s1_tl_error_0_T) @[ICache.scala 264:32]
    s1_tl_error[0] <= _s1_tl_error_0_T_1 @[ICache.scala 264:20]
    node _s1_tag_hit_0_T = or(tagMatch, scratchpadHit) @[ICache.scala 265:31]
    s1_tag_hit[0] <= _s1_tag_hit_0_T @[ICache.scala 265:19]
    node _T_2 = or(s1_valid, s1_slaveValid) @[ICache.scala 267:21]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[ICache.scala 267:10]
    node _T_4 = eq(s1_tag_disparity[0], UInt<1>("h00")) @[ICache.scala 267:109]
    node _T_5 = and(s1_tag_hit[0], _T_4) @[ICache.scala 267:106]
    node _T_6 = leq(_T_5, UInt<1>("h01")) @[ICache.scala 267:115]
    node _T_7 = or(_T_3, _T_6) @[ICache.scala 267:39]
    node _T_8 = asUInt(reset) @[ICache.scala 267:9]
    node _T_9 = or(_T_7, _T_8) @[ICache.scala 267:9]
    node _T_10 = eq(_T_9, UInt<1>("h00")) @[ICache.scala 267:9]
    when _T_10 : @[ICache.scala 267:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at ICache.scala:267 assert(!(s1_valid || s1_slaveValid) || PopCount(s1_tag_hit zip s1_tag_disparity map { case (h, d) => h && !d }) <= 1)\n") @[ICache.scala 267:9]
      stop(clock, UInt<1>(1), 1) @[ICache.scala 267:9]
      skip @[ICache.scala 267:9]
    smem data_arrays_0 : UInt<32>[1][1024], undefined @[DescribedSRAM.scala 19:26]
    node _s0_ren_T = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 282:111]
    node _s0_ren_T_1 = and(s0_valid, _s0_ren_T) @[ICache.scala 284:28]
    node _s0_ren_T_2 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 282:111]
    node _s0_ren_T_3 = and(UInt<1>("h00"), _s0_ren_T_2) @[ICache.scala 284:70]
    node s0_ren = or(_s0_ren_T_1, _s0_ren_T_3) @[ICache.scala 284:52]
    node _wen_T = eq(invalidated, UInt<1>("h00")) @[ICache.scala 285:35]
    node _wen_T_1 = and(refill_one_beat, _wen_T) @[ICache.scala 285:32]
    node _wen_T_2 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 282:111]
    node _wen_T_3 = and(s3_slaveValid, _wen_T_2) @[ICache.scala 285:67]
    node wen = or(_wen_T_1, _wen_T_3) @[ICache.scala 285:49]
    node _mem_idx_T = shl(refill_idx, 4) @[ICache.scala 286:52]
    node _mem_idx_T_1 = or(_mem_idx_T, refill_cnt) @[ICache.scala 286:79]
    node _mem_idx_T_2 = bits(s1s3_slaveAddr, 11, 2) @[ICache.scala 283:31]
    node _mem_idx_T_3 = bits(io.req.bits.addr, 11, 2) @[ICache.scala 283:31]
    node _mem_idx_T_4 = mux(UInt<1>("h00"), UInt<10>("h00"), _mem_idx_T_3) @[ICache.scala 288:22]
    node _mem_idx_T_5 = mux(s3_slaveValid, _mem_idx_T_2, _mem_idx_T_4) @[ICache.scala 287:22]
    node mem_idx = mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_5) @[ICache.scala 286:22]
    when wen : @[ICache.scala 290:16]
      node _data_T = bits(tl_out.d.bits.data, 31, 0) @[ICache.scala 291:71]
      node data = mux(s3_slaveValid, s1s3_slaveData, _data_T) @[ICache.scala 291:21]
      node way = mux(s3_slaveValid, UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 292:20]
      wire _WIRE_1 : UInt<32>[1] @[compatibility.scala 127:12]
      _WIRE_1 is invalid @[compatibility.scala 127:12]
      _WIRE_1[0] <= data @[compatibility.scala 127:12]
      node _T_11 = eq(way, UInt<1>("h00")) @[ICache.scala 293:93]
      write mport MPORT_1 = data_arrays_0[mem_idx], clock
      when _T_11 :
        MPORT_1[0] <= _WIRE_1[0]
        skip
      skip @[ICache.scala 290:16]
    node _dout_T = eq(wen, UInt<1>("h00")) @[ICache.scala 295:41]
    node _dout_T_1 = and(_dout_T, s0_ren) @[ICache.scala 295:46]
    wire _dout_WIRE : UInt @[ICache.scala 295:31]
    _dout_WIRE is invalid @[ICache.scala 295:31]
    _dout_WIRE is invalid @[ICache.scala 295:31]
    when _dout_T_1 : @[ICache.scala 295:31]
      _dout_WIRE <= mem_idx @[ICache.scala 295:31]
      node _dout_T_2 = or(_dout_WIRE, UInt<10>("h00")) @[ICache.scala 295:31]
      node _dout_T_3 = bits(_dout_T_2, 9, 0) @[ICache.scala 295:31]
      read mport dout = data_arrays_0[_dout_T_3], clock @[ICache.scala 295:31]
      skip @[ICache.scala 295:31]
    node _T_12 = mux(s1_slaveValid, s1s3_slaveAddr, io.s1_paddr) @[ICache.scala 296:24]
    node _T_13 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 282:111]
    when _T_13 : @[ICache.scala 296:71]
      s1_dout <- dout @[ICache.scala 297:15]
      skip @[ICache.scala 296:71]
    node s1_clk_en = or(s1_valid, s1_slaveValid) @[ICache.scala 301:28]
    reg s2_tag_hit : UInt<1>[1], clock @[Reg.scala 15:16]
    when s1_clk_en : @[Reg.scala 16:19]
      s2_tag_hit[0] <= s1_tag_hit[0] @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _s2_scratchpad_word_addr_T = mux(s2_slaveValid, s1s3_slaveAddr, io.s2_vaddr) @[ICache.scala 304:52]
    node s2_scratchpad_word_addr_hi_lo = bits(_s2_scratchpad_word_addr_T, 11, 2) @[ICache.scala 304:96]
    node s2_scratchpad_word_addr_hi = cat(UInt<1>("h00"), s2_scratchpad_word_addr_hi_lo) @[Cat.scala 30:58]
    node s2_scratchpad_word_addr = cat(s2_scratchpad_word_addr_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    reg s2_dout : UInt<32>[1], clock @[Reg.scala 15:16]
    when s1_clk_en : @[Reg.scala 16:19]
      s2_dout[0] <= s1_dout[0] @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    reg s2_tag_disparity_r : UInt<1>[1], clock @[Reg.scala 15:16]
    when s1_clk_en : @[Reg.scala 16:19]
      s2_tag_disparity_r[0] <= s1_tag_disparity[0] @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node s2_tag_disparity = orr(s2_tag_disparity_r[0]) @[ICache.scala 308:72]
    node _s2_tl_error_T = orr(s1_tl_error[0]) @[ICache.scala 309:50]
    reg s2_tl_error : UInt<1>, clock @[Reg.scala 15:16]
    when s1_clk_en : @[Reg.scala 16:19]
      s2_tl_error <= _s2_tl_error_T @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _s2_disparity_T = or(UInt<1>("h00"), UInt<1>("h00")) @[ECC.scala 14:27]
    node s2_disparity = or(s2_tag_disparity, _s2_disparity_T) @[ICache.scala 311:39]
    wire s2_full_word_write : UInt<1>
    s2_full_word_write is invalid
    s2_full_word_write <= UInt<1>("h00")
    node _s1_scratchpad_hit_T = bits(s1s3_slaveAddr, 11, 6) @[ICache.scala 160:40]
    node _s1_scratchpad_hit_T_1 = bits(io.s1_paddr, 11, 6) @[ICache.scala 157:90]
    node _s1_scratchpad_hit_T_2 = and(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 157:66]
    node s1_scratchpad_hit = mux(s1_slaveValid, UInt<1>("h00"), _s1_scratchpad_hit_T_2) @[ICache.scala 314:30]
    reg s2_scratchpad_hit : UInt<1>, clock @[Reg.scala 15:16]
    when s1_clk_en : @[Reg.scala 16:19]
      s2_scratchpad_hit <= s1_scratchpad_hit @[Reg.scala 16:23]
      skip @[Reg.scala 16:19]
    node _s2_report_uncorrectable_error_T = and(s2_scratchpad_hit, UInt<1>("h00")) @[ICache.scala 316:57]
    node _s2_report_uncorrectable_error_T_1 = eq(s2_full_word_write, UInt<1>("h00")) @[ICache.scala 316:124]
    node _s2_report_uncorrectable_error_T_2 = and(s2_slaveValid, _s2_report_uncorrectable_error_T_1) @[ICache.scala 316:121]
    node _s2_report_uncorrectable_error_T_3 = or(s2_valid, _s2_report_uncorrectable_error_T_2) @[ICache.scala 316:103]
    node s2_report_uncorrectable_error = and(_s2_report_uncorrectable_error_T, _s2_report_uncorrectable_error_T_3) @[ICache.scala 316:90]
    node _T_14 = and(s2_valid, s2_disparity) @[ICache.scala 331:22]
    when _T_14 : @[ICache.scala 331:39]
      invalidate <= UInt<1>("h01") @[ICache.scala 331:52]
      skip @[ICache.scala 331:39]
    io.resp.bits.data <= s2_dout[0] @[ICache.scala 333:25]
    io.resp.bits.ae <= s2_tl_error @[ICache.scala 334:23]
    io.resp.bits.replay <= s2_disparity @[ICache.scala 335:27]
    node _io_resp_valid_T = and(s2_valid, s2_hit) @[ICache.scala 336:33]
    io.resp.valid <= _io_resp_valid_T @[ICache.scala 336:21]
    tl_out.a.valid <= s2_request_refill @[ICache.scala 415:18]
    node _bundleOut_0_a_bits_T = shr(refill_paddr, 6) @[ICache.scala 418:47]
    node _bundleOut_0_a_bits_T_1 = shl(_bundleOut_0_a_bits_T, 6) @[ICache.scala 418:64]
    node _bundleOut_0_a_bits_legal_T = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 92:32]
    node _bundleOut_0_a_bits_legal_T_1 = leq(UInt<3>("h06"), UInt<4>("h0c")) @[Parameters.scala 92:42]
    node _bundleOut_0_a_bits_legal_T_2 = and(_bundleOut_0_a_bits_legal_T, _bundleOut_0_a_bits_legal_T_1) @[Parameters.scala 92:37]
    node _bundleOut_0_a_bits_legal_T_3 = or(UInt<1>("h00"), _bundleOut_0_a_bits_legal_T_2) @[Parameters.scala 670:31]
    node _bundleOut_0_a_bits_legal_T_4 = xor(_bundleOut_0_a_bits_T_1, UInt<14>("h02000")) @[Parameters.scala 137:31]
    node _bundleOut_0_a_bits_legal_T_5 = cvt(_bundleOut_0_a_bits_legal_T_4) @[Parameters.scala 137:49]
    node _bundleOut_0_a_bits_legal_T_6 = and(_bundleOut_0_a_bits_legal_T_5, asSInt(UInt<33>("h09a132000"))) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_7 = asSInt(_bundleOut_0_a_bits_legal_T_6) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_8 = eq(_bundleOut_0_a_bits_legal_T_7, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _bundleOut_0_a_bits_legal_T_9 = and(_bundleOut_0_a_bits_legal_T_3, _bundleOut_0_a_bits_legal_T_8) @[Parameters.scala 670:56]
    node _bundleOut_0_a_bits_legal_T_10 = leq(UInt<1>("h00"), UInt<3>("h06")) @[Parameters.scala 92:32]
    node _bundleOut_0_a_bits_legal_T_11 = leq(UInt<3>("h06"), UInt<3>("h06")) @[Parameters.scala 92:42]
    node _bundleOut_0_a_bits_legal_T_12 = and(_bundleOut_0_a_bits_legal_T_10, _bundleOut_0_a_bits_legal_T_11) @[Parameters.scala 92:37]
    node _bundleOut_0_a_bits_legal_T_13 = or(UInt<1>("h00"), _bundleOut_0_a_bits_legal_T_12) @[Parameters.scala 670:31]
    node _bundleOut_0_a_bits_legal_T_14 = xor(_bundleOut_0_a_bits_T_1, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _bundleOut_0_a_bits_legal_T_15 = cvt(_bundleOut_0_a_bits_legal_T_14) @[Parameters.scala 137:49]
    node _bundleOut_0_a_bits_legal_T_16 = and(_bundleOut_0_a_bits_legal_T_15, asSInt(UInt<33>("h09a032000"))) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_17 = asSInt(_bundleOut_0_a_bits_legal_T_16) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_18 = eq(_bundleOut_0_a_bits_legal_T_17, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _bundleOut_0_a_bits_legal_T_19 = xor(_bundleOut_0_a_bits_T_1, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _bundleOut_0_a_bits_legal_T_20 = cvt(_bundleOut_0_a_bits_legal_T_19) @[Parameters.scala 137:49]
    node _bundleOut_0_a_bits_legal_T_21 = and(_bundleOut_0_a_bits_legal_T_20, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_22 = asSInt(_bundleOut_0_a_bits_legal_T_21) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_23 = eq(_bundleOut_0_a_bits_legal_T_22, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _bundleOut_0_a_bits_legal_T_24 = xor(_bundleOut_0_a_bits_T_1, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _bundleOut_0_a_bits_legal_T_25 = cvt(_bundleOut_0_a_bits_legal_T_24) @[Parameters.scala 137:49]
    node _bundleOut_0_a_bits_legal_T_26 = and(_bundleOut_0_a_bits_legal_T_25, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_27 = asSInt(_bundleOut_0_a_bits_legal_T_26) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_28 = eq(_bundleOut_0_a_bits_legal_T_27, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _bundleOut_0_a_bits_legal_T_29 = xor(_bundleOut_0_a_bits_T_1, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _bundleOut_0_a_bits_legal_T_30 = cvt(_bundleOut_0_a_bits_legal_T_29) @[Parameters.scala 137:49]
    node _bundleOut_0_a_bits_legal_T_31 = and(_bundleOut_0_a_bits_legal_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_32 = asSInt(_bundleOut_0_a_bits_legal_T_31) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_33 = eq(_bundleOut_0_a_bits_legal_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _bundleOut_0_a_bits_legal_T_34 = xor(_bundleOut_0_a_bits_T_1, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _bundleOut_0_a_bits_legal_T_35 = cvt(_bundleOut_0_a_bits_legal_T_34) @[Parameters.scala 137:49]
    node _bundleOut_0_a_bits_legal_T_36 = and(_bundleOut_0_a_bits_legal_T_35, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_37 = asSInt(_bundleOut_0_a_bits_legal_T_36) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_38 = eq(_bundleOut_0_a_bits_legal_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _bundleOut_0_a_bits_legal_T_39 = xor(_bundleOut_0_a_bits_T_1, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _bundleOut_0_a_bits_legal_T_40 = cvt(_bundleOut_0_a_bits_legal_T_39) @[Parameters.scala 137:49]
    node _bundleOut_0_a_bits_legal_T_41 = and(_bundleOut_0_a_bits_legal_T_40, asSInt(UInt<33>("h09a132000"))) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_42 = asSInt(_bundleOut_0_a_bits_legal_T_41) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_43 = eq(_bundleOut_0_a_bits_legal_T_42, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _bundleOut_0_a_bits_legal_T_44 = xor(_bundleOut_0_a_bits_T_1, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _bundleOut_0_a_bits_legal_T_45 = cvt(_bundleOut_0_a_bits_legal_T_44) @[Parameters.scala 137:49]
    node _bundleOut_0_a_bits_legal_T_46 = and(_bundleOut_0_a_bits_legal_T_45, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_47 = asSInt(_bundleOut_0_a_bits_legal_T_46) @[Parameters.scala 137:52]
    node _bundleOut_0_a_bits_legal_T_48 = eq(_bundleOut_0_a_bits_legal_T_47, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _bundleOut_0_a_bits_legal_T_49 = or(_bundleOut_0_a_bits_legal_T_18, _bundleOut_0_a_bits_legal_T_23) @[Parameters.scala 671:42]
    node _bundleOut_0_a_bits_legal_T_50 = or(_bundleOut_0_a_bits_legal_T_49, _bundleOut_0_a_bits_legal_T_28) @[Parameters.scala 671:42]
    node _bundleOut_0_a_bits_legal_T_51 = or(_bundleOut_0_a_bits_legal_T_50, _bundleOut_0_a_bits_legal_T_33) @[Parameters.scala 671:42]
    node _bundleOut_0_a_bits_legal_T_52 = or(_bundleOut_0_a_bits_legal_T_51, _bundleOut_0_a_bits_legal_T_38) @[Parameters.scala 671:42]
    node _bundleOut_0_a_bits_legal_T_53 = or(_bundleOut_0_a_bits_legal_T_52, _bundleOut_0_a_bits_legal_T_43) @[Parameters.scala 671:42]
    node _bundleOut_0_a_bits_legal_T_54 = or(_bundleOut_0_a_bits_legal_T_53, _bundleOut_0_a_bits_legal_T_48) @[Parameters.scala 671:42]
    node _bundleOut_0_a_bits_legal_T_55 = and(_bundleOut_0_a_bits_legal_T_13, _bundleOut_0_a_bits_legal_T_54) @[Parameters.scala 670:56]
    node _bundleOut_0_a_bits_legal_T_56 = or(UInt<1>("h00"), _bundleOut_0_a_bits_legal_T_9) @[Parameters.scala 672:30]
    node bundleOut_0_a_bits_legal = or(_bundleOut_0_a_bits_legal_T_56, _bundleOut_0_a_bits_legal_T_55) @[Parameters.scala 672:30]
    wire bundleOut_0_a_bits_a : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>} @[Edges.scala 447:17]
    bundleOut_0_a_bits_a is invalid @[Edges.scala 447:17]
    bundleOut_0_a_bits_a.opcode <= UInt<3>("h04") @[Edges.scala 448:15]
    bundleOut_0_a_bits_a.param <= UInt<1>("h00") @[Edges.scala 449:15]
    bundleOut_0_a_bits_a.size <= UInt<3>("h06") @[Edges.scala 450:15]
    bundleOut_0_a_bits_a.source <= UInt<1>("h00") @[Edges.scala 451:15]
    bundleOut_0_a_bits_a.address <= _bundleOut_0_a_bits_T_1 @[Edges.scala 452:15]
    node _bundleOut_0_a_bits_a_mask_sizeOH_T = or(UInt<3>("h06"), UInt<2>("h00")) @[Misc.scala 201:34]
    node bundleOut_0_a_bits_a_mask_sizeOH_shiftAmount = bits(_bundleOut_0_a_bits_a_mask_sizeOH_T, 0, 0) @[OneHot.scala 64:49]
    node _bundleOut_0_a_bits_a_mask_sizeOH_T_1 = dshl(UInt<1>("h01"), bundleOut_0_a_bits_a_mask_sizeOH_shiftAmount) @[OneHot.scala 65:12]
    node _bundleOut_0_a_bits_a_mask_sizeOH_T_2 = bits(_bundleOut_0_a_bits_a_mask_sizeOH_T_1, 1, 0) @[OneHot.scala 65:27]
    node bundleOut_0_a_bits_a_mask_sizeOH = or(_bundleOut_0_a_bits_a_mask_sizeOH_T_2, UInt<1>("h01")) @[Misc.scala 201:81]
    node _bundleOut_0_a_bits_a_mask_T = geq(UInt<3>("h06"), UInt<2>("h02")) @[Misc.scala 205:21]
    node bundleOut_0_a_bits_a_mask_size = bits(bundleOut_0_a_bits_a_mask_sizeOH, 1, 1) @[Misc.scala 208:26]
    node bundleOut_0_a_bits_a_mask_bit = bits(_bundleOut_0_a_bits_T_1, 1, 1) @[Misc.scala 209:26]
    node bundleOut_0_a_bits_a_mask_nbit = eq(bundleOut_0_a_bits_a_mask_bit, UInt<1>("h00")) @[Misc.scala 210:20]
    node bundleOut_0_a_bits_a_mask_eq = and(UInt<1>("h01"), bundleOut_0_a_bits_a_mask_nbit) @[Misc.scala 213:27]
    node _bundleOut_0_a_bits_a_mask_acc_T = and(bundleOut_0_a_bits_a_mask_size, bundleOut_0_a_bits_a_mask_eq) @[Misc.scala 214:38]
    node bundleOut_0_a_bits_a_mask_acc = or(_bundleOut_0_a_bits_a_mask_T, _bundleOut_0_a_bits_a_mask_acc_T) @[Misc.scala 214:29]
    node bundleOut_0_a_bits_a_mask_eq_1 = and(UInt<1>("h01"), bundleOut_0_a_bits_a_mask_bit) @[Misc.scala 213:27]
    node _bundleOut_0_a_bits_a_mask_acc_T_1 = and(bundleOut_0_a_bits_a_mask_size, bundleOut_0_a_bits_a_mask_eq_1) @[Misc.scala 214:38]
    node bundleOut_0_a_bits_a_mask_acc_1 = or(_bundleOut_0_a_bits_a_mask_T, _bundleOut_0_a_bits_a_mask_acc_T_1) @[Misc.scala 214:29]
    node bundleOut_0_a_bits_a_mask_size_1 = bits(bundleOut_0_a_bits_a_mask_sizeOH, 0, 0) @[Misc.scala 208:26]
    node bundleOut_0_a_bits_a_mask_bit_1 = bits(_bundleOut_0_a_bits_T_1, 0, 0) @[Misc.scala 209:26]
    node bundleOut_0_a_bits_a_mask_nbit_1 = eq(bundleOut_0_a_bits_a_mask_bit_1, UInt<1>("h00")) @[Misc.scala 210:20]
    node bundleOut_0_a_bits_a_mask_eq_2 = and(bundleOut_0_a_bits_a_mask_eq, bundleOut_0_a_bits_a_mask_nbit_1) @[Misc.scala 213:27]
    node _bundleOut_0_a_bits_a_mask_acc_T_2 = and(bundleOut_0_a_bits_a_mask_size_1, bundleOut_0_a_bits_a_mask_eq_2) @[Misc.scala 214:38]
    node bundleOut_0_a_bits_a_mask_lo_lo = or(bundleOut_0_a_bits_a_mask_acc, _bundleOut_0_a_bits_a_mask_acc_T_2) @[Misc.scala 214:29]
    node bundleOut_0_a_bits_a_mask_eq_3 = and(bundleOut_0_a_bits_a_mask_eq, bundleOut_0_a_bits_a_mask_bit_1) @[Misc.scala 213:27]
    node _bundleOut_0_a_bits_a_mask_acc_T_3 = and(bundleOut_0_a_bits_a_mask_size_1, bundleOut_0_a_bits_a_mask_eq_3) @[Misc.scala 214:38]
    node bundleOut_0_a_bits_a_mask_lo_hi = or(bundleOut_0_a_bits_a_mask_acc, _bundleOut_0_a_bits_a_mask_acc_T_3) @[Misc.scala 214:29]
    node bundleOut_0_a_bits_a_mask_eq_4 = and(bundleOut_0_a_bits_a_mask_eq_1, bundleOut_0_a_bits_a_mask_nbit_1) @[Misc.scala 213:27]
    node _bundleOut_0_a_bits_a_mask_acc_T_4 = and(bundleOut_0_a_bits_a_mask_size_1, bundleOut_0_a_bits_a_mask_eq_4) @[Misc.scala 214:38]
    node bundleOut_0_a_bits_a_mask_hi_lo = or(bundleOut_0_a_bits_a_mask_acc_1, _bundleOut_0_a_bits_a_mask_acc_T_4) @[Misc.scala 214:29]
    node bundleOut_0_a_bits_a_mask_eq_5 = and(bundleOut_0_a_bits_a_mask_eq_1, bundleOut_0_a_bits_a_mask_bit_1) @[Misc.scala 213:27]
    node _bundleOut_0_a_bits_a_mask_acc_T_5 = and(bundleOut_0_a_bits_a_mask_size_1, bundleOut_0_a_bits_a_mask_eq_5) @[Misc.scala 214:38]
    node bundleOut_0_a_bits_a_mask_hi_hi = or(bundleOut_0_a_bits_a_mask_acc_1, _bundleOut_0_a_bits_a_mask_acc_T_5) @[Misc.scala 214:29]
    node bundleOut_0_a_bits_a_mask_lo = cat(bundleOut_0_a_bits_a_mask_lo_hi, bundleOut_0_a_bits_a_mask_lo_lo) @[Cat.scala 30:58]
    node bundleOut_0_a_bits_a_mask_hi = cat(bundleOut_0_a_bits_a_mask_hi_hi, bundleOut_0_a_bits_a_mask_hi_lo) @[Cat.scala 30:58]
    node _bundleOut_0_a_bits_a_mask_T_1 = cat(bundleOut_0_a_bits_a_mask_hi, bundleOut_0_a_bits_a_mask_lo) @[Cat.scala 30:58]
    bundleOut_0_a_bits_a.mask <= _bundleOut_0_a_bits_a_mask_T_1 @[Edges.scala 453:15]
    bundleOut_0_a_bits_a.data <= UInt<1>("h00") @[Edges.scala 454:15]
    bundleOut_0_a_bits_a.corrupt <= UInt<1>("h00") @[Edges.scala 455:15]
    tl_out.a.bits <- bundleOut_0_a_bits_a @[ICache.scala 416:17]
    wire _WIRE_2 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<2>, size : UInt<4>, source : UInt<1>, address : UInt<32>, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 256:54]
    _WIRE_2 is invalid @[Bundles.scala 256:54]
    _WIRE_2.ready <= UInt<1>("h01") @[ICache.scala 468:18]
    wire _WIRE_3 : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<4>, source : UInt<1>, address : UInt<32>, user : {}, echo : {}, data : UInt<32>, corrupt : UInt<1>}} @[Bundles.scala 257:54]
    _WIRE_3 is invalid @[Bundles.scala 257:54]
    _WIRE_3.valid <= UInt<1>("h00") @[ICache.scala 469:18]
    wire _WIRE_4 : {flip ready : UInt<1>, valid : UInt<1>, bits : {sink : UInt<1>}} @[Bundles.scala 259:54]
    _WIRE_4 is invalid @[Bundles.scala 259:54]
    _WIRE_4.valid <= UInt<1>("h00") @[ICache.scala 470:18]
    node _T_15 = and(tl_out.a.valid, UInt<1>("h00")) @[ICache.scala 471:27]
    node _T_16 = eq(_T_15, UInt<1>("h00")) @[ICache.scala 471:10]
    node _T_17 = asUInt(reset) @[ICache.scala 471:9]
    node _T_18 = or(_T_16, _T_17) @[ICache.scala 471:9]
    node _T_19 = eq(_T_18, UInt<1>("h00")) @[ICache.scala 471:9]
    when _T_19 : @[ICache.scala 471:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at ICache.scala:471 assert(!(tl_out.a.valid && addrMaybeInScratchpad(tl_out.a.bits.address)))\n") @[ICache.scala 471:9]
      stop(clock, UInt<1>(1), 1) @[ICache.scala 471:9]
      skip @[ICache.scala 471:9]
    node _T_20 = eq(refill_valid, UInt<1>("h00")) @[ICache.scala 473:9]
    when _T_20 : @[ICache.scala 473:24]
      invalidated <= UInt<1>("h00") @[ICache.scala 473:38]
      skip @[ICache.scala 473:24]
    when refill_fire : @[ICache.scala 474:22]
      refill_valid <= UInt<1>("h01") @[ICache.scala 474:37]
      skip @[ICache.scala 474:22]
    when refill_done : @[ICache.scala 475:22]
      refill_valid <= UInt<1>("h00") @[ICache.scala 475:37]
      skip @[ICache.scala 475:22]
    io.perf.acquire <= refill_fire @[ICache.scala 477:19]
    node _io_keep_clock_enabled_T = or(UInt<1>("h00"), s1_valid) @[ICache.scala 479:117]
    node _io_keep_clock_enabled_T_1 = or(_io_keep_clock_enabled_T, s2_valid) @[ICache.scala 480:14]
    node _io_keep_clock_enabled_T_2 = or(_io_keep_clock_enabled_T_1, refill_valid) @[ICache.scala 480:26]
    node _io_keep_clock_enabled_T_3 = or(_io_keep_clock_enabled_T_2, send_hint) @[ICache.scala 480:42]
    node _io_keep_clock_enabled_T_4 = or(_io_keep_clock_enabled_T_3, hint_outstanding) @[ICache.scala 480:55]
    io.keep_clock_enabled <= _io_keep_clock_enabled_T_4 @[ICache.scala 478:25]
    node _T_21 = eq(send_hint, UInt<1>("h00")) @[ICache.scala 488:10]
    node _T_22 = eq(tl_out.a.ready, UInt<1>("h00")) @[ICache.scala 488:43]
    node _T_23 = and(tl_out.a.valid, _T_22) @[ICache.scala 488:40]
    node _T_24 = and(_T_21, _T_23) @[ICache.scala 488:21]
    node _T_25 = and(invalidate, refill_valid) @[ICache.scala 489:21]
    node _T_26 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 496:18]
    node _T_27 = eq(UInt<1>("h00"), UInt<1>("h00")) @[ICache.scala 496:50]
    node _T_28 = and(_T_26, _T_27) @[ICache.scala 496:47]
    node _T_29 = eq(s2_slaveValid, UInt<1>("h00")) @[ICache.scala 500:18]
    node _T_30 = eq(s2_tag_disparity, UInt<1>("h00")) @[ICache.scala 504:18]
    node _T_31 = eq(s2_scratchpad_hit, UInt<1>("h00")) @[ICache.scala 509:18]
    node _T_32 = and(_T_29, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_33 = and(_T_29, _T_31) @[Property.scala 81:34]
    node _T_34 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_35 = and(s2_slaveValid, _T_31) @[Property.scala 81:34]
    node _T_36 = and(_T_30, _T_32) @[Property.scala 81:34]
    node _T_37 = and(_T_30, _T_33) @[Property.scala 81:34]
    node _T_38 = and(_T_30, _T_34) @[Property.scala 81:34]
    node _T_39 = and(_T_30, _T_35) @[Property.scala 81:34]
    node _T_40 = and(_T_29, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_41 = and(_T_29, _T_31) @[Property.scala 81:34]
    node _T_42 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_43 = and(s2_slaveValid, _T_31) @[Property.scala 81:34]
    node _T_44 = and(s2_tag_disparity, _T_40) @[Property.scala 81:34]
    node _T_45 = and(s2_tag_disparity, _T_41) @[Property.scala 81:34]
    node _T_46 = and(s2_tag_disparity, _T_42) @[Property.scala 81:34]
    node _T_47 = and(s2_tag_disparity, _T_43) @[Property.scala 81:34]
    node _T_48 = and(_T_28, _T_36) @[Property.scala 81:34]
    node _T_49 = and(_T_28, _T_37) @[Property.scala 81:34]
    node _T_50 = and(_T_28, _T_38) @[Property.scala 81:34]
    node _T_51 = and(_T_28, _T_39) @[Property.scala 81:34]
    node _T_52 = and(_T_28, _T_44) @[Property.scala 81:34]
    node _T_53 = and(_T_28, _T_45) @[Property.scala 81:34]
    node _T_54 = and(_T_28, _T_46) @[Property.scala 81:34]
    node _T_55 = and(_T_28, _T_47) @[Property.scala 81:34]
    node _T_56 = and(_T_29, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_57 = and(_T_29, _T_31) @[Property.scala 81:34]
    node _T_58 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_59 = and(s2_slaveValid, _T_31) @[Property.scala 81:34]
    node _T_60 = and(_T_30, _T_56) @[Property.scala 81:34]
    node _T_61 = and(_T_30, _T_57) @[Property.scala 81:34]
    node _T_62 = and(_T_30, _T_58) @[Property.scala 81:34]
    node _T_63 = and(_T_30, _T_59) @[Property.scala 81:34]
    node _T_64 = and(_T_29, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_65 = and(_T_29, _T_31) @[Property.scala 81:34]
    node _T_66 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_67 = and(s2_slaveValid, _T_31) @[Property.scala 81:34]
    node _T_68 = and(s2_tag_disparity, _T_64) @[Property.scala 81:34]
    node _T_69 = and(s2_tag_disparity, _T_65) @[Property.scala 81:34]
    node _T_70 = and(s2_tag_disparity, _T_66) @[Property.scala 81:34]
    node _T_71 = and(s2_tag_disparity, _T_67) @[Property.scala 81:34]
    node _T_72 = and(UInt<1>("h00"), _T_60) @[Property.scala 81:34]
    node _T_73 = and(UInt<1>("h00"), _T_61) @[Property.scala 81:34]
    node _T_74 = and(UInt<1>("h00"), _T_62) @[Property.scala 81:34]
    node _T_75 = and(UInt<1>("h00"), _T_63) @[Property.scala 81:34]
    node _T_76 = and(UInt<1>("h00"), _T_68) @[Property.scala 81:34]
    node _T_77 = and(UInt<1>("h00"), _T_69) @[Property.scala 81:34]
    node _T_78 = and(UInt<1>("h00"), _T_70) @[Property.scala 81:34]
    node _T_79 = and(UInt<1>("h00"), _T_71) @[Property.scala 81:34]
    node _T_80 = and(_T_29, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_81 = and(_T_29, _T_31) @[Property.scala 81:34]
    node _T_82 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_83 = and(s2_slaveValid, _T_31) @[Property.scala 81:34]
    node _T_84 = and(_T_30, _T_80) @[Property.scala 81:34]
    node _T_85 = and(_T_30, _T_81) @[Property.scala 81:34]
    node _T_86 = and(_T_30, _T_82) @[Property.scala 81:34]
    node _T_87 = and(_T_30, _T_83) @[Property.scala 81:34]
    node _T_88 = and(_T_29, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_89 = and(_T_29, _T_31) @[Property.scala 81:34]
    node _T_90 = and(s2_slaveValid, s2_scratchpad_hit) @[Property.scala 81:34]
    node _T_91 = and(s2_slaveValid, _T_31) @[Property.scala 81:34]
    node _T_92 = and(s2_tag_disparity, _T_88) @[Property.scala 81:34]
    node _T_93 = and(s2_tag_disparity, _T_89) @[Property.scala 81:34]
    node _T_94 = and(s2_tag_disparity, _T_90) @[Property.scala 81:34]
    node _T_95 = and(s2_tag_disparity, _T_91) @[Property.scala 81:34]
    node _T_96 = and(UInt<1>("h00"), _T_84) @[Property.scala 81:34]
    node _T_97 = and(UInt<1>("h00"), _T_85) @[Property.scala 81:34]
    node _T_98 = and(UInt<1>("h00"), _T_86) @[Property.scala 81:34]
    node _T_99 = and(UInt<1>("h00"), _T_87) @[Property.scala 81:34]
    node _T_100 = and(UInt<1>("h00"), _T_92) @[Property.scala 81:34]
    node _T_101 = and(UInt<1>("h00"), _T_93) @[Property.scala 81:34]
    node _T_102 = and(UInt<1>("h00"), _T_94) @[Property.scala 81:34]
    node _T_103 = and(UInt<1>("h00"), _T_95) @[Property.scala 81:34]
    node _T_104 = and(s2_valid, _T_48) @[Property.scala 81:34]
    node _T_105 = and(s2_valid, _T_49) @[Property.scala 81:34]
    node _T_106 = and(s2_valid, _T_50) @[Property.scala 81:34]
    node _T_107 = and(s2_valid, _T_51) @[Property.scala 81:34]
    node _T_108 = and(s2_valid, _T_52) @[Property.scala 81:34]
    node _T_109 = and(s2_valid, _T_53) @[Property.scala 81:34]
    node _T_110 = and(s2_valid, _T_54) @[Property.scala 81:34]
    node _T_111 = and(s2_valid, _T_55) @[Property.scala 81:34]
    node _T_112 = and(s2_valid, _T_72) @[Property.scala 81:34]
    node _T_113 = and(s2_valid, _T_73) @[Property.scala 81:34]
    node _T_114 = and(s2_valid, _T_74) @[Property.scala 81:34]
    node _T_115 = and(s2_valid, _T_75) @[Property.scala 81:34]
    node _T_116 = and(s2_valid, _T_76) @[Property.scala 81:34]
    node _T_117 = and(s2_valid, _T_77) @[Property.scala 81:34]
    node _T_118 = and(s2_valid, _T_78) @[Property.scala 81:34]
    node _T_119 = and(s2_valid, _T_79) @[Property.scala 81:34]
    node _T_120 = and(s2_valid, _T_96) @[Property.scala 81:34]
    node _T_121 = and(s2_valid, _T_97) @[Property.scala 81:34]
    node _T_122 = and(s2_valid, _T_98) @[Property.scala 81:34]
    node _T_123 = and(s2_valid, _T_99) @[Property.scala 81:34]
    node _T_124 = and(s2_valid, _T_100) @[Property.scala 81:34]
    node _T_125 = and(s2_valid, _T_101) @[Property.scala 81:34]
    node _T_126 = and(s2_valid, _T_102) @[Property.scala 81:34]
    node _T_127 = and(s2_valid, _T_103) @[Property.scala 81:34]
    
  module ShiftQueue : 
    input clock : Clock
    input reset : Reset
    output io : {flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {btb : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, data : UInt<32>, mask : UInt<2>, xcpt : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, replay : UInt<1>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {btb : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, data : UInt<32>, mask : UInt<2>, xcpt : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, replay : UInt<1>}}, count : UInt<3>, mask : UInt<5>}
    
    wire _valid_WIRE : UInt<1>[5] @[ShiftQueue.scala 21:38]
    _valid_WIRE[0] <= UInt<1>("h00") @[ShiftQueue.scala 21:38]
    _valid_WIRE[1] <= UInt<1>("h00") @[ShiftQueue.scala 21:38]
    _valid_WIRE[2] <= UInt<1>("h00") @[ShiftQueue.scala 21:38]
    _valid_WIRE[3] <= UInt<1>("h00") @[ShiftQueue.scala 21:38]
    _valid_WIRE[4] <= UInt<1>("h00") @[ShiftQueue.scala 21:38]
    reg valid : UInt<1>[5], clock with : (reset => (reset, _valid_WIRE)) @[ShiftQueue.scala 21:30]
    reg elts : {btb : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, data : UInt<32>, mask : UInt<2>, xcpt : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, replay : UInt<1>}[5], clock @[ShiftQueue.scala 22:25]
    node wdata = mux(valid[1], elts[1], io.enq.bits) @[ShiftQueue.scala 27:57]
    node _wen_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_1 = or(UInt<1>("h00"), valid[0]) @[ShiftQueue.scala 30:69]
    node _wen_T_2 = and(_wen_T, _wen_T_1) @[ShiftQueue.scala 30:45]
    node _wen_T_3 = or(valid[1], _wen_T_2) @[ShiftQueue.scala 30:28]
    node _wen_T_4 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_5 = and(_wen_T_4, UInt<1>("h01")) @[ShiftQueue.scala 31:25]
    node _wen_T_6 = eq(valid[0], UInt<1>("h00")) @[ShiftQueue.scala 31:48]
    node _wen_T_7 = and(_wen_T_5, _wen_T_6) @[ShiftQueue.scala 31:45]
    node wen = mux(io.deq.ready, _wen_T_3, _wen_T_7) @[ShiftQueue.scala 29:10]
    when wen : @[ShiftQueue.scala 32:16]
      elts[0].replay <= wdata.replay @[ShiftQueue.scala 32:26]
      elts[0].xcpt.ae.inst <= wdata.xcpt.ae.inst @[ShiftQueue.scala 32:26]
      elts[0].xcpt.pf.inst <= wdata.xcpt.pf.inst @[ShiftQueue.scala 32:26]
      elts[0].mask <= wdata.mask @[ShiftQueue.scala 32:26]
      elts[0].data <= wdata.data @[ShiftQueue.scala 32:26]
      elts[0].pc <= wdata.pc @[ShiftQueue.scala 32:26]
      elts[0].btb.bht.value <= wdata.btb.bht.value @[ShiftQueue.scala 32:26]
      elts[0].btb.bht.history <= wdata.btb.bht.history @[ShiftQueue.scala 32:26]
      elts[0].btb.entry <= wdata.btb.entry @[ShiftQueue.scala 32:26]
      elts[0].btb.target <= wdata.btb.target @[ShiftQueue.scala 32:26]
      elts[0].btb.bridx <= wdata.btb.bridx @[ShiftQueue.scala 32:26]
      elts[0].btb.mask <= wdata.btb.mask @[ShiftQueue.scala 32:26]
      elts[0].btb.taken <= wdata.btb.taken @[ShiftQueue.scala 32:26]
      elts[0].btb.cfiType <= wdata.btb.cfiType @[ShiftQueue.scala 32:26]
      skip @[ShiftQueue.scala 32:16]
    node _valid_0_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_0_T_1 = or(UInt<1>("h00"), valid[0]) @[ShiftQueue.scala 36:69]
    node _valid_0_T_2 = and(_valid_0_T, _valid_0_T_1) @[ShiftQueue.scala 36:45]
    node _valid_0_T_3 = or(valid[1], _valid_0_T_2) @[ShiftQueue.scala 36:28]
    node _valid_0_T_4 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_0_T_5 = and(_valid_0_T_4, UInt<1>("h01")) @[ShiftQueue.scala 37:25]
    node _valid_0_T_6 = or(_valid_0_T_5, valid[0]) @[ShiftQueue.scala 37:45]
    node _valid_0_T_7 = mux(io.deq.ready, _valid_0_T_3, _valid_0_T_6) @[ShiftQueue.scala 35:10]
    valid[0] <= _valid_0_T_7 @[ShiftQueue.scala 34:14]
    node wdata_1 = mux(valid[2], elts[2], io.enq.bits) @[ShiftQueue.scala 27:57]
    node _wen_T_8 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_9 = or(UInt<1>("h00"), valid[1]) @[ShiftQueue.scala 30:69]
    node _wen_T_10 = and(_wen_T_8, _wen_T_9) @[ShiftQueue.scala 30:45]
    node _wen_T_11 = or(valid[2], _wen_T_10) @[ShiftQueue.scala 30:28]
    node _wen_T_12 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_13 = and(_wen_T_12, valid[0]) @[ShiftQueue.scala 31:25]
    node _wen_T_14 = eq(valid[1], UInt<1>("h00")) @[ShiftQueue.scala 31:48]
    node _wen_T_15 = and(_wen_T_13, _wen_T_14) @[ShiftQueue.scala 31:45]
    node wen_1 = mux(io.deq.ready, _wen_T_11, _wen_T_15) @[ShiftQueue.scala 29:10]
    when wen_1 : @[ShiftQueue.scala 32:16]
      elts[1].replay <= wdata_1.replay @[ShiftQueue.scala 32:26]
      elts[1].xcpt.ae.inst <= wdata_1.xcpt.ae.inst @[ShiftQueue.scala 32:26]
      elts[1].xcpt.pf.inst <= wdata_1.xcpt.pf.inst @[ShiftQueue.scala 32:26]
      elts[1].mask <= wdata_1.mask @[ShiftQueue.scala 32:26]
      elts[1].data <= wdata_1.data @[ShiftQueue.scala 32:26]
      elts[1].pc <= wdata_1.pc @[ShiftQueue.scala 32:26]
      elts[1].btb.bht.value <= wdata_1.btb.bht.value @[ShiftQueue.scala 32:26]
      elts[1].btb.bht.history <= wdata_1.btb.bht.history @[ShiftQueue.scala 32:26]
      elts[1].btb.entry <= wdata_1.btb.entry @[ShiftQueue.scala 32:26]
      elts[1].btb.target <= wdata_1.btb.target @[ShiftQueue.scala 32:26]
      elts[1].btb.bridx <= wdata_1.btb.bridx @[ShiftQueue.scala 32:26]
      elts[1].btb.mask <= wdata_1.btb.mask @[ShiftQueue.scala 32:26]
      elts[1].btb.taken <= wdata_1.btb.taken @[ShiftQueue.scala 32:26]
      elts[1].btb.cfiType <= wdata_1.btb.cfiType @[ShiftQueue.scala 32:26]
      skip @[ShiftQueue.scala 32:16]
    node _valid_1_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_1_T_1 = or(UInt<1>("h00"), valid[1]) @[ShiftQueue.scala 36:69]
    node _valid_1_T_2 = and(_valid_1_T, _valid_1_T_1) @[ShiftQueue.scala 36:45]
    node _valid_1_T_3 = or(valid[2], _valid_1_T_2) @[ShiftQueue.scala 36:28]
    node _valid_1_T_4 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_1_T_5 = and(_valid_1_T_4, valid[0]) @[ShiftQueue.scala 37:25]
    node _valid_1_T_6 = or(_valid_1_T_5, valid[1]) @[ShiftQueue.scala 37:45]
    node _valid_1_T_7 = mux(io.deq.ready, _valid_1_T_3, _valid_1_T_6) @[ShiftQueue.scala 35:10]
    valid[1] <= _valid_1_T_7 @[ShiftQueue.scala 34:14]
    node wdata_2 = mux(valid[3], elts[3], io.enq.bits) @[ShiftQueue.scala 27:57]
    node _wen_T_16 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_17 = or(UInt<1>("h00"), valid[2]) @[ShiftQueue.scala 30:69]
    node _wen_T_18 = and(_wen_T_16, _wen_T_17) @[ShiftQueue.scala 30:45]
    node _wen_T_19 = or(valid[3], _wen_T_18) @[ShiftQueue.scala 30:28]
    node _wen_T_20 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_21 = and(_wen_T_20, valid[1]) @[ShiftQueue.scala 31:25]
    node _wen_T_22 = eq(valid[2], UInt<1>("h00")) @[ShiftQueue.scala 31:48]
    node _wen_T_23 = and(_wen_T_21, _wen_T_22) @[ShiftQueue.scala 31:45]
    node wen_2 = mux(io.deq.ready, _wen_T_19, _wen_T_23) @[ShiftQueue.scala 29:10]
    when wen_2 : @[ShiftQueue.scala 32:16]
      elts[2].replay <= wdata_2.replay @[ShiftQueue.scala 32:26]
      elts[2].xcpt.ae.inst <= wdata_2.xcpt.ae.inst @[ShiftQueue.scala 32:26]
      elts[2].xcpt.pf.inst <= wdata_2.xcpt.pf.inst @[ShiftQueue.scala 32:26]
      elts[2].mask <= wdata_2.mask @[ShiftQueue.scala 32:26]
      elts[2].data <= wdata_2.data @[ShiftQueue.scala 32:26]
      elts[2].pc <= wdata_2.pc @[ShiftQueue.scala 32:26]
      elts[2].btb.bht.value <= wdata_2.btb.bht.value @[ShiftQueue.scala 32:26]
      elts[2].btb.bht.history <= wdata_2.btb.bht.history @[ShiftQueue.scala 32:26]
      elts[2].btb.entry <= wdata_2.btb.entry @[ShiftQueue.scala 32:26]
      elts[2].btb.target <= wdata_2.btb.target @[ShiftQueue.scala 32:26]
      elts[2].btb.bridx <= wdata_2.btb.bridx @[ShiftQueue.scala 32:26]
      elts[2].btb.mask <= wdata_2.btb.mask @[ShiftQueue.scala 32:26]
      elts[2].btb.taken <= wdata_2.btb.taken @[ShiftQueue.scala 32:26]
      elts[2].btb.cfiType <= wdata_2.btb.cfiType @[ShiftQueue.scala 32:26]
      skip @[ShiftQueue.scala 32:16]
    node _valid_2_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_2_T_1 = or(UInt<1>("h00"), valid[2]) @[ShiftQueue.scala 36:69]
    node _valid_2_T_2 = and(_valid_2_T, _valid_2_T_1) @[ShiftQueue.scala 36:45]
    node _valid_2_T_3 = or(valid[3], _valid_2_T_2) @[ShiftQueue.scala 36:28]
    node _valid_2_T_4 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_2_T_5 = and(_valid_2_T_4, valid[1]) @[ShiftQueue.scala 37:25]
    node _valid_2_T_6 = or(_valid_2_T_5, valid[2]) @[ShiftQueue.scala 37:45]
    node _valid_2_T_7 = mux(io.deq.ready, _valid_2_T_3, _valid_2_T_6) @[ShiftQueue.scala 35:10]
    valid[2] <= _valid_2_T_7 @[ShiftQueue.scala 34:14]
    node wdata_3 = mux(valid[4], elts[4], io.enq.bits) @[ShiftQueue.scala 27:57]
    node _wen_T_24 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_25 = or(UInt<1>("h00"), valid[3]) @[ShiftQueue.scala 30:69]
    node _wen_T_26 = and(_wen_T_24, _wen_T_25) @[ShiftQueue.scala 30:45]
    node _wen_T_27 = or(valid[4], _wen_T_26) @[ShiftQueue.scala 30:28]
    node _wen_T_28 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_29 = and(_wen_T_28, valid[2]) @[ShiftQueue.scala 31:25]
    node _wen_T_30 = eq(valid[3], UInt<1>("h00")) @[ShiftQueue.scala 31:48]
    node _wen_T_31 = and(_wen_T_29, _wen_T_30) @[ShiftQueue.scala 31:45]
    node wen_3 = mux(io.deq.ready, _wen_T_27, _wen_T_31) @[ShiftQueue.scala 29:10]
    when wen_3 : @[ShiftQueue.scala 32:16]
      elts[3].replay <= wdata_3.replay @[ShiftQueue.scala 32:26]
      elts[3].xcpt.ae.inst <= wdata_3.xcpt.ae.inst @[ShiftQueue.scala 32:26]
      elts[3].xcpt.pf.inst <= wdata_3.xcpt.pf.inst @[ShiftQueue.scala 32:26]
      elts[3].mask <= wdata_3.mask @[ShiftQueue.scala 32:26]
      elts[3].data <= wdata_3.data @[ShiftQueue.scala 32:26]
      elts[3].pc <= wdata_3.pc @[ShiftQueue.scala 32:26]
      elts[3].btb.bht.value <= wdata_3.btb.bht.value @[ShiftQueue.scala 32:26]
      elts[3].btb.bht.history <= wdata_3.btb.bht.history @[ShiftQueue.scala 32:26]
      elts[3].btb.entry <= wdata_3.btb.entry @[ShiftQueue.scala 32:26]
      elts[3].btb.target <= wdata_3.btb.target @[ShiftQueue.scala 32:26]
      elts[3].btb.bridx <= wdata_3.btb.bridx @[ShiftQueue.scala 32:26]
      elts[3].btb.mask <= wdata_3.btb.mask @[ShiftQueue.scala 32:26]
      elts[3].btb.taken <= wdata_3.btb.taken @[ShiftQueue.scala 32:26]
      elts[3].btb.cfiType <= wdata_3.btb.cfiType @[ShiftQueue.scala 32:26]
      skip @[ShiftQueue.scala 32:16]
    node _valid_3_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_3_T_1 = or(UInt<1>("h00"), valid[3]) @[ShiftQueue.scala 36:69]
    node _valid_3_T_2 = and(_valid_3_T, _valid_3_T_1) @[ShiftQueue.scala 36:45]
    node _valid_3_T_3 = or(valid[4], _valid_3_T_2) @[ShiftQueue.scala 36:28]
    node _valid_3_T_4 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_3_T_5 = and(_valid_3_T_4, valid[2]) @[ShiftQueue.scala 37:25]
    node _valid_3_T_6 = or(_valid_3_T_5, valid[3]) @[ShiftQueue.scala 37:45]
    node _valid_3_T_7 = mux(io.deq.ready, _valid_3_T_3, _valid_3_T_6) @[ShiftQueue.scala 35:10]
    valid[3] <= _valid_3_T_7 @[ShiftQueue.scala 34:14]
    node _wen_T_32 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_33 = or(UInt<1>("h00"), valid[4]) @[ShiftQueue.scala 30:69]
    node _wen_T_34 = and(_wen_T_32, _wen_T_33) @[ShiftQueue.scala 30:45]
    node _wen_T_35 = or(UInt<1>("h00"), _wen_T_34) @[ShiftQueue.scala 30:28]
    node _wen_T_36 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _wen_T_37 = and(_wen_T_36, valid[3]) @[ShiftQueue.scala 31:25]
    node _wen_T_38 = eq(valid[4], UInt<1>("h00")) @[ShiftQueue.scala 31:48]
    node _wen_T_39 = and(_wen_T_37, _wen_T_38) @[ShiftQueue.scala 31:45]
    node wen_4 = mux(io.deq.ready, _wen_T_35, _wen_T_39) @[ShiftQueue.scala 29:10]
    when wen_4 : @[ShiftQueue.scala 32:16]
      elts[4].replay <= io.enq.bits.replay @[ShiftQueue.scala 32:26]
      elts[4].xcpt.ae.inst <= io.enq.bits.xcpt.ae.inst @[ShiftQueue.scala 32:26]
      elts[4].xcpt.pf.inst <= io.enq.bits.xcpt.pf.inst @[ShiftQueue.scala 32:26]
      elts[4].mask <= io.enq.bits.mask @[ShiftQueue.scala 32:26]
      elts[4].data <= io.enq.bits.data @[ShiftQueue.scala 32:26]
      elts[4].pc <= io.enq.bits.pc @[ShiftQueue.scala 32:26]
      elts[4].btb.bht.value <= io.enq.bits.btb.bht.value @[ShiftQueue.scala 32:26]
      elts[4].btb.bht.history <= io.enq.bits.btb.bht.history @[ShiftQueue.scala 32:26]
      elts[4].btb.entry <= io.enq.bits.btb.entry @[ShiftQueue.scala 32:26]
      elts[4].btb.target <= io.enq.bits.btb.target @[ShiftQueue.scala 32:26]
      elts[4].btb.bridx <= io.enq.bits.btb.bridx @[ShiftQueue.scala 32:26]
      elts[4].btb.mask <= io.enq.bits.btb.mask @[ShiftQueue.scala 32:26]
      elts[4].btb.taken <= io.enq.bits.btb.taken @[ShiftQueue.scala 32:26]
      elts[4].btb.cfiType <= io.enq.bits.btb.cfiType @[ShiftQueue.scala 32:26]
      skip @[ShiftQueue.scala 32:16]
    node _valid_4_T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_4_T_1 = or(UInt<1>("h00"), valid[4]) @[ShiftQueue.scala 36:69]
    node _valid_4_T_2 = and(_valid_4_T, _valid_4_T_1) @[ShiftQueue.scala 36:45]
    node _valid_4_T_3 = or(UInt<1>("h00"), _valid_4_T_2) @[ShiftQueue.scala 36:28]
    node _valid_4_T_4 = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _valid_4_T_5 = and(_valid_4_T_4, valid[3]) @[ShiftQueue.scala 37:25]
    node _valid_4_T_6 = or(_valid_4_T_5, valid[4]) @[ShiftQueue.scala 37:45]
    node _valid_4_T_7 = mux(io.deq.ready, _valid_4_T_3, _valid_4_T_6) @[ShiftQueue.scala 35:10]
    valid[4] <= _valid_4_T_7 @[ShiftQueue.scala 34:14]
    node _io_enq_ready_T = eq(valid[4], UInt<1>("h00")) @[ShiftQueue.scala 40:19]
    io.enq.ready <= _io_enq_ready_T @[ShiftQueue.scala 40:16]
    io.deq.valid <= valid[0] @[ShiftQueue.scala 41:16]
    io.deq.bits.replay <= elts[0].replay @[ShiftQueue.scala 42:15]
    io.deq.bits.xcpt.ae.inst <= elts[0].xcpt.ae.inst @[ShiftQueue.scala 42:15]
    io.deq.bits.xcpt.pf.inst <= elts[0].xcpt.pf.inst @[ShiftQueue.scala 42:15]
    io.deq.bits.mask <= elts[0].mask @[ShiftQueue.scala 42:15]
    io.deq.bits.data <= elts[0].data @[ShiftQueue.scala 42:15]
    io.deq.bits.pc <= elts[0].pc @[ShiftQueue.scala 42:15]
    io.deq.bits.btb.bht.value <= elts[0].btb.bht.value @[ShiftQueue.scala 42:15]
    io.deq.bits.btb.bht.history <= elts[0].btb.bht.history @[ShiftQueue.scala 42:15]
    io.deq.bits.btb.entry <= elts[0].btb.entry @[ShiftQueue.scala 42:15]
    io.deq.bits.btb.target <= elts[0].btb.target @[ShiftQueue.scala 42:15]
    io.deq.bits.btb.bridx <= elts[0].btb.bridx @[ShiftQueue.scala 42:15]
    io.deq.bits.btb.mask <= elts[0].btb.mask @[ShiftQueue.scala 42:15]
    io.deq.bits.btb.taken <= elts[0].btb.taken @[ShiftQueue.scala 42:15]
    io.deq.bits.btb.cfiType <= elts[0].btb.cfiType @[ShiftQueue.scala 42:15]
    when io.enq.valid : @[ShiftQueue.scala 45:25]
      io.deq.valid <= UInt<1>("h01") @[ShiftQueue.scala 45:40]
      skip @[ShiftQueue.scala 45:25]
    node _T = eq(valid[0], UInt<1>("h00")) @[ShiftQueue.scala 46:11]
    when _T : @[ShiftQueue.scala 46:22]
      io.deq.bits.replay <= io.enq.bits.replay @[ShiftQueue.scala 46:36]
      io.deq.bits.xcpt.ae.inst <= io.enq.bits.xcpt.ae.inst @[ShiftQueue.scala 46:36]
      io.deq.bits.xcpt.pf.inst <= io.enq.bits.xcpt.pf.inst @[ShiftQueue.scala 46:36]
      io.deq.bits.mask <= io.enq.bits.mask @[ShiftQueue.scala 46:36]
      io.deq.bits.data <= io.enq.bits.data @[ShiftQueue.scala 46:36]
      io.deq.bits.pc <= io.enq.bits.pc @[ShiftQueue.scala 46:36]
      io.deq.bits.btb.bht.value <= io.enq.bits.btb.bht.value @[ShiftQueue.scala 46:36]
      io.deq.bits.btb.bht.history <= io.enq.bits.btb.bht.history @[ShiftQueue.scala 46:36]
      io.deq.bits.btb.entry <= io.enq.bits.btb.entry @[ShiftQueue.scala 46:36]
      io.deq.bits.btb.target <= io.enq.bits.btb.target @[ShiftQueue.scala 46:36]
      io.deq.bits.btb.bridx <= io.enq.bits.btb.bridx @[ShiftQueue.scala 46:36]
      io.deq.bits.btb.mask <= io.enq.bits.btb.mask @[ShiftQueue.scala 46:36]
      io.deq.bits.btb.taken <= io.enq.bits.btb.taken @[ShiftQueue.scala 46:36]
      io.deq.bits.btb.cfiType <= io.enq.bits.btb.cfiType @[ShiftQueue.scala 46:36]
      skip @[ShiftQueue.scala 46:22]
    node io_mask_lo = cat(valid[1], valid[0]) @[ShiftQueue.scala 53:20]
    node io_mask_hi_hi = cat(valid[4], valid[3]) @[ShiftQueue.scala 53:20]
    node io_mask_hi = cat(io_mask_hi_hi, valid[2]) @[ShiftQueue.scala 53:20]
    node _io_mask_T = cat(io_mask_hi, io_mask_lo) @[ShiftQueue.scala 53:20]
    io.mask <= _io_mask_T @[ShiftQueue.scala 53:11]
    node _io_count_T = bits(io.mask, 0, 0) @[Bitwise.scala 49:65]
    node _io_count_T_1 = bits(io.mask, 1, 1) @[Bitwise.scala 49:65]
    node _io_count_T_2 = bits(io.mask, 2, 2) @[Bitwise.scala 49:65]
    node _io_count_T_3 = bits(io.mask, 3, 3) @[Bitwise.scala 49:65]
    node _io_count_T_4 = bits(io.mask, 4, 4) @[Bitwise.scala 49:65]
    node _io_count_T_5 = add(_io_count_T, _io_count_T_1) @[Bitwise.scala 47:55]
    node _io_count_T_6 = bits(_io_count_T_5, 1, 0) @[Bitwise.scala 47:55]
    node _io_count_T_7 = add(_io_count_T_3, _io_count_T_4) @[Bitwise.scala 47:55]
    node _io_count_T_8 = bits(_io_count_T_7, 1, 0) @[Bitwise.scala 47:55]
    node _io_count_T_9 = add(_io_count_T_2, _io_count_T_8) @[Bitwise.scala 47:55]
    node _io_count_T_10 = bits(_io_count_T_9, 1, 0) @[Bitwise.scala 47:55]
    node _io_count_T_11 = add(_io_count_T_6, _io_count_T_10) @[Bitwise.scala 47:55]
    node _io_count_T_12 = bits(_io_count_T_11, 2, 0) @[Bitwise.scala 47:55]
    io.count <= _io_count_T_12 @[ShiftQueue.scala 54:12]
    
  module TLB_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {vaddr : UInt<32>, passthrough : UInt<1>, size : UInt<2>, cmd : UInt<5>}}, resp : {miss : UInt<1>, paddr : UInt<32>, pf : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ae : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, ma : {ld : UInt<1>, st : UInt<1>, inst : UInt<1>}, cacheable : UInt<1>, must_alloc : UInt<1>, prefetchable : UInt<1>}, flip sfence : {valid : UInt<1>, bits : {rs1 : UInt<1>, rs2 : UInt<1>, addr : UInt<32>, asid : UInt<1>}}, ptw : {req : {flip ready : UInt<1>, valid : UInt<1>, bits : {valid : UInt<1>, bits : {addr : UInt<20>}}}, flip resp : {valid : UInt<1>, bits : {ae : UInt<1>, pte : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, level : UInt<1>, fragmented_superpage : UInt<1>, homogeneous : UInt<1>}}, flip ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip customCSRs : {csrs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}}, flip kill : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node vpn = bits(io.req.bits.vaddr, 31, 12) @[TLB.scala 163:30]
    reg sectored_entries : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[4], valid : UInt<1>[4]}[1][1], clock @[TLB.scala 165:29]
    reg superpage_entries : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[1], valid : UInt<1>[1]}[4], clock @[TLB.scala 166:30]
    reg special_entry : {level : UInt<1>, tag : UInt<20>, data : UInt<35>[1], valid : UInt<1>[1]}, clock @[TLB.scala 167:56]
    reg state : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[TLB.scala 173:18]
    reg r_refill_tag : UInt<20>, clock @[TLB.scala 174:25]
    reg r_superpage_repl_addr : UInt<2>, clock @[TLB.scala 175:34]
    reg r_sectored_repl_addr : UInt<0>, clock @[TLB.scala 176:33]
    reg r_sectored_hit_addr : UInt<0>, clock @[TLB.scala 177:32]
    reg r_sectored_hit : UInt<1>, clock @[TLB.scala 178:27]
    node priv_s = bits(io.ptw.status.prv, 0, 0) @[TLB.scala 181:20]
    node priv_uses_vm = leq(io.ptw.status.prv, UInt<1>("h01")) @[TLB.scala 182:27]
    node _vm_enabled_T = bits(io.ptw.ptbr.mode, 0, 0) @[TLB.scala 183:53]
    node _vm_enabled_T_1 = and(UInt<1>("h00"), _vm_enabled_T) @[TLB.scala 183:34]
    node _vm_enabled_T_2 = and(_vm_enabled_T_1, priv_uses_vm) @[TLB.scala 183:83]
    node _vm_enabled_T_3 = eq(io.req.bits.passthrough, UInt<1>("h00")) @[TLB.scala 183:102]
    node vm_enabled = and(_vm_enabled_T_2, _vm_enabled_T_3) @[TLB.scala 183:99]
    node refill_ppn = bits(io.ptw.resp.bits.pte.ppn, 19, 0) @[TLB.scala 186:44]
    node do_refill = and(UInt<1>("h00"), io.ptw.resp.valid) @[TLB.scala 187:33]
    node _invalidate_refill_T = eq(state, UInt<2>("h01")) @[package.scala 15:47]
    node _invalidate_refill_T_1 = eq(state, UInt<2>("h03")) @[package.scala 15:47]
    node _invalidate_refill_T_2 = or(_invalidate_refill_T, _invalidate_refill_T_1) @[package.scala 72:59]
    node invalidate_refill = or(_invalidate_refill_T_2, io.sfence.valid) @[TLB.scala 188:88]
    node _mpu_ppn_T = and(vm_enabled, UInt<1>("h01")) @[TLB.scala 190:32]
    wire _mpu_ppn_data_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE is invalid @[TLB.scala 86:77]
    wire _mpu_ppn_data_WIRE_1 : UInt<35>
    _mpu_ppn_data_WIRE_1 is invalid
    _mpu_ppn_data_WIRE_1 <= special_entry.data[UInt<1>("h00")]
    node _mpu_ppn_data_T = bits(_mpu_ppn_data_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.fragmented_superpage <= _mpu_ppn_data_T @[TLB.scala 86:77]
    node _mpu_ppn_data_T_1 = bits(_mpu_ppn_data_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.c <= _mpu_ppn_data_T_1 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_2 = bits(_mpu_ppn_data_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.eff <= _mpu_ppn_data_T_2 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_3 = bits(_mpu_ppn_data_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.paa <= _mpu_ppn_data_T_3 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_4 = bits(_mpu_ppn_data_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pal <= _mpu_ppn_data_T_4 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_5 = bits(_mpu_ppn_data_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ppp <= _mpu_ppn_data_T_5 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_6 = bits(_mpu_ppn_data_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pr <= _mpu_ppn_data_T_6 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_7 = bits(_mpu_ppn_data_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.px <= _mpu_ppn_data_T_7 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_8 = bits(_mpu_ppn_data_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.pw <= _mpu_ppn_data_T_8 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_9 = bits(_mpu_ppn_data_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sr <= _mpu_ppn_data_T_9 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_10 = bits(_mpu_ppn_data_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sx <= _mpu_ppn_data_T_10 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_11 = bits(_mpu_ppn_data_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.sw <= _mpu_ppn_data_T_11 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_12 = bits(_mpu_ppn_data_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ae <= _mpu_ppn_data_T_12 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_13 = bits(_mpu_ppn_data_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.g <= _mpu_ppn_data_T_13 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_14 = bits(_mpu_ppn_data_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.u <= _mpu_ppn_data_T_14 @[TLB.scala 86:77]
    node _mpu_ppn_data_T_15 = bits(_mpu_ppn_data_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _mpu_ppn_data_WIRE.ppn <= _mpu_ppn_data_T_15 @[TLB.scala 86:77]
    inst mpu_ppn_data_barrier of OptimizationBarrier_36 @[package.scala 258:25]
    mpu_ppn_data_barrier.io is invalid
    mpu_ppn_data_barrier.clock <= clock
    mpu_ppn_data_barrier.reset <= reset
    mpu_ppn_data_barrier.io.x <- _mpu_ppn_data_WIRE @[package.scala 266:18]
    node _mpu_ppn_T_1 = shr(io.req.bits.vaddr, 12) @[TLB.scala 190:123]
    node _mpu_ppn_T_2 = mux(_mpu_ppn_T, mpu_ppn_data_barrier.io.y.ppn, _mpu_ppn_T_1) @[TLB.scala 190:20]
    node mpu_ppn = mux(do_refill, refill_ppn, _mpu_ppn_T_2) @[TLB.scala 189:20]
    node mpu_physaddr_lo = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 191:52]
    node mpu_physaddr = cat(mpu_ppn, mpu_physaddr_lo) @[Cat.scala 30:58]
    node _mpu_priv_T = or(do_refill, io.req.bits.passthrough) @[TLB.scala 192:56]
    node _mpu_priv_T_1 = and(UInt<1>("h00"), _mpu_priv_T) @[TLB.scala 192:42]
    node _mpu_priv_T_2 = cat(io.ptw.status.debug, io.ptw.status.prv) @[Cat.scala 30:58]
    node mpu_priv = mux(_mpu_priv_T_1, UInt<1>("h01"), _mpu_priv_T_2) @[TLB.scala 192:27]
    inst pmp of PMPChecker_2 @[TLB.scala 193:19]
    pmp.io is invalid
    pmp.clock <= clock
    pmp.reset <= reset
    pmp.io.addr <= mpu_physaddr @[TLB.scala 194:15]
    pmp.io.size <= io.req.bits.size @[TLB.scala 195:15]
    pmp.io.pmp[0] <- io.ptw.pmp[0] @[TLB.scala 196:14]
    pmp.io.pmp[1] <- io.ptw.pmp[1] @[TLB.scala 196:14]
    pmp.io.pmp[2] <- io.ptw.pmp[2] @[TLB.scala 196:14]
    pmp.io.pmp[3] <- io.ptw.pmp[3] @[TLB.scala 196:14]
    pmp.io.pmp[4] <- io.ptw.pmp[4] @[TLB.scala 196:14]
    pmp.io.pmp[5] <- io.ptw.pmp[5] @[TLB.scala 196:14]
    pmp.io.pmp[6] <- io.ptw.pmp[6] @[TLB.scala 196:14]
    pmp.io.pmp[7] <- io.ptw.pmp[7] @[TLB.scala 196:14]
    pmp.io.prv <= mpu_priv @[TLB.scala 197:14]
    node _legal_address_T = xor(mpu_physaddr, UInt<14>("h03000")) @[Parameters.scala 137:31]
    node _legal_address_T_1 = cvt(_legal_address_T) @[Parameters.scala 137:49]
    node _legal_address_T_2 = and(_legal_address_T_1, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_3 = asSInt(_legal_address_T_2) @[Parameters.scala 137:52]
    node _legal_address_T_4 = eq(_legal_address_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_5 = xor(mpu_physaddr, UInt<15>("h04000")) @[Parameters.scala 137:31]
    node _legal_address_T_6 = cvt(_legal_address_T_5) @[Parameters.scala 137:49]
    node _legal_address_T_7 = and(_legal_address_T_6, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_8 = asSInt(_legal_address_T_7) @[Parameters.scala 137:52]
    node _legal_address_T_9 = eq(_legal_address_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_10 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _legal_address_T_11 = cvt(_legal_address_T_10) @[Parameters.scala 137:49]
    node _legal_address_T_12 = and(_legal_address_T_11, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_13 = asSInt(_legal_address_T_12) @[Parameters.scala 137:52]
    node _legal_address_T_14 = eq(_legal_address_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_15 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _legal_address_T_16 = cvt(_legal_address_T_15) @[Parameters.scala 137:49]
    node _legal_address_T_17 = and(_legal_address_T_16, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_18 = asSInt(_legal_address_T_17) @[Parameters.scala 137:52]
    node _legal_address_T_19 = eq(_legal_address_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_20 = xor(mpu_physaddr, UInt<31>("h054000000")) @[Parameters.scala 137:31]
    node _legal_address_T_21 = cvt(_legal_address_T_20) @[Parameters.scala 137:49]
    node _legal_address_T_22 = and(_legal_address_T_21, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_23 = asSInt(_legal_address_T_22) @[Parameters.scala 137:52]
    node _legal_address_T_24 = eq(_legal_address_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_25 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _legal_address_T_26 = cvt(_legal_address_T_25) @[Parameters.scala 137:49]
    node _legal_address_T_27 = and(_legal_address_T_26, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_28 = asSInt(_legal_address_T_27) @[Parameters.scala 137:52]
    node _legal_address_T_29 = eq(_legal_address_T_28, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_30 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
    node _legal_address_T_31 = cvt(_legal_address_T_30) @[Parameters.scala 137:49]
    node _legal_address_T_32 = and(_legal_address_T_31, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
    node _legal_address_T_33 = asSInt(_legal_address_T_32) @[Parameters.scala 137:52]
    node _legal_address_T_34 = eq(_legal_address_T_33, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_35 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _legal_address_T_36 = cvt(_legal_address_T_35) @[Parameters.scala 137:49]
    node _legal_address_T_37 = and(_legal_address_T_36, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_38 = asSInt(_legal_address_T_37) @[Parameters.scala 137:52]
    node _legal_address_T_39 = eq(_legal_address_T_38, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_40 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _legal_address_T_41 = cvt(_legal_address_T_40) @[Parameters.scala 137:49]
    node _legal_address_T_42 = and(_legal_address_T_41, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _legal_address_T_43 = asSInt(_legal_address_T_42) @[Parameters.scala 137:52]
    node _legal_address_T_44 = eq(_legal_address_T_43, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_45 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _legal_address_T_46 = cvt(_legal_address_T_45) @[Parameters.scala 137:49]
    node _legal_address_T_47 = and(_legal_address_T_46, asSInt(UInt<15>("h04000"))) @[Parameters.scala 137:52]
    node _legal_address_T_48 = asSInt(_legal_address_T_47) @[Parameters.scala 137:52]
    node _legal_address_T_49 = eq(_legal_address_T_48, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _legal_address_T_50 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _legal_address_T_51 = cvt(_legal_address_T_50) @[Parameters.scala 137:49]
    node _legal_address_T_52 = and(_legal_address_T_51, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _legal_address_T_53 = asSInt(_legal_address_T_52) @[Parameters.scala 137:52]
    node _legal_address_T_54 = eq(_legal_address_T_53, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    wire _legal_address_WIRE : UInt<1>[11] @[Parameters.scala 598:36]
    _legal_address_WIRE is invalid @[Parameters.scala 598:36]
    _legal_address_WIRE[0] <= _legal_address_T_4 @[Parameters.scala 598:36]
    _legal_address_WIRE[1] <= _legal_address_T_9 @[Parameters.scala 598:36]
    _legal_address_WIRE[2] <= _legal_address_T_14 @[Parameters.scala 598:36]
    _legal_address_WIRE[3] <= _legal_address_T_19 @[Parameters.scala 598:36]
    _legal_address_WIRE[4] <= _legal_address_T_24 @[Parameters.scala 598:36]
    _legal_address_WIRE[5] <= _legal_address_T_29 @[Parameters.scala 598:36]
    _legal_address_WIRE[6] <= _legal_address_T_34 @[Parameters.scala 598:36]
    _legal_address_WIRE[7] <= _legal_address_T_39 @[Parameters.scala 598:36]
    _legal_address_WIRE[8] <= _legal_address_T_44 @[Parameters.scala 598:36]
    _legal_address_WIRE[9] <= _legal_address_T_49 @[Parameters.scala 598:36]
    _legal_address_WIRE[10] <= _legal_address_T_54 @[Parameters.scala 598:36]
    node _legal_address_T_55 = or(_legal_address_WIRE[0], _legal_address_WIRE[1]) @[TLB.scala 198:67]
    node _legal_address_T_56 = or(_legal_address_T_55, _legal_address_WIRE[2]) @[TLB.scala 198:67]
    node _legal_address_T_57 = or(_legal_address_T_56, _legal_address_WIRE[3]) @[TLB.scala 198:67]
    node _legal_address_T_58 = or(_legal_address_T_57, _legal_address_WIRE[4]) @[TLB.scala 198:67]
    node _legal_address_T_59 = or(_legal_address_T_58, _legal_address_WIRE[5]) @[TLB.scala 198:67]
    node _legal_address_T_60 = or(_legal_address_T_59, _legal_address_WIRE[6]) @[TLB.scala 198:67]
    node _legal_address_T_61 = or(_legal_address_T_60, _legal_address_WIRE[7]) @[TLB.scala 198:67]
    node _legal_address_T_62 = or(_legal_address_T_61, _legal_address_WIRE[8]) @[TLB.scala 198:67]
    node _legal_address_T_63 = or(_legal_address_T_62, _legal_address_WIRE[9]) @[TLB.scala 198:67]
    node legal_address = or(_legal_address_T_63, _legal_address_WIRE[10]) @[TLB.scala 198:67]
    node _cacheable_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _cacheable_T_1 = cvt(_cacheable_T) @[Parameters.scala 137:49]
    node _cacheable_T_2 = and(_cacheable_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _cacheable_T_3 = asSInt(_cacheable_T_2) @[Parameters.scala 137:52]
    node _cacheable_T_4 = eq(_cacheable_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _cacheable_T_5 = and(legal_address, UInt<1>("h00")) @[TLB.scala 200:19]
    node cacheable = and(_cacheable_T_5, UInt<1>("h01")) @[TLB.scala 201:49]
    node _homogeneous_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _homogeneous_T_1 = cvt(_homogeneous_T) @[Parameters.scala 137:49]
    node _homogeneous_T_2 = and(_homogeneous_T_1, asSInt(UInt<16>("h0b000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_3 = asSInt(_homogeneous_T_2) @[Parameters.scala 137:52]
    node _homogeneous_T_4 = eq(_homogeneous_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_5 = xor(mpu_physaddr, UInt<14>("h03000")) @[Parameters.scala 137:31]
    node _homogeneous_T_6 = cvt(_homogeneous_T_5) @[Parameters.scala 137:49]
    node _homogeneous_T_7 = and(_homogeneous_T_6, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_8 = asSInt(_homogeneous_T_7) @[Parameters.scala 137:52]
    node _homogeneous_T_9 = eq(_homogeneous_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_10 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_11 = cvt(_homogeneous_T_10) @[Parameters.scala 137:49]
    node _homogeneous_T_12 = and(_homogeneous_T_11, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_13 = asSInt(_homogeneous_T_12) @[Parameters.scala 137:52]
    node _homogeneous_T_14 = eq(_homogeneous_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_15 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_16 = cvt(_homogeneous_T_15) @[Parameters.scala 137:49]
    node _homogeneous_T_17 = and(_homogeneous_T_16, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_18 = asSInt(_homogeneous_T_17) @[Parameters.scala 137:52]
    node _homogeneous_T_19 = eq(_homogeneous_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_20 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _homogeneous_T_21 = cvt(_homogeneous_T_20) @[Parameters.scala 137:49]
    node _homogeneous_T_22 = and(_homogeneous_T_21, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_23 = asSInt(_homogeneous_T_22) @[Parameters.scala 137:52]
    node _homogeneous_T_24 = eq(_homogeneous_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_25 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_26 = cvt(_homogeneous_T_25) @[Parameters.scala 137:49]
    node _homogeneous_T_27 = and(_homogeneous_T_26, asSInt(UInt<17>("h010000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_28 = asSInt(_homogeneous_T_27) @[Parameters.scala 137:52]
    node _homogeneous_T_29 = eq(_homogeneous_T_28, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_30 = xor(mpu_physaddr, UInt<28>("h0c000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_31 = cvt(_homogeneous_T_30) @[Parameters.scala 137:49]
    node _homogeneous_T_32 = and(_homogeneous_T_31, asSInt(UInt<27>("h04000000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_33 = asSInt(_homogeneous_T_32) @[Parameters.scala 137:52]
    node _homogeneous_T_34 = eq(_homogeneous_T_33, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_35 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_36 = cvt(_homogeneous_T_35) @[Parameters.scala 137:49]
    node _homogeneous_T_37 = and(_homogeneous_T_36, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_38 = asSInt(_homogeneous_T_37) @[Parameters.scala 137:52]
    node _homogeneous_T_39 = eq(_homogeneous_T_38, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_40 = xor(mpu_physaddr, UInt<31>("h054000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_41 = cvt(_homogeneous_T_40) @[Parameters.scala 137:49]
    node _homogeneous_T_42 = and(_homogeneous_T_41, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_43 = asSInt(_homogeneous_T_42) @[Parameters.scala 137:52]
    node _homogeneous_T_44 = eq(_homogeneous_T_43, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_45 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_46 = cvt(_homogeneous_T_45) @[Parameters.scala 137:49]
    node _homogeneous_T_47 = and(_homogeneous_T_46, asSInt(UInt<15>("h04000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_48 = asSInt(_homogeneous_T_47) @[Parameters.scala 137:52]
    node _homogeneous_T_49 = eq(_homogeneous_T_48, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_50 = or(UInt<1>("h00"), _homogeneous_T_4) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_51 = or(_homogeneous_T_50, _homogeneous_T_9) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_52 = or(_homogeneous_T_51, _homogeneous_T_14) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_53 = or(_homogeneous_T_52, _homogeneous_T_19) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_54 = or(_homogeneous_T_53, _homogeneous_T_24) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_55 = or(_homogeneous_T_54, _homogeneous_T_29) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_56 = or(_homogeneous_T_55, _homogeneous_T_34) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_57 = or(_homogeneous_T_56, _homogeneous_T_39) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_58 = or(_homogeneous_T_57, _homogeneous_T_44) @[TLBPermissions.scala 98:65]
    node homogeneous = or(_homogeneous_T_58, _homogeneous_T_49) @[TLBPermissions.scala 98:65]
    node _homogeneous_T_59 = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_60 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_61 = cvt(_homogeneous_T_60) @[Parameters.scala 137:49]
    node _homogeneous_T_62 = and(_homogeneous_T_61, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_63 = asSInt(_homogeneous_T_62) @[Parameters.scala 137:52]
    node _homogeneous_T_64 = eq(_homogeneous_T_63, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_65 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_66 = cvt(_homogeneous_T_65) @[Parameters.scala 137:49]
    node _homogeneous_T_67 = and(_homogeneous_T_66, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_68 = asSInt(_homogeneous_T_67) @[Parameters.scala 137:52]
    node _homogeneous_T_69 = eq(_homogeneous_T_68, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_70 = or(UInt<1>("h00"), _homogeneous_T_64) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_71 = or(_homogeneous_T_70, _homogeneous_T_69) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_72 = eq(_homogeneous_T_71, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_73 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _homogeneous_T_74 = cvt(_homogeneous_T_73) @[Parameters.scala 137:49]
    node _homogeneous_T_75 = and(_homogeneous_T_74, asSInt(UInt<33>("h086134000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_76 = asSInt(_homogeneous_T_75) @[Parameters.scala 137:52]
    node _homogeneous_T_77 = eq(_homogeneous_T_76, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_78 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_79 = cvt(_homogeneous_T_78) @[Parameters.scala 137:49]
    node _homogeneous_T_80 = and(_homogeneous_T_79, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_81 = asSInt(_homogeneous_T_80) @[Parameters.scala 137:52]
    node _homogeneous_T_82 = eq(_homogeneous_T_81, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_83 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_84 = cvt(_homogeneous_T_83) @[Parameters.scala 137:49]
    node _homogeneous_T_85 = and(_homogeneous_T_84, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_86 = asSInt(_homogeneous_T_85) @[Parameters.scala 137:52]
    node _homogeneous_T_87 = eq(_homogeneous_T_86, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_88 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _homogeneous_T_89 = cvt(_homogeneous_T_88) @[Parameters.scala 137:49]
    node _homogeneous_T_90 = and(_homogeneous_T_89, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_91 = asSInt(_homogeneous_T_90) @[Parameters.scala 137:52]
    node _homogeneous_T_92 = eq(_homogeneous_T_91, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_93 = or(UInt<1>("h00"), _homogeneous_T_77) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_94 = or(_homogeneous_T_93, _homogeneous_T_82) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_95 = or(_homogeneous_T_94, _homogeneous_T_87) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_96 = or(_homogeneous_T_95, _homogeneous_T_92) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_97 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_98 = cvt(_homogeneous_T_97) @[Parameters.scala 137:49]
    node _homogeneous_T_99 = and(_homogeneous_T_98, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_100 = asSInt(_homogeneous_T_99) @[Parameters.scala 137:52]
    node _homogeneous_T_101 = eq(_homogeneous_T_100, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_102 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_103 = cvt(_homogeneous_T_102) @[Parameters.scala 137:49]
    node _homogeneous_T_104 = and(_homogeneous_T_103, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_105 = asSInt(_homogeneous_T_104) @[Parameters.scala 137:52]
    node _homogeneous_T_106 = eq(_homogeneous_T_105, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_107 = or(UInt<1>("h00"), _homogeneous_T_101) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_108 = or(_homogeneous_T_107, _homogeneous_T_106) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_109 = eq(_homogeneous_T_108, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _homogeneous_T_110 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _homogeneous_T_111 = cvt(_homogeneous_T_110) @[Parameters.scala 137:49]
    node _homogeneous_T_112 = and(_homogeneous_T_111, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_113 = asSInt(_homogeneous_T_112) @[Parameters.scala 137:52]
    node _homogeneous_T_114 = eq(_homogeneous_T_113, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_115 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _homogeneous_T_116 = cvt(_homogeneous_T_115) @[Parameters.scala 137:49]
    node _homogeneous_T_117 = and(_homogeneous_T_116, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _homogeneous_T_118 = asSInt(_homogeneous_T_117) @[Parameters.scala 137:52]
    node _homogeneous_T_119 = eq(_homogeneous_T_118, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _homogeneous_T_120 = or(UInt<1>("h00"), _homogeneous_T_114) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_121 = or(_homogeneous_T_120, _homogeneous_T_119) @[TLBPermissions.scala 84:66]
    node _homogeneous_T_122 = eq(_homogeneous_T_121, UInt<1>("h00")) @[TLBPermissions.scala 84:22]
    node _deny_access_to_debug_T = leq(mpu_priv, UInt<2>("h03")) @[TLB.scala 203:39]
    node _deny_access_to_debug_T_1 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _deny_access_to_debug_T_2 = cvt(_deny_access_to_debug_T_1) @[Parameters.scala 137:49]
    node _deny_access_to_debug_T_3 = and(_deny_access_to_debug_T_2, asSInt(UInt<13>("h01000"))) @[Parameters.scala 137:52]
    node _deny_access_to_debug_T_4 = asSInt(_deny_access_to_debug_T_3) @[Parameters.scala 137:52]
    node _deny_access_to_debug_T_5 = eq(_deny_access_to_debug_T_4, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node deny_access_to_debug = and(_deny_access_to_debug_T, _deny_access_to_debug_T_5) @[TLB.scala 203:48]
    node _prot_r_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_r_T_1 = cvt(_prot_r_T) @[Parameters.scala 137:49]
    node _prot_r_T_2 = and(_prot_r_T_1, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:52]
    node _prot_r_T_3 = asSInt(_prot_r_T_2) @[Parameters.scala 137:52]
    node _prot_r_T_4 = eq(_prot_r_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_r_T_5 = and(legal_address, UInt<1>("h01")) @[TLB.scala 200:19]
    node _prot_r_T_6 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 204:44]
    node _prot_r_T_7 = and(_prot_r_T_5, _prot_r_T_6) @[TLB.scala 204:41]
    node prot_r = and(_prot_r_T_7, pmp.io.r) @[TLB.scala 204:66]
    node _prot_w_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_w_T_1 = cvt(_prot_w_T) @[Parameters.scala 137:49]
    node _prot_w_T_2 = and(_prot_w_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_w_T_3 = asSInt(_prot_w_T_2) @[Parameters.scala 137:52]
    node _prot_w_T_4 = eq(_prot_w_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_w_T_6 = cvt(_prot_w_T_5) @[Parameters.scala 137:49]
    node _prot_w_T_7 = and(_prot_w_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_8 = asSInt(_prot_w_T_7) @[Parameters.scala 137:52]
    node _prot_w_T_9 = eq(_prot_w_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_w_T_11 = cvt(_prot_w_T_10) @[Parameters.scala 137:49]
    node _prot_w_T_12 = and(_prot_w_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_w_T_13 = asSInt(_prot_w_T_12) @[Parameters.scala 137:52]
    node _prot_w_T_14 = eq(_prot_w_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_w_T_16 = cvt(_prot_w_T_15) @[Parameters.scala 137:49]
    node _prot_w_T_17 = and(_prot_w_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_18 = asSInt(_prot_w_T_17) @[Parameters.scala 137:52]
    node _prot_w_T_19 = eq(_prot_w_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_w_T_21 = cvt(_prot_w_T_20) @[Parameters.scala 137:49]
    node _prot_w_T_22 = and(_prot_w_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_23 = asSInt(_prot_w_T_22) @[Parameters.scala 137:52]
    node _prot_w_T_24 = eq(_prot_w_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_25 = or(_prot_w_T_4, _prot_w_T_9) @[Parameters.scala 615:89]
    node _prot_w_T_26 = or(_prot_w_T_25, _prot_w_T_14) @[Parameters.scala 615:89]
    node _prot_w_T_27 = or(_prot_w_T_26, _prot_w_T_19) @[Parameters.scala 615:89]
    node _prot_w_T_28 = or(_prot_w_T_27, _prot_w_T_24) @[Parameters.scala 615:89]
    node _prot_w_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_w_T_30 = cvt(_prot_w_T_29) @[Parameters.scala 137:49]
    node _prot_w_T_31 = and(_prot_w_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_32 = asSInt(_prot_w_T_31) @[Parameters.scala 137:52]
    node _prot_w_T_33 = eq(_prot_w_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_w_T_35 = cvt(_prot_w_T_34) @[Parameters.scala 137:49]
    node _prot_w_T_36 = and(_prot_w_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_w_T_37 = asSInt(_prot_w_T_36) @[Parameters.scala 137:52]
    node _prot_w_T_38 = eq(_prot_w_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_w_T_39 = or(_prot_w_T_33, _prot_w_T_38) @[Parameters.scala 615:89]
    node _prot_w_T_40 = mux(_prot_w_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_w_T_41 = mux(_prot_w_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_w_T_42 = or(_prot_w_T_40, _prot_w_T_41) @[Mux.scala 27:72]
    wire _prot_w_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_w_WIRE <= _prot_w_T_42 @[Mux.scala 27:72]
    node _prot_w_T_43 = and(legal_address, _prot_w_WIRE) @[TLB.scala 200:19]
    node _prot_w_T_44 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 205:48]
    node _prot_w_T_45 = and(_prot_w_T_43, _prot_w_T_44) @[TLB.scala 205:45]
    node prot_w = and(_prot_w_T_45, pmp.io.w) @[TLB.scala 205:70]
    node _prot_pp_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_pp_T_1 = cvt(_prot_pp_T) @[Parameters.scala 137:49]
    node _prot_pp_T_2 = and(_prot_pp_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_3 = asSInt(_prot_pp_T_2) @[Parameters.scala 137:52]
    node _prot_pp_T_4 = eq(_prot_pp_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_6 = cvt(_prot_pp_T_5) @[Parameters.scala 137:49]
    node _prot_pp_T_7 = and(_prot_pp_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_8 = asSInt(_prot_pp_T_7) @[Parameters.scala 137:52]
    node _prot_pp_T_9 = eq(_prot_pp_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_11 = cvt(_prot_pp_T_10) @[Parameters.scala 137:49]
    node _prot_pp_T_12 = and(_prot_pp_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_13 = asSInt(_prot_pp_T_12) @[Parameters.scala 137:52]
    node _prot_pp_T_14 = eq(_prot_pp_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_16 = cvt(_prot_pp_T_15) @[Parameters.scala 137:49]
    node _prot_pp_T_17 = and(_prot_pp_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_18 = asSInt(_prot_pp_T_17) @[Parameters.scala 137:52]
    node _prot_pp_T_19 = eq(_prot_pp_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_pp_T_21 = cvt(_prot_pp_T_20) @[Parameters.scala 137:49]
    node _prot_pp_T_22 = and(_prot_pp_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_23 = asSInt(_prot_pp_T_22) @[Parameters.scala 137:52]
    node _prot_pp_T_24 = eq(_prot_pp_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_25 = or(_prot_pp_T_4, _prot_pp_T_9) @[Parameters.scala 615:89]
    node _prot_pp_T_26 = or(_prot_pp_T_25, _prot_pp_T_14) @[Parameters.scala 615:89]
    node _prot_pp_T_27 = or(_prot_pp_T_26, _prot_pp_T_19) @[Parameters.scala 615:89]
    node _prot_pp_T_28 = or(_prot_pp_T_27, _prot_pp_T_24) @[Parameters.scala 615:89]
    node _prot_pp_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_pp_T_30 = cvt(_prot_pp_T_29) @[Parameters.scala 137:49]
    node _prot_pp_T_31 = and(_prot_pp_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_32 = asSInt(_prot_pp_T_31) @[Parameters.scala 137:52]
    node _prot_pp_T_33 = eq(_prot_pp_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_pp_T_35 = cvt(_prot_pp_T_34) @[Parameters.scala 137:49]
    node _prot_pp_T_36 = and(_prot_pp_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_pp_T_37 = asSInt(_prot_pp_T_36) @[Parameters.scala 137:52]
    node _prot_pp_T_38 = eq(_prot_pp_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_pp_T_39 = or(_prot_pp_T_33, _prot_pp_T_38) @[Parameters.scala 615:89]
    node _prot_pp_T_40 = mux(_prot_pp_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_pp_T_41 = mux(_prot_pp_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_pp_T_42 = or(_prot_pp_T_40, _prot_pp_T_41) @[Mux.scala 27:72]
    wire _prot_pp_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_pp_WIRE <= _prot_pp_T_42 @[Mux.scala 27:72]
    node prot_pp = and(legal_address, _prot_pp_WIRE) @[TLB.scala 200:19]
    node _prot_al_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_al_T_1 = cvt(_prot_al_T) @[Parameters.scala 137:49]
    node _prot_al_T_2 = and(_prot_al_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_al_T_3 = asSInt(_prot_al_T_2) @[Parameters.scala 137:52]
    node _prot_al_T_4 = eq(_prot_al_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_al_T_6 = cvt(_prot_al_T_5) @[Parameters.scala 137:49]
    node _prot_al_T_7 = and(_prot_al_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_8 = asSInt(_prot_al_T_7) @[Parameters.scala 137:52]
    node _prot_al_T_9 = eq(_prot_al_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_al_T_11 = cvt(_prot_al_T_10) @[Parameters.scala 137:49]
    node _prot_al_T_12 = and(_prot_al_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_al_T_13 = asSInt(_prot_al_T_12) @[Parameters.scala 137:52]
    node _prot_al_T_14 = eq(_prot_al_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_al_T_16 = cvt(_prot_al_T_15) @[Parameters.scala 137:49]
    node _prot_al_T_17 = and(_prot_al_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_18 = asSInt(_prot_al_T_17) @[Parameters.scala 137:52]
    node _prot_al_T_19 = eq(_prot_al_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_al_T_21 = cvt(_prot_al_T_20) @[Parameters.scala 137:49]
    node _prot_al_T_22 = and(_prot_al_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_23 = asSInt(_prot_al_T_22) @[Parameters.scala 137:52]
    node _prot_al_T_24 = eq(_prot_al_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_25 = or(_prot_al_T_4, _prot_al_T_9) @[Parameters.scala 615:89]
    node _prot_al_T_26 = or(_prot_al_T_25, _prot_al_T_14) @[Parameters.scala 615:89]
    node _prot_al_T_27 = or(_prot_al_T_26, _prot_al_T_19) @[Parameters.scala 615:89]
    node _prot_al_T_28 = or(_prot_al_T_27, _prot_al_T_24) @[Parameters.scala 615:89]
    node _prot_al_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_al_T_30 = cvt(_prot_al_T_29) @[Parameters.scala 137:49]
    node _prot_al_T_31 = and(_prot_al_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_32 = asSInt(_prot_al_T_31) @[Parameters.scala 137:52]
    node _prot_al_T_33 = eq(_prot_al_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_al_T_35 = cvt(_prot_al_T_34) @[Parameters.scala 137:49]
    node _prot_al_T_36 = and(_prot_al_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_al_T_37 = asSInt(_prot_al_T_36) @[Parameters.scala 137:52]
    node _prot_al_T_38 = eq(_prot_al_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_al_T_39 = or(_prot_al_T_33, _prot_al_T_38) @[Parameters.scala 615:89]
    node _prot_al_T_40 = mux(_prot_al_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_al_T_41 = mux(_prot_al_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_al_T_42 = or(_prot_al_T_40, _prot_al_T_41) @[Mux.scala 27:72]
    wire _prot_al_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_al_WIRE <= _prot_al_T_42 @[Mux.scala 27:72]
    node prot_al = and(legal_address, _prot_al_WIRE) @[TLB.scala 200:19]
    node _prot_aa_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_aa_T_1 = cvt(_prot_aa_T) @[Parameters.scala 137:49]
    node _prot_aa_T_2 = and(_prot_aa_T_1, asSInt(UInt<33>("h09a030000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_3 = asSInt(_prot_aa_T_2) @[Parameters.scala 137:52]
    node _prot_aa_T_4 = eq(_prot_aa_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_5 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_6 = cvt(_prot_aa_T_5) @[Parameters.scala 137:49]
    node _prot_aa_T_7 = and(_prot_aa_T_6, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_8 = asSInt(_prot_aa_T_7) @[Parameters.scala 137:52]
    node _prot_aa_T_9 = eq(_prot_aa_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_10 = xor(mpu_physaddr, UInt<28>("h08000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_11 = cvt(_prot_aa_T_10) @[Parameters.scala 137:49]
    node _prot_aa_T_12 = and(_prot_aa_T_11, asSInt(UInt<33>("h098000000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_13 = asSInt(_prot_aa_T_12) @[Parameters.scala 137:52]
    node _prot_aa_T_14 = eq(_prot_aa_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_16 = cvt(_prot_aa_T_15) @[Parameters.scala 137:49]
    node _prot_aa_T_17 = and(_prot_aa_T_16, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_18 = asSInt(_prot_aa_T_17) @[Parameters.scala 137:52]
    node _prot_aa_T_19 = eq(_prot_aa_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_aa_T_21 = cvt(_prot_aa_T_20) @[Parameters.scala 137:49]
    node _prot_aa_T_22 = and(_prot_aa_T_21, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_23 = asSInt(_prot_aa_T_22) @[Parameters.scala 137:52]
    node _prot_aa_T_24 = eq(_prot_aa_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_25 = or(_prot_aa_T_4, _prot_aa_T_9) @[Parameters.scala 615:89]
    node _prot_aa_T_26 = or(_prot_aa_T_25, _prot_aa_T_14) @[Parameters.scala 615:89]
    node _prot_aa_T_27 = or(_prot_aa_T_26, _prot_aa_T_19) @[Parameters.scala 615:89]
    node _prot_aa_T_28 = or(_prot_aa_T_27, _prot_aa_T_24) @[Parameters.scala 615:89]
    node _prot_aa_T_29 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_aa_T_30 = cvt(_prot_aa_T_29) @[Parameters.scala 137:49]
    node _prot_aa_T_31 = and(_prot_aa_T_30, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_32 = asSInt(_prot_aa_T_31) @[Parameters.scala 137:52]
    node _prot_aa_T_33 = eq(_prot_aa_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_34 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_aa_T_35 = cvt(_prot_aa_T_34) @[Parameters.scala 137:49]
    node _prot_aa_T_36 = and(_prot_aa_T_35, asSInt(UInt<33>("h09a130000"))) @[Parameters.scala 137:52]
    node _prot_aa_T_37 = asSInt(_prot_aa_T_36) @[Parameters.scala 137:52]
    node _prot_aa_T_38 = eq(_prot_aa_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_aa_T_39 = or(_prot_aa_T_33, _prot_aa_T_38) @[Parameters.scala 615:89]
    node _prot_aa_T_40 = mux(_prot_aa_T_28, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_aa_T_41 = mux(_prot_aa_T_39, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_aa_T_42 = or(_prot_aa_T_40, _prot_aa_T_41) @[Mux.scala 27:72]
    wire _prot_aa_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_aa_WIRE <= _prot_aa_T_42 @[Mux.scala 27:72]
    node prot_aa = and(legal_address, _prot_aa_WIRE) @[TLB.scala 200:19]
    node _prot_x_T = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_x_T_1 = cvt(_prot_x_T) @[Parameters.scala 137:49]
    node _prot_x_T_2 = and(_prot_x_T_1, asSInt(UInt<33>("h086134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_3 = asSInt(_prot_x_T_2) @[Parameters.scala 137:52]
    node _prot_x_T_4 = eq(_prot_x_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_5 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_x_T_6 = cvt(_prot_x_T_5) @[Parameters.scala 137:49]
    node _prot_x_T_7 = and(_prot_x_T_6, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_8 = asSInt(_prot_x_T_7) @[Parameters.scala 137:52]
    node _prot_x_T_9 = eq(_prot_x_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_10 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_x_T_11 = cvt(_prot_x_T_10) @[Parameters.scala 137:49]
    node _prot_x_T_12 = and(_prot_x_T_11, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_13 = asSInt(_prot_x_T_12) @[Parameters.scala 137:52]
    node _prot_x_T_14 = eq(_prot_x_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_15 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_x_T_16 = cvt(_prot_x_T_15) @[Parameters.scala 137:49]
    node _prot_x_T_17 = and(_prot_x_T_16, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_18 = asSInt(_prot_x_T_17) @[Parameters.scala 137:52]
    node _prot_x_T_19 = eq(_prot_x_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_20 = or(_prot_x_T_4, _prot_x_T_9) @[Parameters.scala 615:89]
    node _prot_x_T_21 = or(_prot_x_T_20, _prot_x_T_14) @[Parameters.scala 615:89]
    node _prot_x_T_22 = or(_prot_x_T_21, _prot_x_T_19) @[Parameters.scala 615:89]
    node _prot_x_T_23 = xor(mpu_physaddr, UInt<15>("h04000")) @[Parameters.scala 137:31]
    node _prot_x_T_24 = cvt(_prot_x_T_23) @[Parameters.scala 137:49]
    node _prot_x_T_25 = and(_prot_x_T_24, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_26 = asSInt(_prot_x_T_25) @[Parameters.scala 137:52]
    node _prot_x_T_27 = eq(_prot_x_T_26, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_28 = xor(mpu_physaddr, UInt<21>("h0100000")) @[Parameters.scala 137:31]
    node _prot_x_T_29 = cvt(_prot_x_T_28) @[Parameters.scala 137:49]
    node _prot_x_T_30 = and(_prot_x_T_29, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_31 = asSInt(_prot_x_T_30) @[Parameters.scala 137:52]
    node _prot_x_T_32 = eq(_prot_x_T_31, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_33 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_x_T_34 = cvt(_prot_x_T_33) @[Parameters.scala 137:49]
    node _prot_x_T_35 = and(_prot_x_T_34, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_x_T_36 = asSInt(_prot_x_T_35) @[Parameters.scala 137:52]
    node _prot_x_T_37 = eq(_prot_x_T_36, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_38 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 137:31]
    node _prot_x_T_39 = cvt(_prot_x_T_38) @[Parameters.scala 137:49]
    node _prot_x_T_40 = and(_prot_x_T_39, asSInt(UInt<33>("h094000000"))) @[Parameters.scala 137:52]
    node _prot_x_T_41 = asSInt(_prot_x_T_40) @[Parameters.scala 137:52]
    node _prot_x_T_42 = eq(_prot_x_T_41, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_43 = xor(mpu_physaddr, UInt<29>("h014000000")) @[Parameters.scala 137:31]
    node _prot_x_T_44 = cvt(_prot_x_T_43) @[Parameters.scala 137:49]
    node _prot_x_T_45 = and(_prot_x_T_44, asSInt(UInt<33>("h096134000"))) @[Parameters.scala 137:52]
    node _prot_x_T_46 = asSInt(_prot_x_T_45) @[Parameters.scala 137:52]
    node _prot_x_T_47 = eq(_prot_x_T_46, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_x_T_48 = or(_prot_x_T_27, _prot_x_T_32) @[Parameters.scala 615:89]
    node _prot_x_T_49 = or(_prot_x_T_48, _prot_x_T_37) @[Parameters.scala 615:89]
    node _prot_x_T_50 = or(_prot_x_T_49, _prot_x_T_42) @[Parameters.scala 615:89]
    node _prot_x_T_51 = or(_prot_x_T_50, _prot_x_T_47) @[Parameters.scala 615:89]
    node _prot_x_T_52 = mux(_prot_x_T_22, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_x_T_53 = mux(_prot_x_T_51, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_x_T_54 = or(_prot_x_T_52, _prot_x_T_53) @[Mux.scala 27:72]
    wire _prot_x_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_x_WIRE <= _prot_x_T_54 @[Mux.scala 27:72]
    node _prot_x_T_55 = and(legal_address, _prot_x_WIRE) @[TLB.scala 200:19]
    node _prot_x_T_56 = eq(deny_access_to_debug, UInt<1>("h00")) @[TLB.scala 209:43]
    node _prot_x_T_57 = and(_prot_x_T_55, _prot_x_T_56) @[TLB.scala 209:40]
    node prot_x = and(_prot_x_T_57, pmp.io.x) @[TLB.scala 209:65]
    node _prot_eff_T = xor(mpu_physaddr, UInt<14>("h02000")) @[Parameters.scala 137:31]
    node _prot_eff_T_1 = cvt(_prot_eff_T) @[Parameters.scala 137:49]
    node _prot_eff_T_2 = and(_prot_eff_T_1, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_3 = asSInt(_prot_eff_T_2) @[Parameters.scala 137:52]
    node _prot_eff_T_4 = eq(_prot_eff_T_3, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_5 = xor(mpu_physaddr, UInt<17>("h010000")) @[Parameters.scala 137:31]
    node _prot_eff_T_6 = cvt(_prot_eff_T_5) @[Parameters.scala 137:49]
    node _prot_eff_T_7 = and(_prot_eff_T_6, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_8 = asSInt(_prot_eff_T_7) @[Parameters.scala 137:52]
    node _prot_eff_T_9 = eq(_prot_eff_T_8, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_10 = xor(mpu_physaddr, UInt<18>("h020000")) @[Parameters.scala 137:31]
    node _prot_eff_T_11 = cvt(_prot_eff_T_10) @[Parameters.scala 137:49]
    node _prot_eff_T_12 = and(_prot_eff_T_11, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_13 = asSInt(_prot_eff_T_12) @[Parameters.scala 137:52]
    node _prot_eff_T_14 = eq(_prot_eff_T_13, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_15 = xor(mpu_physaddr, UInt<29>("h010000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_16 = cvt(_prot_eff_T_15) @[Parameters.scala 137:49]
    node _prot_eff_T_17 = and(_prot_eff_T_16, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_18 = asSInt(_prot_eff_T_17) @[Parameters.scala 137:52]
    node _prot_eff_T_19 = eq(_prot_eff_T_18, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_20 = xor(mpu_physaddr, UInt<32>("h080000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_21 = cvt(_prot_eff_T_20) @[Parameters.scala 137:49]
    node _prot_eff_T_22 = and(_prot_eff_T_21, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_23 = asSInt(_prot_eff_T_22) @[Parameters.scala 137:52]
    node _prot_eff_T_24 = eq(_prot_eff_T_23, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_25 = or(_prot_eff_T_4, _prot_eff_T_9) @[Parameters.scala 615:89]
    node _prot_eff_T_26 = or(_prot_eff_T_25, _prot_eff_T_14) @[Parameters.scala 615:89]
    node _prot_eff_T_27 = or(_prot_eff_T_26, _prot_eff_T_19) @[Parameters.scala 615:89]
    node _prot_eff_T_28 = or(_prot_eff_T_27, _prot_eff_T_24) @[Parameters.scala 615:89]
    node _prot_eff_T_29 = xor(mpu_physaddr, UInt<1>("h00")) @[Parameters.scala 137:31]
    node _prot_eff_T_30 = cvt(_prot_eff_T_29) @[Parameters.scala 137:49]
    node _prot_eff_T_31 = and(_prot_eff_T_30, asSInt(UInt<33>("h096032000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_32 = asSInt(_prot_eff_T_31) @[Parameters.scala 137:52]
    node _prot_eff_T_33 = eq(_prot_eff_T_32, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_34 = xor(mpu_physaddr, UInt<26>("h02000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_35 = cvt(_prot_eff_T_34) @[Parameters.scala 137:49]
    node _prot_eff_T_36 = and(_prot_eff_T_35, asSInt(UInt<33>("h096130000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_37 = asSInt(_prot_eff_T_36) @[Parameters.scala 137:52]
    node _prot_eff_T_38 = eq(_prot_eff_T_37, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_39 = xor(mpu_physaddr, UInt<27>("h04000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_40 = cvt(_prot_eff_T_39) @[Parameters.scala 137:49]
    node _prot_eff_T_41 = and(_prot_eff_T_40, asSInt(UInt<33>("h094000000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_42 = asSInt(_prot_eff_T_41) @[Parameters.scala 137:52]
    node _prot_eff_T_43 = eq(_prot_eff_T_42, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_44 = xor(mpu_physaddr, UInt<29>("h014000000")) @[Parameters.scala 137:31]
    node _prot_eff_T_45 = cvt(_prot_eff_T_44) @[Parameters.scala 137:49]
    node _prot_eff_T_46 = and(_prot_eff_T_45, asSInt(UInt<33>("h096132000"))) @[Parameters.scala 137:52]
    node _prot_eff_T_47 = asSInt(_prot_eff_T_46) @[Parameters.scala 137:52]
    node _prot_eff_T_48 = eq(_prot_eff_T_47, asSInt(UInt<1>("h00"))) @[Parameters.scala 137:67]
    node _prot_eff_T_49 = or(_prot_eff_T_33, _prot_eff_T_38) @[Parameters.scala 615:89]
    node _prot_eff_T_50 = or(_prot_eff_T_49, _prot_eff_T_43) @[Parameters.scala 615:89]
    node _prot_eff_T_51 = or(_prot_eff_T_50, _prot_eff_T_48) @[Parameters.scala 615:89]
    node _prot_eff_T_52 = mux(_prot_eff_T_28, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_eff_T_53 = mux(_prot_eff_T_51, UInt<1>("h01"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _prot_eff_T_54 = or(_prot_eff_T_52, _prot_eff_T_53) @[Mux.scala 27:72]
    wire _prot_eff_WIRE : UInt<1> @[Mux.scala 27:72]
    _prot_eff_WIRE <= _prot_eff_T_54 @[Mux.scala 27:72]
    node prot_eff = and(legal_address, _prot_eff_WIRE) @[TLB.scala 200:19]
    node _sector_hits_T = or(sectored_entries[UInt<1>("h00")][0].valid[0], sectored_entries[UInt<1>("h00")][0].valid[1]) @[package.scala 72:59]
    node _sector_hits_T_1 = or(_sector_hits_T, sectored_entries[UInt<1>("h00")][0].valid[2]) @[package.scala 72:59]
    node _sector_hits_T_2 = or(_sector_hits_T_1, sectored_entries[UInt<1>("h00")][0].valid[3]) @[package.scala 72:59]
    node _sector_hits_T_3 = xor(sectored_entries[UInt<1>("h00")][0].tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_4 = shr(_sector_hits_T_3, 2) @[TLB.scala 88:48]
    node _sector_hits_T_5 = eq(_sector_hits_T_4, UInt<1>("h00")) @[TLB.scala 88:66]
    node sector_hits_0 = and(_sector_hits_T_2, _sector_hits_T_5) @[TLB.scala 87:40]
    node _superpage_hits_T = xor(superpage_entries[0].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_1 = shr(_superpage_hits_T, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_2 = eq(_superpage_hits_T_1, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_0 = and(superpage_entries[0].valid[UInt<1>("h00")], _superpage_hits_T_2) @[TLB.scala 100:18]
    node _superpage_hits_T_3 = xor(superpage_entries[1].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_4 = shr(_superpage_hits_T_3, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_5 = eq(_superpage_hits_T_4, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_1 = and(superpage_entries[1].valid[UInt<1>("h00")], _superpage_hits_T_5) @[TLB.scala 100:18]
    node _superpage_hits_T_6 = xor(superpage_entries[2].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_7 = shr(_superpage_hits_T_6, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_8 = eq(_superpage_hits_T_7, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_2 = and(superpage_entries[2].valid[UInt<1>("h00")], _superpage_hits_T_8) @[TLB.scala 100:18]
    node _superpage_hits_T_9 = xor(superpage_entries[3].tag, vpn) @[TLB.scala 88:41]
    node _superpage_hits_T_10 = shr(_superpage_hits_T_9, 0) @[TLB.scala 88:48]
    node _superpage_hits_T_11 = eq(_superpage_hits_T_10, UInt<1>("h00")) @[TLB.scala 88:66]
    node superpage_hits_3 = and(superpage_entries[3].valid[UInt<1>("h00")], _superpage_hits_T_11) @[TLB.scala 100:18]
    node hitsVec_idx = bits(vpn, 1, 0) @[package.scala 154:13]
    node _hitsVec_T = xor(sectored_entries[UInt<1>("h00")][0].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_1 = shr(_hitsVec_T, 2) @[TLB.scala 88:48]
    node _hitsVec_T_2 = eq(_hitsVec_T_1, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_3 = and(sectored_entries[UInt<1>("h00")][0].valid[hitsVec_idx], _hitsVec_T_2) @[TLB.scala 100:18]
    node hitsVec_0 = and(vm_enabled, _hitsVec_T_3) @[TLB.scala 214:44]
    node _hitsVec_T_4 = xor(superpage_entries[0].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_5 = shr(_hitsVec_T_4, 0) @[TLB.scala 88:48]
    node _hitsVec_T_6 = eq(_hitsVec_T_5, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_7 = and(superpage_entries[0].valid[UInt<1>("h00")], _hitsVec_T_6) @[TLB.scala 100:18]
    node hitsVec_1 = and(vm_enabled, _hitsVec_T_7) @[TLB.scala 214:44]
    node _hitsVec_T_8 = xor(superpage_entries[1].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_9 = shr(_hitsVec_T_8, 0) @[TLB.scala 88:48]
    node _hitsVec_T_10 = eq(_hitsVec_T_9, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_11 = and(superpage_entries[1].valid[UInt<1>("h00")], _hitsVec_T_10) @[TLB.scala 100:18]
    node hitsVec_2 = and(vm_enabled, _hitsVec_T_11) @[TLB.scala 214:44]
    node _hitsVec_T_12 = xor(superpage_entries[2].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_13 = shr(_hitsVec_T_12, 0) @[TLB.scala 88:48]
    node _hitsVec_T_14 = eq(_hitsVec_T_13, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_15 = and(superpage_entries[2].valid[UInt<1>("h00")], _hitsVec_T_14) @[TLB.scala 100:18]
    node hitsVec_3 = and(vm_enabled, _hitsVec_T_15) @[TLB.scala 214:44]
    node _hitsVec_T_16 = xor(superpage_entries[3].tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_17 = shr(_hitsVec_T_16, 0) @[TLB.scala 88:48]
    node _hitsVec_T_18 = eq(_hitsVec_T_17, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_19 = and(superpage_entries[3].valid[UInt<1>("h00")], _hitsVec_T_18) @[TLB.scala 100:18]
    node hitsVec_4 = and(vm_enabled, _hitsVec_T_19) @[TLB.scala 214:44]
    node _hitsVec_T_20 = xor(special_entry.tag, vpn) @[TLB.scala 88:41]
    node _hitsVec_T_21 = shr(_hitsVec_T_20, 0) @[TLB.scala 88:48]
    node _hitsVec_T_22 = eq(_hitsVec_T_21, UInt<1>("h00")) @[TLB.scala 88:66]
    node _hitsVec_T_23 = and(special_entry.valid[UInt<1>("h00")], _hitsVec_T_22) @[TLB.scala 100:18]
    node hitsVec_5 = and(vm_enabled, _hitsVec_T_23) @[TLB.scala 214:44]
    node real_hits_lo_hi = cat(hitsVec_2, hitsVec_1) @[Cat.scala 30:58]
    node real_hits_lo = cat(real_hits_lo_hi, hitsVec_0) @[Cat.scala 30:58]
    node real_hits_hi_hi = cat(hitsVec_5, hitsVec_4) @[Cat.scala 30:58]
    node real_hits_hi = cat(real_hits_hi_hi, hitsVec_3) @[Cat.scala 30:58]
    node real_hits = cat(real_hits_hi, real_hits_lo) @[Cat.scala 30:58]
    node hits_hi = eq(vm_enabled, UInt<1>("h00")) @[TLB.scala 216:18]
    node hits = cat(hits_hi, real_hits) @[Cat.scala 30:58]
    node _ppn_T = eq(vm_enabled, UInt<1>("h00")) @[TLB.scala 217:30]
    node _ppn_data_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _ppn_data_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_1 : UInt<35>
    _ppn_data_WIRE_1 is invalid
    _ppn_data_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_ppn_data_T]
    node _ppn_data_T_1 = bits(_ppn_data_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE.fragmented_superpage <= _ppn_data_T_1 @[TLB.scala 86:77]
    node _ppn_data_T_2 = bits(_ppn_data_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE.c <= _ppn_data_T_2 @[TLB.scala 86:77]
    node _ppn_data_T_3 = bits(_ppn_data_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE.eff <= _ppn_data_T_3 @[TLB.scala 86:77]
    node _ppn_data_T_4 = bits(_ppn_data_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE.paa <= _ppn_data_T_4 @[TLB.scala 86:77]
    node _ppn_data_T_5 = bits(_ppn_data_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE.pal <= _ppn_data_T_5 @[TLB.scala 86:77]
    node _ppn_data_T_6 = bits(_ppn_data_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE.ppp <= _ppn_data_T_6 @[TLB.scala 86:77]
    node _ppn_data_T_7 = bits(_ppn_data_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE.pr <= _ppn_data_T_7 @[TLB.scala 86:77]
    node _ppn_data_T_8 = bits(_ppn_data_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE.px <= _ppn_data_T_8 @[TLB.scala 86:77]
    node _ppn_data_T_9 = bits(_ppn_data_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE.pw <= _ppn_data_T_9 @[TLB.scala 86:77]
    node _ppn_data_T_10 = bits(_ppn_data_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE.sr <= _ppn_data_T_10 @[TLB.scala 86:77]
    node _ppn_data_T_11 = bits(_ppn_data_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE.sx <= _ppn_data_T_11 @[TLB.scala 86:77]
    node _ppn_data_T_12 = bits(_ppn_data_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE.sw <= _ppn_data_T_12 @[TLB.scala 86:77]
    node _ppn_data_T_13 = bits(_ppn_data_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE.ae <= _ppn_data_T_13 @[TLB.scala 86:77]
    node _ppn_data_T_14 = bits(_ppn_data_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE.g <= _ppn_data_T_14 @[TLB.scala 86:77]
    node _ppn_data_T_15 = bits(_ppn_data_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE.u <= _ppn_data_T_15 @[TLB.scala 86:77]
    node _ppn_data_T_16 = bits(_ppn_data_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE.ppn <= _ppn_data_T_16 @[TLB.scala 86:77]
    inst ppn_data_barrier of OptimizationBarrier_37 @[package.scala 258:25]
    ppn_data_barrier.io is invalid
    ppn_data_barrier.clock <= clock
    ppn_data_barrier.reset <= reset
    ppn_data_barrier.io.x <- _ppn_data_WIRE @[package.scala 266:18]
    wire _ppn_data_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_3 : UInt<35>
    _ppn_data_WIRE_3 is invalid
    _ppn_data_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _ppn_data_T_17 = bits(_ppn_data_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.fragmented_superpage <= _ppn_data_T_17 @[TLB.scala 86:77]
    node _ppn_data_T_18 = bits(_ppn_data_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.c <= _ppn_data_T_18 @[TLB.scala 86:77]
    node _ppn_data_T_19 = bits(_ppn_data_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.eff <= _ppn_data_T_19 @[TLB.scala 86:77]
    node _ppn_data_T_20 = bits(_ppn_data_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.paa <= _ppn_data_T_20 @[TLB.scala 86:77]
    node _ppn_data_T_21 = bits(_ppn_data_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pal <= _ppn_data_T_21 @[TLB.scala 86:77]
    node _ppn_data_T_22 = bits(_ppn_data_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ppp <= _ppn_data_T_22 @[TLB.scala 86:77]
    node _ppn_data_T_23 = bits(_ppn_data_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pr <= _ppn_data_T_23 @[TLB.scala 86:77]
    node _ppn_data_T_24 = bits(_ppn_data_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.px <= _ppn_data_T_24 @[TLB.scala 86:77]
    node _ppn_data_T_25 = bits(_ppn_data_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.pw <= _ppn_data_T_25 @[TLB.scala 86:77]
    node _ppn_data_T_26 = bits(_ppn_data_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sr <= _ppn_data_T_26 @[TLB.scala 86:77]
    node _ppn_data_T_27 = bits(_ppn_data_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sx <= _ppn_data_T_27 @[TLB.scala 86:77]
    node _ppn_data_T_28 = bits(_ppn_data_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.sw <= _ppn_data_T_28 @[TLB.scala 86:77]
    node _ppn_data_T_29 = bits(_ppn_data_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ae <= _ppn_data_T_29 @[TLB.scala 86:77]
    node _ppn_data_T_30 = bits(_ppn_data_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.g <= _ppn_data_T_30 @[TLB.scala 86:77]
    node _ppn_data_T_31 = bits(_ppn_data_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.u <= _ppn_data_T_31 @[TLB.scala 86:77]
    node _ppn_data_T_32 = bits(_ppn_data_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_2.ppn <= _ppn_data_T_32 @[TLB.scala 86:77]
    inst ppn_data_barrier_1 of OptimizationBarrier_38 @[package.scala 258:25]
    ppn_data_barrier_1.io is invalid
    ppn_data_barrier_1.clock <= clock
    ppn_data_barrier_1.reset <= reset
    ppn_data_barrier_1.io.x <- _ppn_data_WIRE_2 @[package.scala 266:18]
    wire _ppn_data_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_5 : UInt<35>
    _ppn_data_WIRE_5 is invalid
    _ppn_data_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _ppn_data_T_33 = bits(_ppn_data_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.fragmented_superpage <= _ppn_data_T_33 @[TLB.scala 86:77]
    node _ppn_data_T_34 = bits(_ppn_data_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.c <= _ppn_data_T_34 @[TLB.scala 86:77]
    node _ppn_data_T_35 = bits(_ppn_data_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.eff <= _ppn_data_T_35 @[TLB.scala 86:77]
    node _ppn_data_T_36 = bits(_ppn_data_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.paa <= _ppn_data_T_36 @[TLB.scala 86:77]
    node _ppn_data_T_37 = bits(_ppn_data_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pal <= _ppn_data_T_37 @[TLB.scala 86:77]
    node _ppn_data_T_38 = bits(_ppn_data_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ppp <= _ppn_data_T_38 @[TLB.scala 86:77]
    node _ppn_data_T_39 = bits(_ppn_data_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pr <= _ppn_data_T_39 @[TLB.scala 86:77]
    node _ppn_data_T_40 = bits(_ppn_data_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.px <= _ppn_data_T_40 @[TLB.scala 86:77]
    node _ppn_data_T_41 = bits(_ppn_data_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.pw <= _ppn_data_T_41 @[TLB.scala 86:77]
    node _ppn_data_T_42 = bits(_ppn_data_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sr <= _ppn_data_T_42 @[TLB.scala 86:77]
    node _ppn_data_T_43 = bits(_ppn_data_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sx <= _ppn_data_T_43 @[TLB.scala 86:77]
    node _ppn_data_T_44 = bits(_ppn_data_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.sw <= _ppn_data_T_44 @[TLB.scala 86:77]
    node _ppn_data_T_45 = bits(_ppn_data_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ae <= _ppn_data_T_45 @[TLB.scala 86:77]
    node _ppn_data_T_46 = bits(_ppn_data_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.g <= _ppn_data_T_46 @[TLB.scala 86:77]
    node _ppn_data_T_47 = bits(_ppn_data_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.u <= _ppn_data_T_47 @[TLB.scala 86:77]
    node _ppn_data_T_48 = bits(_ppn_data_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_4.ppn <= _ppn_data_T_48 @[TLB.scala 86:77]
    inst ppn_data_barrier_2 of OptimizationBarrier_39 @[package.scala 258:25]
    ppn_data_barrier_2.io is invalid
    ppn_data_barrier_2.clock <= clock
    ppn_data_barrier_2.reset <= reset
    ppn_data_barrier_2.io.x <- _ppn_data_WIRE_4 @[package.scala 266:18]
    wire _ppn_data_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_7 : UInt<35>
    _ppn_data_WIRE_7 is invalid
    _ppn_data_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _ppn_data_T_49 = bits(_ppn_data_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.fragmented_superpage <= _ppn_data_T_49 @[TLB.scala 86:77]
    node _ppn_data_T_50 = bits(_ppn_data_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.c <= _ppn_data_T_50 @[TLB.scala 86:77]
    node _ppn_data_T_51 = bits(_ppn_data_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.eff <= _ppn_data_T_51 @[TLB.scala 86:77]
    node _ppn_data_T_52 = bits(_ppn_data_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.paa <= _ppn_data_T_52 @[TLB.scala 86:77]
    node _ppn_data_T_53 = bits(_ppn_data_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pal <= _ppn_data_T_53 @[TLB.scala 86:77]
    node _ppn_data_T_54 = bits(_ppn_data_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ppp <= _ppn_data_T_54 @[TLB.scala 86:77]
    node _ppn_data_T_55 = bits(_ppn_data_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pr <= _ppn_data_T_55 @[TLB.scala 86:77]
    node _ppn_data_T_56 = bits(_ppn_data_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.px <= _ppn_data_T_56 @[TLB.scala 86:77]
    node _ppn_data_T_57 = bits(_ppn_data_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.pw <= _ppn_data_T_57 @[TLB.scala 86:77]
    node _ppn_data_T_58 = bits(_ppn_data_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sr <= _ppn_data_T_58 @[TLB.scala 86:77]
    node _ppn_data_T_59 = bits(_ppn_data_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sx <= _ppn_data_T_59 @[TLB.scala 86:77]
    node _ppn_data_T_60 = bits(_ppn_data_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.sw <= _ppn_data_T_60 @[TLB.scala 86:77]
    node _ppn_data_T_61 = bits(_ppn_data_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ae <= _ppn_data_T_61 @[TLB.scala 86:77]
    node _ppn_data_T_62 = bits(_ppn_data_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.g <= _ppn_data_T_62 @[TLB.scala 86:77]
    node _ppn_data_T_63 = bits(_ppn_data_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.u <= _ppn_data_T_63 @[TLB.scala 86:77]
    node _ppn_data_T_64 = bits(_ppn_data_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_6.ppn <= _ppn_data_T_64 @[TLB.scala 86:77]
    inst ppn_data_barrier_3 of OptimizationBarrier_40 @[package.scala 258:25]
    ppn_data_barrier_3.io is invalid
    ppn_data_barrier_3.clock <= clock
    ppn_data_barrier_3.reset <= reset
    ppn_data_barrier_3.io.x <- _ppn_data_WIRE_6 @[package.scala 266:18]
    wire _ppn_data_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_9 : UInt<35>
    _ppn_data_WIRE_9 is invalid
    _ppn_data_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _ppn_data_T_65 = bits(_ppn_data_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.fragmented_superpage <= _ppn_data_T_65 @[TLB.scala 86:77]
    node _ppn_data_T_66 = bits(_ppn_data_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.c <= _ppn_data_T_66 @[TLB.scala 86:77]
    node _ppn_data_T_67 = bits(_ppn_data_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.eff <= _ppn_data_T_67 @[TLB.scala 86:77]
    node _ppn_data_T_68 = bits(_ppn_data_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.paa <= _ppn_data_T_68 @[TLB.scala 86:77]
    node _ppn_data_T_69 = bits(_ppn_data_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pal <= _ppn_data_T_69 @[TLB.scala 86:77]
    node _ppn_data_T_70 = bits(_ppn_data_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ppp <= _ppn_data_T_70 @[TLB.scala 86:77]
    node _ppn_data_T_71 = bits(_ppn_data_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pr <= _ppn_data_T_71 @[TLB.scala 86:77]
    node _ppn_data_T_72 = bits(_ppn_data_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.px <= _ppn_data_T_72 @[TLB.scala 86:77]
    node _ppn_data_T_73 = bits(_ppn_data_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.pw <= _ppn_data_T_73 @[TLB.scala 86:77]
    node _ppn_data_T_74 = bits(_ppn_data_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sr <= _ppn_data_T_74 @[TLB.scala 86:77]
    node _ppn_data_T_75 = bits(_ppn_data_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sx <= _ppn_data_T_75 @[TLB.scala 86:77]
    node _ppn_data_T_76 = bits(_ppn_data_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.sw <= _ppn_data_T_76 @[TLB.scala 86:77]
    node _ppn_data_T_77 = bits(_ppn_data_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ae <= _ppn_data_T_77 @[TLB.scala 86:77]
    node _ppn_data_T_78 = bits(_ppn_data_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.g <= _ppn_data_T_78 @[TLB.scala 86:77]
    node _ppn_data_T_79 = bits(_ppn_data_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.u <= _ppn_data_T_79 @[TLB.scala 86:77]
    node _ppn_data_T_80 = bits(_ppn_data_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_8.ppn <= _ppn_data_T_80 @[TLB.scala 86:77]
    inst ppn_data_barrier_4 of OptimizationBarrier_41 @[package.scala 258:25]
    ppn_data_barrier_4.io is invalid
    ppn_data_barrier_4.clock <= clock
    ppn_data_barrier_4.reset <= reset
    ppn_data_barrier_4.io.x <- _ppn_data_WIRE_8 @[package.scala 266:18]
    wire _ppn_data_WIRE_10 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _ppn_data_WIRE_10 is invalid @[TLB.scala 86:77]
    wire _ppn_data_WIRE_11 : UInt<35>
    _ppn_data_WIRE_11 is invalid
    _ppn_data_WIRE_11 <= special_entry.data[UInt<1>("h00")]
    node _ppn_data_T_81 = bits(_ppn_data_WIRE_11, 0, 0) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.fragmented_superpage <= _ppn_data_T_81 @[TLB.scala 86:77]
    node _ppn_data_T_82 = bits(_ppn_data_WIRE_11, 1, 1) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.c <= _ppn_data_T_82 @[TLB.scala 86:77]
    node _ppn_data_T_83 = bits(_ppn_data_WIRE_11, 2, 2) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.eff <= _ppn_data_T_83 @[TLB.scala 86:77]
    node _ppn_data_T_84 = bits(_ppn_data_WIRE_11, 3, 3) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.paa <= _ppn_data_T_84 @[TLB.scala 86:77]
    node _ppn_data_T_85 = bits(_ppn_data_WIRE_11, 4, 4) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pal <= _ppn_data_T_85 @[TLB.scala 86:77]
    node _ppn_data_T_86 = bits(_ppn_data_WIRE_11, 5, 5) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ppp <= _ppn_data_T_86 @[TLB.scala 86:77]
    node _ppn_data_T_87 = bits(_ppn_data_WIRE_11, 6, 6) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pr <= _ppn_data_T_87 @[TLB.scala 86:77]
    node _ppn_data_T_88 = bits(_ppn_data_WIRE_11, 7, 7) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.px <= _ppn_data_T_88 @[TLB.scala 86:77]
    node _ppn_data_T_89 = bits(_ppn_data_WIRE_11, 8, 8) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.pw <= _ppn_data_T_89 @[TLB.scala 86:77]
    node _ppn_data_T_90 = bits(_ppn_data_WIRE_11, 9, 9) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sr <= _ppn_data_T_90 @[TLB.scala 86:77]
    node _ppn_data_T_91 = bits(_ppn_data_WIRE_11, 10, 10) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sx <= _ppn_data_T_91 @[TLB.scala 86:77]
    node _ppn_data_T_92 = bits(_ppn_data_WIRE_11, 11, 11) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.sw <= _ppn_data_T_92 @[TLB.scala 86:77]
    node _ppn_data_T_93 = bits(_ppn_data_WIRE_11, 12, 12) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ae <= _ppn_data_T_93 @[TLB.scala 86:77]
    node _ppn_data_T_94 = bits(_ppn_data_WIRE_11, 13, 13) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.g <= _ppn_data_T_94 @[TLB.scala 86:77]
    node _ppn_data_T_95 = bits(_ppn_data_WIRE_11, 14, 14) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.u <= _ppn_data_T_95 @[TLB.scala 86:77]
    node _ppn_data_T_96 = bits(_ppn_data_WIRE_11, 34, 15) @[TLB.scala 86:77]
    _ppn_data_WIRE_10.ppn <= _ppn_data_T_96 @[TLB.scala 86:77]
    inst ppn_data_barrier_5 of OptimizationBarrier_42 @[package.scala 258:25]
    ppn_data_barrier_5.io is invalid
    ppn_data_barrier_5.clock <= clock
    ppn_data_barrier_5.reset <= reset
    ppn_data_barrier_5.io.x <- _ppn_data_WIRE_10 @[package.scala 266:18]
    node _ppn_T_1 = bits(vpn, 19, 0) @[TLB.scala 217:77]
    node _ppn_T_2 = mux(hitsVec_0, ppn_data_barrier.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_3 = mux(hitsVec_1, ppn_data_barrier_1.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_4 = mux(hitsVec_2, ppn_data_barrier_2.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_5 = mux(hitsVec_3, ppn_data_barrier_3.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_6 = mux(hitsVec_4, ppn_data_barrier_4.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_7 = mux(hitsVec_5, ppn_data_barrier_5.io.y.ppn, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_8 = mux(_ppn_T, _ppn_T_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _ppn_T_9 = or(_ppn_T_2, _ppn_T_3) @[Mux.scala 27:72]
    node _ppn_T_10 = or(_ppn_T_9, _ppn_T_4) @[Mux.scala 27:72]
    node _ppn_T_11 = or(_ppn_T_10, _ppn_T_5) @[Mux.scala 27:72]
    node _ppn_T_12 = or(_ppn_T_11, _ppn_T_6) @[Mux.scala 27:72]
    node _ppn_T_13 = or(_ppn_T_12, _ppn_T_7) @[Mux.scala 27:72]
    node _ppn_T_14 = or(_ppn_T_13, _ppn_T_8) @[Mux.scala 27:72]
    wire ppn : UInt<20> @[Mux.scala 27:72]
    ppn <= _ppn_T_14 @[Mux.scala 27:72]
    when do_refill : @[TLB.scala 220:20]
      wire newEntry : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 222:24]
      newEntry is invalid @[TLB.scala 222:24]
      newEntry.ppn <= io.ptw.resp.bits.pte.ppn @[TLB.scala 223:18]
      newEntry.c <= cacheable @[TLB.scala 224:16]
      newEntry.u <= io.ptw.resp.bits.pte.u @[TLB.scala 225:16]
      node _newEntry_g_T = and(io.ptw.resp.bits.pte.g, io.ptw.resp.bits.pte.v) @[TLB.scala 226:25]
      newEntry.g <= _newEntry_g_T @[TLB.scala 226:16]
      newEntry.ae <= io.ptw.resp.bits.ae @[TLB.scala 227:17]
      node _newEntry_sr_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sr_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sr_T) @[PTW.scala 73:44]
      node _newEntry_sr_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sr_T_1) @[PTW.scala 73:38]
      node _newEntry_sr_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sr_T_2) @[PTW.scala 73:32]
      node _newEntry_sr_T_4 = and(_newEntry_sr_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sr_T_5 = and(_newEntry_sr_T_4, io.ptw.resp.bits.pte.r) @[PTW.scala 77:35]
      newEntry.sr <= _newEntry_sr_T_5 @[TLB.scala 228:17]
      node _newEntry_sw_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sw_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sw_T) @[PTW.scala 73:44]
      node _newEntry_sw_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sw_T_1) @[PTW.scala 73:38]
      node _newEntry_sw_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sw_T_2) @[PTW.scala 73:32]
      node _newEntry_sw_T_4 = and(_newEntry_sw_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sw_T_5 = and(_newEntry_sw_T_4, io.ptw.resp.bits.pte.w) @[PTW.scala 78:35]
      node _newEntry_sw_T_6 = and(_newEntry_sw_T_5, io.ptw.resp.bits.pte.d) @[PTW.scala 78:40]
      newEntry.sw <= _newEntry_sw_T_6 @[TLB.scala 229:17]
      node _newEntry_sx_T = eq(io.ptw.resp.bits.pte.w, UInt<1>("h00")) @[PTW.scala 73:47]
      node _newEntry_sx_T_1 = and(io.ptw.resp.bits.pte.x, _newEntry_sx_T) @[PTW.scala 73:44]
      node _newEntry_sx_T_2 = or(io.ptw.resp.bits.pte.r, _newEntry_sx_T_1) @[PTW.scala 73:38]
      node _newEntry_sx_T_3 = and(io.ptw.resp.bits.pte.v, _newEntry_sx_T_2) @[PTW.scala 73:32]
      node _newEntry_sx_T_4 = and(_newEntry_sx_T_3, io.ptw.resp.bits.pte.a) @[PTW.scala 73:52]
      node _newEntry_sx_T_5 = and(_newEntry_sx_T_4, io.ptw.resp.bits.pte.x) @[PTW.scala 79:35]
      newEntry.sx <= _newEntry_sx_T_5 @[TLB.scala 230:17]
      newEntry.pr <= prot_r @[TLB.scala 231:17]
      newEntry.pw <= prot_w @[TLB.scala 232:17]
      newEntry.px <= prot_x @[TLB.scala 233:17]
      newEntry.ppp <= prot_pp @[TLB.scala 234:18]
      newEntry.pal <= prot_al @[TLB.scala 235:18]
      newEntry.paa <= prot_aa @[TLB.scala 236:18]
      newEntry.eff <= prot_eff @[TLB.scala 237:18]
      newEntry.fragmented_superpage <= io.ptw.resp.bits.fragmented_superpage @[TLB.scala 238:35]
      node _T = eq(io.ptw.resp.bits.homogeneous, UInt<1>("h00")) @[TLB.scala 240:37]
      node _T_1 = and(UInt<1>("h01"), _T) @[TLB.scala 240:34]
      when _T_1 : @[TLB.scala 240:68]
        special_entry.tag <= r_refill_tag @[TLB.scala 118:14]
        node _special_entry_level_T = bits(io.ptw.resp.bits.level, 0, 0) @[package.scala 154:13]
        special_entry.level <= _special_entry_level_T @[TLB.scala 119:16]
        special_entry.valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
        node special_entry_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
        node special_entry_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
        node special_entry_data_0_lo_lo = cat(special_entry_data_0_lo_lo_hi, special_entry_data_0_lo_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
        node special_entry_data_0_lo_hi = cat(special_entry_data_0_lo_hi_hi, special_entry_data_0_lo_hi_lo) @[TLB.scala 123:24]
        node special_entry_data_0_lo = cat(special_entry_data_0_lo_hi, special_entry_data_0_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
        node special_entry_data_0_hi_lo = cat(special_entry_data_0_hi_lo_hi, special_entry_data_0_hi_lo_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
        node special_entry_data_0_hi_hi = cat(special_entry_data_0_hi_hi_hi, special_entry_data_0_hi_hi_lo) @[TLB.scala 123:24]
        node special_entry_data_0_hi = cat(special_entry_data_0_hi_hi, special_entry_data_0_hi_lo) @[TLB.scala 123:24]
        node _special_entry_data_0_T = cat(special_entry_data_0_hi, special_entry_data_0_lo) @[TLB.scala 123:24]
        special_entry.data[UInt<1>("h00")] <= _special_entry_data_0_T @[TLB.scala 123:15]
        when invalidate_refill : @[TLB.scala 243:34]
          special_entry.valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
          skip @[TLB.scala 243:34]
        skip @[TLB.scala 240:68]
      else : @[TLB.scala 245:54]
        node _T_2 = lt(io.ptw.resp.bits.level, UInt<1>("h01")) @[TLB.scala 245:40]
        when _T_2 : @[TLB.scala 245:54]
          node _T_3 = eq(r_superpage_repl_addr, UInt<1>("h00")) @[TLB.scala 246:82]
          when _T_3 : @[TLB.scala 246:89]
            superpage_entries[0].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[0].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[0].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_0_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_lo = cat(superpage_entries_0_data_0_lo_lo_hi, superpage_entries_0_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo_hi = cat(superpage_entries_0_data_0_lo_hi_hi, superpage_entries_0_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_lo = cat(superpage_entries_0_data_0_lo_hi, superpage_entries_0_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_lo = cat(superpage_entries_0_data_0_hi_lo_hi, superpage_entries_0_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi_hi = cat(superpage_entries_0_data_0_hi_hi_hi, superpage_entries_0_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_0_data_0_hi = cat(superpage_entries_0_data_0_hi_hi, superpage_entries_0_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_0_data_0_T = cat(superpage_entries_0_data_0_hi, superpage_entries_0_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[0].data[UInt<1>("h00")] <= _superpage_entries_0_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_4 = eq(r_superpage_repl_addr, UInt<1>("h01")) @[TLB.scala 246:82]
          when _T_4 : @[TLB.scala 246:89]
            superpage_entries[1].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[1].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[1].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_1_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_lo = cat(superpage_entries_1_data_0_lo_lo_hi, superpage_entries_1_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo_hi = cat(superpage_entries_1_data_0_lo_hi_hi, superpage_entries_1_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_lo = cat(superpage_entries_1_data_0_lo_hi, superpage_entries_1_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_lo = cat(superpage_entries_1_data_0_hi_lo_hi, superpage_entries_1_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi_hi = cat(superpage_entries_1_data_0_hi_hi_hi, superpage_entries_1_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_1_data_0_hi = cat(superpage_entries_1_data_0_hi_hi, superpage_entries_1_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_1_data_0_T = cat(superpage_entries_1_data_0_hi, superpage_entries_1_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[1].data[UInt<1>("h00")] <= _superpage_entries_1_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[1].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_5 = eq(r_superpage_repl_addr, UInt<2>("h02")) @[TLB.scala 246:82]
          when _T_5 : @[TLB.scala 246:89]
            superpage_entries[2].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[2].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[2].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_2_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_lo = cat(superpage_entries_2_data_0_lo_lo_hi, superpage_entries_2_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo_hi = cat(superpage_entries_2_data_0_lo_hi_hi, superpage_entries_2_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_lo = cat(superpage_entries_2_data_0_lo_hi, superpage_entries_2_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_lo = cat(superpage_entries_2_data_0_hi_lo_hi, superpage_entries_2_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi_hi = cat(superpage_entries_2_data_0_hi_hi_hi, superpage_entries_2_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_2_data_0_hi = cat(superpage_entries_2_data_0_hi_hi, superpage_entries_2_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_2_data_0_T = cat(superpage_entries_2_data_0_hi, superpage_entries_2_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[2].data[UInt<1>("h00")] <= _superpage_entries_2_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[2].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          node _T_6 = eq(r_superpage_repl_addr, UInt<2>("h03")) @[TLB.scala 246:82]
          when _T_6 : @[TLB.scala 246:89]
            superpage_entries[3].tag <= r_refill_tag @[TLB.scala 118:14]
            superpage_entries[3].level <= UInt<1>("h00") @[TLB.scala 119:16]
            superpage_entries[3].valid[UInt<1>("h00")] <= UInt<1>("h01") @[TLB.scala 122:16]
            node superpage_entries_3_data_0_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_lo = cat(superpage_entries_3_data_0_lo_lo_hi, superpage_entries_3_data_0_lo_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo_hi = cat(superpage_entries_3_data_0_lo_hi_hi, superpage_entries_3_data_0_lo_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_lo = cat(superpage_entries_3_data_0_lo_hi, superpage_entries_3_data_0_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_lo = cat(superpage_entries_3_data_0_hi_lo_hi, superpage_entries_3_data_0_hi_lo_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi_hi = cat(superpage_entries_3_data_0_hi_hi_hi, superpage_entries_3_data_0_hi_hi_lo) @[TLB.scala 123:24]
            node superpage_entries_3_data_0_hi = cat(superpage_entries_3_data_0_hi_hi, superpage_entries_3_data_0_hi_lo) @[TLB.scala 123:24]
            node _superpage_entries_3_data_0_T = cat(superpage_entries_3_data_0_hi, superpage_entries_3_data_0_lo) @[TLB.scala 123:24]
            superpage_entries[3].data[UInt<1>("h00")] <= _superpage_entries_3_data_0_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 248:34]
              superpage_entries[3].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 248:34]
            skip @[TLB.scala 246:89]
          skip @[TLB.scala 245:54]
        else : @[TLB.scala 250:17]
          node waddr = mux(r_sectored_hit, r_sectored_hit_addr, r_sectored_repl_addr) @[TLB.scala 252:22]
          node _T_7 = eq(waddr, UInt<1>("h00")) @[TLB.scala 253:75]
          when _T_7 : @[TLB.scala 253:82]
            node _T_8 = eq(r_sectored_hit, UInt<1>("h00")) @[TLB.scala 254:15]
            when _T_8 : @[TLB.scala 254:32]
              sectored_entries[UInt<1>("h00")][0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[1] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[2] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[3] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 254:32]
            sectored_entries[UInt<1>("h00")][0].tag <= r_refill_tag @[TLB.scala 118:14]
            sectored_entries[UInt<1>("h00")][0].level <= UInt<1>("h00") @[TLB.scala 119:16]
            node idx = bits(r_refill_tag, 1, 0) @[package.scala 154:13]
            sectored_entries[UInt<1>("h00")][0].valid[idx] <= UInt<1>("h01") @[TLB.scala 122:16]
            node sectored_entries_0_0_data_lo_lo_lo = cat(newEntry.c, newEntry.fragmented_superpage) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_lo_hi = cat(newEntry.paa, newEntry.eff) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_lo = cat(sectored_entries_0_0_data_lo_lo_hi, sectored_entries_0_0_data_lo_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi_lo = cat(newEntry.ppp, newEntry.pal) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi_hi = cat(newEntry.px, newEntry.pr) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo_hi = cat(sectored_entries_0_0_data_lo_hi_hi, sectored_entries_0_0_data_lo_hi_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_lo = cat(sectored_entries_0_0_data_lo_hi, sectored_entries_0_0_data_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo_lo = cat(newEntry.sr, newEntry.pw) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo_hi = cat(newEntry.sw, newEntry.sx) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_lo = cat(sectored_entries_0_0_data_hi_lo_hi, sectored_entries_0_0_data_hi_lo_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi_lo = cat(newEntry.g, newEntry.ae) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi_hi = cat(newEntry.ppn, newEntry.u) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi_hi = cat(sectored_entries_0_0_data_hi_hi_hi, sectored_entries_0_0_data_hi_hi_lo) @[TLB.scala 123:24]
            node sectored_entries_0_0_data_hi = cat(sectored_entries_0_0_data_hi_hi, sectored_entries_0_0_data_hi_lo) @[TLB.scala 123:24]
            node _sectored_entries_0_0_data_T = cat(sectored_entries_0_0_data_hi, sectored_entries_0_0_data_lo) @[TLB.scala 123:24]
            sectored_entries[UInt<1>("h00")][0].data[idx] <= _sectored_entries_0_0_data_T @[TLB.scala 123:15]
            when invalidate_refill : @[TLB.scala 256:34]
              sectored_entries[UInt<1>("h00")][0].valid[0] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[1] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[2] <= UInt<1>("h00") @[TLB.scala 126:46]
              sectored_entries[UInt<1>("h00")][0].valid[3] <= UInt<1>("h00") @[TLB.scala 126:46]
              skip @[TLB.scala 256:34]
            skip @[TLB.scala 253:82]
          skip @[TLB.scala 250:17]
      skip @[TLB.scala 220:20]
    node _entries_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _entries_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_1 : UInt<35>
    _entries_WIRE_1 is invalid
    _entries_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_entries_T]
    node _entries_T_1 = bits(_entries_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE.fragmented_superpage <= _entries_T_1 @[TLB.scala 86:77]
    node _entries_T_2 = bits(_entries_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE.c <= _entries_T_2 @[TLB.scala 86:77]
    node _entries_T_3 = bits(_entries_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE.eff <= _entries_T_3 @[TLB.scala 86:77]
    node _entries_T_4 = bits(_entries_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE.paa <= _entries_T_4 @[TLB.scala 86:77]
    node _entries_T_5 = bits(_entries_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE.pal <= _entries_T_5 @[TLB.scala 86:77]
    node _entries_T_6 = bits(_entries_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE.ppp <= _entries_T_6 @[TLB.scala 86:77]
    node _entries_T_7 = bits(_entries_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE.pr <= _entries_T_7 @[TLB.scala 86:77]
    node _entries_T_8 = bits(_entries_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE.px <= _entries_T_8 @[TLB.scala 86:77]
    node _entries_T_9 = bits(_entries_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE.pw <= _entries_T_9 @[TLB.scala 86:77]
    node _entries_T_10 = bits(_entries_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE.sr <= _entries_T_10 @[TLB.scala 86:77]
    node _entries_T_11 = bits(_entries_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE.sx <= _entries_T_11 @[TLB.scala 86:77]
    node _entries_T_12 = bits(_entries_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE.sw <= _entries_T_12 @[TLB.scala 86:77]
    node _entries_T_13 = bits(_entries_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE.ae <= _entries_T_13 @[TLB.scala 86:77]
    node _entries_T_14 = bits(_entries_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE.g <= _entries_T_14 @[TLB.scala 86:77]
    node _entries_T_15 = bits(_entries_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE.u <= _entries_T_15 @[TLB.scala 86:77]
    node _entries_T_16 = bits(_entries_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE.ppn <= _entries_T_16 @[TLB.scala 86:77]
    inst entries_barrier of OptimizationBarrier_43 @[package.scala 258:25]
    entries_barrier.io is invalid
    entries_barrier.clock <= clock
    entries_barrier.reset <= reset
    entries_barrier.io.x <- _entries_WIRE @[package.scala 266:18]
    wire _entries_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_3 : UInt<35>
    _entries_WIRE_3 is invalid
    _entries_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _entries_T_17 = bits(_entries_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_2.fragmented_superpage <= _entries_T_17 @[TLB.scala 86:77]
    node _entries_T_18 = bits(_entries_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_2.c <= _entries_T_18 @[TLB.scala 86:77]
    node _entries_T_19 = bits(_entries_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_2.eff <= _entries_T_19 @[TLB.scala 86:77]
    node _entries_T_20 = bits(_entries_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_2.paa <= _entries_T_20 @[TLB.scala 86:77]
    node _entries_T_21 = bits(_entries_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_2.pal <= _entries_T_21 @[TLB.scala 86:77]
    node _entries_T_22 = bits(_entries_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_2.ppp <= _entries_T_22 @[TLB.scala 86:77]
    node _entries_T_23 = bits(_entries_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_2.pr <= _entries_T_23 @[TLB.scala 86:77]
    node _entries_T_24 = bits(_entries_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_2.px <= _entries_T_24 @[TLB.scala 86:77]
    node _entries_T_25 = bits(_entries_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_2.pw <= _entries_T_25 @[TLB.scala 86:77]
    node _entries_T_26 = bits(_entries_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_2.sr <= _entries_T_26 @[TLB.scala 86:77]
    node _entries_T_27 = bits(_entries_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_2.sx <= _entries_T_27 @[TLB.scala 86:77]
    node _entries_T_28 = bits(_entries_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_2.sw <= _entries_T_28 @[TLB.scala 86:77]
    node _entries_T_29 = bits(_entries_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_2.ae <= _entries_T_29 @[TLB.scala 86:77]
    node _entries_T_30 = bits(_entries_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_2.g <= _entries_T_30 @[TLB.scala 86:77]
    node _entries_T_31 = bits(_entries_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_2.u <= _entries_T_31 @[TLB.scala 86:77]
    node _entries_T_32 = bits(_entries_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_2.ppn <= _entries_T_32 @[TLB.scala 86:77]
    inst entries_barrier_1 of OptimizationBarrier_44 @[package.scala 258:25]
    entries_barrier_1.io is invalid
    entries_barrier_1.clock <= clock
    entries_barrier_1.reset <= reset
    entries_barrier_1.io.x <- _entries_WIRE_2 @[package.scala 266:18]
    wire _entries_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_5 : UInt<35>
    _entries_WIRE_5 is invalid
    _entries_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _entries_T_33 = bits(_entries_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_4.fragmented_superpage <= _entries_T_33 @[TLB.scala 86:77]
    node _entries_T_34 = bits(_entries_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_4.c <= _entries_T_34 @[TLB.scala 86:77]
    node _entries_T_35 = bits(_entries_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_4.eff <= _entries_T_35 @[TLB.scala 86:77]
    node _entries_T_36 = bits(_entries_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_4.paa <= _entries_T_36 @[TLB.scala 86:77]
    node _entries_T_37 = bits(_entries_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_4.pal <= _entries_T_37 @[TLB.scala 86:77]
    node _entries_T_38 = bits(_entries_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_4.ppp <= _entries_T_38 @[TLB.scala 86:77]
    node _entries_T_39 = bits(_entries_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_4.pr <= _entries_T_39 @[TLB.scala 86:77]
    node _entries_T_40 = bits(_entries_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_4.px <= _entries_T_40 @[TLB.scala 86:77]
    node _entries_T_41 = bits(_entries_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_4.pw <= _entries_T_41 @[TLB.scala 86:77]
    node _entries_T_42 = bits(_entries_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_4.sr <= _entries_T_42 @[TLB.scala 86:77]
    node _entries_T_43 = bits(_entries_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_4.sx <= _entries_T_43 @[TLB.scala 86:77]
    node _entries_T_44 = bits(_entries_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_4.sw <= _entries_T_44 @[TLB.scala 86:77]
    node _entries_T_45 = bits(_entries_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_4.ae <= _entries_T_45 @[TLB.scala 86:77]
    node _entries_T_46 = bits(_entries_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_4.g <= _entries_T_46 @[TLB.scala 86:77]
    node _entries_T_47 = bits(_entries_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_4.u <= _entries_T_47 @[TLB.scala 86:77]
    node _entries_T_48 = bits(_entries_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_4.ppn <= _entries_T_48 @[TLB.scala 86:77]
    inst entries_barrier_2 of OptimizationBarrier_45 @[package.scala 258:25]
    entries_barrier_2.io is invalid
    entries_barrier_2.clock <= clock
    entries_barrier_2.reset <= reset
    entries_barrier_2.io.x <- _entries_WIRE_4 @[package.scala 266:18]
    wire _entries_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_7 : UInt<35>
    _entries_WIRE_7 is invalid
    _entries_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _entries_T_49 = bits(_entries_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_6.fragmented_superpage <= _entries_T_49 @[TLB.scala 86:77]
    node _entries_T_50 = bits(_entries_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_6.c <= _entries_T_50 @[TLB.scala 86:77]
    node _entries_T_51 = bits(_entries_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_6.eff <= _entries_T_51 @[TLB.scala 86:77]
    node _entries_T_52 = bits(_entries_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_6.paa <= _entries_T_52 @[TLB.scala 86:77]
    node _entries_T_53 = bits(_entries_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_6.pal <= _entries_T_53 @[TLB.scala 86:77]
    node _entries_T_54 = bits(_entries_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_6.ppp <= _entries_T_54 @[TLB.scala 86:77]
    node _entries_T_55 = bits(_entries_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_6.pr <= _entries_T_55 @[TLB.scala 86:77]
    node _entries_T_56 = bits(_entries_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_6.px <= _entries_T_56 @[TLB.scala 86:77]
    node _entries_T_57 = bits(_entries_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_6.pw <= _entries_T_57 @[TLB.scala 86:77]
    node _entries_T_58 = bits(_entries_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_6.sr <= _entries_T_58 @[TLB.scala 86:77]
    node _entries_T_59 = bits(_entries_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_6.sx <= _entries_T_59 @[TLB.scala 86:77]
    node _entries_T_60 = bits(_entries_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_6.sw <= _entries_T_60 @[TLB.scala 86:77]
    node _entries_T_61 = bits(_entries_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_6.ae <= _entries_T_61 @[TLB.scala 86:77]
    node _entries_T_62 = bits(_entries_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_6.g <= _entries_T_62 @[TLB.scala 86:77]
    node _entries_T_63 = bits(_entries_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_6.u <= _entries_T_63 @[TLB.scala 86:77]
    node _entries_T_64 = bits(_entries_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_6.ppn <= _entries_T_64 @[TLB.scala 86:77]
    inst entries_barrier_3 of OptimizationBarrier_46 @[package.scala 258:25]
    entries_barrier_3.io is invalid
    entries_barrier_3.clock <= clock
    entries_barrier_3.reset <= reset
    entries_barrier_3.io.x <- _entries_WIRE_6 @[package.scala 266:18]
    wire _entries_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_9 : UInt<35>
    _entries_WIRE_9 is invalid
    _entries_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _entries_T_65 = bits(_entries_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_8.fragmented_superpage <= _entries_T_65 @[TLB.scala 86:77]
    node _entries_T_66 = bits(_entries_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_8.c <= _entries_T_66 @[TLB.scala 86:77]
    node _entries_T_67 = bits(_entries_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_8.eff <= _entries_T_67 @[TLB.scala 86:77]
    node _entries_T_68 = bits(_entries_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_8.paa <= _entries_T_68 @[TLB.scala 86:77]
    node _entries_T_69 = bits(_entries_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_8.pal <= _entries_T_69 @[TLB.scala 86:77]
    node _entries_T_70 = bits(_entries_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_8.ppp <= _entries_T_70 @[TLB.scala 86:77]
    node _entries_T_71 = bits(_entries_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_8.pr <= _entries_T_71 @[TLB.scala 86:77]
    node _entries_T_72 = bits(_entries_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_8.px <= _entries_T_72 @[TLB.scala 86:77]
    node _entries_T_73 = bits(_entries_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_8.pw <= _entries_T_73 @[TLB.scala 86:77]
    node _entries_T_74 = bits(_entries_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_8.sr <= _entries_T_74 @[TLB.scala 86:77]
    node _entries_T_75 = bits(_entries_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_8.sx <= _entries_T_75 @[TLB.scala 86:77]
    node _entries_T_76 = bits(_entries_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_8.sw <= _entries_T_76 @[TLB.scala 86:77]
    node _entries_T_77 = bits(_entries_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_8.ae <= _entries_T_77 @[TLB.scala 86:77]
    node _entries_T_78 = bits(_entries_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_8.g <= _entries_T_78 @[TLB.scala 86:77]
    node _entries_T_79 = bits(_entries_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_8.u <= _entries_T_79 @[TLB.scala 86:77]
    node _entries_T_80 = bits(_entries_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_8.ppn <= _entries_T_80 @[TLB.scala 86:77]
    inst entries_barrier_4 of OptimizationBarrier_47 @[package.scala 258:25]
    entries_barrier_4.io is invalid
    entries_barrier_4.clock <= clock
    entries_barrier_4.reset <= reset
    entries_barrier_4.io.x <- _entries_WIRE_8 @[package.scala 266:18]
    wire _entries_WIRE_10 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _entries_WIRE_10 is invalid @[TLB.scala 86:77]
    wire _entries_WIRE_11 : UInt<35>
    _entries_WIRE_11 is invalid
    _entries_WIRE_11 <= special_entry.data[UInt<1>("h00")]
    node _entries_T_81 = bits(_entries_WIRE_11, 0, 0) @[TLB.scala 86:77]
    _entries_WIRE_10.fragmented_superpage <= _entries_T_81 @[TLB.scala 86:77]
    node _entries_T_82 = bits(_entries_WIRE_11, 1, 1) @[TLB.scala 86:77]
    _entries_WIRE_10.c <= _entries_T_82 @[TLB.scala 86:77]
    node _entries_T_83 = bits(_entries_WIRE_11, 2, 2) @[TLB.scala 86:77]
    _entries_WIRE_10.eff <= _entries_T_83 @[TLB.scala 86:77]
    node _entries_T_84 = bits(_entries_WIRE_11, 3, 3) @[TLB.scala 86:77]
    _entries_WIRE_10.paa <= _entries_T_84 @[TLB.scala 86:77]
    node _entries_T_85 = bits(_entries_WIRE_11, 4, 4) @[TLB.scala 86:77]
    _entries_WIRE_10.pal <= _entries_T_85 @[TLB.scala 86:77]
    node _entries_T_86 = bits(_entries_WIRE_11, 5, 5) @[TLB.scala 86:77]
    _entries_WIRE_10.ppp <= _entries_T_86 @[TLB.scala 86:77]
    node _entries_T_87 = bits(_entries_WIRE_11, 6, 6) @[TLB.scala 86:77]
    _entries_WIRE_10.pr <= _entries_T_87 @[TLB.scala 86:77]
    node _entries_T_88 = bits(_entries_WIRE_11, 7, 7) @[TLB.scala 86:77]
    _entries_WIRE_10.px <= _entries_T_88 @[TLB.scala 86:77]
    node _entries_T_89 = bits(_entries_WIRE_11, 8, 8) @[TLB.scala 86:77]
    _entries_WIRE_10.pw <= _entries_T_89 @[TLB.scala 86:77]
    node _entries_T_90 = bits(_entries_WIRE_11, 9, 9) @[TLB.scala 86:77]
    _entries_WIRE_10.sr <= _entries_T_90 @[TLB.scala 86:77]
    node _entries_T_91 = bits(_entries_WIRE_11, 10, 10) @[TLB.scala 86:77]
    _entries_WIRE_10.sx <= _entries_T_91 @[TLB.scala 86:77]
    node _entries_T_92 = bits(_entries_WIRE_11, 11, 11) @[TLB.scala 86:77]
    _entries_WIRE_10.sw <= _entries_T_92 @[TLB.scala 86:77]
    node _entries_T_93 = bits(_entries_WIRE_11, 12, 12) @[TLB.scala 86:77]
    _entries_WIRE_10.ae <= _entries_T_93 @[TLB.scala 86:77]
    node _entries_T_94 = bits(_entries_WIRE_11, 13, 13) @[TLB.scala 86:77]
    _entries_WIRE_10.g <= _entries_T_94 @[TLB.scala 86:77]
    node _entries_T_95 = bits(_entries_WIRE_11, 14, 14) @[TLB.scala 86:77]
    _entries_WIRE_10.u <= _entries_T_95 @[TLB.scala 86:77]
    node _entries_T_96 = bits(_entries_WIRE_11, 34, 15) @[TLB.scala 86:77]
    _entries_WIRE_10.ppn <= _entries_T_96 @[TLB.scala 86:77]
    inst entries_barrier_5 of OptimizationBarrier_48 @[package.scala 258:25]
    entries_barrier_5.io is invalid
    entries_barrier_5.clock <= clock
    entries_barrier_5.reset <= reset
    entries_barrier_5.io.x <- _entries_WIRE_10 @[package.scala 266:18]
    node _normal_entries_T = bits(vpn, 1, 0) @[package.scala 154:13]
    wire _normal_entries_WIRE : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_1 : UInt<35>
    _normal_entries_WIRE_1 is invalid
    _normal_entries_WIRE_1 <= sectored_entries[UInt<1>("h00")][0].data[_normal_entries_T]
    node _normal_entries_T_1 = bits(_normal_entries_WIRE_1, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE.fragmented_superpage <= _normal_entries_T_1 @[TLB.scala 86:77]
    node _normal_entries_T_2 = bits(_normal_entries_WIRE_1, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE.c <= _normal_entries_T_2 @[TLB.scala 86:77]
    node _normal_entries_T_3 = bits(_normal_entries_WIRE_1, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE.eff <= _normal_entries_T_3 @[TLB.scala 86:77]
    node _normal_entries_T_4 = bits(_normal_entries_WIRE_1, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE.paa <= _normal_entries_T_4 @[TLB.scala 86:77]
    node _normal_entries_T_5 = bits(_normal_entries_WIRE_1, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE.pal <= _normal_entries_T_5 @[TLB.scala 86:77]
    node _normal_entries_T_6 = bits(_normal_entries_WIRE_1, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE.ppp <= _normal_entries_T_6 @[TLB.scala 86:77]
    node _normal_entries_T_7 = bits(_normal_entries_WIRE_1, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE.pr <= _normal_entries_T_7 @[TLB.scala 86:77]
    node _normal_entries_T_8 = bits(_normal_entries_WIRE_1, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE.px <= _normal_entries_T_8 @[TLB.scala 86:77]
    node _normal_entries_T_9 = bits(_normal_entries_WIRE_1, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE.pw <= _normal_entries_T_9 @[TLB.scala 86:77]
    node _normal_entries_T_10 = bits(_normal_entries_WIRE_1, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE.sr <= _normal_entries_T_10 @[TLB.scala 86:77]
    node _normal_entries_T_11 = bits(_normal_entries_WIRE_1, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE.sx <= _normal_entries_T_11 @[TLB.scala 86:77]
    node _normal_entries_T_12 = bits(_normal_entries_WIRE_1, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE.sw <= _normal_entries_T_12 @[TLB.scala 86:77]
    node _normal_entries_T_13 = bits(_normal_entries_WIRE_1, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE.ae <= _normal_entries_T_13 @[TLB.scala 86:77]
    node _normal_entries_T_14 = bits(_normal_entries_WIRE_1, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE.g <= _normal_entries_T_14 @[TLB.scala 86:77]
    node _normal_entries_T_15 = bits(_normal_entries_WIRE_1, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE.u <= _normal_entries_T_15 @[TLB.scala 86:77]
    node _normal_entries_T_16 = bits(_normal_entries_WIRE_1, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE.ppn <= _normal_entries_T_16 @[TLB.scala 86:77]
    inst normal_entries_barrier of OptimizationBarrier_49 @[package.scala 258:25]
    normal_entries_barrier.io is invalid
    normal_entries_barrier.clock <= clock
    normal_entries_barrier.reset <= reset
    normal_entries_barrier.io.x <- _normal_entries_WIRE @[package.scala 266:18]
    wire _normal_entries_WIRE_2 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_2 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_3 : UInt<35>
    _normal_entries_WIRE_3 is invalid
    _normal_entries_WIRE_3 <= superpage_entries[0].data[UInt<1>("h00")]
    node _normal_entries_T_17 = bits(_normal_entries_WIRE_3, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.fragmented_superpage <= _normal_entries_T_17 @[TLB.scala 86:77]
    node _normal_entries_T_18 = bits(_normal_entries_WIRE_3, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.c <= _normal_entries_T_18 @[TLB.scala 86:77]
    node _normal_entries_T_19 = bits(_normal_entries_WIRE_3, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.eff <= _normal_entries_T_19 @[TLB.scala 86:77]
    node _normal_entries_T_20 = bits(_normal_entries_WIRE_3, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.paa <= _normal_entries_T_20 @[TLB.scala 86:77]
    node _normal_entries_T_21 = bits(_normal_entries_WIRE_3, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pal <= _normal_entries_T_21 @[TLB.scala 86:77]
    node _normal_entries_T_22 = bits(_normal_entries_WIRE_3, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ppp <= _normal_entries_T_22 @[TLB.scala 86:77]
    node _normal_entries_T_23 = bits(_normal_entries_WIRE_3, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pr <= _normal_entries_T_23 @[TLB.scala 86:77]
    node _normal_entries_T_24 = bits(_normal_entries_WIRE_3, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.px <= _normal_entries_T_24 @[TLB.scala 86:77]
    node _normal_entries_T_25 = bits(_normal_entries_WIRE_3, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.pw <= _normal_entries_T_25 @[TLB.scala 86:77]
    node _normal_entries_T_26 = bits(_normal_entries_WIRE_3, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sr <= _normal_entries_T_26 @[TLB.scala 86:77]
    node _normal_entries_T_27 = bits(_normal_entries_WIRE_3, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sx <= _normal_entries_T_27 @[TLB.scala 86:77]
    node _normal_entries_T_28 = bits(_normal_entries_WIRE_3, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.sw <= _normal_entries_T_28 @[TLB.scala 86:77]
    node _normal_entries_T_29 = bits(_normal_entries_WIRE_3, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ae <= _normal_entries_T_29 @[TLB.scala 86:77]
    node _normal_entries_T_30 = bits(_normal_entries_WIRE_3, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.g <= _normal_entries_T_30 @[TLB.scala 86:77]
    node _normal_entries_T_31 = bits(_normal_entries_WIRE_3, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.u <= _normal_entries_T_31 @[TLB.scala 86:77]
    node _normal_entries_T_32 = bits(_normal_entries_WIRE_3, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_2.ppn <= _normal_entries_T_32 @[TLB.scala 86:77]
    inst normal_entries_barrier_1 of OptimizationBarrier_50 @[package.scala 258:25]
    normal_entries_barrier_1.io is invalid
    normal_entries_barrier_1.clock <= clock
    normal_entries_barrier_1.reset <= reset
    normal_entries_barrier_1.io.x <- _normal_entries_WIRE_2 @[package.scala 266:18]
    wire _normal_entries_WIRE_4 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_4 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_5 : UInt<35>
    _normal_entries_WIRE_5 is invalid
    _normal_entries_WIRE_5 <= superpage_entries[1].data[UInt<1>("h00")]
    node _normal_entries_T_33 = bits(_normal_entries_WIRE_5, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.fragmented_superpage <= _normal_entries_T_33 @[TLB.scala 86:77]
    node _normal_entries_T_34 = bits(_normal_entries_WIRE_5, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.c <= _normal_entries_T_34 @[TLB.scala 86:77]
    node _normal_entries_T_35 = bits(_normal_entries_WIRE_5, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.eff <= _normal_entries_T_35 @[TLB.scala 86:77]
    node _normal_entries_T_36 = bits(_normal_entries_WIRE_5, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.paa <= _normal_entries_T_36 @[TLB.scala 86:77]
    node _normal_entries_T_37 = bits(_normal_entries_WIRE_5, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pal <= _normal_entries_T_37 @[TLB.scala 86:77]
    node _normal_entries_T_38 = bits(_normal_entries_WIRE_5, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ppp <= _normal_entries_T_38 @[TLB.scala 86:77]
    node _normal_entries_T_39 = bits(_normal_entries_WIRE_5, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pr <= _normal_entries_T_39 @[TLB.scala 86:77]
    node _normal_entries_T_40 = bits(_normal_entries_WIRE_5, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.px <= _normal_entries_T_40 @[TLB.scala 86:77]
    node _normal_entries_T_41 = bits(_normal_entries_WIRE_5, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.pw <= _normal_entries_T_41 @[TLB.scala 86:77]
    node _normal_entries_T_42 = bits(_normal_entries_WIRE_5, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sr <= _normal_entries_T_42 @[TLB.scala 86:77]
    node _normal_entries_T_43 = bits(_normal_entries_WIRE_5, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sx <= _normal_entries_T_43 @[TLB.scala 86:77]
    node _normal_entries_T_44 = bits(_normal_entries_WIRE_5, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.sw <= _normal_entries_T_44 @[TLB.scala 86:77]
    node _normal_entries_T_45 = bits(_normal_entries_WIRE_5, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ae <= _normal_entries_T_45 @[TLB.scala 86:77]
    node _normal_entries_T_46 = bits(_normal_entries_WIRE_5, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.g <= _normal_entries_T_46 @[TLB.scala 86:77]
    node _normal_entries_T_47 = bits(_normal_entries_WIRE_5, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.u <= _normal_entries_T_47 @[TLB.scala 86:77]
    node _normal_entries_T_48 = bits(_normal_entries_WIRE_5, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_4.ppn <= _normal_entries_T_48 @[TLB.scala 86:77]
    inst normal_entries_barrier_2 of OptimizationBarrier_51 @[package.scala 258:25]
    normal_entries_barrier_2.io is invalid
    normal_entries_barrier_2.clock <= clock
    normal_entries_barrier_2.reset <= reset
    normal_entries_barrier_2.io.x <- _normal_entries_WIRE_4 @[package.scala 266:18]
    wire _normal_entries_WIRE_6 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_6 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_7 : UInt<35>
    _normal_entries_WIRE_7 is invalid
    _normal_entries_WIRE_7 <= superpage_entries[2].data[UInt<1>("h00")]
    node _normal_entries_T_49 = bits(_normal_entries_WIRE_7, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.fragmented_superpage <= _normal_entries_T_49 @[TLB.scala 86:77]
    node _normal_entries_T_50 = bits(_normal_entries_WIRE_7, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.c <= _normal_entries_T_50 @[TLB.scala 86:77]
    node _normal_entries_T_51 = bits(_normal_entries_WIRE_7, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.eff <= _normal_entries_T_51 @[TLB.scala 86:77]
    node _normal_entries_T_52 = bits(_normal_entries_WIRE_7, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.paa <= _normal_entries_T_52 @[TLB.scala 86:77]
    node _normal_entries_T_53 = bits(_normal_entries_WIRE_7, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pal <= _normal_entries_T_53 @[TLB.scala 86:77]
    node _normal_entries_T_54 = bits(_normal_entries_WIRE_7, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ppp <= _normal_entries_T_54 @[TLB.scala 86:77]
    node _normal_entries_T_55 = bits(_normal_entries_WIRE_7, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pr <= _normal_entries_T_55 @[TLB.scala 86:77]
    node _normal_entries_T_56 = bits(_normal_entries_WIRE_7, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.px <= _normal_entries_T_56 @[TLB.scala 86:77]
    node _normal_entries_T_57 = bits(_normal_entries_WIRE_7, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.pw <= _normal_entries_T_57 @[TLB.scala 86:77]
    node _normal_entries_T_58 = bits(_normal_entries_WIRE_7, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sr <= _normal_entries_T_58 @[TLB.scala 86:77]
    node _normal_entries_T_59 = bits(_normal_entries_WIRE_7, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sx <= _normal_entries_T_59 @[TLB.scala 86:77]
    node _normal_entries_T_60 = bits(_normal_entries_WIRE_7, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.sw <= _normal_entries_T_60 @[TLB.scala 86:77]
    node _normal_entries_T_61 = bits(_normal_entries_WIRE_7, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ae <= _normal_entries_T_61 @[TLB.scala 86:77]
    node _normal_entries_T_62 = bits(_normal_entries_WIRE_7, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.g <= _normal_entries_T_62 @[TLB.scala 86:77]
    node _normal_entries_T_63 = bits(_normal_entries_WIRE_7, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.u <= _normal_entries_T_63 @[TLB.scala 86:77]
    node _normal_entries_T_64 = bits(_normal_entries_WIRE_7, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_6.ppn <= _normal_entries_T_64 @[TLB.scala 86:77]
    inst normal_entries_barrier_3 of OptimizationBarrier_52 @[package.scala 258:25]
    normal_entries_barrier_3.io is invalid
    normal_entries_barrier_3.clock <= clock
    normal_entries_barrier_3.reset <= reset
    normal_entries_barrier_3.io.x <- _normal_entries_WIRE_6 @[package.scala 266:18]
    wire _normal_entries_WIRE_8 : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>} @[TLB.scala 86:77]
    _normal_entries_WIRE_8 is invalid @[TLB.scala 86:77]
    wire _normal_entries_WIRE_9 : UInt<35>
    _normal_entries_WIRE_9 is invalid
    _normal_entries_WIRE_9 <= superpage_entries[3].data[UInt<1>("h00")]
    node _normal_entries_T_65 = bits(_normal_entries_WIRE_9, 0, 0) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.fragmented_superpage <= _normal_entries_T_65 @[TLB.scala 86:77]
    node _normal_entries_T_66 = bits(_normal_entries_WIRE_9, 1, 1) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.c <= _normal_entries_T_66 @[TLB.scala 86:77]
    node _normal_entries_T_67 = bits(_normal_entries_WIRE_9, 2, 2) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.eff <= _normal_entries_T_67 @[TLB.scala 86:77]
    node _normal_entries_T_68 = bits(_normal_entries_WIRE_9, 3, 3) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.paa <= _normal_entries_T_68 @[TLB.scala 86:77]
    node _normal_entries_T_69 = bits(_normal_entries_WIRE_9, 4, 4) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pal <= _normal_entries_T_69 @[TLB.scala 86:77]
    node _normal_entries_T_70 = bits(_normal_entries_WIRE_9, 5, 5) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ppp <= _normal_entries_T_70 @[TLB.scala 86:77]
    node _normal_entries_T_71 = bits(_normal_entries_WIRE_9, 6, 6) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pr <= _normal_entries_T_71 @[TLB.scala 86:77]
    node _normal_entries_T_72 = bits(_normal_entries_WIRE_9, 7, 7) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.px <= _normal_entries_T_72 @[TLB.scala 86:77]
    node _normal_entries_T_73 = bits(_normal_entries_WIRE_9, 8, 8) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.pw <= _normal_entries_T_73 @[TLB.scala 86:77]
    node _normal_entries_T_74 = bits(_normal_entries_WIRE_9, 9, 9) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sr <= _normal_entries_T_74 @[TLB.scala 86:77]
    node _normal_entries_T_75 = bits(_normal_entries_WIRE_9, 10, 10) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sx <= _normal_entries_T_75 @[TLB.scala 86:77]
    node _normal_entries_T_76 = bits(_normal_entries_WIRE_9, 11, 11) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.sw <= _normal_entries_T_76 @[TLB.scala 86:77]
    node _normal_entries_T_77 = bits(_normal_entries_WIRE_9, 12, 12) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ae <= _normal_entries_T_77 @[TLB.scala 86:77]
    node _normal_entries_T_78 = bits(_normal_entries_WIRE_9, 13, 13) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.g <= _normal_entries_T_78 @[TLB.scala 86:77]
    node _normal_entries_T_79 = bits(_normal_entries_WIRE_9, 14, 14) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.u <= _normal_entries_T_79 @[TLB.scala 86:77]
    node _normal_entries_T_80 = bits(_normal_entries_WIRE_9, 34, 15) @[TLB.scala 86:77]
    _normal_entries_WIRE_8.ppn <= _normal_entries_T_80 @[TLB.scala 86:77]
    inst normal_entries_barrier_4 of OptimizationBarrier_53 @[package.scala 258:25]
    normal_entries_barrier_4.io is invalid
    normal_entries_barrier_4.clock <= clock
    normal_entries_barrier_4.reset <= reset
    normal_entries_barrier_4.io.x <- _normal_entries_WIRE_8 @[package.scala 266:18]
    node ptw_ae_array_lo_hi = cat(entries_barrier_2.io.y.ae, entries_barrier_1.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo = cat(ptw_ae_array_lo_hi, entries_barrier.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi = cat(entries_barrier_5.io.y.ae, entries_barrier_4.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi = cat(ptw_ae_array_hi_hi, entries_barrier_3.io.y.ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_1 = cat(ptw_ae_array_hi, ptw_ae_array_lo) @[Cat.scala 30:58]
    node ptw_ae_array = cat(UInt<1>("h00"), ptw_ae_array_lo_1) @[Cat.scala 30:58]
    node _priv_rw_ok_T = eq(priv_s, UInt<1>("h00")) @[TLB.scala 265:24]
    node _priv_rw_ok_T_1 = or(_priv_rw_ok_T, io.ptw.status.sum) @[TLB.scala 265:32]
    node priv_rw_ok_lo_hi = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_lo = cat(priv_rw_ok_lo_hi, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi = cat(priv_rw_ok_hi_hi, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_rw_ok_T_2 = cat(priv_rw_ok_hi, priv_rw_ok_lo) @[Cat.scala 30:58]
    node _priv_rw_ok_T_3 = mux(_priv_rw_ok_T_1, _priv_rw_ok_T_2, UInt<1>("h00")) @[TLB.scala 265:23]
    node priv_rw_ok_lo_hi_1 = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_1 = cat(priv_rw_ok_lo_hi_1, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi_1 = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_1 = cat(priv_rw_ok_hi_hi_1, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_rw_ok_T_4 = cat(priv_rw_ok_hi_1, priv_rw_ok_lo_1) @[Cat.scala 30:58]
    node _priv_rw_ok_T_5 = not(_priv_rw_ok_T_4) @[TLB.scala 265:98]
    node _priv_rw_ok_T_6 = mux(priv_s, _priv_rw_ok_T_5, UInt<1>("h00")) @[TLB.scala 265:89]
    node priv_rw_ok = or(_priv_rw_ok_T_3, _priv_rw_ok_T_6) @[TLB.scala 265:84]
    node priv_x_ok_lo_hi = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_lo = cat(priv_x_ok_lo_hi, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_hi = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi = cat(priv_x_ok_hi_hi, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_x_ok_T = cat(priv_x_ok_hi, priv_x_ok_lo) @[Cat.scala 30:58]
    node _priv_x_ok_T_1 = not(_priv_x_ok_T) @[TLB.scala 266:31]
    node priv_x_ok_lo_hi_1 = cat(entries_barrier_2.io.y.u, entries_barrier_1.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_lo_1 = cat(priv_x_ok_lo_hi_1, entries_barrier.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_hi_1 = cat(entries_barrier_5.io.y.u, entries_barrier_4.io.y.u) @[Cat.scala 30:58]
    node priv_x_ok_hi_1 = cat(priv_x_ok_hi_hi_1, entries_barrier_3.io.y.u) @[Cat.scala 30:58]
    node _priv_x_ok_T_2 = cat(priv_x_ok_hi_1, priv_x_ok_lo_1) @[Cat.scala 30:58]
    node priv_x_ok = mux(priv_s, _priv_x_ok_T_1, _priv_x_ok_T_2) @[TLB.scala 266:22]
    node r_array_lo_hi = cat(entries_barrier_2.io.y.sr, entries_barrier_1.io.y.sr) @[Cat.scala 30:58]
    node r_array_lo = cat(r_array_lo_hi, entries_barrier.io.y.sr) @[Cat.scala 30:58]
    node r_array_hi_hi = cat(entries_barrier_5.io.y.sr, entries_barrier_4.io.y.sr) @[Cat.scala 30:58]
    node r_array_hi = cat(r_array_hi_hi, entries_barrier_3.io.y.sr) @[Cat.scala 30:58]
    node _r_array_T = cat(r_array_hi, r_array_lo) @[Cat.scala 30:58]
    node r_array_lo_hi_1 = cat(entries_barrier_2.io.y.sx, entries_barrier_1.io.y.sx) @[Cat.scala 30:58]
    node r_array_lo_1 = cat(r_array_lo_hi_1, entries_barrier.io.y.sx) @[Cat.scala 30:58]
    node r_array_hi_hi_1 = cat(entries_barrier_5.io.y.sx, entries_barrier_4.io.y.sx) @[Cat.scala 30:58]
    node r_array_hi_1 = cat(r_array_hi_hi_1, entries_barrier_3.io.y.sx) @[Cat.scala 30:58]
    node _r_array_T_1 = cat(r_array_hi_1, r_array_lo_1) @[Cat.scala 30:58]
    node _r_array_T_2 = mux(io.ptw.status.mxr, _r_array_T_1, UInt<1>("h00")) @[TLB.scala 267:73]
    node _r_array_T_3 = or(_r_array_T, _r_array_T_2) @[TLB.scala 267:68]
    node r_array_lo_2 = and(priv_rw_ok, _r_array_T_3) @[TLB.scala 267:40]
    node r_array = cat(UInt<1>("h01"), r_array_lo_2) @[Cat.scala 30:58]
    node w_array_lo_hi = cat(entries_barrier_2.io.y.sw, entries_barrier_1.io.y.sw) @[Cat.scala 30:58]
    node w_array_lo = cat(w_array_lo_hi, entries_barrier.io.y.sw) @[Cat.scala 30:58]
    node w_array_hi_hi = cat(entries_barrier_5.io.y.sw, entries_barrier_4.io.y.sw) @[Cat.scala 30:58]
    node w_array_hi = cat(w_array_hi_hi, entries_barrier_3.io.y.sw) @[Cat.scala 30:58]
    node _w_array_T = cat(w_array_hi, w_array_lo) @[Cat.scala 30:58]
    node w_array_lo_1 = and(priv_rw_ok, _w_array_T) @[TLB.scala 268:40]
    node w_array = cat(UInt<1>("h01"), w_array_lo_1) @[Cat.scala 30:58]
    node x_array_lo_hi = cat(entries_barrier_2.io.y.sx, entries_barrier_1.io.y.sx) @[Cat.scala 30:58]
    node x_array_lo = cat(x_array_lo_hi, entries_barrier.io.y.sx) @[Cat.scala 30:58]
    node x_array_hi_hi = cat(entries_barrier_5.io.y.sx, entries_barrier_4.io.y.sx) @[Cat.scala 30:58]
    node x_array_hi = cat(x_array_hi_hi, entries_barrier_3.io.y.sx) @[Cat.scala 30:58]
    node _x_array_T = cat(x_array_hi, x_array_lo) @[Cat.scala 30:58]
    node x_array_lo_1 = and(priv_x_ok, _x_array_T) @[TLB.scala 269:39]
    node x_array = cat(UInt<1>("h01"), x_array_lo_1) @[Cat.scala 30:58]
    node _pr_array_T = bits(prot_r, 0, 0) @[Bitwise.scala 72:15]
    node pr_array_hi = mux(_pr_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pr_array_lo = cat(normal_entries_barrier_1.io.y.pr, normal_entries_barrier.io.y.pr) @[Cat.scala 30:58]
    node pr_array_hi_hi = cat(normal_entries_barrier_4.io.y.pr, normal_entries_barrier_3.io.y.pr) @[Cat.scala 30:58]
    node pr_array_hi_1 = cat(pr_array_hi_hi, normal_entries_barrier_2.io.y.pr) @[Cat.scala 30:58]
    node pr_array_lo_1 = cat(pr_array_hi_1, pr_array_lo) @[Cat.scala 30:58]
    node _pr_array_T_1 = cat(pr_array_hi, pr_array_lo_1) @[Cat.scala 30:58]
    node _pr_array_T_2 = not(ptw_ae_array) @[TLB.scala 270:89]
    node pr_array = and(_pr_array_T_1, _pr_array_T_2) @[TLB.scala 270:87]
    node _pw_array_T = bits(prot_w, 0, 0) @[Bitwise.scala 72:15]
    node pw_array_hi = mux(_pw_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pw_array_lo = cat(normal_entries_barrier_1.io.y.pw, normal_entries_barrier.io.y.pw) @[Cat.scala 30:58]
    node pw_array_hi_hi = cat(normal_entries_barrier_4.io.y.pw, normal_entries_barrier_3.io.y.pw) @[Cat.scala 30:58]
    node pw_array_hi_1 = cat(pw_array_hi_hi, normal_entries_barrier_2.io.y.pw) @[Cat.scala 30:58]
    node pw_array_lo_1 = cat(pw_array_hi_1, pw_array_lo) @[Cat.scala 30:58]
    node _pw_array_T_1 = cat(pw_array_hi, pw_array_lo_1) @[Cat.scala 30:58]
    node _pw_array_T_2 = not(ptw_ae_array) @[TLB.scala 271:89]
    node pw_array = and(_pw_array_T_1, _pw_array_T_2) @[TLB.scala 271:87]
    node _px_array_T = bits(prot_x, 0, 0) @[Bitwise.scala 72:15]
    node px_array_hi = mux(_px_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node px_array_lo = cat(normal_entries_barrier_1.io.y.px, normal_entries_barrier.io.y.px) @[Cat.scala 30:58]
    node px_array_hi_hi = cat(normal_entries_barrier_4.io.y.px, normal_entries_barrier_3.io.y.px) @[Cat.scala 30:58]
    node px_array_hi_1 = cat(px_array_hi_hi, normal_entries_barrier_2.io.y.px) @[Cat.scala 30:58]
    node px_array_lo_1 = cat(px_array_hi_1, px_array_lo) @[Cat.scala 30:58]
    node _px_array_T_1 = cat(px_array_hi, px_array_lo_1) @[Cat.scala 30:58]
    node _px_array_T_2 = not(ptw_ae_array) @[TLB.scala 272:89]
    node px_array = and(_px_array_T_1, _px_array_T_2) @[TLB.scala 272:87]
    node _eff_array_T = bits(prot_eff, 0, 0) @[Bitwise.scala 72:15]
    node eff_array_hi = mux(_eff_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node eff_array_lo = cat(normal_entries_barrier_1.io.y.eff, normal_entries_barrier.io.y.eff) @[Cat.scala 30:58]
    node eff_array_hi_hi = cat(normal_entries_barrier_4.io.y.eff, normal_entries_barrier_3.io.y.eff) @[Cat.scala 30:58]
    node eff_array_hi_1 = cat(eff_array_hi_hi, normal_entries_barrier_2.io.y.eff) @[Cat.scala 30:58]
    node eff_array_lo_1 = cat(eff_array_hi_1, eff_array_lo) @[Cat.scala 30:58]
    node eff_array = cat(eff_array_hi, eff_array_lo_1) @[Cat.scala 30:58]
    node _c_array_T = bits(cacheable, 0, 0) @[Bitwise.scala 72:15]
    node c_array_hi = mux(_c_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node c_array_lo = cat(normal_entries_barrier_1.io.y.c, normal_entries_barrier.io.y.c) @[Cat.scala 30:58]
    node c_array_hi_hi = cat(normal_entries_barrier_4.io.y.c, normal_entries_barrier_3.io.y.c) @[Cat.scala 30:58]
    node c_array_hi_1 = cat(c_array_hi_hi, normal_entries_barrier_2.io.y.c) @[Cat.scala 30:58]
    node c_array_lo_1 = cat(c_array_hi_1, c_array_lo) @[Cat.scala 30:58]
    node c_array = cat(c_array_hi, c_array_lo_1) @[Cat.scala 30:58]
    node _ppp_array_T = bits(prot_pp, 0, 0) @[Bitwise.scala 72:15]
    node ppp_array_hi = mux(_ppp_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node ppp_array_lo = cat(normal_entries_barrier_1.io.y.ppp, normal_entries_barrier.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_hi_hi = cat(normal_entries_barrier_4.io.y.ppp, normal_entries_barrier_3.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_hi_1 = cat(ppp_array_hi_hi, normal_entries_barrier_2.io.y.ppp) @[Cat.scala 30:58]
    node ppp_array_lo_1 = cat(ppp_array_hi_1, ppp_array_lo) @[Cat.scala 30:58]
    node ppp_array = cat(ppp_array_hi, ppp_array_lo_1) @[Cat.scala 30:58]
    node _paa_array_T = bits(prot_aa, 0, 0) @[Bitwise.scala 72:15]
    node paa_array_hi = mux(_paa_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node paa_array_lo = cat(normal_entries_barrier_1.io.y.paa, normal_entries_barrier.io.y.paa) @[Cat.scala 30:58]
    node paa_array_hi_hi = cat(normal_entries_barrier_4.io.y.paa, normal_entries_barrier_3.io.y.paa) @[Cat.scala 30:58]
    node paa_array_hi_1 = cat(paa_array_hi_hi, normal_entries_barrier_2.io.y.paa) @[Cat.scala 30:58]
    node paa_array_lo_1 = cat(paa_array_hi_1, paa_array_lo) @[Cat.scala 30:58]
    node paa_array = cat(paa_array_hi, paa_array_lo_1) @[Cat.scala 30:58]
    node _pal_array_T = bits(prot_al, 0, 0) @[Bitwise.scala 72:15]
    node pal_array_hi = mux(_pal_array_T, UInt<2>("h03"), UInt<2>("h00")) @[Bitwise.scala 72:12]
    node pal_array_lo = cat(normal_entries_barrier_1.io.y.pal, normal_entries_barrier.io.y.pal) @[Cat.scala 30:58]
    node pal_array_hi_hi = cat(normal_entries_barrier_4.io.y.pal, normal_entries_barrier_3.io.y.pal) @[Cat.scala 30:58]
    node pal_array_hi_1 = cat(pal_array_hi_hi, normal_entries_barrier_2.io.y.pal) @[Cat.scala 30:58]
    node pal_array_lo_1 = cat(pal_array_hi_1, pal_array_lo) @[Cat.scala 30:58]
    node pal_array = cat(pal_array_hi, pal_array_lo_1) @[Cat.scala 30:58]
    node ppp_array_if_cached = or(ppp_array, c_array) @[TLB.scala 278:39]
    node _paa_array_if_cached_T = mux(UInt<1>("h01"), c_array, UInt<1>("h00")) @[TLB.scala 279:44]
    node paa_array_if_cached = or(paa_array, _paa_array_if_cached_T) @[TLB.scala 279:39]
    node _pal_array_if_cached_T = mux(UInt<1>("h01"), c_array, UInt<1>("h00")) @[TLB.scala 280:44]
    node pal_array_if_cached = or(pal_array, _pal_array_if_cached_T) @[TLB.scala 280:39]
    node _prefetchable_array_T = and(cacheable, homogeneous) @[TLB.scala 281:43]
    node prefetchable_array_hi = shl(_prefetchable_array_T, 1) @[TLB.scala 281:59]
    node prefetchable_array_lo = cat(normal_entries_barrier_1.io.y.c, normal_entries_barrier.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_hi_hi = cat(normal_entries_barrier_4.io.y.c, normal_entries_barrier_3.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_hi_1 = cat(prefetchable_array_hi_hi, normal_entries_barrier_2.io.y.c) @[Cat.scala 30:58]
    node prefetchable_array_lo_1 = cat(prefetchable_array_hi_1, prefetchable_array_lo) @[Cat.scala 30:58]
    node prefetchable_array = cat(prefetchable_array_hi, prefetchable_array_lo_1) @[Cat.scala 30:58]
    node _misaligned_T = dshl(UInt<1>("h01"), io.req.bits.size) @[OneHot.scala 58:35]
    node _misaligned_T_1 = sub(_misaligned_T, UInt<1>("h01")) @[TLB.scala 283:69]
    node _misaligned_T_2 = tail(_misaligned_T_1, 1) @[TLB.scala 283:69]
    node _misaligned_T_3 = and(io.req.bits.vaddr, _misaligned_T_2) @[TLB.scala 283:39]
    node misaligned = orr(_misaligned_T_3) @[TLB.scala 283:75]
    node _cmd_lrsc_T = eq(io.req.bits.cmd, UInt<3>("h06")) @[package.scala 15:47]
    node _cmd_lrsc_T_1 = eq(io.req.bits.cmd, UInt<3>("h07")) @[package.scala 15:47]
    node _cmd_lrsc_T_2 = or(_cmd_lrsc_T, _cmd_lrsc_T_1) @[package.scala 72:59]
    node cmd_lrsc = and(UInt<1>("h01"), _cmd_lrsc_T_2) @[TLB.scala 294:37]
    node _cmd_amo_logical_T = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_amo_logical_T_1 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_amo_logical_T_2 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_amo_logical_T_3 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_amo_logical_T_4 = or(_cmd_amo_logical_T, _cmd_amo_logical_T_1) @[package.scala 72:59]
    node _cmd_amo_logical_T_5 = or(_cmd_amo_logical_T_4, _cmd_amo_logical_T_2) @[package.scala 72:59]
    node _cmd_amo_logical_T_6 = or(_cmd_amo_logical_T_5, _cmd_amo_logical_T_3) @[package.scala 72:59]
    node cmd_amo_logical = and(UInt<1>("h01"), _cmd_amo_logical_T_6) @[TLB.scala 295:44]
    node _cmd_amo_arithmetic_T = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_1 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_2 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_3 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_4 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_5 = or(_cmd_amo_arithmetic_T, _cmd_amo_arithmetic_T_1) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_6 = or(_cmd_amo_arithmetic_T_5, _cmd_amo_arithmetic_T_2) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_7 = or(_cmd_amo_arithmetic_T_6, _cmd_amo_arithmetic_T_3) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_8 = or(_cmd_amo_arithmetic_T_7, _cmd_amo_arithmetic_T_4) @[package.scala 72:59]
    node cmd_amo_arithmetic = and(UInt<1>("h01"), _cmd_amo_arithmetic_T_8) @[TLB.scala 296:47]
    node cmd_put_partial = eq(io.req.bits.cmd, UInt<5>("h011")) @[TLB.scala 297:41]
    node _cmd_read_T = eq(io.req.bits.cmd, UInt<1>("h00")) @[Consts.scala 81:31]
    node _cmd_read_T_1 = eq(io.req.bits.cmd, UInt<3>("h06")) @[Consts.scala 81:48]
    node _cmd_read_T_2 = or(_cmd_read_T, _cmd_read_T_1) @[Consts.scala 81:41]
    node _cmd_read_T_3 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 81:65]
    node _cmd_read_T_4 = or(_cmd_read_T_2, _cmd_read_T_3) @[Consts.scala 81:58]
    node _cmd_read_T_5 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_read_T_6 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_read_T_7 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_read_T_8 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_read_T_9 = or(_cmd_read_T_5, _cmd_read_T_6) @[package.scala 72:59]
    node _cmd_read_T_10 = or(_cmd_read_T_9, _cmd_read_T_7) @[package.scala 72:59]
    node _cmd_read_T_11 = or(_cmd_read_T_10, _cmd_read_T_8) @[package.scala 72:59]
    node _cmd_read_T_12 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_read_T_13 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_read_T_14 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_read_T_15 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_read_T_16 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_read_T_17 = or(_cmd_read_T_12, _cmd_read_T_13) @[package.scala 72:59]
    node _cmd_read_T_18 = or(_cmd_read_T_17, _cmd_read_T_14) @[package.scala 72:59]
    node _cmd_read_T_19 = or(_cmd_read_T_18, _cmd_read_T_15) @[package.scala 72:59]
    node _cmd_read_T_20 = or(_cmd_read_T_19, _cmd_read_T_16) @[package.scala 72:59]
    node _cmd_read_T_21 = or(_cmd_read_T_11, _cmd_read_T_20) @[Consts.scala 79:44]
    node cmd_read = or(_cmd_read_T_4, _cmd_read_T_21) @[Consts.scala 81:75]
    node _cmd_write_T = eq(io.req.bits.cmd, UInt<1>("h01")) @[Consts.scala 82:32]
    node _cmd_write_T_1 = eq(io.req.bits.cmd, UInt<5>("h011")) @[Consts.scala 82:49]
    node _cmd_write_T_2 = or(_cmd_write_T, _cmd_write_T_1) @[Consts.scala 82:42]
    node _cmd_write_T_3 = eq(io.req.bits.cmd, UInt<3>("h07")) @[Consts.scala 82:66]
    node _cmd_write_T_4 = or(_cmd_write_T_2, _cmd_write_T_3) @[Consts.scala 82:59]
    node _cmd_write_T_5 = eq(io.req.bits.cmd, UInt<3>("h04")) @[package.scala 15:47]
    node _cmd_write_T_6 = eq(io.req.bits.cmd, UInt<4>("h09")) @[package.scala 15:47]
    node _cmd_write_T_7 = eq(io.req.bits.cmd, UInt<4>("h0a")) @[package.scala 15:47]
    node _cmd_write_T_8 = eq(io.req.bits.cmd, UInt<4>("h0b")) @[package.scala 15:47]
    node _cmd_write_T_9 = or(_cmd_write_T_5, _cmd_write_T_6) @[package.scala 72:59]
    node _cmd_write_T_10 = or(_cmd_write_T_9, _cmd_write_T_7) @[package.scala 72:59]
    node _cmd_write_T_11 = or(_cmd_write_T_10, _cmd_write_T_8) @[package.scala 72:59]
    node _cmd_write_T_12 = eq(io.req.bits.cmd, UInt<4>("h08")) @[package.scala 15:47]
    node _cmd_write_T_13 = eq(io.req.bits.cmd, UInt<4>("h0c")) @[package.scala 15:47]
    node _cmd_write_T_14 = eq(io.req.bits.cmd, UInt<4>("h0d")) @[package.scala 15:47]
    node _cmd_write_T_15 = eq(io.req.bits.cmd, UInt<4>("h0e")) @[package.scala 15:47]
    node _cmd_write_T_16 = eq(io.req.bits.cmd, UInt<4>("h0f")) @[package.scala 15:47]
    node _cmd_write_T_17 = or(_cmd_write_T_12, _cmd_write_T_13) @[package.scala 72:59]
    node _cmd_write_T_18 = or(_cmd_write_T_17, _cmd_write_T_14) @[package.scala 72:59]
    node _cmd_write_T_19 = or(_cmd_write_T_18, _cmd_write_T_15) @[package.scala 72:59]
    node _cmd_write_T_20 = or(_cmd_write_T_19, _cmd_write_T_16) @[package.scala 72:59]
    node _cmd_write_T_21 = or(_cmd_write_T_11, _cmd_write_T_20) @[Consts.scala 79:44]
    node cmd_write = or(_cmd_write_T_4, _cmd_write_T_21) @[Consts.scala 82:76]
    node _cmd_write_perms_T = eq(io.req.bits.cmd, UInt<3>("h05")) @[package.scala 15:47]
    node _cmd_write_perms_T_1 = eq(io.req.bits.cmd, UInt<5>("h017")) @[package.scala 15:47]
    node _cmd_write_perms_T_2 = or(_cmd_write_perms_T, _cmd_write_perms_T_1) @[package.scala 72:59]
    node cmd_write_perms = or(cmd_write, _cmd_write_perms_T_2) @[TLB.scala 300:35]
    node lrscAllowed = mux(UInt<1>("h01"), UInt<1>("h00"), c_array) @[TLB.scala 303:24]
    node _ae_array_T = mux(misaligned, eff_array, UInt<1>("h00")) @[TLB.scala 305:8]
    node _ae_array_T_1 = not(lrscAllowed) @[TLB.scala 306:19]
    node _ae_array_T_2 = mux(cmd_lrsc, _ae_array_T_1, UInt<1>("h00")) @[TLB.scala 306:8]
    node ae_array = or(_ae_array_T, _ae_array_T_2) @[TLB.scala 305:37]
    node _ae_ld_array_T = not(pr_array) @[TLB.scala 307:46]
    node _ae_ld_array_T_1 = or(ae_array, _ae_ld_array_T) @[TLB.scala 307:44]
    node ae_ld_array = mux(cmd_read, _ae_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 307:24]
    node _ae_st_array_T = not(pw_array) @[TLB.scala 309:37]
    node _ae_st_array_T_1 = or(ae_array, _ae_st_array_T) @[TLB.scala 309:35]
    node _ae_st_array_T_2 = mux(cmd_write_perms, _ae_st_array_T_1, UInt<1>("h00")) @[TLB.scala 309:8]
    node _ae_st_array_T_3 = not(ppp_array_if_cached) @[TLB.scala 310:26]
    node _ae_st_array_T_4 = mux(cmd_put_partial, _ae_st_array_T_3, UInt<1>("h00")) @[TLB.scala 310:8]
    node _ae_st_array_T_5 = or(_ae_st_array_T_2, _ae_st_array_T_4) @[TLB.scala 309:53]
    node _ae_st_array_T_6 = not(pal_array_if_cached) @[TLB.scala 311:26]
    node _ae_st_array_T_7 = mux(cmd_amo_logical, _ae_st_array_T_6, UInt<1>("h00")) @[TLB.scala 311:8]
    node _ae_st_array_T_8 = or(_ae_st_array_T_5, _ae_st_array_T_7) @[TLB.scala 310:53]
    node _ae_st_array_T_9 = not(paa_array_if_cached) @[TLB.scala 312:29]
    node _ae_st_array_T_10 = mux(cmd_amo_arithmetic, _ae_st_array_T_9, UInt<1>("h00")) @[TLB.scala 312:8]
    node ae_st_array = or(_ae_st_array_T_8, _ae_st_array_T_10) @[TLB.scala 311:53]
    node _must_alloc_array_T = not(ppp_array) @[TLB.scala 314:26]
    node _must_alloc_array_T_1 = mux(cmd_put_partial, _must_alloc_array_T, UInt<1>("h00")) @[TLB.scala 314:8]
    node _must_alloc_array_T_2 = not(paa_array) @[TLB.scala 315:26]
    node _must_alloc_array_T_3 = mux(cmd_amo_logical, _must_alloc_array_T_2, UInt<1>("h00")) @[TLB.scala 315:8]
    node _must_alloc_array_T_4 = or(_must_alloc_array_T_1, _must_alloc_array_T_3) @[TLB.scala 314:43]
    node _must_alloc_array_T_5 = not(pal_array) @[TLB.scala 316:29]
    node _must_alloc_array_T_6 = mux(cmd_amo_arithmetic, _must_alloc_array_T_5, UInt<1>("h00")) @[TLB.scala 316:8]
    node _must_alloc_array_T_7 = or(_must_alloc_array_T_4, _must_alloc_array_T_6) @[TLB.scala 315:43]
    node _must_alloc_array_T_8 = not(UInt<7>("h00")) @[TLB.scala 317:19]
    node _must_alloc_array_T_9 = mux(cmd_lrsc, _must_alloc_array_T_8, UInt<1>("h00")) @[TLB.scala 317:8]
    node must_alloc_array = or(_must_alloc_array_T_7, _must_alloc_array_T_9) @[TLB.scala 316:46]
    node _ma_ld_array_T = and(misaligned, cmd_read) @[TLB.scala 318:36]
    node _ma_ld_array_T_1 = not(eff_array) @[TLB.scala 318:49]
    node ma_ld_array = mux(_ma_ld_array_T, _ma_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 318:24]
    node _ma_st_array_T = and(misaligned, cmd_write) @[TLB.scala 319:36]
    node _ma_st_array_T_1 = not(eff_array) @[TLB.scala 319:50]
    node ma_st_array = mux(_ma_st_array_T, _ma_st_array_T_1, UInt<1>("h00")) @[TLB.scala 319:24]
    node _pf_ld_array_T = or(r_array, ptw_ae_array) @[TLB.scala 320:45]
    node _pf_ld_array_T_1 = not(_pf_ld_array_T) @[TLB.scala 320:35]
    node pf_ld_array = mux(cmd_read, _pf_ld_array_T_1, UInt<1>("h00")) @[TLB.scala 320:24]
    node _pf_st_array_T = or(w_array, ptw_ae_array) @[TLB.scala 321:52]
    node _pf_st_array_T_1 = not(_pf_st_array_T) @[TLB.scala 321:42]
    node pf_st_array = mux(cmd_write_perms, _pf_st_array_T_1, UInt<1>("h00")) @[TLB.scala 321:24]
    node _pf_inst_array_T = or(x_array, ptw_ae_array) @[TLB.scala 322:33]
    node pf_inst_array = not(_pf_inst_array_T) @[TLB.scala 322:23]
    node tlb_hit = orr(real_hits) @[TLB.scala 324:27]
    node _tlb_miss_T = eq(UInt<1>("h00"), UInt<1>("h00")) @[TLB.scala 325:32]
    node _tlb_miss_T_1 = and(vm_enabled, _tlb_miss_T) @[TLB.scala 325:29]
    node _tlb_miss_T_2 = eq(tlb_hit, UInt<1>("h00")) @[TLB.scala 325:43]
    node tlb_miss = and(_tlb_miss_T_1, _tlb_miss_T_2) @[TLB.scala 325:40]
    reg state_reg : UInt<0>, clock @[Replacement.scala 168:46]
    reg state_vec : UInt<0>[1], clock @[Replacement.scala 304:30]
    reg state_reg_1 : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Replacement.scala 168:70]
    node _T_9 = and(io.req.valid, vm_enabled) @[TLB.scala 329:22]
    when _T_9 : @[TLB.scala 329:37]
      when sector_hits_0 : @[TLB.scala 330:28]
        state_vec[UInt<1>("h00")] <= UInt<1>("h00") @[Replacement.scala 308:20]
        skip @[TLB.scala 330:28]
      node _T_10 = or(superpage_hits_0, superpage_hits_1) @[package.scala 72:59]
      node _T_11 = or(_T_10, superpage_hits_2) @[package.scala 72:59]
      node _T_12 = or(_T_11, superpage_hits_3) @[package.scala 72:59]
      when _T_12 : @[TLB.scala 331:31]
        node lo = cat(superpage_hits_1, superpage_hits_0) @[Cat.scala 30:58]
        node hi = cat(superpage_hits_3, superpage_hits_2) @[Cat.scala 30:58]
        node _T_13 = cat(hi, lo) @[Cat.scala 30:58]
        node hi_1 = bits(_T_13, 3, 2) @[OneHot.scala 30:18]
        node lo_1 = bits(_T_13, 1, 0) @[OneHot.scala 31:18]
        node hi_2 = orr(hi_1) @[OneHot.scala 32:14]
        node _T_14 = or(hi_1, lo_1) @[OneHot.scala 32:28]
        node lo_2 = bits(_T_14, 1, 1) @[CircuitMath.scala 30:8]
        node _T_15 = cat(hi_2, lo_2) @[Cat.scala 30:58]
        node state_reg_touch_way_sized = bits(_T_15, 1, 0) @[package.scala 154:13]
        node _state_reg_set_left_older_T = bits(state_reg_touch_way_sized, 1, 1) @[Replacement.scala 196:43]
        node state_reg_hi_hi = eq(_state_reg_set_left_older_T, UInt<1>("h00")) @[Replacement.scala 196:33]
        node state_reg_left_subtree_state = bits(state_reg_1, 1, 1) @[package.scala 154:13]
        node state_reg_right_subtree_state = bits(state_reg_1, 0, 0) @[Replacement.scala 198:38]
        node _state_reg_T = bits(state_reg_touch_way_sized, 0, 0) @[package.scala 154:13]
        node _state_reg_T_1 = bits(_state_reg_T, 0, 0) @[Replacement.scala 218:17]
        node _state_reg_T_2 = eq(_state_reg_T_1, UInt<1>("h00")) @[Replacement.scala 218:7]
        node state_reg_hi_lo = mux(state_reg_hi_hi, state_reg_left_subtree_state, _state_reg_T_2) @[Replacement.scala 203:16]
        node _state_reg_T_3 = bits(state_reg_touch_way_sized, 0, 0) @[Replacement.scala 207:62]
        node _state_reg_T_4 = bits(_state_reg_T_3, 0, 0) @[Replacement.scala 218:17]
        node _state_reg_T_5 = eq(_state_reg_T_4, UInt<1>("h00")) @[Replacement.scala 218:7]
        node state_reg_lo = mux(state_reg_hi_hi, _state_reg_T_5, state_reg_right_subtree_state) @[Replacement.scala 206:16]
        node state_reg_hi = cat(state_reg_hi_hi, state_reg_hi_lo) @[Cat.scala 30:58]
        node _state_reg_T_6 = cat(state_reg_hi, state_reg_lo) @[Cat.scala 30:58]
        state_reg_1 <= _state_reg_T_6 @[Replacement.scala 172:15]
        skip @[TLB.scala 331:31]
      skip @[TLB.scala 329:37]
    node _multipleHits_T = bits(real_hits, 2, 0) @[Misc.scala 180:37]
    node _multipleHits_T_1 = bits(_multipleHits_T, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne = bits(_multipleHits_T_1, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_2 = bits(_multipleHits_T, 2, 1) @[Misc.scala 181:39]
    node _multipleHits_T_3 = bits(_multipleHits_T_2, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_1 = bits(_multipleHits_T_3, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_4 = bits(_multipleHits_T_2, 1, 1) @[Misc.scala 181:39]
    node multipleHits_rightOne = bits(_multipleHits_T_4, 0, 0) @[Misc.scala 177:18]
    node multipleHits_rightOne_1 = or(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:16]
    node _multipleHits_T_5 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 182:37]
    node _multipleHits_T_6 = and(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:61]
    node multipleHits_rightTwo = or(_multipleHits_T_5, _multipleHits_T_6) @[Misc.scala 182:49]
    node multipleHits_leftOne_2 = or(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:16]
    node _multipleHits_T_7 = or(UInt<1>("h00"), multipleHits_rightTwo) @[Misc.scala 182:37]
    node _multipleHits_T_8 = and(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:61]
    node multipleHits_leftTwo = or(_multipleHits_T_7, _multipleHits_T_8) @[Misc.scala 182:49]
    node _multipleHits_T_9 = bits(real_hits, 5, 3) @[Misc.scala 181:39]
    node _multipleHits_T_10 = bits(_multipleHits_T_9, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_3 = bits(_multipleHits_T_10, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_11 = bits(_multipleHits_T_9, 2, 1) @[Misc.scala 181:39]
    node _multipleHits_T_12 = bits(_multipleHits_T_11, 0, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_4 = bits(_multipleHits_T_12, 0, 0) @[Misc.scala 177:18]
    node _multipleHits_T_13 = bits(_multipleHits_T_11, 1, 1) @[Misc.scala 181:39]
    node multipleHits_rightOne_2 = bits(_multipleHits_T_13, 0, 0) @[Misc.scala 177:18]
    node multipleHits_rightOne_3 = or(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:16]
    node _multipleHits_T_14 = or(UInt<1>("h00"), UInt<1>("h00")) @[Misc.scala 182:37]
    node _multipleHits_T_15 = and(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:61]
    node multipleHits_rightTwo_1 = or(_multipleHits_T_14, _multipleHits_T_15) @[Misc.scala 182:49]
    node multipleHits_rightOne_4 = or(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:16]
    node _multipleHits_T_16 = or(UInt<1>("h00"), multipleHits_rightTwo_1) @[Misc.scala 182:37]
    node _multipleHits_T_17 = and(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:61]
    node multipleHits_rightTwo_2 = or(_multipleHits_T_16, _multipleHits_T_17) @[Misc.scala 182:49]
    node _multipleHits_T_18 = or(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:16]
    node _multipleHits_T_19 = or(multipleHits_leftTwo, multipleHits_rightTwo_2) @[Misc.scala 182:37]
    node _multipleHits_T_20 = and(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:61]
    node multipleHits = or(_multipleHits_T_19, _multipleHits_T_20) @[Misc.scala 182:49]
    node _io_req_ready_T = eq(state, UInt<2>("h00")) @[TLB.scala 341:25]
    io.req.ready <= _io_req_ready_T @[TLB.scala 341:16]
    node _io_resp_pf_ld_T = and(UInt<1>("h00"), cmd_read) @[TLB.scala 342:28]
    node _io_resp_pf_ld_T_1 = and(pf_ld_array, hits) @[TLB.scala 342:57]
    node _io_resp_pf_ld_T_2 = orr(_io_resp_pf_ld_T_1) @[TLB.scala 342:65]
    node _io_resp_pf_ld_T_3 = or(_io_resp_pf_ld_T, _io_resp_pf_ld_T_2) @[TLB.scala 342:41]
    io.resp.pf.ld <= _io_resp_pf_ld_T_3 @[TLB.scala 342:17]
    node _io_resp_pf_st_T = and(UInt<1>("h00"), cmd_write_perms) @[TLB.scala 343:28]
    node _io_resp_pf_st_T_1 = and(pf_st_array, hits) @[TLB.scala 343:64]
    node _io_resp_pf_st_T_2 = orr(_io_resp_pf_st_T_1) @[TLB.scala 343:72]
    node _io_resp_pf_st_T_3 = or(_io_resp_pf_st_T, _io_resp_pf_st_T_2) @[TLB.scala 343:48]
    io.resp.pf.st <= _io_resp_pf_st_T_3 @[TLB.scala 343:17]
    node _io_resp_pf_inst_T = and(pf_inst_array, hits) @[TLB.scala 344:47]
    node _io_resp_pf_inst_T_1 = orr(_io_resp_pf_inst_T) @[TLB.scala 344:55]
    node _io_resp_pf_inst_T_2 = or(UInt<1>("h00"), _io_resp_pf_inst_T_1) @[TLB.scala 344:29]
    io.resp.pf.inst <= _io_resp_pf_inst_T_2 @[TLB.scala 344:19]
    node _io_resp_ae_ld_T = and(ae_ld_array, hits) @[TLB.scala 345:33]
    node _io_resp_ae_ld_T_1 = orr(_io_resp_ae_ld_T) @[TLB.scala 345:41]
    io.resp.ae.ld <= _io_resp_ae_ld_T_1 @[TLB.scala 345:17]
    node _io_resp_ae_st_T = and(ae_st_array, hits) @[TLB.scala 346:33]
    node _io_resp_ae_st_T_1 = orr(_io_resp_ae_st_T) @[TLB.scala 346:41]
    io.resp.ae.st <= _io_resp_ae_st_T_1 @[TLB.scala 346:17]
    node _io_resp_ae_inst_T = not(px_array) @[TLB.scala 347:23]
    node _io_resp_ae_inst_T_1 = and(_io_resp_ae_inst_T, hits) @[TLB.scala 347:33]
    node _io_resp_ae_inst_T_2 = orr(_io_resp_ae_inst_T_1) @[TLB.scala 347:41]
    io.resp.ae.inst <= _io_resp_ae_inst_T_2 @[TLB.scala 347:19]
    node _io_resp_ma_ld_T = and(ma_ld_array, hits) @[TLB.scala 348:33]
    node _io_resp_ma_ld_T_1 = orr(_io_resp_ma_ld_T) @[TLB.scala 348:41]
    io.resp.ma.ld <= _io_resp_ma_ld_T_1 @[TLB.scala 348:17]
    node _io_resp_ma_st_T = and(ma_st_array, hits) @[TLB.scala 349:33]
    node _io_resp_ma_st_T_1 = orr(_io_resp_ma_st_T) @[TLB.scala 349:41]
    io.resp.ma.st <= _io_resp_ma_st_T_1 @[TLB.scala 349:17]
    io.resp.ma.inst <= UInt<1>("h00") @[TLB.scala 350:19]
    node _io_resp_cacheable_T = and(c_array, hits) @[TLB.scala 351:33]
    node _io_resp_cacheable_T_1 = orr(_io_resp_cacheable_T) @[TLB.scala 351:41]
    io.resp.cacheable <= _io_resp_cacheable_T_1 @[TLB.scala 351:21]
    node _io_resp_must_alloc_T = and(must_alloc_array, hits) @[TLB.scala 352:43]
    node _io_resp_must_alloc_T_1 = orr(_io_resp_must_alloc_T) @[TLB.scala 352:51]
    io.resp.must_alloc <= _io_resp_must_alloc_T_1 @[TLB.scala 352:22]
    node _io_resp_prefetchable_T = and(prefetchable_array, hits) @[TLB.scala 353:47]
    node _io_resp_prefetchable_T_1 = orr(_io_resp_prefetchable_T) @[TLB.scala 353:55]
    node _io_resp_prefetchable_T_2 = and(_io_resp_prefetchable_T_1, UInt<1>("h01")) @[TLB.scala 353:59]
    io.resp.prefetchable <= _io_resp_prefetchable_T_2 @[TLB.scala 353:24]
    node _io_resp_miss_T = or(do_refill, tlb_miss) @[TLB.scala 354:29]
    node _io_resp_miss_T_1 = or(_io_resp_miss_T, multipleHits) @[TLB.scala 354:41]
    io.resp.miss <= _io_resp_miss_T_1 @[TLB.scala 354:16]
    node io_resp_paddr_lo = bits(io.req.bits.vaddr, 11, 0) @[TLB.scala 355:46]
    node _io_resp_paddr_T = cat(ppn, io_resp_paddr_lo) @[Cat.scala 30:58]
    io.resp.paddr <= _io_resp_paddr_T @[TLB.scala 355:17]
    node _io_ptw_req_valid_T = eq(state, UInt<2>("h01")) @[TLB.scala 357:29]
    io.ptw.req.valid <= _io_ptw_req_valid_T @[TLB.scala 357:20]
    node _io_ptw_req_bits_valid_T = eq(io.kill, UInt<1>("h00")) @[TLB.scala 358:28]
    io.ptw.req.bits.valid <= _io_ptw_req_bits_valid_T @[TLB.scala 358:25]
    io.ptw.req.bits.bits.addr <= r_refill_tag @[TLB.scala 359:29]
    
  module Repeater_7 : 
    input clock : Clock
    input reset : Reset
    output io : {flip repeat : UInt<1>, full : UInt<1>, flip enq : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}, deq : {flip ready : UInt<1>, valid : UInt<1>, bits : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}}}
    
    reg full : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Repeater.scala 19:21]
    reg saved : {opcode : UInt<3>, param : UInt<3>, size : UInt<3>, source : UInt<3>, address : UInt<32>, user : {}, echo : {}, mask : UInt<4>, data : UInt<32>, corrupt : UInt<1>}, clock @[Repeater.scala 20:18]
    node _io_deq_valid_T = or(io.enq.valid, full) @[Repeater.scala 23:32]
    io.deq.valid <= _io_deq_valid_T @[Repeater.scala 23:16]
    node _io_enq_ready_T = eq(full, UInt<1>("h00")) @[Repeater.scala 24:35]
    node _io_enq_ready_T_1 = and(io.deq.ready, _io_enq_ready_T) @[Repeater.scala 24:32]
    io.enq.ready <= _io_enq_ready_T_1 @[Repeater.scala 24:16]
    node _io_deq_bits_T = mux(full, saved, io.enq.bits) @[Repeater.scala 25:21]
    io.deq.bits.corrupt <= _io_deq_bits_T.corrupt @[Repeater.scala 25:15]
    io.deq.bits.data <= _io_deq_bits_T.data @[Repeater.scala 25:15]
    io.deq.bits.mask <= _io_deq_bits_T.mask @[Repeater.scala 25:15]
    io.deq.bits.address <= _io_deq_bits_T.address @[Repeater.scala 25:15]
    io.deq.bits.source <= _io_deq_bits_T.source @[Repeater.scala 25:15]
    io.deq.bits.size <= _io_deq_bits_T.size @[Repeater.scala 25:15]
    io.deq.bits.param <= _io_deq_bits_T.param @[Repeater.scala 25:15]
    io.deq.bits.opcode <= _io_deq_bits_T.opcode @[Repeater.scala 25:15]
    io.full <= full @[Repeater.scala 26:11]
    node _T = and(io.enq.ready, io.enq.valid) @[Decoupled.scala 40:37]
    node _T_1 = and(_T, io.repeat) @[Repeater.scala 28:23]
    when _T_1 : @[Repeater.scala 28:38]
      full <= UInt<1>("h01") @[Repeater.scala 28:45]
      saved.corrupt <= io.enq.bits.corrupt @[Repeater.scala 28:62]
      saved.data <= io.enq.bits.data @[Repeater.scala 28:62]
      saved.mask <= io.enq.bits.mask @[Repeater.scala 28:62]
      saved.address <= io.enq.bits.address @[Repeater.scala 28:62]
      saved.source <= io.enq.bits.source @[Repeater.scala 28:62]
      saved.size <= io.enq.bits.size @[Repeater.scala 28:62]
      saved.param <= io.enq.bits.param @[Repeater.scala 28:62]
      saved.opcode <= io.enq.bits.opcode @[Repeater.scala 28:62]
      skip @[Repeater.scala 28:38]
    node _T_2 = and(io.deq.ready, io.deq.valid) @[Decoupled.scala 40:37]
    node _T_3 = eq(io.repeat, UInt<1>("h00")) @[Repeater.scala 29:26]
    node _T_4 = and(_T_2, _T_3) @[Repeater.scala 29:23]
    when _T_4 : @[Repeater.scala 29:38]
      full <= UInt<1>("h00") @[Repeater.scala 29:45]
      skip @[Repeater.scala 29:38]
    
  module Arbiter : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : {valid : UInt<1>, bits : {addr : UInt<20>}}}[2], out : {flip ready : UInt<1>, valid : UInt<1>, bits : {valid : UInt<1>, bits : {addr : UInt<20>}}}, chosen : UInt<1>}
    
    io.chosen <= UInt<1>("h01") @[Arbiter.scala 123:13]
    io.out.bits.bits.addr <= io.in[1].bits.bits.addr @[Arbiter.scala 124:15]
    io.out.bits.valid <= io.in[1].bits.valid @[Arbiter.scala 124:15]
    when io.in[0].valid : @[Arbiter.scala 126:27]
      io.chosen <= UInt<1>("h00") @[Arbiter.scala 127:17]
      io.out.bits.bits.addr <= io.in[0].bits.bits.addr @[Arbiter.scala 128:19]
      io.out.bits.valid <= io.in[0].bits.valid @[Arbiter.scala 128:19]
      skip @[Arbiter.scala 126:27]
    node grant_1 = eq(io.in[0].valid, UInt<1>("h00")) @[Arbiter.scala 31:78]
    node _io_in_0_ready_T = and(UInt<1>("h01"), io.out.ready) @[Arbiter.scala 134:19]
    io.in[0].ready <= _io_in_0_ready_T @[Arbiter.scala 134:14]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[Arbiter.scala 134:19]
    io.in[1].ready <= _io_in_1_ready_T @[Arbiter.scala 134:14]
    node _io_out_valid_T = eq(grant_1, UInt<1>("h00")) @[Arbiter.scala 135:19]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[Arbiter.scala 135:31]
    io.out.valid <= _io_out_valid_T_1 @[Arbiter.scala 135:16]
    
  module OptimizationBarrier_54 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : UInt, y : UInt}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <= io.x @[package.scala 263:12]
    
  module OptimizationBarrier_55 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}, y : {ppn : UInt<54>, reserved_for_software : UInt<2>, d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module IBuf : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip imem : {flip ready : UInt<1>, valid : UInt<1>, bits : {btb : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, data : UInt<32>, mask : UInt<2>, xcpt : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, replay : UInt<1>}}, flip kill : UInt<1>, pc : UInt<32>, btb_resp : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, inst : {flip ready : UInt<1>, valid : UInt<1>, bits : {xcpt0 : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, xcpt1 : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, replay : UInt<1>, rvc : UInt<1>, inst : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>}, raw : UInt<32>}}[1]}
    
    clock is invalid
    reset is invalid
    io is invalid
    reg nBufValid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[IBuf.scala 34:47]
    reg buf : {btb : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, pc : UInt<32>, data : UInt<32>, mask : UInt<2>, xcpt : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}}, replay : UInt<1>}, clock @[IBuf.scala 35:16]
    reg ibufBTBResp : {cfiType : UInt<2>, taken : UInt<1>, mask : UInt<2>, bridx : UInt<1>, target : UInt<32>, entry : UInt<1>, bht : {history : UInt<8>, value : UInt<1>}}, clock @[IBuf.scala 36:24]
    node pcWordBits = bits(io.imem.bits.pc, 1, 1) @[package.scala 154:13]
    wire nReady : UInt<2>
    nReady is invalid
    nReady <= UInt<2>("h00")
    node _nIC_T = add(io.imem.bits.btb.bridx, UInt<1>("h01")) @[IBuf.scala 41:64]
    node _nIC_T_1 = mux(io.imem.bits.btb.taken, _nIC_T, UInt<2>("h02")) @[IBuf.scala 41:16]
    node _nIC_T_2 = sub(_nIC_T_1, pcWordBits) @[IBuf.scala 41:88]
    node nIC = tail(_nIC_T_2, 1) @[IBuf.scala 41:88]
    node _nICReady_T = sub(nReady, nBufValid) @[IBuf.scala 42:25]
    node nICReady = tail(_nICReady_T, 1) @[IBuf.scala 42:25]
    node _nValid_T = mux(io.imem.valid, nIC, UInt<1>("h00")) @[IBuf.scala 43:19]
    node _nValid_T_1 = add(_nValid_T, nBufValid) @[IBuf.scala 43:49]
    node nValid = tail(_nValid_T_1, 1) @[IBuf.scala 43:49]
    node _io_imem_ready_T = geq(nReady, nBufValid) @[IBuf.scala 44:47]
    node _io_imem_ready_T_1 = and(io.inst[0].ready, _io_imem_ready_T) @[IBuf.scala 44:37]
    node _io_imem_ready_T_2 = geq(nICReady, nIC) @[IBuf.scala 44:73]
    node _io_imem_ready_T_3 = sub(nIC, nICReady) @[IBuf.scala 44:92]
    node _io_imem_ready_T_4 = tail(_io_imem_ready_T_3, 1) @[IBuf.scala 44:92]
    node _io_imem_ready_T_5 = geq(UInt<1>("h01"), _io_imem_ready_T_4) @[IBuf.scala 44:85]
    node _io_imem_ready_T_6 = or(_io_imem_ready_T_2, _io_imem_ready_T_5) @[IBuf.scala 44:80]
    node _io_imem_ready_T_7 = and(_io_imem_ready_T_1, _io_imem_ready_T_6) @[IBuf.scala 44:60]
    io.imem.ready <= _io_imem_ready_T_7 @[IBuf.scala 44:17]
    when io.inst[0].ready : @[IBuf.scala 47:29]
      node _nBufValid_T = geq(nReady, nBufValid) @[package.scala 209:33]
      node _nBufValid_T_1 = eq(nBufValid, UInt<1>("h00")) @[package.scala 209:43]
      node _nBufValid_T_2 = or(_nBufValid_T, _nBufValid_T_1) @[package.scala 209:38]
      node _nBufValid_T_3 = sub(nBufValid, nReady) @[IBuf.scala 48:65]
      node _nBufValid_T_4 = tail(_nBufValid_T_3, 1) @[IBuf.scala 48:65]
      node _nBufValid_T_5 = mux(_nBufValid_T_2, UInt<1>("h00"), _nBufValid_T_4) @[IBuf.scala 48:23]
      nBufValid <= _nBufValid_T_5 @[IBuf.scala 48:17]
      node _T = geq(nReady, nBufValid) @[IBuf.scala 54:37]
      node _T_1 = and(io.imem.valid, _T) @[IBuf.scala 54:27]
      node _T_2 = lt(nICReady, nIC) @[IBuf.scala 54:62]
      node _T_3 = and(_T_1, _T_2) @[IBuf.scala 54:50]
      node _T_4 = sub(nIC, nICReady) @[IBuf.scala 54:80]
      node _T_5 = tail(_T_4, 1) @[IBuf.scala 54:80]
      node _T_6 = geq(UInt<1>("h01"), _T_5) @[IBuf.scala 54:73]
      node _T_7 = and(_T_3, _T_6) @[IBuf.scala 54:68]
      when _T_7 : @[IBuf.scala 54:92]
        node _shamt_T = add(pcWordBits, nICReady) @[IBuf.scala 55:32]
        node shamt = tail(_shamt_T, 1) @[IBuf.scala 55:32]
        node _nBufValid_T_6 = sub(nIC, nICReady) @[IBuf.scala 56:26]
        node _nBufValid_T_7 = tail(_nBufValid_T_6, 1) @[IBuf.scala 56:26]
        nBufValid <= _nBufValid_T_7 @[IBuf.scala 56:19]
        buf <- io.imem.bits @[IBuf.scala 57:13]
        node buf_data_data_hi = shr(io.imem.bits.data, 16) @[IBuf.scala 127:58]
        node buf_data_data_hi_1 = cat(buf_data_data_hi, buf_data_data_hi) @[Cat.scala 30:58]
        node buf_data_data = cat(buf_data_data_hi_1, io.imem.bits.data) @[Cat.scala 30:58]
        node _buf_data_T = shl(shamt, 4) @[IBuf.scala 128:19]
        node _buf_data_T_1 = dshr(buf_data_data, _buf_data_T) @[IBuf.scala 128:10]
        node _buf_data_T_2 = bits(_buf_data_T_1, 15, 0) @[IBuf.scala 58:61]
        buf.data <= _buf_data_T_2 @[IBuf.scala 58:18]
        node _buf_pc_T = not(UInt<32>("h03")) @[IBuf.scala 59:37]
        node _buf_pc_T_1 = and(io.imem.bits.pc, _buf_pc_T) @[IBuf.scala 59:35]
        node _buf_pc_T_2 = shl(nICReady, 1) @[IBuf.scala 59:80]
        node _buf_pc_T_3 = add(io.imem.bits.pc, _buf_pc_T_2) @[IBuf.scala 59:68]
        node _buf_pc_T_4 = tail(_buf_pc_T_3, 1) @[IBuf.scala 59:68]
        node _buf_pc_T_5 = and(_buf_pc_T_4, UInt<32>("h03")) @[IBuf.scala 59:109]
        node _buf_pc_T_6 = or(_buf_pc_T_1, _buf_pc_T_5) @[IBuf.scala 59:49]
        buf.pc <= _buf_pc_T_6 @[IBuf.scala 59:16]
        ibufBTBResp <- io.imem.bits.btb @[IBuf.scala 60:21]
        skip @[IBuf.scala 54:92]
      skip @[IBuf.scala 47:29]
    when io.kill : @[IBuf.scala 63:20]
      nBufValid <= UInt<1>("h00") @[IBuf.scala 64:17]
      skip @[IBuf.scala 63:20]
    node _icShiftAmt_T = add(UInt<2>("h02"), nBufValid) @[IBuf.scala 68:32]
    node _icShiftAmt_T_1 = tail(_icShiftAmt_T, 1) @[IBuf.scala 68:32]
    node _icShiftAmt_T_2 = sub(_icShiftAmt_T_1, pcWordBits) @[IBuf.scala 68:44]
    node _icShiftAmt_T_3 = tail(_icShiftAmt_T_2, 1) @[IBuf.scala 68:44]
    node icShiftAmt = bits(_icShiftAmt_T_3, 1, 0) @[IBuf.scala 68:57]
    node icData_hi = bits(io.imem.bits.data, 15, 0) @[IBuf.scala 69:87]
    node icData_lo = cat(icData_hi, icData_hi) @[Cat.scala 30:58]
    node icData_data_lo = cat(io.imem.bits.data, icData_lo) @[Cat.scala 30:58]
    node icData_data_hi = shr(icData_data_lo, 48) @[IBuf.scala 120:58]
    node icData_data_hi_1 = cat(icData_data_hi, icData_data_hi) @[Cat.scala 30:58]
    node icData_data_hi_2 = cat(icData_data_hi_1, icData_data_hi_1) @[Cat.scala 30:58]
    node icData_data = cat(icData_data_hi_2, icData_data_lo) @[Cat.scala 30:58]
    node _icData_T = shl(icShiftAmt, 4) @[IBuf.scala 121:19]
    node _icData_T_1 = dshl(icData_data, _icData_T) @[IBuf.scala 121:10]
    node icData = bits(_icData_T_1, 95, 64) @[package.scala 154:13]
    node _icMask_T = not(UInt<32>("h00")) @[IBuf.scala 71:17]
    node _icMask_T_1 = shl(nBufValid, 4) @[IBuf.scala 71:65]
    node _icMask_T_2 = dshl(_icMask_T, _icMask_T_1) @[IBuf.scala 71:51]
    node icMask = bits(_icMask_T_2, 31, 0) @[IBuf.scala 71:92]
    node _inst_T = and(icData, icMask) @[IBuf.scala 72:21]
    node _inst_T_1 = not(icMask) @[IBuf.scala 72:43]
    node _inst_T_2 = and(buf.data, _inst_T_1) @[IBuf.scala 72:41]
    node inst = or(_inst_T, _inst_T_2) @[IBuf.scala 72:30]
    node _valid_T = dshl(UInt<1>("h01"), nValid) @[OneHot.scala 58:35]
    node _valid_T_1 = sub(_valid_T, UInt<1>("h01")) @[IBuf.scala 74:33]
    node _valid_T_2 = tail(_valid_T_1, 1) @[IBuf.scala 74:33]
    node valid = bits(_valid_T_2, 1, 0) @[IBuf.scala 74:37]
    node _bufMask_T = dshl(UInt<1>("h01"), nBufValid) @[OneHot.scala 58:35]
    node _bufMask_T_1 = sub(_bufMask_T, UInt<1>("h01")) @[IBuf.scala 75:37]
    node bufMask = tail(_bufMask_T_1, 1) @[IBuf.scala 75:37]
    node _xcpt_T = bits(bufMask, 0, 0) @[IBuf.scala 76:61]
    node xcpt_0 = mux(_xcpt_T, buf.xcpt, io.imem.bits.xcpt) @[IBuf.scala 76:53]
    node _xcpt_T_1 = bits(bufMask, 1, 1) @[IBuf.scala 76:61]
    node xcpt_1 = mux(_xcpt_T_1, buf.xcpt, io.imem.bits.xcpt) @[IBuf.scala 76:53]
    node buf_replay = mux(buf.replay, bufMask, UInt<1>("h00")) @[IBuf.scala 77:23]
    node _ic_replay_T = not(bufMask) @[IBuf.scala 78:65]
    node _ic_replay_T_1 = and(valid, _ic_replay_T) @[IBuf.scala 78:63]
    node _ic_replay_T_2 = mux(io.imem.bits.replay, _ic_replay_T_1, UInt<1>("h00")) @[IBuf.scala 78:35]
    node ic_replay = or(buf_replay, _ic_replay_T_2) @[IBuf.scala 78:30]
    node _T_8 = eq(io.imem.valid, UInt<1>("h00")) @[IBuf.scala 79:10]
    node _T_9 = eq(io.imem.bits.btb.taken, UInt<1>("h00")) @[IBuf.scala 79:28]
    node _T_10 = or(_T_8, _T_9) @[IBuf.scala 79:25]
    node _T_11 = geq(io.imem.bits.btb.bridx, pcWordBits) @[IBuf.scala 79:78]
    node _T_12 = or(_T_10, _T_11) @[IBuf.scala 79:52]
    node _T_13 = bits(reset, 0, 0) @[IBuf.scala 79:9]
    node _T_14 = or(_T_12, _T_13) @[IBuf.scala 79:9]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[IBuf.scala 79:9]
    when _T_15 : @[IBuf.scala 79:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at IBuf.scala:79 assert(!io.imem.valid || !io.imem.bits.btb.taken || io.imem.bits.btb.bridx >= pcWordBits)\n") @[IBuf.scala 79:9]
      stop(clock, UInt<1>(1), 1) @[IBuf.scala 79:9]
      skip @[IBuf.scala 79:9]
    io.btb_resp <- io.imem.bits.btb @[IBuf.scala 81:15]
    node _io_pc_T = gt(nBufValid, UInt<1>("h00")) @[IBuf.scala 82:26]
    node _io_pc_T_1 = mux(_io_pc_T, buf.pc, io.imem.bits.pc) @[IBuf.scala 82:15]
    io.pc <= _io_pc_T_1 @[IBuf.scala 82:9]
    inst exp of RVCExpander @[IBuf.scala 86:21]
    exp.io is invalid
    exp.clock <= clock
    exp.reset <= reset
    exp.io.in <= inst @[IBuf.scala 87:15]
    io.inst[0].bits.inst <- exp.io.out @[IBuf.scala 88:26]
    io.inst[0].bits.raw <= inst @[IBuf.scala 89:25]
    node _replay_T = dshr(ic_replay, UInt<1>("h00")) @[IBuf.scala 92:29]
    node _replay_T_1 = bits(_replay_T, 0, 0) @[IBuf.scala 92:29]
    node _replay_T_2 = eq(exp.io.rvc, UInt<1>("h00")) @[IBuf.scala 92:37]
    node _replay_T_3 = add(UInt<1>("h00"), UInt<1>("h01")) @[IBuf.scala 92:63]
    node _replay_T_4 = tail(_replay_T_3, 1) @[IBuf.scala 92:63]
    node _replay_T_5 = dshr(ic_replay, _replay_T_4) @[IBuf.scala 92:61]
    node _replay_T_6 = bits(_replay_T_5, 0, 0) @[IBuf.scala 92:61]
    node _replay_T_7 = and(_replay_T_2, _replay_T_6) @[IBuf.scala 92:49]
    node replay = or(_replay_T_1, _replay_T_7) @[IBuf.scala 92:33]
    node _full_insn_T = add(UInt<1>("h00"), UInt<1>("h01")) @[IBuf.scala 93:44]
    node _full_insn_T_1 = tail(_full_insn_T, 1) @[IBuf.scala 93:44]
    node _full_insn_T_2 = dshr(valid, _full_insn_T_1) @[IBuf.scala 93:42]
    node _full_insn_T_3 = bits(_full_insn_T_2, 0, 0) @[IBuf.scala 93:42]
    node _full_insn_T_4 = or(exp.io.rvc, _full_insn_T_3) @[IBuf.scala 93:34]
    node _full_insn_T_5 = dshr(buf_replay, UInt<1>("h00")) @[IBuf.scala 93:61]
    node _full_insn_T_6 = bits(_full_insn_T_5, 0, 0) @[IBuf.scala 93:61]
    node full_insn = or(_full_insn_T_4, _full_insn_T_6) @[IBuf.scala 93:48]
    node _io_inst_0_valid_T = dshr(valid, UInt<1>("h00")) @[IBuf.scala 94:32]
    node _io_inst_0_valid_T_1 = bits(_io_inst_0_valid_T, 0, 0) @[IBuf.scala 94:32]
    node _io_inst_0_valid_T_2 = and(_io_inst_0_valid_T_1, full_insn) @[IBuf.scala 94:36]
    io.inst[0].valid <= _io_inst_0_valid_T_2 @[IBuf.scala 94:24]
    node _io_inst_0_bits_xcpt0_T = eq(UInt<1>("h00"), UInt<1>("h01")) @[package.scala 32:86]
    node _io_inst_0_bits_xcpt0_T_1 = mux(_io_inst_0_bits_xcpt0_T, xcpt_1, xcpt_0) @[package.scala 32:76]
    io.inst[0].bits.xcpt0 <- _io_inst_0_bits_xcpt0_T_1 @[IBuf.scala 95:29]
    node _io_inst_0_bits_xcpt1_T = add(UInt<1>("h00"), UInt<1>("h01")) @[IBuf.scala 96:59]
    node _io_inst_0_bits_xcpt1_T_1 = tail(_io_inst_0_bits_xcpt1_T, 1) @[IBuf.scala 96:59]
    node _io_inst_0_bits_xcpt1_T_2 = eq(_io_inst_0_bits_xcpt1_T_1, UInt<1>("h01")) @[package.scala 32:86]
    node _io_inst_0_bits_xcpt1_T_3 = mux(_io_inst_0_bits_xcpt1_T_2, xcpt_1, xcpt_0) @[package.scala 32:76]
    node _io_inst_0_bits_xcpt1_T_4 = cat(_io_inst_0_bits_xcpt1_T_3.pf.inst, _io_inst_0_bits_xcpt1_T_3.ae.inst) @[IBuf.scala 96:63]
    node _io_inst_0_bits_xcpt1_T_5 = mux(exp.io.rvc, UInt<1>("h00"), _io_inst_0_bits_xcpt1_T_4) @[IBuf.scala 96:35]
    wire _io_inst_0_bits_xcpt1_WIRE : {pf : {inst : UInt<1>}, ae : {inst : UInt<1>}} @[IBuf.scala 96:79]
    _io_inst_0_bits_xcpt1_WIRE is invalid @[IBuf.scala 96:79]
    wire _io_inst_0_bits_xcpt1_WIRE_1 : UInt<2>
    _io_inst_0_bits_xcpt1_WIRE_1 is invalid
    _io_inst_0_bits_xcpt1_WIRE_1 <= _io_inst_0_bits_xcpt1_T_5
    node _io_inst_0_bits_xcpt1_T_6 = bits(_io_inst_0_bits_xcpt1_WIRE_1, 0, 0) @[IBuf.scala 96:79]
    _io_inst_0_bits_xcpt1_WIRE.ae.inst <= _io_inst_0_bits_xcpt1_T_6 @[IBuf.scala 96:79]
    node _io_inst_0_bits_xcpt1_T_7 = bits(_io_inst_0_bits_xcpt1_WIRE_1, 1, 1) @[IBuf.scala 96:79]
    _io_inst_0_bits_xcpt1_WIRE.pf.inst <= _io_inst_0_bits_xcpt1_T_7 @[IBuf.scala 96:79]
    io.inst[0].bits.xcpt1 <- _io_inst_0_bits_xcpt1_WIRE @[IBuf.scala 96:29]
    io.inst[0].bits.replay <= replay @[IBuf.scala 97:30]
    io.inst[0].bits.rvc <= exp.io.rvc @[IBuf.scala 98:27]
    node _T_16 = dshr(bufMask, UInt<1>("h00")) @[IBuf.scala 100:21]
    node _T_17 = bits(_T_16, 0, 0) @[IBuf.scala 100:21]
    node _T_18 = and(_T_17, exp.io.rvc) @[IBuf.scala 100:25]
    node _T_19 = add(UInt<1>("h00"), UInt<1>("h01")) @[IBuf.scala 100:52]
    node _T_20 = tail(_T_19, 1) @[IBuf.scala 100:52]
    node _T_21 = dshr(bufMask, _T_20) @[IBuf.scala 100:50]
    node _T_22 = bits(_T_21, 0, 0) @[IBuf.scala 100:50]
    node _T_23 = or(_T_18, _T_22) @[IBuf.scala 100:40]
    when _T_23 : @[IBuf.scala 100:57]
      io.btb_resp <- ibufBTBResp @[IBuf.scala 100:71]
      skip @[IBuf.scala 100:57]
    node _T_24 = or(UInt<1>("h01"), io.inst[0].ready) @[IBuf.scala 102:34]
    node _T_25 = and(full_insn, _T_24) @[IBuf.scala 102:23]
    when _T_25 : @[IBuf.scala 102:56]
      node _nReady_T = add(UInt<1>("h00"), UInt<1>("h01")) @[IBuf.scala 102:85]
      node _nReady_T_1 = tail(_nReady_T, 1) @[IBuf.scala 102:85]
      node _nReady_T_2 = add(UInt<1>("h00"), UInt<2>("h02")) @[IBuf.scala 102:90]
      node _nReady_T_3 = tail(_nReady_T_2, 1) @[IBuf.scala 102:90]
      node _nReady_T_4 = mux(exp.io.rvc, _nReady_T_1, _nReady_T_3) @[IBuf.scala 102:71]
      nReady <= _nReady_T_4 @[IBuf.scala 102:65]
      skip @[IBuf.scala 102:56]
    node _T_26 = add(UInt<1>("h00"), UInt<1>("h01")) @[IBuf.scala 104:36]
    node _T_27 = tail(_T_26, 1) @[IBuf.scala 104:36]
    node _T_28 = add(UInt<1>("h00"), UInt<2>("h02")) @[IBuf.scala 104:41]
    node _T_29 = tail(_T_28, 1) @[IBuf.scala 104:41]
    node _T_30 = mux(exp.io.rvc, _T_27, _T_29) @[IBuf.scala 104:22]
    node _T_31 = shr(inst, 16) @[IBuf.scala 104:70]
    node _T_32 = shr(inst, 32) @[IBuf.scala 104:85]
    node _T_33 = mux(exp.io.rvc, _T_31, _T_32) @[IBuf.scala 104:49]
    
  module CSRFile : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip ungated_clock : Clock, flip interrupts : {debug : UInt<1>, mtip : UInt<1>, msip : UInt<1>, meip : UInt<1>, lip : UInt<1>[0]}, flip hartid : UInt<1>, rw : {flip addr : UInt<12>, flip cmd : UInt<3>, rdata : UInt<32>, flip wdata : UInt<32>}, decode : {flip csr : UInt<12>, fp_illegal : UInt<1>, vector_illegal : UInt<1>, fp_csr : UInt<1>, rocc_illegal : UInt<1>, read_illegal : UInt<1>, write_illegal : UInt<1>, write_flush : UInt<1>, system_illegal : UInt<1>}[1], csr_stall : UInt<1>, eret : UInt<1>, singleStep : UInt<1>, status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, ptbr : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, evec : UInt<32>, flip exception : UInt<1>, flip retire : UInt<1>, flip cause : UInt<32>, flip pc : UInt<32>, flip tval : UInt<32>, time : UInt<32>, fcsr_rm : UInt<3>, flip fcsr_flags : {valid : UInt<1>, bits : UInt<5>}, flip rocc_interrupt : UInt<1>, interrupt : UInt<1>, interrupt_cause : UInt<32>, bp : {control : {ttype : UInt<4>, dmode : UInt<1>, maskmax : UInt<6>, reserved : UInt<8>, action : UInt<1>, chain : UInt<1>, zero : UInt<2>, tmatch : UInt<2>, m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, address : UInt<32>, textra : {mvalue : UInt<0>, mselect : UInt<1>, pad2 : UInt<23>, svalue : UInt<0>, pad1 : UInt<1>, sselect : UInt<1>}}[1], pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], counters : {eventSel : UInt<32>, flip inc : UInt<1>}[0], csrw_counter : UInt<32>, inhibit_cycle : UInt<1>, flip inst : UInt<32>[1], trace : {valid : UInt<1>, iaddr : UInt<32>, insn : UInt<32>, priv : UInt<3>, exception : UInt<1>, interrupt : UInt<1>, cause : UInt<32>, tval : UInt<32>}[1], mcontext : UInt<0>, scontext : UInt<0>, customCSRs : {wen : UInt<1>, wdata : UInt<32>, value : UInt<32>}[4]}
    
    clock is invalid
    reset is invalid
    io is invalid
    wire reset_mstatus_x1 : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[CSR.scala 315:55]
    reset_mstatus_x1 is invalid @[CSR.scala 315:55]
    reset_mstatus_x1.uie <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.sie <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.hie <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.mie <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.upie <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.spie <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.hpie <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.mpie <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.spp <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.vs <= UInt<2>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.mpp <= UInt<2>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.fs <= UInt<2>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.xs <= UInt<2>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.mprv <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.sum <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.mxr <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.tvm <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.tw <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.tsr <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.zero1 <= UInt<8>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.sd_rv32 <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.uxl <= UInt<2>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.sxl <= UInt<2>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.zero2 <= UInt<27>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.sd <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.prv <= UInt<2>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.dprv <= UInt<2>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.isa <= UInt<32>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.wfi <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.cease <= UInt<1>("h00") @[CSR.scala 315:55]
    reset_mstatus_x1.debug <= UInt<1>("h00") @[CSR.scala 315:55]
    wire reset_mstatus : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}
    reset_mstatus is invalid
    reset_mstatus <- reset_mstatus_x1
    reset_mstatus.mpp <= UInt<2>("h03") @[CSR.scala 316:21]
    reset_mstatus.prv <= UInt<2>("h03") @[CSR.scala 317:21]
    reset_mstatus.xs <= UInt<1>("h00") @[CSR.scala 318:20]
    reg reg_mstatus : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, clock with : (reset => (reset, reset_mstatus)) @[CSR.scala 319:24]
    wire new_prv : UInt
    new_prv is invalid
    new_prv <= reg_mstatus.prv
    reg_mstatus.prv <= UInt<2>("h03") @[CSR.scala 322:19]
    wire reset_dcsr_x8 : {xdebugver : UInt<2>, zero4 : UInt<2>, zero3 : UInt<12>, ebreakm : UInt<1>, ebreakh : UInt<1>, ebreaks : UInt<1>, ebreaku : UInt<1>, zero2 : UInt<1>, stopcycle : UInt<1>, stoptime : UInt<1>, cause : UInt<3>, zero1 : UInt<3>, step : UInt<1>, prv : UInt<2>} @[CSR.scala 324:49]
    reset_dcsr_x8 is invalid @[CSR.scala 324:49]
    reset_dcsr_x8.prv <= UInt<2>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.step <= UInt<1>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.zero1 <= UInt<3>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.cause <= UInt<3>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.stoptime <= UInt<1>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.stopcycle <= UInt<1>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.zero2 <= UInt<1>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.ebreaku <= UInt<1>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.ebreaks <= UInt<1>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.ebreakh <= UInt<1>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.ebreakm <= UInt<1>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.zero3 <= UInt<12>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.zero4 <= UInt<2>("h00") @[CSR.scala 324:49]
    reset_dcsr_x8.xdebugver <= UInt<2>("h00") @[CSR.scala 324:49]
    wire reset_dcsr : {xdebugver : UInt<2>, zero4 : UInt<2>, zero3 : UInt<12>, ebreakm : UInt<1>, ebreakh : UInt<1>, ebreaks : UInt<1>, ebreaku : UInt<1>, zero2 : UInt<1>, stopcycle : UInt<1>, stoptime : UInt<1>, cause : UInt<3>, zero1 : UInt<3>, step : UInt<1>, prv : UInt<2>}
    reset_dcsr is invalid
    reset_dcsr <- reset_dcsr_x8
    reset_dcsr.xdebugver <= UInt<1>("h01") @[CSR.scala 325:24]
    reset_dcsr.prv <= UInt<2>("h03") @[CSR.scala 326:18]
    reg reg_dcsr : {xdebugver : UInt<2>, zero4 : UInt<2>, zero3 : UInt<12>, ebreakm : UInt<1>, ebreakh : UInt<1>, ebreaks : UInt<1>, ebreaku : UInt<1>, zero2 : UInt<1>, stopcycle : UInt<1>, stoptime : UInt<1>, cause : UInt<3>, zero1 : UInt<3>, step : UInt<1>, prv : UInt<2>}, clock with : (reset => (reset, reset_dcsr)) @[CSR.scala 327:21]
    wire _WIRE : {lip : UInt<1>[0], zero2 : UInt<1>, debug : UInt<1>, zero1 : UInt<1>, rocc : UInt<1>, meip : UInt<1>, heip : UInt<1>, seip : UInt<1>, ueip : UInt<1>, mtip : UInt<1>, htip : UInt<1>, stip : UInt<1>, utip : UInt<1>, msip : UInt<1>, hsip : UInt<1>, ssip : UInt<1>, usip : UInt<1>} @[CSR.scala 330:19]
    _WIRE is invalid @[CSR.scala 330:19]
    _WIRE.usip <= UInt<1>("h00") @[CSR.scala 331:14]
    _WIRE.ssip <= UInt<1>("h00") @[CSR.scala 332:14]
    _WIRE.hsip <= UInt<1>("h00") @[CSR.scala 333:14]
    _WIRE.msip <= UInt<1>("h01") @[CSR.scala 334:14]
    _WIRE.utip <= UInt<1>("h00") @[CSR.scala 335:14]
    _WIRE.stip <= UInt<1>("h00") @[CSR.scala 336:14]
    _WIRE.htip <= UInt<1>("h00") @[CSR.scala 337:14]
    _WIRE.mtip <= UInt<1>("h01") @[CSR.scala 338:14]
    _WIRE.ueip <= UInt<1>("h00") @[CSR.scala 339:14]
    _WIRE.seip <= UInt<1>("h00") @[CSR.scala 340:14]
    _WIRE.heip <= UInt<1>("h00") @[CSR.scala 341:14]
    _WIRE.meip <= UInt<1>("h01") @[CSR.scala 342:14]
    _WIRE.rocc <= UInt<1>("h00") @[CSR.scala 343:14]
    _WIRE.zero1 <= UInt<1>("h00") @[CSR.scala 344:15]
    _WIRE.debug <= UInt<1>("h00") @[CSR.scala 345:15]
    _WIRE.zero2 <= UInt<1>("h00") @[CSR.scala 346:15]
    wire _WIRE_1 : {lip : UInt<1>[0], zero2 : UInt<1>, debug : UInt<1>, zero1 : UInt<1>, rocc : UInt<1>, meip : UInt<1>, heip : UInt<1>, seip : UInt<1>, ueip : UInt<1>, mtip : UInt<1>, htip : UInt<1>, stip : UInt<1>, utip : UInt<1>, msip : UInt<1>, hsip : UInt<1>, ssip : UInt<1>, usip : UInt<1>}
    _WIRE_1 is invalid
    _WIRE_1 <- _WIRE
    _WIRE_1.msip <= UInt<1>("h00") @[CSR.scala 351:14]
    _WIRE_1.mtip <= UInt<1>("h00") @[CSR.scala 352:14]
    _WIRE_1.meip <= UInt<1>("h00") @[CSR.scala 353:14]
    node lo_lo_lo = cat(_WIRE.ssip, _WIRE.usip) @[CSR.scala 355:10]
    node lo_lo_hi = cat(_WIRE.msip, _WIRE.hsip) @[CSR.scala 355:10]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[CSR.scala 355:10]
    node lo_hi_lo = cat(_WIRE.stip, _WIRE.utip) @[CSR.scala 355:10]
    node lo_hi_hi = cat(_WIRE.mtip, _WIRE.htip) @[CSR.scala 355:10]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[CSR.scala 355:10]
    node lo = cat(lo_hi, lo_lo) @[CSR.scala 355:10]
    node hi_lo_lo = cat(_WIRE.seip, _WIRE.ueip) @[CSR.scala 355:10]
    node hi_lo_hi = cat(_WIRE.meip, _WIRE.heip) @[CSR.scala 355:10]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[CSR.scala 355:10]
    node hi_hi_lo = cat(_WIRE.zero1, _WIRE.rocc) @[CSR.scala 355:10]
    node hi_hi_hi = cat(_WIRE.zero2, _WIRE.debug) @[CSR.scala 355:10]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[CSR.scala 355:10]
    node hi = cat(hi_hi, hi_lo) @[CSR.scala 355:10]
    node _T = cat(hi, lo) @[CSR.scala 355:10]
    node supported_interrupts = or(_T, UInt<1>("h00")) @[CSR.scala 355:17]
    node lo_lo_lo_1 = cat(_WIRE_1.ssip, _WIRE_1.usip) @[CSR.scala 355:50]
    node lo_lo_hi_1 = cat(_WIRE_1.msip, _WIRE_1.hsip) @[CSR.scala 355:50]
    node lo_lo_1 = cat(lo_lo_hi_1, lo_lo_lo_1) @[CSR.scala 355:50]
    node lo_hi_lo_1 = cat(_WIRE_1.stip, _WIRE_1.utip) @[CSR.scala 355:50]
    node lo_hi_hi_1 = cat(_WIRE_1.mtip, _WIRE_1.htip) @[CSR.scala 355:50]
    node lo_hi_1 = cat(lo_hi_hi_1, lo_hi_lo_1) @[CSR.scala 355:50]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[CSR.scala 355:50]
    node hi_lo_lo_1 = cat(_WIRE_1.seip, _WIRE_1.ueip) @[CSR.scala 355:50]
    node hi_lo_hi_1 = cat(_WIRE_1.meip, _WIRE_1.heip) @[CSR.scala 355:50]
    node hi_lo_1 = cat(hi_lo_hi_1, hi_lo_lo_1) @[CSR.scala 355:50]
    node hi_hi_lo_1 = cat(_WIRE_1.zero1, _WIRE_1.rocc) @[CSR.scala 355:50]
    node hi_hi_hi_1 = cat(_WIRE_1.zero2, _WIRE_1.debug) @[CSR.scala 355:50]
    node hi_hi_1 = cat(hi_hi_hi_1, hi_hi_lo_1) @[CSR.scala 355:50]
    node hi_1 = cat(hi_hi_1, hi_lo_1) @[CSR.scala 355:50]
    node delegable_interrupts = cat(hi_1, lo_1) @[CSR.scala 355:50]
    reg reg_debug : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[CSR.scala 368:22]
    reg reg_dpc : UInt<32>, clock @[CSR.scala 369:20]
    reg reg_dscratch : UInt<32>, clock @[CSR.scala 370:25]
    reg reg_singleStepped : UInt<1>, clock @[CSR.scala 372:30]
    reg reg_tselect : UInt<1>, clock @[CSR.scala 377:24]
    reg reg_bp : {control : {ttype : UInt<4>, dmode : UInt<1>, maskmax : UInt<6>, reserved : UInt<8>, action : UInt<1>, chain : UInt<1>, zero : UInt<2>, tmatch : UInt<2>, m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, address : UInt<32>, textra : {mvalue : UInt<0>, mselect : UInt<1>, pad2 : UInt<23>, svalue : UInt<0>, pad1 : UInt<1>, sselect : UInt<1>}}[2], clock @[CSR.scala 378:19]
    reg reg_pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>}[8], clock @[CSR.scala 379:20]
    reg reg_mie : UInt<32>, clock @[CSR.scala 381:20]
    reg reg_mideleg : UInt<32>, clock @[CSR.scala 383:18]
    node _T_1 = and(reg_mideleg, delegable_interrupts) @[CSR.scala 384:36]
    node read_mideleg = mux(UInt<1>("h00"), _T_1, UInt<1>("h00")) @[CSR.scala 384:14]
    reg reg_medeleg : UInt<32>, clock @[CSR.scala 387:18]
    node _T_2 = and(reg_medeleg, UInt<16>("h0b15d")) @[CSR.scala 388:36]
    node read_medeleg = mux(UInt<1>("h00"), _T_2, UInt<1>("h00")) @[CSR.scala 388:14]
    reg reg_mip : {lip : UInt<1>[0], zero2 : UInt<1>, debug : UInt<1>, zero1 : UInt<1>, rocc : UInt<1>, meip : UInt<1>, heip : UInt<1>, seip : UInt<1>, ueip : UInt<1>, mtip : UInt<1>, htip : UInt<1>, stip : UInt<1>, utip : UInt<1>, msip : UInt<1>, hsip : UInt<1>, ssip : UInt<1>, usip : UInt<1>}, clock @[CSR.scala 390:20]
    reg reg_mepc : UInt<32>, clock @[CSR.scala 391:21]
    reg reg_mcause : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[CSR.scala 392:27]
    reg reg_mtval : UInt<32>, clock @[CSR.scala 393:22]
    reg reg_mscratch : UInt<32>, clock @[CSR.scala 394:25]
    reg reg_mtvec : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[CSR.scala 397:27]
    wire reset_mnstatus_x39 : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[CSR.scala 401:56]
    reset_mnstatus_x39 is invalid @[CSR.scala 401:56]
    reset_mnstatus_x39.uie <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.sie <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.hie <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.mie <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.upie <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.spie <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.hpie <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.mpie <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.spp <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.vs <= UInt<2>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.mpp <= UInt<2>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.fs <= UInt<2>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.xs <= UInt<2>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.mprv <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.sum <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.mxr <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.tvm <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.tw <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.tsr <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.zero1 <= UInt<8>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.sd_rv32 <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.uxl <= UInt<2>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.sxl <= UInt<2>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.zero2 <= UInt<27>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.sd <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.prv <= UInt<2>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.dprv <= UInt<2>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.isa <= UInt<32>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.wfi <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.cease <= UInt<1>("h00") @[CSR.scala 401:56]
    reset_mnstatus_x39.debug <= UInt<1>("h00") @[CSR.scala 401:56]
    wire reset_mnstatus : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}
    reset_mnstatus is invalid
    reset_mnstatus <- reset_mnstatus_x39
    reset_mnstatus.mpp <= UInt<2>("h03") @[CSR.scala 402:22]
    reg reg_mnscratch : UInt<32>, clock @[CSR.scala 403:26]
    reg reg_mnepc : UInt<32>, clock @[CSR.scala 404:22]
    reg reg_mncause : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[CSR.scala 405:28]
    reg reg_mnstatus : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, clock with : (reset => (reset, reset_mnstatus)) @[CSR.scala 406:25]
    reg reg_rnmie : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[CSR.scala 407:26]
    reg reg_unmie : UInt<1>, clock with : (reset => (reset, UInt<1>("h01"))) @[CSR.scala 408:26]
    node nmie = and(reg_rnmie, reg_unmie) @[CSR.scala 409:24]
    reg reg_mcounteren : UInt<32>, clock @[CSR.scala 413:18]
    node _T_3 = and(reg_mcounteren, UInt<3>("h07")) @[CSR.scala 414:30]
    node read_mcounteren = mux(UInt<1>("h00"), _T_3, UInt<1>("h00")) @[CSR.scala 414:14]
    reg reg_scounteren : UInt<32>, clock @[CSR.scala 417:18]
    node _T_4 = and(reg_scounteren, UInt<3>("h07")) @[CSR.scala 418:36]
    node read_scounteren = mux(UInt<1>("h00"), _T_4, UInt<1>("h00")) @[CSR.scala 418:14]
    reg reg_sepc : UInt<32>, clock @[CSR.scala 421:21]
    reg reg_scause : UInt<32>, clock @[CSR.scala 422:23]
    reg reg_stval : UInt<32>, clock @[CSR.scala 423:22]
    reg reg_sscratch : UInt<32>, clock @[CSR.scala 424:25]
    reg reg_stvec : UInt<32>, clock @[CSR.scala 425:22]
    reg reg_satp : {mode : UInt<1>, asid : UInt<9>, ppn : UInt<22>}, clock @[CSR.scala 426:21]
    reg reg_wfi : UInt<1>, io.ungated_clock with : (reset => (reset, UInt<1>("h00"))) @[CSR.scala 427:50]
    reg reg_fflags : UInt<5>, clock @[CSR.scala 429:23]
    reg reg_frm : UInt<3>, clock @[CSR.scala 430:20]
    reg reg_mcountinhibit : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[CSR.scala 436:34]
    node _io_inhibit_cycle_T = bits(reg_mcountinhibit, 0, 0) @[CSR.scala 437:40]
    io.inhibit_cycle <= _io_inhibit_cycle_T @[CSR.scala 437:20]
    node x67 = bits(reg_mcountinhibit, 2, 2) @[CSR.scala 438:75]
    reg value_lo : UInt<6>, clock with : (reset => (reset, UInt<6>("h00"))) @[Counters.scala 45:37]
    node nextSmall = add(value_lo, io.retire) @[Counters.scala 46:33]
    node _T_5 = eq(x67, UInt<1>("h00")) @[Counters.scala 47:9]
    when _T_5 : @[Counters.scala 47:19]
      value_lo <= nextSmall @[Counters.scala 47:27]
      skip @[Counters.scala 47:19]
    reg value_hi : UInt<58>, clock with : (reset => (reset, UInt<58>("h00"))) @[Counters.scala 50:27]
    node _large_T = bits(nextSmall, 6, 6) @[Counters.scala 51:20]
    node _large_T_1 = eq(x67, UInt<1>("h00")) @[Counters.scala 51:36]
    node _large_T_2 = and(_large_T, _large_T_1) @[Counters.scala 51:33]
    when _large_T_2 : @[Counters.scala 51:46]
      node _large_r_T = add(value_hi, UInt<1>("h01")) @[Counters.scala 51:55]
      node _large_r_T_1 = tail(_large_r_T, 1) @[Counters.scala 51:55]
      value_hi <= _large_r_T_1 @[Counters.scala 51:50]
      skip @[Counters.scala 51:46]
    node value = cat(value_hi, value_lo) @[Cat.scala 30:58]
    node x74 = eq(io.csr_stall, UInt<1>("h00")) @[CSR.scala 440:56]
    node x75 = bits(reg_mcountinhibit, 0, 0) @[CSR.scala 440:98]
    reg value_lo_1 : UInt<6>, io.ungated_clock with : (reset => (reset, UInt<6>("h00"))) @[Counters.scala 45:37]
    node nextSmall_1 = add(value_lo_1, x74) @[Counters.scala 46:33]
    node _T_6 = eq(x75, UInt<1>("h00")) @[Counters.scala 47:9]
    when _T_6 : @[Counters.scala 47:19]
      value_lo_1 <= nextSmall_1 @[Counters.scala 47:27]
      skip @[Counters.scala 47:19]
    reg value_hi_1 : UInt<58>, io.ungated_clock with : (reset => (reset, UInt<58>("h00"))) @[Counters.scala 50:27]
    node _large_T_3 = bits(nextSmall_1, 6, 6) @[Counters.scala 51:20]
    node _large_T_4 = eq(x75, UInt<1>("h00")) @[Counters.scala 51:36]
    node _large_T_5 = and(_large_T_3, _large_T_4) @[Counters.scala 51:33]
    when _large_T_5 : @[Counters.scala 51:46]
      node _large_r_T_2 = add(value_hi_1, UInt<1>("h01")) @[Counters.scala 51:55]
      node _large_r_T_3 = tail(_large_r_T_2, 1) @[Counters.scala 51:55]
      value_hi_1 <= _large_r_T_3 @[Counters.scala 51:50]
      skip @[Counters.scala 51:46]
    node value_1 = cat(value_hi_1, value_lo_1) @[Cat.scala 30:58]
    wire mip : {lip : UInt<1>[0], zero2 : UInt<1>, debug : UInt<1>, zero1 : UInt<1>, rocc : UInt<1>, meip : UInt<1>, heip : UInt<1>, seip : UInt<1>, ueip : UInt<1>, mtip : UInt<1>, htip : UInt<1>, stip : UInt<1>, utip : UInt<1>, msip : UInt<1>, hsip : UInt<1>, ssip : UInt<1>, usip : UInt<1>}
    mip is invalid
    mip <- reg_mip
    mip.mtip <= io.interrupts.mtip @[CSR.scala 448:12]
    mip.msip <= io.interrupts.msip @[CSR.scala 449:12]
    mip.meip <= io.interrupts.meip @[CSR.scala 450:12]
    mip.rocc <= io.rocc_interrupt @[CSR.scala 453:12]
    node read_mip_lo_lo_lo = cat(mip.ssip, mip.usip) @[CSR.scala 454:22]
    node read_mip_lo_lo_hi = cat(mip.msip, mip.hsip) @[CSR.scala 454:22]
    node read_mip_lo_lo = cat(read_mip_lo_lo_hi, read_mip_lo_lo_lo) @[CSR.scala 454:22]
    node read_mip_lo_hi_lo = cat(mip.stip, mip.utip) @[CSR.scala 454:22]
    node read_mip_lo_hi_hi = cat(mip.mtip, mip.htip) @[CSR.scala 454:22]
    node read_mip_lo_hi = cat(read_mip_lo_hi_hi, read_mip_lo_hi_lo) @[CSR.scala 454:22]
    node read_mip_lo = cat(read_mip_lo_hi, read_mip_lo_lo) @[CSR.scala 454:22]
    node read_mip_hi_lo_lo = cat(mip.seip, mip.ueip) @[CSR.scala 454:22]
    node read_mip_hi_lo_hi = cat(mip.meip, mip.heip) @[CSR.scala 454:22]
    node read_mip_hi_lo = cat(read_mip_hi_lo_hi, read_mip_hi_lo_lo) @[CSR.scala 454:22]
    node read_mip_hi_hi_lo = cat(mip.zero1, mip.rocc) @[CSR.scala 454:22]
    node read_mip_hi_hi_hi = cat(mip.zero2, mip.debug) @[CSR.scala 454:22]
    node read_mip_hi_hi = cat(read_mip_hi_hi_hi, read_mip_hi_hi_lo) @[CSR.scala 454:22]
    node read_mip_hi = cat(read_mip_hi_hi, read_mip_hi_lo) @[CSR.scala 454:22]
    node _read_mip_T = cat(read_mip_hi, read_mip_lo) @[CSR.scala 454:22]
    node read_mip = and(_read_mip_T, supported_interrupts) @[CSR.scala 454:29]
    node _pending_interrupts_T = and(read_mip, reg_mie) @[CSR.scala 457:56]
    node pending_interrupts = or(UInt<1>("h00"), _pending_interrupts_T) @[CSR.scala 457:44]
    node d_interrupts = shl(io.interrupts.debug, 14) @[CSR.scala 458:42]
    node _m_interrupts_T = leq(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 464:51]
    node _m_interrupts_T_1 = or(_m_interrupts_T, reg_mstatus.mie) @[CSR.scala 464:60]
    node _m_interrupts_T_2 = and(nmie, _m_interrupts_T_1) @[CSR.scala 464:31]
    node _m_interrupts_T_3 = not(pending_interrupts) @[CSR.scala 464:83]
    node _m_interrupts_T_4 = or(_m_interrupts_T_3, read_mideleg) @[CSR.scala 464:103]
    node _m_interrupts_T_5 = not(_m_interrupts_T_4) @[CSR.scala 464:81]
    node m_interrupts = mux(_m_interrupts_T_2, _m_interrupts_T_5, UInt<1>("h00")) @[CSR.scala 464:25]
    node _s_interrupts_T = lt(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 465:51]
    node _s_interrupts_T_1 = eq(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 465:79]
    node _s_interrupts_T_2 = and(_s_interrupts_T_1, reg_mstatus.sie) @[CSR.scala 465:89]
    node _s_interrupts_T_3 = or(_s_interrupts_T, _s_interrupts_T_2) @[CSR.scala 465:59]
    node _s_interrupts_T_4 = and(nmie, _s_interrupts_T_3) @[CSR.scala 465:31]
    node _s_interrupts_T_5 = and(pending_interrupts, read_mideleg) @[CSR.scala 465:130]
    node s_interrupts = mux(_s_interrupts_T_4, _s_interrupts_T_5, UInt<1>("h00")) @[CSR.scala 465:25]
    node _any_T = bits(d_interrupts, 14, 14) @[CSR.scala 1177:76]
    node _any_T_1 = bits(d_interrupts, 13, 13) @[CSR.scala 1177:76]
    node _any_T_2 = bits(d_interrupts, 12, 12) @[CSR.scala 1177:76]
    node _any_T_3 = bits(d_interrupts, 11, 11) @[CSR.scala 1177:76]
    node _any_T_4 = bits(d_interrupts, 3, 3) @[CSR.scala 1177:76]
    node _any_T_5 = bits(d_interrupts, 7, 7) @[CSR.scala 1177:76]
    node _any_T_6 = bits(d_interrupts, 9, 9) @[CSR.scala 1177:76]
    node _any_T_7 = bits(d_interrupts, 1, 1) @[CSR.scala 1177:76]
    node _any_T_8 = bits(d_interrupts, 5, 5) @[CSR.scala 1177:76]
    node _any_T_9 = bits(d_interrupts, 8, 8) @[CSR.scala 1177:76]
    node _any_T_10 = bits(d_interrupts, 0, 0) @[CSR.scala 1177:76]
    node _any_T_11 = bits(d_interrupts, 4, 4) @[CSR.scala 1177:76]
    node _any_T_12 = bits(m_interrupts, 15, 15) @[CSR.scala 1177:76]
    node _any_T_13 = bits(m_interrupts, 14, 14) @[CSR.scala 1177:76]
    node _any_T_14 = bits(m_interrupts, 13, 13) @[CSR.scala 1177:76]
    node _any_T_15 = bits(m_interrupts, 12, 12) @[CSR.scala 1177:76]
    node _any_T_16 = bits(m_interrupts, 11, 11) @[CSR.scala 1177:76]
    node _any_T_17 = bits(m_interrupts, 3, 3) @[CSR.scala 1177:76]
    node _any_T_18 = bits(m_interrupts, 7, 7) @[CSR.scala 1177:76]
    node _any_T_19 = bits(m_interrupts, 9, 9) @[CSR.scala 1177:76]
    node _any_T_20 = bits(m_interrupts, 1, 1) @[CSR.scala 1177:76]
    node _any_T_21 = bits(m_interrupts, 5, 5) @[CSR.scala 1177:76]
    node _any_T_22 = bits(m_interrupts, 8, 8) @[CSR.scala 1177:76]
    node _any_T_23 = bits(m_interrupts, 0, 0) @[CSR.scala 1177:76]
    node _any_T_24 = bits(m_interrupts, 4, 4) @[CSR.scala 1177:76]
    node _any_T_25 = bits(s_interrupts, 15, 15) @[CSR.scala 1177:76]
    node _any_T_26 = bits(s_interrupts, 14, 14) @[CSR.scala 1177:76]
    node _any_T_27 = bits(s_interrupts, 13, 13) @[CSR.scala 1177:76]
    node _any_T_28 = bits(s_interrupts, 12, 12) @[CSR.scala 1177:76]
    node _any_T_29 = bits(s_interrupts, 11, 11) @[CSR.scala 1177:76]
    node _any_T_30 = bits(s_interrupts, 3, 3) @[CSR.scala 1177:76]
    node _any_T_31 = bits(s_interrupts, 7, 7) @[CSR.scala 1177:76]
    node _any_T_32 = bits(s_interrupts, 9, 9) @[CSR.scala 1177:76]
    node _any_T_33 = bits(s_interrupts, 1, 1) @[CSR.scala 1177:76]
    node _any_T_34 = bits(s_interrupts, 5, 5) @[CSR.scala 1177:76]
    node _any_T_35 = bits(s_interrupts, 8, 8) @[CSR.scala 1177:76]
    node _any_T_36 = bits(s_interrupts, 0, 0) @[CSR.scala 1177:76]
    node _any_T_37 = bits(s_interrupts, 4, 4) @[CSR.scala 1177:76]
    node _any_T_38 = or(_any_T, _any_T_1) @[CSR.scala 1177:90]
    node _any_T_39 = or(_any_T_38, _any_T_2) @[CSR.scala 1177:90]
    node _any_T_40 = or(_any_T_39, _any_T_3) @[CSR.scala 1177:90]
    node _any_T_41 = or(_any_T_40, _any_T_4) @[CSR.scala 1177:90]
    node _any_T_42 = or(_any_T_41, _any_T_5) @[CSR.scala 1177:90]
    node _any_T_43 = or(_any_T_42, _any_T_6) @[CSR.scala 1177:90]
    node _any_T_44 = or(_any_T_43, _any_T_7) @[CSR.scala 1177:90]
    node _any_T_45 = or(_any_T_44, _any_T_8) @[CSR.scala 1177:90]
    node _any_T_46 = or(_any_T_45, _any_T_9) @[CSR.scala 1177:90]
    node _any_T_47 = or(_any_T_46, _any_T_10) @[CSR.scala 1177:90]
    node _any_T_48 = or(_any_T_47, _any_T_11) @[CSR.scala 1177:90]
    node _any_T_49 = or(_any_T_48, UInt<1>("h00")) @[CSR.scala 1177:90]
    node _any_T_50 = or(_any_T_49, _any_T_12) @[CSR.scala 1177:90]
    node _any_T_51 = or(_any_T_50, _any_T_13) @[CSR.scala 1177:90]
    node _any_T_52 = or(_any_T_51, _any_T_14) @[CSR.scala 1177:90]
    node _any_T_53 = or(_any_T_52, _any_T_15) @[CSR.scala 1177:90]
    node _any_T_54 = or(_any_T_53, _any_T_16) @[CSR.scala 1177:90]
    node _any_T_55 = or(_any_T_54, _any_T_17) @[CSR.scala 1177:90]
    node _any_T_56 = or(_any_T_55, _any_T_18) @[CSR.scala 1177:90]
    node _any_T_57 = or(_any_T_56, _any_T_19) @[CSR.scala 1177:90]
    node _any_T_58 = or(_any_T_57, _any_T_20) @[CSR.scala 1177:90]
    node _any_T_59 = or(_any_T_58, _any_T_21) @[CSR.scala 1177:90]
    node _any_T_60 = or(_any_T_59, _any_T_22) @[CSR.scala 1177:90]
    node _any_T_61 = or(_any_T_60, _any_T_23) @[CSR.scala 1177:90]
    node _any_T_62 = or(_any_T_61, _any_T_24) @[CSR.scala 1177:90]
    node _any_T_63 = or(_any_T_62, _any_T_25) @[CSR.scala 1177:90]
    node _any_T_64 = or(_any_T_63, _any_T_26) @[CSR.scala 1177:90]
    node _any_T_65 = or(_any_T_64, _any_T_27) @[CSR.scala 1177:90]
    node _any_T_66 = or(_any_T_65, _any_T_28) @[CSR.scala 1177:90]
    node _any_T_67 = or(_any_T_66, _any_T_29) @[CSR.scala 1177:90]
    node _any_T_68 = or(_any_T_67, _any_T_30) @[CSR.scala 1177:90]
    node _any_T_69 = or(_any_T_68, _any_T_31) @[CSR.scala 1177:90]
    node _any_T_70 = or(_any_T_69, _any_T_32) @[CSR.scala 1177:90]
    node _any_T_71 = or(_any_T_70, _any_T_33) @[CSR.scala 1177:90]
    node _any_T_72 = or(_any_T_71, _any_T_34) @[CSR.scala 1177:90]
    node _any_T_73 = or(_any_T_72, _any_T_35) @[CSR.scala 1177:90]
    node _any_T_74 = or(_any_T_73, _any_T_36) @[CSR.scala 1177:90]
    node anyInterrupt = or(_any_T_74, _any_T_37) @[CSR.scala 1177:90]
    node _which_T = bits(d_interrupts, 14, 14) @[CSR.scala 1178:91]
    node _which_T_1 = bits(d_interrupts, 13, 13) @[CSR.scala 1178:91]
    node _which_T_2 = bits(d_interrupts, 12, 12) @[CSR.scala 1178:91]
    node _which_T_3 = bits(d_interrupts, 11, 11) @[CSR.scala 1178:91]
    node _which_T_4 = bits(d_interrupts, 3, 3) @[CSR.scala 1178:91]
    node _which_T_5 = bits(d_interrupts, 7, 7) @[CSR.scala 1178:91]
    node _which_T_6 = bits(d_interrupts, 9, 9) @[CSR.scala 1178:91]
    node _which_T_7 = bits(d_interrupts, 1, 1) @[CSR.scala 1178:91]
    node _which_T_8 = bits(d_interrupts, 5, 5) @[CSR.scala 1178:91]
    node _which_T_9 = bits(d_interrupts, 8, 8) @[CSR.scala 1178:91]
    node _which_T_10 = bits(d_interrupts, 0, 0) @[CSR.scala 1178:91]
    node _which_T_11 = bits(d_interrupts, 4, 4) @[CSR.scala 1178:91]
    node _which_T_12 = bits(m_interrupts, 15, 15) @[CSR.scala 1178:91]
    node _which_T_13 = bits(m_interrupts, 14, 14) @[CSR.scala 1178:91]
    node _which_T_14 = bits(m_interrupts, 13, 13) @[CSR.scala 1178:91]
    node _which_T_15 = bits(m_interrupts, 12, 12) @[CSR.scala 1178:91]
    node _which_T_16 = bits(m_interrupts, 11, 11) @[CSR.scala 1178:91]
    node _which_T_17 = bits(m_interrupts, 3, 3) @[CSR.scala 1178:91]
    node _which_T_18 = bits(m_interrupts, 7, 7) @[CSR.scala 1178:91]
    node _which_T_19 = bits(m_interrupts, 9, 9) @[CSR.scala 1178:91]
    node _which_T_20 = bits(m_interrupts, 1, 1) @[CSR.scala 1178:91]
    node _which_T_21 = bits(m_interrupts, 5, 5) @[CSR.scala 1178:91]
    node _which_T_22 = bits(m_interrupts, 8, 8) @[CSR.scala 1178:91]
    node _which_T_23 = bits(m_interrupts, 0, 0) @[CSR.scala 1178:91]
    node _which_T_24 = bits(m_interrupts, 4, 4) @[CSR.scala 1178:91]
    node _which_T_25 = bits(s_interrupts, 15, 15) @[CSR.scala 1178:91]
    node _which_T_26 = bits(s_interrupts, 14, 14) @[CSR.scala 1178:91]
    node _which_T_27 = bits(s_interrupts, 13, 13) @[CSR.scala 1178:91]
    node _which_T_28 = bits(s_interrupts, 12, 12) @[CSR.scala 1178:91]
    node _which_T_29 = bits(s_interrupts, 11, 11) @[CSR.scala 1178:91]
    node _which_T_30 = bits(s_interrupts, 3, 3) @[CSR.scala 1178:91]
    node _which_T_31 = bits(s_interrupts, 7, 7) @[CSR.scala 1178:91]
    node _which_T_32 = bits(s_interrupts, 9, 9) @[CSR.scala 1178:91]
    node _which_T_33 = bits(s_interrupts, 1, 1) @[CSR.scala 1178:91]
    node _which_T_34 = bits(s_interrupts, 5, 5) @[CSR.scala 1178:91]
    node _which_T_35 = bits(s_interrupts, 8, 8) @[CSR.scala 1178:91]
    node _which_T_36 = bits(s_interrupts, 0, 0) @[CSR.scala 1178:91]
    node _which_T_37 = bits(s_interrupts, 4, 4) @[CSR.scala 1178:91]
    node _which_T_38 = mux(_which_T_36, UInt<1>("h00"), UInt<3>("h04")) @[Mux.scala 47:69]
    node _which_T_39 = mux(_which_T_35, UInt<4>("h08"), _which_T_38) @[Mux.scala 47:69]
    node _which_T_40 = mux(_which_T_34, UInt<3>("h05"), _which_T_39) @[Mux.scala 47:69]
    node _which_T_41 = mux(_which_T_33, UInt<1>("h01"), _which_T_40) @[Mux.scala 47:69]
    node _which_T_42 = mux(_which_T_32, UInt<4>("h09"), _which_T_41) @[Mux.scala 47:69]
    node _which_T_43 = mux(_which_T_31, UInt<3>("h07"), _which_T_42) @[Mux.scala 47:69]
    node _which_T_44 = mux(_which_T_30, UInt<2>("h03"), _which_T_43) @[Mux.scala 47:69]
    node _which_T_45 = mux(_which_T_29, UInt<4>("h0b"), _which_T_44) @[Mux.scala 47:69]
    node _which_T_46 = mux(_which_T_28, UInt<4>("h0c"), _which_T_45) @[Mux.scala 47:69]
    node _which_T_47 = mux(_which_T_27, UInt<4>("h0d"), _which_T_46) @[Mux.scala 47:69]
    node _which_T_48 = mux(_which_T_26, UInt<4>("h0e"), _which_T_47) @[Mux.scala 47:69]
    node _which_T_49 = mux(_which_T_25, UInt<4>("h0f"), _which_T_48) @[Mux.scala 47:69]
    node _which_T_50 = mux(_which_T_24, UInt<3>("h04"), _which_T_49) @[Mux.scala 47:69]
    node _which_T_51 = mux(_which_T_23, UInt<1>("h00"), _which_T_50) @[Mux.scala 47:69]
    node _which_T_52 = mux(_which_T_22, UInt<4>("h08"), _which_T_51) @[Mux.scala 47:69]
    node _which_T_53 = mux(_which_T_21, UInt<3>("h05"), _which_T_52) @[Mux.scala 47:69]
    node _which_T_54 = mux(_which_T_20, UInt<1>("h01"), _which_T_53) @[Mux.scala 47:69]
    node _which_T_55 = mux(_which_T_19, UInt<4>("h09"), _which_T_54) @[Mux.scala 47:69]
    node _which_T_56 = mux(_which_T_18, UInt<3>("h07"), _which_T_55) @[Mux.scala 47:69]
    node _which_T_57 = mux(_which_T_17, UInt<2>("h03"), _which_T_56) @[Mux.scala 47:69]
    node _which_T_58 = mux(_which_T_16, UInt<4>("h0b"), _which_T_57) @[Mux.scala 47:69]
    node _which_T_59 = mux(_which_T_15, UInt<4>("h0c"), _which_T_58) @[Mux.scala 47:69]
    node _which_T_60 = mux(_which_T_14, UInt<4>("h0d"), _which_T_59) @[Mux.scala 47:69]
    node _which_T_61 = mux(_which_T_13, UInt<4>("h0e"), _which_T_60) @[Mux.scala 47:69]
    node _which_T_62 = mux(_which_T_12, UInt<4>("h0f"), _which_T_61) @[Mux.scala 47:69]
    node _which_T_63 = mux(UInt<1>("h00"), UInt<1>("h00"), _which_T_62) @[Mux.scala 47:69]
    node _which_T_64 = mux(_which_T_11, UInt<3>("h04"), _which_T_63) @[Mux.scala 47:69]
    node _which_T_65 = mux(_which_T_10, UInt<1>("h00"), _which_T_64) @[Mux.scala 47:69]
    node _which_T_66 = mux(_which_T_9, UInt<4>("h08"), _which_T_65) @[Mux.scala 47:69]
    node _which_T_67 = mux(_which_T_8, UInt<3>("h05"), _which_T_66) @[Mux.scala 47:69]
    node _which_T_68 = mux(_which_T_7, UInt<1>("h01"), _which_T_67) @[Mux.scala 47:69]
    node _which_T_69 = mux(_which_T_6, UInt<4>("h09"), _which_T_68) @[Mux.scala 47:69]
    node _which_T_70 = mux(_which_T_5, UInt<3>("h07"), _which_T_69) @[Mux.scala 47:69]
    node _which_T_71 = mux(_which_T_4, UInt<2>("h03"), _which_T_70) @[Mux.scala 47:69]
    node _which_T_72 = mux(_which_T_3, UInt<4>("h0b"), _which_T_71) @[Mux.scala 47:69]
    node _which_T_73 = mux(_which_T_2, UInt<4>("h0c"), _which_T_72) @[Mux.scala 47:69]
    node _which_T_74 = mux(_which_T_1, UInt<4>("h0d"), _which_T_73) @[Mux.scala 47:69]
    node whichInterrupt = mux(_which_T, UInt<4>("h0e"), _which_T_74) @[Mux.scala 47:69]
    node _interruptCause_T = shl(UInt<1>("h00"), 30) @[CSR.scala 468:54]
    node _interruptCause_T_1 = add(UInt<32>("h080000000"), _interruptCause_T) @[CSR.scala 468:43]
    node _interruptCause_T_2 = tail(_interruptCause_T_1, 1) @[CSR.scala 468:43]
    node _interruptCause_T_3 = add(_interruptCause_T_2, whichInterrupt) @[CSR.scala 468:67]
    node interruptCause = tail(_interruptCause_T_3, 1) @[CSR.scala 468:67]
    node _io_interrupt_T = eq(io.singleStep, UInt<1>("h00")) @[CSR.scala 469:36]
    node _io_interrupt_T_1 = and(anyInterrupt, _io_interrupt_T) @[CSR.scala 469:33]
    node _io_interrupt_T_2 = or(_io_interrupt_T_1, reg_singleStepped) @[CSR.scala 469:51]
    node _io_interrupt_T_3 = or(reg_debug, io.status.cease) @[CSR.scala 469:88]
    node _io_interrupt_T_4 = eq(_io_interrupt_T_3, UInt<1>("h00")) @[CSR.scala 469:76]
    node _io_interrupt_T_5 = and(_io_interrupt_T_2, _io_interrupt_T_4) @[CSR.scala 469:73]
    io.interrupt <= _io_interrupt_T_5 @[CSR.scala 469:16]
    io.interrupt_cause <= interruptCause @[CSR.scala 470:22]
    io.bp[0] <- reg_bp[0] @[CSR.scala 471:9]
    io.mcontext <= UInt<1>("h00") @[CSR.scala 472:15]
    io.scontext <= UInt<1>("h00") @[CSR.scala 473:15]
    wire pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 26:19]
    pmp.cfg.r <= reg_pmp[0].cfg.r @[PMP.scala 27:13]
    pmp.cfg.w <= reg_pmp[0].cfg.w @[PMP.scala 27:13]
    pmp.cfg.x <= reg_pmp[0].cfg.x @[PMP.scala 27:13]
    pmp.cfg.a <= reg_pmp[0].cfg.a @[PMP.scala 27:13]
    pmp.cfg.res <= reg_pmp[0].cfg.res @[PMP.scala 27:13]
    pmp.cfg.l <= reg_pmp[0].cfg.l @[PMP.scala 27:13]
    pmp.addr <= reg_pmp[0].addr @[PMP.scala 28:14]
    node pmp_mask_base_lo = bits(pmp.cfg.a, 0, 0) @[PMP.scala 59:31]
    node _pmp_mask_base_T = cat(pmp.addr, pmp_mask_base_lo) @[Cat.scala 30:58]
    node pmp_mask_base = or(_pmp_mask_base_T, UInt<1>("h00")) @[PMP.scala 59:36]
    node _pmp_mask_T = add(pmp_mask_base, UInt<1>("h01")) @[PMP.scala 60:23]
    node _pmp_mask_T_1 = tail(_pmp_mask_T, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_2 = not(_pmp_mask_T_1) @[PMP.scala 60:16]
    node pmp_mask_hi = and(pmp_mask_base, _pmp_mask_T_2) @[PMP.scala 60:14]
    node _pmp_mask_T_3 = cat(pmp_mask_hi, UInt<2>("h03")) @[Cat.scala 30:58]
    pmp.mask <= _pmp_mask_T_3 @[PMP.scala 29:14]
    wire pmp_1 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 26:19]
    pmp_1.cfg.r <= reg_pmp[1].cfg.r @[PMP.scala 27:13]
    pmp_1.cfg.w <= reg_pmp[1].cfg.w @[PMP.scala 27:13]
    pmp_1.cfg.x <= reg_pmp[1].cfg.x @[PMP.scala 27:13]
    pmp_1.cfg.a <= reg_pmp[1].cfg.a @[PMP.scala 27:13]
    pmp_1.cfg.res <= reg_pmp[1].cfg.res @[PMP.scala 27:13]
    pmp_1.cfg.l <= reg_pmp[1].cfg.l @[PMP.scala 27:13]
    pmp_1.addr <= reg_pmp[1].addr @[PMP.scala 28:14]
    node pmp_mask_base_lo_1 = bits(pmp_1.cfg.a, 0, 0) @[PMP.scala 59:31]
    node _pmp_mask_base_T_1 = cat(pmp_1.addr, pmp_mask_base_lo_1) @[Cat.scala 30:58]
    node pmp_mask_base_1 = or(_pmp_mask_base_T_1, UInt<1>("h00")) @[PMP.scala 59:36]
    node _pmp_mask_T_4 = add(pmp_mask_base_1, UInt<1>("h01")) @[PMP.scala 60:23]
    node _pmp_mask_T_5 = tail(_pmp_mask_T_4, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_6 = not(_pmp_mask_T_5) @[PMP.scala 60:16]
    node pmp_mask_hi_1 = and(pmp_mask_base_1, _pmp_mask_T_6) @[PMP.scala 60:14]
    node _pmp_mask_T_7 = cat(pmp_mask_hi_1, UInt<2>("h03")) @[Cat.scala 30:58]
    pmp_1.mask <= _pmp_mask_T_7 @[PMP.scala 29:14]
    wire pmp_2 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 26:19]
    pmp_2.cfg.r <= reg_pmp[2].cfg.r @[PMP.scala 27:13]
    pmp_2.cfg.w <= reg_pmp[2].cfg.w @[PMP.scala 27:13]
    pmp_2.cfg.x <= reg_pmp[2].cfg.x @[PMP.scala 27:13]
    pmp_2.cfg.a <= reg_pmp[2].cfg.a @[PMP.scala 27:13]
    pmp_2.cfg.res <= reg_pmp[2].cfg.res @[PMP.scala 27:13]
    pmp_2.cfg.l <= reg_pmp[2].cfg.l @[PMP.scala 27:13]
    pmp_2.addr <= reg_pmp[2].addr @[PMP.scala 28:14]
    node pmp_mask_base_lo_2 = bits(pmp_2.cfg.a, 0, 0) @[PMP.scala 59:31]
    node _pmp_mask_base_T_2 = cat(pmp_2.addr, pmp_mask_base_lo_2) @[Cat.scala 30:58]
    node pmp_mask_base_2 = or(_pmp_mask_base_T_2, UInt<1>("h00")) @[PMP.scala 59:36]
    node _pmp_mask_T_8 = add(pmp_mask_base_2, UInt<1>("h01")) @[PMP.scala 60:23]
    node _pmp_mask_T_9 = tail(_pmp_mask_T_8, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_10 = not(_pmp_mask_T_9) @[PMP.scala 60:16]
    node pmp_mask_hi_2 = and(pmp_mask_base_2, _pmp_mask_T_10) @[PMP.scala 60:14]
    node _pmp_mask_T_11 = cat(pmp_mask_hi_2, UInt<2>("h03")) @[Cat.scala 30:58]
    pmp_2.mask <= _pmp_mask_T_11 @[PMP.scala 29:14]
    wire pmp_3 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 26:19]
    pmp_3.cfg.r <= reg_pmp[3].cfg.r @[PMP.scala 27:13]
    pmp_3.cfg.w <= reg_pmp[3].cfg.w @[PMP.scala 27:13]
    pmp_3.cfg.x <= reg_pmp[3].cfg.x @[PMP.scala 27:13]
    pmp_3.cfg.a <= reg_pmp[3].cfg.a @[PMP.scala 27:13]
    pmp_3.cfg.res <= reg_pmp[3].cfg.res @[PMP.scala 27:13]
    pmp_3.cfg.l <= reg_pmp[3].cfg.l @[PMP.scala 27:13]
    pmp_3.addr <= reg_pmp[3].addr @[PMP.scala 28:14]
    node pmp_mask_base_lo_3 = bits(pmp_3.cfg.a, 0, 0) @[PMP.scala 59:31]
    node _pmp_mask_base_T_3 = cat(pmp_3.addr, pmp_mask_base_lo_3) @[Cat.scala 30:58]
    node pmp_mask_base_3 = or(_pmp_mask_base_T_3, UInt<1>("h00")) @[PMP.scala 59:36]
    node _pmp_mask_T_12 = add(pmp_mask_base_3, UInt<1>("h01")) @[PMP.scala 60:23]
    node _pmp_mask_T_13 = tail(_pmp_mask_T_12, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_14 = not(_pmp_mask_T_13) @[PMP.scala 60:16]
    node pmp_mask_hi_3 = and(pmp_mask_base_3, _pmp_mask_T_14) @[PMP.scala 60:14]
    node _pmp_mask_T_15 = cat(pmp_mask_hi_3, UInt<2>("h03")) @[Cat.scala 30:58]
    pmp_3.mask <= _pmp_mask_T_15 @[PMP.scala 29:14]
    wire pmp_4 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 26:19]
    pmp_4.cfg.r <= reg_pmp[4].cfg.r @[PMP.scala 27:13]
    pmp_4.cfg.w <= reg_pmp[4].cfg.w @[PMP.scala 27:13]
    pmp_4.cfg.x <= reg_pmp[4].cfg.x @[PMP.scala 27:13]
    pmp_4.cfg.a <= reg_pmp[4].cfg.a @[PMP.scala 27:13]
    pmp_4.cfg.res <= reg_pmp[4].cfg.res @[PMP.scala 27:13]
    pmp_4.cfg.l <= reg_pmp[4].cfg.l @[PMP.scala 27:13]
    pmp_4.addr <= reg_pmp[4].addr @[PMP.scala 28:14]
    node pmp_mask_base_lo_4 = bits(pmp_4.cfg.a, 0, 0) @[PMP.scala 59:31]
    node _pmp_mask_base_T_4 = cat(pmp_4.addr, pmp_mask_base_lo_4) @[Cat.scala 30:58]
    node pmp_mask_base_4 = or(_pmp_mask_base_T_4, UInt<1>("h00")) @[PMP.scala 59:36]
    node _pmp_mask_T_16 = add(pmp_mask_base_4, UInt<1>("h01")) @[PMP.scala 60:23]
    node _pmp_mask_T_17 = tail(_pmp_mask_T_16, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_18 = not(_pmp_mask_T_17) @[PMP.scala 60:16]
    node pmp_mask_hi_4 = and(pmp_mask_base_4, _pmp_mask_T_18) @[PMP.scala 60:14]
    node _pmp_mask_T_19 = cat(pmp_mask_hi_4, UInt<2>("h03")) @[Cat.scala 30:58]
    pmp_4.mask <= _pmp_mask_T_19 @[PMP.scala 29:14]
    wire pmp_5 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 26:19]
    pmp_5.cfg.r <= reg_pmp[5].cfg.r @[PMP.scala 27:13]
    pmp_5.cfg.w <= reg_pmp[5].cfg.w @[PMP.scala 27:13]
    pmp_5.cfg.x <= reg_pmp[5].cfg.x @[PMP.scala 27:13]
    pmp_5.cfg.a <= reg_pmp[5].cfg.a @[PMP.scala 27:13]
    pmp_5.cfg.res <= reg_pmp[5].cfg.res @[PMP.scala 27:13]
    pmp_5.cfg.l <= reg_pmp[5].cfg.l @[PMP.scala 27:13]
    pmp_5.addr <= reg_pmp[5].addr @[PMP.scala 28:14]
    node pmp_mask_base_lo_5 = bits(pmp_5.cfg.a, 0, 0) @[PMP.scala 59:31]
    node _pmp_mask_base_T_5 = cat(pmp_5.addr, pmp_mask_base_lo_5) @[Cat.scala 30:58]
    node pmp_mask_base_5 = or(_pmp_mask_base_T_5, UInt<1>("h00")) @[PMP.scala 59:36]
    node _pmp_mask_T_20 = add(pmp_mask_base_5, UInt<1>("h01")) @[PMP.scala 60:23]
    node _pmp_mask_T_21 = tail(_pmp_mask_T_20, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_22 = not(_pmp_mask_T_21) @[PMP.scala 60:16]
    node pmp_mask_hi_5 = and(pmp_mask_base_5, _pmp_mask_T_22) @[PMP.scala 60:14]
    node _pmp_mask_T_23 = cat(pmp_mask_hi_5, UInt<2>("h03")) @[Cat.scala 30:58]
    pmp_5.mask <= _pmp_mask_T_23 @[PMP.scala 29:14]
    wire pmp_6 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 26:19]
    pmp_6.cfg.r <= reg_pmp[6].cfg.r @[PMP.scala 27:13]
    pmp_6.cfg.w <= reg_pmp[6].cfg.w @[PMP.scala 27:13]
    pmp_6.cfg.x <= reg_pmp[6].cfg.x @[PMP.scala 27:13]
    pmp_6.cfg.a <= reg_pmp[6].cfg.a @[PMP.scala 27:13]
    pmp_6.cfg.res <= reg_pmp[6].cfg.res @[PMP.scala 27:13]
    pmp_6.cfg.l <= reg_pmp[6].cfg.l @[PMP.scala 27:13]
    pmp_6.addr <= reg_pmp[6].addr @[PMP.scala 28:14]
    node pmp_mask_base_lo_6 = bits(pmp_6.cfg.a, 0, 0) @[PMP.scala 59:31]
    node _pmp_mask_base_T_6 = cat(pmp_6.addr, pmp_mask_base_lo_6) @[Cat.scala 30:58]
    node pmp_mask_base_6 = or(_pmp_mask_base_T_6, UInt<1>("h00")) @[PMP.scala 59:36]
    node _pmp_mask_T_24 = add(pmp_mask_base_6, UInt<1>("h01")) @[PMP.scala 60:23]
    node _pmp_mask_T_25 = tail(_pmp_mask_T_24, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_26 = not(_pmp_mask_T_25) @[PMP.scala 60:16]
    node pmp_mask_hi_6 = and(pmp_mask_base_6, _pmp_mask_T_26) @[PMP.scala 60:14]
    node _pmp_mask_T_27 = cat(pmp_mask_hi_6, UInt<2>("h03")) @[Cat.scala 30:58]
    pmp_6.mask <= _pmp_mask_T_27 @[PMP.scala 29:14]
    wire pmp_7 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 26:19]
    pmp_7.cfg.r <= reg_pmp[7].cfg.r @[PMP.scala 27:13]
    pmp_7.cfg.w <= reg_pmp[7].cfg.w @[PMP.scala 27:13]
    pmp_7.cfg.x <= reg_pmp[7].cfg.x @[PMP.scala 27:13]
    pmp_7.cfg.a <= reg_pmp[7].cfg.a @[PMP.scala 27:13]
    pmp_7.cfg.res <= reg_pmp[7].cfg.res @[PMP.scala 27:13]
    pmp_7.cfg.l <= reg_pmp[7].cfg.l @[PMP.scala 27:13]
    pmp_7.addr <= reg_pmp[7].addr @[PMP.scala 28:14]
    node pmp_mask_base_lo_7 = bits(pmp_7.cfg.a, 0, 0) @[PMP.scala 59:31]
    node _pmp_mask_base_T_7 = cat(pmp_7.addr, pmp_mask_base_lo_7) @[Cat.scala 30:58]
    node pmp_mask_base_7 = or(_pmp_mask_base_T_7, UInt<1>("h00")) @[PMP.scala 59:36]
    node _pmp_mask_T_28 = add(pmp_mask_base_7, UInt<1>("h01")) @[PMP.scala 60:23]
    node _pmp_mask_T_29 = tail(_pmp_mask_T_28, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_30 = not(_pmp_mask_T_29) @[PMP.scala 60:16]
    node pmp_mask_hi_7 = and(pmp_mask_base_7, _pmp_mask_T_30) @[PMP.scala 60:14]
    node _pmp_mask_T_31 = cat(pmp_mask_hi_7, UInt<2>("h03")) @[Cat.scala 30:58]
    pmp_7.mask <= _pmp_mask_T_31 @[PMP.scala 29:14]
    io.pmp[0] <- pmp @[CSR.scala 474:10]
    io.pmp[1] <- pmp_1 @[CSR.scala 474:10]
    io.pmp[2] <- pmp_2 @[CSR.scala 474:10]
    io.pmp[3] <- pmp_3 @[CSR.scala 474:10]
    io.pmp[4] <- pmp_4 @[CSR.scala 474:10]
    io.pmp[5] <- pmp_5 @[CSR.scala 474:10]
    io.pmp[6] <- pmp_6 @[CSR.scala 474:10]
    io.pmp[7] <- pmp_7 @[CSR.scala 474:10]
    reg reg_misa : UInt, clock with : (reset => (reset, UInt<31>("h040801105"))) @[CSR.scala 490:21]
    node read_mstatus_lo_lo_lo_hi = cat(io.status.hie, io.status.sie) @[CSR.scala 491:38]
    node read_mstatus_lo_lo_lo = cat(read_mstatus_lo_lo_lo_hi, io.status.uie) @[CSR.scala 491:38]
    node read_mstatus_lo_lo_hi_lo = cat(io.status.upie, io.status.mie) @[CSR.scala 491:38]
    node read_mstatus_lo_lo_hi_hi = cat(io.status.hpie, io.status.spie) @[CSR.scala 491:38]
    node read_mstatus_lo_lo_hi = cat(read_mstatus_lo_lo_hi_hi, read_mstatus_lo_lo_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_lo_lo = cat(read_mstatus_lo_lo_hi, read_mstatus_lo_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_lo_lo = cat(io.status.spp, io.status.mpie) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_lo_hi = cat(io.status.mpp, io.status.vs) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_lo = cat(read_mstatus_lo_hi_lo_hi, read_mstatus_lo_hi_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_hi_lo = cat(io.status.xs, io.status.fs) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_hi_hi = cat(io.status.sum, io.status.mprv) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_hi = cat(read_mstatus_lo_hi_hi_hi, read_mstatus_lo_hi_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_lo_hi = cat(read_mstatus_lo_hi_hi, read_mstatus_lo_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_lo = cat(read_mstatus_lo_hi, read_mstatus_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_lo_lo = cat(io.status.tvm, io.status.mxr) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_lo_hi = cat(io.status.tsr, io.status.tw) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_lo = cat(read_mstatus_hi_lo_lo_hi, read_mstatus_hi_lo_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_hi_lo = cat(io.status.sd_rv32, io.status.zero1) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_hi_hi = cat(io.status.sxl, io.status.uxl) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_hi = cat(read_mstatus_hi_lo_hi_hi, read_mstatus_hi_lo_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_lo = cat(read_mstatus_hi_lo_hi, read_mstatus_hi_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_lo_lo = cat(io.status.sd, io.status.zero2) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_lo_hi = cat(io.status.dprv, io.status.prv) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_lo = cat(read_mstatus_hi_hi_lo_hi, read_mstatus_hi_hi_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_hi_lo = cat(io.status.wfi, io.status.isa) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_hi_hi = cat(io.status.debug, io.status.cease) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_hi = cat(read_mstatus_hi_hi_hi_hi, read_mstatus_hi_hi_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_hi = cat(read_mstatus_hi_hi_hi, read_mstatus_hi_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_hi = cat(read_mstatus_hi_hi, read_mstatus_hi_lo) @[CSR.scala 491:38]
    node _read_mstatus_T = cat(read_mstatus_hi, read_mstatus_lo) @[CSR.scala 491:38]
    node read_mstatus = bits(_read_mstatus_T, 31, 0) @[CSR.scala 491:40]
    node _read_mtvec_T = bits(reg_mtvec, 0, 0) @[CSR.scala 1206:41]
    node _read_mtvec_T_1 = mux(_read_mtvec_T, UInt<7>("h07e"), UInt<2>("h02")) @[CSR.scala 1206:39]
    node _read_mtvec_T_2 = and(reg_mtvec, UInt<1>("h00")) @[package.scala 165:46]
    node _read_mtvec_T_3 = or(_read_mtvec_T_1, _read_mtvec_T_2) @[package.scala 165:41]
    node _read_mtvec_T_4 = not(_read_mtvec_T_3) @[package.scala 165:37]
    node read_mtvec = and(reg_mtvec, _read_mtvec_T_4) @[package.scala 165:35]
    node _read_stvec_T = bits(reg_stvec, 0, 0) @[CSR.scala 1206:41]
    node _read_stvec_T_1 = mux(_read_stvec_T, UInt<7>("h07e"), UInt<2>("h02")) @[CSR.scala 1206:39]
    node _read_stvec_T_2 = and(reg_stvec, UInt<1>("h00")) @[package.scala 165:46]
    node _read_stvec_T_3 = or(_read_stvec_T_1, _read_stvec_T_2) @[package.scala 165:41]
    node _read_stvec_T_4 = not(_read_stvec_T_3) @[package.scala 165:37]
    node read_stvec = and(reg_stvec, _read_stvec_T_4) @[package.scala 165:35]
    node lo_lo_hi_2 = cat(reg_bp[reg_tselect].control.x, reg_bp[reg_tselect].control.w) @[CSR.scala 497:48]
    node lo_lo_2 = cat(lo_lo_hi_2, reg_bp[reg_tselect].control.r) @[CSR.scala 497:48]
    node lo_hi_lo_2 = cat(reg_bp[reg_tselect].control.s, reg_bp[reg_tselect].control.u) @[CSR.scala 497:48]
    node lo_hi_hi_2 = cat(reg_bp[reg_tselect].control.m, reg_bp[reg_tselect].control.h) @[CSR.scala 497:48]
    node lo_hi_2 = cat(lo_hi_hi_2, lo_hi_lo_2) @[CSR.scala 497:48]
    node lo_2 = cat(lo_hi_2, lo_lo_2) @[CSR.scala 497:48]
    node hi_lo_lo_2 = cat(reg_bp[reg_tselect].control.zero, reg_bp[reg_tselect].control.tmatch) @[CSR.scala 497:48]
    node hi_lo_hi_2 = cat(reg_bp[reg_tselect].control.action, reg_bp[reg_tselect].control.chain) @[CSR.scala 497:48]
    node hi_lo_2 = cat(hi_lo_hi_2, hi_lo_lo_2) @[CSR.scala 497:48]
    node hi_hi_lo_2 = cat(reg_bp[reg_tselect].control.maskmax, reg_bp[reg_tselect].control.reserved) @[CSR.scala 497:48]
    node hi_hi_hi_2 = cat(reg_bp[reg_tselect].control.ttype, reg_bp[reg_tselect].control.dmode) @[CSR.scala 497:48]
    node hi_hi_2 = cat(hi_hi_hi_2, hi_hi_lo_2) @[CSR.scala 497:48]
    node hi_2 = cat(hi_hi_2, hi_lo_2) @[CSR.scala 497:48]
    node _T_7 = cat(hi_2, lo_2) @[CSR.scala 497:48]
    node lo_hi_3 = cat(reg_bp[reg_tselect].textra.svalue, reg_bp[reg_tselect].textra.pad1) @[CSR.scala 499:47]
    node lo_3 = cat(lo_hi_3, reg_bp[reg_tselect].textra.sselect) @[CSR.scala 499:47]
    node hi_hi_3 = cat(reg_bp[reg_tselect].textra.mvalue, reg_bp[reg_tselect].textra.mselect) @[CSR.scala 499:47]
    node hi_3 = cat(hi_hi_3, reg_bp[reg_tselect].textra.pad2) @[CSR.scala 499:47]
    node _T_8 = cat(hi_3, lo_3) @[CSR.scala 499:47]
    node _T_9 = not(reg_mepc) @[CSR.scala 1205:28]
    node _T_10 = bits(reg_misa, 2, 2) @[CSR.scala 1205:45]
    node _T_11 = mux(_T_10, UInt<1>("h01"), UInt<2>("h03")) @[CSR.scala 1205:36]
    node _T_12 = or(_T_9, _T_11) @[CSR.scala 1205:31]
    node _T_13 = not(_T_12) @[CSR.scala 1205:26]
    node lo_lo_hi_3 = cat(reg_dcsr.zero1, reg_dcsr.step) @[CSR.scala 512:27]
    node lo_lo_3 = cat(lo_lo_hi_3, reg_dcsr.prv) @[CSR.scala 512:27]
    node lo_hi_lo_3 = cat(reg_dcsr.stoptime, reg_dcsr.cause) @[CSR.scala 512:27]
    node lo_hi_hi_3 = cat(reg_dcsr.zero2, reg_dcsr.stopcycle) @[CSR.scala 512:27]
    node lo_hi_4 = cat(lo_hi_hi_3, lo_hi_lo_3) @[CSR.scala 512:27]
    node lo_4 = cat(lo_hi_4, lo_lo_3) @[CSR.scala 512:27]
    node hi_lo_hi_3 = cat(reg_dcsr.ebreakh, reg_dcsr.ebreaks) @[CSR.scala 512:27]
    node hi_lo_3 = cat(hi_lo_hi_3, reg_dcsr.ebreaku) @[CSR.scala 512:27]
    node hi_hi_lo_3 = cat(reg_dcsr.zero3, reg_dcsr.ebreakm) @[CSR.scala 512:27]
    node hi_hi_hi_3 = cat(reg_dcsr.xdebugver, reg_dcsr.zero4) @[CSR.scala 512:27]
    node hi_hi_4 = cat(hi_hi_hi_3, hi_hi_lo_3) @[CSR.scala 512:27]
    node hi_4 = cat(hi_hi_4, hi_lo_3) @[CSR.scala 512:27]
    node _T_14 = cat(hi_4, lo_4) @[CSR.scala 512:27]
    node _T_15 = not(reg_dpc) @[CSR.scala 1205:28]
    node _T_16 = bits(reg_misa, 2, 2) @[CSR.scala 1205:45]
    node _T_17 = mux(_T_16, UInt<1>("h01"), UInt<2>("h03")) @[CSR.scala 1205:36]
    node _T_18 = or(_T_15, _T_17) @[CSR.scala 1205:31]
    node _T_19 = not(_T_18) @[CSR.scala 1205:26]
    wire _read_mnstatus_WIRE : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[CSR.scala 517:44]
    _read_mnstatus_WIRE is invalid @[CSR.scala 517:44]
    _read_mnstatus_WIRE.uie <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.sie <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.hie <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.mie <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.upie <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.spie <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.hpie <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.mpie <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.spp <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.vs <= UInt<2>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.mpp <= UInt<2>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.fs <= UInt<2>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.xs <= UInt<2>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.mprv <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.sum <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.mxr <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.tvm <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.tw <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.tsr <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.zero1 <= UInt<8>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.sd_rv32 <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.uxl <= UInt<2>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.sxl <= UInt<2>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.zero2 <= UInt<27>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.sd <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.prv <= UInt<2>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.dprv <= UInt<2>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.isa <= UInt<32>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.wfi <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.cease <= UInt<1>("h00") @[CSR.scala 517:44]
    _read_mnstatus_WIRE.debug <= UInt<1>("h00") @[CSR.scala 517:44]
    wire read_mnstatus : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}
    read_mnstatus is invalid
    read_mnstatus <- _read_mnstatus_WIRE
    read_mnstatus.mpp <= io.status.mpp @[CSR.scala 518:21]
    node read_fcsr = cat(reg_frm, reg_fflags) @[Cat.scala 30:58]
    node read_vcsr = cat(UInt<1>("h00"), UInt<1>("h00")) @[Cat.scala 30:58]
    node _T_20 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_21 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_22 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_23 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_24 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_25 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_26 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_27 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_28 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_29 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_30 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_31 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_32 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_33 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_34 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_35 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_36 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_37 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_38 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_39 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_40 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_41 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_42 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_43 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_44 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_45 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_46 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_47 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_48 = shr(UInt<1>("h00"), 32) @[CSR.scala 562:52]
    node _T_49 = shr(value_1, 32) @[CSR.scala 574:50]
    node _T_50 = shr(value, 32) @[CSR.scala 575:54]
    wire read_pmp_15 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[CSR.scala 617:59]
    read_pmp_15 is invalid @[CSR.scala 617:59]
    read_pmp_15.mask <= UInt<32>("h00") @[CSR.scala 617:59]
    read_pmp_15.addr <= UInt<30>("h00") @[CSR.scala 617:59]
    read_pmp_15.cfg.r <= UInt<1>("h00") @[CSR.scala 617:59]
    read_pmp_15.cfg.w <= UInt<1>("h00") @[CSR.scala 617:59]
    read_pmp_15.cfg.x <= UInt<1>("h00") @[CSR.scala 617:59]
    read_pmp_15.cfg.a <= UInt<2>("h00") @[CSR.scala 617:59]
    read_pmp_15.cfg.res <= UInt<2>("h00") @[CSR.scala 617:59]
    read_pmp_15.cfg.l <= UInt<1>("h00") @[CSR.scala 617:59]
    node lo_hi_5 = cat(reg_pmp[0].cfg.x, reg_pmp[0].cfg.w) @[package.scala 36:38]
    node lo_5 = cat(lo_hi_5, reg_pmp[0].cfg.r) @[package.scala 36:38]
    node hi_hi_5 = cat(reg_pmp[0].cfg.l, reg_pmp[0].cfg.res) @[package.scala 36:38]
    node hi_5 = cat(hi_hi_5, reg_pmp[0].cfg.a) @[package.scala 36:38]
    node lo_lo_4 = cat(hi_5, lo_5) @[package.scala 36:38]
    node lo_hi_6 = cat(reg_pmp[1].cfg.x, reg_pmp[1].cfg.w) @[package.scala 36:38]
    node lo_6 = cat(lo_hi_6, reg_pmp[1].cfg.r) @[package.scala 36:38]
    node hi_hi_6 = cat(reg_pmp[1].cfg.l, reg_pmp[1].cfg.res) @[package.scala 36:38]
    node hi_6 = cat(hi_hi_6, reg_pmp[1].cfg.a) @[package.scala 36:38]
    node lo_hi_7 = cat(hi_6, lo_6) @[package.scala 36:38]
    node lo_hi_8 = cat(reg_pmp[2].cfg.x, reg_pmp[2].cfg.w) @[package.scala 36:38]
    node lo_7 = cat(lo_hi_8, reg_pmp[2].cfg.r) @[package.scala 36:38]
    node hi_hi_7 = cat(reg_pmp[2].cfg.l, reg_pmp[2].cfg.res) @[package.scala 36:38]
    node hi_7 = cat(hi_hi_7, reg_pmp[2].cfg.a) @[package.scala 36:38]
    node hi_lo_4 = cat(hi_7, lo_7) @[package.scala 36:38]
    node lo_hi_9 = cat(reg_pmp[3].cfg.x, reg_pmp[3].cfg.w) @[package.scala 36:38]
    node lo_8 = cat(lo_hi_9, reg_pmp[3].cfg.r) @[package.scala 36:38]
    node hi_hi_8 = cat(reg_pmp[3].cfg.l, reg_pmp[3].cfg.res) @[package.scala 36:38]
    node hi_8 = cat(hi_hi_8, reg_pmp[3].cfg.a) @[package.scala 36:38]
    node hi_hi_9 = cat(hi_8, lo_8) @[package.scala 36:38]
    node lo_9 = cat(lo_hi_7, lo_lo_4) @[Cat.scala 30:58]
    node hi_9 = cat(hi_hi_9, hi_lo_4) @[Cat.scala 30:58]
    node _T_51 = cat(hi_9, lo_9) @[Cat.scala 30:58]
    node lo_hi_10 = cat(reg_pmp[4].cfg.x, reg_pmp[4].cfg.w) @[package.scala 36:38]
    node lo_10 = cat(lo_hi_10, reg_pmp[4].cfg.r) @[package.scala 36:38]
    node hi_hi_10 = cat(reg_pmp[4].cfg.l, reg_pmp[4].cfg.res) @[package.scala 36:38]
    node hi_10 = cat(hi_hi_10, reg_pmp[4].cfg.a) @[package.scala 36:38]
    node lo_lo_5 = cat(hi_10, lo_10) @[package.scala 36:38]
    node lo_hi_11 = cat(reg_pmp[5].cfg.x, reg_pmp[5].cfg.w) @[package.scala 36:38]
    node lo_11 = cat(lo_hi_11, reg_pmp[5].cfg.r) @[package.scala 36:38]
    node hi_hi_11 = cat(reg_pmp[5].cfg.l, reg_pmp[5].cfg.res) @[package.scala 36:38]
    node hi_11 = cat(hi_hi_11, reg_pmp[5].cfg.a) @[package.scala 36:38]
    node lo_hi_12 = cat(hi_11, lo_11) @[package.scala 36:38]
    node lo_hi_13 = cat(reg_pmp[6].cfg.x, reg_pmp[6].cfg.w) @[package.scala 36:38]
    node lo_12 = cat(lo_hi_13, reg_pmp[6].cfg.r) @[package.scala 36:38]
    node hi_hi_12 = cat(reg_pmp[6].cfg.l, reg_pmp[6].cfg.res) @[package.scala 36:38]
    node hi_12 = cat(hi_hi_12, reg_pmp[6].cfg.a) @[package.scala 36:38]
    node hi_lo_5 = cat(hi_12, lo_12) @[package.scala 36:38]
    node lo_hi_14 = cat(reg_pmp[7].cfg.x, reg_pmp[7].cfg.w) @[package.scala 36:38]
    node lo_13 = cat(lo_hi_14, reg_pmp[7].cfg.r) @[package.scala 36:38]
    node hi_hi_13 = cat(reg_pmp[7].cfg.l, reg_pmp[7].cfg.res) @[package.scala 36:38]
    node hi_13 = cat(hi_hi_13, reg_pmp[7].cfg.a) @[package.scala 36:38]
    node hi_hi_14 = cat(hi_13, lo_13) @[package.scala 36:38]
    node lo_14 = cat(lo_hi_12, lo_lo_5) @[Cat.scala 30:58]
    node hi_14 = cat(hi_hi_14, hi_lo_5) @[Cat.scala 30:58]
    node _T_52 = cat(hi_14, lo_14) @[Cat.scala 30:58]
    node lo_hi_15 = cat(read_pmp_15.cfg.x, read_pmp_15.cfg.w) @[package.scala 36:38]
    node lo_15 = cat(lo_hi_15, read_pmp_15.cfg.r) @[package.scala 36:38]
    node hi_hi_15 = cat(read_pmp_15.cfg.l, read_pmp_15.cfg.res) @[package.scala 36:38]
    node hi_15 = cat(hi_hi_15, read_pmp_15.cfg.a) @[package.scala 36:38]
    node lo_lo_6 = cat(hi_15, lo_15) @[package.scala 36:38]
    node lo_hi_16 = cat(read_pmp_15.cfg.x, read_pmp_15.cfg.w) @[package.scala 36:38]
    node lo_16 = cat(lo_hi_16, read_pmp_15.cfg.r) @[package.scala 36:38]
    node hi_hi_16 = cat(read_pmp_15.cfg.l, read_pmp_15.cfg.res) @[package.scala 36:38]
    node hi_16 = cat(hi_hi_16, read_pmp_15.cfg.a) @[package.scala 36:38]
    node lo_hi_17 = cat(hi_16, lo_16) @[package.scala 36:38]
    node lo_hi_18 = cat(read_pmp_15.cfg.x, read_pmp_15.cfg.w) @[package.scala 36:38]
    node lo_17 = cat(lo_hi_18, read_pmp_15.cfg.r) @[package.scala 36:38]
    node hi_hi_17 = cat(read_pmp_15.cfg.l, read_pmp_15.cfg.res) @[package.scala 36:38]
    node hi_17 = cat(hi_hi_17, read_pmp_15.cfg.a) @[package.scala 36:38]
    node hi_lo_6 = cat(hi_17, lo_17) @[package.scala 36:38]
    node lo_hi_19 = cat(read_pmp_15.cfg.x, read_pmp_15.cfg.w) @[package.scala 36:38]
    node lo_18 = cat(lo_hi_19, read_pmp_15.cfg.r) @[package.scala 36:38]
    node hi_hi_18 = cat(read_pmp_15.cfg.l, read_pmp_15.cfg.res) @[package.scala 36:38]
    node hi_18 = cat(hi_hi_18, read_pmp_15.cfg.a) @[package.scala 36:38]
    node hi_hi_19 = cat(hi_18, lo_18) @[package.scala 36:38]
    node lo_19 = cat(lo_hi_17, lo_lo_6) @[Cat.scala 30:58]
    node hi_19 = cat(hi_hi_19, hi_lo_6) @[Cat.scala 30:58]
    node _T_53 = cat(hi_19, lo_19) @[Cat.scala 30:58]
    node lo_hi_20 = cat(read_pmp_15.cfg.x, read_pmp_15.cfg.w) @[package.scala 36:38]
    node lo_20 = cat(lo_hi_20, read_pmp_15.cfg.r) @[package.scala 36:38]
    node hi_hi_20 = cat(read_pmp_15.cfg.l, read_pmp_15.cfg.res) @[package.scala 36:38]
    node hi_20 = cat(hi_hi_20, read_pmp_15.cfg.a) @[package.scala 36:38]
    node lo_lo_7 = cat(hi_20, lo_20) @[package.scala 36:38]
    node lo_hi_21 = cat(read_pmp_15.cfg.x, read_pmp_15.cfg.w) @[package.scala 36:38]
    node lo_21 = cat(lo_hi_21, read_pmp_15.cfg.r) @[package.scala 36:38]
    node hi_hi_21 = cat(read_pmp_15.cfg.l, read_pmp_15.cfg.res) @[package.scala 36:38]
    node hi_21 = cat(hi_hi_21, read_pmp_15.cfg.a) @[package.scala 36:38]
    node lo_hi_22 = cat(hi_21, lo_21) @[package.scala 36:38]
    node lo_hi_23 = cat(read_pmp_15.cfg.x, read_pmp_15.cfg.w) @[package.scala 36:38]
    node lo_22 = cat(lo_hi_23, read_pmp_15.cfg.r) @[package.scala 36:38]
    node hi_hi_22 = cat(read_pmp_15.cfg.l, read_pmp_15.cfg.res) @[package.scala 36:38]
    node hi_22 = cat(hi_hi_22, read_pmp_15.cfg.a) @[package.scala 36:38]
    node hi_lo_7 = cat(hi_22, lo_22) @[package.scala 36:38]
    node lo_hi_24 = cat(read_pmp_15.cfg.x, read_pmp_15.cfg.w) @[package.scala 36:38]
    node lo_23 = cat(lo_hi_24, read_pmp_15.cfg.r) @[package.scala 36:38]
    node hi_hi_23 = cat(read_pmp_15.cfg.l, read_pmp_15.cfg.res) @[package.scala 36:38]
    node hi_23 = cat(hi_hi_23, read_pmp_15.cfg.a) @[package.scala 36:38]
    node hi_hi_24 = cat(hi_23, lo_23) @[package.scala 36:38]
    node lo_24 = cat(lo_hi_22, lo_lo_7) @[Cat.scala 30:58]
    node hi_24 = cat(hi_hi_24, hi_lo_7) @[Cat.scala 30:58]
    node _T_54 = cat(hi_24, lo_24) @[Cat.scala 30:58]
    reg reg_custom_0 : UInt<32>, clock with : (reset => (reset, UInt<32>("h08"))) @[CSR.scala 628:43]
    reg reg_custom_1 : UInt<32>, clock with : (reset => (reset, UInt<32>("h01"))) @[CSR.scala 628:43]
    reg reg_custom_2 : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[CSR.scala 628:43]
    reg reg_custom_3 : UInt<32>, clock with : (reset => (reset, UInt<32>("h020181004"))) @[CSR.scala 628:43]
    node _T_55 = eq(io.rw.addr, UInt<11>("h07a0")) @[CSR.scala 636:73]
    node _T_56 = eq(io.rw.addr, UInt<11>("h07a1")) @[CSR.scala 636:73]
    node _T_57 = eq(io.rw.addr, UInt<11>("h07a2")) @[CSR.scala 636:73]
    node _T_58 = eq(io.rw.addr, UInt<11>("h07a3")) @[CSR.scala 636:73]
    node _T_59 = eq(io.rw.addr, UInt<10>("h0301")) @[CSR.scala 636:73]
    node _T_60 = eq(io.rw.addr, UInt<10>("h0300")) @[CSR.scala 636:73]
    node _T_61 = eq(io.rw.addr, UInt<10>("h0305")) @[CSR.scala 636:73]
    node _T_62 = eq(io.rw.addr, UInt<10>("h0344")) @[CSR.scala 636:73]
    node _T_63 = eq(io.rw.addr, UInt<10>("h0304")) @[CSR.scala 636:73]
    node _T_64 = eq(io.rw.addr, UInt<10>("h0340")) @[CSR.scala 636:73]
    node _T_65 = eq(io.rw.addr, UInt<10>("h0341")) @[CSR.scala 636:73]
    node _T_66 = eq(io.rw.addr, UInt<10>("h0343")) @[CSR.scala 636:73]
    node _T_67 = eq(io.rw.addr, UInt<10>("h0342")) @[CSR.scala 636:73]
    node _T_68 = eq(io.rw.addr, UInt<12>("h0f14")) @[CSR.scala 636:73]
    node _T_69 = eq(io.rw.addr, UInt<11>("h07b0")) @[CSR.scala 636:73]
    node _T_70 = eq(io.rw.addr, UInt<11>("h07b1")) @[CSR.scala 636:73]
    node _T_71 = eq(io.rw.addr, UInt<11>("h07b2")) @[CSR.scala 636:73]
    node _T_72 = eq(io.rw.addr, UInt<10>("h0320")) @[CSR.scala 636:73]
    node _T_73 = eq(io.rw.addr, UInt<12>("h0b00")) @[CSR.scala 636:73]
    node _T_74 = eq(io.rw.addr, UInt<12>("h0b02")) @[CSR.scala 636:73]
    node _T_75 = eq(io.rw.addr, UInt<10>("h0323")) @[CSR.scala 636:73]
    node _T_76 = eq(io.rw.addr, UInt<12>("h0b03")) @[CSR.scala 636:73]
    node _T_77 = eq(io.rw.addr, UInt<12>("h0b83")) @[CSR.scala 636:73]
    node _T_78 = eq(io.rw.addr, UInt<10>("h0324")) @[CSR.scala 636:73]
    node _T_79 = eq(io.rw.addr, UInt<12>("h0b04")) @[CSR.scala 636:73]
    node _T_80 = eq(io.rw.addr, UInt<12>("h0b84")) @[CSR.scala 636:73]
    node _T_81 = eq(io.rw.addr, UInt<10>("h0325")) @[CSR.scala 636:73]
    node _T_82 = eq(io.rw.addr, UInt<12>("h0b05")) @[CSR.scala 636:73]
    node _T_83 = eq(io.rw.addr, UInt<12>("h0b85")) @[CSR.scala 636:73]
    node _T_84 = eq(io.rw.addr, UInt<10>("h0326")) @[CSR.scala 636:73]
    node _T_85 = eq(io.rw.addr, UInt<12>("h0b06")) @[CSR.scala 636:73]
    node _T_86 = eq(io.rw.addr, UInt<12>("h0b86")) @[CSR.scala 636:73]
    node _T_87 = eq(io.rw.addr, UInt<10>("h0327")) @[CSR.scala 636:73]
    node _T_88 = eq(io.rw.addr, UInt<12>("h0b07")) @[CSR.scala 636:73]
    node _T_89 = eq(io.rw.addr, UInt<12>("h0b87")) @[CSR.scala 636:73]
    node _T_90 = eq(io.rw.addr, UInt<10>("h0328")) @[CSR.scala 636:73]
    node _T_91 = eq(io.rw.addr, UInt<12>("h0b08")) @[CSR.scala 636:73]
    node _T_92 = eq(io.rw.addr, UInt<12>("h0b88")) @[CSR.scala 636:73]
    node _T_93 = eq(io.rw.addr, UInt<10>("h0329")) @[CSR.scala 636:73]
    node _T_94 = eq(io.rw.addr, UInt<12>("h0b09")) @[CSR.scala 636:73]
    node _T_95 = eq(io.rw.addr, UInt<12>("h0b89")) @[CSR.scala 636:73]
    node _T_96 = eq(io.rw.addr, UInt<10>("h032a")) @[CSR.scala 636:73]
    node _T_97 = eq(io.rw.addr, UInt<12>("h0b0a")) @[CSR.scala 636:73]
    node _T_98 = eq(io.rw.addr, UInt<12>("h0b8a")) @[CSR.scala 636:73]
    node _T_99 = eq(io.rw.addr, UInt<10>("h032b")) @[CSR.scala 636:73]
    node _T_100 = eq(io.rw.addr, UInt<12>("h0b0b")) @[CSR.scala 636:73]
    node _T_101 = eq(io.rw.addr, UInt<12>("h0b8b")) @[CSR.scala 636:73]
    node _T_102 = eq(io.rw.addr, UInt<10>("h032c")) @[CSR.scala 636:73]
    node _T_103 = eq(io.rw.addr, UInt<12>("h0b0c")) @[CSR.scala 636:73]
    node _T_104 = eq(io.rw.addr, UInt<12>("h0b8c")) @[CSR.scala 636:73]
    node _T_105 = eq(io.rw.addr, UInt<10>("h032d")) @[CSR.scala 636:73]
    node _T_106 = eq(io.rw.addr, UInt<12>("h0b0d")) @[CSR.scala 636:73]
    node _T_107 = eq(io.rw.addr, UInt<12>("h0b8d")) @[CSR.scala 636:73]
    node _T_108 = eq(io.rw.addr, UInt<10>("h032e")) @[CSR.scala 636:73]
    node _T_109 = eq(io.rw.addr, UInt<12>("h0b0e")) @[CSR.scala 636:73]
    node _T_110 = eq(io.rw.addr, UInt<12>("h0b8e")) @[CSR.scala 636:73]
    node _T_111 = eq(io.rw.addr, UInt<10>("h032f")) @[CSR.scala 636:73]
    node _T_112 = eq(io.rw.addr, UInt<12>("h0b0f")) @[CSR.scala 636:73]
    node _T_113 = eq(io.rw.addr, UInt<12>("h0b8f")) @[CSR.scala 636:73]
    node _T_114 = eq(io.rw.addr, UInt<10>("h0330")) @[CSR.scala 636:73]
    node _T_115 = eq(io.rw.addr, UInt<12>("h0b10")) @[CSR.scala 636:73]
    node _T_116 = eq(io.rw.addr, UInt<12>("h0b90")) @[CSR.scala 636:73]
    node _T_117 = eq(io.rw.addr, UInt<10>("h0331")) @[CSR.scala 636:73]
    node _T_118 = eq(io.rw.addr, UInt<12>("h0b11")) @[CSR.scala 636:73]
    node _T_119 = eq(io.rw.addr, UInt<12>("h0b91")) @[CSR.scala 636:73]
    node _T_120 = eq(io.rw.addr, UInt<10>("h0332")) @[CSR.scala 636:73]
    node _T_121 = eq(io.rw.addr, UInt<12>("h0b12")) @[CSR.scala 636:73]
    node _T_122 = eq(io.rw.addr, UInt<12>("h0b92")) @[CSR.scala 636:73]
    node _T_123 = eq(io.rw.addr, UInt<10>("h0333")) @[CSR.scala 636:73]
    node _T_124 = eq(io.rw.addr, UInt<12>("h0b13")) @[CSR.scala 636:73]
    node _T_125 = eq(io.rw.addr, UInt<12>("h0b93")) @[CSR.scala 636:73]
    node _T_126 = eq(io.rw.addr, UInt<10>("h0334")) @[CSR.scala 636:73]
    node _T_127 = eq(io.rw.addr, UInt<12>("h0b14")) @[CSR.scala 636:73]
    node _T_128 = eq(io.rw.addr, UInt<12>("h0b94")) @[CSR.scala 636:73]
    node _T_129 = eq(io.rw.addr, UInt<10>("h0335")) @[CSR.scala 636:73]
    node _T_130 = eq(io.rw.addr, UInt<12>("h0b15")) @[CSR.scala 636:73]
    node _T_131 = eq(io.rw.addr, UInt<12>("h0b95")) @[CSR.scala 636:73]
    node _T_132 = eq(io.rw.addr, UInt<10>("h0336")) @[CSR.scala 636:73]
    node _T_133 = eq(io.rw.addr, UInt<12>("h0b16")) @[CSR.scala 636:73]
    node _T_134 = eq(io.rw.addr, UInt<12>("h0b96")) @[CSR.scala 636:73]
    node _T_135 = eq(io.rw.addr, UInt<10>("h0337")) @[CSR.scala 636:73]
    node _T_136 = eq(io.rw.addr, UInt<12>("h0b17")) @[CSR.scala 636:73]
    node _T_137 = eq(io.rw.addr, UInt<12>("h0b97")) @[CSR.scala 636:73]
    node _T_138 = eq(io.rw.addr, UInt<10>("h0338")) @[CSR.scala 636:73]
    node _T_139 = eq(io.rw.addr, UInt<12>("h0b18")) @[CSR.scala 636:73]
    node _T_140 = eq(io.rw.addr, UInt<12>("h0b98")) @[CSR.scala 636:73]
    node _T_141 = eq(io.rw.addr, UInt<10>("h0339")) @[CSR.scala 636:73]
    node _T_142 = eq(io.rw.addr, UInt<12>("h0b19")) @[CSR.scala 636:73]
    node _T_143 = eq(io.rw.addr, UInt<12>("h0b99")) @[CSR.scala 636:73]
    node _T_144 = eq(io.rw.addr, UInt<10>("h033a")) @[CSR.scala 636:73]
    node _T_145 = eq(io.rw.addr, UInt<12>("h0b1a")) @[CSR.scala 636:73]
    node _T_146 = eq(io.rw.addr, UInt<12>("h0b9a")) @[CSR.scala 636:73]
    node _T_147 = eq(io.rw.addr, UInt<10>("h033b")) @[CSR.scala 636:73]
    node _T_148 = eq(io.rw.addr, UInt<12>("h0b1b")) @[CSR.scala 636:73]
    node _T_149 = eq(io.rw.addr, UInt<12>("h0b9b")) @[CSR.scala 636:73]
    node _T_150 = eq(io.rw.addr, UInt<10>("h033c")) @[CSR.scala 636:73]
    node _T_151 = eq(io.rw.addr, UInt<12>("h0b1c")) @[CSR.scala 636:73]
    node _T_152 = eq(io.rw.addr, UInt<12>("h0b9c")) @[CSR.scala 636:73]
    node _T_153 = eq(io.rw.addr, UInt<10>("h033d")) @[CSR.scala 636:73]
    node _T_154 = eq(io.rw.addr, UInt<12>("h0b1d")) @[CSR.scala 636:73]
    node _T_155 = eq(io.rw.addr, UInt<12>("h0b9d")) @[CSR.scala 636:73]
    node _T_156 = eq(io.rw.addr, UInt<10>("h033e")) @[CSR.scala 636:73]
    node _T_157 = eq(io.rw.addr, UInt<12>("h0b1e")) @[CSR.scala 636:73]
    node _T_158 = eq(io.rw.addr, UInt<12>("h0b9e")) @[CSR.scala 636:73]
    node _T_159 = eq(io.rw.addr, UInt<10>("h033f")) @[CSR.scala 636:73]
    node _T_160 = eq(io.rw.addr, UInt<12>("h0b1f")) @[CSR.scala 636:73]
    node _T_161 = eq(io.rw.addr, UInt<12>("h0b9f")) @[CSR.scala 636:73]
    node _T_162 = eq(io.rw.addr, UInt<12>("h0b80")) @[CSR.scala 636:73]
    node _T_163 = eq(io.rw.addr, UInt<12>("h0b82")) @[CSR.scala 636:73]
    node _T_164 = eq(io.rw.addr, UInt<10>("h03a0")) @[CSR.scala 636:73]
    node _T_165 = eq(io.rw.addr, UInt<10>("h03a1")) @[CSR.scala 636:73]
    node _T_166 = eq(io.rw.addr, UInt<10>("h03a2")) @[CSR.scala 636:73]
    node _T_167 = eq(io.rw.addr, UInt<10>("h03a3")) @[CSR.scala 636:73]
    node _T_168 = eq(io.rw.addr, UInt<10>("h03b0")) @[CSR.scala 636:73]
    node _T_169 = eq(io.rw.addr, UInt<10>("h03b1")) @[CSR.scala 636:73]
    node _T_170 = eq(io.rw.addr, UInt<10>("h03b2")) @[CSR.scala 636:73]
    node _T_171 = eq(io.rw.addr, UInt<10>("h03b3")) @[CSR.scala 636:73]
    node _T_172 = eq(io.rw.addr, UInt<10>("h03b4")) @[CSR.scala 636:73]
    node _T_173 = eq(io.rw.addr, UInt<10>("h03b5")) @[CSR.scala 636:73]
    node _T_174 = eq(io.rw.addr, UInt<10>("h03b6")) @[CSR.scala 636:73]
    node _T_175 = eq(io.rw.addr, UInt<10>("h03b7")) @[CSR.scala 636:73]
    node _T_176 = eq(io.rw.addr, UInt<10>("h03b8")) @[CSR.scala 636:73]
    node _T_177 = eq(io.rw.addr, UInt<10>("h03b9")) @[CSR.scala 636:73]
    node _T_178 = eq(io.rw.addr, UInt<10>("h03ba")) @[CSR.scala 636:73]
    node _T_179 = eq(io.rw.addr, UInt<10>("h03bb")) @[CSR.scala 636:73]
    node _T_180 = eq(io.rw.addr, UInt<10>("h03bc")) @[CSR.scala 636:73]
    node _T_181 = eq(io.rw.addr, UInt<10>("h03bd")) @[CSR.scala 636:73]
    node _T_182 = eq(io.rw.addr, UInt<10>("h03be")) @[CSR.scala 636:73]
    node _T_183 = eq(io.rw.addr, UInt<10>("h03bf")) @[CSR.scala 636:73]
    node _T_184 = eq(io.rw.addr, UInt<11>("h07c1")) @[CSR.scala 636:73]
    node _T_185 = eq(io.rw.addr, UInt<12>("h0f12")) @[CSR.scala 636:73]
    node _T_186 = eq(io.rw.addr, UInt<12>("h0f11")) @[CSR.scala 636:73]
    node _T_187 = eq(io.rw.addr, UInt<12>("h0f13")) @[CSR.scala 636:73]
    node _wdata_T = bits(io.rw.cmd, 1, 1) @[CSR.scala 1183:13]
    node _wdata_T_1 = mux(_wdata_T, io.rw.rdata, UInt<1>("h00")) @[CSR.scala 1183:9]
    node _wdata_T_2 = or(_wdata_T_1, io.rw.wdata) @[CSR.scala 1183:34]
    node _wdata_T_3 = bits(io.rw.cmd, 1, 0) @[CSR.scala 1183:53]
    node _wdata_T_4 = andr(_wdata_T_3) @[CSR.scala 1183:59]
    node _wdata_T_5 = mux(_wdata_T_4, io.rw.wdata, UInt<1>("h00")) @[CSR.scala 1183:49]
    node _wdata_T_6 = not(_wdata_T_5) @[CSR.scala 1183:45]
    node wdata = and(_wdata_T_2, _wdata_T_6) @[CSR.scala 1183:43]
    node system_insn = eq(io.rw.cmd, UInt<3>("h04")) @[CSR.scala 639:31]
    node _T_188 = shl(io.rw.addr, 20) @[CSR.scala 652:28]
    node _T_189 = and(_T_188, UInt<32>("h020100000")) @[Decode.scala 14:65]
    node _T_190 = eq(_T_189, UInt<32>("h00")) @[Decode.scala 14:121]
    node _T_191 = or(UInt<1>("h00"), _T_190) @[Decode.scala 15:30]
    node _T_192 = and(_T_188, UInt<32>("h010100000")) @[Decode.scala 14:65]
    node _T_193 = eq(_T_192, UInt<32>("h0100000")) @[Decode.scala 14:121]
    node _T_194 = or(UInt<1>("h00"), _T_193) @[Decode.scala 15:30]
    node _T_195 = and(_T_188, UInt<32>("h020400000")) @[Decode.scala 14:65]
    node _T_196 = eq(_T_195, UInt<32>("h020000000")) @[Decode.scala 14:121]
    node _T_197 = or(UInt<1>("h00"), _T_196) @[Decode.scala 15:30]
    node _T_198 = and(_T_188, UInt<32>("h020200000")) @[Decode.scala 14:65]
    node _T_199 = eq(_T_198, UInt<32>("h020000000")) @[Decode.scala 14:121]
    node _T_200 = or(UInt<1>("h00"), _T_199) @[Decode.scala 15:30]
    node _T_201 = and(_T_188, UInt<32>("h030000000")) @[Decode.scala 14:65]
    node _T_202 = eq(_T_201, UInt<32>("h010000000")) @[Decode.scala 14:121]
    node _T_203 = or(UInt<1>("h00"), _T_202) @[Decode.scala 15:30]
    node _T_204 = bits(_T_191, 0, 0) @[CSR.scala 652:100]
    node insn_call = and(system_insn, _T_204) @[CSR.scala 652:95]
    node _T_205 = bits(_T_194, 0, 0) @[CSR.scala 652:100]
    node insn_break = and(system_insn, _T_205) @[CSR.scala 652:95]
    node _T_206 = bits(_T_197, 0, 0) @[CSR.scala 652:100]
    node insn_ret = and(system_insn, _T_206) @[CSR.scala 652:95]
    node _T_207 = bits(_T_200, 0, 0) @[CSR.scala 652:100]
    node insn_cease = and(system_insn, _T_207) @[CSR.scala 652:95]
    node _T_208 = bits(_T_203, 0, 0) @[CSR.scala 652:100]
    node insn_wfi = and(system_insn, _T_208) @[CSR.scala 652:95]
    node insn_sfence = and(system_insn, UInt<1>("h00")) @[CSR.scala 652:95]
    node _T_209 = shl(io.decode[0].csr, 20) @[CSR.scala 659:30]
    node _T_210 = and(_T_209, UInt<32>("h020100000")) @[Decode.scala 14:65]
    node _T_211 = eq(_T_210, UInt<32>("h00")) @[Decode.scala 14:121]
    node _T_212 = or(UInt<1>("h00"), _T_211) @[Decode.scala 15:30]
    node _T_213 = and(_T_209, UInt<32>("h010100000")) @[Decode.scala 14:65]
    node _T_214 = eq(_T_213, UInt<32>("h0100000")) @[Decode.scala 14:121]
    node _T_215 = or(UInt<1>("h00"), _T_214) @[Decode.scala 15:30]
    node _T_216 = and(_T_209, UInt<32>("h020400000")) @[Decode.scala 14:65]
    node _T_217 = eq(_T_216, UInt<32>("h020000000")) @[Decode.scala 14:121]
    node _T_218 = or(UInt<1>("h00"), _T_217) @[Decode.scala 15:30]
    node _T_219 = and(_T_209, UInt<32>("h020200000")) @[Decode.scala 14:65]
    node _T_220 = eq(_T_219, UInt<32>("h020000000")) @[Decode.scala 14:121]
    node _T_221 = or(UInt<1>("h00"), _T_220) @[Decode.scala 15:30]
    node _T_222 = and(_T_209, UInt<32>("h030000000")) @[Decode.scala 14:65]
    node _T_223 = eq(_T_222, UInt<32>("h010000000")) @[Decode.scala 14:121]
    node _T_224 = or(UInt<1>("h00"), _T_223) @[Decode.scala 15:30]
    node _T_225 = bits(_T_212, 0, 0) @[CSR.scala 659:87]
    node is_break = bits(_T_215, 0, 0) @[CSR.scala 659:87]
    node is_ret = bits(_T_218, 0, 0) @[CSR.scala 659:87]
    node _T_226 = bits(_T_221, 0, 0) @[CSR.scala 659:87]
    node is_wfi = bits(_T_224, 0, 0) @[CSR.scala 659:87]
    node _allow_wfi_T = gt(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 661:63]
    node _allow_wfi_T_1 = or(UInt<1>("h01"), _allow_wfi_T) @[CSR.scala 661:44]
    node _allow_wfi_T_2 = eq(reg_mstatus.tw, UInt<1>("h00")) @[CSR.scala 661:74]
    node allow_wfi = or(_allow_wfi_T_1, _allow_wfi_T_2) @[CSR.scala 661:71]
    node _allow_sfence_vma_T = gt(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 662:62]
    node _allow_sfence_vma_T_1 = or(UInt<1>("h01"), _allow_sfence_vma_T) @[CSR.scala 662:43]
    node _allow_sfence_vma_T_2 = eq(reg_mstatus.tvm, UInt<1>("h00")) @[CSR.scala 662:73]
    node allow_sfence_vma = or(_allow_sfence_vma_T_1, _allow_sfence_vma_T_2) @[CSR.scala 662:70]
    node _allow_sret_T = gt(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 663:64]
    node _allow_sret_T_1 = or(UInt<1>("h01"), _allow_sret_T) @[CSR.scala 663:45]
    node _allow_sret_T_2 = eq(reg_mstatus.tsr, UInt<1>("h00")) @[CSR.scala 663:75]
    node allow_sret = or(_allow_sret_T_1, _allow_sret_T_2) @[CSR.scala 663:72]
    node counter_addr = bits(io.decode[0].csr, 4, 0) @[CSR.scala 664:34]
    node _allow_counter_T = gt(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 665:42]
    node _allow_counter_T_1 = dshr(read_mcounteren, counter_addr) @[CSR.scala 665:68]
    node _allow_counter_T_2 = bits(_allow_counter_T_1, 0, 0) @[CSR.scala 665:68]
    node _allow_counter_T_3 = or(_allow_counter_T, _allow_counter_T_2) @[CSR.scala 665:50]
    node _allow_counter_T_4 = geq(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 666:44]
    node _allow_counter_T_5 = or(UInt<1>("h01"), _allow_counter_T_4) @[CSR.scala 666:25]
    node _allow_counter_T_6 = dshr(read_scounteren, counter_addr) @[CSR.scala 666:71]
    node _allow_counter_T_7 = bits(_allow_counter_T_6, 0, 0) @[CSR.scala 666:71]
    node _allow_counter_T_8 = or(_allow_counter_T_5, _allow_counter_T_7) @[CSR.scala 666:53]
    node allow_counter = and(_allow_counter_T_3, _allow_counter_T_8) @[CSR.scala 665:84]
    node _io_decode_0_fp_illegal_T = eq(io.status.fs, UInt<1>("h00")) @[CSR.scala 667:39]
    node _io_decode_0_fp_illegal_T_1 = bits(reg_misa, 5, 5) @[CSR.scala 667:57]
    node _io_decode_0_fp_illegal_T_2 = eq(_io_decode_0_fp_illegal_T_1, UInt<1>("h00")) @[CSR.scala 667:48]
    node _io_decode_0_fp_illegal_T_3 = or(_io_decode_0_fp_illegal_T, _io_decode_0_fp_illegal_T_2) @[CSR.scala 667:45]
    io.decode[0].fp_illegal <= _io_decode_0_fp_illegal_T_3 @[CSR.scala 667:23]
    node _io_decode_0_vector_illegal_T = eq(io.status.vs, UInt<1>("h00")) @[CSR.scala 668:43]
    node _io_decode_0_vector_illegal_T_1 = bits(reg_misa, 21, 21) @[CSR.scala 668:61]
    node _io_decode_0_vector_illegal_T_2 = eq(_io_decode_0_vector_illegal_T_1, UInt<1>("h00")) @[CSR.scala 668:52]
    node _io_decode_0_vector_illegal_T_3 = or(_io_decode_0_vector_illegal_T, _io_decode_0_vector_illegal_T_2) @[CSR.scala 668:49]
    io.decode[0].vector_illegal <= _io_decode_0_vector_illegal_T_3 @[CSR.scala 668:27]
    io.decode[0].fp_csr <= UInt<1>("h00") @[CSR.scala 669:19]
    node _io_decode_0_rocc_illegal_T = eq(io.status.xs, UInt<1>("h00")) @[CSR.scala 670:41]
    node _io_decode_0_rocc_illegal_T_1 = bits(reg_misa, 23, 23) @[CSR.scala 670:59]
    node _io_decode_0_rocc_illegal_T_2 = eq(_io_decode_0_rocc_illegal_T_1, UInt<1>("h00")) @[CSR.scala 670:50]
    node _io_decode_0_rocc_illegal_T_3 = or(_io_decode_0_rocc_illegal_T, _io_decode_0_rocc_illegal_T_2) @[CSR.scala 670:47]
    io.decode[0].rocc_illegal <= _io_decode_0_rocc_illegal_T_3 @[CSR.scala 670:25]
    node _io_decode_0_read_illegal_T = bits(io.decode[0].csr, 9, 8) @[CSR.scala 671:56]
    node _io_decode_0_read_illegal_T_1 = lt(reg_mstatus.prv, _io_decode_0_read_illegal_T) @[CSR.scala 671:44]
    node _io_decode_0_read_illegal_T_2 = eq(io.decode[0].csr, UInt<11>("h07a0")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_3 = eq(io.decode[0].csr, UInt<11>("h07a1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_4 = eq(io.decode[0].csr, UInt<11>("h07a2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_5 = eq(io.decode[0].csr, UInt<11>("h07a3")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_6 = eq(io.decode[0].csr, UInt<10>("h0301")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_7 = eq(io.decode[0].csr, UInt<10>("h0300")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_8 = eq(io.decode[0].csr, UInt<10>("h0305")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_9 = eq(io.decode[0].csr, UInt<10>("h0344")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_10 = eq(io.decode[0].csr, UInt<10>("h0304")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_11 = eq(io.decode[0].csr, UInt<10>("h0340")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_12 = eq(io.decode[0].csr, UInt<10>("h0341")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_13 = eq(io.decode[0].csr, UInt<10>("h0343")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_14 = eq(io.decode[0].csr, UInt<10>("h0342")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_15 = eq(io.decode[0].csr, UInt<12>("h0f14")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_16 = eq(io.decode[0].csr, UInt<11>("h07b0")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_17 = eq(io.decode[0].csr, UInt<11>("h07b1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_18 = eq(io.decode[0].csr, UInt<11>("h07b2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_19 = eq(io.decode[0].csr, UInt<10>("h0320")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_20 = eq(io.decode[0].csr, UInt<12>("h0b00")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_21 = eq(io.decode[0].csr, UInt<12>("h0b02")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_22 = eq(io.decode[0].csr, UInt<10>("h0323")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_23 = eq(io.decode[0].csr, UInt<12>("h0b03")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_24 = eq(io.decode[0].csr, UInt<12>("h0b83")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_25 = eq(io.decode[0].csr, UInt<10>("h0324")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_26 = eq(io.decode[0].csr, UInt<12>("h0b04")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_27 = eq(io.decode[0].csr, UInt<12>("h0b84")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_28 = eq(io.decode[0].csr, UInt<10>("h0325")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_29 = eq(io.decode[0].csr, UInt<12>("h0b05")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_30 = eq(io.decode[0].csr, UInt<12>("h0b85")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_31 = eq(io.decode[0].csr, UInt<10>("h0326")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_32 = eq(io.decode[0].csr, UInt<12>("h0b06")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_33 = eq(io.decode[0].csr, UInt<12>("h0b86")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_34 = eq(io.decode[0].csr, UInt<10>("h0327")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_35 = eq(io.decode[0].csr, UInt<12>("h0b07")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_36 = eq(io.decode[0].csr, UInt<12>("h0b87")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_37 = eq(io.decode[0].csr, UInt<10>("h0328")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_38 = eq(io.decode[0].csr, UInt<12>("h0b08")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_39 = eq(io.decode[0].csr, UInt<12>("h0b88")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_40 = eq(io.decode[0].csr, UInt<10>("h0329")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_41 = eq(io.decode[0].csr, UInt<12>("h0b09")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_42 = eq(io.decode[0].csr, UInt<12>("h0b89")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_43 = eq(io.decode[0].csr, UInt<10>("h032a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_44 = eq(io.decode[0].csr, UInt<12>("h0b0a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_45 = eq(io.decode[0].csr, UInt<12>("h0b8a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_46 = eq(io.decode[0].csr, UInt<10>("h032b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_47 = eq(io.decode[0].csr, UInt<12>("h0b0b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_48 = eq(io.decode[0].csr, UInt<12>("h0b8b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_49 = eq(io.decode[0].csr, UInt<10>("h032c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_50 = eq(io.decode[0].csr, UInt<12>("h0b0c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_51 = eq(io.decode[0].csr, UInt<12>("h0b8c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_52 = eq(io.decode[0].csr, UInt<10>("h032d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_53 = eq(io.decode[0].csr, UInt<12>("h0b0d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_54 = eq(io.decode[0].csr, UInt<12>("h0b8d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_55 = eq(io.decode[0].csr, UInt<10>("h032e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_56 = eq(io.decode[0].csr, UInt<12>("h0b0e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_57 = eq(io.decode[0].csr, UInt<12>("h0b8e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_58 = eq(io.decode[0].csr, UInt<10>("h032f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_59 = eq(io.decode[0].csr, UInt<12>("h0b0f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_60 = eq(io.decode[0].csr, UInt<12>("h0b8f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_61 = eq(io.decode[0].csr, UInt<10>("h0330")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_62 = eq(io.decode[0].csr, UInt<12>("h0b10")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_63 = eq(io.decode[0].csr, UInt<12>("h0b90")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_64 = eq(io.decode[0].csr, UInt<10>("h0331")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_65 = eq(io.decode[0].csr, UInt<12>("h0b11")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_66 = eq(io.decode[0].csr, UInt<12>("h0b91")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_67 = eq(io.decode[0].csr, UInt<10>("h0332")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_68 = eq(io.decode[0].csr, UInt<12>("h0b12")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_69 = eq(io.decode[0].csr, UInt<12>("h0b92")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_70 = eq(io.decode[0].csr, UInt<10>("h0333")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_71 = eq(io.decode[0].csr, UInt<12>("h0b13")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_72 = eq(io.decode[0].csr, UInt<12>("h0b93")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_73 = eq(io.decode[0].csr, UInt<10>("h0334")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_74 = eq(io.decode[0].csr, UInt<12>("h0b14")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_75 = eq(io.decode[0].csr, UInt<12>("h0b94")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_76 = eq(io.decode[0].csr, UInt<10>("h0335")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_77 = eq(io.decode[0].csr, UInt<12>("h0b15")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_78 = eq(io.decode[0].csr, UInt<12>("h0b95")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_79 = eq(io.decode[0].csr, UInt<10>("h0336")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_80 = eq(io.decode[0].csr, UInt<12>("h0b16")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_81 = eq(io.decode[0].csr, UInt<12>("h0b96")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_82 = eq(io.decode[0].csr, UInt<10>("h0337")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_83 = eq(io.decode[0].csr, UInt<12>("h0b17")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_84 = eq(io.decode[0].csr, UInt<12>("h0b97")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_85 = eq(io.decode[0].csr, UInt<10>("h0338")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_86 = eq(io.decode[0].csr, UInt<12>("h0b18")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_87 = eq(io.decode[0].csr, UInt<12>("h0b98")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_88 = eq(io.decode[0].csr, UInt<10>("h0339")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_89 = eq(io.decode[0].csr, UInt<12>("h0b19")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_90 = eq(io.decode[0].csr, UInt<12>("h0b99")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_91 = eq(io.decode[0].csr, UInt<10>("h033a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_92 = eq(io.decode[0].csr, UInt<12>("h0b1a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_93 = eq(io.decode[0].csr, UInt<12>("h0b9a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_94 = eq(io.decode[0].csr, UInt<10>("h033b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_95 = eq(io.decode[0].csr, UInt<12>("h0b1b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_96 = eq(io.decode[0].csr, UInt<12>("h0b9b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_97 = eq(io.decode[0].csr, UInt<10>("h033c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_98 = eq(io.decode[0].csr, UInt<12>("h0b1c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_99 = eq(io.decode[0].csr, UInt<12>("h0b9c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_100 = eq(io.decode[0].csr, UInt<10>("h033d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_101 = eq(io.decode[0].csr, UInt<12>("h0b1d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_102 = eq(io.decode[0].csr, UInt<12>("h0b9d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_103 = eq(io.decode[0].csr, UInt<10>("h033e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_104 = eq(io.decode[0].csr, UInt<12>("h0b1e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_105 = eq(io.decode[0].csr, UInt<12>("h0b9e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_106 = eq(io.decode[0].csr, UInt<10>("h033f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_107 = eq(io.decode[0].csr, UInt<12>("h0b1f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_108 = eq(io.decode[0].csr, UInt<12>("h0b9f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_109 = eq(io.decode[0].csr, UInt<12>("h0b80")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_110 = eq(io.decode[0].csr, UInt<12>("h0b82")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_111 = eq(io.decode[0].csr, UInt<10>("h03a0")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_112 = eq(io.decode[0].csr, UInt<10>("h03a1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_113 = eq(io.decode[0].csr, UInt<10>("h03a2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_114 = eq(io.decode[0].csr, UInt<10>("h03a3")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_115 = eq(io.decode[0].csr, UInt<10>("h03b0")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_116 = eq(io.decode[0].csr, UInt<10>("h03b1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_117 = eq(io.decode[0].csr, UInt<10>("h03b2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_118 = eq(io.decode[0].csr, UInt<10>("h03b3")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_119 = eq(io.decode[0].csr, UInt<10>("h03b4")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_120 = eq(io.decode[0].csr, UInt<10>("h03b5")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_121 = eq(io.decode[0].csr, UInt<10>("h03b6")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_122 = eq(io.decode[0].csr, UInt<10>("h03b7")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_123 = eq(io.decode[0].csr, UInt<10>("h03b8")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_124 = eq(io.decode[0].csr, UInt<10>("h03b9")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_125 = eq(io.decode[0].csr, UInt<10>("h03ba")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_126 = eq(io.decode[0].csr, UInt<10>("h03bb")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_127 = eq(io.decode[0].csr, UInt<10>("h03bc")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_128 = eq(io.decode[0].csr, UInt<10>("h03bd")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_129 = eq(io.decode[0].csr, UInt<10>("h03be")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_130 = eq(io.decode[0].csr, UInt<10>("h03bf")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_131 = eq(io.decode[0].csr, UInt<11>("h07c1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_132 = eq(io.decode[0].csr, UInt<12>("h0f12")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_133 = eq(io.decode[0].csr, UInt<12>("h0f11")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_134 = eq(io.decode[0].csr, UInt<12>("h0f13")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_135 = or(_io_decode_0_read_illegal_T_2, _io_decode_0_read_illegal_T_3) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_136 = or(_io_decode_0_read_illegal_T_135, _io_decode_0_read_illegal_T_4) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_137 = or(_io_decode_0_read_illegal_T_136, _io_decode_0_read_illegal_T_5) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_138 = or(_io_decode_0_read_illegal_T_137, _io_decode_0_read_illegal_T_6) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_139 = or(_io_decode_0_read_illegal_T_138, _io_decode_0_read_illegal_T_7) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_140 = or(_io_decode_0_read_illegal_T_139, _io_decode_0_read_illegal_T_8) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_141 = or(_io_decode_0_read_illegal_T_140, _io_decode_0_read_illegal_T_9) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_142 = or(_io_decode_0_read_illegal_T_141, _io_decode_0_read_illegal_T_10) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_143 = or(_io_decode_0_read_illegal_T_142, _io_decode_0_read_illegal_T_11) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_144 = or(_io_decode_0_read_illegal_T_143, _io_decode_0_read_illegal_T_12) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_145 = or(_io_decode_0_read_illegal_T_144, _io_decode_0_read_illegal_T_13) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_146 = or(_io_decode_0_read_illegal_T_145, _io_decode_0_read_illegal_T_14) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_147 = or(_io_decode_0_read_illegal_T_146, _io_decode_0_read_illegal_T_15) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_148 = or(_io_decode_0_read_illegal_T_147, _io_decode_0_read_illegal_T_16) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_149 = or(_io_decode_0_read_illegal_T_148, _io_decode_0_read_illegal_T_17) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_150 = or(_io_decode_0_read_illegal_T_149, _io_decode_0_read_illegal_T_18) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_151 = or(_io_decode_0_read_illegal_T_150, _io_decode_0_read_illegal_T_19) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_152 = or(_io_decode_0_read_illegal_T_151, _io_decode_0_read_illegal_T_20) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_153 = or(_io_decode_0_read_illegal_T_152, _io_decode_0_read_illegal_T_21) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_154 = or(_io_decode_0_read_illegal_T_153, _io_decode_0_read_illegal_T_22) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_155 = or(_io_decode_0_read_illegal_T_154, _io_decode_0_read_illegal_T_23) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_156 = or(_io_decode_0_read_illegal_T_155, _io_decode_0_read_illegal_T_24) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_157 = or(_io_decode_0_read_illegal_T_156, _io_decode_0_read_illegal_T_25) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_158 = or(_io_decode_0_read_illegal_T_157, _io_decode_0_read_illegal_T_26) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_159 = or(_io_decode_0_read_illegal_T_158, _io_decode_0_read_illegal_T_27) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_160 = or(_io_decode_0_read_illegal_T_159, _io_decode_0_read_illegal_T_28) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_161 = or(_io_decode_0_read_illegal_T_160, _io_decode_0_read_illegal_T_29) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_162 = or(_io_decode_0_read_illegal_T_161, _io_decode_0_read_illegal_T_30) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_163 = or(_io_decode_0_read_illegal_T_162, _io_decode_0_read_illegal_T_31) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_164 = or(_io_decode_0_read_illegal_T_163, _io_decode_0_read_illegal_T_32) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_165 = or(_io_decode_0_read_illegal_T_164, _io_decode_0_read_illegal_T_33) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_166 = or(_io_decode_0_read_illegal_T_165, _io_decode_0_read_illegal_T_34) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_167 = or(_io_decode_0_read_illegal_T_166, _io_decode_0_read_illegal_T_35) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_168 = or(_io_decode_0_read_illegal_T_167, _io_decode_0_read_illegal_T_36) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_169 = or(_io_decode_0_read_illegal_T_168, _io_decode_0_read_illegal_T_37) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_170 = or(_io_decode_0_read_illegal_T_169, _io_decode_0_read_illegal_T_38) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_171 = or(_io_decode_0_read_illegal_T_170, _io_decode_0_read_illegal_T_39) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_172 = or(_io_decode_0_read_illegal_T_171, _io_decode_0_read_illegal_T_40) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_173 = or(_io_decode_0_read_illegal_T_172, _io_decode_0_read_illegal_T_41) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_174 = or(_io_decode_0_read_illegal_T_173, _io_decode_0_read_illegal_T_42) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_175 = or(_io_decode_0_read_illegal_T_174, _io_decode_0_read_illegal_T_43) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_176 = or(_io_decode_0_read_illegal_T_175, _io_decode_0_read_illegal_T_44) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_177 = or(_io_decode_0_read_illegal_T_176, _io_decode_0_read_illegal_T_45) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_178 = or(_io_decode_0_read_illegal_T_177, _io_decode_0_read_illegal_T_46) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_179 = or(_io_decode_0_read_illegal_T_178, _io_decode_0_read_illegal_T_47) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_180 = or(_io_decode_0_read_illegal_T_179, _io_decode_0_read_illegal_T_48) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_181 = or(_io_decode_0_read_illegal_T_180, _io_decode_0_read_illegal_T_49) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_182 = or(_io_decode_0_read_illegal_T_181, _io_decode_0_read_illegal_T_50) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_183 = or(_io_decode_0_read_illegal_T_182, _io_decode_0_read_illegal_T_51) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_184 = or(_io_decode_0_read_illegal_T_183, _io_decode_0_read_illegal_T_52) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_185 = or(_io_decode_0_read_illegal_T_184, _io_decode_0_read_illegal_T_53) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_186 = or(_io_decode_0_read_illegal_T_185, _io_decode_0_read_illegal_T_54) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_187 = or(_io_decode_0_read_illegal_T_186, _io_decode_0_read_illegal_T_55) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_188 = or(_io_decode_0_read_illegal_T_187, _io_decode_0_read_illegal_T_56) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_189 = or(_io_decode_0_read_illegal_T_188, _io_decode_0_read_illegal_T_57) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_190 = or(_io_decode_0_read_illegal_T_189, _io_decode_0_read_illegal_T_58) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_191 = or(_io_decode_0_read_illegal_T_190, _io_decode_0_read_illegal_T_59) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_192 = or(_io_decode_0_read_illegal_T_191, _io_decode_0_read_illegal_T_60) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_193 = or(_io_decode_0_read_illegal_T_192, _io_decode_0_read_illegal_T_61) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_194 = or(_io_decode_0_read_illegal_T_193, _io_decode_0_read_illegal_T_62) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_195 = or(_io_decode_0_read_illegal_T_194, _io_decode_0_read_illegal_T_63) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_196 = or(_io_decode_0_read_illegal_T_195, _io_decode_0_read_illegal_T_64) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_197 = or(_io_decode_0_read_illegal_T_196, _io_decode_0_read_illegal_T_65) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_198 = or(_io_decode_0_read_illegal_T_197, _io_decode_0_read_illegal_T_66) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_199 = or(_io_decode_0_read_illegal_T_198, _io_decode_0_read_illegal_T_67) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_200 = or(_io_decode_0_read_illegal_T_199, _io_decode_0_read_illegal_T_68) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_201 = or(_io_decode_0_read_illegal_T_200, _io_decode_0_read_illegal_T_69) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_202 = or(_io_decode_0_read_illegal_T_201, _io_decode_0_read_illegal_T_70) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_203 = or(_io_decode_0_read_illegal_T_202, _io_decode_0_read_illegal_T_71) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_204 = or(_io_decode_0_read_illegal_T_203, _io_decode_0_read_illegal_T_72) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_205 = or(_io_decode_0_read_illegal_T_204, _io_decode_0_read_illegal_T_73) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_206 = or(_io_decode_0_read_illegal_T_205, _io_decode_0_read_illegal_T_74) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_207 = or(_io_decode_0_read_illegal_T_206, _io_decode_0_read_illegal_T_75) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_208 = or(_io_decode_0_read_illegal_T_207, _io_decode_0_read_illegal_T_76) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_209 = or(_io_decode_0_read_illegal_T_208, _io_decode_0_read_illegal_T_77) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_210 = or(_io_decode_0_read_illegal_T_209, _io_decode_0_read_illegal_T_78) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_211 = or(_io_decode_0_read_illegal_T_210, _io_decode_0_read_illegal_T_79) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_212 = or(_io_decode_0_read_illegal_T_211, _io_decode_0_read_illegal_T_80) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_213 = or(_io_decode_0_read_illegal_T_212, _io_decode_0_read_illegal_T_81) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_214 = or(_io_decode_0_read_illegal_T_213, _io_decode_0_read_illegal_T_82) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_215 = or(_io_decode_0_read_illegal_T_214, _io_decode_0_read_illegal_T_83) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_216 = or(_io_decode_0_read_illegal_T_215, _io_decode_0_read_illegal_T_84) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_217 = or(_io_decode_0_read_illegal_T_216, _io_decode_0_read_illegal_T_85) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_218 = or(_io_decode_0_read_illegal_T_217, _io_decode_0_read_illegal_T_86) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_219 = or(_io_decode_0_read_illegal_T_218, _io_decode_0_read_illegal_T_87) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_220 = or(_io_decode_0_read_illegal_T_219, _io_decode_0_read_illegal_T_88) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_221 = or(_io_decode_0_read_illegal_T_220, _io_decode_0_read_illegal_T_89) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_222 = or(_io_decode_0_read_illegal_T_221, _io_decode_0_read_illegal_T_90) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_223 = or(_io_decode_0_read_illegal_T_222, _io_decode_0_read_illegal_T_91) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_224 = or(_io_decode_0_read_illegal_T_223, _io_decode_0_read_illegal_T_92) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_225 = or(_io_decode_0_read_illegal_T_224, _io_decode_0_read_illegal_T_93) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_226 = or(_io_decode_0_read_illegal_T_225, _io_decode_0_read_illegal_T_94) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_227 = or(_io_decode_0_read_illegal_T_226, _io_decode_0_read_illegal_T_95) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_228 = or(_io_decode_0_read_illegal_T_227, _io_decode_0_read_illegal_T_96) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_229 = or(_io_decode_0_read_illegal_T_228, _io_decode_0_read_illegal_T_97) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_230 = or(_io_decode_0_read_illegal_T_229, _io_decode_0_read_illegal_T_98) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_231 = or(_io_decode_0_read_illegal_T_230, _io_decode_0_read_illegal_T_99) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_232 = or(_io_decode_0_read_illegal_T_231, _io_decode_0_read_illegal_T_100) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_233 = or(_io_decode_0_read_illegal_T_232, _io_decode_0_read_illegal_T_101) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_234 = or(_io_decode_0_read_illegal_T_233, _io_decode_0_read_illegal_T_102) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_235 = or(_io_decode_0_read_illegal_T_234, _io_decode_0_read_illegal_T_103) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_236 = or(_io_decode_0_read_illegal_T_235, _io_decode_0_read_illegal_T_104) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_237 = or(_io_decode_0_read_illegal_T_236, _io_decode_0_read_illegal_T_105) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_238 = or(_io_decode_0_read_illegal_T_237, _io_decode_0_read_illegal_T_106) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_239 = or(_io_decode_0_read_illegal_T_238, _io_decode_0_read_illegal_T_107) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_240 = or(_io_decode_0_read_illegal_T_239, _io_decode_0_read_illegal_T_108) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_241 = or(_io_decode_0_read_illegal_T_240, _io_decode_0_read_illegal_T_109) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_242 = or(_io_decode_0_read_illegal_T_241, _io_decode_0_read_illegal_T_110) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_243 = or(_io_decode_0_read_illegal_T_242, _io_decode_0_read_illegal_T_111) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_244 = or(_io_decode_0_read_illegal_T_243, _io_decode_0_read_illegal_T_112) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_245 = or(_io_decode_0_read_illegal_T_244, _io_decode_0_read_illegal_T_113) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_246 = or(_io_decode_0_read_illegal_T_245, _io_decode_0_read_illegal_T_114) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_247 = or(_io_decode_0_read_illegal_T_246, _io_decode_0_read_illegal_T_115) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_248 = or(_io_decode_0_read_illegal_T_247, _io_decode_0_read_illegal_T_116) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_249 = or(_io_decode_0_read_illegal_T_248, _io_decode_0_read_illegal_T_117) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_250 = or(_io_decode_0_read_illegal_T_249, _io_decode_0_read_illegal_T_118) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_251 = or(_io_decode_0_read_illegal_T_250, _io_decode_0_read_illegal_T_119) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_252 = or(_io_decode_0_read_illegal_T_251, _io_decode_0_read_illegal_T_120) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_253 = or(_io_decode_0_read_illegal_T_252, _io_decode_0_read_illegal_T_121) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_254 = or(_io_decode_0_read_illegal_T_253, _io_decode_0_read_illegal_T_122) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_255 = or(_io_decode_0_read_illegal_T_254, _io_decode_0_read_illegal_T_123) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_256 = or(_io_decode_0_read_illegal_T_255, _io_decode_0_read_illegal_T_124) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_257 = or(_io_decode_0_read_illegal_T_256, _io_decode_0_read_illegal_T_125) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_258 = or(_io_decode_0_read_illegal_T_257, _io_decode_0_read_illegal_T_126) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_259 = or(_io_decode_0_read_illegal_T_258, _io_decode_0_read_illegal_T_127) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_260 = or(_io_decode_0_read_illegal_T_259, _io_decode_0_read_illegal_T_128) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_261 = or(_io_decode_0_read_illegal_T_260, _io_decode_0_read_illegal_T_129) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_262 = or(_io_decode_0_read_illegal_T_261, _io_decode_0_read_illegal_T_130) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_263 = or(_io_decode_0_read_illegal_T_262, _io_decode_0_read_illegal_T_131) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_264 = or(_io_decode_0_read_illegal_T_263, _io_decode_0_read_illegal_T_132) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_265 = or(_io_decode_0_read_illegal_T_264, _io_decode_0_read_illegal_T_133) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_266 = or(_io_decode_0_read_illegal_T_265, _io_decode_0_read_illegal_T_134) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_267 = eq(_io_decode_0_read_illegal_T_266, UInt<1>("h00")) @[CSR.scala 672:7]
    node _io_decode_0_read_illegal_T_268 = or(_io_decode_0_read_illegal_T_1, _io_decode_0_read_illegal_T_267) @[CSR.scala 671:62]
    node _io_decode_0_read_illegal_T_269 = eq(io.decode[0].csr, UInt<9>("h0180")) @[CSR.scala 673:18]
    node _io_decode_0_read_illegal_T_270 = eq(allow_sfence_vma, UInt<1>("h00")) @[CSR.scala 673:35]
    node _io_decode_0_read_illegal_T_271 = and(_io_decode_0_read_illegal_T_269, _io_decode_0_read_illegal_T_270) @[CSR.scala 673:32]
    node _io_decode_0_read_illegal_T_272 = or(_io_decode_0_read_illegal_T_268, _io_decode_0_read_illegal_T_271) @[CSR.scala 672:32]
    node _io_decode_0_read_illegal_T_273 = geq(io.decode[0].csr, UInt<12>("h0c00")) @[package.scala 204:47]
    node _io_decode_0_read_illegal_T_274 = lt(io.decode[0].csr, UInt<12>("h0c20")) @[package.scala 204:60]
    node _io_decode_0_read_illegal_T_275 = and(_io_decode_0_read_illegal_T_273, _io_decode_0_read_illegal_T_274) @[package.scala 204:55]
    node _io_decode_0_read_illegal_T_276 = geq(io.decode[0].csr, UInt<12>("h0c80")) @[package.scala 204:47]
    node _io_decode_0_read_illegal_T_277 = lt(io.decode[0].csr, UInt<12>("h0ca0")) @[package.scala 204:60]
    node _io_decode_0_read_illegal_T_278 = and(_io_decode_0_read_illegal_T_276, _io_decode_0_read_illegal_T_277) @[package.scala 204:55]
    node _io_decode_0_read_illegal_T_279 = or(_io_decode_0_read_illegal_T_275, _io_decode_0_read_illegal_T_278) @[CSR.scala 674:66]
    node _io_decode_0_read_illegal_T_280 = eq(allow_counter, UInt<1>("h00")) @[CSR.scala 674:133]
    node _io_decode_0_read_illegal_T_281 = and(_io_decode_0_read_illegal_T_279, _io_decode_0_read_illegal_T_280) @[CSR.scala 674:130]
    node _io_decode_0_read_illegal_T_282 = or(_io_decode_0_read_illegal_T_272, _io_decode_0_read_illegal_T_281) @[CSR.scala 673:53]
    node _io_decode_0_read_illegal_T_283 = and(io.decode[0].csr, UInt<12>("h0c10")) @[Decode.scala 14:65]
    node _io_decode_0_read_illegal_T_284 = eq(_io_decode_0_read_illegal_T_283, UInt<12>("h0410")) @[Decode.scala 14:121]
    node _io_decode_0_read_illegal_T_285 = or(UInt<1>("h00"), _io_decode_0_read_illegal_T_284) @[Decode.scala 15:30]
    node _io_decode_0_read_illegal_T_286 = bits(_io_decode_0_read_illegal_T_285, 0, 0) @[Decode.scala 55:116]
    node _io_decode_0_read_illegal_T_287 = eq(reg_debug, UInt<1>("h00")) @[CSR.scala 675:45]
    node _io_decode_0_read_illegal_T_288 = and(_io_decode_0_read_illegal_T_286, _io_decode_0_read_illegal_T_287) @[CSR.scala 675:42]
    node _io_decode_0_read_illegal_T_289 = or(_io_decode_0_read_illegal_T_282, _io_decode_0_read_illegal_T_288) @[CSR.scala 674:148]
    node _io_decode_0_read_illegal_T_290 = and(UInt<1>("h00"), io.decode[0].vector_illegal) @[CSR.scala 676:43]
    node _io_decode_0_read_illegal_T_291 = or(_io_decode_0_read_illegal_T_289, _io_decode_0_read_illegal_T_290) @[CSR.scala 675:56]
    node _io_decode_0_read_illegal_T_292 = and(io.decode[0].fp_csr, io.decode[0].fp_illegal) @[CSR.scala 677:21]
    node _io_decode_0_read_illegal_T_293 = or(_io_decode_0_read_illegal_T_291, _io_decode_0_read_illegal_T_292) @[CSR.scala 676:68]
    io.decode[0].read_illegal <= _io_decode_0_read_illegal_T_293 @[CSR.scala 671:25]
    node _io_decode_0_write_illegal_T = bits(io.decode[0].csr, 11, 10) @[CSR.scala 678:39]
    node _io_decode_0_write_illegal_T_1 = andr(_io_decode_0_write_illegal_T) @[CSR.scala 678:47]
    io.decode[0].write_illegal <= _io_decode_0_write_illegal_T_1 @[CSR.scala 678:26]
    node _io_decode_0_write_flush_T = geq(io.decode[0].csr, UInt<10>("h0340")) @[CSR.scala 679:40]
    node _io_decode_0_write_flush_T_1 = leq(io.decode[0].csr, UInt<10>("h0343")) @[CSR.scala 679:71]
    node _io_decode_0_write_flush_T_2 = and(_io_decode_0_write_flush_T, _io_decode_0_write_flush_T_1) @[CSR.scala 679:57]
    node _io_decode_0_write_flush_T_3 = geq(io.decode[0].csr, UInt<9>("h0140")) @[CSR.scala 679:99]
    node _io_decode_0_write_flush_T_4 = leq(io.decode[0].csr, UInt<9>("h0143")) @[CSR.scala 679:130]
    node _io_decode_0_write_flush_T_5 = and(_io_decode_0_write_flush_T_3, _io_decode_0_write_flush_T_4) @[CSR.scala 679:116]
    node _io_decode_0_write_flush_T_6 = or(_io_decode_0_write_flush_T_2, _io_decode_0_write_flush_T_5) @[CSR.scala 679:85]
    node _io_decode_0_write_flush_T_7 = eq(_io_decode_0_write_flush_T_6, UInt<1>("h00")) @[CSR.scala 679:27]
    io.decode[0].write_flush <= _io_decode_0_write_flush_T_7 @[CSR.scala 679:24]
    node _io_decode_0_system_illegal_T = bits(io.decode[0].csr, 9, 8) @[CSR.scala 680:58]
    node _io_decode_0_system_illegal_T_1 = lt(reg_mstatus.prv, _io_decode_0_system_illegal_T) @[CSR.scala 680:46]
    node _io_decode_0_system_illegal_T_2 = eq(allow_wfi, UInt<1>("h00")) @[CSR.scala 681:17]
    node _io_decode_0_system_illegal_T_3 = and(is_wfi, _io_decode_0_system_illegal_T_2) @[CSR.scala 681:14]
    node _io_decode_0_system_illegal_T_4 = or(_io_decode_0_system_illegal_T_1, _io_decode_0_system_illegal_T_3) @[CSR.scala 680:64]
    node _io_decode_0_system_illegal_T_5 = eq(allow_sret, UInt<1>("h00")) @[CSR.scala 682:17]
    node _io_decode_0_system_illegal_T_6 = and(is_ret, _io_decode_0_system_illegal_T_5) @[CSR.scala 682:14]
    node _io_decode_0_system_illegal_T_7 = or(_io_decode_0_system_illegal_T_4, _io_decode_0_system_illegal_T_6) @[CSR.scala 681:28]
    node _io_decode_0_system_illegal_T_8 = bits(io.decode[0].csr, 10, 10) @[CSR.scala 683:27]
    node _io_decode_0_system_illegal_T_9 = and(is_ret, _io_decode_0_system_illegal_T_8) @[CSR.scala 683:14]
    node _io_decode_0_system_illegal_T_10 = bits(io.decode[0].csr, 7, 7) @[CSR.scala 683:45]
    node _io_decode_0_system_illegal_T_11 = and(_io_decode_0_system_illegal_T_9, _io_decode_0_system_illegal_T_10) @[CSR.scala 683:32]
    node _io_decode_0_system_illegal_T_12 = eq(reg_debug, UInt<1>("h00")) @[CSR.scala 683:52]
    node _io_decode_0_system_illegal_T_13 = and(_io_decode_0_system_illegal_T_11, _io_decode_0_system_illegal_T_12) @[CSR.scala 683:49]
    node _io_decode_0_system_illegal_T_14 = or(_io_decode_0_system_illegal_T_7, _io_decode_0_system_illegal_T_13) @[CSR.scala 682:29]
    node _io_decode_0_system_illegal_T_15 = eq(allow_sfence_vma, UInt<1>("h00")) @[CSR.scala 684:20]
    node _io_decode_0_system_illegal_T_16 = and(UInt<1>("h00"), _io_decode_0_system_illegal_T_15) @[CSR.scala 684:17]
    node _io_decode_0_system_illegal_T_17 = or(_io_decode_0_system_illegal_T_14, _io_decode_0_system_illegal_T_16) @[CSR.scala 683:63]
    io.decode[0].system_illegal <= _io_decode_0_system_illegal_T_17 @[CSR.scala 680:27]
    node _cause_T = add(reg_mstatus.prv, UInt<4>("h08")) @[CSR.scala 688:36]
    node _cause_T_1 = tail(_cause_T, 1) @[CSR.scala 688:36]
    node _cause_T_2 = mux(insn_break, UInt<2>("h03"), io.cause) @[CSR.scala 689:14]
    node cause = mux(insn_call, _cause_T_1, _cause_T_2) @[CSR.scala 688:8]
    node cause_lsbs = bits(cause, 7, 0) @[CSR.scala 690:25]
    node _causeIsDebugInt_T = bits(cause, 31, 31) @[CSR.scala 691:30]
    node _causeIsDebugInt_T_1 = eq(cause_lsbs, UInt<4>("h0e")) @[CSR.scala 691:53]
    node causeIsDebugInt = and(_causeIsDebugInt_T, _causeIsDebugInt_T_1) @[CSR.scala 691:39]
    node _causeIsDebugTrigger_T = bits(cause, 31, 31) @[CSR.scala 692:35]
    node _causeIsDebugTrigger_T_1 = eq(_causeIsDebugTrigger_T, UInt<1>("h00")) @[CSR.scala 692:29]
    node _causeIsDebugTrigger_T_2 = eq(cause_lsbs, UInt<4>("h0e")) @[CSR.scala 692:58]
    node causeIsDebugTrigger = and(_causeIsDebugTrigger_T_1, _causeIsDebugTrigger_T_2) @[CSR.scala 692:44]
    node _causeIsDebugBreak_T = bits(cause, 31, 31) @[CSR.scala 693:33]
    node _causeIsDebugBreak_T_1 = eq(_causeIsDebugBreak_T, UInt<1>("h00")) @[CSR.scala 693:27]
    node _causeIsDebugBreak_T_2 = and(_causeIsDebugBreak_T_1, insn_break) @[CSR.scala 693:42]
    node causeIsDebugBreak_lo = cat(reg_dcsr.ebreaks, reg_dcsr.ebreaku) @[Cat.scala 30:58]
    node causeIsDebugBreak_hi = cat(reg_dcsr.ebreakm, reg_dcsr.ebreakh) @[Cat.scala 30:58]
    node _causeIsDebugBreak_T_3 = cat(causeIsDebugBreak_hi, causeIsDebugBreak_lo) @[Cat.scala 30:58]
    node _causeIsDebugBreak_T_4 = dshr(_causeIsDebugBreak_T_3, reg_mstatus.prv) @[CSR.scala 693:134]
    node _causeIsDebugBreak_T_5 = bits(_causeIsDebugBreak_T_4, 0, 0) @[CSR.scala 693:134]
    node causeIsDebugBreak = and(_causeIsDebugBreak_T_2, _causeIsDebugBreak_T_5) @[CSR.scala 693:56]
    node _trapToDebug_T = or(reg_singleStepped, causeIsDebugInt) @[CSR.scala 694:60]
    node _trapToDebug_T_1 = or(_trapToDebug_T, causeIsDebugTrigger) @[CSR.scala 694:79]
    node _trapToDebug_T_2 = or(_trapToDebug_T_1, causeIsDebugBreak) @[CSR.scala 694:102]
    node _trapToDebug_T_3 = or(_trapToDebug_T_2, reg_debug) @[CSR.scala 694:123]
    node trapToDebug = and(UInt<1>("h01"), _trapToDebug_T_3) @[CSR.scala 694:38]
    node _debugTVec_T = mux(insn_break, UInt<12>("h0800"), UInt<12>("h0808")) @[CSR.scala 697:37]
    node debugTVec = mux(reg_debug, _debugTVec_T, UInt<12>("h0800")) @[CSR.scala 697:22]
    node _delegate_T = leq(reg_mstatus.prv, UInt<1>("h01")) @[CSR.scala 698:59]
    node _delegate_T_1 = and(UInt<1>("h00"), _delegate_T) @[CSR.scala 698:40]
    node _delegate_T_2 = bits(cause, 31, 31) @[CSR.scala 698:80]
    node _delegate_T_3 = dshr(read_mideleg, cause_lsbs) @[CSR.scala 698:102]
    node _delegate_T_4 = bits(_delegate_T_3, 0, 0) @[CSR.scala 698:102]
    node _delegate_T_5 = dshr(read_medeleg, cause_lsbs) @[CSR.scala 698:128]
    node _delegate_T_6 = bits(_delegate_T_5, 0, 0) @[CSR.scala 698:128]
    node _delegate_T_7 = mux(_delegate_T_2, _delegate_T_4, _delegate_T_6) @[CSR.scala 698:74]
    node delegate = and(_delegate_T_1, _delegate_T_7) @[CSR.scala 698:68]
    node notDebugTVec_base = mux(delegate, read_stvec, read_mtvec) @[CSR.scala 705:19]
    node _notDebugTVec_interruptOffset_T = bits(cause, 4, 0) @[CSR.scala 706:32]
    node notDebugTVec_interruptVec_lo = shl(_notDebugTVec_interruptOffset_T, 2) @[CSR.scala 706:59]
    node notDebugTVec_interruptVec_hi = shr(notDebugTVec_base, 7) @[CSR.scala 707:33]
    node notDebugTVec_interruptVec = cat(notDebugTVec_interruptVec_hi, notDebugTVec_interruptVec_lo) @[Cat.scala 30:58]
    node _notDebugTVec_doVector_T = bits(notDebugTVec_base, 0, 0) @[CSR.scala 708:24]
    node _notDebugTVec_doVector_T_1 = bits(cause, 31, 31) @[CSR.scala 708:36]
    node _notDebugTVec_doVector_T_2 = and(_notDebugTVec_doVector_T, _notDebugTVec_doVector_T_1) @[CSR.scala 708:28]
    node _notDebugTVec_doVector_T_3 = shr(cause_lsbs, 5) @[CSR.scala 708:70]
    node _notDebugTVec_doVector_T_4 = eq(_notDebugTVec_doVector_T_3, UInt<1>("h00")) @[CSR.scala 708:94]
    node notDebugTVec_doVector = and(_notDebugTVec_doVector_T_2, _notDebugTVec_doVector_T_4) @[CSR.scala 708:55]
    node _notDebugTVec_T = shr(notDebugTVec_base, 2) @[CSR.scala 709:38]
    node _notDebugTVec_T_1 = shl(_notDebugTVec_T, 2) @[CSR.scala 709:56]
    node notDebugTVec = mux(notDebugTVec_doVector, notDebugTVec_interruptVec, _notDebugTVec_T_1) @[CSR.scala 709:8]
    node _causeIsUnmiInt_T = bits(cause, 31, 31) @[CSR.scala 712:29]
    node _causeIsUnmiInt_T_1 = bits(cause, 30, 30) @[CSR.scala 712:46]
    node _causeIsUnmiInt_T_2 = and(_causeIsUnmiInt_T, _causeIsUnmiInt_T_1) @[CSR.scala 712:38]
    node _causeIsUnmiInt_T_3 = eq(cause_lsbs, UInt<4>("h0f")) @[CSR.scala 712:69]
    node causeIsUnmiInt = and(_causeIsUnmiInt_T_2, _causeIsUnmiInt_T_3) @[CSR.scala 712:55]
    node _causeIsRnmiInt_T = bits(cause, 31, 31) @[CSR.scala 713:29]
    node _causeIsRnmiInt_T_1 = bits(cause, 30, 30) @[CSR.scala 713:46]
    node _causeIsRnmiInt_T_2 = and(_causeIsRnmiInt_T, _causeIsRnmiInt_T_1) @[CSR.scala 713:38]
    node _causeIsRnmiInt_T_3 = eq(cause_lsbs, UInt<4>("h0d")) @[CSR.scala 713:70]
    node _causeIsRnmiInt_T_4 = eq(cause_lsbs, UInt<4>("h0c")) @[CSR.scala 713:105]
    node _causeIsRnmiInt_T_5 = or(_causeIsRnmiInt_T_3, _causeIsRnmiInt_T_4) @[CSR.scala 713:91]
    node causeIsRnmiInt = and(_causeIsRnmiInt_T_2, _causeIsRnmiInt_T_5) @[CSR.scala 713:55]
    node _causeIsRnmiBEU_T = bits(cause, 31, 31) @[CSR.scala 714:29]
    node _causeIsRnmiBEU_T_1 = bits(cause, 30, 30) @[CSR.scala 714:46]
    node _causeIsRnmiBEU_T_2 = and(_causeIsRnmiBEU_T, _causeIsRnmiBEU_T_1) @[CSR.scala 714:38]
    node _causeIsRnmiBEU_T_3 = eq(cause_lsbs, UInt<4>("h0c")) @[CSR.scala 714:69]
    node causeIsRnmiBEU = and(_causeIsRnmiBEU_T_2, _causeIsRnmiBEU_T_3) @[CSR.scala 714:55]
    node causeIsNmi = or(causeIsUnmiInt, causeIsRnmiInt) @[CSR.scala 715:35]
    node trapToNmiInt = and(UInt<1>("h00"), causeIsNmi) @[CSR.scala 718:33]
    node _trapToNmiXcpt_T = eq(nmie, UInt<1>("h00")) @[CSR.scala 719:37]
    node trapToNmiXcpt = and(UInt<1>("h00"), _trapToNmiXcpt_T) @[CSR.scala 719:34]
    node trapToNmi = or(trapToNmiInt, trapToNmiXcpt) @[CSR.scala 720:32]
    node _nmiTVec_T = mux(causeIsNmi, UInt<1>("h00"), UInt<1>("h00")) @[CSR.scala 721:21]
    node _nmiTVec_T_1 = shr(_nmiTVec_T, 1) @[CSR.scala 721:58]
    node nmiTVec = shl(_nmiTVec_T_1, 1) @[CSR.scala 721:62]
    node _tvec_T = mux(trapToNmi, nmiTVec, notDebugTVec) @[CSR.scala 723:45]
    node tvec = mux(trapToDebug, debugTVec, _tvec_T) @[CSR.scala 723:17]
    io.evec <= tvec @[CSR.scala 724:11]
    io.ptbr <- reg_satp @[CSR.scala 725:11]
    node _io_eret_T = or(insn_call, insn_break) @[CSR.scala 726:24]
    node _io_eret_T_1 = or(_io_eret_T, insn_ret) @[CSR.scala 726:38]
    io.eret <= _io_eret_T_1 @[CSR.scala 726:11]
    node _io_singleStep_T = eq(reg_debug, UInt<1>("h00")) @[CSR.scala 727:37]
    node _io_singleStep_T_1 = and(reg_dcsr.step, _io_singleStep_T) @[CSR.scala 727:34]
    io.singleStep <= _io_singleStep_T_1 @[CSR.scala 727:17]
    io.status <- reg_mstatus @[CSR.scala 728:13]
    node _io_status_sd_T = andr(io.status.fs) @[CSR.scala 729:32]
    node _io_status_sd_T_1 = andr(io.status.xs) @[CSR.scala 729:53]
    node _io_status_sd_T_2 = or(_io_status_sd_T, _io_status_sd_T_1) @[CSR.scala 729:37]
    node _io_status_sd_T_3 = andr(io.status.vs) @[CSR.scala 729:74]
    node _io_status_sd_T_4 = or(_io_status_sd_T_2, _io_status_sd_T_3) @[CSR.scala 729:58]
    io.status.sd <= _io_status_sd_T_4 @[CSR.scala 729:16]
    io.status.debug <= reg_debug @[CSR.scala 730:19]
    io.status.isa <= reg_misa @[CSR.scala 731:17]
    io.status.uxl <= UInt<1>("h00") @[CSR.scala 732:17]
    io.status.sxl <= UInt<1>("h00") @[CSR.scala 733:17]
    node _io_status_dprv_x87_T = eq(reg_debug, UInt<1>("h00")) @[CSR.scala 734:56]
    node _io_status_dprv_x87_T_1 = and(reg_mstatus.mprv, _io_status_dprv_x87_T) @[CSR.scala 734:53]
    node io_status_dprv_x87 = mux(_io_status_dprv_x87_T_1, reg_mstatus.mpp, reg_mstatus.prv) @[CSR.scala 734:35]
    reg io_status_dprv_REG : UInt, clock @[CSR.scala 734:24]
    io_status_dprv_REG <= io_status_dprv_x87 @[CSR.scala 734:24]
    io.status.dprv <= io_status_dprv_REG @[CSR.scala 734:18]
    io.status.sd_rv32 <= io.status.sd @[CSR.scala 736:23]
    node _exception_T = or(insn_call, insn_break) @[CSR.scala 738:29]
    node exception = or(_exception_T, io.exception) @[CSR.scala 738:43]
    node _T_227 = add(insn_ret, insn_call) @[Bitwise.scala 47:55]
    node _T_228 = bits(_T_227, 1, 0) @[Bitwise.scala 47:55]
    node _T_229 = add(insn_break, io.exception) @[Bitwise.scala 47:55]
    node _T_230 = bits(_T_229, 1, 0) @[Bitwise.scala 47:55]
    node _T_231 = add(_T_228, _T_230) @[Bitwise.scala 47:55]
    node _T_232 = bits(_T_231, 2, 0) @[Bitwise.scala 47:55]
    node _T_233 = leq(_T_232, UInt<1>("h01")) @[CSR.scala 739:79]
    node _T_234 = bits(reset, 0, 0) @[CSR.scala 739:9]
    node _T_235 = or(_T_233, _T_234) @[CSR.scala 739:9]
    node _T_236 = eq(_T_235, UInt<1>("h00")) @[CSR.scala 739:9]
    when _T_236 : @[CSR.scala 739:9]
      printf(clock, UInt<1>(1), "Assertion failed: these conditions must be mutually exclusive\n    at CSR.scala:739 assert(PopCount(insn_ret :: insn_call :: insn_break :: io.exception :: Nil) <= 1, \"these conditions must be mutually exclusive\")\n") @[CSR.scala 739:9]
      stop(clock, UInt<1>(1), 1) @[CSR.scala 739:9]
      skip @[CSR.scala 739:9]
    node _T_237 = eq(io.singleStep, UInt<1>("h00")) @[CSR.scala 741:21]
    node _T_238 = and(insn_wfi, _T_237) @[CSR.scala 741:18]
    node _T_239 = eq(reg_debug, UInt<1>("h00")) @[CSR.scala 741:39]
    node _T_240 = and(_T_238, _T_239) @[CSR.scala 741:36]
    when _T_240 : @[CSR.scala 741:51]
      reg_wfi <= UInt<1>("h01") @[CSR.scala 741:61]
      skip @[CSR.scala 741:51]
    node _T_241 = orr(pending_interrupts) @[CSR.scala 742:28]
    node _T_242 = or(_T_241, io.interrupts.debug) @[CSR.scala 742:32]
    node _T_243 = or(_T_242, exception) @[CSR.scala 742:55]
    when _T_243 : @[CSR.scala 742:69]
      reg_wfi <= UInt<1>("h00") @[CSR.scala 742:79]
      skip @[CSR.scala 742:69]
    node _T_244 = bits(io.retire, 0, 0) @[CSR.scala 745:18]
    node _T_245 = or(_T_244, exception) @[CSR.scala 745:22]
    when _T_245 : @[CSR.scala 745:36]
      reg_singleStepped <= UInt<1>("h01") @[CSR.scala 745:56]
      skip @[CSR.scala 745:36]
    node _T_246 = eq(io.singleStep, UInt<1>("h00")) @[CSR.scala 746:9]
    when _T_246 : @[CSR.scala 746:25]
      reg_singleStepped <= UInt<1>("h00") @[CSR.scala 746:45]
      skip @[CSR.scala 746:25]
    node _T_247 = eq(io.singleStep, UInt<1>("h00")) @[CSR.scala 747:10]
    node _T_248 = leq(io.retire, UInt<1>("h01")) @[CSR.scala 747:38]
    node _T_249 = or(_T_247, _T_248) @[CSR.scala 747:25]
    node _T_250 = bits(reset, 0, 0) @[CSR.scala 747:9]
    node _T_251 = or(_T_249, _T_250) @[CSR.scala 747:9]
    node _T_252 = eq(_T_251, UInt<1>("h00")) @[CSR.scala 747:9]
    when _T_252 : @[CSR.scala 747:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at CSR.scala:747 assert(!io.singleStep || io.retire <= UInt(1))\n") @[CSR.scala 747:9]
      stop(clock, UInt<1>(1), 1) @[CSR.scala 747:9]
      skip @[CSR.scala 747:9]
    node _T_253 = eq(reg_singleStepped, UInt<1>("h00")) @[CSR.scala 748:10]
    node _T_254 = eq(io.retire, UInt<1>("h00")) @[CSR.scala 748:42]
    node _T_255 = or(_T_253, _T_254) @[CSR.scala 748:29]
    node _T_256 = bits(reset, 0, 0) @[CSR.scala 748:9]
    node _T_257 = or(_T_255, _T_256) @[CSR.scala 748:9]
    node _T_258 = eq(_T_257, UInt<1>("h00")) @[CSR.scala 748:9]
    when _T_258 : @[CSR.scala 748:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at CSR.scala:748 assert(!reg_singleStepped || io.retire === UInt(0))\n") @[CSR.scala 748:9]
      stop(clock, UInt<1>(1), 1) @[CSR.scala 748:9]
      skip @[CSR.scala 748:9]
    node _epc_T = not(io.pc) @[CSR.scala 1204:28]
    node _epc_T_1 = or(_epc_T, UInt<1>("h01")) @[CSR.scala 1204:31]
    node epc = not(_epc_T_1) @[CSR.scala 1204:26]
    wire xcause_dest : UInt<3>
    xcause_dest is invalid
    xcause_dest <= UInt<3>("h00")
    when exception : @[CSR.scala 754:20]
      when trapToDebug : @[CSR.scala 755:24]
        node _T_259 = eq(reg_debug, UInt<1>("h00")) @[CSR.scala 756:13]
        when _T_259 : @[CSR.scala 756:25]
          reg_debug <= UInt<1>("h01") @[CSR.scala 757:19]
          reg_dpc <= epc @[CSR.scala 758:17]
          node _reg_dcsr_cause_T = mux(causeIsDebugTrigger, UInt<2>("h02"), UInt<1>("h01")) @[CSR.scala 759:86]
          node _reg_dcsr_cause_T_1 = mux(causeIsDebugInt, UInt<2>("h03"), _reg_dcsr_cause_T) @[CSR.scala 759:56]
          node _reg_dcsr_cause_T_2 = mux(reg_singleStepped, UInt<3>("h04"), _reg_dcsr_cause_T_1) @[CSR.scala 759:30]
          reg_dcsr.cause <= _reg_dcsr_cause_T_2 @[CSR.scala 759:24]
          reg_dcsr.prv <= UInt<2>("h03") @[CSR.scala 760:22]
          new_prv <= UInt<2>("h03") @[CSR.scala 761:17]
          skip @[CSR.scala 756:25]
        skip @[CSR.scala 755:24]
      else : @[CSR.scala 763:31]
        when trapToNmiInt : @[CSR.scala 763:31]
          node _T_260 = and(reg_unmie, causeIsUnmiInt) @[CSR.scala 764:36]
          node _T_261 = or(reg_rnmie, _T_260) @[CSR.scala 764:23]
          when _T_261 : @[CSR.scala 764:55]
            reg_rnmie <= UInt<1>("h00") @[CSR.scala 765:19]
            node _reg_unmie_T = eq(causeIsUnmiInt, UInt<1>("h00")) @[CSR.scala 766:22]
            reg_unmie <= _reg_unmie_T @[CSR.scala 766:19]
            reg_mnepc <= epc @[CSR.scala 767:19]
            node _reg_mncause_T = mux(causeIsRnmiBEU, UInt<2>("h03"), UInt<2>("h02")) @[CSR.scala 768:80]
            node _reg_mncause_T_1 = mux(causeIsUnmiInt, UInt<1>("h01"), _reg_mncause_T) @[CSR.scala 768:55]
            node _reg_mncause_T_2 = or(UInt<32>("h080000000"), _reg_mncause_T_1) @[CSR.scala 768:50]
            reg_mncause <= _reg_mncause_T_2 @[CSR.scala 768:21]
            reg_mnstatus.mpp <= UInt<2>("h03") @[CSR.scala 769:26]
            new_prv <= UInt<2>("h03") @[CSR.scala 770:17]
            skip @[CSR.scala 764:55]
          skip @[CSR.scala 763:31]
        else : @[CSR.scala 772:35]
          node _T_262 = and(delegate, nmie) @[CSR.scala 772:26]
          when _T_262 : @[CSR.scala 772:35]
            reg_sepc <= epc @[CSR.scala 773:16]
            reg_scause <= cause @[CSR.scala 774:18]
            xcause_dest <= UInt<3>("h03") @[CSR.scala 775:19]
            reg_stval <= io.tval @[CSR.scala 776:17]
            reg_mstatus.spie <= reg_mstatus.sie @[CSR.scala 777:24]
            reg_mstatus.spp <= reg_mstatus.prv @[CSR.scala 778:23]
            reg_mstatus.sie <= UInt<1>("h00") @[CSR.scala 779:23]
            new_prv <= UInt<1>("h01") @[CSR.scala 780:15]
            skip @[CSR.scala 772:35]
          else : @[CSR.scala 781:17]
            reg_mepc <= epc @[CSR.scala 782:16]
            reg_mcause <= cause @[CSR.scala 783:18]
            xcause_dest <= UInt<3>("h01") @[CSR.scala 784:19]
            reg_mtval <= io.tval @[CSR.scala 785:17]
            reg_mstatus.mpie <= reg_mstatus.mie @[CSR.scala 786:24]
            reg_mstatus.mpp <= UInt<2>("h03") @[CSR.scala 787:23]
            reg_mstatus.mie <= UInt<1>("h00") @[CSR.scala 788:23]
            new_prv <= UInt<2>("h03") @[CSR.scala 789:15]
            skip @[CSR.scala 781:17]
      skip @[CSR.scala 754:20]
    node _en_T = and(supported_interrupts, UInt<1>("h01")) @[CSR.scala 794:49]
    node _en_T_1 = neq(_en_T, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_2 = and(exception, _en_T_1) @[CSR.scala 794:24]
    node _en_T_3 = add(UInt<32>("h080000000"), UInt<1>("h00")) @[CSR.scala 794:118]
    node _en_T_4 = tail(_en_T_3, 1) @[CSR.scala 794:118]
    node _en_T_5 = eq(cause, _en_T_4) @[CSR.scala 794:86]
    node en = and(_en_T_2, _en_T_5) @[CSR.scala 794:77]
    node _delegable_T = and(delegable_interrupts, UInt<1>("h01")) @[CSR.scala 795:43]
    node delegable = neq(_delegable_T, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_263 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_264 = and(en, _T_263) @[CSR.scala 796:14]
    node _T_265 = and(en, delegable) @[CSR.scala 797:14]
    node _T_266 = and(_T_265, delegate) @[CSR.scala 797:27]
    node _en_T_6 = and(supported_interrupts, UInt<2>("h02")) @[CSR.scala 794:49]
    node _en_T_7 = neq(_en_T_6, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_8 = and(exception, _en_T_7) @[CSR.scala 794:24]
    node _en_T_9 = add(UInt<32>("h080000000"), UInt<1>("h01")) @[CSR.scala 794:118]
    node _en_T_10 = tail(_en_T_9, 1) @[CSR.scala 794:118]
    node _en_T_11 = eq(cause, _en_T_10) @[CSR.scala 794:86]
    node en_1 = and(_en_T_8, _en_T_11) @[CSR.scala 794:77]
    node _delegable_T_1 = and(delegable_interrupts, UInt<2>("h02")) @[CSR.scala 795:43]
    node delegable_1 = neq(_delegable_T_1, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_267 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_268 = and(en_1, _T_267) @[CSR.scala 796:14]
    node _T_269 = and(en_1, delegable_1) @[CSR.scala 797:14]
    node _T_270 = and(_T_269, delegate) @[CSR.scala 797:27]
    node _en_T_12 = and(supported_interrupts, UInt<3>("h04")) @[CSR.scala 794:49]
    node _en_T_13 = neq(_en_T_12, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_14 = and(exception, _en_T_13) @[CSR.scala 794:24]
    node _en_T_15 = add(UInt<32>("h080000000"), UInt<2>("h02")) @[CSR.scala 794:118]
    node _en_T_16 = tail(_en_T_15, 1) @[CSR.scala 794:118]
    node _en_T_17 = eq(cause, _en_T_16) @[CSR.scala 794:86]
    node en_2 = and(_en_T_14, _en_T_17) @[CSR.scala 794:77]
    node _delegable_T_2 = and(delegable_interrupts, UInt<3>("h04")) @[CSR.scala 795:43]
    node delegable_2 = neq(_delegable_T_2, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_271 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_272 = and(en_2, _T_271) @[CSR.scala 796:14]
    node _T_273 = and(en_2, delegable_2) @[CSR.scala 797:14]
    node _T_274 = and(_T_273, delegate) @[CSR.scala 797:27]
    node _en_T_18 = and(supported_interrupts, UInt<4>("h08")) @[CSR.scala 794:49]
    node _en_T_19 = neq(_en_T_18, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_20 = and(exception, _en_T_19) @[CSR.scala 794:24]
    node _en_T_21 = add(UInt<32>("h080000000"), UInt<2>("h03")) @[CSR.scala 794:118]
    node _en_T_22 = tail(_en_T_21, 1) @[CSR.scala 794:118]
    node _en_T_23 = eq(cause, _en_T_22) @[CSR.scala 794:86]
    node en_3 = and(_en_T_20, _en_T_23) @[CSR.scala 794:77]
    node _delegable_T_3 = and(delegable_interrupts, UInt<4>("h08")) @[CSR.scala 795:43]
    node delegable_3 = neq(_delegable_T_3, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_275 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_276 = and(en_3, _T_275) @[CSR.scala 796:14]
    node _T_277 = and(en_3, delegable_3) @[CSR.scala 797:14]
    node _T_278 = and(_T_277, delegate) @[CSR.scala 797:27]
    node _en_T_24 = and(supported_interrupts, UInt<5>("h010")) @[CSR.scala 794:49]
    node _en_T_25 = neq(_en_T_24, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_26 = and(exception, _en_T_25) @[CSR.scala 794:24]
    node _en_T_27 = add(UInt<32>("h080000000"), UInt<3>("h04")) @[CSR.scala 794:118]
    node _en_T_28 = tail(_en_T_27, 1) @[CSR.scala 794:118]
    node _en_T_29 = eq(cause, _en_T_28) @[CSR.scala 794:86]
    node en_4 = and(_en_T_26, _en_T_29) @[CSR.scala 794:77]
    node _delegable_T_4 = and(delegable_interrupts, UInt<5>("h010")) @[CSR.scala 795:43]
    node delegable_4 = neq(_delegable_T_4, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_279 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_280 = and(en_4, _T_279) @[CSR.scala 796:14]
    node _T_281 = and(en_4, delegable_4) @[CSR.scala 797:14]
    node _T_282 = and(_T_281, delegate) @[CSR.scala 797:27]
    node _en_T_30 = and(supported_interrupts, UInt<6>("h020")) @[CSR.scala 794:49]
    node _en_T_31 = neq(_en_T_30, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_32 = and(exception, _en_T_31) @[CSR.scala 794:24]
    node _en_T_33 = add(UInt<32>("h080000000"), UInt<3>("h05")) @[CSR.scala 794:118]
    node _en_T_34 = tail(_en_T_33, 1) @[CSR.scala 794:118]
    node _en_T_35 = eq(cause, _en_T_34) @[CSR.scala 794:86]
    node en_5 = and(_en_T_32, _en_T_35) @[CSR.scala 794:77]
    node _delegable_T_5 = and(delegable_interrupts, UInt<6>("h020")) @[CSR.scala 795:43]
    node delegable_5 = neq(_delegable_T_5, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_283 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_284 = and(en_5, _T_283) @[CSR.scala 796:14]
    node _T_285 = and(en_5, delegable_5) @[CSR.scala 797:14]
    node _T_286 = and(_T_285, delegate) @[CSR.scala 797:27]
    node _en_T_36 = and(supported_interrupts, UInt<7>("h040")) @[CSR.scala 794:49]
    node _en_T_37 = neq(_en_T_36, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_38 = and(exception, _en_T_37) @[CSR.scala 794:24]
    node _en_T_39 = add(UInt<32>("h080000000"), UInt<3>("h06")) @[CSR.scala 794:118]
    node _en_T_40 = tail(_en_T_39, 1) @[CSR.scala 794:118]
    node _en_T_41 = eq(cause, _en_T_40) @[CSR.scala 794:86]
    node en_6 = and(_en_T_38, _en_T_41) @[CSR.scala 794:77]
    node _delegable_T_6 = and(delegable_interrupts, UInt<7>("h040")) @[CSR.scala 795:43]
    node delegable_6 = neq(_delegable_T_6, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_287 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_288 = and(en_6, _T_287) @[CSR.scala 796:14]
    node _T_289 = and(en_6, delegable_6) @[CSR.scala 797:14]
    node _T_290 = and(_T_289, delegate) @[CSR.scala 797:27]
    node _en_T_42 = and(supported_interrupts, UInt<8>("h080")) @[CSR.scala 794:49]
    node _en_T_43 = neq(_en_T_42, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_44 = and(exception, _en_T_43) @[CSR.scala 794:24]
    node _en_T_45 = add(UInt<32>("h080000000"), UInt<3>("h07")) @[CSR.scala 794:118]
    node _en_T_46 = tail(_en_T_45, 1) @[CSR.scala 794:118]
    node _en_T_47 = eq(cause, _en_T_46) @[CSR.scala 794:86]
    node en_7 = and(_en_T_44, _en_T_47) @[CSR.scala 794:77]
    node _delegable_T_7 = and(delegable_interrupts, UInt<8>("h080")) @[CSR.scala 795:43]
    node delegable_7 = neq(_delegable_T_7, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_291 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_292 = and(en_7, _T_291) @[CSR.scala 796:14]
    node _T_293 = and(en_7, delegable_7) @[CSR.scala 797:14]
    node _T_294 = and(_T_293, delegate) @[CSR.scala 797:27]
    node _en_T_48 = and(supported_interrupts, UInt<9>("h0100")) @[CSR.scala 794:49]
    node _en_T_49 = neq(_en_T_48, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_50 = and(exception, _en_T_49) @[CSR.scala 794:24]
    node _en_T_51 = add(UInt<32>("h080000000"), UInt<4>("h08")) @[CSR.scala 794:118]
    node _en_T_52 = tail(_en_T_51, 1) @[CSR.scala 794:118]
    node _en_T_53 = eq(cause, _en_T_52) @[CSR.scala 794:86]
    node en_8 = and(_en_T_50, _en_T_53) @[CSR.scala 794:77]
    node _delegable_T_8 = and(delegable_interrupts, UInt<9>("h0100")) @[CSR.scala 795:43]
    node delegable_8 = neq(_delegable_T_8, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_295 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_296 = and(en_8, _T_295) @[CSR.scala 796:14]
    node _T_297 = and(en_8, delegable_8) @[CSR.scala 797:14]
    node _T_298 = and(_T_297, delegate) @[CSR.scala 797:27]
    node _en_T_54 = and(supported_interrupts, UInt<10>("h0200")) @[CSR.scala 794:49]
    node _en_T_55 = neq(_en_T_54, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_56 = and(exception, _en_T_55) @[CSR.scala 794:24]
    node _en_T_57 = add(UInt<32>("h080000000"), UInt<4>("h09")) @[CSR.scala 794:118]
    node _en_T_58 = tail(_en_T_57, 1) @[CSR.scala 794:118]
    node _en_T_59 = eq(cause, _en_T_58) @[CSR.scala 794:86]
    node en_9 = and(_en_T_56, _en_T_59) @[CSR.scala 794:77]
    node _delegable_T_9 = and(delegable_interrupts, UInt<10>("h0200")) @[CSR.scala 795:43]
    node delegable_9 = neq(_delegable_T_9, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_299 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_300 = and(en_9, _T_299) @[CSR.scala 796:14]
    node _T_301 = and(en_9, delegable_9) @[CSR.scala 797:14]
    node _T_302 = and(_T_301, delegate) @[CSR.scala 797:27]
    node _en_T_60 = and(supported_interrupts, UInt<11>("h0400")) @[CSR.scala 794:49]
    node _en_T_61 = neq(_en_T_60, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_62 = and(exception, _en_T_61) @[CSR.scala 794:24]
    node _en_T_63 = add(UInt<32>("h080000000"), UInt<4>("h0a")) @[CSR.scala 794:118]
    node _en_T_64 = tail(_en_T_63, 1) @[CSR.scala 794:118]
    node _en_T_65 = eq(cause, _en_T_64) @[CSR.scala 794:86]
    node en_10 = and(_en_T_62, _en_T_65) @[CSR.scala 794:77]
    node _delegable_T_10 = and(delegable_interrupts, UInt<11>("h0400")) @[CSR.scala 795:43]
    node delegable_10 = neq(_delegable_T_10, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_303 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_304 = and(en_10, _T_303) @[CSR.scala 796:14]
    node _T_305 = and(en_10, delegable_10) @[CSR.scala 797:14]
    node _T_306 = and(_T_305, delegate) @[CSR.scala 797:27]
    node _en_T_66 = and(supported_interrupts, UInt<12>("h0800")) @[CSR.scala 794:49]
    node _en_T_67 = neq(_en_T_66, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_68 = and(exception, _en_T_67) @[CSR.scala 794:24]
    node _en_T_69 = add(UInt<32>("h080000000"), UInt<4>("h0b")) @[CSR.scala 794:118]
    node _en_T_70 = tail(_en_T_69, 1) @[CSR.scala 794:118]
    node _en_T_71 = eq(cause, _en_T_70) @[CSR.scala 794:86]
    node en_11 = and(_en_T_68, _en_T_71) @[CSR.scala 794:77]
    node _delegable_T_11 = and(delegable_interrupts, UInt<12>("h0800")) @[CSR.scala 795:43]
    node delegable_11 = neq(_delegable_T_11, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_307 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_308 = and(en_11, _T_307) @[CSR.scala 796:14]
    node _T_309 = and(en_11, delegable_11) @[CSR.scala 797:14]
    node _T_310 = and(_T_309, delegate) @[CSR.scala 797:27]
    node _en_T_72 = and(supported_interrupts, UInt<13>("h01000")) @[CSR.scala 794:49]
    node _en_T_73 = neq(_en_T_72, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_74 = and(exception, _en_T_73) @[CSR.scala 794:24]
    node _en_T_75 = add(UInt<32>("h080000000"), UInt<4>("h0c")) @[CSR.scala 794:118]
    node _en_T_76 = tail(_en_T_75, 1) @[CSR.scala 794:118]
    node _en_T_77 = eq(cause, _en_T_76) @[CSR.scala 794:86]
    node en_12 = and(_en_T_74, _en_T_77) @[CSR.scala 794:77]
    node _delegable_T_12 = and(delegable_interrupts, UInt<13>("h01000")) @[CSR.scala 795:43]
    node delegable_12 = neq(_delegable_T_12, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_311 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_312 = and(en_12, _T_311) @[CSR.scala 796:14]
    node _T_313 = and(en_12, delegable_12) @[CSR.scala 797:14]
    node _T_314 = and(_T_313, delegate) @[CSR.scala 797:27]
    node _en_T_78 = and(supported_interrupts, UInt<14>("h02000")) @[CSR.scala 794:49]
    node _en_T_79 = neq(_en_T_78, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_80 = and(exception, _en_T_79) @[CSR.scala 794:24]
    node _en_T_81 = add(UInt<32>("h080000000"), UInt<4>("h0d")) @[CSR.scala 794:118]
    node _en_T_82 = tail(_en_T_81, 1) @[CSR.scala 794:118]
    node _en_T_83 = eq(cause, _en_T_82) @[CSR.scala 794:86]
    node en_13 = and(_en_T_80, _en_T_83) @[CSR.scala 794:77]
    node _delegable_T_13 = and(delegable_interrupts, UInt<14>("h02000")) @[CSR.scala 795:43]
    node delegable_13 = neq(_delegable_T_13, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_315 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_316 = and(en_13, _T_315) @[CSR.scala 796:14]
    node _T_317 = and(en_13, delegable_13) @[CSR.scala 797:14]
    node _T_318 = and(_T_317, delegate) @[CSR.scala 797:27]
    node _en_T_84 = and(supported_interrupts, UInt<15>("h04000")) @[CSR.scala 794:49]
    node _en_T_85 = neq(_en_T_84, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_86 = and(exception, _en_T_85) @[CSR.scala 794:24]
    node _en_T_87 = add(UInt<32>("h080000000"), UInt<4>("h0e")) @[CSR.scala 794:118]
    node _en_T_88 = tail(_en_T_87, 1) @[CSR.scala 794:118]
    node _en_T_89 = eq(cause, _en_T_88) @[CSR.scala 794:86]
    node en_14 = and(_en_T_86, _en_T_89) @[CSR.scala 794:77]
    node _delegable_T_14 = and(delegable_interrupts, UInt<15>("h04000")) @[CSR.scala 795:43]
    node delegable_14 = neq(_delegable_T_14, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_319 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_320 = and(en_14, _T_319) @[CSR.scala 796:14]
    node _T_321 = and(en_14, delegable_14) @[CSR.scala 797:14]
    node _T_322 = and(_T_321, delegate) @[CSR.scala 797:27]
    node _en_T_90 = and(supported_interrupts, UInt<16>("h08000")) @[CSR.scala 794:49]
    node _en_T_91 = neq(_en_T_90, UInt<1>("h00")) @[CSR.scala 794:71]
    node _en_T_92 = and(exception, _en_T_91) @[CSR.scala 794:24]
    node _en_T_93 = add(UInt<32>("h080000000"), UInt<4>("h0f")) @[CSR.scala 794:118]
    node _en_T_94 = tail(_en_T_93, 1) @[CSR.scala 794:118]
    node _en_T_95 = eq(cause, _en_T_94) @[CSR.scala 794:86]
    node en_15 = and(_en_T_92, _en_T_95) @[CSR.scala 794:77]
    node _delegable_T_15 = and(delegable_interrupts, UInt<16>("h08000")) @[CSR.scala 795:43]
    node delegable_15 = neq(_delegable_T_15, UInt<1>("h00")) @[CSR.scala 795:65]
    node _T_323 = eq(delegate, UInt<1>("h00")) @[CSR.scala 796:17]
    node _T_324 = and(en_15, _T_323) @[CSR.scala 796:14]
    node _T_325 = and(en_15, delegable_15) @[CSR.scala 797:14]
    node _T_326 = and(_T_325, delegate) @[CSR.scala 797:27]
    node _en_T_96 = eq(cause, UInt<1>("h00")) @[CSR.scala 806:35]
    node en_16 = and(exception, _en_T_96) @[CSR.scala 806:26]
    node _delegable_T_16 = and(UInt<16>("h0b15d"), UInt<1>("h01")) @[CSR.scala 807:45]
    node delegable_16 = neq(_delegable_T_16, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_327 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_328 = and(en_16, _T_327) @[CSR.scala 808:16]
    node _T_329 = and(en_16, delegable_16) @[CSR.scala 809:16]
    node _T_330 = and(_T_329, delegate) @[CSR.scala 809:29]
    node _en_T_97 = eq(cause, UInt<1>("h01")) @[CSR.scala 806:35]
    node en_17 = and(exception, _en_T_97) @[CSR.scala 806:26]
    node _delegable_T_17 = and(UInt<16>("h0b15d"), UInt<2>("h02")) @[CSR.scala 807:45]
    node delegable_17 = neq(_delegable_T_17, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_331 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_332 = and(en_17, _T_331) @[CSR.scala 808:16]
    node _T_333 = and(en_17, delegable_17) @[CSR.scala 809:16]
    node _T_334 = and(_T_333, delegate) @[CSR.scala 809:29]
    node _en_T_98 = eq(cause, UInt<2>("h02")) @[CSR.scala 806:35]
    node en_18 = and(exception, _en_T_98) @[CSR.scala 806:26]
    node _delegable_T_18 = and(UInt<16>("h0b15d"), UInt<3>("h04")) @[CSR.scala 807:45]
    node delegable_18 = neq(_delegable_T_18, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_335 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_336 = and(en_18, _T_335) @[CSR.scala 808:16]
    node _T_337 = and(en_18, delegable_18) @[CSR.scala 809:16]
    node _T_338 = and(_T_337, delegate) @[CSR.scala 809:29]
    node _en_T_99 = eq(cause, UInt<2>("h03")) @[CSR.scala 806:35]
    node en_19 = and(exception, _en_T_99) @[CSR.scala 806:26]
    node _delegable_T_19 = and(UInt<16>("h0b15d"), UInt<4>("h08")) @[CSR.scala 807:45]
    node delegable_19 = neq(_delegable_T_19, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_339 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_340 = and(en_19, _T_339) @[CSR.scala 808:16]
    node _T_341 = and(en_19, delegable_19) @[CSR.scala 809:16]
    node _T_342 = and(_T_341, delegate) @[CSR.scala 809:29]
    node _en_T_100 = eq(cause, UInt<3>("h04")) @[CSR.scala 806:35]
    node en_20 = and(exception, _en_T_100) @[CSR.scala 806:26]
    node _delegable_T_20 = and(UInt<16>("h0b15d"), UInt<5>("h010")) @[CSR.scala 807:45]
    node delegable_20 = neq(_delegable_T_20, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_343 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_344 = and(en_20, _T_343) @[CSR.scala 808:16]
    node _T_345 = and(en_20, delegable_20) @[CSR.scala 809:16]
    node _T_346 = and(_T_345, delegate) @[CSR.scala 809:29]
    node _en_T_101 = eq(cause, UInt<3>("h05")) @[CSR.scala 806:35]
    node en_21 = and(exception, _en_T_101) @[CSR.scala 806:26]
    node _delegable_T_21 = and(UInt<16>("h0b15d"), UInt<6>("h020")) @[CSR.scala 807:45]
    node delegable_21 = neq(_delegable_T_21, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_347 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_348 = and(en_21, _T_347) @[CSR.scala 808:16]
    node _T_349 = and(en_21, delegable_21) @[CSR.scala 809:16]
    node _T_350 = and(_T_349, delegate) @[CSR.scala 809:29]
    node _en_T_102 = eq(cause, UInt<3>("h06")) @[CSR.scala 806:35]
    node en_22 = and(exception, _en_T_102) @[CSR.scala 806:26]
    node _delegable_T_22 = and(UInt<16>("h0b15d"), UInt<7>("h040")) @[CSR.scala 807:45]
    node delegable_22 = neq(_delegable_T_22, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_351 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_352 = and(en_22, _T_351) @[CSR.scala 808:16]
    node _T_353 = and(en_22, delegable_22) @[CSR.scala 809:16]
    node _T_354 = and(_T_353, delegate) @[CSR.scala 809:29]
    node _en_T_103 = eq(cause, UInt<3>("h07")) @[CSR.scala 806:35]
    node en_23 = and(exception, _en_T_103) @[CSR.scala 806:26]
    node _delegable_T_23 = and(UInt<16>("h0b15d"), UInt<8>("h080")) @[CSR.scala 807:45]
    node delegable_23 = neq(_delegable_T_23, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_355 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_356 = and(en_23, _T_355) @[CSR.scala 808:16]
    node _T_357 = and(en_23, delegable_23) @[CSR.scala 809:16]
    node _T_358 = and(_T_357, delegate) @[CSR.scala 809:29]
    node _en_T_104 = eq(cause, UInt<4>("h0b")) @[CSR.scala 806:35]
    node en_24 = and(exception, _en_T_104) @[CSR.scala 806:26]
    node _delegable_T_24 = and(UInt<16>("h0b15d"), UInt<12>("h0800")) @[CSR.scala 807:45]
    node delegable_24 = neq(_delegable_T_24, UInt<1>("h00")) @[CSR.scala 807:67]
    node _T_359 = eq(delegate, UInt<1>("h00")) @[CSR.scala 808:19]
    node _T_360 = and(en_24, _T_359) @[CSR.scala 808:16]
    node _T_361 = and(en_24, delegable_24) @[CSR.scala 809:16]
    node _T_362 = and(_T_361, delegate) @[CSR.scala 809:29]
    when insn_ret : @[CSR.scala 813:19]
      wire ret_prv : UInt
      ret_prv is invalid
      ret_prv is invalid
      node _T_363 = bits(io.rw.addr, 9, 9) @[CSR.scala 815:47]
      node _T_364 = eq(_T_363, UInt<1>("h00")) @[CSR.scala 815:36]
      node _T_365 = and(UInt<1>("h00"), _T_364) @[CSR.scala 815:33]
      when _T_365 : @[CSR.scala 815:52]
        reg_mstatus.sie <= reg_mstatus.spie @[CSR.scala 816:23]
        reg_mstatus.spie <= UInt<1>("h01") @[CSR.scala 817:24]
        reg_mstatus.spp <= UInt<1>("h00") @[CSR.scala 818:23]
        ret_prv <= reg_mstatus.spp @[CSR.scala 819:15]
        node _io_evec_T = not(reg_sepc) @[CSR.scala 1205:28]
        node _io_evec_T_1 = bits(reg_misa, 2, 2) @[CSR.scala 1205:45]
        node _io_evec_T_2 = mux(_io_evec_T_1, UInt<1>("h01"), UInt<2>("h03")) @[CSR.scala 1205:36]
        node _io_evec_T_3 = or(_io_evec_T, _io_evec_T_2) @[CSR.scala 1205:31]
        node _io_evec_T_4 = not(_io_evec_T_3) @[CSR.scala 1205:26]
        io.evec <= _io_evec_T_4 @[CSR.scala 820:15]
        skip @[CSR.scala 815:52]
      else : @[CSR.scala 821:70]
        node _T_366 = bits(io.rw.addr, 10, 10) @[CSR.scala 821:47]
        node _T_367 = and(UInt<1>("h01"), _T_366) @[CSR.scala 821:34]
        node _T_368 = bits(io.rw.addr, 7, 7) @[CSR.scala 821:65]
        node _T_369 = and(_T_367, _T_368) @[CSR.scala 821:52]
        when _T_369 : @[CSR.scala 821:70]
          ret_prv <= reg_dcsr.prv @[CSR.scala 822:15]
          reg_debug <= UInt<1>("h00") @[CSR.scala 823:17]
          node _io_evec_T_5 = not(reg_dpc) @[CSR.scala 1205:28]
          node _io_evec_T_6 = bits(reg_misa, 2, 2) @[CSR.scala 1205:45]
          node _io_evec_T_7 = mux(_io_evec_T_6, UInt<1>("h01"), UInt<2>("h03")) @[CSR.scala 1205:36]
          node _io_evec_T_8 = or(_io_evec_T_5, _io_evec_T_7) @[CSR.scala 1205:31]
          node _io_evec_T_9 = not(_io_evec_T_8) @[CSR.scala 1205:26]
          io.evec <= _io_evec_T_9 @[CSR.scala 824:15]
          skip @[CSR.scala 821:70]
        else : @[CSR.scala 825:69]
          node _T_370 = bits(io.rw.addr, 10, 10) @[CSR.scala 825:45]
          node _T_371 = and(UInt<1>("h00"), _T_370) @[CSR.scala 825:32]
          node _T_372 = bits(io.rw.addr, 7, 7) @[CSR.scala 825:64]
          node _T_373 = eq(_T_372, UInt<1>("h00")) @[CSR.scala 825:53]
          node _T_374 = and(_T_371, _T_373) @[CSR.scala 825:50]
          when _T_374 : @[CSR.scala 825:69]
            ret_prv <= reg_mnstatus.mpp @[CSR.scala 826:15]
            reg_rnmie <= UInt<1>("h01") @[CSR.scala 827:17]
            reg_unmie <= UInt<1>("h01") @[CSR.scala 828:17]
            node _io_evec_T_10 = not(reg_mnepc) @[CSR.scala 1205:28]
            node _io_evec_T_11 = bits(reg_misa, 2, 2) @[CSR.scala 1205:45]
            node _io_evec_T_12 = mux(_io_evec_T_11, UInt<1>("h01"), UInt<2>("h03")) @[CSR.scala 1205:36]
            node _io_evec_T_13 = or(_io_evec_T_10, _io_evec_T_12) @[CSR.scala 1205:31]
            node _io_evec_T_14 = not(_io_evec_T_13) @[CSR.scala 1205:26]
            io.evec <= _io_evec_T_14 @[CSR.scala 829:15]
            skip @[CSR.scala 825:69]
          else : @[CSR.scala 830:17]
            reg_mstatus.mie <= reg_mstatus.mpie @[CSR.scala 831:23]
            reg_mstatus.mpie <= UInt<1>("h01") @[CSR.scala 832:24]
            reg_mstatus.mpp <= UInt<2>("h03") @[CSR.scala 833:23]
            ret_prv <= reg_mstatus.mpp @[CSR.scala 834:15]
            node _io_evec_T_15 = not(reg_mepc) @[CSR.scala 1205:28]
            node _io_evec_T_16 = bits(reg_misa, 2, 2) @[CSR.scala 1205:45]
            node _io_evec_T_17 = mux(_io_evec_T_16, UInt<1>("h01"), UInt<2>("h03")) @[CSR.scala 1205:36]
            node _io_evec_T_18 = or(_io_evec_T_15, _io_evec_T_17) @[CSR.scala 1205:31]
            node _io_evec_T_19 = not(_io_evec_T_18) @[CSR.scala 1205:26]
            io.evec <= _io_evec_T_19 @[CSR.scala 835:15]
            skip @[CSR.scala 830:17]
      new_prv <= ret_prv @[CSR.scala 838:13]
      node _T_375 = lt(ret_prv, UInt<2>("h03")) @[CSR.scala 839:32]
      node _T_376 = and(UInt<1>("h00"), _T_375) @[CSR.scala 839:21]
      when _T_376 : @[CSR.scala 839:41]
        reg_mstatus.mprv <= UInt<1>("h00") @[CSR.scala 840:24]
        skip @[CSR.scala 839:41]
      skip @[CSR.scala 813:19]
    io.time <= value_1 @[CSR.scala 844:11]
    node _io_csr_stall_T = or(reg_wfi, io.status.cease) @[CSR.scala 845:27]
    io.csr_stall <= _io_csr_stall_T @[CSR.scala 845:16]
    reg io_status_cease_r : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Reg.scala 27:20]
    when insn_cease : @[Reg.scala 28:19]
      io_status_cease_r <= UInt<1>("h01") @[Reg.scala 28:23]
      skip @[Reg.scala 28:19]
    io.status.cease <= io_status_cease_r @[CSR.scala 846:19]
    io.status.wfi <= reg_wfi @[CSR.scala 847:17]
    io.customCSRs[0].wen <= UInt<1>("h00") @[CSR.scala 850:12]
    io.customCSRs[0].wdata <= wdata @[CSR.scala 851:14]
    io.customCSRs[0].value <= reg_custom_0 @[CSR.scala 852:14]
    io.customCSRs[1].wen <= UInt<1>("h00") @[CSR.scala 850:12]
    io.customCSRs[1].wdata <= wdata @[CSR.scala 851:14]
    io.customCSRs[1].value <= reg_custom_1 @[CSR.scala 852:14]
    io.customCSRs[2].wen <= UInt<1>("h00") @[CSR.scala 850:12]
    io.customCSRs[2].wdata <= wdata @[CSR.scala 851:14]
    io.customCSRs[2].value <= reg_custom_2 @[CSR.scala 852:14]
    io.customCSRs[3].wen <= UInt<1>("h00") @[CSR.scala 850:12]
    io.customCSRs[3].wdata <= wdata @[CSR.scala 851:14]
    io.customCSRs[3].value <= reg_custom_3 @[CSR.scala 852:14]
    node _io_rw_rdata_T = mux(_T_55, reg_tselect, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_1 = mux(_T_56, _T_7, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_2 = mux(_T_57, reg_bp[reg_tselect].address, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_3 = mux(_T_58, _T_8, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_4 = mux(_T_59, reg_misa, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_5 = mux(_T_60, read_mstatus, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_6 = mux(_T_61, read_mtvec, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_7 = mux(_T_62, read_mip, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_8 = mux(_T_63, reg_mie, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_9 = mux(_T_64, reg_mscratch, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_10 = mux(_T_65, _T_13, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_11 = mux(_T_66, reg_mtval, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_12 = mux(_T_67, reg_mcause, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_13 = mux(_T_68, io.hartid, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_14 = mux(_T_69, _T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_15 = mux(_T_70, _T_19, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_16 = mux(_T_71, reg_dscratch, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_17 = mux(_T_72, reg_mcountinhibit, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_18 = mux(_T_73, value_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_19 = mux(_T_74, value, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_20 = mux(_T_75, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_21 = mux(_T_76, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_22 = mux(_T_77, _T_20, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_23 = mux(_T_78, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_24 = mux(_T_79, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_25 = mux(_T_80, _T_21, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_26 = mux(_T_81, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_27 = mux(_T_82, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_28 = mux(_T_83, _T_22, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_29 = mux(_T_84, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_30 = mux(_T_85, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_31 = mux(_T_86, _T_23, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_32 = mux(_T_87, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_33 = mux(_T_88, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_34 = mux(_T_89, _T_24, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_35 = mux(_T_90, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_36 = mux(_T_91, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_37 = mux(_T_92, _T_25, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_38 = mux(_T_93, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_39 = mux(_T_94, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_40 = mux(_T_95, _T_26, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_41 = mux(_T_96, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_42 = mux(_T_97, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_43 = mux(_T_98, _T_27, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_44 = mux(_T_99, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_45 = mux(_T_100, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_46 = mux(_T_101, _T_28, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_47 = mux(_T_102, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_48 = mux(_T_103, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_49 = mux(_T_104, _T_29, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_50 = mux(_T_105, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_51 = mux(_T_106, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_52 = mux(_T_107, _T_30, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_53 = mux(_T_108, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_54 = mux(_T_109, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_55 = mux(_T_110, _T_31, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_56 = mux(_T_111, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_57 = mux(_T_112, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_58 = mux(_T_113, _T_32, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_59 = mux(_T_114, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_60 = mux(_T_115, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_61 = mux(_T_116, _T_33, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_62 = mux(_T_117, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_63 = mux(_T_118, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_64 = mux(_T_119, _T_34, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_65 = mux(_T_120, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_66 = mux(_T_121, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_67 = mux(_T_122, _T_35, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_68 = mux(_T_123, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_69 = mux(_T_124, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_70 = mux(_T_125, _T_36, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_71 = mux(_T_126, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_72 = mux(_T_127, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_73 = mux(_T_128, _T_37, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_74 = mux(_T_129, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_75 = mux(_T_130, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_76 = mux(_T_131, _T_38, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_77 = mux(_T_132, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_78 = mux(_T_133, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_79 = mux(_T_134, _T_39, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_80 = mux(_T_135, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_81 = mux(_T_136, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_82 = mux(_T_137, _T_40, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_83 = mux(_T_138, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_84 = mux(_T_139, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_85 = mux(_T_140, _T_41, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_86 = mux(_T_141, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_87 = mux(_T_142, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_88 = mux(_T_143, _T_42, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_89 = mux(_T_144, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_90 = mux(_T_145, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_91 = mux(_T_146, _T_43, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_92 = mux(_T_147, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_93 = mux(_T_148, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_94 = mux(_T_149, _T_44, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_95 = mux(_T_150, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_96 = mux(_T_151, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_97 = mux(_T_152, _T_45, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_98 = mux(_T_153, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_99 = mux(_T_154, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_100 = mux(_T_155, _T_46, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_101 = mux(_T_156, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_102 = mux(_T_157, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_103 = mux(_T_158, _T_47, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_104 = mux(_T_159, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_105 = mux(_T_160, UInt<1>("h00"), UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_106 = mux(_T_161, _T_48, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_107 = mux(_T_162, _T_49, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_108 = mux(_T_163, _T_50, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_109 = mux(_T_164, _T_51, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_110 = mux(_T_165, _T_52, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_111 = mux(_T_166, _T_53, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_112 = mux(_T_167, _T_54, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_113 = mux(_T_168, reg_pmp[0].addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_114 = mux(_T_169, reg_pmp[1].addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_115 = mux(_T_170, reg_pmp[2].addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_116 = mux(_T_171, reg_pmp[3].addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_117 = mux(_T_172, reg_pmp[4].addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_118 = mux(_T_173, reg_pmp[5].addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_119 = mux(_T_174, reg_pmp[6].addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_120 = mux(_T_175, reg_pmp[7].addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_121 = mux(_T_176, read_pmp_15.addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_122 = mux(_T_177, read_pmp_15.addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_123 = mux(_T_178, read_pmp_15.addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_124 = mux(_T_179, read_pmp_15.addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_125 = mux(_T_180, read_pmp_15.addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_126 = mux(_T_181, read_pmp_15.addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_127 = mux(_T_182, read_pmp_15.addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_128 = mux(_T_183, read_pmp_15.addr, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_129 = mux(_T_184, reg_custom_0, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_130 = mux(_T_185, reg_custom_1, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_131 = mux(_T_186, reg_custom_2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_132 = mux(_T_187, reg_custom_3, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_133 = or(_io_rw_rdata_T, _io_rw_rdata_T_1) @[Mux.scala 27:72]
    node _io_rw_rdata_T_134 = or(_io_rw_rdata_T_133, _io_rw_rdata_T_2) @[Mux.scala 27:72]
    node _io_rw_rdata_T_135 = or(_io_rw_rdata_T_134, _io_rw_rdata_T_3) @[Mux.scala 27:72]
    node _io_rw_rdata_T_136 = or(_io_rw_rdata_T_135, _io_rw_rdata_T_4) @[Mux.scala 27:72]
    node _io_rw_rdata_T_137 = or(_io_rw_rdata_T_136, _io_rw_rdata_T_5) @[Mux.scala 27:72]
    node _io_rw_rdata_T_138 = or(_io_rw_rdata_T_137, _io_rw_rdata_T_6) @[Mux.scala 27:72]
    node _io_rw_rdata_T_139 = or(_io_rw_rdata_T_138, _io_rw_rdata_T_7) @[Mux.scala 27:72]
    node _io_rw_rdata_T_140 = or(_io_rw_rdata_T_139, _io_rw_rdata_T_8) @[Mux.scala 27:72]
    node _io_rw_rdata_T_141 = or(_io_rw_rdata_T_140, _io_rw_rdata_T_9) @[Mux.scala 27:72]
    node _io_rw_rdata_T_142 = or(_io_rw_rdata_T_141, _io_rw_rdata_T_10) @[Mux.scala 27:72]
    node _io_rw_rdata_T_143 = or(_io_rw_rdata_T_142, _io_rw_rdata_T_11) @[Mux.scala 27:72]
    node _io_rw_rdata_T_144 = or(_io_rw_rdata_T_143, _io_rw_rdata_T_12) @[Mux.scala 27:72]
    node _io_rw_rdata_T_145 = or(_io_rw_rdata_T_144, _io_rw_rdata_T_13) @[Mux.scala 27:72]
    node _io_rw_rdata_T_146 = or(_io_rw_rdata_T_145, _io_rw_rdata_T_14) @[Mux.scala 27:72]
    node _io_rw_rdata_T_147 = or(_io_rw_rdata_T_146, _io_rw_rdata_T_15) @[Mux.scala 27:72]
    node _io_rw_rdata_T_148 = or(_io_rw_rdata_T_147, _io_rw_rdata_T_16) @[Mux.scala 27:72]
    node _io_rw_rdata_T_149 = or(_io_rw_rdata_T_148, _io_rw_rdata_T_17) @[Mux.scala 27:72]
    node _io_rw_rdata_T_150 = or(_io_rw_rdata_T_149, _io_rw_rdata_T_18) @[Mux.scala 27:72]
    node _io_rw_rdata_T_151 = or(_io_rw_rdata_T_150, _io_rw_rdata_T_19) @[Mux.scala 27:72]
    node _io_rw_rdata_T_152 = or(_io_rw_rdata_T_151, _io_rw_rdata_T_20) @[Mux.scala 27:72]
    node _io_rw_rdata_T_153 = or(_io_rw_rdata_T_152, _io_rw_rdata_T_21) @[Mux.scala 27:72]
    node _io_rw_rdata_T_154 = or(_io_rw_rdata_T_153, _io_rw_rdata_T_22) @[Mux.scala 27:72]
    node _io_rw_rdata_T_155 = or(_io_rw_rdata_T_154, _io_rw_rdata_T_23) @[Mux.scala 27:72]
    node _io_rw_rdata_T_156 = or(_io_rw_rdata_T_155, _io_rw_rdata_T_24) @[Mux.scala 27:72]
    node _io_rw_rdata_T_157 = or(_io_rw_rdata_T_156, _io_rw_rdata_T_25) @[Mux.scala 27:72]
    node _io_rw_rdata_T_158 = or(_io_rw_rdata_T_157, _io_rw_rdata_T_26) @[Mux.scala 27:72]
    node _io_rw_rdata_T_159 = or(_io_rw_rdata_T_158, _io_rw_rdata_T_27) @[Mux.scala 27:72]
    node _io_rw_rdata_T_160 = or(_io_rw_rdata_T_159, _io_rw_rdata_T_28) @[Mux.scala 27:72]
    node _io_rw_rdata_T_161 = or(_io_rw_rdata_T_160, _io_rw_rdata_T_29) @[Mux.scala 27:72]
    node _io_rw_rdata_T_162 = or(_io_rw_rdata_T_161, _io_rw_rdata_T_30) @[Mux.scala 27:72]
    node _io_rw_rdata_T_163 = or(_io_rw_rdata_T_162, _io_rw_rdata_T_31) @[Mux.scala 27:72]
    node _io_rw_rdata_T_164 = or(_io_rw_rdata_T_163, _io_rw_rdata_T_32) @[Mux.scala 27:72]
    node _io_rw_rdata_T_165 = or(_io_rw_rdata_T_164, _io_rw_rdata_T_33) @[Mux.scala 27:72]
    node _io_rw_rdata_T_166 = or(_io_rw_rdata_T_165, _io_rw_rdata_T_34) @[Mux.scala 27:72]
    node _io_rw_rdata_T_167 = or(_io_rw_rdata_T_166, _io_rw_rdata_T_35) @[Mux.scala 27:72]
    node _io_rw_rdata_T_168 = or(_io_rw_rdata_T_167, _io_rw_rdata_T_36) @[Mux.scala 27:72]
    node _io_rw_rdata_T_169 = or(_io_rw_rdata_T_168, _io_rw_rdata_T_37) @[Mux.scala 27:72]
    node _io_rw_rdata_T_170 = or(_io_rw_rdata_T_169, _io_rw_rdata_T_38) @[Mux.scala 27:72]
    node _io_rw_rdata_T_171 = or(_io_rw_rdata_T_170, _io_rw_rdata_T_39) @[Mux.scala 27:72]
    node _io_rw_rdata_T_172 = or(_io_rw_rdata_T_171, _io_rw_rdata_T_40) @[Mux.scala 27:72]
    node _io_rw_rdata_T_173 = or(_io_rw_rdata_T_172, _io_rw_rdata_T_41) @[Mux.scala 27:72]
    node _io_rw_rdata_T_174 = or(_io_rw_rdata_T_173, _io_rw_rdata_T_42) @[Mux.scala 27:72]
    node _io_rw_rdata_T_175 = or(_io_rw_rdata_T_174, _io_rw_rdata_T_43) @[Mux.scala 27:72]
    node _io_rw_rdata_T_176 = or(_io_rw_rdata_T_175, _io_rw_rdata_T_44) @[Mux.scala 27:72]
    node _io_rw_rdata_T_177 = or(_io_rw_rdata_T_176, _io_rw_rdata_T_45) @[Mux.scala 27:72]
    node _io_rw_rdata_T_178 = or(_io_rw_rdata_T_177, _io_rw_rdata_T_46) @[Mux.scala 27:72]
    node _io_rw_rdata_T_179 = or(_io_rw_rdata_T_178, _io_rw_rdata_T_47) @[Mux.scala 27:72]
    node _io_rw_rdata_T_180 = or(_io_rw_rdata_T_179, _io_rw_rdata_T_48) @[Mux.scala 27:72]
    node _io_rw_rdata_T_181 = or(_io_rw_rdata_T_180, _io_rw_rdata_T_49) @[Mux.scala 27:72]
    node _io_rw_rdata_T_182 = or(_io_rw_rdata_T_181, _io_rw_rdata_T_50) @[Mux.scala 27:72]
    node _io_rw_rdata_T_183 = or(_io_rw_rdata_T_182, _io_rw_rdata_T_51) @[Mux.scala 27:72]
    node _io_rw_rdata_T_184 = or(_io_rw_rdata_T_183, _io_rw_rdata_T_52) @[Mux.scala 27:72]
    node _io_rw_rdata_T_185 = or(_io_rw_rdata_T_184, _io_rw_rdata_T_53) @[Mux.scala 27:72]
    node _io_rw_rdata_T_186 = or(_io_rw_rdata_T_185, _io_rw_rdata_T_54) @[Mux.scala 27:72]
    node _io_rw_rdata_T_187 = or(_io_rw_rdata_T_186, _io_rw_rdata_T_55) @[Mux.scala 27:72]
    node _io_rw_rdata_T_188 = or(_io_rw_rdata_T_187, _io_rw_rdata_T_56) @[Mux.scala 27:72]
    node _io_rw_rdata_T_189 = or(_io_rw_rdata_T_188, _io_rw_rdata_T_57) @[Mux.scala 27:72]
    node _io_rw_rdata_T_190 = or(_io_rw_rdata_T_189, _io_rw_rdata_T_58) @[Mux.scala 27:72]
    node _io_rw_rdata_T_191 = or(_io_rw_rdata_T_190, _io_rw_rdata_T_59) @[Mux.scala 27:72]
    node _io_rw_rdata_T_192 = or(_io_rw_rdata_T_191, _io_rw_rdata_T_60) @[Mux.scala 27:72]
    node _io_rw_rdata_T_193 = or(_io_rw_rdata_T_192, _io_rw_rdata_T_61) @[Mux.scala 27:72]
    node _io_rw_rdata_T_194 = or(_io_rw_rdata_T_193, _io_rw_rdata_T_62) @[Mux.scala 27:72]
    node _io_rw_rdata_T_195 = or(_io_rw_rdata_T_194, _io_rw_rdata_T_63) @[Mux.scala 27:72]
    node _io_rw_rdata_T_196 = or(_io_rw_rdata_T_195, _io_rw_rdata_T_64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_197 = or(_io_rw_rdata_T_196, _io_rw_rdata_T_65) @[Mux.scala 27:72]
    node _io_rw_rdata_T_198 = or(_io_rw_rdata_T_197, _io_rw_rdata_T_66) @[Mux.scala 27:72]
    node _io_rw_rdata_T_199 = or(_io_rw_rdata_T_198, _io_rw_rdata_T_67) @[Mux.scala 27:72]
    node _io_rw_rdata_T_200 = or(_io_rw_rdata_T_199, _io_rw_rdata_T_68) @[Mux.scala 27:72]
    node _io_rw_rdata_T_201 = or(_io_rw_rdata_T_200, _io_rw_rdata_T_69) @[Mux.scala 27:72]
    node _io_rw_rdata_T_202 = or(_io_rw_rdata_T_201, _io_rw_rdata_T_70) @[Mux.scala 27:72]
    node _io_rw_rdata_T_203 = or(_io_rw_rdata_T_202, _io_rw_rdata_T_71) @[Mux.scala 27:72]
    node _io_rw_rdata_T_204 = or(_io_rw_rdata_T_203, _io_rw_rdata_T_72) @[Mux.scala 27:72]
    node _io_rw_rdata_T_205 = or(_io_rw_rdata_T_204, _io_rw_rdata_T_73) @[Mux.scala 27:72]
    node _io_rw_rdata_T_206 = or(_io_rw_rdata_T_205, _io_rw_rdata_T_74) @[Mux.scala 27:72]
    node _io_rw_rdata_T_207 = or(_io_rw_rdata_T_206, _io_rw_rdata_T_75) @[Mux.scala 27:72]
    node _io_rw_rdata_T_208 = or(_io_rw_rdata_T_207, _io_rw_rdata_T_76) @[Mux.scala 27:72]
    node _io_rw_rdata_T_209 = or(_io_rw_rdata_T_208, _io_rw_rdata_T_77) @[Mux.scala 27:72]
    node _io_rw_rdata_T_210 = or(_io_rw_rdata_T_209, _io_rw_rdata_T_78) @[Mux.scala 27:72]
    node _io_rw_rdata_T_211 = or(_io_rw_rdata_T_210, _io_rw_rdata_T_79) @[Mux.scala 27:72]
    node _io_rw_rdata_T_212 = or(_io_rw_rdata_T_211, _io_rw_rdata_T_80) @[Mux.scala 27:72]
    node _io_rw_rdata_T_213 = or(_io_rw_rdata_T_212, _io_rw_rdata_T_81) @[Mux.scala 27:72]
    node _io_rw_rdata_T_214 = or(_io_rw_rdata_T_213, _io_rw_rdata_T_82) @[Mux.scala 27:72]
    node _io_rw_rdata_T_215 = or(_io_rw_rdata_T_214, _io_rw_rdata_T_83) @[Mux.scala 27:72]
    node _io_rw_rdata_T_216 = or(_io_rw_rdata_T_215, _io_rw_rdata_T_84) @[Mux.scala 27:72]
    node _io_rw_rdata_T_217 = or(_io_rw_rdata_T_216, _io_rw_rdata_T_85) @[Mux.scala 27:72]
    node _io_rw_rdata_T_218 = or(_io_rw_rdata_T_217, _io_rw_rdata_T_86) @[Mux.scala 27:72]
    node _io_rw_rdata_T_219 = or(_io_rw_rdata_T_218, _io_rw_rdata_T_87) @[Mux.scala 27:72]
    node _io_rw_rdata_T_220 = or(_io_rw_rdata_T_219, _io_rw_rdata_T_88) @[Mux.scala 27:72]
    node _io_rw_rdata_T_221 = or(_io_rw_rdata_T_220, _io_rw_rdata_T_89) @[Mux.scala 27:72]
    node _io_rw_rdata_T_222 = or(_io_rw_rdata_T_221, _io_rw_rdata_T_90) @[Mux.scala 27:72]
    node _io_rw_rdata_T_223 = or(_io_rw_rdata_T_222, _io_rw_rdata_T_91) @[Mux.scala 27:72]
    node _io_rw_rdata_T_224 = or(_io_rw_rdata_T_223, _io_rw_rdata_T_92) @[Mux.scala 27:72]
    node _io_rw_rdata_T_225 = or(_io_rw_rdata_T_224, _io_rw_rdata_T_93) @[Mux.scala 27:72]
    node _io_rw_rdata_T_226 = or(_io_rw_rdata_T_225, _io_rw_rdata_T_94) @[Mux.scala 27:72]
    node _io_rw_rdata_T_227 = or(_io_rw_rdata_T_226, _io_rw_rdata_T_95) @[Mux.scala 27:72]
    node _io_rw_rdata_T_228 = or(_io_rw_rdata_T_227, _io_rw_rdata_T_96) @[Mux.scala 27:72]
    node _io_rw_rdata_T_229 = or(_io_rw_rdata_T_228, _io_rw_rdata_T_97) @[Mux.scala 27:72]
    node _io_rw_rdata_T_230 = or(_io_rw_rdata_T_229, _io_rw_rdata_T_98) @[Mux.scala 27:72]
    node _io_rw_rdata_T_231 = or(_io_rw_rdata_T_230, _io_rw_rdata_T_99) @[Mux.scala 27:72]
    node _io_rw_rdata_T_232 = or(_io_rw_rdata_T_231, _io_rw_rdata_T_100) @[Mux.scala 27:72]
    node _io_rw_rdata_T_233 = or(_io_rw_rdata_T_232, _io_rw_rdata_T_101) @[Mux.scala 27:72]
    node _io_rw_rdata_T_234 = or(_io_rw_rdata_T_233, _io_rw_rdata_T_102) @[Mux.scala 27:72]
    node _io_rw_rdata_T_235 = or(_io_rw_rdata_T_234, _io_rw_rdata_T_103) @[Mux.scala 27:72]
    node _io_rw_rdata_T_236 = or(_io_rw_rdata_T_235, _io_rw_rdata_T_104) @[Mux.scala 27:72]
    node _io_rw_rdata_T_237 = or(_io_rw_rdata_T_236, _io_rw_rdata_T_105) @[Mux.scala 27:72]
    node _io_rw_rdata_T_238 = or(_io_rw_rdata_T_237, _io_rw_rdata_T_106) @[Mux.scala 27:72]
    node _io_rw_rdata_T_239 = or(_io_rw_rdata_T_238, _io_rw_rdata_T_107) @[Mux.scala 27:72]
    node _io_rw_rdata_T_240 = or(_io_rw_rdata_T_239, _io_rw_rdata_T_108) @[Mux.scala 27:72]
    node _io_rw_rdata_T_241 = or(_io_rw_rdata_T_240, _io_rw_rdata_T_109) @[Mux.scala 27:72]
    node _io_rw_rdata_T_242 = or(_io_rw_rdata_T_241, _io_rw_rdata_T_110) @[Mux.scala 27:72]
    node _io_rw_rdata_T_243 = or(_io_rw_rdata_T_242, _io_rw_rdata_T_111) @[Mux.scala 27:72]
    node _io_rw_rdata_T_244 = or(_io_rw_rdata_T_243, _io_rw_rdata_T_112) @[Mux.scala 27:72]
    node _io_rw_rdata_T_245 = or(_io_rw_rdata_T_244, _io_rw_rdata_T_113) @[Mux.scala 27:72]
    node _io_rw_rdata_T_246 = or(_io_rw_rdata_T_245, _io_rw_rdata_T_114) @[Mux.scala 27:72]
    node _io_rw_rdata_T_247 = or(_io_rw_rdata_T_246, _io_rw_rdata_T_115) @[Mux.scala 27:72]
    node _io_rw_rdata_T_248 = or(_io_rw_rdata_T_247, _io_rw_rdata_T_116) @[Mux.scala 27:72]
    node _io_rw_rdata_T_249 = or(_io_rw_rdata_T_248, _io_rw_rdata_T_117) @[Mux.scala 27:72]
    node _io_rw_rdata_T_250 = or(_io_rw_rdata_T_249, _io_rw_rdata_T_118) @[Mux.scala 27:72]
    node _io_rw_rdata_T_251 = or(_io_rw_rdata_T_250, _io_rw_rdata_T_119) @[Mux.scala 27:72]
    node _io_rw_rdata_T_252 = or(_io_rw_rdata_T_251, _io_rw_rdata_T_120) @[Mux.scala 27:72]
    node _io_rw_rdata_T_253 = or(_io_rw_rdata_T_252, _io_rw_rdata_T_121) @[Mux.scala 27:72]
    node _io_rw_rdata_T_254 = or(_io_rw_rdata_T_253, _io_rw_rdata_T_122) @[Mux.scala 27:72]
    node _io_rw_rdata_T_255 = or(_io_rw_rdata_T_254, _io_rw_rdata_T_123) @[Mux.scala 27:72]
    node _io_rw_rdata_T_256 = or(_io_rw_rdata_T_255, _io_rw_rdata_T_124) @[Mux.scala 27:72]
    node _io_rw_rdata_T_257 = or(_io_rw_rdata_T_256, _io_rw_rdata_T_125) @[Mux.scala 27:72]
    node _io_rw_rdata_T_258 = or(_io_rw_rdata_T_257, _io_rw_rdata_T_126) @[Mux.scala 27:72]
    node _io_rw_rdata_T_259 = or(_io_rw_rdata_T_258, _io_rw_rdata_T_127) @[Mux.scala 27:72]
    node _io_rw_rdata_T_260 = or(_io_rw_rdata_T_259, _io_rw_rdata_T_128) @[Mux.scala 27:72]
    node _io_rw_rdata_T_261 = or(_io_rw_rdata_T_260, _io_rw_rdata_T_129) @[Mux.scala 27:72]
    node _io_rw_rdata_T_262 = or(_io_rw_rdata_T_261, _io_rw_rdata_T_130) @[Mux.scala 27:72]
    node _io_rw_rdata_T_263 = or(_io_rw_rdata_T_262, _io_rw_rdata_T_131) @[Mux.scala 27:72]
    node _io_rw_rdata_T_264 = or(_io_rw_rdata_T_263, _io_rw_rdata_T_132) @[Mux.scala 27:72]
    wire _io_rw_rdata_WIRE : UInt @[Mux.scala 27:72]
    _io_rw_rdata_WIRE <= _io_rw_rdata_T_264 @[Mux.scala 27:72]
    io.rw.rdata <= _io_rw_rdata_WIRE @[CSR.scala 855:15]
    node _T_377 = andr(UInt<2>("h01")) @[CSR.scala 859:21]
    node _T_378 = eq(_T_377, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_378 : @[CSR.scala 859:27]
      node _T_379 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_380 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_381 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_382 = or(_T_379, _T_380) @[package.scala 72:59]
      node _T_383 = or(_T_382, _T_381) @[package.scala 72:59]
      node _T_384 = eq(io.rw.addr, UInt<11>("h07a0")) @[CSR.scala 860:65]
      node _T_385 = and(_T_383, _T_384) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_386 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_387 = eq(io.rw.addr, UInt<11>("h07a0")) @[CSR.scala 862:44]
      node _T_388 = and(_T_386, _T_387) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_389 = andr(UInt<2>("h01")) @[CSR.scala 859:21]
    node _T_390 = eq(_T_389, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_390 : @[CSR.scala 859:27]
      node _T_391 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_392 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_393 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_394 = or(_T_391, _T_392) @[package.scala 72:59]
      node _T_395 = or(_T_394, _T_393) @[package.scala 72:59]
      node _T_396 = eq(io.rw.addr, UInt<11>("h07a1")) @[CSR.scala 860:65]
      node _T_397 = and(_T_395, _T_396) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_398 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_399 = eq(io.rw.addr, UInt<11>("h07a1")) @[CSR.scala 862:44]
      node _T_400 = and(_T_398, _T_399) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_401 = andr(UInt<2>("h01")) @[CSR.scala 859:21]
    node _T_402 = eq(_T_401, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_402 : @[CSR.scala 859:27]
      node _T_403 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_404 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_405 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_406 = or(_T_403, _T_404) @[package.scala 72:59]
      node _T_407 = or(_T_406, _T_405) @[package.scala 72:59]
      node _T_408 = eq(io.rw.addr, UInt<11>("h07a2")) @[CSR.scala 860:65]
      node _T_409 = and(_T_407, _T_408) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_410 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_411 = eq(io.rw.addr, UInt<11>("h07a2")) @[CSR.scala 862:44]
      node _T_412 = and(_T_410, _T_411) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_413 = andr(UInt<2>("h01")) @[CSR.scala 859:21]
    node _T_414 = eq(_T_413, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_414 : @[CSR.scala 859:27]
      node _T_415 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_416 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_417 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_418 = or(_T_415, _T_416) @[package.scala 72:59]
      node _T_419 = or(_T_418, _T_417) @[package.scala 72:59]
      node _T_420 = eq(io.rw.addr, UInt<11>("h07a3")) @[CSR.scala 860:65]
      node _T_421 = and(_T_419, _T_420) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_422 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_423 = eq(io.rw.addr, UInt<11>("h07a3")) @[CSR.scala 862:44]
      node _T_424 = and(_T_422, _T_423) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_425 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_426 = eq(_T_425, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_426 : @[CSR.scala 859:27]
      node _T_427 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_428 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_429 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_430 = or(_T_427, _T_428) @[package.scala 72:59]
      node _T_431 = or(_T_430, _T_429) @[package.scala 72:59]
      node _T_432 = eq(io.rw.addr, UInt<10>("h0301")) @[CSR.scala 860:65]
      node _T_433 = and(_T_431, _T_432) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_434 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_435 = eq(io.rw.addr, UInt<10>("h0301")) @[CSR.scala 862:44]
      node _T_436 = and(_T_434, _T_435) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_437 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_438 = eq(_T_437, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_438 : @[CSR.scala 859:27]
      node _T_439 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_440 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_441 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_442 = or(_T_439, _T_440) @[package.scala 72:59]
      node _T_443 = or(_T_442, _T_441) @[package.scala 72:59]
      node _T_444 = eq(io.rw.addr, UInt<10>("h0300")) @[CSR.scala 860:65]
      node _T_445 = and(_T_443, _T_444) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_446 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_447 = eq(io.rw.addr, UInt<10>("h0300")) @[CSR.scala 862:44]
      node _T_448 = and(_T_446, _T_447) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_449 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_450 = eq(_T_449, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_450 : @[CSR.scala 859:27]
      node _T_451 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_452 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_453 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_454 = or(_T_451, _T_452) @[package.scala 72:59]
      node _T_455 = or(_T_454, _T_453) @[package.scala 72:59]
      node _T_456 = eq(io.rw.addr, UInt<10>("h0305")) @[CSR.scala 860:65]
      node _T_457 = and(_T_455, _T_456) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_458 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_459 = eq(io.rw.addr, UInt<10>("h0305")) @[CSR.scala 862:44]
      node _T_460 = and(_T_458, _T_459) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_461 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_462 = eq(_T_461, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_462 : @[CSR.scala 859:27]
      node _T_463 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_464 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_465 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_466 = or(_T_463, _T_464) @[package.scala 72:59]
      node _T_467 = or(_T_466, _T_465) @[package.scala 72:59]
      node _T_468 = eq(io.rw.addr, UInt<10>("h0344")) @[CSR.scala 860:65]
      node _T_469 = and(_T_467, _T_468) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_470 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_471 = eq(io.rw.addr, UInt<10>("h0344")) @[CSR.scala 862:44]
      node _T_472 = and(_T_470, _T_471) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_473 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_474 = eq(_T_473, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_474 : @[CSR.scala 859:27]
      node _T_475 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_476 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_477 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_478 = or(_T_475, _T_476) @[package.scala 72:59]
      node _T_479 = or(_T_478, _T_477) @[package.scala 72:59]
      node _T_480 = eq(io.rw.addr, UInt<10>("h0304")) @[CSR.scala 860:65]
      node _T_481 = and(_T_479, _T_480) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_482 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_483 = eq(io.rw.addr, UInt<10>("h0304")) @[CSR.scala 862:44]
      node _T_484 = and(_T_482, _T_483) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_485 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_486 = eq(_T_485, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_486 : @[CSR.scala 859:27]
      node _T_487 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_488 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_489 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_490 = or(_T_487, _T_488) @[package.scala 72:59]
      node _T_491 = or(_T_490, _T_489) @[package.scala 72:59]
      node _T_492 = eq(io.rw.addr, UInt<10>("h0340")) @[CSR.scala 860:65]
      node _T_493 = and(_T_491, _T_492) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_494 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_495 = eq(io.rw.addr, UInt<10>("h0340")) @[CSR.scala 862:44]
      node _T_496 = and(_T_494, _T_495) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_497 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_498 = eq(_T_497, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_498 : @[CSR.scala 859:27]
      node _T_499 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_500 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_501 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_502 = or(_T_499, _T_500) @[package.scala 72:59]
      node _T_503 = or(_T_502, _T_501) @[package.scala 72:59]
      node _T_504 = eq(io.rw.addr, UInt<10>("h0341")) @[CSR.scala 860:65]
      node _T_505 = and(_T_503, _T_504) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_506 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_507 = eq(io.rw.addr, UInt<10>("h0341")) @[CSR.scala 862:44]
      node _T_508 = and(_T_506, _T_507) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_509 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_510 = eq(_T_509, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_510 : @[CSR.scala 859:27]
      node _T_511 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_512 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_513 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_514 = or(_T_511, _T_512) @[package.scala 72:59]
      node _T_515 = or(_T_514, _T_513) @[package.scala 72:59]
      node _T_516 = eq(io.rw.addr, UInt<10>("h0343")) @[CSR.scala 860:65]
      node _T_517 = and(_T_515, _T_516) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_518 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_519 = eq(io.rw.addr, UInt<10>("h0343")) @[CSR.scala 862:44]
      node _T_520 = and(_T_518, _T_519) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_521 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_522 = eq(_T_521, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_522 : @[CSR.scala 859:27]
      node _T_523 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_524 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_525 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_526 = or(_T_523, _T_524) @[package.scala 72:59]
      node _T_527 = or(_T_526, _T_525) @[package.scala 72:59]
      node _T_528 = eq(io.rw.addr, UInt<10>("h0342")) @[CSR.scala 860:65]
      node _T_529 = and(_T_527, _T_528) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_530 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_531 = eq(io.rw.addr, UInt<10>("h0342")) @[CSR.scala 862:44]
      node _T_532 = and(_T_530, _T_531) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_533 = andr(UInt<2>("h03")) @[CSR.scala 859:21]
    node _T_534 = eq(_T_533, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_534 : @[CSR.scala 859:27]
      node _T_535 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_536 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_537 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_538 = or(_T_535, _T_536) @[package.scala 72:59]
      node _T_539 = or(_T_538, _T_537) @[package.scala 72:59]
      node _T_540 = eq(io.rw.addr, UInt<12>("h0f14")) @[CSR.scala 860:65]
      node _T_541 = and(_T_539, _T_540) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_542 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_543 = eq(io.rw.addr, UInt<12>("h0f14")) @[CSR.scala 862:44]
      node _T_544 = and(_T_542, _T_543) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_545 = andr(UInt<2>("h01")) @[CSR.scala 859:21]
    node _T_546 = eq(_T_545, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_546 : @[CSR.scala 859:27]
      node _T_547 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_548 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_549 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_550 = or(_T_547, _T_548) @[package.scala 72:59]
      node _T_551 = or(_T_550, _T_549) @[package.scala 72:59]
      node _T_552 = eq(io.rw.addr, UInt<11>("h07b0")) @[CSR.scala 860:65]
      node _T_553 = and(_T_551, _T_552) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_554 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_555 = eq(io.rw.addr, UInt<11>("h07b0")) @[CSR.scala 862:44]
      node _T_556 = and(_T_554, _T_555) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_557 = andr(UInt<2>("h01")) @[CSR.scala 859:21]
    node _T_558 = eq(_T_557, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_558 : @[CSR.scala 859:27]
      node _T_559 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_560 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_561 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_562 = or(_T_559, _T_560) @[package.scala 72:59]
      node _T_563 = or(_T_562, _T_561) @[package.scala 72:59]
      node _T_564 = eq(io.rw.addr, UInt<11>("h07b1")) @[CSR.scala 860:65]
      node _T_565 = and(_T_563, _T_564) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_566 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_567 = eq(io.rw.addr, UInt<11>("h07b1")) @[CSR.scala 862:44]
      node _T_568 = and(_T_566, _T_567) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_569 = andr(UInt<2>("h01")) @[CSR.scala 859:21]
    node _T_570 = eq(_T_569, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_570 : @[CSR.scala 859:27]
      node _T_571 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_572 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_573 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_574 = or(_T_571, _T_572) @[package.scala 72:59]
      node _T_575 = or(_T_574, _T_573) @[package.scala 72:59]
      node _T_576 = eq(io.rw.addr, UInt<11>("h07b2")) @[CSR.scala 860:65]
      node _T_577 = and(_T_575, _T_576) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_578 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_579 = eq(io.rw.addr, UInt<11>("h07b2")) @[CSR.scala 862:44]
      node _T_580 = and(_T_578, _T_579) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_581 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_582 = eq(_T_581, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_582 : @[CSR.scala 859:27]
      node _T_583 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_584 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_585 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_586 = or(_T_583, _T_584) @[package.scala 72:59]
      node _T_587 = or(_T_586, _T_585) @[package.scala 72:59]
      node _T_588 = eq(io.rw.addr, UInt<10>("h0320")) @[CSR.scala 860:65]
      node _T_589 = and(_T_587, _T_588) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_590 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_591 = eq(io.rw.addr, UInt<10>("h0320")) @[CSR.scala 862:44]
      node _T_592 = and(_T_590, _T_591) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_593 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_594 = eq(_T_593, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_594 : @[CSR.scala 859:27]
      node _T_595 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_596 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_597 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_598 = or(_T_595, _T_596) @[package.scala 72:59]
      node _T_599 = or(_T_598, _T_597) @[package.scala 72:59]
      node _T_600 = eq(io.rw.addr, UInt<12>("h0b00")) @[CSR.scala 860:65]
      node _T_601 = and(_T_599, _T_600) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_602 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_603 = eq(io.rw.addr, UInt<12>("h0b00")) @[CSR.scala 862:44]
      node _T_604 = and(_T_602, _T_603) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_605 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_606 = eq(_T_605, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_606 : @[CSR.scala 859:27]
      node _T_607 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_608 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_609 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_610 = or(_T_607, _T_608) @[package.scala 72:59]
      node _T_611 = or(_T_610, _T_609) @[package.scala 72:59]
      node _T_612 = eq(io.rw.addr, UInt<12>("h0b02")) @[CSR.scala 860:65]
      node _T_613 = and(_T_611, _T_612) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_614 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_615 = eq(io.rw.addr, UInt<12>("h0b02")) @[CSR.scala 862:44]
      node _T_616 = and(_T_614, _T_615) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_617 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_618 = eq(_T_617, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_618 : @[CSR.scala 859:27]
      node _T_619 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_620 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_621 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_622 = or(_T_619, _T_620) @[package.scala 72:59]
      node _T_623 = or(_T_622, _T_621) @[package.scala 72:59]
      node _T_624 = eq(io.rw.addr, UInt<10>("h0323")) @[CSR.scala 860:65]
      node _T_625 = and(_T_623, _T_624) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_626 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_627 = eq(io.rw.addr, UInt<10>("h0323")) @[CSR.scala 862:44]
      node _T_628 = and(_T_626, _T_627) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_629 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_630 = eq(_T_629, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_630 : @[CSR.scala 859:27]
      node _T_631 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_632 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_633 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_634 = or(_T_631, _T_632) @[package.scala 72:59]
      node _T_635 = or(_T_634, _T_633) @[package.scala 72:59]
      node _T_636 = eq(io.rw.addr, UInt<12>("h0b03")) @[CSR.scala 860:65]
      node _T_637 = and(_T_635, _T_636) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_638 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_639 = eq(io.rw.addr, UInt<12>("h0b03")) @[CSR.scala 862:44]
      node _T_640 = and(_T_638, _T_639) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_641 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_642 = eq(_T_641, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_642 : @[CSR.scala 859:27]
      node _T_643 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_644 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_645 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_646 = or(_T_643, _T_644) @[package.scala 72:59]
      node _T_647 = or(_T_646, _T_645) @[package.scala 72:59]
      node _T_648 = eq(io.rw.addr, UInt<12>("h0b83")) @[CSR.scala 860:65]
      node _T_649 = and(_T_647, _T_648) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_650 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_651 = eq(io.rw.addr, UInt<12>("h0b83")) @[CSR.scala 862:44]
      node _T_652 = and(_T_650, _T_651) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_653 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_654 = eq(_T_653, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_654 : @[CSR.scala 859:27]
      node _T_655 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_656 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_657 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_658 = or(_T_655, _T_656) @[package.scala 72:59]
      node _T_659 = or(_T_658, _T_657) @[package.scala 72:59]
      node _T_660 = eq(io.rw.addr, UInt<10>("h0324")) @[CSR.scala 860:65]
      node _T_661 = and(_T_659, _T_660) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_662 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_663 = eq(io.rw.addr, UInt<10>("h0324")) @[CSR.scala 862:44]
      node _T_664 = and(_T_662, _T_663) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_665 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_666 = eq(_T_665, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_666 : @[CSR.scala 859:27]
      node _T_667 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_668 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_669 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_670 = or(_T_667, _T_668) @[package.scala 72:59]
      node _T_671 = or(_T_670, _T_669) @[package.scala 72:59]
      node _T_672 = eq(io.rw.addr, UInt<12>("h0b04")) @[CSR.scala 860:65]
      node _T_673 = and(_T_671, _T_672) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_674 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_675 = eq(io.rw.addr, UInt<12>("h0b04")) @[CSR.scala 862:44]
      node _T_676 = and(_T_674, _T_675) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_677 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_678 = eq(_T_677, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_678 : @[CSR.scala 859:27]
      node _T_679 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_680 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_681 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_682 = or(_T_679, _T_680) @[package.scala 72:59]
      node _T_683 = or(_T_682, _T_681) @[package.scala 72:59]
      node _T_684 = eq(io.rw.addr, UInt<12>("h0b84")) @[CSR.scala 860:65]
      node _T_685 = and(_T_683, _T_684) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_686 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_687 = eq(io.rw.addr, UInt<12>("h0b84")) @[CSR.scala 862:44]
      node _T_688 = and(_T_686, _T_687) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_689 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_690 = eq(_T_689, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_690 : @[CSR.scala 859:27]
      node _T_691 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_692 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_693 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_694 = or(_T_691, _T_692) @[package.scala 72:59]
      node _T_695 = or(_T_694, _T_693) @[package.scala 72:59]
      node _T_696 = eq(io.rw.addr, UInt<10>("h0325")) @[CSR.scala 860:65]
      node _T_697 = and(_T_695, _T_696) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_698 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_699 = eq(io.rw.addr, UInt<10>("h0325")) @[CSR.scala 862:44]
      node _T_700 = and(_T_698, _T_699) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_701 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_702 = eq(_T_701, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_702 : @[CSR.scala 859:27]
      node _T_703 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_704 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_705 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_706 = or(_T_703, _T_704) @[package.scala 72:59]
      node _T_707 = or(_T_706, _T_705) @[package.scala 72:59]
      node _T_708 = eq(io.rw.addr, UInt<12>("h0b05")) @[CSR.scala 860:65]
      node _T_709 = and(_T_707, _T_708) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_710 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_711 = eq(io.rw.addr, UInt<12>("h0b05")) @[CSR.scala 862:44]
      node _T_712 = and(_T_710, _T_711) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_713 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_714 = eq(_T_713, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_714 : @[CSR.scala 859:27]
      node _T_715 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_716 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_717 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_718 = or(_T_715, _T_716) @[package.scala 72:59]
      node _T_719 = or(_T_718, _T_717) @[package.scala 72:59]
      node _T_720 = eq(io.rw.addr, UInt<12>("h0b85")) @[CSR.scala 860:65]
      node _T_721 = and(_T_719, _T_720) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_722 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_723 = eq(io.rw.addr, UInt<12>("h0b85")) @[CSR.scala 862:44]
      node _T_724 = and(_T_722, _T_723) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_725 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_726 = eq(_T_725, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_726 : @[CSR.scala 859:27]
      node _T_727 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_728 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_729 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_730 = or(_T_727, _T_728) @[package.scala 72:59]
      node _T_731 = or(_T_730, _T_729) @[package.scala 72:59]
      node _T_732 = eq(io.rw.addr, UInt<10>("h0326")) @[CSR.scala 860:65]
      node _T_733 = and(_T_731, _T_732) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_734 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_735 = eq(io.rw.addr, UInt<10>("h0326")) @[CSR.scala 862:44]
      node _T_736 = and(_T_734, _T_735) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_737 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_738 = eq(_T_737, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_738 : @[CSR.scala 859:27]
      node _T_739 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_740 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_741 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_742 = or(_T_739, _T_740) @[package.scala 72:59]
      node _T_743 = or(_T_742, _T_741) @[package.scala 72:59]
      node _T_744 = eq(io.rw.addr, UInt<12>("h0b06")) @[CSR.scala 860:65]
      node _T_745 = and(_T_743, _T_744) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_746 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_747 = eq(io.rw.addr, UInt<12>("h0b06")) @[CSR.scala 862:44]
      node _T_748 = and(_T_746, _T_747) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_749 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_750 = eq(_T_749, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_750 : @[CSR.scala 859:27]
      node _T_751 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_752 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_753 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_754 = or(_T_751, _T_752) @[package.scala 72:59]
      node _T_755 = or(_T_754, _T_753) @[package.scala 72:59]
      node _T_756 = eq(io.rw.addr, UInt<12>("h0b86")) @[CSR.scala 860:65]
      node _T_757 = and(_T_755, _T_756) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_758 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_759 = eq(io.rw.addr, UInt<12>("h0b86")) @[CSR.scala 862:44]
      node _T_760 = and(_T_758, _T_759) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_761 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_762 = eq(_T_761, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_762 : @[CSR.scala 859:27]
      node _T_763 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_764 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_765 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_766 = or(_T_763, _T_764) @[package.scala 72:59]
      node _T_767 = or(_T_766, _T_765) @[package.scala 72:59]
      node _T_768 = eq(io.rw.addr, UInt<10>("h0327")) @[CSR.scala 860:65]
      node _T_769 = and(_T_767, _T_768) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_770 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_771 = eq(io.rw.addr, UInt<10>("h0327")) @[CSR.scala 862:44]
      node _T_772 = and(_T_770, _T_771) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_773 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_774 = eq(_T_773, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_774 : @[CSR.scala 859:27]
      node _T_775 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_776 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_777 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_778 = or(_T_775, _T_776) @[package.scala 72:59]
      node _T_779 = or(_T_778, _T_777) @[package.scala 72:59]
      node _T_780 = eq(io.rw.addr, UInt<12>("h0b07")) @[CSR.scala 860:65]
      node _T_781 = and(_T_779, _T_780) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_782 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_783 = eq(io.rw.addr, UInt<12>("h0b07")) @[CSR.scala 862:44]
      node _T_784 = and(_T_782, _T_783) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_785 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_786 = eq(_T_785, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_786 : @[CSR.scala 859:27]
      node _T_787 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_788 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_789 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_790 = or(_T_787, _T_788) @[package.scala 72:59]
      node _T_791 = or(_T_790, _T_789) @[package.scala 72:59]
      node _T_792 = eq(io.rw.addr, UInt<12>("h0b87")) @[CSR.scala 860:65]
      node _T_793 = and(_T_791, _T_792) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_794 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_795 = eq(io.rw.addr, UInt<12>("h0b87")) @[CSR.scala 862:44]
      node _T_796 = and(_T_794, _T_795) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_797 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_798 = eq(_T_797, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_798 : @[CSR.scala 859:27]
      node _T_799 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_800 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_801 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_802 = or(_T_799, _T_800) @[package.scala 72:59]
      node _T_803 = or(_T_802, _T_801) @[package.scala 72:59]
      node _T_804 = eq(io.rw.addr, UInt<10>("h0328")) @[CSR.scala 860:65]
      node _T_805 = and(_T_803, _T_804) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_806 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_807 = eq(io.rw.addr, UInt<10>("h0328")) @[CSR.scala 862:44]
      node _T_808 = and(_T_806, _T_807) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_809 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_810 = eq(_T_809, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_810 : @[CSR.scala 859:27]
      node _T_811 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_812 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_813 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_814 = or(_T_811, _T_812) @[package.scala 72:59]
      node _T_815 = or(_T_814, _T_813) @[package.scala 72:59]
      node _T_816 = eq(io.rw.addr, UInt<12>("h0b08")) @[CSR.scala 860:65]
      node _T_817 = and(_T_815, _T_816) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_818 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_819 = eq(io.rw.addr, UInt<12>("h0b08")) @[CSR.scala 862:44]
      node _T_820 = and(_T_818, _T_819) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_821 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_822 = eq(_T_821, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_822 : @[CSR.scala 859:27]
      node _T_823 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_824 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_825 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_826 = or(_T_823, _T_824) @[package.scala 72:59]
      node _T_827 = or(_T_826, _T_825) @[package.scala 72:59]
      node _T_828 = eq(io.rw.addr, UInt<12>("h0b88")) @[CSR.scala 860:65]
      node _T_829 = and(_T_827, _T_828) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_830 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_831 = eq(io.rw.addr, UInt<12>("h0b88")) @[CSR.scala 862:44]
      node _T_832 = and(_T_830, _T_831) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_833 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_834 = eq(_T_833, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_834 : @[CSR.scala 859:27]
      node _T_835 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_836 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_837 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_838 = or(_T_835, _T_836) @[package.scala 72:59]
      node _T_839 = or(_T_838, _T_837) @[package.scala 72:59]
      node _T_840 = eq(io.rw.addr, UInt<10>("h0329")) @[CSR.scala 860:65]
      node _T_841 = and(_T_839, _T_840) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_842 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_843 = eq(io.rw.addr, UInt<10>("h0329")) @[CSR.scala 862:44]
      node _T_844 = and(_T_842, _T_843) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_845 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_846 = eq(_T_845, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_846 : @[CSR.scala 859:27]
      node _T_847 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_848 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_849 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_850 = or(_T_847, _T_848) @[package.scala 72:59]
      node _T_851 = or(_T_850, _T_849) @[package.scala 72:59]
      node _T_852 = eq(io.rw.addr, UInt<12>("h0b09")) @[CSR.scala 860:65]
      node _T_853 = and(_T_851, _T_852) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_854 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_855 = eq(io.rw.addr, UInt<12>("h0b09")) @[CSR.scala 862:44]
      node _T_856 = and(_T_854, _T_855) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_857 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_858 = eq(_T_857, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_858 : @[CSR.scala 859:27]
      node _T_859 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_860 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_861 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_862 = or(_T_859, _T_860) @[package.scala 72:59]
      node _T_863 = or(_T_862, _T_861) @[package.scala 72:59]
      node _T_864 = eq(io.rw.addr, UInt<12>("h0b89")) @[CSR.scala 860:65]
      node _T_865 = and(_T_863, _T_864) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_866 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_867 = eq(io.rw.addr, UInt<12>("h0b89")) @[CSR.scala 862:44]
      node _T_868 = and(_T_866, _T_867) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_869 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_870 = eq(_T_869, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_870 : @[CSR.scala 859:27]
      node _T_871 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_872 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_873 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_874 = or(_T_871, _T_872) @[package.scala 72:59]
      node _T_875 = or(_T_874, _T_873) @[package.scala 72:59]
      node _T_876 = eq(io.rw.addr, UInt<10>("h032a")) @[CSR.scala 860:65]
      node _T_877 = and(_T_875, _T_876) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_878 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_879 = eq(io.rw.addr, UInt<10>("h032a")) @[CSR.scala 862:44]
      node _T_880 = and(_T_878, _T_879) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_881 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_882 = eq(_T_881, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_882 : @[CSR.scala 859:27]
      node _T_883 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_884 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_885 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_886 = or(_T_883, _T_884) @[package.scala 72:59]
      node _T_887 = or(_T_886, _T_885) @[package.scala 72:59]
      node _T_888 = eq(io.rw.addr, UInt<12>("h0b0a")) @[CSR.scala 860:65]
      node _T_889 = and(_T_887, _T_888) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_890 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_891 = eq(io.rw.addr, UInt<12>("h0b0a")) @[CSR.scala 862:44]
      node _T_892 = and(_T_890, _T_891) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_893 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_894 = eq(_T_893, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_894 : @[CSR.scala 859:27]
      node _T_895 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_896 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_897 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_898 = or(_T_895, _T_896) @[package.scala 72:59]
      node _T_899 = or(_T_898, _T_897) @[package.scala 72:59]
      node _T_900 = eq(io.rw.addr, UInt<12>("h0b8a")) @[CSR.scala 860:65]
      node _T_901 = and(_T_899, _T_900) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_902 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_903 = eq(io.rw.addr, UInt<12>("h0b8a")) @[CSR.scala 862:44]
      node _T_904 = and(_T_902, _T_903) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_905 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_906 = eq(_T_905, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_906 : @[CSR.scala 859:27]
      node _T_907 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_908 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_909 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_910 = or(_T_907, _T_908) @[package.scala 72:59]
      node _T_911 = or(_T_910, _T_909) @[package.scala 72:59]
      node _T_912 = eq(io.rw.addr, UInt<10>("h032b")) @[CSR.scala 860:65]
      node _T_913 = and(_T_911, _T_912) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_914 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_915 = eq(io.rw.addr, UInt<10>("h032b")) @[CSR.scala 862:44]
      node _T_916 = and(_T_914, _T_915) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_917 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_918 = eq(_T_917, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_918 : @[CSR.scala 859:27]
      node _T_919 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_920 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_921 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_922 = or(_T_919, _T_920) @[package.scala 72:59]
      node _T_923 = or(_T_922, _T_921) @[package.scala 72:59]
      node _T_924 = eq(io.rw.addr, UInt<12>("h0b0b")) @[CSR.scala 860:65]
      node _T_925 = and(_T_923, _T_924) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_926 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_927 = eq(io.rw.addr, UInt<12>("h0b0b")) @[CSR.scala 862:44]
      node _T_928 = and(_T_926, _T_927) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_929 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_930 = eq(_T_929, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_930 : @[CSR.scala 859:27]
      node _T_931 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_932 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_933 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_934 = or(_T_931, _T_932) @[package.scala 72:59]
      node _T_935 = or(_T_934, _T_933) @[package.scala 72:59]
      node _T_936 = eq(io.rw.addr, UInt<12>("h0b8b")) @[CSR.scala 860:65]
      node _T_937 = and(_T_935, _T_936) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_938 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_939 = eq(io.rw.addr, UInt<12>("h0b8b")) @[CSR.scala 862:44]
      node _T_940 = and(_T_938, _T_939) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_941 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_942 = eq(_T_941, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_942 : @[CSR.scala 859:27]
      node _T_943 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_944 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_945 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_946 = or(_T_943, _T_944) @[package.scala 72:59]
      node _T_947 = or(_T_946, _T_945) @[package.scala 72:59]
      node _T_948 = eq(io.rw.addr, UInt<10>("h032c")) @[CSR.scala 860:65]
      node _T_949 = and(_T_947, _T_948) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_950 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_951 = eq(io.rw.addr, UInt<10>("h032c")) @[CSR.scala 862:44]
      node _T_952 = and(_T_950, _T_951) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_953 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_954 = eq(_T_953, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_954 : @[CSR.scala 859:27]
      node _T_955 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_956 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_957 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_958 = or(_T_955, _T_956) @[package.scala 72:59]
      node _T_959 = or(_T_958, _T_957) @[package.scala 72:59]
      node _T_960 = eq(io.rw.addr, UInt<12>("h0b0c")) @[CSR.scala 860:65]
      node _T_961 = and(_T_959, _T_960) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_962 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_963 = eq(io.rw.addr, UInt<12>("h0b0c")) @[CSR.scala 862:44]
      node _T_964 = and(_T_962, _T_963) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_965 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_966 = eq(_T_965, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_966 : @[CSR.scala 859:27]
      node _T_967 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_968 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_969 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_970 = or(_T_967, _T_968) @[package.scala 72:59]
      node _T_971 = or(_T_970, _T_969) @[package.scala 72:59]
      node _T_972 = eq(io.rw.addr, UInt<12>("h0b8c")) @[CSR.scala 860:65]
      node _T_973 = and(_T_971, _T_972) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_974 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_975 = eq(io.rw.addr, UInt<12>("h0b8c")) @[CSR.scala 862:44]
      node _T_976 = and(_T_974, _T_975) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_977 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_978 = eq(_T_977, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_978 : @[CSR.scala 859:27]
      node _T_979 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_980 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_981 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_982 = or(_T_979, _T_980) @[package.scala 72:59]
      node _T_983 = or(_T_982, _T_981) @[package.scala 72:59]
      node _T_984 = eq(io.rw.addr, UInt<10>("h032d")) @[CSR.scala 860:65]
      node _T_985 = and(_T_983, _T_984) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_986 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_987 = eq(io.rw.addr, UInt<10>("h032d")) @[CSR.scala 862:44]
      node _T_988 = and(_T_986, _T_987) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_989 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_990 = eq(_T_989, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_990 : @[CSR.scala 859:27]
      node _T_991 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_992 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_993 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_994 = or(_T_991, _T_992) @[package.scala 72:59]
      node _T_995 = or(_T_994, _T_993) @[package.scala 72:59]
      node _T_996 = eq(io.rw.addr, UInt<12>("h0b0d")) @[CSR.scala 860:65]
      node _T_997 = and(_T_995, _T_996) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_998 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_999 = eq(io.rw.addr, UInt<12>("h0b0d")) @[CSR.scala 862:44]
      node _T_1000 = and(_T_998, _T_999) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1001 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1002 = eq(_T_1001, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1002 : @[CSR.scala 859:27]
      node _T_1003 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1004 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1005 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1006 = or(_T_1003, _T_1004) @[package.scala 72:59]
      node _T_1007 = or(_T_1006, _T_1005) @[package.scala 72:59]
      node _T_1008 = eq(io.rw.addr, UInt<12>("h0b8d")) @[CSR.scala 860:65]
      node _T_1009 = and(_T_1007, _T_1008) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1010 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1011 = eq(io.rw.addr, UInt<12>("h0b8d")) @[CSR.scala 862:44]
      node _T_1012 = and(_T_1010, _T_1011) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1013 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1014 = eq(_T_1013, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1014 : @[CSR.scala 859:27]
      node _T_1015 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1016 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1017 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1018 = or(_T_1015, _T_1016) @[package.scala 72:59]
      node _T_1019 = or(_T_1018, _T_1017) @[package.scala 72:59]
      node _T_1020 = eq(io.rw.addr, UInt<10>("h032e")) @[CSR.scala 860:65]
      node _T_1021 = and(_T_1019, _T_1020) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1022 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1023 = eq(io.rw.addr, UInt<10>("h032e")) @[CSR.scala 862:44]
      node _T_1024 = and(_T_1022, _T_1023) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1025 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1026 = eq(_T_1025, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1026 : @[CSR.scala 859:27]
      node _T_1027 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1028 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1029 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1030 = or(_T_1027, _T_1028) @[package.scala 72:59]
      node _T_1031 = or(_T_1030, _T_1029) @[package.scala 72:59]
      node _T_1032 = eq(io.rw.addr, UInt<12>("h0b0e")) @[CSR.scala 860:65]
      node _T_1033 = and(_T_1031, _T_1032) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1034 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1035 = eq(io.rw.addr, UInt<12>("h0b0e")) @[CSR.scala 862:44]
      node _T_1036 = and(_T_1034, _T_1035) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1037 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1038 = eq(_T_1037, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1038 : @[CSR.scala 859:27]
      node _T_1039 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1040 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1041 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1042 = or(_T_1039, _T_1040) @[package.scala 72:59]
      node _T_1043 = or(_T_1042, _T_1041) @[package.scala 72:59]
      node _T_1044 = eq(io.rw.addr, UInt<12>("h0b8e")) @[CSR.scala 860:65]
      node _T_1045 = and(_T_1043, _T_1044) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1046 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1047 = eq(io.rw.addr, UInt<12>("h0b8e")) @[CSR.scala 862:44]
      node _T_1048 = and(_T_1046, _T_1047) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1049 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1050 = eq(_T_1049, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1050 : @[CSR.scala 859:27]
      node _T_1051 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1052 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1053 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1054 = or(_T_1051, _T_1052) @[package.scala 72:59]
      node _T_1055 = or(_T_1054, _T_1053) @[package.scala 72:59]
      node _T_1056 = eq(io.rw.addr, UInt<10>("h032f")) @[CSR.scala 860:65]
      node _T_1057 = and(_T_1055, _T_1056) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1058 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1059 = eq(io.rw.addr, UInt<10>("h032f")) @[CSR.scala 862:44]
      node _T_1060 = and(_T_1058, _T_1059) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1061 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1062 = eq(_T_1061, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1062 : @[CSR.scala 859:27]
      node _T_1063 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1064 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1065 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1066 = or(_T_1063, _T_1064) @[package.scala 72:59]
      node _T_1067 = or(_T_1066, _T_1065) @[package.scala 72:59]
      node _T_1068 = eq(io.rw.addr, UInt<12>("h0b0f")) @[CSR.scala 860:65]
      node _T_1069 = and(_T_1067, _T_1068) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1070 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1071 = eq(io.rw.addr, UInt<12>("h0b0f")) @[CSR.scala 862:44]
      node _T_1072 = and(_T_1070, _T_1071) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1073 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1074 = eq(_T_1073, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1074 : @[CSR.scala 859:27]
      node _T_1075 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1076 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1077 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1078 = or(_T_1075, _T_1076) @[package.scala 72:59]
      node _T_1079 = or(_T_1078, _T_1077) @[package.scala 72:59]
      node _T_1080 = eq(io.rw.addr, UInt<12>("h0b8f")) @[CSR.scala 860:65]
      node _T_1081 = and(_T_1079, _T_1080) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1082 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1083 = eq(io.rw.addr, UInt<12>("h0b8f")) @[CSR.scala 862:44]
      node _T_1084 = and(_T_1082, _T_1083) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1085 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1086 = eq(_T_1085, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1086 : @[CSR.scala 859:27]
      node _T_1087 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1088 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1089 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1090 = or(_T_1087, _T_1088) @[package.scala 72:59]
      node _T_1091 = or(_T_1090, _T_1089) @[package.scala 72:59]
      node _T_1092 = eq(io.rw.addr, UInt<10>("h0330")) @[CSR.scala 860:65]
      node _T_1093 = and(_T_1091, _T_1092) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1094 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1095 = eq(io.rw.addr, UInt<10>("h0330")) @[CSR.scala 862:44]
      node _T_1096 = and(_T_1094, _T_1095) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1097 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1098 = eq(_T_1097, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1098 : @[CSR.scala 859:27]
      node _T_1099 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1100 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1101 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1102 = or(_T_1099, _T_1100) @[package.scala 72:59]
      node _T_1103 = or(_T_1102, _T_1101) @[package.scala 72:59]
      node _T_1104 = eq(io.rw.addr, UInt<12>("h0b10")) @[CSR.scala 860:65]
      node _T_1105 = and(_T_1103, _T_1104) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1106 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1107 = eq(io.rw.addr, UInt<12>("h0b10")) @[CSR.scala 862:44]
      node _T_1108 = and(_T_1106, _T_1107) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1109 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1110 = eq(_T_1109, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1110 : @[CSR.scala 859:27]
      node _T_1111 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1112 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1113 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1114 = or(_T_1111, _T_1112) @[package.scala 72:59]
      node _T_1115 = or(_T_1114, _T_1113) @[package.scala 72:59]
      node _T_1116 = eq(io.rw.addr, UInt<12>("h0b90")) @[CSR.scala 860:65]
      node _T_1117 = and(_T_1115, _T_1116) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1118 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1119 = eq(io.rw.addr, UInt<12>("h0b90")) @[CSR.scala 862:44]
      node _T_1120 = and(_T_1118, _T_1119) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1121 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1122 = eq(_T_1121, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1122 : @[CSR.scala 859:27]
      node _T_1123 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1124 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1125 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1126 = or(_T_1123, _T_1124) @[package.scala 72:59]
      node _T_1127 = or(_T_1126, _T_1125) @[package.scala 72:59]
      node _T_1128 = eq(io.rw.addr, UInt<10>("h0331")) @[CSR.scala 860:65]
      node _T_1129 = and(_T_1127, _T_1128) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1130 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1131 = eq(io.rw.addr, UInt<10>("h0331")) @[CSR.scala 862:44]
      node _T_1132 = and(_T_1130, _T_1131) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1133 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1134 = eq(_T_1133, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1134 : @[CSR.scala 859:27]
      node _T_1135 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1136 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1137 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1138 = or(_T_1135, _T_1136) @[package.scala 72:59]
      node _T_1139 = or(_T_1138, _T_1137) @[package.scala 72:59]
      node _T_1140 = eq(io.rw.addr, UInt<12>("h0b11")) @[CSR.scala 860:65]
      node _T_1141 = and(_T_1139, _T_1140) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1142 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1143 = eq(io.rw.addr, UInt<12>("h0b11")) @[CSR.scala 862:44]
      node _T_1144 = and(_T_1142, _T_1143) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1145 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1146 = eq(_T_1145, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1146 : @[CSR.scala 859:27]
      node _T_1147 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1148 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1149 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1150 = or(_T_1147, _T_1148) @[package.scala 72:59]
      node _T_1151 = or(_T_1150, _T_1149) @[package.scala 72:59]
      node _T_1152 = eq(io.rw.addr, UInt<12>("h0b91")) @[CSR.scala 860:65]
      node _T_1153 = and(_T_1151, _T_1152) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1154 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1155 = eq(io.rw.addr, UInt<12>("h0b91")) @[CSR.scala 862:44]
      node _T_1156 = and(_T_1154, _T_1155) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1157 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1158 = eq(_T_1157, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1158 : @[CSR.scala 859:27]
      node _T_1159 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1160 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1161 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1162 = or(_T_1159, _T_1160) @[package.scala 72:59]
      node _T_1163 = or(_T_1162, _T_1161) @[package.scala 72:59]
      node _T_1164 = eq(io.rw.addr, UInt<10>("h0332")) @[CSR.scala 860:65]
      node _T_1165 = and(_T_1163, _T_1164) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1166 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1167 = eq(io.rw.addr, UInt<10>("h0332")) @[CSR.scala 862:44]
      node _T_1168 = and(_T_1166, _T_1167) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1169 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1170 = eq(_T_1169, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1170 : @[CSR.scala 859:27]
      node _T_1171 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1172 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1173 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1174 = or(_T_1171, _T_1172) @[package.scala 72:59]
      node _T_1175 = or(_T_1174, _T_1173) @[package.scala 72:59]
      node _T_1176 = eq(io.rw.addr, UInt<12>("h0b12")) @[CSR.scala 860:65]
      node _T_1177 = and(_T_1175, _T_1176) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1178 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1179 = eq(io.rw.addr, UInt<12>("h0b12")) @[CSR.scala 862:44]
      node _T_1180 = and(_T_1178, _T_1179) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1181 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1182 = eq(_T_1181, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1182 : @[CSR.scala 859:27]
      node _T_1183 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1184 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1185 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1186 = or(_T_1183, _T_1184) @[package.scala 72:59]
      node _T_1187 = or(_T_1186, _T_1185) @[package.scala 72:59]
      node _T_1188 = eq(io.rw.addr, UInt<12>("h0b92")) @[CSR.scala 860:65]
      node _T_1189 = and(_T_1187, _T_1188) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1190 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1191 = eq(io.rw.addr, UInt<12>("h0b92")) @[CSR.scala 862:44]
      node _T_1192 = and(_T_1190, _T_1191) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1193 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1194 = eq(_T_1193, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1194 : @[CSR.scala 859:27]
      node _T_1195 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1196 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1197 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1198 = or(_T_1195, _T_1196) @[package.scala 72:59]
      node _T_1199 = or(_T_1198, _T_1197) @[package.scala 72:59]
      node _T_1200 = eq(io.rw.addr, UInt<10>("h0333")) @[CSR.scala 860:65]
      node _T_1201 = and(_T_1199, _T_1200) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1202 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1203 = eq(io.rw.addr, UInt<10>("h0333")) @[CSR.scala 862:44]
      node _T_1204 = and(_T_1202, _T_1203) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1205 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1206 = eq(_T_1205, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1206 : @[CSR.scala 859:27]
      node _T_1207 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1208 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1209 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1210 = or(_T_1207, _T_1208) @[package.scala 72:59]
      node _T_1211 = or(_T_1210, _T_1209) @[package.scala 72:59]
      node _T_1212 = eq(io.rw.addr, UInt<12>("h0b13")) @[CSR.scala 860:65]
      node _T_1213 = and(_T_1211, _T_1212) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1214 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1215 = eq(io.rw.addr, UInt<12>("h0b13")) @[CSR.scala 862:44]
      node _T_1216 = and(_T_1214, _T_1215) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1217 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1218 = eq(_T_1217, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1218 : @[CSR.scala 859:27]
      node _T_1219 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1220 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1221 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1222 = or(_T_1219, _T_1220) @[package.scala 72:59]
      node _T_1223 = or(_T_1222, _T_1221) @[package.scala 72:59]
      node _T_1224 = eq(io.rw.addr, UInt<12>("h0b93")) @[CSR.scala 860:65]
      node _T_1225 = and(_T_1223, _T_1224) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1226 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1227 = eq(io.rw.addr, UInt<12>("h0b93")) @[CSR.scala 862:44]
      node _T_1228 = and(_T_1226, _T_1227) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1229 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1230 = eq(_T_1229, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1230 : @[CSR.scala 859:27]
      node _T_1231 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1232 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1233 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1234 = or(_T_1231, _T_1232) @[package.scala 72:59]
      node _T_1235 = or(_T_1234, _T_1233) @[package.scala 72:59]
      node _T_1236 = eq(io.rw.addr, UInt<10>("h0334")) @[CSR.scala 860:65]
      node _T_1237 = and(_T_1235, _T_1236) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1238 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1239 = eq(io.rw.addr, UInt<10>("h0334")) @[CSR.scala 862:44]
      node _T_1240 = and(_T_1238, _T_1239) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1241 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1242 = eq(_T_1241, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1242 : @[CSR.scala 859:27]
      node _T_1243 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1244 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1245 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1246 = or(_T_1243, _T_1244) @[package.scala 72:59]
      node _T_1247 = or(_T_1246, _T_1245) @[package.scala 72:59]
      node _T_1248 = eq(io.rw.addr, UInt<12>("h0b14")) @[CSR.scala 860:65]
      node _T_1249 = and(_T_1247, _T_1248) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1250 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1251 = eq(io.rw.addr, UInt<12>("h0b14")) @[CSR.scala 862:44]
      node _T_1252 = and(_T_1250, _T_1251) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1253 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1254 = eq(_T_1253, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1254 : @[CSR.scala 859:27]
      node _T_1255 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1256 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1257 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1258 = or(_T_1255, _T_1256) @[package.scala 72:59]
      node _T_1259 = or(_T_1258, _T_1257) @[package.scala 72:59]
      node _T_1260 = eq(io.rw.addr, UInt<12>("h0b94")) @[CSR.scala 860:65]
      node _T_1261 = and(_T_1259, _T_1260) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1262 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1263 = eq(io.rw.addr, UInt<12>("h0b94")) @[CSR.scala 862:44]
      node _T_1264 = and(_T_1262, _T_1263) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1265 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1266 = eq(_T_1265, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1266 : @[CSR.scala 859:27]
      node _T_1267 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1268 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1269 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1270 = or(_T_1267, _T_1268) @[package.scala 72:59]
      node _T_1271 = or(_T_1270, _T_1269) @[package.scala 72:59]
      node _T_1272 = eq(io.rw.addr, UInt<10>("h0335")) @[CSR.scala 860:65]
      node _T_1273 = and(_T_1271, _T_1272) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1274 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1275 = eq(io.rw.addr, UInt<10>("h0335")) @[CSR.scala 862:44]
      node _T_1276 = and(_T_1274, _T_1275) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1277 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1278 = eq(_T_1277, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1278 : @[CSR.scala 859:27]
      node _T_1279 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1280 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1281 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1282 = or(_T_1279, _T_1280) @[package.scala 72:59]
      node _T_1283 = or(_T_1282, _T_1281) @[package.scala 72:59]
      node _T_1284 = eq(io.rw.addr, UInt<12>("h0b15")) @[CSR.scala 860:65]
      node _T_1285 = and(_T_1283, _T_1284) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1286 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1287 = eq(io.rw.addr, UInt<12>("h0b15")) @[CSR.scala 862:44]
      node _T_1288 = and(_T_1286, _T_1287) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1289 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1290 = eq(_T_1289, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1290 : @[CSR.scala 859:27]
      node _T_1291 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1292 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1293 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1294 = or(_T_1291, _T_1292) @[package.scala 72:59]
      node _T_1295 = or(_T_1294, _T_1293) @[package.scala 72:59]
      node _T_1296 = eq(io.rw.addr, UInt<12>("h0b95")) @[CSR.scala 860:65]
      node _T_1297 = and(_T_1295, _T_1296) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1298 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1299 = eq(io.rw.addr, UInt<12>("h0b95")) @[CSR.scala 862:44]
      node _T_1300 = and(_T_1298, _T_1299) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1301 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1302 = eq(_T_1301, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1302 : @[CSR.scala 859:27]
      node _T_1303 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1304 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1305 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1306 = or(_T_1303, _T_1304) @[package.scala 72:59]
      node _T_1307 = or(_T_1306, _T_1305) @[package.scala 72:59]
      node _T_1308 = eq(io.rw.addr, UInt<10>("h0336")) @[CSR.scala 860:65]
      node _T_1309 = and(_T_1307, _T_1308) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1310 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1311 = eq(io.rw.addr, UInt<10>("h0336")) @[CSR.scala 862:44]
      node _T_1312 = and(_T_1310, _T_1311) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1313 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1314 = eq(_T_1313, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1314 : @[CSR.scala 859:27]
      node _T_1315 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1316 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1317 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1318 = or(_T_1315, _T_1316) @[package.scala 72:59]
      node _T_1319 = or(_T_1318, _T_1317) @[package.scala 72:59]
      node _T_1320 = eq(io.rw.addr, UInt<12>("h0b16")) @[CSR.scala 860:65]
      node _T_1321 = and(_T_1319, _T_1320) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1322 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1323 = eq(io.rw.addr, UInt<12>("h0b16")) @[CSR.scala 862:44]
      node _T_1324 = and(_T_1322, _T_1323) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1325 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1326 = eq(_T_1325, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1326 : @[CSR.scala 859:27]
      node _T_1327 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1328 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1329 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1330 = or(_T_1327, _T_1328) @[package.scala 72:59]
      node _T_1331 = or(_T_1330, _T_1329) @[package.scala 72:59]
      node _T_1332 = eq(io.rw.addr, UInt<12>("h0b96")) @[CSR.scala 860:65]
      node _T_1333 = and(_T_1331, _T_1332) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1334 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1335 = eq(io.rw.addr, UInt<12>("h0b96")) @[CSR.scala 862:44]
      node _T_1336 = and(_T_1334, _T_1335) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1337 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1338 = eq(_T_1337, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1338 : @[CSR.scala 859:27]
      node _T_1339 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1340 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1341 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1342 = or(_T_1339, _T_1340) @[package.scala 72:59]
      node _T_1343 = or(_T_1342, _T_1341) @[package.scala 72:59]
      node _T_1344 = eq(io.rw.addr, UInt<10>("h0337")) @[CSR.scala 860:65]
      node _T_1345 = and(_T_1343, _T_1344) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1346 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1347 = eq(io.rw.addr, UInt<10>("h0337")) @[CSR.scala 862:44]
      node _T_1348 = and(_T_1346, _T_1347) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1349 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1350 = eq(_T_1349, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1350 : @[CSR.scala 859:27]
      node _T_1351 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1352 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1353 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1354 = or(_T_1351, _T_1352) @[package.scala 72:59]
      node _T_1355 = or(_T_1354, _T_1353) @[package.scala 72:59]
      node _T_1356 = eq(io.rw.addr, UInt<12>("h0b17")) @[CSR.scala 860:65]
      node _T_1357 = and(_T_1355, _T_1356) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1358 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1359 = eq(io.rw.addr, UInt<12>("h0b17")) @[CSR.scala 862:44]
      node _T_1360 = and(_T_1358, _T_1359) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1361 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1362 = eq(_T_1361, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1362 : @[CSR.scala 859:27]
      node _T_1363 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1364 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1365 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1366 = or(_T_1363, _T_1364) @[package.scala 72:59]
      node _T_1367 = or(_T_1366, _T_1365) @[package.scala 72:59]
      node _T_1368 = eq(io.rw.addr, UInt<12>("h0b97")) @[CSR.scala 860:65]
      node _T_1369 = and(_T_1367, _T_1368) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1370 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1371 = eq(io.rw.addr, UInt<12>("h0b97")) @[CSR.scala 862:44]
      node _T_1372 = and(_T_1370, _T_1371) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1373 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1374 = eq(_T_1373, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1374 : @[CSR.scala 859:27]
      node _T_1375 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1376 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1377 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1378 = or(_T_1375, _T_1376) @[package.scala 72:59]
      node _T_1379 = or(_T_1378, _T_1377) @[package.scala 72:59]
      node _T_1380 = eq(io.rw.addr, UInt<10>("h0338")) @[CSR.scala 860:65]
      node _T_1381 = and(_T_1379, _T_1380) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1382 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1383 = eq(io.rw.addr, UInt<10>("h0338")) @[CSR.scala 862:44]
      node _T_1384 = and(_T_1382, _T_1383) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1385 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1386 = eq(_T_1385, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1386 : @[CSR.scala 859:27]
      node _T_1387 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1388 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1389 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1390 = or(_T_1387, _T_1388) @[package.scala 72:59]
      node _T_1391 = or(_T_1390, _T_1389) @[package.scala 72:59]
      node _T_1392 = eq(io.rw.addr, UInt<12>("h0b18")) @[CSR.scala 860:65]
      node _T_1393 = and(_T_1391, _T_1392) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1394 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1395 = eq(io.rw.addr, UInt<12>("h0b18")) @[CSR.scala 862:44]
      node _T_1396 = and(_T_1394, _T_1395) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1397 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1398 = eq(_T_1397, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1398 : @[CSR.scala 859:27]
      node _T_1399 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1400 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1401 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1402 = or(_T_1399, _T_1400) @[package.scala 72:59]
      node _T_1403 = or(_T_1402, _T_1401) @[package.scala 72:59]
      node _T_1404 = eq(io.rw.addr, UInt<12>("h0b98")) @[CSR.scala 860:65]
      node _T_1405 = and(_T_1403, _T_1404) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1406 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1407 = eq(io.rw.addr, UInt<12>("h0b98")) @[CSR.scala 862:44]
      node _T_1408 = and(_T_1406, _T_1407) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1409 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1410 = eq(_T_1409, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1410 : @[CSR.scala 859:27]
      node _T_1411 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1412 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1413 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1414 = or(_T_1411, _T_1412) @[package.scala 72:59]
      node _T_1415 = or(_T_1414, _T_1413) @[package.scala 72:59]
      node _T_1416 = eq(io.rw.addr, UInt<10>("h0339")) @[CSR.scala 860:65]
      node _T_1417 = and(_T_1415, _T_1416) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1418 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1419 = eq(io.rw.addr, UInt<10>("h0339")) @[CSR.scala 862:44]
      node _T_1420 = and(_T_1418, _T_1419) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1421 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1422 = eq(_T_1421, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1422 : @[CSR.scala 859:27]
      node _T_1423 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1424 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1425 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1426 = or(_T_1423, _T_1424) @[package.scala 72:59]
      node _T_1427 = or(_T_1426, _T_1425) @[package.scala 72:59]
      node _T_1428 = eq(io.rw.addr, UInt<12>("h0b19")) @[CSR.scala 860:65]
      node _T_1429 = and(_T_1427, _T_1428) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1430 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1431 = eq(io.rw.addr, UInt<12>("h0b19")) @[CSR.scala 862:44]
      node _T_1432 = and(_T_1430, _T_1431) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1433 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1434 = eq(_T_1433, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1434 : @[CSR.scala 859:27]
      node _T_1435 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1436 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1437 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1438 = or(_T_1435, _T_1436) @[package.scala 72:59]
      node _T_1439 = or(_T_1438, _T_1437) @[package.scala 72:59]
      node _T_1440 = eq(io.rw.addr, UInt<12>("h0b99")) @[CSR.scala 860:65]
      node _T_1441 = and(_T_1439, _T_1440) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1442 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1443 = eq(io.rw.addr, UInt<12>("h0b99")) @[CSR.scala 862:44]
      node _T_1444 = and(_T_1442, _T_1443) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1445 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1446 = eq(_T_1445, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1446 : @[CSR.scala 859:27]
      node _T_1447 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1448 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1449 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1450 = or(_T_1447, _T_1448) @[package.scala 72:59]
      node _T_1451 = or(_T_1450, _T_1449) @[package.scala 72:59]
      node _T_1452 = eq(io.rw.addr, UInt<10>("h033a")) @[CSR.scala 860:65]
      node _T_1453 = and(_T_1451, _T_1452) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1454 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1455 = eq(io.rw.addr, UInt<10>("h033a")) @[CSR.scala 862:44]
      node _T_1456 = and(_T_1454, _T_1455) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1457 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1458 = eq(_T_1457, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1458 : @[CSR.scala 859:27]
      node _T_1459 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1460 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1461 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1462 = or(_T_1459, _T_1460) @[package.scala 72:59]
      node _T_1463 = or(_T_1462, _T_1461) @[package.scala 72:59]
      node _T_1464 = eq(io.rw.addr, UInt<12>("h0b1a")) @[CSR.scala 860:65]
      node _T_1465 = and(_T_1463, _T_1464) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1466 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1467 = eq(io.rw.addr, UInt<12>("h0b1a")) @[CSR.scala 862:44]
      node _T_1468 = and(_T_1466, _T_1467) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1469 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1470 = eq(_T_1469, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1470 : @[CSR.scala 859:27]
      node _T_1471 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1472 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1473 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1474 = or(_T_1471, _T_1472) @[package.scala 72:59]
      node _T_1475 = or(_T_1474, _T_1473) @[package.scala 72:59]
      node _T_1476 = eq(io.rw.addr, UInt<12>("h0b9a")) @[CSR.scala 860:65]
      node _T_1477 = and(_T_1475, _T_1476) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1478 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1479 = eq(io.rw.addr, UInt<12>("h0b9a")) @[CSR.scala 862:44]
      node _T_1480 = and(_T_1478, _T_1479) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1481 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1482 = eq(_T_1481, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1482 : @[CSR.scala 859:27]
      node _T_1483 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1484 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1485 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1486 = or(_T_1483, _T_1484) @[package.scala 72:59]
      node _T_1487 = or(_T_1486, _T_1485) @[package.scala 72:59]
      node _T_1488 = eq(io.rw.addr, UInt<10>("h033b")) @[CSR.scala 860:65]
      node _T_1489 = and(_T_1487, _T_1488) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1490 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1491 = eq(io.rw.addr, UInt<10>("h033b")) @[CSR.scala 862:44]
      node _T_1492 = and(_T_1490, _T_1491) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1493 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1494 = eq(_T_1493, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1494 : @[CSR.scala 859:27]
      node _T_1495 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1496 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1497 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1498 = or(_T_1495, _T_1496) @[package.scala 72:59]
      node _T_1499 = or(_T_1498, _T_1497) @[package.scala 72:59]
      node _T_1500 = eq(io.rw.addr, UInt<12>("h0b1b")) @[CSR.scala 860:65]
      node _T_1501 = and(_T_1499, _T_1500) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1502 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1503 = eq(io.rw.addr, UInt<12>("h0b1b")) @[CSR.scala 862:44]
      node _T_1504 = and(_T_1502, _T_1503) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1505 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1506 = eq(_T_1505, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1506 : @[CSR.scala 859:27]
      node _T_1507 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1508 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1509 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1510 = or(_T_1507, _T_1508) @[package.scala 72:59]
      node _T_1511 = or(_T_1510, _T_1509) @[package.scala 72:59]
      node _T_1512 = eq(io.rw.addr, UInt<12>("h0b9b")) @[CSR.scala 860:65]
      node _T_1513 = and(_T_1511, _T_1512) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1514 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1515 = eq(io.rw.addr, UInt<12>("h0b9b")) @[CSR.scala 862:44]
      node _T_1516 = and(_T_1514, _T_1515) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1517 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1518 = eq(_T_1517, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1518 : @[CSR.scala 859:27]
      node _T_1519 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1520 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1521 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1522 = or(_T_1519, _T_1520) @[package.scala 72:59]
      node _T_1523 = or(_T_1522, _T_1521) @[package.scala 72:59]
      node _T_1524 = eq(io.rw.addr, UInt<10>("h033c")) @[CSR.scala 860:65]
      node _T_1525 = and(_T_1523, _T_1524) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1526 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1527 = eq(io.rw.addr, UInt<10>("h033c")) @[CSR.scala 862:44]
      node _T_1528 = and(_T_1526, _T_1527) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1529 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1530 = eq(_T_1529, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1530 : @[CSR.scala 859:27]
      node _T_1531 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1532 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1533 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1534 = or(_T_1531, _T_1532) @[package.scala 72:59]
      node _T_1535 = or(_T_1534, _T_1533) @[package.scala 72:59]
      node _T_1536 = eq(io.rw.addr, UInt<12>("h0b1c")) @[CSR.scala 860:65]
      node _T_1537 = and(_T_1535, _T_1536) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1538 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1539 = eq(io.rw.addr, UInt<12>("h0b1c")) @[CSR.scala 862:44]
      node _T_1540 = and(_T_1538, _T_1539) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1541 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1542 = eq(_T_1541, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1542 : @[CSR.scala 859:27]
      node _T_1543 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1544 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1545 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1546 = or(_T_1543, _T_1544) @[package.scala 72:59]
      node _T_1547 = or(_T_1546, _T_1545) @[package.scala 72:59]
      node _T_1548 = eq(io.rw.addr, UInt<12>("h0b9c")) @[CSR.scala 860:65]
      node _T_1549 = and(_T_1547, _T_1548) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1550 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1551 = eq(io.rw.addr, UInt<12>("h0b9c")) @[CSR.scala 862:44]
      node _T_1552 = and(_T_1550, _T_1551) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1553 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1554 = eq(_T_1553, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1554 : @[CSR.scala 859:27]
      node _T_1555 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1556 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1557 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1558 = or(_T_1555, _T_1556) @[package.scala 72:59]
      node _T_1559 = or(_T_1558, _T_1557) @[package.scala 72:59]
      node _T_1560 = eq(io.rw.addr, UInt<10>("h033d")) @[CSR.scala 860:65]
      node _T_1561 = and(_T_1559, _T_1560) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1562 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1563 = eq(io.rw.addr, UInt<10>("h033d")) @[CSR.scala 862:44]
      node _T_1564 = and(_T_1562, _T_1563) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1565 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1566 = eq(_T_1565, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1566 : @[CSR.scala 859:27]
      node _T_1567 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1568 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1569 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1570 = or(_T_1567, _T_1568) @[package.scala 72:59]
      node _T_1571 = or(_T_1570, _T_1569) @[package.scala 72:59]
      node _T_1572 = eq(io.rw.addr, UInt<12>("h0b1d")) @[CSR.scala 860:65]
      node _T_1573 = and(_T_1571, _T_1572) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1574 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1575 = eq(io.rw.addr, UInt<12>("h0b1d")) @[CSR.scala 862:44]
      node _T_1576 = and(_T_1574, _T_1575) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1577 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1578 = eq(_T_1577, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1578 : @[CSR.scala 859:27]
      node _T_1579 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1580 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1581 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1582 = or(_T_1579, _T_1580) @[package.scala 72:59]
      node _T_1583 = or(_T_1582, _T_1581) @[package.scala 72:59]
      node _T_1584 = eq(io.rw.addr, UInt<12>("h0b9d")) @[CSR.scala 860:65]
      node _T_1585 = and(_T_1583, _T_1584) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1586 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1587 = eq(io.rw.addr, UInt<12>("h0b9d")) @[CSR.scala 862:44]
      node _T_1588 = and(_T_1586, _T_1587) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1589 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1590 = eq(_T_1589, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1590 : @[CSR.scala 859:27]
      node _T_1591 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1592 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1593 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1594 = or(_T_1591, _T_1592) @[package.scala 72:59]
      node _T_1595 = or(_T_1594, _T_1593) @[package.scala 72:59]
      node _T_1596 = eq(io.rw.addr, UInt<10>("h033e")) @[CSR.scala 860:65]
      node _T_1597 = and(_T_1595, _T_1596) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1598 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1599 = eq(io.rw.addr, UInt<10>("h033e")) @[CSR.scala 862:44]
      node _T_1600 = and(_T_1598, _T_1599) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1601 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1602 = eq(_T_1601, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1602 : @[CSR.scala 859:27]
      node _T_1603 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1604 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1605 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1606 = or(_T_1603, _T_1604) @[package.scala 72:59]
      node _T_1607 = or(_T_1606, _T_1605) @[package.scala 72:59]
      node _T_1608 = eq(io.rw.addr, UInt<12>("h0b1e")) @[CSR.scala 860:65]
      node _T_1609 = and(_T_1607, _T_1608) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1610 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1611 = eq(io.rw.addr, UInt<12>("h0b1e")) @[CSR.scala 862:44]
      node _T_1612 = and(_T_1610, _T_1611) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1613 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1614 = eq(_T_1613, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1614 : @[CSR.scala 859:27]
      node _T_1615 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1616 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1617 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1618 = or(_T_1615, _T_1616) @[package.scala 72:59]
      node _T_1619 = or(_T_1618, _T_1617) @[package.scala 72:59]
      node _T_1620 = eq(io.rw.addr, UInt<12>("h0b9e")) @[CSR.scala 860:65]
      node _T_1621 = and(_T_1619, _T_1620) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1622 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1623 = eq(io.rw.addr, UInt<12>("h0b9e")) @[CSR.scala 862:44]
      node _T_1624 = and(_T_1622, _T_1623) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1625 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1626 = eq(_T_1625, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1626 : @[CSR.scala 859:27]
      node _T_1627 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1628 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1629 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1630 = or(_T_1627, _T_1628) @[package.scala 72:59]
      node _T_1631 = or(_T_1630, _T_1629) @[package.scala 72:59]
      node _T_1632 = eq(io.rw.addr, UInt<10>("h033f")) @[CSR.scala 860:65]
      node _T_1633 = and(_T_1631, _T_1632) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1634 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1635 = eq(io.rw.addr, UInt<10>("h033f")) @[CSR.scala 862:44]
      node _T_1636 = and(_T_1634, _T_1635) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1637 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1638 = eq(_T_1637, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1638 : @[CSR.scala 859:27]
      node _T_1639 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1640 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1641 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1642 = or(_T_1639, _T_1640) @[package.scala 72:59]
      node _T_1643 = or(_T_1642, _T_1641) @[package.scala 72:59]
      node _T_1644 = eq(io.rw.addr, UInt<12>("h0b1f")) @[CSR.scala 860:65]
      node _T_1645 = and(_T_1643, _T_1644) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1646 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1647 = eq(io.rw.addr, UInt<12>("h0b1f")) @[CSR.scala 862:44]
      node _T_1648 = and(_T_1646, _T_1647) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1649 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1650 = eq(_T_1649, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1650 : @[CSR.scala 859:27]
      node _T_1651 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1652 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1653 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1654 = or(_T_1651, _T_1652) @[package.scala 72:59]
      node _T_1655 = or(_T_1654, _T_1653) @[package.scala 72:59]
      node _T_1656 = eq(io.rw.addr, UInt<12>("h0b9f")) @[CSR.scala 860:65]
      node _T_1657 = and(_T_1655, _T_1656) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1658 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1659 = eq(io.rw.addr, UInt<12>("h0b9f")) @[CSR.scala 862:44]
      node _T_1660 = and(_T_1658, _T_1659) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1661 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1662 = eq(_T_1661, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1662 : @[CSR.scala 859:27]
      node _T_1663 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1664 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1665 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1666 = or(_T_1663, _T_1664) @[package.scala 72:59]
      node _T_1667 = or(_T_1666, _T_1665) @[package.scala 72:59]
      node _T_1668 = eq(io.rw.addr, UInt<12>("h0b80")) @[CSR.scala 860:65]
      node _T_1669 = and(_T_1667, _T_1668) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1670 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1671 = eq(io.rw.addr, UInt<12>("h0b80")) @[CSR.scala 862:44]
      node _T_1672 = and(_T_1670, _T_1671) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1673 = andr(UInt<2>("h02")) @[CSR.scala 859:21]
    node _T_1674 = eq(_T_1673, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1674 : @[CSR.scala 859:27]
      node _T_1675 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1676 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1677 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1678 = or(_T_1675, _T_1676) @[package.scala 72:59]
      node _T_1679 = or(_T_1678, _T_1677) @[package.scala 72:59]
      node _T_1680 = eq(io.rw.addr, UInt<12>("h0b82")) @[CSR.scala 860:65]
      node _T_1681 = and(_T_1679, _T_1680) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1682 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1683 = eq(io.rw.addr, UInt<12>("h0b82")) @[CSR.scala 862:44]
      node _T_1684 = and(_T_1682, _T_1683) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1685 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1686 = eq(_T_1685, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1686 : @[CSR.scala 859:27]
      node _T_1687 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1688 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1689 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1690 = or(_T_1687, _T_1688) @[package.scala 72:59]
      node _T_1691 = or(_T_1690, _T_1689) @[package.scala 72:59]
      node _T_1692 = eq(io.rw.addr, UInt<10>("h03a0")) @[CSR.scala 860:65]
      node _T_1693 = and(_T_1691, _T_1692) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1694 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1695 = eq(io.rw.addr, UInt<10>("h03a0")) @[CSR.scala 862:44]
      node _T_1696 = and(_T_1694, _T_1695) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1697 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1698 = eq(_T_1697, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1698 : @[CSR.scala 859:27]
      node _T_1699 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1700 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1701 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1702 = or(_T_1699, _T_1700) @[package.scala 72:59]
      node _T_1703 = or(_T_1702, _T_1701) @[package.scala 72:59]
      node _T_1704 = eq(io.rw.addr, UInt<10>("h03a1")) @[CSR.scala 860:65]
      node _T_1705 = and(_T_1703, _T_1704) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1706 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1707 = eq(io.rw.addr, UInt<10>("h03a1")) @[CSR.scala 862:44]
      node _T_1708 = and(_T_1706, _T_1707) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1709 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1710 = eq(_T_1709, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1710 : @[CSR.scala 859:27]
      node _T_1711 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1712 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1713 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1714 = or(_T_1711, _T_1712) @[package.scala 72:59]
      node _T_1715 = or(_T_1714, _T_1713) @[package.scala 72:59]
      node _T_1716 = eq(io.rw.addr, UInt<10>("h03a2")) @[CSR.scala 860:65]
      node _T_1717 = and(_T_1715, _T_1716) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1718 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1719 = eq(io.rw.addr, UInt<10>("h03a2")) @[CSR.scala 862:44]
      node _T_1720 = and(_T_1718, _T_1719) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1721 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1722 = eq(_T_1721, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1722 : @[CSR.scala 859:27]
      node _T_1723 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1724 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1725 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1726 = or(_T_1723, _T_1724) @[package.scala 72:59]
      node _T_1727 = or(_T_1726, _T_1725) @[package.scala 72:59]
      node _T_1728 = eq(io.rw.addr, UInt<10>("h03a3")) @[CSR.scala 860:65]
      node _T_1729 = and(_T_1727, _T_1728) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1730 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1731 = eq(io.rw.addr, UInt<10>("h03a3")) @[CSR.scala 862:44]
      node _T_1732 = and(_T_1730, _T_1731) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1733 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1734 = eq(_T_1733, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1734 : @[CSR.scala 859:27]
      node _T_1735 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1736 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1737 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1738 = or(_T_1735, _T_1736) @[package.scala 72:59]
      node _T_1739 = or(_T_1738, _T_1737) @[package.scala 72:59]
      node _T_1740 = eq(io.rw.addr, UInt<10>("h03b0")) @[CSR.scala 860:65]
      node _T_1741 = and(_T_1739, _T_1740) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1742 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1743 = eq(io.rw.addr, UInt<10>("h03b0")) @[CSR.scala 862:44]
      node _T_1744 = and(_T_1742, _T_1743) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1745 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1746 = eq(_T_1745, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1746 : @[CSR.scala 859:27]
      node _T_1747 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1748 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1749 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1750 = or(_T_1747, _T_1748) @[package.scala 72:59]
      node _T_1751 = or(_T_1750, _T_1749) @[package.scala 72:59]
      node _T_1752 = eq(io.rw.addr, UInt<10>("h03b1")) @[CSR.scala 860:65]
      node _T_1753 = and(_T_1751, _T_1752) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1754 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1755 = eq(io.rw.addr, UInt<10>("h03b1")) @[CSR.scala 862:44]
      node _T_1756 = and(_T_1754, _T_1755) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1757 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1758 = eq(_T_1757, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1758 : @[CSR.scala 859:27]
      node _T_1759 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1760 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1761 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1762 = or(_T_1759, _T_1760) @[package.scala 72:59]
      node _T_1763 = or(_T_1762, _T_1761) @[package.scala 72:59]
      node _T_1764 = eq(io.rw.addr, UInt<10>("h03b2")) @[CSR.scala 860:65]
      node _T_1765 = and(_T_1763, _T_1764) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1766 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1767 = eq(io.rw.addr, UInt<10>("h03b2")) @[CSR.scala 862:44]
      node _T_1768 = and(_T_1766, _T_1767) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1769 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1770 = eq(_T_1769, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1770 : @[CSR.scala 859:27]
      node _T_1771 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1772 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1773 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1774 = or(_T_1771, _T_1772) @[package.scala 72:59]
      node _T_1775 = or(_T_1774, _T_1773) @[package.scala 72:59]
      node _T_1776 = eq(io.rw.addr, UInt<10>("h03b3")) @[CSR.scala 860:65]
      node _T_1777 = and(_T_1775, _T_1776) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1778 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1779 = eq(io.rw.addr, UInt<10>("h03b3")) @[CSR.scala 862:44]
      node _T_1780 = and(_T_1778, _T_1779) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1781 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1782 = eq(_T_1781, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1782 : @[CSR.scala 859:27]
      node _T_1783 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1784 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1785 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1786 = or(_T_1783, _T_1784) @[package.scala 72:59]
      node _T_1787 = or(_T_1786, _T_1785) @[package.scala 72:59]
      node _T_1788 = eq(io.rw.addr, UInt<10>("h03b4")) @[CSR.scala 860:65]
      node _T_1789 = and(_T_1787, _T_1788) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1790 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1791 = eq(io.rw.addr, UInt<10>("h03b4")) @[CSR.scala 862:44]
      node _T_1792 = and(_T_1790, _T_1791) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1793 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1794 = eq(_T_1793, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1794 : @[CSR.scala 859:27]
      node _T_1795 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1796 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1797 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1798 = or(_T_1795, _T_1796) @[package.scala 72:59]
      node _T_1799 = or(_T_1798, _T_1797) @[package.scala 72:59]
      node _T_1800 = eq(io.rw.addr, UInt<10>("h03b5")) @[CSR.scala 860:65]
      node _T_1801 = and(_T_1799, _T_1800) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1802 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1803 = eq(io.rw.addr, UInt<10>("h03b5")) @[CSR.scala 862:44]
      node _T_1804 = and(_T_1802, _T_1803) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1805 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1806 = eq(_T_1805, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1806 : @[CSR.scala 859:27]
      node _T_1807 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1808 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1809 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1810 = or(_T_1807, _T_1808) @[package.scala 72:59]
      node _T_1811 = or(_T_1810, _T_1809) @[package.scala 72:59]
      node _T_1812 = eq(io.rw.addr, UInt<10>("h03b6")) @[CSR.scala 860:65]
      node _T_1813 = and(_T_1811, _T_1812) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1814 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1815 = eq(io.rw.addr, UInt<10>("h03b6")) @[CSR.scala 862:44]
      node _T_1816 = and(_T_1814, _T_1815) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1817 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1818 = eq(_T_1817, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1818 : @[CSR.scala 859:27]
      node _T_1819 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1820 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1821 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1822 = or(_T_1819, _T_1820) @[package.scala 72:59]
      node _T_1823 = or(_T_1822, _T_1821) @[package.scala 72:59]
      node _T_1824 = eq(io.rw.addr, UInt<10>("h03b7")) @[CSR.scala 860:65]
      node _T_1825 = and(_T_1823, _T_1824) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1826 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1827 = eq(io.rw.addr, UInt<10>("h03b7")) @[CSR.scala 862:44]
      node _T_1828 = and(_T_1826, _T_1827) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1829 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1830 = eq(_T_1829, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1830 : @[CSR.scala 859:27]
      node _T_1831 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1832 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1833 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1834 = or(_T_1831, _T_1832) @[package.scala 72:59]
      node _T_1835 = or(_T_1834, _T_1833) @[package.scala 72:59]
      node _T_1836 = eq(io.rw.addr, UInt<10>("h03b8")) @[CSR.scala 860:65]
      node _T_1837 = and(_T_1835, _T_1836) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1838 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1839 = eq(io.rw.addr, UInt<10>("h03b8")) @[CSR.scala 862:44]
      node _T_1840 = and(_T_1838, _T_1839) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1841 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1842 = eq(_T_1841, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1842 : @[CSR.scala 859:27]
      node _T_1843 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1844 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1845 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1846 = or(_T_1843, _T_1844) @[package.scala 72:59]
      node _T_1847 = or(_T_1846, _T_1845) @[package.scala 72:59]
      node _T_1848 = eq(io.rw.addr, UInt<10>("h03b9")) @[CSR.scala 860:65]
      node _T_1849 = and(_T_1847, _T_1848) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1850 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1851 = eq(io.rw.addr, UInt<10>("h03b9")) @[CSR.scala 862:44]
      node _T_1852 = and(_T_1850, _T_1851) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1853 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1854 = eq(_T_1853, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1854 : @[CSR.scala 859:27]
      node _T_1855 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1856 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1857 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1858 = or(_T_1855, _T_1856) @[package.scala 72:59]
      node _T_1859 = or(_T_1858, _T_1857) @[package.scala 72:59]
      node _T_1860 = eq(io.rw.addr, UInt<10>("h03ba")) @[CSR.scala 860:65]
      node _T_1861 = and(_T_1859, _T_1860) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1862 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1863 = eq(io.rw.addr, UInt<10>("h03ba")) @[CSR.scala 862:44]
      node _T_1864 = and(_T_1862, _T_1863) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1865 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1866 = eq(_T_1865, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1866 : @[CSR.scala 859:27]
      node _T_1867 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1868 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1869 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1870 = or(_T_1867, _T_1868) @[package.scala 72:59]
      node _T_1871 = or(_T_1870, _T_1869) @[package.scala 72:59]
      node _T_1872 = eq(io.rw.addr, UInt<10>("h03bb")) @[CSR.scala 860:65]
      node _T_1873 = and(_T_1871, _T_1872) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1874 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1875 = eq(io.rw.addr, UInt<10>("h03bb")) @[CSR.scala 862:44]
      node _T_1876 = and(_T_1874, _T_1875) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1877 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1878 = eq(_T_1877, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1878 : @[CSR.scala 859:27]
      node _T_1879 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1880 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1881 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1882 = or(_T_1879, _T_1880) @[package.scala 72:59]
      node _T_1883 = or(_T_1882, _T_1881) @[package.scala 72:59]
      node _T_1884 = eq(io.rw.addr, UInt<10>("h03bc")) @[CSR.scala 860:65]
      node _T_1885 = and(_T_1883, _T_1884) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1886 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1887 = eq(io.rw.addr, UInt<10>("h03bc")) @[CSR.scala 862:44]
      node _T_1888 = and(_T_1886, _T_1887) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1889 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1890 = eq(_T_1889, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1890 : @[CSR.scala 859:27]
      node _T_1891 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1892 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1893 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1894 = or(_T_1891, _T_1892) @[package.scala 72:59]
      node _T_1895 = or(_T_1894, _T_1893) @[package.scala 72:59]
      node _T_1896 = eq(io.rw.addr, UInt<10>("h03bd")) @[CSR.scala 860:65]
      node _T_1897 = and(_T_1895, _T_1896) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1898 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1899 = eq(io.rw.addr, UInt<10>("h03bd")) @[CSR.scala 862:44]
      node _T_1900 = and(_T_1898, _T_1899) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1901 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1902 = eq(_T_1901, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1902 : @[CSR.scala 859:27]
      node _T_1903 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1904 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1905 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1906 = or(_T_1903, _T_1904) @[package.scala 72:59]
      node _T_1907 = or(_T_1906, _T_1905) @[package.scala 72:59]
      node _T_1908 = eq(io.rw.addr, UInt<10>("h03be")) @[CSR.scala 860:65]
      node _T_1909 = and(_T_1907, _T_1908) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1910 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1911 = eq(io.rw.addr, UInt<10>("h03be")) @[CSR.scala 862:44]
      node _T_1912 = and(_T_1910, _T_1911) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1913 = andr(UInt<2>("h00")) @[CSR.scala 859:21]
    node _T_1914 = eq(_T_1913, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1914 : @[CSR.scala 859:27]
      node _T_1915 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1916 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1917 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1918 = or(_T_1915, _T_1916) @[package.scala 72:59]
      node _T_1919 = or(_T_1918, _T_1917) @[package.scala 72:59]
      node _T_1920 = eq(io.rw.addr, UInt<10>("h03bf")) @[CSR.scala 860:65]
      node _T_1921 = and(_T_1919, _T_1920) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1922 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1923 = eq(io.rw.addr, UInt<10>("h03bf")) @[CSR.scala 862:44]
      node _T_1924 = and(_T_1922, _T_1923) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1925 = andr(UInt<2>("h01")) @[CSR.scala 859:21]
    node _T_1926 = eq(_T_1925, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1926 : @[CSR.scala 859:27]
      node _T_1927 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1928 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1929 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1930 = or(_T_1927, _T_1928) @[package.scala 72:59]
      node _T_1931 = or(_T_1930, _T_1929) @[package.scala 72:59]
      node _T_1932 = eq(io.rw.addr, UInt<11>("h07c1")) @[CSR.scala 860:65]
      node _T_1933 = and(_T_1931, _T_1932) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1934 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1935 = eq(io.rw.addr, UInt<11>("h07c1")) @[CSR.scala 862:44]
      node _T_1936 = and(_T_1934, _T_1935) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1937 = andr(UInt<2>("h03")) @[CSR.scala 859:21]
    node _T_1938 = eq(_T_1937, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1938 : @[CSR.scala 859:27]
      node _T_1939 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1940 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1941 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1942 = or(_T_1939, _T_1940) @[package.scala 72:59]
      node _T_1943 = or(_T_1942, _T_1941) @[package.scala 72:59]
      node _T_1944 = eq(io.rw.addr, UInt<12>("h0f12")) @[CSR.scala 860:65]
      node _T_1945 = and(_T_1943, _T_1944) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1946 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1947 = eq(io.rw.addr, UInt<12>("h0f12")) @[CSR.scala 862:44]
      node _T_1948 = and(_T_1946, _T_1947) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1949 = andr(UInt<2>("h03")) @[CSR.scala 859:21]
    node _T_1950 = eq(_T_1949, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1950 : @[CSR.scala 859:27]
      node _T_1951 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1952 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1953 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1954 = or(_T_1951, _T_1952) @[package.scala 72:59]
      node _T_1955 = or(_T_1954, _T_1953) @[package.scala 72:59]
      node _T_1956 = eq(io.rw.addr, UInt<12>("h0f11")) @[CSR.scala 860:65]
      node _T_1957 = and(_T_1955, _T_1956) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1958 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1959 = eq(io.rw.addr, UInt<12>("h0f11")) @[CSR.scala 862:44]
      node _T_1960 = and(_T_1958, _T_1959) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    node _T_1961 = andr(UInt<2>("h03")) @[CSR.scala 859:21]
    node _T_1962 = eq(_T_1961, UInt<1>("h00")) @[CSR.scala 859:11]
    when _T_1962 : @[CSR.scala 859:27]
      node _T_1963 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
      node _T_1964 = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
      node _T_1965 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
      node _T_1966 = or(_T_1963, _T_1964) @[package.scala 72:59]
      node _T_1967 = or(_T_1966, _T_1965) @[package.scala 72:59]
      node _T_1968 = eq(io.rw.addr, UInt<12>("h0f13")) @[CSR.scala 860:65]
      node _T_1969 = and(_T_1967, _T_1968) @[CSR.scala 860:52]
      skip @[CSR.scala 859:27]
    else : @[CSR.scala 861:18]
      node _T_1970 = eq(io.rw.cmd, UInt<3>("h02")) @[CSR.scala 862:22]
      node _T_1971 = eq(io.rw.addr, UInt<12>("h0f13")) @[CSR.scala 862:44]
      node _T_1972 = and(_T_1970, _T_1971) @[CSR.scala 862:31]
      skip @[CSR.scala 861:18]
    wire set_vs_dirty : UInt<1>
    set_vs_dirty is invalid
    set_vs_dirty <= UInt<1>("h00")
    wire set_fs_dirty : UInt<1>
    set_fs_dirty is invalid
    set_fs_dirty <= UInt<1>("h00")
    io.fcsr_rm <= reg_frm @[CSR.scala 882:14]
    when io.fcsr_flags.valid : @[CSR.scala 883:30]
      node _lo_T = or(reg_fflags, io.fcsr_flags.bits) @[CSR.scala 884:30]
      reg_fflags <= _lo_T @[CSR.scala 884:16]
      set_fs_dirty <= UInt<1>("h01") @[CSR.scala 885:18]
      skip @[CSR.scala 883:30]
    node _csr_wen_T = eq(io.rw.cmd, UInt<3>("h06")) @[package.scala 15:47]
    node _csr_wen_T_1 = eq(io.rw.cmd, UInt<3>("h07")) @[package.scala 15:47]
    node _csr_wen_T_2 = eq(io.rw.cmd, UInt<3>("h05")) @[package.scala 15:47]
    node _csr_wen_T_3 = or(_csr_wen_T, _csr_wen_T_1) @[package.scala 72:59]
    node csr_wen = or(_csr_wen_T_3, _csr_wen_T_2) @[package.scala 72:59]
    node _io_csrw_counter_T = and(UInt<1>("h01"), csr_wen) @[CSR.scala 896:55]
    node _io_csrw_counter_T_1 = geq(io.rw.addr, UInt<12>("h0b00")) @[package.scala 204:47]
    node _io_csrw_counter_T_2 = lt(io.rw.addr, UInt<12>("h0b20")) @[package.scala 204:60]
    node _io_csrw_counter_T_3 = and(_io_csrw_counter_T_1, _io_csrw_counter_T_2) @[package.scala 204:55]
    node _io_csrw_counter_T_4 = geq(io.rw.addr, UInt<12>("h0b80")) @[package.scala 204:47]
    node _io_csrw_counter_T_5 = lt(io.rw.addr, UInt<12>("h0ba0")) @[package.scala 204:60]
    node _io_csrw_counter_T_6 = and(_io_csrw_counter_T_4, _io_csrw_counter_T_5) @[package.scala 204:55]
    node _io_csrw_counter_T_7 = or(_io_csrw_counter_T_3, _io_csrw_counter_T_6) @[CSR.scala 896:126]
    node _io_csrw_counter_T_8 = and(_io_csrw_counter_T, _io_csrw_counter_T_7) @[CSR.scala 896:66]
    node _io_csrw_counter_T_9 = bits(io.rw.addr, 4, 0) @[CSR.scala 896:208]
    node _io_csrw_counter_T_10 = dshl(UInt<1>("h01"), _io_csrw_counter_T_9) @[OneHot.scala 58:35]
    node _io_csrw_counter_T_11 = mux(_io_csrw_counter_T_8, _io_csrw_counter_T_10, UInt<1>("h00")) @[CSR.scala 896:25]
    io.csrw_counter <= _io_csrw_counter_T_11 @[CSR.scala 896:19]
    when csr_wen : @[CSR.scala 897:18]
      when _T_60 : @[CSR.scala 898:39]
        wire new_mstatus : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>} @[CSR.scala 899:47]
        new_mstatus is invalid @[CSR.scala 899:47]
        wire _new_mstatus_WIRE : UInt<103>
        _new_mstatus_WIRE is invalid
        _new_mstatus_WIRE <= wdata
        node _new_mstatus_T = bits(_new_mstatus_WIRE, 0, 0) @[CSR.scala 899:47]
        new_mstatus.uie <= _new_mstatus_T @[CSR.scala 899:47]
        node _new_mstatus_T_1 = bits(_new_mstatus_WIRE, 1, 1) @[CSR.scala 899:47]
        new_mstatus.sie <= _new_mstatus_T_1 @[CSR.scala 899:47]
        node _new_mstatus_T_2 = bits(_new_mstatus_WIRE, 2, 2) @[CSR.scala 899:47]
        new_mstatus.hie <= _new_mstatus_T_2 @[CSR.scala 899:47]
        node _new_mstatus_T_3 = bits(_new_mstatus_WIRE, 3, 3) @[CSR.scala 899:47]
        new_mstatus.mie <= _new_mstatus_T_3 @[CSR.scala 899:47]
        node _new_mstatus_T_4 = bits(_new_mstatus_WIRE, 4, 4) @[CSR.scala 899:47]
        new_mstatus.upie <= _new_mstatus_T_4 @[CSR.scala 899:47]
        node _new_mstatus_T_5 = bits(_new_mstatus_WIRE, 5, 5) @[CSR.scala 899:47]
        new_mstatus.spie <= _new_mstatus_T_5 @[CSR.scala 899:47]
        node _new_mstatus_T_6 = bits(_new_mstatus_WIRE, 6, 6) @[CSR.scala 899:47]
        new_mstatus.hpie <= _new_mstatus_T_6 @[CSR.scala 899:47]
        node _new_mstatus_T_7 = bits(_new_mstatus_WIRE, 7, 7) @[CSR.scala 899:47]
        new_mstatus.mpie <= _new_mstatus_T_7 @[CSR.scala 899:47]
        node _new_mstatus_T_8 = bits(_new_mstatus_WIRE, 8, 8) @[CSR.scala 899:47]
        new_mstatus.spp <= _new_mstatus_T_8 @[CSR.scala 899:47]
        node _new_mstatus_T_9 = bits(_new_mstatus_WIRE, 10, 9) @[CSR.scala 899:47]
        new_mstatus.vs <= _new_mstatus_T_9 @[CSR.scala 899:47]
        node _new_mstatus_T_10 = bits(_new_mstatus_WIRE, 12, 11) @[CSR.scala 899:47]
        new_mstatus.mpp <= _new_mstatus_T_10 @[CSR.scala 899:47]
        node _new_mstatus_T_11 = bits(_new_mstatus_WIRE, 14, 13) @[CSR.scala 899:47]
        new_mstatus.fs <= _new_mstatus_T_11 @[CSR.scala 899:47]
        node _new_mstatus_T_12 = bits(_new_mstatus_WIRE, 16, 15) @[CSR.scala 899:47]
        new_mstatus.xs <= _new_mstatus_T_12 @[CSR.scala 899:47]
        node _new_mstatus_T_13 = bits(_new_mstatus_WIRE, 17, 17) @[CSR.scala 899:47]
        new_mstatus.mprv <= _new_mstatus_T_13 @[CSR.scala 899:47]
        node _new_mstatus_T_14 = bits(_new_mstatus_WIRE, 18, 18) @[CSR.scala 899:47]
        new_mstatus.sum <= _new_mstatus_T_14 @[CSR.scala 899:47]
        node _new_mstatus_T_15 = bits(_new_mstatus_WIRE, 19, 19) @[CSR.scala 899:47]
        new_mstatus.mxr <= _new_mstatus_T_15 @[CSR.scala 899:47]
        node _new_mstatus_T_16 = bits(_new_mstatus_WIRE, 20, 20) @[CSR.scala 899:47]
        new_mstatus.tvm <= _new_mstatus_T_16 @[CSR.scala 899:47]
        node _new_mstatus_T_17 = bits(_new_mstatus_WIRE, 21, 21) @[CSR.scala 899:47]
        new_mstatus.tw <= _new_mstatus_T_17 @[CSR.scala 899:47]
        node _new_mstatus_T_18 = bits(_new_mstatus_WIRE, 22, 22) @[CSR.scala 899:47]
        new_mstatus.tsr <= _new_mstatus_T_18 @[CSR.scala 899:47]
        node _new_mstatus_T_19 = bits(_new_mstatus_WIRE, 30, 23) @[CSR.scala 899:47]
        new_mstatus.zero1 <= _new_mstatus_T_19 @[CSR.scala 899:47]
        node _new_mstatus_T_20 = bits(_new_mstatus_WIRE, 31, 31) @[CSR.scala 899:47]
        new_mstatus.sd_rv32 <= _new_mstatus_T_20 @[CSR.scala 899:47]
        node _new_mstatus_T_21 = bits(_new_mstatus_WIRE, 33, 32) @[CSR.scala 899:47]
        new_mstatus.uxl <= _new_mstatus_T_21 @[CSR.scala 899:47]
        node _new_mstatus_T_22 = bits(_new_mstatus_WIRE, 35, 34) @[CSR.scala 899:47]
        new_mstatus.sxl <= _new_mstatus_T_22 @[CSR.scala 899:47]
        node _new_mstatus_T_23 = bits(_new_mstatus_WIRE, 62, 36) @[CSR.scala 899:47]
        new_mstatus.zero2 <= _new_mstatus_T_23 @[CSR.scala 899:47]
        node _new_mstatus_T_24 = bits(_new_mstatus_WIRE, 63, 63) @[CSR.scala 899:47]
        new_mstatus.sd <= _new_mstatus_T_24 @[CSR.scala 899:47]
        node _new_mstatus_T_25 = bits(_new_mstatus_WIRE, 65, 64) @[CSR.scala 899:47]
        new_mstatus.prv <= _new_mstatus_T_25 @[CSR.scala 899:47]
        node _new_mstatus_T_26 = bits(_new_mstatus_WIRE, 67, 66) @[CSR.scala 899:47]
        new_mstatus.dprv <= _new_mstatus_T_26 @[CSR.scala 899:47]
        node _new_mstatus_T_27 = bits(_new_mstatus_WIRE, 99, 68) @[CSR.scala 899:47]
        new_mstatus.isa <= _new_mstatus_T_27 @[CSR.scala 899:47]
        node _new_mstatus_T_28 = bits(_new_mstatus_WIRE, 100, 100) @[CSR.scala 899:47]
        new_mstatus.wfi <= _new_mstatus_T_28 @[CSR.scala 899:47]
        node _new_mstatus_T_29 = bits(_new_mstatus_WIRE, 101, 101) @[CSR.scala 899:47]
        new_mstatus.cease <= _new_mstatus_T_29 @[CSR.scala 899:47]
        node _new_mstatus_T_30 = bits(_new_mstatus_WIRE, 102, 102) @[CSR.scala 899:47]
        new_mstatus.debug <= _new_mstatus_T_30 @[CSR.scala 899:47]
        reg_mstatus.mie <= new_mstatus.mie @[CSR.scala 900:23]
        reg_mstatus.mpie <= new_mstatus.mpie @[CSR.scala 901:24]
        reg_mstatus.vs <= UInt<1>("h00") @[CSR.scala 921:22]
        skip @[CSR.scala 898:39]
      when _T_59 : @[CSR.scala 923:36]
        node f = bits(wdata, 5, 5) @[CSR.scala 925:20]
        node _T_1973 = bits(io.pc, 1, 1) @[CSR.scala 927:39]
        node _T_1974 = eq(_T_1973, UInt<1>("h00")) @[CSR.scala 927:33]
        node _T_1975 = or(UInt<1>("h00"), _T_1974) @[CSR.scala 927:30]
        node _T_1976 = bits(wdata, 2, 2) @[CSR.scala 927:51]
        node _T_1977 = or(_T_1975, _T_1976) @[CSR.scala 927:43]
        when _T_1977 : @[CSR.scala 927:64]
          node _reg_misa_T = not(wdata) @[CSR.scala 929:25]
          node _reg_misa_T_1 = eq(f, UInt<1>("h00")) @[CSR.scala 929:35]
          node _reg_misa_T_2 = shl(_reg_misa_T_1, 3) @[CSR.scala 929:38]
          node _reg_misa_T_3 = or(_reg_misa_T, _reg_misa_T_2) @[CSR.scala 929:32]
          node _reg_misa_T_4 = not(_reg_misa_T_3) @[CSR.scala 929:23]
          node _reg_misa_T_5 = and(_reg_misa_T_4, UInt<32>("h01005")) @[CSR.scala 929:55]
          node _reg_misa_T_6 = not(UInt<32>("h01005")) @[CSR.scala 929:75]
          node _reg_misa_T_7 = and(reg_misa, _reg_misa_T_6) @[CSR.scala 929:73]
          node _reg_misa_T_8 = or(_reg_misa_T_5, _reg_misa_T_7) @[CSR.scala 929:62]
          reg_misa <= _reg_misa_T_8 @[CSR.scala 929:20]
          skip @[CSR.scala 927:64]
        skip @[CSR.scala 923:36]
      when _T_62 : @[CSR.scala 932:35]
        node new_mip_lo_lo_lo = cat(reg_mip.ssip, reg_mip.usip) @[CSR.scala 937:59]
        node new_mip_lo_lo_hi = cat(reg_mip.msip, reg_mip.hsip) @[CSR.scala 937:59]
        node new_mip_lo_lo = cat(new_mip_lo_lo_hi, new_mip_lo_lo_lo) @[CSR.scala 937:59]
        node new_mip_lo_hi_lo = cat(reg_mip.stip, reg_mip.utip) @[CSR.scala 937:59]
        node new_mip_lo_hi_hi = cat(reg_mip.mtip, reg_mip.htip) @[CSR.scala 937:59]
        node new_mip_lo_hi = cat(new_mip_lo_hi_hi, new_mip_lo_hi_lo) @[CSR.scala 937:59]
        node new_mip_lo = cat(new_mip_lo_hi, new_mip_lo_lo) @[CSR.scala 937:59]
        node new_mip_hi_lo_lo = cat(reg_mip.seip, reg_mip.ueip) @[CSR.scala 937:59]
        node new_mip_hi_lo_hi = cat(reg_mip.meip, reg_mip.heip) @[CSR.scala 937:59]
        node new_mip_hi_lo = cat(new_mip_hi_lo_hi, new_mip_hi_lo_lo) @[CSR.scala 937:59]
        node new_mip_hi_hi_lo = cat(reg_mip.zero1, reg_mip.rocc) @[CSR.scala 937:59]
        node new_mip_hi_hi_hi = cat(reg_mip.zero2, reg_mip.debug) @[CSR.scala 937:59]
        node new_mip_hi_hi = cat(new_mip_hi_hi_hi, new_mip_hi_hi_lo) @[CSR.scala 937:59]
        node new_mip_hi = cat(new_mip_hi_hi, new_mip_hi_lo) @[CSR.scala 937:59]
        node _new_mip_T = cat(new_mip_hi, new_mip_lo) @[CSR.scala 937:59]
        node _new_mip_T_1 = bits(io.rw.cmd, 1, 1) @[CSR.scala 1183:13]
        node _new_mip_T_2 = mux(_new_mip_T_1, _new_mip_T, UInt<1>("h00")) @[CSR.scala 1183:9]
        node _new_mip_T_3 = or(_new_mip_T_2, io.rw.wdata) @[CSR.scala 1183:34]
        node _new_mip_T_4 = bits(io.rw.cmd, 1, 0) @[CSR.scala 1183:53]
        node _new_mip_T_5 = andr(_new_mip_T_4) @[CSR.scala 1183:59]
        node _new_mip_T_6 = mux(_new_mip_T_5, io.rw.wdata, UInt<1>("h00")) @[CSR.scala 1183:49]
        node _new_mip_T_7 = not(_new_mip_T_6) @[CSR.scala 1183:45]
        node _new_mip_T_8 = and(_new_mip_T_3, _new_mip_T_7) @[CSR.scala 1183:43]
        wire new_mip : {lip : UInt<1>[0], zero2 : UInt<1>, debug : UInt<1>, zero1 : UInt<1>, rocc : UInt<1>, meip : UInt<1>, heip : UInt<1>, seip : UInt<1>, ueip : UInt<1>, mtip : UInt<1>, htip : UInt<1>, stip : UInt<1>, utip : UInt<1>, msip : UInt<1>, hsip : UInt<1>, ssip : UInt<1>, usip : UInt<1>} @[CSR.scala 937:88]
        new_mip is invalid @[CSR.scala 937:88]
        wire _new_mip_WIRE : UInt<16>
        _new_mip_WIRE is invalid
        _new_mip_WIRE <= _new_mip_T_8
        node _new_mip_T_9 = bits(_new_mip_WIRE, 0, 0) @[CSR.scala 937:88]
        new_mip.usip <= _new_mip_T_9 @[CSR.scala 937:88]
        node _new_mip_T_10 = bits(_new_mip_WIRE, 1, 1) @[CSR.scala 937:88]
        new_mip.ssip <= _new_mip_T_10 @[CSR.scala 937:88]
        node _new_mip_T_11 = bits(_new_mip_WIRE, 2, 2) @[CSR.scala 937:88]
        new_mip.hsip <= _new_mip_T_11 @[CSR.scala 937:88]
        node _new_mip_T_12 = bits(_new_mip_WIRE, 3, 3) @[CSR.scala 937:88]
        new_mip.msip <= _new_mip_T_12 @[CSR.scala 937:88]
        node _new_mip_T_13 = bits(_new_mip_WIRE, 4, 4) @[CSR.scala 937:88]
        new_mip.utip <= _new_mip_T_13 @[CSR.scala 937:88]
        node _new_mip_T_14 = bits(_new_mip_WIRE, 5, 5) @[CSR.scala 937:88]
        new_mip.stip <= _new_mip_T_14 @[CSR.scala 937:88]
        node _new_mip_T_15 = bits(_new_mip_WIRE, 6, 6) @[CSR.scala 937:88]
        new_mip.htip <= _new_mip_T_15 @[CSR.scala 937:88]
        node _new_mip_T_16 = bits(_new_mip_WIRE, 7, 7) @[CSR.scala 937:88]
        new_mip.mtip <= _new_mip_T_16 @[CSR.scala 937:88]
        node _new_mip_T_17 = bits(_new_mip_WIRE, 8, 8) @[CSR.scala 937:88]
        new_mip.ueip <= _new_mip_T_17 @[CSR.scala 937:88]
        node _new_mip_T_18 = bits(_new_mip_WIRE, 9, 9) @[CSR.scala 937:88]
        new_mip.seip <= _new_mip_T_18 @[CSR.scala 937:88]
        node _new_mip_T_19 = bits(_new_mip_WIRE, 10, 10) @[CSR.scala 937:88]
        new_mip.heip <= _new_mip_T_19 @[CSR.scala 937:88]
        node _new_mip_T_20 = bits(_new_mip_WIRE, 11, 11) @[CSR.scala 937:88]
        new_mip.meip <= _new_mip_T_20 @[CSR.scala 937:88]
        node _new_mip_T_21 = bits(_new_mip_WIRE, 12, 12) @[CSR.scala 937:88]
        new_mip.rocc <= _new_mip_T_21 @[CSR.scala 937:88]
        node _new_mip_T_22 = bits(_new_mip_WIRE, 13, 13) @[CSR.scala 937:88]
        new_mip.zero1 <= _new_mip_T_22 @[CSR.scala 937:88]
        node _new_mip_T_23 = bits(_new_mip_WIRE, 14, 14) @[CSR.scala 937:88]
        new_mip.debug <= _new_mip_T_23 @[CSR.scala 937:88]
        node _new_mip_T_24 = bits(_new_mip_WIRE, 15, 15) @[CSR.scala 937:88]
        new_mip.zero2 <= _new_mip_T_24 @[CSR.scala 937:88]
        skip @[CSR.scala 932:35]
      when _T_63 : @[CSR.scala 944:40]
        node _reg_mie_T = and(wdata, supported_interrupts) @[CSR.scala 944:59]
        reg_mie <= _reg_mie_T @[CSR.scala 944:50]
        skip @[CSR.scala 944:40]
      when _T_65 : @[CSR.scala 945:40]
        node _reg_mepc_T = not(wdata) @[CSR.scala 1204:28]
        node _reg_mepc_T_1 = or(_reg_mepc_T, UInt<1>("h01")) @[CSR.scala 1204:31]
        node _reg_mepc_T_2 = not(_reg_mepc_T_1) @[CSR.scala 1204:26]
        reg_mepc <= _reg_mepc_T_2 @[CSR.scala 945:51]
        skip @[CSR.scala 945:40]
      when _T_64 : @[CSR.scala 946:40]
        reg_mscratch <= wdata @[CSR.scala 946:55]
        skip @[CSR.scala 946:40]
      when _T_61 : @[CSR.scala 948:40]
        reg_mtvec <= wdata @[CSR.scala 948:52]
        skip @[CSR.scala 948:40]
      when _T_67 : @[CSR.scala 949:40]
        node _reg_mcause_T = and(wdata, UInt<32>("h08000000f")) @[CSR.scala 949:62]
        reg_mcause <= _reg_mcause_T @[CSR.scala 949:53]
        skip @[CSR.scala 949:40]
      when _T_66 : @[CSR.scala 950:40]
        node _reg_mtval_T = bits(wdata, 31, 0) @[CSR.scala 950:60]
        reg_mtval <= _reg_mtval_T @[CSR.scala 950:52]
        skip @[CSR.scala 950:40]
      when _T_72 : @[CSR.scala 965:47]
        node _reg_mcountinhibit_T = not(UInt<32>("h02")) @[CSR.scala 965:78]
        node _reg_mcountinhibit_T_1 = and(wdata, _reg_mcountinhibit_T) @[CSR.scala 965:76]
        reg_mcountinhibit <= _reg_mcountinhibit_T_1 @[CSR.scala 965:67]
        skip @[CSR.scala 965:47]
      when _T_73 : @[CSR.scala 1198:31]
        node hi_25 = bits(value_1, 63, 32) @[CSR.scala 1198:47]
        node _T_1978 = cat(hi_25, wdata) @[Cat.scala 30:58]
        value_lo_1 <= _T_1978 @[Counters.scala 65:11]
        node _hi_T = shr(_T_1978, 6) @[Counters.scala 66:28]
        value_hi_1 <= _hi_T @[Counters.scala 66:23]
        skip @[CSR.scala 1198:31]
      when _T_162 : @[CSR.scala 1199:31]
        node hi_26 = bits(wdata, 31, 0) @[CSR.scala 1199:49]
        node lo_25 = bits(value_1, 31, 0) @[CSR.scala 1199:74]
        node _T_1979 = cat(hi_26, lo_25) @[Cat.scala 30:58]
        value_lo_1 <= _T_1979 @[Counters.scala 65:11]
        node _hi_T_1 = shr(_T_1979, 6) @[Counters.scala 66:28]
        value_hi_1 <= _hi_T_1 @[Counters.scala 66:23]
        skip @[CSR.scala 1199:31]
      when _T_74 : @[CSR.scala 1198:31]
        node hi_27 = bits(value, 63, 32) @[CSR.scala 1198:47]
        node _T_1980 = cat(hi_27, wdata) @[Cat.scala 30:58]
        value_lo <= _T_1980 @[Counters.scala 65:11]
        node _hi_T_2 = shr(_T_1980, 6) @[Counters.scala 66:28]
        value_hi <= _hi_T_2 @[Counters.scala 66:23]
        skip @[CSR.scala 1198:31]
      when _T_163 : @[CSR.scala 1199:31]
        node hi_28 = bits(wdata, 31, 0) @[CSR.scala 1199:49]
        node lo_26 = bits(value, 31, 0) @[CSR.scala 1199:74]
        node _T_1981 = cat(hi_28, lo_26) @[Cat.scala 30:58]
        value_lo <= _T_1981 @[Counters.scala 65:11]
        node _hi_T_3 = shr(_T_1981, 6) @[Counters.scala 66:28]
        value_hi <= _hi_T_3 @[Counters.scala 66:23]
        skip @[CSR.scala 1199:31]
      when _T_69 : @[CSR.scala 980:38]
        wire new_dcsr : {xdebugver : UInt<2>, zero4 : UInt<2>, zero3 : UInt<12>, ebreakm : UInt<1>, ebreakh : UInt<1>, ebreaks : UInt<1>, ebreaku : UInt<1>, zero2 : UInt<1>, stopcycle : UInt<1>, stoptime : UInt<1>, cause : UInt<3>, zero1 : UInt<3>, step : UInt<1>, prv : UInt<2>} @[CSR.scala 981:43]
        new_dcsr is invalid @[CSR.scala 981:43]
        wire _new_dcsr_WIRE : UInt<32>
        _new_dcsr_WIRE is invalid
        _new_dcsr_WIRE <= wdata
        node _new_dcsr_T = bits(_new_dcsr_WIRE, 1, 0) @[CSR.scala 981:43]
        new_dcsr.prv <= _new_dcsr_T @[CSR.scala 981:43]
        node _new_dcsr_T_1 = bits(_new_dcsr_WIRE, 2, 2) @[CSR.scala 981:43]
        new_dcsr.step <= _new_dcsr_T_1 @[CSR.scala 981:43]
        node _new_dcsr_T_2 = bits(_new_dcsr_WIRE, 5, 3) @[CSR.scala 981:43]
        new_dcsr.zero1 <= _new_dcsr_T_2 @[CSR.scala 981:43]
        node _new_dcsr_T_3 = bits(_new_dcsr_WIRE, 8, 6) @[CSR.scala 981:43]
        new_dcsr.cause <= _new_dcsr_T_3 @[CSR.scala 981:43]
        node _new_dcsr_T_4 = bits(_new_dcsr_WIRE, 9, 9) @[CSR.scala 981:43]
        new_dcsr.stoptime <= _new_dcsr_T_4 @[CSR.scala 981:43]
        node _new_dcsr_T_5 = bits(_new_dcsr_WIRE, 10, 10) @[CSR.scala 981:43]
        new_dcsr.stopcycle <= _new_dcsr_T_5 @[CSR.scala 981:43]
        node _new_dcsr_T_6 = bits(_new_dcsr_WIRE, 11, 11) @[CSR.scala 981:43]
        new_dcsr.zero2 <= _new_dcsr_T_6 @[CSR.scala 981:43]
        node _new_dcsr_T_7 = bits(_new_dcsr_WIRE, 12, 12) @[CSR.scala 981:43]
        new_dcsr.ebreaku <= _new_dcsr_T_7 @[CSR.scala 981:43]
        node _new_dcsr_T_8 = bits(_new_dcsr_WIRE, 13, 13) @[CSR.scala 981:43]
        new_dcsr.ebreaks <= _new_dcsr_T_8 @[CSR.scala 981:43]
        node _new_dcsr_T_9 = bits(_new_dcsr_WIRE, 14, 14) @[CSR.scala 981:43]
        new_dcsr.ebreakh <= _new_dcsr_T_9 @[CSR.scala 981:43]
        node _new_dcsr_T_10 = bits(_new_dcsr_WIRE, 15, 15) @[CSR.scala 981:43]
        new_dcsr.ebreakm <= _new_dcsr_T_10 @[CSR.scala 981:43]
        node _new_dcsr_T_11 = bits(_new_dcsr_WIRE, 27, 16) @[CSR.scala 981:43]
        new_dcsr.zero3 <= _new_dcsr_T_11 @[CSR.scala 981:43]
        node _new_dcsr_T_12 = bits(_new_dcsr_WIRE, 29, 28) @[CSR.scala 981:43]
        new_dcsr.zero4 <= _new_dcsr_T_12 @[CSR.scala 981:43]
        node _new_dcsr_T_13 = bits(_new_dcsr_WIRE, 31, 30) @[CSR.scala 981:43]
        new_dcsr.xdebugver <= _new_dcsr_T_13 @[CSR.scala 981:43]
        reg_dcsr.step <= new_dcsr.step @[CSR.scala 982:23]
        reg_dcsr.ebreakm <= new_dcsr.ebreakm @[CSR.scala 983:26]
        skip @[CSR.scala 980:38]
      when _T_70 : @[CSR.scala 988:42]
        node _reg_dpc_T = not(wdata) @[CSR.scala 1204:28]
        node _reg_dpc_T_1 = or(_reg_dpc_T, UInt<1>("h01")) @[CSR.scala 1204:31]
        node _reg_dpc_T_2 = not(_reg_dpc_T_1) @[CSR.scala 1204:26]
        reg_dpc <= _reg_dpc_T_2 @[CSR.scala 988:52]
        skip @[CSR.scala 988:42]
      when _T_71 : @[CSR.scala 989:42]
        reg_dscratch <= wdata @[CSR.scala 989:57]
        skip @[CSR.scala 989:42]
      when _T_55 : @[CSR.scala 1036:41]
        reg_tselect <= wdata @[CSR.scala 1036:55]
        skip @[CSR.scala 1036:41]
      node _T_1982 = eq(UInt<1>("h00"), reg_tselect) @[CSR.scala 1039:17]
      node _T_1983 = eq(reg_bp[0].control.dmode, UInt<1>("h00")) @[CSR.scala 1039:37]
      node _T_1984 = or(_T_1983, reg_debug) @[CSR.scala 1039:55]
      node _T_1985 = and(_T_1982, _T_1984) @[CSR.scala 1039:33]
      when _T_1985 : @[CSR.scala 1039:70]
        when _T_57 : @[CSR.scala 1040:44]
          reg_bp[0].address <= wdata @[CSR.scala 1040:57]
          skip @[CSR.scala 1040:44]
        when _T_58 : @[CSR.scala 1041:44]
          skip @[CSR.scala 1041:44]
        when _T_56 : @[CSR.scala 1051:44]
          wire _reg_bp_0_control_WIRE : {ttype : UInt<4>, dmode : UInt<1>, maskmax : UInt<6>, reserved : UInt<8>, action : UInt<1>, chain : UInt<1>, zero : UInt<2>, tmatch : UInt<2>, m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE is invalid @[CSR.scala 1052:41]
          wire _reg_bp_0_control_WIRE_1 : UInt<32>
          _reg_bp_0_control_WIRE_1 is invalid
          _reg_bp_0_control_WIRE_1 <= wdata
          node _reg_bp_0_control_T = bits(_reg_bp_0_control_WIRE_1, 0, 0) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.r <= _reg_bp_0_control_T @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_1 = bits(_reg_bp_0_control_WIRE_1, 1, 1) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.w <= _reg_bp_0_control_T_1 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_2 = bits(_reg_bp_0_control_WIRE_1, 2, 2) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.x <= _reg_bp_0_control_T_2 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_3 = bits(_reg_bp_0_control_WIRE_1, 3, 3) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.u <= _reg_bp_0_control_T_3 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_4 = bits(_reg_bp_0_control_WIRE_1, 4, 4) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.s <= _reg_bp_0_control_T_4 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_5 = bits(_reg_bp_0_control_WIRE_1, 5, 5) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.h <= _reg_bp_0_control_T_5 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_6 = bits(_reg_bp_0_control_WIRE_1, 6, 6) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.m <= _reg_bp_0_control_T_6 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_7 = bits(_reg_bp_0_control_WIRE_1, 8, 7) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.tmatch <= _reg_bp_0_control_T_7 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_8 = bits(_reg_bp_0_control_WIRE_1, 10, 9) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.zero <= _reg_bp_0_control_T_8 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_9 = bits(_reg_bp_0_control_WIRE_1, 11, 11) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.chain <= _reg_bp_0_control_T_9 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_10 = bits(_reg_bp_0_control_WIRE_1, 12, 12) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.action <= _reg_bp_0_control_T_10 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_11 = bits(_reg_bp_0_control_WIRE_1, 20, 13) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.reserved <= _reg_bp_0_control_T_11 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_12 = bits(_reg_bp_0_control_WIRE_1, 26, 21) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.maskmax <= _reg_bp_0_control_T_12 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_13 = bits(_reg_bp_0_control_WIRE_1, 27, 27) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.dmode <= _reg_bp_0_control_T_13 @[CSR.scala 1052:41]
          node _reg_bp_0_control_T_14 = bits(_reg_bp_0_control_WIRE_1, 31, 28) @[CSR.scala 1052:41]
          _reg_bp_0_control_WIRE.ttype <= _reg_bp_0_control_T_14 @[CSR.scala 1052:41]
          reg_bp[0].control <- _reg_bp_0_control_WIRE @[CSR.scala 1052:24]
          node newBPC_lo_lo_hi = cat(reg_bp[0].control.x, reg_bp[0].control.w) @[CSR.scala 1058:67]
          node newBPC_lo_lo = cat(newBPC_lo_lo_hi, reg_bp[0].control.r) @[CSR.scala 1058:67]
          node newBPC_lo_hi_lo = cat(reg_bp[0].control.s, reg_bp[0].control.u) @[CSR.scala 1058:67]
          node newBPC_lo_hi_hi = cat(reg_bp[0].control.m, reg_bp[0].control.h) @[CSR.scala 1058:67]
          node newBPC_lo_hi = cat(newBPC_lo_hi_hi, newBPC_lo_hi_lo) @[CSR.scala 1058:67]
          node newBPC_lo = cat(newBPC_lo_hi, newBPC_lo_lo) @[CSR.scala 1058:67]
          node newBPC_hi_lo_lo = cat(reg_bp[0].control.zero, reg_bp[0].control.tmatch) @[CSR.scala 1058:67]
          node newBPC_hi_lo_hi = cat(reg_bp[0].control.action, reg_bp[0].control.chain) @[CSR.scala 1058:67]
          node newBPC_hi_lo = cat(newBPC_hi_lo_hi, newBPC_hi_lo_lo) @[CSR.scala 1058:67]
          node newBPC_hi_hi_lo = cat(reg_bp[0].control.maskmax, reg_bp[0].control.reserved) @[CSR.scala 1058:67]
          node newBPC_hi_hi_hi = cat(reg_bp[0].control.ttype, reg_bp[0].control.dmode) @[CSR.scala 1058:67]
          node newBPC_hi_hi = cat(newBPC_hi_hi_hi, newBPC_hi_hi_lo) @[CSR.scala 1058:67]
          node newBPC_hi = cat(newBPC_hi_hi, newBPC_hi_lo) @[CSR.scala 1058:67]
          node _newBPC_T = cat(newBPC_hi, newBPC_lo) @[CSR.scala 1058:67]
          node _newBPC_T_1 = bits(io.rw.cmd, 1, 1) @[CSR.scala 1183:13]
          node _newBPC_T_2 = mux(_newBPC_T_1, _newBPC_T, UInt<1>("h00")) @[CSR.scala 1183:9]
          node _newBPC_T_3 = or(_newBPC_T_2, io.rw.wdata) @[CSR.scala 1183:34]
          node _newBPC_T_4 = bits(io.rw.cmd, 1, 0) @[CSR.scala 1183:53]
          node _newBPC_T_5 = andr(_newBPC_T_4) @[CSR.scala 1183:59]
          node _newBPC_T_6 = mux(_newBPC_T_5, io.rw.wdata, UInt<1>("h00")) @[CSR.scala 1183:49]
          node _newBPC_T_7 = not(_newBPC_T_6) @[CSR.scala 1183:45]
          node _newBPC_T_8 = and(_newBPC_T_3, _newBPC_T_7) @[CSR.scala 1183:43]
          wire newBPC : {ttype : UInt<4>, dmode : UInt<1>, maskmax : UInt<6>, reserved : UInt<8>, action : UInt<1>, chain : UInt<1>, zero : UInt<2>, tmatch : UInt<2>, m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1058:96]
          newBPC is invalid @[CSR.scala 1058:96]
          wire _newBPC_WIRE : UInt<32>
          _newBPC_WIRE is invalid
          _newBPC_WIRE <= _newBPC_T_8
          node _newBPC_T_9 = bits(_newBPC_WIRE, 0, 0) @[CSR.scala 1058:96]
          newBPC.r <= _newBPC_T_9 @[CSR.scala 1058:96]
          node _newBPC_T_10 = bits(_newBPC_WIRE, 1, 1) @[CSR.scala 1058:96]
          newBPC.w <= _newBPC_T_10 @[CSR.scala 1058:96]
          node _newBPC_T_11 = bits(_newBPC_WIRE, 2, 2) @[CSR.scala 1058:96]
          newBPC.x <= _newBPC_T_11 @[CSR.scala 1058:96]
          node _newBPC_T_12 = bits(_newBPC_WIRE, 3, 3) @[CSR.scala 1058:96]
          newBPC.u <= _newBPC_T_12 @[CSR.scala 1058:96]
          node _newBPC_T_13 = bits(_newBPC_WIRE, 4, 4) @[CSR.scala 1058:96]
          newBPC.s <= _newBPC_T_13 @[CSR.scala 1058:96]
          node _newBPC_T_14 = bits(_newBPC_WIRE, 5, 5) @[CSR.scala 1058:96]
          newBPC.h <= _newBPC_T_14 @[CSR.scala 1058:96]
          node _newBPC_T_15 = bits(_newBPC_WIRE, 6, 6) @[CSR.scala 1058:96]
          newBPC.m <= _newBPC_T_15 @[CSR.scala 1058:96]
          node _newBPC_T_16 = bits(_newBPC_WIRE, 8, 7) @[CSR.scala 1058:96]
          newBPC.tmatch <= _newBPC_T_16 @[CSR.scala 1058:96]
          node _newBPC_T_17 = bits(_newBPC_WIRE, 10, 9) @[CSR.scala 1058:96]
          newBPC.zero <= _newBPC_T_17 @[CSR.scala 1058:96]
          node _newBPC_T_18 = bits(_newBPC_WIRE, 11, 11) @[CSR.scala 1058:96]
          newBPC.chain <= _newBPC_T_18 @[CSR.scala 1058:96]
          node _newBPC_T_19 = bits(_newBPC_WIRE, 12, 12) @[CSR.scala 1058:96]
          newBPC.action <= _newBPC_T_19 @[CSR.scala 1058:96]
          node _newBPC_T_20 = bits(_newBPC_WIRE, 20, 13) @[CSR.scala 1058:96]
          newBPC.reserved <= _newBPC_T_20 @[CSR.scala 1058:96]
          node _newBPC_T_21 = bits(_newBPC_WIRE, 26, 21) @[CSR.scala 1058:96]
          newBPC.maskmax <= _newBPC_T_21 @[CSR.scala 1058:96]
          node _newBPC_T_22 = bits(_newBPC_WIRE, 27, 27) @[CSR.scala 1058:96]
          newBPC.dmode <= _newBPC_T_22 @[CSR.scala 1058:96]
          node _newBPC_T_23 = bits(_newBPC_WIRE, 31, 28) @[CSR.scala 1058:96]
          newBPC.ttype <= _newBPC_T_23 @[CSR.scala 1058:96]
          node _dMode_T = and(newBPC.dmode, reg_debug) @[CSR.scala 1059:38]
          node _dMode_T_1 = eq(UInt<1>("h00"), UInt<1>("h00")) @[CSR.scala 1059:68]
          node _dMode_T_2 = or(UInt<1>("h00"), _dMode_T_1) @[CSR.scala 1059:65]
          node dMode = and(_dMode_T, _dMode_T_2) @[CSR.scala 1059:51]
          reg_bp[0].control.dmode <= dMode @[CSR.scala 1060:30]
          node _T_1986 = gt(newBPC.action, UInt<1>("h01")) @[CSR.scala 1061:43]
          node _T_1987 = or(dMode, _T_1986) @[CSR.scala 1061:25]
          when _T_1987 : @[CSR.scala 1061:51]
            reg_bp[0].control.action <= newBPC.action @[CSR.scala 1061:71]
            skip @[CSR.scala 1061:51]
          else : @[CSR.scala 1061:100]
            reg_bp[0].control.action <= UInt<1>("h00") @[CSR.scala 1061:120]
            skip @[CSR.scala 1061:100]
          node _reg_bp_0_control_chain_T = or(UInt<1>("h00"), UInt<1>("h01")) @[CSR.scala 1062:61]
          node _reg_bp_0_control_chain_T_1 = eq(_reg_bp_0_control_chain_T, UInt<1>("h00")) @[CSR.scala 1062:49]
          node _reg_bp_0_control_chain_T_2 = and(newBPC.chain, _reg_bp_0_control_chain_T_1) @[CSR.scala 1062:46]
          node _reg_bp_0_control_chain_T_3 = eq(UInt<1>("h01"), UInt<1>("h00")) @[CSR.scala 1062:88]
          node _reg_bp_0_control_chain_T_4 = or(dMode, _reg_bp_0_control_chain_T_3) @[CSR.scala 1062:85]
          node _reg_bp_0_control_chain_T_5 = and(_reg_bp_0_control_chain_T_2, _reg_bp_0_control_chain_T_4) @[CSR.scala 1062:75]
          reg_bp[0].control.chain <= _reg_bp_0_control_chain_T_5 @[CSR.scala 1062:30]
          skip @[CSR.scala 1051:44]
        skip @[CSR.scala 1039:70]
      node _T_1988 = eq(UInt<1>("h01"), reg_tselect) @[CSR.scala 1039:17]
      node _T_1989 = eq(reg_bp[1].control.dmode, UInt<1>("h00")) @[CSR.scala 1039:37]
      node _T_1990 = or(_T_1989, reg_debug) @[CSR.scala 1039:55]
      node _T_1991 = and(_T_1988, _T_1990) @[CSR.scala 1039:33]
      when _T_1991 : @[CSR.scala 1039:70]
        when _T_57 : @[CSR.scala 1040:44]
          reg_bp[1].address <= wdata @[CSR.scala 1040:57]
          skip @[CSR.scala 1040:44]
        when _T_58 : @[CSR.scala 1041:44]
          skip @[CSR.scala 1041:44]
        when _T_56 : @[CSR.scala 1051:44]
          wire _reg_bp_1_control_WIRE : {ttype : UInt<4>, dmode : UInt<1>, maskmax : UInt<6>, reserved : UInt<8>, action : UInt<1>, chain : UInt<1>, zero : UInt<2>, tmatch : UInt<2>, m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE is invalid @[CSR.scala 1052:41]
          wire _reg_bp_1_control_WIRE_1 : UInt<32>
          _reg_bp_1_control_WIRE_1 is invalid
          _reg_bp_1_control_WIRE_1 <= wdata
          node _reg_bp_1_control_T = bits(_reg_bp_1_control_WIRE_1, 0, 0) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.r <= _reg_bp_1_control_T @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_1 = bits(_reg_bp_1_control_WIRE_1, 1, 1) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.w <= _reg_bp_1_control_T_1 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_2 = bits(_reg_bp_1_control_WIRE_1, 2, 2) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.x <= _reg_bp_1_control_T_2 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_3 = bits(_reg_bp_1_control_WIRE_1, 3, 3) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.u <= _reg_bp_1_control_T_3 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_4 = bits(_reg_bp_1_control_WIRE_1, 4, 4) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.s <= _reg_bp_1_control_T_4 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_5 = bits(_reg_bp_1_control_WIRE_1, 5, 5) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.h <= _reg_bp_1_control_T_5 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_6 = bits(_reg_bp_1_control_WIRE_1, 6, 6) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.m <= _reg_bp_1_control_T_6 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_7 = bits(_reg_bp_1_control_WIRE_1, 8, 7) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.tmatch <= _reg_bp_1_control_T_7 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_8 = bits(_reg_bp_1_control_WIRE_1, 10, 9) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.zero <= _reg_bp_1_control_T_8 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_9 = bits(_reg_bp_1_control_WIRE_1, 11, 11) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.chain <= _reg_bp_1_control_T_9 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_10 = bits(_reg_bp_1_control_WIRE_1, 12, 12) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.action <= _reg_bp_1_control_T_10 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_11 = bits(_reg_bp_1_control_WIRE_1, 20, 13) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.reserved <= _reg_bp_1_control_T_11 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_12 = bits(_reg_bp_1_control_WIRE_1, 26, 21) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.maskmax <= _reg_bp_1_control_T_12 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_13 = bits(_reg_bp_1_control_WIRE_1, 27, 27) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.dmode <= _reg_bp_1_control_T_13 @[CSR.scala 1052:41]
          node _reg_bp_1_control_T_14 = bits(_reg_bp_1_control_WIRE_1, 31, 28) @[CSR.scala 1052:41]
          _reg_bp_1_control_WIRE.ttype <= _reg_bp_1_control_T_14 @[CSR.scala 1052:41]
          reg_bp[1].control <- _reg_bp_1_control_WIRE @[CSR.scala 1052:24]
          node newBPC_lo_lo_hi_1 = cat(reg_bp[1].control.x, reg_bp[1].control.w) @[CSR.scala 1058:67]
          node newBPC_lo_lo_1 = cat(newBPC_lo_lo_hi_1, reg_bp[1].control.r) @[CSR.scala 1058:67]
          node newBPC_lo_hi_lo_1 = cat(reg_bp[1].control.s, reg_bp[1].control.u) @[CSR.scala 1058:67]
          node newBPC_lo_hi_hi_1 = cat(reg_bp[1].control.m, reg_bp[1].control.h) @[CSR.scala 1058:67]
          node newBPC_lo_hi_1 = cat(newBPC_lo_hi_hi_1, newBPC_lo_hi_lo_1) @[CSR.scala 1058:67]
          node newBPC_lo_1 = cat(newBPC_lo_hi_1, newBPC_lo_lo_1) @[CSR.scala 1058:67]
          node newBPC_hi_lo_lo_1 = cat(reg_bp[1].control.zero, reg_bp[1].control.tmatch) @[CSR.scala 1058:67]
          node newBPC_hi_lo_hi_1 = cat(reg_bp[1].control.action, reg_bp[1].control.chain) @[CSR.scala 1058:67]
          node newBPC_hi_lo_1 = cat(newBPC_hi_lo_hi_1, newBPC_hi_lo_lo_1) @[CSR.scala 1058:67]
          node newBPC_hi_hi_lo_1 = cat(reg_bp[1].control.maskmax, reg_bp[1].control.reserved) @[CSR.scala 1058:67]
          node newBPC_hi_hi_hi_1 = cat(reg_bp[1].control.ttype, reg_bp[1].control.dmode) @[CSR.scala 1058:67]
          node newBPC_hi_hi_1 = cat(newBPC_hi_hi_hi_1, newBPC_hi_hi_lo_1) @[CSR.scala 1058:67]
          node newBPC_hi_1 = cat(newBPC_hi_hi_1, newBPC_hi_lo_1) @[CSR.scala 1058:67]
          node _newBPC_T_24 = cat(newBPC_hi_1, newBPC_lo_1) @[CSR.scala 1058:67]
          node _newBPC_T_25 = bits(io.rw.cmd, 1, 1) @[CSR.scala 1183:13]
          node _newBPC_T_26 = mux(_newBPC_T_25, _newBPC_T_24, UInt<1>("h00")) @[CSR.scala 1183:9]
          node _newBPC_T_27 = or(_newBPC_T_26, io.rw.wdata) @[CSR.scala 1183:34]
          node _newBPC_T_28 = bits(io.rw.cmd, 1, 0) @[CSR.scala 1183:53]
          node _newBPC_T_29 = andr(_newBPC_T_28) @[CSR.scala 1183:59]
          node _newBPC_T_30 = mux(_newBPC_T_29, io.rw.wdata, UInt<1>("h00")) @[CSR.scala 1183:49]
          node _newBPC_T_31 = not(_newBPC_T_30) @[CSR.scala 1183:45]
          node _newBPC_T_32 = and(_newBPC_T_27, _newBPC_T_31) @[CSR.scala 1183:43]
          wire newBPC_1 : {ttype : UInt<4>, dmode : UInt<1>, maskmax : UInt<6>, reserved : UInt<8>, action : UInt<1>, chain : UInt<1>, zero : UInt<2>, tmatch : UInt<2>, m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1058:96]
          newBPC_1 is invalid @[CSR.scala 1058:96]
          wire _newBPC_WIRE_1 : UInt<32>
          _newBPC_WIRE_1 is invalid
          _newBPC_WIRE_1 <= _newBPC_T_32
          node _newBPC_T_33 = bits(_newBPC_WIRE_1, 0, 0) @[CSR.scala 1058:96]
          newBPC_1.r <= _newBPC_T_33 @[CSR.scala 1058:96]
          node _newBPC_T_34 = bits(_newBPC_WIRE_1, 1, 1) @[CSR.scala 1058:96]
          newBPC_1.w <= _newBPC_T_34 @[CSR.scala 1058:96]
          node _newBPC_T_35 = bits(_newBPC_WIRE_1, 2, 2) @[CSR.scala 1058:96]
          newBPC_1.x <= _newBPC_T_35 @[CSR.scala 1058:96]
          node _newBPC_T_36 = bits(_newBPC_WIRE_1, 3, 3) @[CSR.scala 1058:96]
          newBPC_1.u <= _newBPC_T_36 @[CSR.scala 1058:96]
          node _newBPC_T_37 = bits(_newBPC_WIRE_1, 4, 4) @[CSR.scala 1058:96]
          newBPC_1.s <= _newBPC_T_37 @[CSR.scala 1058:96]
          node _newBPC_T_38 = bits(_newBPC_WIRE_1, 5, 5) @[CSR.scala 1058:96]
          newBPC_1.h <= _newBPC_T_38 @[CSR.scala 1058:96]
          node _newBPC_T_39 = bits(_newBPC_WIRE_1, 6, 6) @[CSR.scala 1058:96]
          newBPC_1.m <= _newBPC_T_39 @[CSR.scala 1058:96]
          node _newBPC_T_40 = bits(_newBPC_WIRE_1, 8, 7) @[CSR.scala 1058:96]
          newBPC_1.tmatch <= _newBPC_T_40 @[CSR.scala 1058:96]
          node _newBPC_T_41 = bits(_newBPC_WIRE_1, 10, 9) @[CSR.scala 1058:96]
          newBPC_1.zero <= _newBPC_T_41 @[CSR.scala 1058:96]
          node _newBPC_T_42 = bits(_newBPC_WIRE_1, 11, 11) @[CSR.scala 1058:96]
          newBPC_1.chain <= _newBPC_T_42 @[CSR.scala 1058:96]
          node _newBPC_T_43 = bits(_newBPC_WIRE_1, 12, 12) @[CSR.scala 1058:96]
          newBPC_1.action <= _newBPC_T_43 @[CSR.scala 1058:96]
          node _newBPC_T_44 = bits(_newBPC_WIRE_1, 20, 13) @[CSR.scala 1058:96]
          newBPC_1.reserved <= _newBPC_T_44 @[CSR.scala 1058:96]
          node _newBPC_T_45 = bits(_newBPC_WIRE_1, 26, 21) @[CSR.scala 1058:96]
          newBPC_1.maskmax <= _newBPC_T_45 @[CSR.scala 1058:96]
          node _newBPC_T_46 = bits(_newBPC_WIRE_1, 27, 27) @[CSR.scala 1058:96]
          newBPC_1.dmode <= _newBPC_T_46 @[CSR.scala 1058:96]
          node _newBPC_T_47 = bits(_newBPC_WIRE_1, 31, 28) @[CSR.scala 1058:96]
          newBPC_1.ttype <= _newBPC_T_47 @[CSR.scala 1058:96]
          node _dMode_T_3 = and(newBPC_1.dmode, reg_debug) @[CSR.scala 1059:38]
          node _dMode_T_4 = eq(reg_bp[0].control.chain, UInt<1>("h00")) @[CSR.scala 1059:68]
          node _dMode_T_5 = or(reg_bp[0].control.dmode, _dMode_T_4) @[CSR.scala 1059:65]
          node dMode_1 = and(_dMode_T_3, _dMode_T_5) @[CSR.scala 1059:51]
          reg_bp[1].control.dmode <= dMode_1 @[CSR.scala 1060:30]
          node _T_1992 = gt(newBPC_1.action, UInt<1>("h01")) @[CSR.scala 1061:43]
          node _T_1993 = or(dMode_1, _T_1992) @[CSR.scala 1061:25]
          when _T_1993 : @[CSR.scala 1061:51]
            reg_bp[1].control.action <= newBPC_1.action @[CSR.scala 1061:71]
            skip @[CSR.scala 1061:51]
          else : @[CSR.scala 1061:100]
            reg_bp[1].control.action <= UInt<1>("h00") @[CSR.scala 1061:120]
            skip @[CSR.scala 1061:100]
          node _reg_bp_1_control_chain_T = or(reg_bp[0].control.chain, UInt<1>("h01")) @[CSR.scala 1062:61]
          node _reg_bp_1_control_chain_T_1 = eq(_reg_bp_1_control_chain_T, UInt<1>("h00")) @[CSR.scala 1062:49]
          node _reg_bp_1_control_chain_T_2 = and(newBPC_1.chain, _reg_bp_1_control_chain_T_1) @[CSR.scala 1062:46]
          node _reg_bp_1_control_chain_T_3 = eq(UInt<1>("h01"), UInt<1>("h00")) @[CSR.scala 1062:88]
          node _reg_bp_1_control_chain_T_4 = or(dMode_1, _reg_bp_1_control_chain_T_3) @[CSR.scala 1062:85]
          node _reg_bp_1_control_chain_T_5 = and(_reg_bp_1_control_chain_T_2, _reg_bp_1_control_chain_T_4) @[CSR.scala 1062:75]
          reg_bp[1].control.chain <= _reg_bp_1_control_chain_T_5 @[CSR.scala 1062:30]
          skip @[CSR.scala 1051:44]
        skip @[CSR.scala 1039:70]
      node _T_1994 = eq(reg_pmp[0].cfg.l, UInt<1>("h00")) @[CSR.scala 1071:60]
      node _T_1995 = and(_T_164, _T_1994) @[CSR.scala 1071:57]
      when _T_1995 : @[CSR.scala 1071:76]
        node _newCfg_T = shr(wdata, 0) @[CSR.scala 1072:53]
        wire newCfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1072:46]
        newCfg is invalid @[CSR.scala 1072:46]
        wire _newCfg_WIRE : UInt<8>
        _newCfg_WIRE is invalid
        _newCfg_WIRE <= _newCfg_T
        node _newCfg_T_1 = bits(_newCfg_WIRE, 0, 0) @[CSR.scala 1072:46]
        newCfg.r <= _newCfg_T_1 @[CSR.scala 1072:46]
        node _newCfg_T_2 = bits(_newCfg_WIRE, 1, 1) @[CSR.scala 1072:46]
        newCfg.w <= _newCfg_T_2 @[CSR.scala 1072:46]
        node _newCfg_T_3 = bits(_newCfg_WIRE, 2, 2) @[CSR.scala 1072:46]
        newCfg.x <= _newCfg_T_3 @[CSR.scala 1072:46]
        node _newCfg_T_4 = bits(_newCfg_WIRE, 4, 3) @[CSR.scala 1072:46]
        newCfg.a <= _newCfg_T_4 @[CSR.scala 1072:46]
        node _newCfg_T_5 = bits(_newCfg_WIRE, 6, 5) @[CSR.scala 1072:46]
        newCfg.res <= _newCfg_T_5 @[CSR.scala 1072:46]
        node _newCfg_T_6 = bits(_newCfg_WIRE, 7, 7) @[CSR.scala 1072:46]
        newCfg.l <= _newCfg_T_6 @[CSR.scala 1072:46]
        reg_pmp[0].cfg <- newCfg @[CSR.scala 1073:17]
        node _reg_pmp_0_cfg_w_T = and(newCfg.w, newCfg.r) @[CSR.scala 1075:31]
        reg_pmp[0].cfg.w <= _reg_pmp_0_cfg_w_T @[CSR.scala 1075:19]
        skip @[CSR.scala 1071:76]
      node _T_1996 = bits(reg_pmp[1].cfg.a, 1, 1) @[PMP.scala 47:20]
      node _T_1997 = eq(_T_1996, UInt<1>("h00")) @[PMP.scala 49:13]
      node _T_1998 = bits(reg_pmp[1].cfg.a, 0, 0) @[PMP.scala 48:26]
      node _T_1999 = and(_T_1997, _T_1998) @[PMP.scala 49:20]
      node _T_2000 = and(reg_pmp[1].cfg.l, _T_1999) @[PMP.scala 51:62]
      node _T_2001 = or(reg_pmp[0].cfg.l, _T_2000) @[PMP.scala 51:44]
      node _T_2002 = eq(_T_2001, UInt<1>("h00")) @[CSR.scala 1080:48]
      node _T_2003 = and(_T_168, _T_2002) @[CSR.scala 1080:45]
      when _T_2003 : @[CSR.scala 1080:71]
        reg_pmp[0].addr <= wdata @[CSR.scala 1081:18]
        skip @[CSR.scala 1080:71]
      node _T_2004 = eq(reg_pmp[1].cfg.l, UInt<1>("h00")) @[CSR.scala 1071:60]
      node _T_2005 = and(_T_164, _T_2004) @[CSR.scala 1071:57]
      when _T_2005 : @[CSR.scala 1071:76]
        node _newCfg_T_7 = shr(wdata, 8) @[CSR.scala 1072:53]
        wire newCfg_1 : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1072:46]
        newCfg_1 is invalid @[CSR.scala 1072:46]
        wire _newCfg_WIRE_1 : UInt<8>
        _newCfg_WIRE_1 is invalid
        _newCfg_WIRE_1 <= _newCfg_T_7
        node _newCfg_T_8 = bits(_newCfg_WIRE_1, 0, 0) @[CSR.scala 1072:46]
        newCfg_1.r <= _newCfg_T_8 @[CSR.scala 1072:46]
        node _newCfg_T_9 = bits(_newCfg_WIRE_1, 1, 1) @[CSR.scala 1072:46]
        newCfg_1.w <= _newCfg_T_9 @[CSR.scala 1072:46]
        node _newCfg_T_10 = bits(_newCfg_WIRE_1, 2, 2) @[CSR.scala 1072:46]
        newCfg_1.x <= _newCfg_T_10 @[CSR.scala 1072:46]
        node _newCfg_T_11 = bits(_newCfg_WIRE_1, 4, 3) @[CSR.scala 1072:46]
        newCfg_1.a <= _newCfg_T_11 @[CSR.scala 1072:46]
        node _newCfg_T_12 = bits(_newCfg_WIRE_1, 6, 5) @[CSR.scala 1072:46]
        newCfg_1.res <= _newCfg_T_12 @[CSR.scala 1072:46]
        node _newCfg_T_13 = bits(_newCfg_WIRE_1, 7, 7) @[CSR.scala 1072:46]
        newCfg_1.l <= _newCfg_T_13 @[CSR.scala 1072:46]
        reg_pmp[1].cfg <- newCfg_1 @[CSR.scala 1073:17]
        node _reg_pmp_1_cfg_w_T = and(newCfg_1.w, newCfg_1.r) @[CSR.scala 1075:31]
        reg_pmp[1].cfg.w <= _reg_pmp_1_cfg_w_T @[CSR.scala 1075:19]
        skip @[CSR.scala 1071:76]
      node _T_2006 = bits(reg_pmp[2].cfg.a, 1, 1) @[PMP.scala 47:20]
      node _T_2007 = eq(_T_2006, UInt<1>("h00")) @[PMP.scala 49:13]
      node _T_2008 = bits(reg_pmp[2].cfg.a, 0, 0) @[PMP.scala 48:26]
      node _T_2009 = and(_T_2007, _T_2008) @[PMP.scala 49:20]
      node _T_2010 = and(reg_pmp[2].cfg.l, _T_2009) @[PMP.scala 51:62]
      node _T_2011 = or(reg_pmp[1].cfg.l, _T_2010) @[PMP.scala 51:44]
      node _T_2012 = eq(_T_2011, UInt<1>("h00")) @[CSR.scala 1080:48]
      node _T_2013 = and(_T_169, _T_2012) @[CSR.scala 1080:45]
      when _T_2013 : @[CSR.scala 1080:71]
        reg_pmp[1].addr <= wdata @[CSR.scala 1081:18]
        skip @[CSR.scala 1080:71]
      node _T_2014 = eq(reg_pmp[2].cfg.l, UInt<1>("h00")) @[CSR.scala 1071:60]
      node _T_2015 = and(_T_164, _T_2014) @[CSR.scala 1071:57]
      when _T_2015 : @[CSR.scala 1071:76]
        node _newCfg_T_14 = shr(wdata, 16) @[CSR.scala 1072:53]
        wire newCfg_2 : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1072:46]
        newCfg_2 is invalid @[CSR.scala 1072:46]
        wire _newCfg_WIRE_2 : UInt<8>
        _newCfg_WIRE_2 is invalid
        _newCfg_WIRE_2 <= _newCfg_T_14
        node _newCfg_T_15 = bits(_newCfg_WIRE_2, 0, 0) @[CSR.scala 1072:46]
        newCfg_2.r <= _newCfg_T_15 @[CSR.scala 1072:46]
        node _newCfg_T_16 = bits(_newCfg_WIRE_2, 1, 1) @[CSR.scala 1072:46]
        newCfg_2.w <= _newCfg_T_16 @[CSR.scala 1072:46]
        node _newCfg_T_17 = bits(_newCfg_WIRE_2, 2, 2) @[CSR.scala 1072:46]
        newCfg_2.x <= _newCfg_T_17 @[CSR.scala 1072:46]
        node _newCfg_T_18 = bits(_newCfg_WIRE_2, 4, 3) @[CSR.scala 1072:46]
        newCfg_2.a <= _newCfg_T_18 @[CSR.scala 1072:46]
        node _newCfg_T_19 = bits(_newCfg_WIRE_2, 6, 5) @[CSR.scala 1072:46]
        newCfg_2.res <= _newCfg_T_19 @[CSR.scala 1072:46]
        node _newCfg_T_20 = bits(_newCfg_WIRE_2, 7, 7) @[CSR.scala 1072:46]
        newCfg_2.l <= _newCfg_T_20 @[CSR.scala 1072:46]
        reg_pmp[2].cfg <- newCfg_2 @[CSR.scala 1073:17]
        node _reg_pmp_2_cfg_w_T = and(newCfg_2.w, newCfg_2.r) @[CSR.scala 1075:31]
        reg_pmp[2].cfg.w <= _reg_pmp_2_cfg_w_T @[CSR.scala 1075:19]
        skip @[CSR.scala 1071:76]
      node _T_2016 = bits(reg_pmp[3].cfg.a, 1, 1) @[PMP.scala 47:20]
      node _T_2017 = eq(_T_2016, UInt<1>("h00")) @[PMP.scala 49:13]
      node _T_2018 = bits(reg_pmp[3].cfg.a, 0, 0) @[PMP.scala 48:26]
      node _T_2019 = and(_T_2017, _T_2018) @[PMP.scala 49:20]
      node _T_2020 = and(reg_pmp[3].cfg.l, _T_2019) @[PMP.scala 51:62]
      node _T_2021 = or(reg_pmp[2].cfg.l, _T_2020) @[PMP.scala 51:44]
      node _T_2022 = eq(_T_2021, UInt<1>("h00")) @[CSR.scala 1080:48]
      node _T_2023 = and(_T_170, _T_2022) @[CSR.scala 1080:45]
      when _T_2023 : @[CSR.scala 1080:71]
        reg_pmp[2].addr <= wdata @[CSR.scala 1081:18]
        skip @[CSR.scala 1080:71]
      node _T_2024 = eq(reg_pmp[3].cfg.l, UInt<1>("h00")) @[CSR.scala 1071:60]
      node _T_2025 = and(_T_164, _T_2024) @[CSR.scala 1071:57]
      when _T_2025 : @[CSR.scala 1071:76]
        node _newCfg_T_21 = shr(wdata, 24) @[CSR.scala 1072:53]
        wire newCfg_3 : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1072:46]
        newCfg_3 is invalid @[CSR.scala 1072:46]
        wire _newCfg_WIRE_3 : UInt<8>
        _newCfg_WIRE_3 is invalid
        _newCfg_WIRE_3 <= _newCfg_T_21
        node _newCfg_T_22 = bits(_newCfg_WIRE_3, 0, 0) @[CSR.scala 1072:46]
        newCfg_3.r <= _newCfg_T_22 @[CSR.scala 1072:46]
        node _newCfg_T_23 = bits(_newCfg_WIRE_3, 1, 1) @[CSR.scala 1072:46]
        newCfg_3.w <= _newCfg_T_23 @[CSR.scala 1072:46]
        node _newCfg_T_24 = bits(_newCfg_WIRE_3, 2, 2) @[CSR.scala 1072:46]
        newCfg_3.x <= _newCfg_T_24 @[CSR.scala 1072:46]
        node _newCfg_T_25 = bits(_newCfg_WIRE_3, 4, 3) @[CSR.scala 1072:46]
        newCfg_3.a <= _newCfg_T_25 @[CSR.scala 1072:46]
        node _newCfg_T_26 = bits(_newCfg_WIRE_3, 6, 5) @[CSR.scala 1072:46]
        newCfg_3.res <= _newCfg_T_26 @[CSR.scala 1072:46]
        node _newCfg_T_27 = bits(_newCfg_WIRE_3, 7, 7) @[CSR.scala 1072:46]
        newCfg_3.l <= _newCfg_T_27 @[CSR.scala 1072:46]
        reg_pmp[3].cfg <- newCfg_3 @[CSR.scala 1073:17]
        node _reg_pmp_3_cfg_w_T = and(newCfg_3.w, newCfg_3.r) @[CSR.scala 1075:31]
        reg_pmp[3].cfg.w <= _reg_pmp_3_cfg_w_T @[CSR.scala 1075:19]
        skip @[CSR.scala 1071:76]
      node _T_2026 = bits(reg_pmp[4].cfg.a, 1, 1) @[PMP.scala 47:20]
      node _T_2027 = eq(_T_2026, UInt<1>("h00")) @[PMP.scala 49:13]
      node _T_2028 = bits(reg_pmp[4].cfg.a, 0, 0) @[PMP.scala 48:26]
      node _T_2029 = and(_T_2027, _T_2028) @[PMP.scala 49:20]
      node _T_2030 = and(reg_pmp[4].cfg.l, _T_2029) @[PMP.scala 51:62]
      node _T_2031 = or(reg_pmp[3].cfg.l, _T_2030) @[PMP.scala 51:44]
      node _T_2032 = eq(_T_2031, UInt<1>("h00")) @[CSR.scala 1080:48]
      node _T_2033 = and(_T_171, _T_2032) @[CSR.scala 1080:45]
      when _T_2033 : @[CSR.scala 1080:71]
        reg_pmp[3].addr <= wdata @[CSR.scala 1081:18]
        skip @[CSR.scala 1080:71]
      node _T_2034 = eq(reg_pmp[4].cfg.l, UInt<1>("h00")) @[CSR.scala 1071:60]
      node _T_2035 = and(_T_165, _T_2034) @[CSR.scala 1071:57]
      when _T_2035 : @[CSR.scala 1071:76]
        node _newCfg_T_28 = shr(wdata, 0) @[CSR.scala 1072:53]
        wire newCfg_4 : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1072:46]
        newCfg_4 is invalid @[CSR.scala 1072:46]
        wire _newCfg_WIRE_4 : UInt<8>
        _newCfg_WIRE_4 is invalid
        _newCfg_WIRE_4 <= _newCfg_T_28
        node _newCfg_T_29 = bits(_newCfg_WIRE_4, 0, 0) @[CSR.scala 1072:46]
        newCfg_4.r <= _newCfg_T_29 @[CSR.scala 1072:46]
        node _newCfg_T_30 = bits(_newCfg_WIRE_4, 1, 1) @[CSR.scala 1072:46]
        newCfg_4.w <= _newCfg_T_30 @[CSR.scala 1072:46]
        node _newCfg_T_31 = bits(_newCfg_WIRE_4, 2, 2) @[CSR.scala 1072:46]
        newCfg_4.x <= _newCfg_T_31 @[CSR.scala 1072:46]
        node _newCfg_T_32 = bits(_newCfg_WIRE_4, 4, 3) @[CSR.scala 1072:46]
        newCfg_4.a <= _newCfg_T_32 @[CSR.scala 1072:46]
        node _newCfg_T_33 = bits(_newCfg_WIRE_4, 6, 5) @[CSR.scala 1072:46]
        newCfg_4.res <= _newCfg_T_33 @[CSR.scala 1072:46]
        node _newCfg_T_34 = bits(_newCfg_WIRE_4, 7, 7) @[CSR.scala 1072:46]
        newCfg_4.l <= _newCfg_T_34 @[CSR.scala 1072:46]
        reg_pmp[4].cfg <- newCfg_4 @[CSR.scala 1073:17]
        node _reg_pmp_4_cfg_w_T = and(newCfg_4.w, newCfg_4.r) @[CSR.scala 1075:31]
        reg_pmp[4].cfg.w <= _reg_pmp_4_cfg_w_T @[CSR.scala 1075:19]
        skip @[CSR.scala 1071:76]
      node _T_2036 = bits(reg_pmp[5].cfg.a, 1, 1) @[PMP.scala 47:20]
      node _T_2037 = eq(_T_2036, UInt<1>("h00")) @[PMP.scala 49:13]
      node _T_2038 = bits(reg_pmp[5].cfg.a, 0, 0) @[PMP.scala 48:26]
      node _T_2039 = and(_T_2037, _T_2038) @[PMP.scala 49:20]
      node _T_2040 = and(reg_pmp[5].cfg.l, _T_2039) @[PMP.scala 51:62]
      node _T_2041 = or(reg_pmp[4].cfg.l, _T_2040) @[PMP.scala 51:44]
      node _T_2042 = eq(_T_2041, UInt<1>("h00")) @[CSR.scala 1080:48]
      node _T_2043 = and(_T_172, _T_2042) @[CSR.scala 1080:45]
      when _T_2043 : @[CSR.scala 1080:71]
        reg_pmp[4].addr <= wdata @[CSR.scala 1081:18]
        skip @[CSR.scala 1080:71]
      node _T_2044 = eq(reg_pmp[5].cfg.l, UInt<1>("h00")) @[CSR.scala 1071:60]
      node _T_2045 = and(_T_165, _T_2044) @[CSR.scala 1071:57]
      when _T_2045 : @[CSR.scala 1071:76]
        node _newCfg_T_35 = shr(wdata, 8) @[CSR.scala 1072:53]
        wire newCfg_5 : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1072:46]
        newCfg_5 is invalid @[CSR.scala 1072:46]
        wire _newCfg_WIRE_5 : UInt<8>
        _newCfg_WIRE_5 is invalid
        _newCfg_WIRE_5 <= _newCfg_T_35
        node _newCfg_T_36 = bits(_newCfg_WIRE_5, 0, 0) @[CSR.scala 1072:46]
        newCfg_5.r <= _newCfg_T_36 @[CSR.scala 1072:46]
        node _newCfg_T_37 = bits(_newCfg_WIRE_5, 1, 1) @[CSR.scala 1072:46]
        newCfg_5.w <= _newCfg_T_37 @[CSR.scala 1072:46]
        node _newCfg_T_38 = bits(_newCfg_WIRE_5, 2, 2) @[CSR.scala 1072:46]
        newCfg_5.x <= _newCfg_T_38 @[CSR.scala 1072:46]
        node _newCfg_T_39 = bits(_newCfg_WIRE_5, 4, 3) @[CSR.scala 1072:46]
        newCfg_5.a <= _newCfg_T_39 @[CSR.scala 1072:46]
        node _newCfg_T_40 = bits(_newCfg_WIRE_5, 6, 5) @[CSR.scala 1072:46]
        newCfg_5.res <= _newCfg_T_40 @[CSR.scala 1072:46]
        node _newCfg_T_41 = bits(_newCfg_WIRE_5, 7, 7) @[CSR.scala 1072:46]
        newCfg_5.l <= _newCfg_T_41 @[CSR.scala 1072:46]
        reg_pmp[5].cfg <- newCfg_5 @[CSR.scala 1073:17]
        node _reg_pmp_5_cfg_w_T = and(newCfg_5.w, newCfg_5.r) @[CSR.scala 1075:31]
        reg_pmp[5].cfg.w <= _reg_pmp_5_cfg_w_T @[CSR.scala 1075:19]
        skip @[CSR.scala 1071:76]
      node _T_2046 = bits(reg_pmp[6].cfg.a, 1, 1) @[PMP.scala 47:20]
      node _T_2047 = eq(_T_2046, UInt<1>("h00")) @[PMP.scala 49:13]
      node _T_2048 = bits(reg_pmp[6].cfg.a, 0, 0) @[PMP.scala 48:26]
      node _T_2049 = and(_T_2047, _T_2048) @[PMP.scala 49:20]
      node _T_2050 = and(reg_pmp[6].cfg.l, _T_2049) @[PMP.scala 51:62]
      node _T_2051 = or(reg_pmp[5].cfg.l, _T_2050) @[PMP.scala 51:44]
      node _T_2052 = eq(_T_2051, UInt<1>("h00")) @[CSR.scala 1080:48]
      node _T_2053 = and(_T_173, _T_2052) @[CSR.scala 1080:45]
      when _T_2053 : @[CSR.scala 1080:71]
        reg_pmp[5].addr <= wdata @[CSR.scala 1081:18]
        skip @[CSR.scala 1080:71]
      node _T_2054 = eq(reg_pmp[6].cfg.l, UInt<1>("h00")) @[CSR.scala 1071:60]
      node _T_2055 = and(_T_165, _T_2054) @[CSR.scala 1071:57]
      when _T_2055 : @[CSR.scala 1071:76]
        node _newCfg_T_42 = shr(wdata, 16) @[CSR.scala 1072:53]
        wire newCfg_6 : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1072:46]
        newCfg_6 is invalid @[CSR.scala 1072:46]
        wire _newCfg_WIRE_6 : UInt<8>
        _newCfg_WIRE_6 is invalid
        _newCfg_WIRE_6 <= _newCfg_T_42
        node _newCfg_T_43 = bits(_newCfg_WIRE_6, 0, 0) @[CSR.scala 1072:46]
        newCfg_6.r <= _newCfg_T_43 @[CSR.scala 1072:46]
        node _newCfg_T_44 = bits(_newCfg_WIRE_6, 1, 1) @[CSR.scala 1072:46]
        newCfg_6.w <= _newCfg_T_44 @[CSR.scala 1072:46]
        node _newCfg_T_45 = bits(_newCfg_WIRE_6, 2, 2) @[CSR.scala 1072:46]
        newCfg_6.x <= _newCfg_T_45 @[CSR.scala 1072:46]
        node _newCfg_T_46 = bits(_newCfg_WIRE_6, 4, 3) @[CSR.scala 1072:46]
        newCfg_6.a <= _newCfg_T_46 @[CSR.scala 1072:46]
        node _newCfg_T_47 = bits(_newCfg_WIRE_6, 6, 5) @[CSR.scala 1072:46]
        newCfg_6.res <= _newCfg_T_47 @[CSR.scala 1072:46]
        node _newCfg_T_48 = bits(_newCfg_WIRE_6, 7, 7) @[CSR.scala 1072:46]
        newCfg_6.l <= _newCfg_T_48 @[CSR.scala 1072:46]
        reg_pmp[6].cfg <- newCfg_6 @[CSR.scala 1073:17]
        node _reg_pmp_6_cfg_w_T = and(newCfg_6.w, newCfg_6.r) @[CSR.scala 1075:31]
        reg_pmp[6].cfg.w <= _reg_pmp_6_cfg_w_T @[CSR.scala 1075:19]
        skip @[CSR.scala 1071:76]
      node _T_2056 = bits(reg_pmp[7].cfg.a, 1, 1) @[PMP.scala 47:20]
      node _T_2057 = eq(_T_2056, UInt<1>("h00")) @[PMP.scala 49:13]
      node _T_2058 = bits(reg_pmp[7].cfg.a, 0, 0) @[PMP.scala 48:26]
      node _T_2059 = and(_T_2057, _T_2058) @[PMP.scala 49:20]
      node _T_2060 = and(reg_pmp[7].cfg.l, _T_2059) @[PMP.scala 51:62]
      node _T_2061 = or(reg_pmp[6].cfg.l, _T_2060) @[PMP.scala 51:44]
      node _T_2062 = eq(_T_2061, UInt<1>("h00")) @[CSR.scala 1080:48]
      node _T_2063 = and(_T_174, _T_2062) @[CSR.scala 1080:45]
      when _T_2063 : @[CSR.scala 1080:71]
        reg_pmp[6].addr <= wdata @[CSR.scala 1081:18]
        skip @[CSR.scala 1080:71]
      node _T_2064 = eq(reg_pmp[7].cfg.l, UInt<1>("h00")) @[CSR.scala 1071:60]
      node _T_2065 = and(_T_165, _T_2064) @[CSR.scala 1071:57]
      when _T_2065 : @[CSR.scala 1071:76]
        node _newCfg_T_49 = shr(wdata, 24) @[CSR.scala 1072:53]
        wire newCfg_7 : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>} @[CSR.scala 1072:46]
        newCfg_7 is invalid @[CSR.scala 1072:46]
        wire _newCfg_WIRE_7 : UInt<8>
        _newCfg_WIRE_7 is invalid
        _newCfg_WIRE_7 <= _newCfg_T_49
        node _newCfg_T_50 = bits(_newCfg_WIRE_7, 0, 0) @[CSR.scala 1072:46]
        newCfg_7.r <= _newCfg_T_50 @[CSR.scala 1072:46]
        node _newCfg_T_51 = bits(_newCfg_WIRE_7, 1, 1) @[CSR.scala 1072:46]
        newCfg_7.w <= _newCfg_T_51 @[CSR.scala 1072:46]
        node _newCfg_T_52 = bits(_newCfg_WIRE_7, 2, 2) @[CSR.scala 1072:46]
        newCfg_7.x <= _newCfg_T_52 @[CSR.scala 1072:46]
        node _newCfg_T_53 = bits(_newCfg_WIRE_7, 4, 3) @[CSR.scala 1072:46]
        newCfg_7.a <= _newCfg_T_53 @[CSR.scala 1072:46]
        node _newCfg_T_54 = bits(_newCfg_WIRE_7, 6, 5) @[CSR.scala 1072:46]
        newCfg_7.res <= _newCfg_T_54 @[CSR.scala 1072:46]
        node _newCfg_T_55 = bits(_newCfg_WIRE_7, 7, 7) @[CSR.scala 1072:46]
        newCfg_7.l <= _newCfg_T_55 @[CSR.scala 1072:46]
        reg_pmp[7].cfg <- newCfg_7 @[CSR.scala 1073:17]
        node _reg_pmp_7_cfg_w_T = and(newCfg_7.w, newCfg_7.r) @[CSR.scala 1075:31]
        reg_pmp[7].cfg.w <= _reg_pmp_7_cfg_w_T @[CSR.scala 1075:19]
        skip @[CSR.scala 1071:76]
      node _T_2066 = bits(reg_pmp[7].cfg.a, 1, 1) @[PMP.scala 47:20]
      node _T_2067 = eq(_T_2066, UInt<1>("h00")) @[PMP.scala 49:13]
      node _T_2068 = bits(reg_pmp[7].cfg.a, 0, 0) @[PMP.scala 48:26]
      node _T_2069 = and(_T_2067, _T_2068) @[PMP.scala 49:20]
      node _T_2070 = and(reg_pmp[7].cfg.l, _T_2069) @[PMP.scala 51:62]
      node _T_2071 = or(reg_pmp[7].cfg.l, _T_2070) @[PMP.scala 51:44]
      node _T_2072 = eq(_T_2071, UInt<1>("h00")) @[CSR.scala 1080:48]
      node _T_2073 = and(_T_175, _T_2072) @[CSR.scala 1080:45]
      when _T_2073 : @[CSR.scala 1080:71]
        reg_pmp[7].addr <= wdata @[CSR.scala 1081:18]
        skip @[CSR.scala 1080:71]
      when _T_184 : @[CSR.scala 1086:35]
        node _reg_custom_0_T = and(wdata, UInt<32>("h08")) @[CSR.scala 1087:23]
        node _reg_custom_0_T_1 = not(UInt<32>("h08")) @[CSR.scala 1087:40]
        node _reg_custom_0_T_2 = and(reg_custom_0, _reg_custom_0_T_1) @[CSR.scala 1087:38]
        node _reg_custom_0_T_3 = or(_reg_custom_0_T, _reg_custom_0_T_2) @[CSR.scala 1087:31]
        reg_custom_0 <= _reg_custom_0_T_3 @[CSR.scala 1087:13]
        io.customCSRs[0].wen <= UInt<1>("h01") @[CSR.scala 1088:16]
        skip @[CSR.scala 1086:35]
      when _T_185 : @[CSR.scala 1086:35]
        node _reg_custom_1_T = and(wdata, UInt<32>("h00")) @[CSR.scala 1087:23]
        node _reg_custom_1_T_1 = not(UInt<32>("h00")) @[CSR.scala 1087:40]
        node _reg_custom_1_T_2 = and(reg_custom_1, _reg_custom_1_T_1) @[CSR.scala 1087:38]
        node _reg_custom_1_T_3 = or(_reg_custom_1_T, _reg_custom_1_T_2) @[CSR.scala 1087:31]
        reg_custom_1 <= _reg_custom_1_T_3 @[CSR.scala 1087:13]
        io.customCSRs[1].wen <= UInt<1>("h01") @[CSR.scala 1088:16]
        skip @[CSR.scala 1086:35]
      when _T_186 : @[CSR.scala 1086:35]
        node _reg_custom_2_T = and(wdata, UInt<32>("h00")) @[CSR.scala 1087:23]
        node _reg_custom_2_T_1 = not(UInt<32>("h00")) @[CSR.scala 1087:40]
        node _reg_custom_2_T_2 = and(reg_custom_2, _reg_custom_2_T_1) @[CSR.scala 1087:38]
        node _reg_custom_2_T_3 = or(_reg_custom_2_T, _reg_custom_2_T_2) @[CSR.scala 1087:31]
        reg_custom_2 <= _reg_custom_2_T_3 @[CSR.scala 1087:13]
        io.customCSRs[2].wen <= UInt<1>("h01") @[CSR.scala 1088:16]
        skip @[CSR.scala 1086:35]
      when _T_187 : @[CSR.scala 1086:35]
        node _reg_custom_3_T = and(wdata, UInt<32>("h00")) @[CSR.scala 1087:23]
        node _reg_custom_3_T_1 = not(UInt<32>("h00")) @[CSR.scala 1087:40]
        node _reg_custom_3_T_2 = and(reg_custom_3, _reg_custom_3_T_1) @[CSR.scala 1087:38]
        node _reg_custom_3_T_3 = or(_reg_custom_3_T, _reg_custom_3_T_2) @[CSR.scala 1087:31]
        reg_custom_3 <= _reg_custom_3_T_3 @[CSR.scala 1087:13]
        io.customCSRs[3].wen <= UInt<1>("h01") @[CSR.scala 1088:16]
        skip @[CSR.scala 1086:35]
      skip @[CSR.scala 897:18]
    reg_satp.asid <= UInt<1>("h00") @[CSR.scala 1124:17]
    reg_satp.mode <= UInt<1>("h00") @[CSR.scala 1126:19]
    reg_satp.ppn <= UInt<1>("h00") @[CSR.scala 1127:18]
    reg_tselect <= UInt<1>("h00") @[CSR.scala 1130:38]
    reg_bp[0].control.ttype <= UInt<2>("h02") @[CSR.scala 1132:15]
    reg_bp[0].control.maskmax <= UInt<3>("h04") @[CSR.scala 1133:17]
    reg_bp[0].control.reserved <= UInt<1>("h00") @[CSR.scala 1134:18]
    reg_bp[0].control.zero <= UInt<1>("h00") @[CSR.scala 1135:14]
    reg_bp[0].control.h <= UInt<1>("h00") @[CSR.scala 1136:11]
    reg_bp[0].control.s <= UInt<1>("h00") @[CSR.scala 1137:33]
    reg_bp[0].control.u <= UInt<1>("h00") @[CSR.scala 1138:27]
    reg_bp[0].control.m <= UInt<1>("h01") @[CSR.scala 1139:47]
    node _T_2074 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2074 : @[CSR.scala 1140:18]
      reg_bp[0].control.action <= UInt<1>("h00") @[CSR.scala 1141:18]
      reg_bp[0].control.dmode <= UInt<1>("h00") @[CSR.scala 1142:17]
      reg_bp[0].control.chain <= UInt<1>("h00") @[CSR.scala 1143:17]
      reg_bp[0].control.r <= UInt<1>("h00") @[CSR.scala 1144:13]
      reg_bp[0].control.w <= UInt<1>("h00") @[CSR.scala 1145:13]
      reg_bp[0].control.x <= UInt<1>("h00") @[CSR.scala 1146:13]
      skip @[CSR.scala 1140:18]
    reg_bp[1].control.ttype <= UInt<2>("h02") @[CSR.scala 1132:15]
    reg_bp[1].control.maskmax <= UInt<3>("h04") @[CSR.scala 1133:17]
    reg_bp[1].control.reserved <= UInt<1>("h00") @[CSR.scala 1134:18]
    reg_bp[1].control.zero <= UInt<1>("h00") @[CSR.scala 1135:14]
    reg_bp[1].control.h <= UInt<1>("h00") @[CSR.scala 1136:11]
    reg_bp[1].control.s <= UInt<1>("h00") @[CSR.scala 1137:33]
    reg_bp[1].control.u <= UInt<1>("h00") @[CSR.scala 1138:27]
    reg_bp[1].control.m <= UInt<1>("h01") @[CSR.scala 1139:47]
    node _T_2075 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2075 : @[CSR.scala 1140:18]
      reg_bp[1].control.action <= UInt<1>("h00") @[CSR.scala 1141:18]
      reg_bp[1].control.dmode <= UInt<1>("h00") @[CSR.scala 1142:17]
      reg_bp[1].control.chain <= UInt<1>("h00") @[CSR.scala 1143:17]
      reg_bp[1].control.r <= UInt<1>("h00") @[CSR.scala 1144:13]
      reg_bp[1].control.w <= UInt<1>("h00") @[CSR.scala 1145:13]
      reg_bp[1].control.x <= UInt<1>("h00") @[CSR.scala 1146:13]
      skip @[CSR.scala 1140:18]
    reg_bp[0].textra.mselect <= UInt<1>("h00") @[CSR.scala 1150:52]
    reg_bp[0].textra.sselect <= UInt<1>("h00") @[CSR.scala 1151:52]
    reg_bp[1].textra.mselect <= UInt<1>("h00") @[CSR.scala 1150:52]
    reg_bp[1].textra.sselect <= UInt<1>("h00") @[CSR.scala 1151:52]
    wire _reg_bp_1_WIRE : {control : {ttype : UInt<4>, dmode : UInt<1>, maskmax : UInt<6>, reserved : UInt<8>, action : UInt<1>, chain : UInt<1>, zero : UInt<2>, tmatch : UInt<2>, m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, address : UInt<32>, textra : {mvalue : UInt<0>, mselect : UInt<1>, pad2 : UInt<23>, svalue : UInt<0>, pad1 : UInt<1>, sselect : UInt<1>}} @[CSR.scala 1154:28]
    _reg_bp_1_WIRE is invalid @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.textra.sselect <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.textra.pad1 <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.textra.svalue is invalid @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.textra.pad2 <= UInt<23>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.textra.mselect <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.textra.mvalue is invalid @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.address <= UInt<32>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.r <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.w <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.x <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.u <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.s <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.h <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.m <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.tmatch <= UInt<2>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.zero <= UInt<2>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.chain <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.action <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.reserved <= UInt<8>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.maskmax <= UInt<6>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.dmode <= UInt<1>("h00") @[CSR.scala 1154:28]
    _reg_bp_1_WIRE.control.ttype <= UInt<4>("h00") @[CSR.scala 1154:28]
    reg_bp[1] <- _reg_bp_1_WIRE @[CSR.scala 1154:8]
    reg_pmp[0].cfg.res <= UInt<1>("h00") @[CSR.scala 1156:17]
    node _T_2076 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2076 : @[CSR.scala 1157:18]
      reg_pmp[0].cfg.a <= UInt<1>("h00") @[PMP.scala 39:11]
      reg_pmp[0].cfg.l <= UInt<1>("h00") @[PMP.scala 40:11]
      skip @[CSR.scala 1157:18]
    reg_pmp[1].cfg.res <= UInt<1>("h00") @[CSR.scala 1156:17]
    node _T_2077 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2077 : @[CSR.scala 1157:18]
      reg_pmp[1].cfg.a <= UInt<1>("h00") @[PMP.scala 39:11]
      reg_pmp[1].cfg.l <= UInt<1>("h00") @[PMP.scala 40:11]
      skip @[CSR.scala 1157:18]
    reg_pmp[2].cfg.res <= UInt<1>("h00") @[CSR.scala 1156:17]
    node _T_2078 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2078 : @[CSR.scala 1157:18]
      reg_pmp[2].cfg.a <= UInt<1>("h00") @[PMP.scala 39:11]
      reg_pmp[2].cfg.l <= UInt<1>("h00") @[PMP.scala 40:11]
      skip @[CSR.scala 1157:18]
    reg_pmp[3].cfg.res <= UInt<1>("h00") @[CSR.scala 1156:17]
    node _T_2079 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2079 : @[CSR.scala 1157:18]
      reg_pmp[3].cfg.a <= UInt<1>("h00") @[PMP.scala 39:11]
      reg_pmp[3].cfg.l <= UInt<1>("h00") @[PMP.scala 40:11]
      skip @[CSR.scala 1157:18]
    reg_pmp[4].cfg.res <= UInt<1>("h00") @[CSR.scala 1156:17]
    node _T_2080 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2080 : @[CSR.scala 1157:18]
      reg_pmp[4].cfg.a <= UInt<1>("h00") @[PMP.scala 39:11]
      reg_pmp[4].cfg.l <= UInt<1>("h00") @[PMP.scala 40:11]
      skip @[CSR.scala 1157:18]
    reg_pmp[5].cfg.res <= UInt<1>("h00") @[CSR.scala 1156:17]
    node _T_2081 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2081 : @[CSR.scala 1157:18]
      reg_pmp[5].cfg.a <= UInt<1>("h00") @[PMP.scala 39:11]
      reg_pmp[5].cfg.l <= UInt<1>("h00") @[PMP.scala 40:11]
      skip @[CSR.scala 1157:18]
    reg_pmp[6].cfg.res <= UInt<1>("h00") @[CSR.scala 1156:17]
    node _T_2082 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2082 : @[CSR.scala 1157:18]
      reg_pmp[6].cfg.a <= UInt<1>("h00") @[PMP.scala 39:11]
      reg_pmp[6].cfg.l <= UInt<1>("h00") @[PMP.scala 40:11]
      skip @[CSR.scala 1157:18]
    reg_pmp[7].cfg.res <= UInt<1>("h00") @[CSR.scala 1156:17]
    node _T_2083 = bits(reset, 0, 0) @[compatibility.scala 260:56]
    when _T_2083 : @[CSR.scala 1157:18]
      reg_pmp[7].cfg.a <= UInt<1>("h00") @[PMP.scala 39:11]
      reg_pmp[7].cfg.l <= UInt<1>("h00") @[PMP.scala 40:11]
      skip @[CSR.scala 1157:18]
    node _io_trace_0_exception_T = geq(io.retire, UInt<1>("h00")) @[CSR.scala 1161:30]
    node _io_trace_0_exception_T_1 = and(_io_trace_0_exception_T, exception) @[CSR.scala 1161:35]
    io.trace[0].exception <= _io_trace_0_exception_T_1 @[CSR.scala 1161:17]
    node _io_trace_0_valid_T = gt(io.retire, UInt<1>("h00")) @[CSR.scala 1162:26]
    node _io_trace_0_valid_T_1 = or(_io_trace_0_valid_T, io.trace[0].exception) @[CSR.scala 1162:30]
    io.trace[0].valid <= _io_trace_0_valid_T_1 @[CSR.scala 1162:13]
    io.trace[0].insn <= io.inst[0] @[CSR.scala 1163:12]
    io.trace[0].iaddr <= io.pc @[CSR.scala 1164:13]
    node _io_trace_0_priv_T = cat(reg_debug, reg_mstatus.prv) @[Cat.scala 30:58]
    io.trace[0].priv <= _io_trace_0_priv_T @[CSR.scala 1165:12]
    io.trace[0].cause <= cause @[CSR.scala 1166:13]
    node _io_trace_0_interrupt_T = bits(cause, 31, 31) @[CSR.scala 1167:25]
    io.trace[0].interrupt <= _io_trace_0_interrupt_T @[CSR.scala 1167:17]
    io.trace[0].tval <= io.tval @[CSR.scala 1168:12]
    
  module BreakpointUnit : 
    input clock : Clock
    input reset : Reset
    output io : {flip status : {debug : UInt<1>, cease : UInt<1>, wfi : UInt<1>, isa : UInt<32>, dprv : UInt<2>, prv : UInt<2>, sd : UInt<1>, zero2 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, sd_rv32 : UInt<1>, zero1 : UInt<8>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, vs : UInt<2>, spp : UInt<1>, mpie : UInt<1>, hpie : UInt<1>, spie : UInt<1>, upie : UInt<1>, mie : UInt<1>, hie : UInt<1>, sie : UInt<1>, uie : UInt<1>}, flip bp : {control : {ttype : UInt<4>, dmode : UInt<1>, maskmax : UInt<6>, reserved : UInt<8>, action : UInt<1>, chain : UInt<1>, zero : UInt<2>, tmatch : UInt<2>, m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, address : UInt<32>, textra : {mvalue : UInt<0>, mselect : UInt<1>, pad2 : UInt<23>, svalue : UInt<0>, pad1 : UInt<1>, sselect : UInt<1>}}[1], flip pc : UInt<32>, flip ea : UInt<32>, flip mcontext : UInt<0>, flip scontext : UInt<0>, xcpt_if : UInt<1>, xcpt_ld : UInt<1>, xcpt_st : UInt<1>, debug_if : UInt<1>, debug_ld : UInt<1>, debug_st : UInt<1>, bpwatch : {valid : UInt<1>[1], rvalid : UInt<1>[1], wvalid : UInt<1>[1], ivalid : UInt<1>[1], action : UInt<3>}[1]}
    
    io.xcpt_if <= UInt<1>("h00") @[Breakpoint.scala 97:14]
    io.xcpt_ld <= UInt<1>("h00") @[Breakpoint.scala 98:14]
    io.xcpt_st <= UInt<1>("h00") @[Breakpoint.scala 99:14]
    io.debug_if <= UInt<1>("h00") @[Breakpoint.scala 100:15]
    io.debug_ld <= UInt<1>("h00") @[Breakpoint.scala 101:15]
    io.debug_st <= UInt<1>("h00") @[Breakpoint.scala 102:15]
    node _en_T = eq(io.status.debug, UInt<1>("h00")) @[Breakpoint.scala 31:35]
    node en_lo = cat(io.bp[0].control.s, io.bp[0].control.u) @[Cat.scala 30:58]
    node en_hi = cat(io.bp[0].control.m, io.bp[0].control.h) @[Cat.scala 30:58]
    node _en_T_1 = cat(en_hi, en_lo) @[Cat.scala 30:58]
    node _en_T_2 = dshr(_en_T_1, io.status.prv) @[Breakpoint.scala 31:68]
    node _en_T_3 = bits(_en_T_2, 0, 0) @[Breakpoint.scala 31:68]
    node en = and(_en_T, _en_T_3) @[Breakpoint.scala 31:50]
    node cx = and(UInt<1>("h01"), UInt<1>("h01")) @[Breakpoint.scala 56:126]
    node _r_T = and(en, io.bp[0].control.r) @[Breakpoint.scala 107:16]
    node _r_T_1 = bits(io.bp[0].control.tmatch, 1, 1) @[Breakpoint.scala 69:23]
    node _r_T_2 = geq(io.ea, io.bp[0].address) @[Breakpoint.scala 66:8]
    node _r_T_3 = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 66:36]
    node _r_T_4 = xor(_r_T_2, _r_T_3) @[Breakpoint.scala 66:20]
    node _r_T_5 = not(io.ea) @[Breakpoint.scala 63:6]
    node r_lo_lo = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 60:56]
    node _r_T_6 = bits(io.bp[0].address, 0, 0) @[Breakpoint.scala 60:83]
    node r_lo_hi = and(r_lo_lo, _r_T_6) @[Breakpoint.scala 60:73]
    node _r_T_7 = bits(io.bp[0].address, 1, 1) @[Breakpoint.scala 60:83]
    node r_hi_lo = and(r_lo_hi, _r_T_7) @[Breakpoint.scala 60:73]
    node _r_T_8 = bits(io.bp[0].address, 2, 2) @[Breakpoint.scala 60:83]
    node r_hi_hi = and(r_hi_lo, _r_T_8) @[Breakpoint.scala 60:73]
    node r_lo = cat(r_lo_hi, r_lo_lo) @[Cat.scala 30:58]
    node r_hi = cat(r_hi_hi, r_hi_lo) @[Cat.scala 30:58]
    node _r_T_9 = cat(r_hi, r_lo) @[Cat.scala 30:58]
    node _r_T_10 = or(_r_T_5, _r_T_9) @[Breakpoint.scala 63:9]
    node _r_T_11 = not(io.bp[0].address) @[Breakpoint.scala 63:24]
    node r_lo_lo_1 = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 60:56]
    node _r_T_12 = bits(io.bp[0].address, 0, 0) @[Breakpoint.scala 60:83]
    node r_lo_hi_1 = and(r_lo_lo_1, _r_T_12) @[Breakpoint.scala 60:73]
    node _r_T_13 = bits(io.bp[0].address, 1, 1) @[Breakpoint.scala 60:83]
    node r_hi_lo_1 = and(r_lo_hi_1, _r_T_13) @[Breakpoint.scala 60:73]
    node _r_T_14 = bits(io.bp[0].address, 2, 2) @[Breakpoint.scala 60:83]
    node r_hi_hi_1 = and(r_hi_lo_1, _r_T_14) @[Breakpoint.scala 60:73]
    node r_lo_1 = cat(r_lo_hi_1, r_lo_lo_1) @[Cat.scala 30:58]
    node r_hi_1 = cat(r_hi_hi_1, r_hi_lo_1) @[Cat.scala 30:58]
    node _r_T_15 = cat(r_hi_1, r_lo_1) @[Cat.scala 30:58]
    node _r_T_16 = or(_r_T_11, _r_T_15) @[Breakpoint.scala 63:33]
    node _r_T_17 = eq(_r_T_10, _r_T_16) @[Breakpoint.scala 63:19]
    node _r_T_18 = mux(_r_T_1, _r_T_4, _r_T_17) @[Breakpoint.scala 69:8]
    node _r_T_19 = and(_r_T, _r_T_18) @[Breakpoint.scala 107:32]
    node r = and(_r_T_19, cx) @[Breakpoint.scala 107:58]
    node _w_T = and(en, io.bp[0].control.w) @[Breakpoint.scala 108:16]
    node _w_T_1 = bits(io.bp[0].control.tmatch, 1, 1) @[Breakpoint.scala 69:23]
    node _w_T_2 = geq(io.ea, io.bp[0].address) @[Breakpoint.scala 66:8]
    node _w_T_3 = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 66:36]
    node _w_T_4 = xor(_w_T_2, _w_T_3) @[Breakpoint.scala 66:20]
    node _w_T_5 = not(io.ea) @[Breakpoint.scala 63:6]
    node w_lo_lo = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 60:56]
    node _w_T_6 = bits(io.bp[0].address, 0, 0) @[Breakpoint.scala 60:83]
    node w_lo_hi = and(w_lo_lo, _w_T_6) @[Breakpoint.scala 60:73]
    node _w_T_7 = bits(io.bp[0].address, 1, 1) @[Breakpoint.scala 60:83]
    node w_hi_lo = and(w_lo_hi, _w_T_7) @[Breakpoint.scala 60:73]
    node _w_T_8 = bits(io.bp[0].address, 2, 2) @[Breakpoint.scala 60:83]
    node w_hi_hi = and(w_hi_lo, _w_T_8) @[Breakpoint.scala 60:73]
    node w_lo = cat(w_lo_hi, w_lo_lo) @[Cat.scala 30:58]
    node w_hi = cat(w_hi_hi, w_hi_lo) @[Cat.scala 30:58]
    node _w_T_9 = cat(w_hi, w_lo) @[Cat.scala 30:58]
    node _w_T_10 = or(_w_T_5, _w_T_9) @[Breakpoint.scala 63:9]
    node _w_T_11 = not(io.bp[0].address) @[Breakpoint.scala 63:24]
    node w_lo_lo_1 = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 60:56]
    node _w_T_12 = bits(io.bp[0].address, 0, 0) @[Breakpoint.scala 60:83]
    node w_lo_hi_1 = and(w_lo_lo_1, _w_T_12) @[Breakpoint.scala 60:73]
    node _w_T_13 = bits(io.bp[0].address, 1, 1) @[Breakpoint.scala 60:83]
    node w_hi_lo_1 = and(w_lo_hi_1, _w_T_13) @[Breakpoint.scala 60:73]
    node _w_T_14 = bits(io.bp[0].address, 2, 2) @[Breakpoint.scala 60:83]
    node w_hi_hi_1 = and(w_hi_lo_1, _w_T_14) @[Breakpoint.scala 60:73]
    node w_lo_1 = cat(w_lo_hi_1, w_lo_lo_1) @[Cat.scala 30:58]
    node w_hi_1 = cat(w_hi_hi_1, w_hi_lo_1) @[Cat.scala 30:58]
    node _w_T_15 = cat(w_hi_1, w_lo_1) @[Cat.scala 30:58]
    node _w_T_16 = or(_w_T_11, _w_T_15) @[Breakpoint.scala 63:33]
    node _w_T_17 = eq(_w_T_10, _w_T_16) @[Breakpoint.scala 63:19]
    node _w_T_18 = mux(_w_T_1, _w_T_4, _w_T_17) @[Breakpoint.scala 69:8]
    node _w_T_19 = and(_w_T, _w_T_18) @[Breakpoint.scala 108:32]
    node w = and(_w_T_19, cx) @[Breakpoint.scala 108:58]
    node _x_T = and(en, io.bp[0].control.x) @[Breakpoint.scala 109:16]
    node _x_T_1 = bits(io.bp[0].control.tmatch, 1, 1) @[Breakpoint.scala 69:23]
    node _x_T_2 = geq(io.pc, io.bp[0].address) @[Breakpoint.scala 66:8]
    node _x_T_3 = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 66:36]
    node _x_T_4 = xor(_x_T_2, _x_T_3) @[Breakpoint.scala 66:20]
    node _x_T_5 = not(io.pc) @[Breakpoint.scala 63:6]
    node x_lo_lo = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 60:56]
    node _x_T_6 = bits(io.bp[0].address, 0, 0) @[Breakpoint.scala 60:83]
    node x_lo_hi = and(x_lo_lo, _x_T_6) @[Breakpoint.scala 60:73]
    node _x_T_7 = bits(io.bp[0].address, 1, 1) @[Breakpoint.scala 60:83]
    node x_hi_lo = and(x_lo_hi, _x_T_7) @[Breakpoint.scala 60:73]
    node _x_T_8 = bits(io.bp[0].address, 2, 2) @[Breakpoint.scala 60:83]
    node x_hi_hi = and(x_hi_lo, _x_T_8) @[Breakpoint.scala 60:73]
    node x_lo = cat(x_lo_hi, x_lo_lo) @[Cat.scala 30:58]
    node x_hi = cat(x_hi_hi, x_hi_lo) @[Cat.scala 30:58]
    node _x_T_9 = cat(x_hi, x_lo) @[Cat.scala 30:58]
    node _x_T_10 = or(_x_T_5, _x_T_9) @[Breakpoint.scala 63:9]
    node _x_T_11 = not(io.bp[0].address) @[Breakpoint.scala 63:24]
    node x_lo_lo_1 = bits(io.bp[0].control.tmatch, 0, 0) @[Breakpoint.scala 60:56]
    node _x_T_12 = bits(io.bp[0].address, 0, 0) @[Breakpoint.scala 60:83]
    node x_lo_hi_1 = and(x_lo_lo_1, _x_T_12) @[Breakpoint.scala 60:73]
    node _x_T_13 = bits(io.bp[0].address, 1, 1) @[Breakpoint.scala 60:83]
    node x_hi_lo_1 = and(x_lo_hi_1, _x_T_13) @[Breakpoint.scala 60:73]
    node _x_T_14 = bits(io.bp[0].address, 2, 2) @[Breakpoint.scala 60:83]
    node x_hi_hi_1 = and(x_hi_lo_1, _x_T_14) @[Breakpoint.scala 60:73]
    node x_lo_1 = cat(x_lo_hi_1, x_lo_lo_1) @[Cat.scala 30:58]
    node x_hi_1 = cat(x_hi_hi_1, x_hi_lo_1) @[Cat.scala 30:58]
    node _x_T_15 = cat(x_hi_1, x_lo_1) @[Cat.scala 30:58]
    node _x_T_16 = or(_x_T_11, _x_T_15) @[Breakpoint.scala 63:33]
    node _x_T_17 = eq(_x_T_10, _x_T_16) @[Breakpoint.scala 63:19]
    node _x_T_18 = mux(_x_T_1, _x_T_4, _x_T_17) @[Breakpoint.scala 69:8]
    node _x_T_19 = and(_x_T, _x_T_18) @[Breakpoint.scala 109:32]
    node x = and(_x_T_19, cx) @[Breakpoint.scala 109:58]
    node end = eq(io.bp[0].control.chain, UInt<1>("h00")) @[Breakpoint.scala 110:15]
    io.bpwatch[0].action <= io.bp[0].control.action @[Breakpoint.scala 113:16]
    io.bpwatch[0].valid[0] <= UInt<1>("h00") @[Breakpoint.scala 114:18]
    io.bpwatch[0].rvalid[0] <= UInt<1>("h00") @[Breakpoint.scala 115:19]
    io.bpwatch[0].wvalid[0] <= UInt<1>("h00") @[Breakpoint.scala 116:19]
    io.bpwatch[0].ivalid[0] <= UInt<1>("h00") @[Breakpoint.scala 117:19]
    node _T = and(end, r) @[Breakpoint.scala 119:15]
    node _T_1 = and(_T, UInt<1>("h01")) @[Breakpoint.scala 119:20]
    when _T_1 : @[Breakpoint.scala 119:27]
      node _io_xcpt_ld_T = eq(io.bp[0].control.action, UInt<1>("h00")) @[Breakpoint.scala 119:51]
      io.xcpt_ld <= _io_xcpt_ld_T @[Breakpoint.scala 119:40]
      node _io_debug_ld_T = eq(io.bp[0].control.action, UInt<1>("h01")) @[Breakpoint.scala 119:84]
      io.debug_ld <= _io_debug_ld_T @[Breakpoint.scala 119:73]
      io.bpwatch[0].valid[0] <= UInt<1>("h01") @[Breakpoint.scala 119:107]
      io.bpwatch[0].rvalid[0] <= UInt<1>("h01") @[Breakpoint.scala 119:132]
      skip @[Breakpoint.scala 119:27]
    node _T_2 = and(end, w) @[Breakpoint.scala 120:15]
    node _T_3 = and(_T_2, UInt<1>("h01")) @[Breakpoint.scala 120:20]
    when _T_3 : @[Breakpoint.scala 120:27]
      node _io_xcpt_st_T = eq(io.bp[0].control.action, UInt<1>("h00")) @[Breakpoint.scala 120:51]
      io.xcpt_st <= _io_xcpt_st_T @[Breakpoint.scala 120:40]
      node _io_debug_st_T = eq(io.bp[0].control.action, UInt<1>("h01")) @[Breakpoint.scala 120:84]
      io.debug_st <= _io_debug_st_T @[Breakpoint.scala 120:73]
      io.bpwatch[0].valid[0] <= UInt<1>("h01") @[Breakpoint.scala 120:107]
      io.bpwatch[0].wvalid[0] <= UInt<1>("h01") @[Breakpoint.scala 120:132]
      skip @[Breakpoint.scala 120:27]
    node _T_4 = and(end, x) @[Breakpoint.scala 121:15]
    node _T_5 = and(_T_4, UInt<1>("h01")) @[Breakpoint.scala 121:20]
    when _T_5 : @[Breakpoint.scala 121:27]
      node _io_xcpt_if_T = eq(io.bp[0].control.action, UInt<1>("h00")) @[Breakpoint.scala 121:51]
      io.xcpt_if <= _io_xcpt_if_T @[Breakpoint.scala 121:40]
      node _io_debug_if_T = eq(io.bp[0].control.action, UInt<1>("h01")) @[Breakpoint.scala 121:84]
      io.debug_if <= _io_debug_if_T @[Breakpoint.scala 121:73]
      io.bpwatch[0].valid[0] <= UInt<1>("h01") @[Breakpoint.scala 121:107]
      io.bpwatch[0].ivalid[0] <= UInt<1>("h01") @[Breakpoint.scala 121:132]
      skip @[Breakpoint.scala 121:27]
    node _T_6 = or(end, r) @[Breakpoint.scala 123:10]
    node _T_7 = or(end, w) @[Breakpoint.scala 123:20]
    node _T_8 = or(end, x) @[Breakpoint.scala 123:30]
    
  module ALU : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip dw : UInt<1>, flip fn : UInt<4>, flip in2 : UInt<32>, flip in1 : UInt<32>, out : UInt<32>, adder_out : UInt<32>, cmp_out : UInt<1>}
    
    clock is invalid
    reset is invalid
    io is invalid
    node _in2_inv_T = bits(io.fn, 3, 3) @[ALU.scala 40:29]
    node _in2_inv_T_1 = not(io.in2) @[ALU.scala 61:35]
    node in2_inv = mux(_in2_inv_T, _in2_inv_T_1, io.in2) @[ALU.scala 61:20]
    node in1_xor_in2 = xor(io.in1, in2_inv) @[ALU.scala 62:28]
    node _io_adder_out_T = add(io.in1, in2_inv) @[ALU.scala 63:26]
    node _io_adder_out_T_1 = tail(_io_adder_out_T, 1) @[ALU.scala 63:26]
    node _io_adder_out_T_2 = bits(io.fn, 3, 3) @[ALU.scala 40:29]
    node _io_adder_out_T_3 = add(_io_adder_out_T_1, _io_adder_out_T_2) @[ALU.scala 63:36]
    node _io_adder_out_T_4 = tail(_io_adder_out_T_3, 1) @[ALU.scala 63:36]
    io.adder_out <= _io_adder_out_T_4 @[ALU.scala 63:16]
    node _slt_T = bits(io.in1, 31, 31) @[ALU.scala 67:15]
    node _slt_T_1 = bits(io.in2, 31, 31) @[ALU.scala 67:34]
    node _slt_T_2 = eq(_slt_T, _slt_T_1) @[ALU.scala 67:24]
    node _slt_T_3 = bits(io.adder_out, 31, 31) @[ALU.scala 67:56]
    node _slt_T_4 = bits(io.fn, 1, 1) @[ALU.scala 42:35]
    node _slt_T_5 = bits(io.in2, 31, 31) @[ALU.scala 68:35]
    node _slt_T_6 = bits(io.in1, 31, 31) @[ALU.scala 68:51]
    node _slt_T_7 = mux(_slt_T_4, _slt_T_5, _slt_T_6) @[ALU.scala 68:8]
    node slt = mux(_slt_T_2, _slt_T_3, _slt_T_7) @[ALU.scala 67:8]
    node _io_cmp_out_T = bits(io.fn, 0, 0) @[ALU.scala 43:35]
    node _io_cmp_out_T_1 = bits(io.fn, 3, 3) @[ALU.scala 44:30]
    node _io_cmp_out_T_2 = eq(_io_cmp_out_T_1, UInt<1>("h00")) @[ALU.scala 44:26]
    node _io_cmp_out_T_3 = eq(in1_xor_in2, UInt<1>("h00")) @[ALU.scala 69:68]
    node _io_cmp_out_T_4 = mux(_io_cmp_out_T_2, _io_cmp_out_T_3, slt) @[ALU.scala 69:41]
    node _io_cmp_out_T_5 = xor(_io_cmp_out_T, _io_cmp_out_T_4) @[ALU.scala 69:36]
    io.cmp_out <= _io_cmp_out_T_5 @[ALU.scala 69:14]
    node shamt = bits(io.in2, 4, 0) @[ALU.scala 73:28]
    node _shin_T = eq(io.fn, UInt<3>("h05")) @[ALU.scala 81:24]
    node _shin_T_1 = eq(io.fn, UInt<4>("h0b")) @[ALU.scala 81:44]
    node _shin_T_2 = or(_shin_T, _shin_T_1) @[ALU.scala 81:35]
    node _shin_T_3 = shl(UInt<16>("h0ffff"), 16) @[Bitwise.scala 102:47]
    node _shin_T_4 = xor(UInt<32>("h0ffffffff"), _shin_T_3) @[Bitwise.scala 102:21]
    node _shin_T_5 = shr(io.in1, 16) @[Bitwise.scala 103:21]
    node _shin_T_6 = and(_shin_T_5, _shin_T_4) @[Bitwise.scala 103:31]
    node _shin_T_7 = bits(io.in1, 15, 0) @[Bitwise.scala 103:46]
    node _shin_T_8 = shl(_shin_T_7, 16) @[Bitwise.scala 103:65]
    node _shin_T_9 = not(_shin_T_4) @[Bitwise.scala 103:77]
    node _shin_T_10 = and(_shin_T_8, _shin_T_9) @[Bitwise.scala 103:75]
    node _shin_T_11 = or(_shin_T_6, _shin_T_10) @[Bitwise.scala 103:39]
    node _shin_T_12 = bits(_shin_T_4, 23, 0) @[Bitwise.scala 102:28]
    node _shin_T_13 = shl(_shin_T_12, 8) @[Bitwise.scala 102:47]
    node _shin_T_14 = xor(_shin_T_4, _shin_T_13) @[Bitwise.scala 102:21]
    node _shin_T_15 = shr(_shin_T_11, 8) @[Bitwise.scala 103:21]
    node _shin_T_16 = and(_shin_T_15, _shin_T_14) @[Bitwise.scala 103:31]
    node _shin_T_17 = bits(_shin_T_11, 23, 0) @[Bitwise.scala 103:46]
    node _shin_T_18 = shl(_shin_T_17, 8) @[Bitwise.scala 103:65]
    node _shin_T_19 = not(_shin_T_14) @[Bitwise.scala 103:77]
    node _shin_T_20 = and(_shin_T_18, _shin_T_19) @[Bitwise.scala 103:75]
    node _shin_T_21 = or(_shin_T_16, _shin_T_20) @[Bitwise.scala 103:39]
    node _shin_T_22 = bits(_shin_T_14, 27, 0) @[Bitwise.scala 102:28]
    node _shin_T_23 = shl(_shin_T_22, 4) @[Bitwise.scala 102:47]
    node _shin_T_24 = xor(_shin_T_14, _shin_T_23) @[Bitwise.scala 102:21]
    node _shin_T_25 = shr(_shin_T_21, 4) @[Bitwise.scala 103:21]
    node _shin_T_26 = and(_shin_T_25, _shin_T_24) @[Bitwise.scala 103:31]
    node _shin_T_27 = bits(_shin_T_21, 27, 0) @[Bitwise.scala 103:46]
    node _shin_T_28 = shl(_shin_T_27, 4) @[Bitwise.scala 103:65]
    node _shin_T_29 = not(_shin_T_24) @[Bitwise.scala 103:77]
    node _shin_T_30 = and(_shin_T_28, _shin_T_29) @[Bitwise.scala 103:75]
    node _shin_T_31 = or(_shin_T_26, _shin_T_30) @[Bitwise.scala 103:39]
    node _shin_T_32 = bits(_shin_T_24, 29, 0) @[Bitwise.scala 102:28]
    node _shin_T_33 = shl(_shin_T_32, 2) @[Bitwise.scala 102:47]
    node _shin_T_34 = xor(_shin_T_24, _shin_T_33) @[Bitwise.scala 102:21]
    node _shin_T_35 = shr(_shin_T_31, 2) @[Bitwise.scala 103:21]
    node _shin_T_36 = and(_shin_T_35, _shin_T_34) @[Bitwise.scala 103:31]
    node _shin_T_37 = bits(_shin_T_31, 29, 0) @[Bitwise.scala 103:46]
    node _shin_T_38 = shl(_shin_T_37, 2) @[Bitwise.scala 103:65]
    node _shin_T_39 = not(_shin_T_34) @[Bitwise.scala 103:77]
    node _shin_T_40 = and(_shin_T_38, _shin_T_39) @[Bitwise.scala 103:75]
    node _shin_T_41 = or(_shin_T_36, _shin_T_40) @[Bitwise.scala 103:39]
    node _shin_T_42 = bits(_shin_T_34, 30, 0) @[Bitwise.scala 102:28]
    node _shin_T_43 = shl(_shin_T_42, 1) @[Bitwise.scala 102:47]
    node _shin_T_44 = xor(_shin_T_34, _shin_T_43) @[Bitwise.scala 102:21]
    node _shin_T_45 = shr(_shin_T_41, 1) @[Bitwise.scala 103:21]
    node _shin_T_46 = and(_shin_T_45, _shin_T_44) @[Bitwise.scala 103:31]
    node _shin_T_47 = bits(_shin_T_41, 30, 0) @[Bitwise.scala 103:46]
    node _shin_T_48 = shl(_shin_T_47, 1) @[Bitwise.scala 103:65]
    node _shin_T_49 = not(_shin_T_44) @[Bitwise.scala 103:77]
    node _shin_T_50 = and(_shin_T_48, _shin_T_49) @[Bitwise.scala 103:75]
    node _shin_T_51 = or(_shin_T_46, _shin_T_50) @[Bitwise.scala 103:39]
    node shin = mux(_shin_T_2, io.in1, _shin_T_51) @[ALU.scala 81:17]
    node _shout_r_T = bits(io.fn, 3, 3) @[ALU.scala 40:29]
    node _shout_r_T_1 = bits(shin, 31, 31) @[ALU.scala 82:41]
    node shout_r_hi = and(_shout_r_T, _shout_r_T_1) @[ALU.scala 82:35]
    node _shout_r_T_2 = cat(shout_r_hi, shin) @[Cat.scala 30:58]
    node _shout_r_T_3 = asSInt(_shout_r_T_2) @[ALU.scala 82:57]
    node _shout_r_T_4 = dshr(_shout_r_T_3, shamt) @[ALU.scala 82:64]
    node shout_r = bits(_shout_r_T_4, 31, 0) @[ALU.scala 82:73]
    node _shout_l_T = shl(UInt<16>("h0ffff"), 16) @[Bitwise.scala 102:47]
    node _shout_l_T_1 = xor(UInt<32>("h0ffffffff"), _shout_l_T) @[Bitwise.scala 102:21]
    node _shout_l_T_2 = shr(shout_r, 16) @[Bitwise.scala 103:21]
    node _shout_l_T_3 = and(_shout_l_T_2, _shout_l_T_1) @[Bitwise.scala 103:31]
    node _shout_l_T_4 = bits(shout_r, 15, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_5 = shl(_shout_l_T_4, 16) @[Bitwise.scala 103:65]
    node _shout_l_T_6 = not(_shout_l_T_1) @[Bitwise.scala 103:77]
    node _shout_l_T_7 = and(_shout_l_T_5, _shout_l_T_6) @[Bitwise.scala 103:75]
    node _shout_l_T_8 = or(_shout_l_T_3, _shout_l_T_7) @[Bitwise.scala 103:39]
    node _shout_l_T_9 = bits(_shout_l_T_1, 23, 0) @[Bitwise.scala 102:28]
    node _shout_l_T_10 = shl(_shout_l_T_9, 8) @[Bitwise.scala 102:47]
    node _shout_l_T_11 = xor(_shout_l_T_1, _shout_l_T_10) @[Bitwise.scala 102:21]
    node _shout_l_T_12 = shr(_shout_l_T_8, 8) @[Bitwise.scala 103:21]
    node _shout_l_T_13 = and(_shout_l_T_12, _shout_l_T_11) @[Bitwise.scala 103:31]
    node _shout_l_T_14 = bits(_shout_l_T_8, 23, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_15 = shl(_shout_l_T_14, 8) @[Bitwise.scala 103:65]
    node _shout_l_T_16 = not(_shout_l_T_11) @[Bitwise.scala 103:77]
    node _shout_l_T_17 = and(_shout_l_T_15, _shout_l_T_16) @[Bitwise.scala 103:75]
    node _shout_l_T_18 = or(_shout_l_T_13, _shout_l_T_17) @[Bitwise.scala 103:39]
    node _shout_l_T_19 = bits(_shout_l_T_11, 27, 0) @[Bitwise.scala 102:28]
    node _shout_l_T_20 = shl(_shout_l_T_19, 4) @[Bitwise.scala 102:47]
    node _shout_l_T_21 = xor(_shout_l_T_11, _shout_l_T_20) @[Bitwise.scala 102:21]
    node _shout_l_T_22 = shr(_shout_l_T_18, 4) @[Bitwise.scala 103:21]
    node _shout_l_T_23 = and(_shout_l_T_22, _shout_l_T_21) @[Bitwise.scala 103:31]
    node _shout_l_T_24 = bits(_shout_l_T_18, 27, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_25 = shl(_shout_l_T_24, 4) @[Bitwise.scala 103:65]
    node _shout_l_T_26 = not(_shout_l_T_21) @[Bitwise.scala 103:77]
    node _shout_l_T_27 = and(_shout_l_T_25, _shout_l_T_26) @[Bitwise.scala 103:75]
    node _shout_l_T_28 = or(_shout_l_T_23, _shout_l_T_27) @[Bitwise.scala 103:39]
    node _shout_l_T_29 = bits(_shout_l_T_21, 29, 0) @[Bitwise.scala 102:28]
    node _shout_l_T_30 = shl(_shout_l_T_29, 2) @[Bitwise.scala 102:47]
    node _shout_l_T_31 = xor(_shout_l_T_21, _shout_l_T_30) @[Bitwise.scala 102:21]
    node _shout_l_T_32 = shr(_shout_l_T_28, 2) @[Bitwise.scala 103:21]
    node _shout_l_T_33 = and(_shout_l_T_32, _shout_l_T_31) @[Bitwise.scala 103:31]
    node _shout_l_T_34 = bits(_shout_l_T_28, 29, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_35 = shl(_shout_l_T_34, 2) @[Bitwise.scala 103:65]
    node _shout_l_T_36 = not(_shout_l_T_31) @[Bitwise.scala 103:77]
    node _shout_l_T_37 = and(_shout_l_T_35, _shout_l_T_36) @[Bitwise.scala 103:75]
    node _shout_l_T_38 = or(_shout_l_T_33, _shout_l_T_37) @[Bitwise.scala 103:39]
    node _shout_l_T_39 = bits(_shout_l_T_31, 30, 0) @[Bitwise.scala 102:28]
    node _shout_l_T_40 = shl(_shout_l_T_39, 1) @[Bitwise.scala 102:47]
    node _shout_l_T_41 = xor(_shout_l_T_31, _shout_l_T_40) @[Bitwise.scala 102:21]
    node _shout_l_T_42 = shr(_shout_l_T_38, 1) @[Bitwise.scala 103:21]
    node _shout_l_T_43 = and(_shout_l_T_42, _shout_l_T_41) @[Bitwise.scala 103:31]
    node _shout_l_T_44 = bits(_shout_l_T_38, 30, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_45 = shl(_shout_l_T_44, 1) @[Bitwise.scala 103:65]
    node _shout_l_T_46 = not(_shout_l_T_41) @[Bitwise.scala 103:77]
    node _shout_l_T_47 = and(_shout_l_T_45, _shout_l_T_46) @[Bitwise.scala 103:75]
    node shout_l = or(_shout_l_T_43, _shout_l_T_47) @[Bitwise.scala 103:39]
    node _shout_T = eq(io.fn, UInt<3>("h05")) @[ALU.scala 84:25]
    node _shout_T_1 = eq(io.fn, UInt<4>("h0b")) @[ALU.scala 84:44]
    node _shout_T_2 = or(_shout_T, _shout_T_1) @[ALU.scala 84:35]
    node _shout_T_3 = mux(_shout_T_2, shout_r, UInt<1>("h00")) @[ALU.scala 84:18]
    node _shout_T_4 = eq(io.fn, UInt<1>("h01")) @[ALU.scala 85:25]
    node _shout_T_5 = mux(_shout_T_4, shout_l, UInt<1>("h00")) @[ALU.scala 85:18]
    node shout = or(_shout_T_3, _shout_T_5) @[ALU.scala 84:74]
    node _logic_T = eq(io.fn, UInt<3>("h04")) @[ALU.scala 88:25]
    node _logic_T_1 = eq(io.fn, UInt<3>("h06")) @[ALU.scala 88:45]
    node _logic_T_2 = or(_logic_T, _logic_T_1) @[ALU.scala 88:36]
    node _logic_T_3 = mux(_logic_T_2, in1_xor_in2, UInt<1>("h00")) @[ALU.scala 88:18]
    node _logic_T_4 = eq(io.fn, UInt<3>("h06")) @[ALU.scala 89:25]
    node _logic_T_5 = eq(io.fn, UInt<3>("h07")) @[ALU.scala 89:44]
    node _logic_T_6 = or(_logic_T_4, _logic_T_5) @[ALU.scala 89:35]
    node _logic_T_7 = and(io.in1, io.in2) @[ALU.scala 89:63]
    node _logic_T_8 = mux(_logic_T_6, _logic_T_7, UInt<1>("h00")) @[ALU.scala 89:18]
    node logic = or(_logic_T_3, _logic_T_8) @[ALU.scala 88:78]
    node _shift_logic_T = geq(io.fn, UInt<4>("h0c")) @[ALU.scala 41:30]
    node _shift_logic_T_1 = and(_shift_logic_T, slt) @[ALU.scala 90:35]
    node _shift_logic_T_2 = or(_shift_logic_T_1, logic) @[ALU.scala 90:43]
    node shift_logic = or(_shift_logic_T_2, shout) @[ALU.scala 90:51]
    node _out_T = eq(io.fn, UInt<1>("h00")) @[ALU.scala 91:23]
    node _out_T_1 = eq(io.fn, UInt<4>("h0a")) @[ALU.scala 91:43]
    node _out_T_2 = or(_out_T, _out_T_1) @[ALU.scala 91:34]
    node out = mux(_out_T_2, io.adder_out, shift_logic) @[ALU.scala 91:16]
    io.out <= out @[ALU.scala 93:10]
    
  module MulDiv : 
    input clock : Clock
    input reset : Reset
    output io : {flip req : {flip ready : UInt<1>, valid : UInt<1>, bits : {fn : UInt<4>, dw : UInt<1>, in1 : UInt<32>, in2 : UInt<32>, tag : UInt<5>}}, flip kill : UInt<1>, resp : {flip ready : UInt<1>, valid : UInt<1>, bits : {data : UInt<32>, tag : UInt<5>}}}
    
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[Multiplier.scala 52:22]
    reg req : {fn : UInt<4>, dw : UInt<1>, in1 : UInt<32>, in2 : UInt<32>, tag : UInt<5>}, clock @[Multiplier.scala 54:16]
    reg count : UInt<6>, clock @[Multiplier.scala 55:18]
    reg neg_out : UInt<1>, clock @[Multiplier.scala 58:20]
    reg isHi : UInt<1>, clock @[Multiplier.scala 59:17]
    reg resHi : UInt<1>, clock @[Multiplier.scala 60:18]
    reg divisor : UInt<33>, clock @[Multiplier.scala 61:20]
    reg remainder : UInt<66>, clock @[Multiplier.scala 62:22]
    node _T = and(io.req.bits.fn, UInt<3>("h04")) @[Decode.scala 14:65]
    node _T_1 = eq(_T, UInt<3>("h00")) @[Decode.scala 14:121]
    node _T_2 = or(UInt<1>("h00"), _T_1) @[Decode.scala 15:30]
    node _T_3 = and(io.req.bits.fn, UInt<3>("h05")) @[Decode.scala 14:65]
    node _T_4 = eq(_T_3, UInt<3>("h01")) @[Decode.scala 14:121]
    node _T_5 = and(io.req.bits.fn, UInt<3>("h02")) @[Decode.scala 14:65]
    node _T_6 = eq(_T_5, UInt<3>("h02")) @[Decode.scala 14:121]
    node _T_7 = or(UInt<1>("h00"), _T_4) @[Decode.scala 15:30]
    node _T_8 = or(_T_7, _T_6) @[Decode.scala 15:30]
    node _T_9 = and(io.req.bits.fn, UInt<3>("h06")) @[Decode.scala 14:65]
    node _T_10 = eq(_T_9, UInt<3>("h00")) @[Decode.scala 14:121]
    node _T_11 = and(io.req.bits.fn, UInt<3>("h01")) @[Decode.scala 14:65]
    node _T_12 = eq(_T_11, UInt<3>("h00")) @[Decode.scala 14:121]
    node _T_13 = or(UInt<1>("h00"), _T_10) @[Decode.scala 15:30]
    node _T_14 = or(_T_13, _T_12) @[Decode.scala 15:30]
    node _T_15 = and(io.req.bits.fn, UInt<3>("h05")) @[Decode.scala 14:65]
    node _T_16 = eq(_T_15, UInt<3>("h04")) @[Decode.scala 14:121]
    node _T_17 = or(UInt<1>("h00"), _T_10) @[Decode.scala 15:30]
    node _T_18 = or(_T_17, _T_16) @[Decode.scala 15:30]
    node cmdMul = bits(_T_2, 0, 0) @[Multiplier.scala 76:107]
    node cmdHi = bits(_T_8, 0, 0) @[Multiplier.scala 76:107]
    node lhsSigned = bits(_T_14, 0, 0) @[Multiplier.scala 76:107]
    node rhsSigned = bits(_T_18, 0, 0) @[Multiplier.scala 76:107]
    node _T_19 = eq(io.req.bits.dw, UInt<1>("h00")) @[Multiplier.scala 79:60]
    node _T_20 = and(UInt<1>("h00"), _T_19) @[Multiplier.scala 79:50]
    node _sign_T = bits(io.req.bits.in1, 15, 15) @[Multiplier.scala 82:38]
    node _sign_T_1 = bits(io.req.bits.in1, 31, 31) @[Multiplier.scala 82:48]
    node _sign_T_2 = mux(_T_20, _sign_T, _sign_T_1) @[Multiplier.scala 82:29]
    node lhs_sign = and(lhsSigned, _sign_T_2) @[Multiplier.scala 82:23]
    node _hi_T = bits(lhs_sign, 0, 0) @[Bitwise.scala 72:15]
    node _hi_T_1 = mux(_hi_T, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _hi_T_2 = bits(io.req.bits.in1, 31, 16) @[Multiplier.scala 83:43]
    node hi = mux(_T_20, _hi_T_1, _hi_T_2) @[Multiplier.scala 83:17]
    node lo = bits(io.req.bits.in1, 15, 0) @[Multiplier.scala 84:15]
    node lhs_in = cat(hi, lo) @[Cat.scala 30:58]
    node _T_21 = eq(io.req.bits.dw, UInt<1>("h00")) @[Multiplier.scala 79:60]
    node _T_22 = and(UInt<1>("h00"), _T_21) @[Multiplier.scala 79:50]
    node _sign_T_3 = bits(io.req.bits.in2, 15, 15) @[Multiplier.scala 82:38]
    node _sign_T_4 = bits(io.req.bits.in2, 31, 31) @[Multiplier.scala 82:48]
    node _sign_T_5 = mux(_T_22, _sign_T_3, _sign_T_4) @[Multiplier.scala 82:29]
    node rhs_sign = and(rhsSigned, _sign_T_5) @[Multiplier.scala 82:23]
    node _hi_T_3 = bits(rhs_sign, 0, 0) @[Bitwise.scala 72:15]
    node _hi_T_4 = mux(_hi_T_3, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _hi_T_5 = bits(io.req.bits.in2, 31, 16) @[Multiplier.scala 83:43]
    node hi_1 = mux(_T_22, _hi_T_4, _hi_T_5) @[Multiplier.scala 83:17]
    node lo_1 = bits(io.req.bits.in2, 15, 0) @[Multiplier.scala 84:15]
    node rhs_in = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _subtractor_T = bits(remainder, 64, 32) @[Multiplier.scala 89:29]
    node _subtractor_T_1 = sub(_subtractor_T, divisor) @[Multiplier.scala 89:37]
    node subtractor = tail(_subtractor_T_1, 1) @[Multiplier.scala 89:37]
    node _result_T = bits(remainder, 64, 33) @[Multiplier.scala 90:36]
    node _result_T_1 = bits(remainder, 31, 0) @[Multiplier.scala 90:57]
    node result = mux(resHi, _result_T, _result_T_1) @[Multiplier.scala 90:19]
    node _negated_remainder_T = sub(UInt<1>("h00"), result) @[Multiplier.scala 91:27]
    node negated_remainder = tail(_negated_remainder_T, 1) @[Multiplier.scala 91:27]
    node _T_23 = eq(state, UInt<3>("h01")) @[Multiplier.scala 93:39]
    when _T_23 : @[Multiplier.scala 93:57]
      node _T_24 = bits(remainder, 31, 31) @[Multiplier.scala 94:20]
      when _T_24 : @[Multiplier.scala 94:27]
        remainder <= negated_remainder @[Multiplier.scala 95:17]
        skip @[Multiplier.scala 94:27]
      node _T_25 = bits(divisor, 31, 31) @[Multiplier.scala 97:18]
      when _T_25 : @[Multiplier.scala 97:25]
        divisor <= subtractor @[Multiplier.scala 98:15]
        skip @[Multiplier.scala 97:25]
      state <= UInt<3>("h03") @[Multiplier.scala 100:11]
      skip @[Multiplier.scala 93:57]
    node _T_26 = eq(state, UInt<3>("h05")) @[Multiplier.scala 102:39]
    when _T_26 : @[Multiplier.scala 102:57]
      remainder <= negated_remainder @[Multiplier.scala 103:15]
      state <= UInt<3>("h07") @[Multiplier.scala 104:11]
      resHi <= UInt<1>("h00") @[Multiplier.scala 105:11]
      skip @[Multiplier.scala 102:57]
    node _T_27 = eq(state, UInt<3>("h02")) @[Multiplier.scala 107:39]
    when _T_27 : @[Multiplier.scala 107:50]
      node mulReg_hi = bits(remainder, 65, 33) @[Multiplier.scala 108:31]
      node mulReg_lo = bits(remainder, 31, 0) @[Multiplier.scala 108:55]
      node mulReg = cat(mulReg_hi, mulReg_lo) @[Cat.scala 30:58]
      node prod_hi = bits(remainder, 32, 32) @[Multiplier.scala 109:31]
      node mplier = bits(mulReg, 31, 0) @[Multiplier.scala 110:24]
      node _accum_T = bits(mulReg, 64, 32) @[Multiplier.scala 111:23]
      node accum = asSInt(_accum_T) @[Multiplier.scala 111:37]
      node mpcand = asSInt(divisor) @[Multiplier.scala 112:26]
      node prod_lo = bits(mplier, 7, 0) @[Multiplier.scala 113:38]
      node _prod_T = cat(prod_hi, prod_lo) @[Cat.scala 30:58]
      node _prod_T_1 = asSInt(_prod_T) @[Multiplier.scala 113:60]
      node _prod_T_2 = mul(_prod_T_1, mpcand) @[Multiplier.scala 113:67]
      node _prod_T_3 = add(_prod_T_2, accum) @[Multiplier.scala 113:76]
      node _prod_T_4 = tail(_prod_T_3, 1) @[Multiplier.scala 113:76]
      node prod = asSInt(_prod_T_4) @[Multiplier.scala 113:76]
      node nextMulReg_lo = bits(mplier, 31, 8) @[Multiplier.scala 114:38]
      node nextMulReg_hi = asUInt(prod) @[Cat.scala 30:58]
      node nextMulReg = cat(nextMulReg_hi, nextMulReg_lo) @[Cat.scala 30:58]
      node _nextMplierSign_T = eq(count, UInt<2>("h02")) @[Multiplier.scala 115:32]
      node remainder_hi_lo = and(_nextMplierSign_T, neg_out) @[Multiplier.scala 115:57]
      node _eOutMask_T = mul(count, UInt<4>("h08")) @[Multiplier.scala 117:54]
      node _eOutMask_T_1 = bits(_eOutMask_T, 4, 0) @[Multiplier.scala 117:70]
      node _eOutMask_T_2 = dshr(asSInt(UInt<33>("h0100000000")), _eOutMask_T_1) @[Multiplier.scala 117:44]
      node eOutMask = bits(_eOutMask_T_2, 31, 0) @[Multiplier.scala 117:89]
      node _eOut_T = neq(count, UInt<2>("h03")) @[Multiplier.scala 118:45]
      node _eOut_T_1 = and(UInt<1>("h00"), _eOut_T) @[Multiplier.scala 118:36]
      node _eOut_T_2 = neq(count, UInt<1>("h00")) @[Multiplier.scala 118:79]
      node _eOut_T_3 = and(_eOut_T_1, _eOut_T_2) @[Multiplier.scala 118:70]
      node _eOut_T_4 = eq(isHi, UInt<1>("h00")) @[Multiplier.scala 119:7]
      node _eOut_T_5 = and(_eOut_T_3, _eOut_T_4) @[Multiplier.scala 118:85]
      node _eOut_T_6 = not(eOutMask) @[Multiplier.scala 119:26]
      node _eOut_T_7 = and(mplier, _eOut_T_6) @[Multiplier.scala 119:24]
      node _eOut_T_8 = eq(_eOut_T_7, UInt<1>("h00")) @[Multiplier.scala 119:37]
      node eOut = and(_eOut_T_5, _eOut_T_8) @[Multiplier.scala 119:13]
      node _eOutRes_T = mul(count, UInt<4>("h08")) @[Multiplier.scala 120:44]
      node _eOutRes_T_1 = sub(UInt<6>("h020"), _eOutRes_T) @[Multiplier.scala 120:36]
      node _eOutRes_T_2 = tail(_eOutRes_T_1, 1) @[Multiplier.scala 120:36]
      node _eOutRes_T_3 = bits(_eOutRes_T_2, 4, 0) @[Multiplier.scala 120:60]
      node eOutRes = dshr(mulReg, _eOutRes_T_3) @[Multiplier.scala 120:27]
      node nextMulReg1_hi = bits(nextMulReg, 64, 32) @[Multiplier.scala 121:37]
      node _nextMulReg1_T = mux(eOut, eOutRes, nextMulReg) @[Multiplier.scala 121:55]
      node nextMulReg1_lo = bits(_nextMulReg1_T, 31, 0) @[Multiplier.scala 121:82]
      node nextMulReg1 = cat(nextMulReg1_hi, nextMulReg1_lo) @[Cat.scala 30:58]
      node remainder_hi_hi = shr(nextMulReg1, 32) @[Multiplier.scala 122:34]
      node remainder_lo = bits(nextMulReg1, 31, 0) @[Multiplier.scala 122:67]
      node remainder_hi = cat(remainder_hi_hi, remainder_hi_lo) @[Cat.scala 30:58]
      node _remainder_T = cat(remainder_hi, remainder_lo) @[Cat.scala 30:58]
      remainder <= _remainder_T @[Multiplier.scala 122:15]
      node _count_T = add(count, UInt<1>("h01")) @[Multiplier.scala 124:20]
      node _count_T_1 = tail(_count_T, 1) @[Multiplier.scala 124:20]
      count <= _count_T_1 @[Multiplier.scala 124:11]
      node _T_28 = eq(count, UInt<2>("h03")) @[Multiplier.scala 125:25]
      node _T_29 = or(eOut, _T_28) @[Multiplier.scala 125:16]
      when _T_29 : @[Multiplier.scala 125:51]
        state <= UInt<3>("h06") @[Multiplier.scala 126:13]
        resHi <= isHi @[Multiplier.scala 127:13]
        skip @[Multiplier.scala 125:51]
      skip @[Multiplier.scala 107:50]
    node _T_30 = eq(state, UInt<3>("h03")) @[Multiplier.scala 130:39]
    when _T_30 : @[Multiplier.scala 130:50]
      node unrolls_less = bits(subtractor, 32, 32) @[Multiplier.scala 134:28]
      node _unrolls_T = bits(remainder, 63, 32) @[Multiplier.scala 135:24]
      node _unrolls_T_1 = bits(subtractor, 31, 0) @[Multiplier.scala 135:45]
      node unrolls_hi_hi = mux(unrolls_less, _unrolls_T, _unrolls_T_1) @[Multiplier.scala 135:14]
      node unrolls_hi_lo = bits(remainder, 31, 0) @[Multiplier.scala 135:58]
      node unrolls_lo = eq(unrolls_less, UInt<1>("h00")) @[Multiplier.scala 135:67]
      node unrolls_hi = cat(unrolls_hi_hi, unrolls_hi_lo) @[Cat.scala 30:58]
      node unrolls_0 = cat(unrolls_hi, unrolls_lo) @[Cat.scala 30:58]
      remainder <= unrolls_0 @[Multiplier.scala 138:15]
      node _T_31 = eq(count, UInt<6>("h020")) @[Multiplier.scala 139:17]
      when _T_31 : @[Multiplier.scala 139:38]
        node _state_T = mux(neg_out, UInt<3>("h05"), UInt<3>("h07")) @[Multiplier.scala 140:19]
        state <= _state_T @[Multiplier.scala 140:13]
        resHi <= isHi @[Multiplier.scala 141:13]
        skip @[Multiplier.scala 139:38]
      node _count_T_2 = add(count, UInt<1>("h01")) @[Multiplier.scala 145:20]
      node _count_T_3 = tail(_count_T_2, 1) @[Multiplier.scala 145:20]
      count <= _count_T_3 @[Multiplier.scala 145:11]
      node _divby0_T = eq(count, UInt<1>("h00")) @[Multiplier.scala 147:24]
      node _divby0_T_1 = bits(subtractor, 32, 32) @[Multiplier.scala 147:44]
      node _divby0_T_2 = eq(_divby0_T_1, UInt<1>("h00")) @[Multiplier.scala 147:33]
      node divby0 = and(_divby0_T, _divby0_T_2) @[Multiplier.scala 147:30]
      node _T_32 = eq(isHi, UInt<1>("h00")) @[Multiplier.scala 160:21]
      node _T_33 = and(divby0, _T_32) @[Multiplier.scala 160:18]
      when _T_33 : @[Multiplier.scala 160:28]
        neg_out <= UInt<1>("h00") @[Multiplier.scala 160:38]
        skip @[Multiplier.scala 160:28]
      skip @[Multiplier.scala 130:50]
    node _T_34 = and(io.resp.ready, io.resp.valid) @[Decoupled.scala 40:37]
    node _T_35 = or(_T_34, io.kill) @[Multiplier.scala 162:24]
    when _T_35 : @[Multiplier.scala 162:36]
      state <= UInt<3>("h00") @[Multiplier.scala 163:11]
      skip @[Multiplier.scala 162:36]
    node _T_36 = and(io.req.ready, io.req.valid) @[Decoupled.scala 40:37]
    when _T_36 : @[Multiplier.scala 165:24]
      node _state_T_1 = or(lhs_sign, rhs_sign) @[Multiplier.scala 166:46]
      node _state_T_2 = mux(_state_T_1, UInt<3>("h01"), UInt<3>("h03")) @[Multiplier.scala 166:36]
      node _state_T_3 = mux(cmdMul, UInt<3>("h02"), _state_T_2) @[Multiplier.scala 166:17]
      state <= _state_T_3 @[Multiplier.scala 166:11]
      isHi <= cmdHi @[Multiplier.scala 167:10]
      resHi <= UInt<1>("h00") @[Multiplier.scala 168:11]
      node _count_T_4 = eq(io.req.bits.dw, UInt<1>("h00")) @[Multiplier.scala 79:60]
      node _count_T_5 = and(UInt<1>("h00"), _count_T_4) @[Multiplier.scala 79:50]
      node _count_T_6 = and(cmdMul, _count_T_5) @[Multiplier.scala 169:46]
      node _count_T_7 = mux(_count_T_6, UInt<2>("h02"), UInt<1>("h00")) @[Multiplier.scala 169:38]
      count <= _count_T_7 @[Multiplier.scala 169:11]
      node _neg_out_T = neq(lhs_sign, rhs_sign) @[Multiplier.scala 170:46]
      node _neg_out_T_1 = mux(cmdHi, lhs_sign, _neg_out_T) @[Multiplier.scala 170:19]
      neg_out <= _neg_out_T_1 @[Multiplier.scala 170:13]
      node _divisor_T = cat(rhs_sign, rhs_in) @[Cat.scala 30:58]
      divisor <= _divisor_T @[Multiplier.scala 171:13]
      remainder <= lhs_in @[Multiplier.scala 172:15]
      req.tag <= io.req.bits.tag @[Multiplier.scala 173:9]
      req.in2 <= io.req.bits.in2 @[Multiplier.scala 173:9]
      req.in1 <= io.req.bits.in1 @[Multiplier.scala 173:9]
      req.dw <= io.req.bits.dw @[Multiplier.scala 173:9]
      req.fn <= io.req.bits.fn @[Multiplier.scala 173:9]
      skip @[Multiplier.scala 165:24]
    node _outMul_T = xor(UInt<3>("h06"), UInt<3>("h07")) @[Multiplier.scala 176:37]
    node _outMul_T_1 = and(state, _outMul_T) @[Multiplier.scala 176:23]
    node _outMul_T_2 = not(UInt<3>("h07")) @[Multiplier.scala 176:70]
    node _outMul_T_3 = and(UInt<3>("h06"), _outMul_T_2) @[Multiplier.scala 176:68]
    node outMul = eq(_outMul_T_1, _outMul_T_3) @[Multiplier.scala 176:52]
    node _loOut_T = eq(req.dw, UInt<1>("h00")) @[Multiplier.scala 79:60]
    node _loOut_T_1 = and(UInt<1>("h00"), _loOut_T) @[Multiplier.scala 79:50]
    node _loOut_T_2 = and(UInt<1>("h01"), _loOut_T_1) @[Multiplier.scala 177:30]
    node _loOut_T_3 = and(_loOut_T_2, outMul) @[Multiplier.scala 177:48]
    node _loOut_T_4 = bits(result, 31, 16) @[Multiplier.scala 177:65]
    node _loOut_T_5 = bits(result, 15, 0) @[Multiplier.scala 177:82]
    node loOut = mux(_loOut_T_3, _loOut_T_4, _loOut_T_5) @[Multiplier.scala 177:18]
    node _hiOut_T = eq(req.dw, UInt<1>("h00")) @[Multiplier.scala 79:60]
    node _hiOut_T_1 = and(UInt<1>("h00"), _hiOut_T) @[Multiplier.scala 79:50]
    node _hiOut_T_2 = bits(loOut, 15, 15) @[Multiplier.scala 178:50]
    node _hiOut_T_3 = bits(_hiOut_T_2, 0, 0) @[Bitwise.scala 72:15]
    node _hiOut_T_4 = mux(_hiOut_T_3, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
    node _hiOut_T_5 = bits(result, 31, 16) @[Multiplier.scala 178:66]
    node hiOut = mux(_hiOut_T_1, _hiOut_T_4, _hiOut_T_5) @[Multiplier.scala 178:18]
    io.resp.bits.tag <= req.tag @[Multiplier.scala 179:20]
    node _io_resp_bits_data_T = cat(hiOut, loOut) @[Cat.scala 30:58]
    io.resp.bits.data <= _io_resp_bits_data_T @[Multiplier.scala 181:21]
    node _io_resp_valid_T = eq(state, UInt<3>("h06")) @[Multiplier.scala 182:27]
    node _io_resp_valid_T_1 = eq(state, UInt<3>("h07")) @[Multiplier.scala 182:51]
    node _io_resp_valid_T_2 = or(_io_resp_valid_T, _io_resp_valid_T_1) @[Multiplier.scala 182:42]
    io.resp.valid <= _io_resp_valid_T_2 @[Multiplier.scala 182:17]
    node _io_req_ready_T = eq(state, UInt<3>("h00")) @[Multiplier.scala 183:25]
    io.req.ready <= _io_req_ready_T @[Multiplier.scala 183:16]
    
  module PlusArgTimeout : 
    input clock : Clock
    input reset : Reset
    output io : {flip count : UInt<32>}
    
    inst plusarg_reader of plusarg_reader @[PlusArg.scala 62:19]
    plusarg_reader.out is invalid
    node _T = gt(plusarg_reader.out, UInt<1>("h00")) @[PlusArg.scala 63:13]
    when _T : @[PlusArg.scala 63:20]
      node _T_1 = lt(io.count, plusarg_reader.out) @[PlusArg.scala 64:22]
      node _T_2 = asUInt(reset) @[PlusArg.scala 64:12]
      node _T_3 = or(_T_1, _T_2) @[PlusArg.scala 64:12]
      node _T_4 = eq(_T_3, UInt<1>("h00")) @[PlusArg.scala 64:12]
      when _T_4 : @[PlusArg.scala 64:12]
        printf(clock, UInt<1>(1), "Assertion failed: Timeout exceeded: Kill the emulation after INT rdtime cycles. Off if 0.\n    at PlusArg.scala:64 assert (io.count < max, s\"Timeout exceeded: $docstring\")\n") @[PlusArg.scala 64:12]
        stop(clock, UInt<1>(1), 1) @[PlusArg.scala 64:12]
        skip @[PlusArg.scala 64:12]
      skip @[PlusArg.scala 63:20]
    
  module OptimizationBarrier : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module PMPChecker : 
    input clock : Clock
    input reset : Reset
    output io : {flip prv : UInt<2>, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip addr : UInt<32>, flip size : UInt<2>, r : UInt<1>, w : UInt<1>, x : UInt<1>}
    
    node default = gt(io.prv, UInt<1>("h01")) @[PMP.scala 157:56]
    wire _pmp0_WIRE : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 158:35]
    _pmp0_WIRE.mask <= UInt<32>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.addr <= UInt<30>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.r <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.w <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.x <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.a <= UInt<2>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.res <= UInt<2>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.l <= UInt<1>("h00") @[PMP.scala 158:35]
    wire pmp0 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    pmp0.mask <= _pmp0_WIRE.mask
    pmp0.addr <= _pmp0_WIRE.addr
    pmp0.cfg.r <= _pmp0_WIRE.cfg.r
    pmp0.cfg.w <= _pmp0_WIRE.cfg.w
    pmp0.cfg.x <= _pmp0_WIRE.cfg.x
    pmp0.cfg.a <= _pmp0_WIRE.cfg.a
    pmp0.cfg.res <= _pmp0_WIRE.cfg.res
    pmp0.cfg.l <= _pmp0_WIRE.cfg.l
    pmp0.cfg.r <= default @[PMP.scala 159:14]
    pmp0.cfg.w <= default @[PMP.scala 160:14]
    pmp0.cfg.x <= default @[PMP.scala 161:14]
    node _res_hit_T = bits(io.pmp[7].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_1 = shl(io.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_2 = not(_res_hit_T_1) @[PMP.scala 62:29]
    node _res_hit_T_3 = or(_res_hit_T_2, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_4 = not(_res_hit_T_3) @[PMP.scala 62:27]
    node _res_hit_T_5 = xor(io.addr, _res_hit_T_4) @[PMP.scala 65:47]
    node _res_hit_T_6 = not(io.pmp[7].mask) @[PMP.scala 65:54]
    node _res_hit_T_7 = and(_res_hit_T_5, _res_hit_T_6) @[PMP.scala 65:52]
    node _res_hit_T_8 = eq(_res_hit_T_7, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_9 = bits(io.pmp[7].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_10 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_11 = dshl(_res_hit_T_10, io.size) @[package.scala 234:77]
    node _res_hit_T_12 = bits(_res_hit_T_11, 1, 0) @[package.scala 234:82]
    node _res_hit_T_13 = not(_res_hit_T_12) @[package.scala 234:46]
    node _res_hit_T_14 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_15 = not(_res_hit_T_14) @[PMP.scala 62:29]
    node _res_hit_T_16 = or(_res_hit_T_15, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_17 = not(_res_hit_T_16) @[PMP.scala 62:27]
    node _res_hit_T_18 = lt(io.addr, _res_hit_T_17) @[PMP.scala 79:9]
    node _res_hit_T_19 = eq(_res_hit_T_18, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_20 = shl(io.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_21 = not(_res_hit_T_20) @[PMP.scala 62:29]
    node _res_hit_T_22 = or(_res_hit_T_21, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_23 = not(_res_hit_T_22) @[PMP.scala 62:27]
    node _res_hit_T_24 = lt(io.addr, _res_hit_T_23) @[PMP.scala 79:9]
    node _res_hit_T_25 = and(_res_hit_T_19, _res_hit_T_24) @[PMP.scala 96:48]
    node _res_hit_T_26 = and(_res_hit_T_9, _res_hit_T_25) @[PMP.scala 134:61]
    node res_hit = mux(_res_hit_T, _res_hit_T_8, _res_hit_T_26) @[PMP.scala 134:8]
    node _res_ignore_T = eq(io.pmp[7].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore = and(default, _res_ignore_T) @[PMP.scala 165:26]
    node _res_T = eq(io.pmp[7].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_1 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_2 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_3 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_4 = eq(io.pmp[7].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_5 = cat(res_hi, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_6 = eq(_res_T_5, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_1 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_7 = cat(res_hi_1, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_8 = eq(_res_T_7, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_2 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_9 = cat(res_hi_2, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_10 = eq(_res_T_9, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_3 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_11 = cat(res_hi_3, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_12 = eq(_res_T_11, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_4 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_13 = cat(res_hi_4, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_14 = eq(_res_T_13, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_5 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_15 = cat(res_hi_5, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_16 = eq(_res_T_15, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_17 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_18 = and(_res_T_17, res_hit) @[PMP.scala 178:23]
    node _res_T_19 = and(_res_T_18, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_20 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_21 = and(_res_T_19, _res_T_20) @[PMP.scala 178:41]
    node _res_T_22 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_23 = and(_res_T_22, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_24 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_25 = and(_res_T_23, _res_T_24) @[PMP.scala 179:43]
    node _res_T_26 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_27 = and(_res_T_26, res_hit) @[PMP.scala 178:23]
    node _res_T_28 = and(_res_T_27, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_29 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_30 = and(_res_T_28, _res_T_29) @[PMP.scala 178:41]
    node _res_T_31 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_32 = and(_res_T_31, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_33 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_34 = and(_res_T_32, _res_T_33) @[PMP.scala 179:43]
    node _res_T_35 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_36 = and(_res_T_35, res_hit) @[PMP.scala 178:23]
    node _res_T_37 = and(_res_T_36, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_38 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_39 = and(_res_T_37, _res_T_38) @[PMP.scala 178:41]
    node _res_T_40 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_41 = and(_res_T_40, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_42 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_43 = and(_res_T_41, _res_T_42) @[PMP.scala 179:43]
    wire res_cur : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur.mask <= io.pmp[7].mask
    res_cur.addr <= io.pmp[7].addr
    res_cur.cfg.r <= io.pmp[7].cfg.r
    res_cur.cfg.w <= io.pmp[7].cfg.w
    res_cur.cfg.x <= io.pmp[7].cfg.x
    res_cur.cfg.a <= io.pmp[7].cfg.a
    res_cur.cfg.res <= io.pmp[7].cfg.res
    res_cur.cfg.l <= io.pmp[7].cfg.l
    node _res_cur_cfg_r_T = or(io.pmp[7].cfg.r, res_ignore) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_1 = and(UInt<1>("h01"), _res_cur_cfg_r_T) @[PMP.scala 183:26]
    res_cur.cfg.r <= _res_cur_cfg_r_T_1 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T = or(io.pmp[7].cfg.w, res_ignore) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_1 = and(UInt<1>("h01"), _res_cur_cfg_w_T) @[PMP.scala 184:26]
    res_cur.cfg.w <= _res_cur_cfg_w_T_1 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T = or(io.pmp[7].cfg.x, res_ignore) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_1 = and(UInt<1>("h01"), _res_cur_cfg_x_T) @[PMP.scala 185:26]
    res_cur.cfg.x <= _res_cur_cfg_x_T_1 @[PMP.scala 185:15]
    node _res_T_44 = mux(res_hit, res_cur, pmp0) @[PMP.scala 186:8]
    node _res_hit_T_27 = bits(io.pmp[6].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_28 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_29 = not(_res_hit_T_28) @[PMP.scala 62:29]
    node _res_hit_T_30 = or(_res_hit_T_29, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_31 = not(_res_hit_T_30) @[PMP.scala 62:27]
    node _res_hit_T_32 = xor(io.addr, _res_hit_T_31) @[PMP.scala 65:47]
    node _res_hit_T_33 = not(io.pmp[6].mask) @[PMP.scala 65:54]
    node _res_hit_T_34 = and(_res_hit_T_32, _res_hit_T_33) @[PMP.scala 65:52]
    node _res_hit_T_35 = eq(_res_hit_T_34, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_36 = bits(io.pmp[6].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_37 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_38 = dshl(_res_hit_T_37, io.size) @[package.scala 234:77]
    node _res_hit_T_39 = bits(_res_hit_T_38, 1, 0) @[package.scala 234:82]
    node _res_hit_T_40 = not(_res_hit_T_39) @[package.scala 234:46]
    node _res_hit_T_41 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_42 = not(_res_hit_T_41) @[PMP.scala 62:29]
    node _res_hit_T_43 = or(_res_hit_T_42, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_44 = not(_res_hit_T_43) @[PMP.scala 62:27]
    node _res_hit_T_45 = lt(io.addr, _res_hit_T_44) @[PMP.scala 79:9]
    node _res_hit_T_46 = eq(_res_hit_T_45, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_47 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_48 = not(_res_hit_T_47) @[PMP.scala 62:29]
    node _res_hit_T_49 = or(_res_hit_T_48, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_50 = not(_res_hit_T_49) @[PMP.scala 62:27]
    node _res_hit_T_51 = lt(io.addr, _res_hit_T_50) @[PMP.scala 79:9]
    node _res_hit_T_52 = and(_res_hit_T_46, _res_hit_T_51) @[PMP.scala 96:48]
    node _res_hit_T_53 = and(_res_hit_T_36, _res_hit_T_52) @[PMP.scala 134:61]
    node res_hit_1 = mux(_res_hit_T_27, _res_hit_T_35, _res_hit_T_53) @[PMP.scala 134:8]
    node _res_ignore_T_1 = eq(io.pmp[6].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_1 = and(default, _res_ignore_T_1) @[PMP.scala 165:26]
    node _res_T_45 = eq(io.pmp[6].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_46 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_47 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_48 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_49 = eq(io.pmp[6].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_6 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_50 = cat(res_hi_6, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_51 = eq(_res_T_50, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_7 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_52 = cat(res_hi_7, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_53 = eq(_res_T_52, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_8 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_54 = cat(res_hi_8, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_55 = eq(_res_T_54, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_9 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_56 = cat(res_hi_9, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_57 = eq(_res_T_56, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_10 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_58 = cat(res_hi_10, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_59 = eq(_res_T_58, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_11 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_60 = cat(res_hi_11, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_61 = eq(_res_T_60, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_62 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_63 = and(_res_T_62, res_hit_1) @[PMP.scala 178:23]
    node _res_T_64 = and(_res_T_63, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_65 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_66 = and(_res_T_64, _res_T_65) @[PMP.scala 178:41]
    node _res_T_67 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_68 = and(_res_T_67, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_69 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_70 = and(_res_T_68, _res_T_69) @[PMP.scala 179:43]
    node _res_T_71 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_72 = and(_res_T_71, res_hit_1) @[PMP.scala 178:23]
    node _res_T_73 = and(_res_T_72, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_74 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_75 = and(_res_T_73, _res_T_74) @[PMP.scala 178:41]
    node _res_T_76 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_77 = and(_res_T_76, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_78 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_79 = and(_res_T_77, _res_T_78) @[PMP.scala 179:43]
    node _res_T_80 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_81 = and(_res_T_80, res_hit_1) @[PMP.scala 178:23]
    node _res_T_82 = and(_res_T_81, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_83 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_84 = and(_res_T_82, _res_T_83) @[PMP.scala 178:41]
    node _res_T_85 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_86 = and(_res_T_85, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_87 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_88 = and(_res_T_86, _res_T_87) @[PMP.scala 179:43]
    wire res_cur_1 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_1.mask <= io.pmp[6].mask
    res_cur_1.addr <= io.pmp[6].addr
    res_cur_1.cfg.r <= io.pmp[6].cfg.r
    res_cur_1.cfg.w <= io.pmp[6].cfg.w
    res_cur_1.cfg.x <= io.pmp[6].cfg.x
    res_cur_1.cfg.a <= io.pmp[6].cfg.a
    res_cur_1.cfg.res <= io.pmp[6].cfg.res
    res_cur_1.cfg.l <= io.pmp[6].cfg.l
    node _res_cur_cfg_r_T_2 = or(io.pmp[6].cfg.r, res_ignore_1) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_3 = and(UInt<1>("h01"), _res_cur_cfg_r_T_2) @[PMP.scala 183:26]
    res_cur_1.cfg.r <= _res_cur_cfg_r_T_3 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_2 = or(io.pmp[6].cfg.w, res_ignore_1) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_3 = and(UInt<1>("h01"), _res_cur_cfg_w_T_2) @[PMP.scala 184:26]
    res_cur_1.cfg.w <= _res_cur_cfg_w_T_3 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_2 = or(io.pmp[6].cfg.x, res_ignore_1) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_3 = and(UInt<1>("h01"), _res_cur_cfg_x_T_2) @[PMP.scala 185:26]
    res_cur_1.cfg.x <= _res_cur_cfg_x_T_3 @[PMP.scala 185:15]
    node _res_T_89 = mux(res_hit_1, res_cur_1, _res_T_44) @[PMP.scala 186:8]
    node _res_hit_T_54 = bits(io.pmp[5].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_55 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_56 = not(_res_hit_T_55) @[PMP.scala 62:29]
    node _res_hit_T_57 = or(_res_hit_T_56, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_58 = not(_res_hit_T_57) @[PMP.scala 62:27]
    node _res_hit_T_59 = xor(io.addr, _res_hit_T_58) @[PMP.scala 65:47]
    node _res_hit_T_60 = not(io.pmp[5].mask) @[PMP.scala 65:54]
    node _res_hit_T_61 = and(_res_hit_T_59, _res_hit_T_60) @[PMP.scala 65:52]
    node _res_hit_T_62 = eq(_res_hit_T_61, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_63 = bits(io.pmp[5].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_64 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_65 = dshl(_res_hit_T_64, io.size) @[package.scala 234:77]
    node _res_hit_T_66 = bits(_res_hit_T_65, 1, 0) @[package.scala 234:82]
    node _res_hit_T_67 = not(_res_hit_T_66) @[package.scala 234:46]
    node _res_hit_T_68 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_69 = not(_res_hit_T_68) @[PMP.scala 62:29]
    node _res_hit_T_70 = or(_res_hit_T_69, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_71 = not(_res_hit_T_70) @[PMP.scala 62:27]
    node _res_hit_T_72 = lt(io.addr, _res_hit_T_71) @[PMP.scala 79:9]
    node _res_hit_T_73 = eq(_res_hit_T_72, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_74 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_75 = not(_res_hit_T_74) @[PMP.scala 62:29]
    node _res_hit_T_76 = or(_res_hit_T_75, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_77 = not(_res_hit_T_76) @[PMP.scala 62:27]
    node _res_hit_T_78 = lt(io.addr, _res_hit_T_77) @[PMP.scala 79:9]
    node _res_hit_T_79 = and(_res_hit_T_73, _res_hit_T_78) @[PMP.scala 96:48]
    node _res_hit_T_80 = and(_res_hit_T_63, _res_hit_T_79) @[PMP.scala 134:61]
    node res_hit_2 = mux(_res_hit_T_54, _res_hit_T_62, _res_hit_T_80) @[PMP.scala 134:8]
    node _res_ignore_T_2 = eq(io.pmp[5].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_2 = and(default, _res_ignore_T_2) @[PMP.scala 165:26]
    node _res_T_90 = eq(io.pmp[5].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_91 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_92 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_93 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_94 = eq(io.pmp[5].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_12 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_95 = cat(res_hi_12, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_96 = eq(_res_T_95, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_13 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_97 = cat(res_hi_13, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_98 = eq(_res_T_97, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_14 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_99 = cat(res_hi_14, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_100 = eq(_res_T_99, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_15 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_101 = cat(res_hi_15, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_102 = eq(_res_T_101, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_16 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_103 = cat(res_hi_16, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_104 = eq(_res_T_103, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_17 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_105 = cat(res_hi_17, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_106 = eq(_res_T_105, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_107 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_108 = and(_res_T_107, res_hit_2) @[PMP.scala 178:23]
    node _res_T_109 = and(_res_T_108, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_110 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_111 = and(_res_T_109, _res_T_110) @[PMP.scala 178:41]
    node _res_T_112 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_113 = and(_res_T_112, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_114 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_115 = and(_res_T_113, _res_T_114) @[PMP.scala 179:43]
    node _res_T_116 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_117 = and(_res_T_116, res_hit_2) @[PMP.scala 178:23]
    node _res_T_118 = and(_res_T_117, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_119 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_120 = and(_res_T_118, _res_T_119) @[PMP.scala 178:41]
    node _res_T_121 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_122 = and(_res_T_121, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_123 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_124 = and(_res_T_122, _res_T_123) @[PMP.scala 179:43]
    node _res_T_125 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_126 = and(_res_T_125, res_hit_2) @[PMP.scala 178:23]
    node _res_T_127 = and(_res_T_126, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_128 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_129 = and(_res_T_127, _res_T_128) @[PMP.scala 178:41]
    node _res_T_130 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_131 = and(_res_T_130, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_132 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_133 = and(_res_T_131, _res_T_132) @[PMP.scala 179:43]
    wire res_cur_2 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_2.mask <= io.pmp[5].mask
    res_cur_2.addr <= io.pmp[5].addr
    res_cur_2.cfg.r <= io.pmp[5].cfg.r
    res_cur_2.cfg.w <= io.pmp[5].cfg.w
    res_cur_2.cfg.x <= io.pmp[5].cfg.x
    res_cur_2.cfg.a <= io.pmp[5].cfg.a
    res_cur_2.cfg.res <= io.pmp[5].cfg.res
    res_cur_2.cfg.l <= io.pmp[5].cfg.l
    node _res_cur_cfg_r_T_4 = or(io.pmp[5].cfg.r, res_ignore_2) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_5 = and(UInt<1>("h01"), _res_cur_cfg_r_T_4) @[PMP.scala 183:26]
    res_cur_2.cfg.r <= _res_cur_cfg_r_T_5 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_4 = or(io.pmp[5].cfg.w, res_ignore_2) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_5 = and(UInt<1>("h01"), _res_cur_cfg_w_T_4) @[PMP.scala 184:26]
    res_cur_2.cfg.w <= _res_cur_cfg_w_T_5 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_4 = or(io.pmp[5].cfg.x, res_ignore_2) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_5 = and(UInt<1>("h01"), _res_cur_cfg_x_T_4) @[PMP.scala 185:26]
    res_cur_2.cfg.x <= _res_cur_cfg_x_T_5 @[PMP.scala 185:15]
    node _res_T_134 = mux(res_hit_2, res_cur_2, _res_T_89) @[PMP.scala 186:8]
    node _res_hit_T_81 = bits(io.pmp[4].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_82 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_83 = not(_res_hit_T_82) @[PMP.scala 62:29]
    node _res_hit_T_84 = or(_res_hit_T_83, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_85 = not(_res_hit_T_84) @[PMP.scala 62:27]
    node _res_hit_T_86 = xor(io.addr, _res_hit_T_85) @[PMP.scala 65:47]
    node _res_hit_T_87 = not(io.pmp[4].mask) @[PMP.scala 65:54]
    node _res_hit_T_88 = and(_res_hit_T_86, _res_hit_T_87) @[PMP.scala 65:52]
    node _res_hit_T_89 = eq(_res_hit_T_88, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_90 = bits(io.pmp[4].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_91 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_92 = dshl(_res_hit_T_91, io.size) @[package.scala 234:77]
    node _res_hit_T_93 = bits(_res_hit_T_92, 1, 0) @[package.scala 234:82]
    node _res_hit_T_94 = not(_res_hit_T_93) @[package.scala 234:46]
    node _res_hit_T_95 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_96 = not(_res_hit_T_95) @[PMP.scala 62:29]
    node _res_hit_T_97 = or(_res_hit_T_96, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_98 = not(_res_hit_T_97) @[PMP.scala 62:27]
    node _res_hit_T_99 = lt(io.addr, _res_hit_T_98) @[PMP.scala 79:9]
    node _res_hit_T_100 = eq(_res_hit_T_99, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_101 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_102 = not(_res_hit_T_101) @[PMP.scala 62:29]
    node _res_hit_T_103 = or(_res_hit_T_102, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_104 = not(_res_hit_T_103) @[PMP.scala 62:27]
    node _res_hit_T_105 = lt(io.addr, _res_hit_T_104) @[PMP.scala 79:9]
    node _res_hit_T_106 = and(_res_hit_T_100, _res_hit_T_105) @[PMP.scala 96:48]
    node _res_hit_T_107 = and(_res_hit_T_90, _res_hit_T_106) @[PMP.scala 134:61]
    node res_hit_3 = mux(_res_hit_T_81, _res_hit_T_89, _res_hit_T_107) @[PMP.scala 134:8]
    node _res_ignore_T_3 = eq(io.pmp[4].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_3 = and(default, _res_ignore_T_3) @[PMP.scala 165:26]
    node _res_T_135 = eq(io.pmp[4].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_136 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_137 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_138 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_139 = eq(io.pmp[4].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_18 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_140 = cat(res_hi_18, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_141 = eq(_res_T_140, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_19 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_142 = cat(res_hi_19, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_143 = eq(_res_T_142, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_20 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_144 = cat(res_hi_20, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_145 = eq(_res_T_144, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_21 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_146 = cat(res_hi_21, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_147 = eq(_res_T_146, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_22 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_148 = cat(res_hi_22, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_149 = eq(_res_T_148, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_23 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_150 = cat(res_hi_23, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_151 = eq(_res_T_150, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_152 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_153 = and(_res_T_152, res_hit_3) @[PMP.scala 178:23]
    node _res_T_154 = and(_res_T_153, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_155 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_156 = and(_res_T_154, _res_T_155) @[PMP.scala 178:41]
    node _res_T_157 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_158 = and(_res_T_157, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_159 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_160 = and(_res_T_158, _res_T_159) @[PMP.scala 179:43]
    node _res_T_161 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_162 = and(_res_T_161, res_hit_3) @[PMP.scala 178:23]
    node _res_T_163 = and(_res_T_162, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_164 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_165 = and(_res_T_163, _res_T_164) @[PMP.scala 178:41]
    node _res_T_166 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_167 = and(_res_T_166, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_168 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_169 = and(_res_T_167, _res_T_168) @[PMP.scala 179:43]
    node _res_T_170 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_171 = and(_res_T_170, res_hit_3) @[PMP.scala 178:23]
    node _res_T_172 = and(_res_T_171, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_173 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_174 = and(_res_T_172, _res_T_173) @[PMP.scala 178:41]
    node _res_T_175 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_176 = and(_res_T_175, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_177 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_178 = and(_res_T_176, _res_T_177) @[PMP.scala 179:43]
    wire res_cur_3 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_3.mask <= io.pmp[4].mask
    res_cur_3.addr <= io.pmp[4].addr
    res_cur_3.cfg.r <= io.pmp[4].cfg.r
    res_cur_3.cfg.w <= io.pmp[4].cfg.w
    res_cur_3.cfg.x <= io.pmp[4].cfg.x
    res_cur_3.cfg.a <= io.pmp[4].cfg.a
    res_cur_3.cfg.res <= io.pmp[4].cfg.res
    res_cur_3.cfg.l <= io.pmp[4].cfg.l
    node _res_cur_cfg_r_T_6 = or(io.pmp[4].cfg.r, res_ignore_3) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_7 = and(UInt<1>("h01"), _res_cur_cfg_r_T_6) @[PMP.scala 183:26]
    res_cur_3.cfg.r <= _res_cur_cfg_r_T_7 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_6 = or(io.pmp[4].cfg.w, res_ignore_3) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_7 = and(UInt<1>("h01"), _res_cur_cfg_w_T_6) @[PMP.scala 184:26]
    res_cur_3.cfg.w <= _res_cur_cfg_w_T_7 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_6 = or(io.pmp[4].cfg.x, res_ignore_3) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_7 = and(UInt<1>("h01"), _res_cur_cfg_x_T_6) @[PMP.scala 185:26]
    res_cur_3.cfg.x <= _res_cur_cfg_x_T_7 @[PMP.scala 185:15]
    node _res_T_179 = mux(res_hit_3, res_cur_3, _res_T_134) @[PMP.scala 186:8]
    node _res_hit_T_108 = bits(io.pmp[3].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_109 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_110 = not(_res_hit_T_109) @[PMP.scala 62:29]
    node _res_hit_T_111 = or(_res_hit_T_110, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_112 = not(_res_hit_T_111) @[PMP.scala 62:27]
    node _res_hit_T_113 = xor(io.addr, _res_hit_T_112) @[PMP.scala 65:47]
    node _res_hit_T_114 = not(io.pmp[3].mask) @[PMP.scala 65:54]
    node _res_hit_T_115 = and(_res_hit_T_113, _res_hit_T_114) @[PMP.scala 65:52]
    node _res_hit_T_116 = eq(_res_hit_T_115, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_117 = bits(io.pmp[3].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_118 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_119 = dshl(_res_hit_T_118, io.size) @[package.scala 234:77]
    node _res_hit_T_120 = bits(_res_hit_T_119, 1, 0) @[package.scala 234:82]
    node _res_hit_T_121 = not(_res_hit_T_120) @[package.scala 234:46]
    node _res_hit_T_122 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_123 = not(_res_hit_T_122) @[PMP.scala 62:29]
    node _res_hit_T_124 = or(_res_hit_T_123, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_125 = not(_res_hit_T_124) @[PMP.scala 62:27]
    node _res_hit_T_126 = lt(io.addr, _res_hit_T_125) @[PMP.scala 79:9]
    node _res_hit_T_127 = eq(_res_hit_T_126, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_128 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_129 = not(_res_hit_T_128) @[PMP.scala 62:29]
    node _res_hit_T_130 = or(_res_hit_T_129, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_131 = not(_res_hit_T_130) @[PMP.scala 62:27]
    node _res_hit_T_132 = lt(io.addr, _res_hit_T_131) @[PMP.scala 79:9]
    node _res_hit_T_133 = and(_res_hit_T_127, _res_hit_T_132) @[PMP.scala 96:48]
    node _res_hit_T_134 = and(_res_hit_T_117, _res_hit_T_133) @[PMP.scala 134:61]
    node res_hit_4 = mux(_res_hit_T_108, _res_hit_T_116, _res_hit_T_134) @[PMP.scala 134:8]
    node _res_ignore_T_4 = eq(io.pmp[3].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_4 = and(default, _res_ignore_T_4) @[PMP.scala 165:26]
    node _res_T_180 = eq(io.pmp[3].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_181 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_182 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_183 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_184 = eq(io.pmp[3].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_24 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_185 = cat(res_hi_24, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_186 = eq(_res_T_185, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_25 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_187 = cat(res_hi_25, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_188 = eq(_res_T_187, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_26 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_189 = cat(res_hi_26, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_190 = eq(_res_T_189, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_27 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_191 = cat(res_hi_27, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_192 = eq(_res_T_191, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_28 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_193 = cat(res_hi_28, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_194 = eq(_res_T_193, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_29 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_195 = cat(res_hi_29, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_196 = eq(_res_T_195, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_197 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_198 = and(_res_T_197, res_hit_4) @[PMP.scala 178:23]
    node _res_T_199 = and(_res_T_198, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_200 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_201 = and(_res_T_199, _res_T_200) @[PMP.scala 178:41]
    node _res_T_202 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_203 = and(_res_T_202, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_204 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_205 = and(_res_T_203, _res_T_204) @[PMP.scala 179:43]
    node _res_T_206 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_207 = and(_res_T_206, res_hit_4) @[PMP.scala 178:23]
    node _res_T_208 = and(_res_T_207, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_209 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_210 = and(_res_T_208, _res_T_209) @[PMP.scala 178:41]
    node _res_T_211 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_212 = and(_res_T_211, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_213 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_214 = and(_res_T_212, _res_T_213) @[PMP.scala 179:43]
    node _res_T_215 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_216 = and(_res_T_215, res_hit_4) @[PMP.scala 178:23]
    node _res_T_217 = and(_res_T_216, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_218 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_219 = and(_res_T_217, _res_T_218) @[PMP.scala 178:41]
    node _res_T_220 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_221 = and(_res_T_220, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_222 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_223 = and(_res_T_221, _res_T_222) @[PMP.scala 179:43]
    wire res_cur_4 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_4.mask <= io.pmp[3].mask
    res_cur_4.addr <= io.pmp[3].addr
    res_cur_4.cfg.r <= io.pmp[3].cfg.r
    res_cur_4.cfg.w <= io.pmp[3].cfg.w
    res_cur_4.cfg.x <= io.pmp[3].cfg.x
    res_cur_4.cfg.a <= io.pmp[3].cfg.a
    res_cur_4.cfg.res <= io.pmp[3].cfg.res
    res_cur_4.cfg.l <= io.pmp[3].cfg.l
    node _res_cur_cfg_r_T_8 = or(io.pmp[3].cfg.r, res_ignore_4) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_9 = and(UInt<1>("h01"), _res_cur_cfg_r_T_8) @[PMP.scala 183:26]
    res_cur_4.cfg.r <= _res_cur_cfg_r_T_9 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_8 = or(io.pmp[3].cfg.w, res_ignore_4) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_9 = and(UInt<1>("h01"), _res_cur_cfg_w_T_8) @[PMP.scala 184:26]
    res_cur_4.cfg.w <= _res_cur_cfg_w_T_9 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_8 = or(io.pmp[3].cfg.x, res_ignore_4) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_9 = and(UInt<1>("h01"), _res_cur_cfg_x_T_8) @[PMP.scala 185:26]
    res_cur_4.cfg.x <= _res_cur_cfg_x_T_9 @[PMP.scala 185:15]
    node _res_T_224 = mux(res_hit_4, res_cur_4, _res_T_179) @[PMP.scala 186:8]
    node _res_hit_T_135 = bits(io.pmp[2].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_136 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_137 = not(_res_hit_T_136) @[PMP.scala 62:29]
    node _res_hit_T_138 = or(_res_hit_T_137, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_139 = not(_res_hit_T_138) @[PMP.scala 62:27]
    node _res_hit_T_140 = xor(io.addr, _res_hit_T_139) @[PMP.scala 65:47]
    node _res_hit_T_141 = not(io.pmp[2].mask) @[PMP.scala 65:54]
    node _res_hit_T_142 = and(_res_hit_T_140, _res_hit_T_141) @[PMP.scala 65:52]
    node _res_hit_T_143 = eq(_res_hit_T_142, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_144 = bits(io.pmp[2].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_145 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_146 = dshl(_res_hit_T_145, io.size) @[package.scala 234:77]
    node _res_hit_T_147 = bits(_res_hit_T_146, 1, 0) @[package.scala 234:82]
    node _res_hit_T_148 = not(_res_hit_T_147) @[package.scala 234:46]
    node _res_hit_T_149 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_150 = not(_res_hit_T_149) @[PMP.scala 62:29]
    node _res_hit_T_151 = or(_res_hit_T_150, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_152 = not(_res_hit_T_151) @[PMP.scala 62:27]
    node _res_hit_T_153 = lt(io.addr, _res_hit_T_152) @[PMP.scala 79:9]
    node _res_hit_T_154 = eq(_res_hit_T_153, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_155 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_156 = not(_res_hit_T_155) @[PMP.scala 62:29]
    node _res_hit_T_157 = or(_res_hit_T_156, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_158 = not(_res_hit_T_157) @[PMP.scala 62:27]
    node _res_hit_T_159 = lt(io.addr, _res_hit_T_158) @[PMP.scala 79:9]
    node _res_hit_T_160 = and(_res_hit_T_154, _res_hit_T_159) @[PMP.scala 96:48]
    node _res_hit_T_161 = and(_res_hit_T_144, _res_hit_T_160) @[PMP.scala 134:61]
    node res_hit_5 = mux(_res_hit_T_135, _res_hit_T_143, _res_hit_T_161) @[PMP.scala 134:8]
    node _res_ignore_T_5 = eq(io.pmp[2].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_5 = and(default, _res_ignore_T_5) @[PMP.scala 165:26]
    node _res_T_225 = eq(io.pmp[2].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_226 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_227 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_228 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_229 = eq(io.pmp[2].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_30 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_230 = cat(res_hi_30, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_231 = eq(_res_T_230, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_31 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_232 = cat(res_hi_31, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_233 = eq(_res_T_232, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_32 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_234 = cat(res_hi_32, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_235 = eq(_res_T_234, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_33 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_236 = cat(res_hi_33, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_237 = eq(_res_T_236, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_34 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_238 = cat(res_hi_34, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_239 = eq(_res_T_238, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_35 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_240 = cat(res_hi_35, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_241 = eq(_res_T_240, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_242 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_243 = and(_res_T_242, res_hit_5) @[PMP.scala 178:23]
    node _res_T_244 = and(_res_T_243, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_245 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_246 = and(_res_T_244, _res_T_245) @[PMP.scala 178:41]
    node _res_T_247 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_248 = and(_res_T_247, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_249 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_250 = and(_res_T_248, _res_T_249) @[PMP.scala 179:43]
    node _res_T_251 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_252 = and(_res_T_251, res_hit_5) @[PMP.scala 178:23]
    node _res_T_253 = and(_res_T_252, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_254 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_255 = and(_res_T_253, _res_T_254) @[PMP.scala 178:41]
    node _res_T_256 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_257 = and(_res_T_256, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_258 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_259 = and(_res_T_257, _res_T_258) @[PMP.scala 179:43]
    node _res_T_260 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_261 = and(_res_T_260, res_hit_5) @[PMP.scala 178:23]
    node _res_T_262 = and(_res_T_261, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_263 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_264 = and(_res_T_262, _res_T_263) @[PMP.scala 178:41]
    node _res_T_265 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_266 = and(_res_T_265, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_267 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_268 = and(_res_T_266, _res_T_267) @[PMP.scala 179:43]
    wire res_cur_5 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_5.mask <= io.pmp[2].mask
    res_cur_5.addr <= io.pmp[2].addr
    res_cur_5.cfg.r <= io.pmp[2].cfg.r
    res_cur_5.cfg.w <= io.pmp[2].cfg.w
    res_cur_5.cfg.x <= io.pmp[2].cfg.x
    res_cur_5.cfg.a <= io.pmp[2].cfg.a
    res_cur_5.cfg.res <= io.pmp[2].cfg.res
    res_cur_5.cfg.l <= io.pmp[2].cfg.l
    node _res_cur_cfg_r_T_10 = or(io.pmp[2].cfg.r, res_ignore_5) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_11 = and(UInt<1>("h01"), _res_cur_cfg_r_T_10) @[PMP.scala 183:26]
    res_cur_5.cfg.r <= _res_cur_cfg_r_T_11 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_10 = or(io.pmp[2].cfg.w, res_ignore_5) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_11 = and(UInt<1>("h01"), _res_cur_cfg_w_T_10) @[PMP.scala 184:26]
    res_cur_5.cfg.w <= _res_cur_cfg_w_T_11 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_10 = or(io.pmp[2].cfg.x, res_ignore_5) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_11 = and(UInt<1>("h01"), _res_cur_cfg_x_T_10) @[PMP.scala 185:26]
    res_cur_5.cfg.x <= _res_cur_cfg_x_T_11 @[PMP.scala 185:15]
    node _res_T_269 = mux(res_hit_5, res_cur_5, _res_T_224) @[PMP.scala 186:8]
    node _res_hit_T_162 = bits(io.pmp[1].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_163 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_164 = not(_res_hit_T_163) @[PMP.scala 62:29]
    node _res_hit_T_165 = or(_res_hit_T_164, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_166 = not(_res_hit_T_165) @[PMP.scala 62:27]
    node _res_hit_T_167 = xor(io.addr, _res_hit_T_166) @[PMP.scala 65:47]
    node _res_hit_T_168 = not(io.pmp[1].mask) @[PMP.scala 65:54]
    node _res_hit_T_169 = and(_res_hit_T_167, _res_hit_T_168) @[PMP.scala 65:52]
    node _res_hit_T_170 = eq(_res_hit_T_169, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_171 = bits(io.pmp[1].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_172 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_173 = dshl(_res_hit_T_172, io.size) @[package.scala 234:77]
    node _res_hit_T_174 = bits(_res_hit_T_173, 1, 0) @[package.scala 234:82]
    node _res_hit_T_175 = not(_res_hit_T_174) @[package.scala 234:46]
    node _res_hit_T_176 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_177 = not(_res_hit_T_176) @[PMP.scala 62:29]
    node _res_hit_T_178 = or(_res_hit_T_177, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_179 = not(_res_hit_T_178) @[PMP.scala 62:27]
    node _res_hit_T_180 = lt(io.addr, _res_hit_T_179) @[PMP.scala 79:9]
    node _res_hit_T_181 = eq(_res_hit_T_180, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_182 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_183 = not(_res_hit_T_182) @[PMP.scala 62:29]
    node _res_hit_T_184 = or(_res_hit_T_183, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_185 = not(_res_hit_T_184) @[PMP.scala 62:27]
    node _res_hit_T_186 = lt(io.addr, _res_hit_T_185) @[PMP.scala 79:9]
    node _res_hit_T_187 = and(_res_hit_T_181, _res_hit_T_186) @[PMP.scala 96:48]
    node _res_hit_T_188 = and(_res_hit_T_171, _res_hit_T_187) @[PMP.scala 134:61]
    node res_hit_6 = mux(_res_hit_T_162, _res_hit_T_170, _res_hit_T_188) @[PMP.scala 134:8]
    node _res_ignore_T_6 = eq(io.pmp[1].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_6 = and(default, _res_ignore_T_6) @[PMP.scala 165:26]
    node _res_T_270 = eq(io.pmp[1].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_271 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_272 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_273 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_274 = eq(io.pmp[1].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_36 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_275 = cat(res_hi_36, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_276 = eq(_res_T_275, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_37 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_277 = cat(res_hi_37, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_278 = eq(_res_T_277, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_38 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_279 = cat(res_hi_38, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_280 = eq(_res_T_279, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_39 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_281 = cat(res_hi_39, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_282 = eq(_res_T_281, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_40 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_283 = cat(res_hi_40, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_284 = eq(_res_T_283, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_41 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_285 = cat(res_hi_41, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_286 = eq(_res_T_285, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_287 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_288 = and(_res_T_287, res_hit_6) @[PMP.scala 178:23]
    node _res_T_289 = and(_res_T_288, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_290 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_291 = and(_res_T_289, _res_T_290) @[PMP.scala 178:41]
    node _res_T_292 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_293 = and(_res_T_292, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_294 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_295 = and(_res_T_293, _res_T_294) @[PMP.scala 179:43]
    node _res_T_296 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_297 = and(_res_T_296, res_hit_6) @[PMP.scala 178:23]
    node _res_T_298 = and(_res_T_297, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_299 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_300 = and(_res_T_298, _res_T_299) @[PMP.scala 178:41]
    node _res_T_301 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_302 = and(_res_T_301, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_303 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_304 = and(_res_T_302, _res_T_303) @[PMP.scala 179:43]
    node _res_T_305 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_306 = and(_res_T_305, res_hit_6) @[PMP.scala 178:23]
    node _res_T_307 = and(_res_T_306, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_308 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_309 = and(_res_T_307, _res_T_308) @[PMP.scala 178:41]
    node _res_T_310 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_311 = and(_res_T_310, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_312 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_313 = and(_res_T_311, _res_T_312) @[PMP.scala 179:43]
    wire res_cur_6 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_6.mask <= io.pmp[1].mask
    res_cur_6.addr <= io.pmp[1].addr
    res_cur_6.cfg.r <= io.pmp[1].cfg.r
    res_cur_6.cfg.w <= io.pmp[1].cfg.w
    res_cur_6.cfg.x <= io.pmp[1].cfg.x
    res_cur_6.cfg.a <= io.pmp[1].cfg.a
    res_cur_6.cfg.res <= io.pmp[1].cfg.res
    res_cur_6.cfg.l <= io.pmp[1].cfg.l
    node _res_cur_cfg_r_T_12 = or(io.pmp[1].cfg.r, res_ignore_6) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_13 = and(UInt<1>("h01"), _res_cur_cfg_r_T_12) @[PMP.scala 183:26]
    res_cur_6.cfg.r <= _res_cur_cfg_r_T_13 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_12 = or(io.pmp[1].cfg.w, res_ignore_6) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_13 = and(UInt<1>("h01"), _res_cur_cfg_w_T_12) @[PMP.scala 184:26]
    res_cur_6.cfg.w <= _res_cur_cfg_w_T_13 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_12 = or(io.pmp[1].cfg.x, res_ignore_6) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_13 = and(UInt<1>("h01"), _res_cur_cfg_x_T_12) @[PMP.scala 185:26]
    res_cur_6.cfg.x <= _res_cur_cfg_x_T_13 @[PMP.scala 185:15]
    node _res_T_314 = mux(res_hit_6, res_cur_6, _res_T_269) @[PMP.scala 186:8]
    node _res_hit_T_189 = bits(io.pmp[0].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_190 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_191 = not(_res_hit_T_190) @[PMP.scala 62:29]
    node _res_hit_T_192 = or(_res_hit_T_191, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_193 = not(_res_hit_T_192) @[PMP.scala 62:27]
    node _res_hit_T_194 = xor(io.addr, _res_hit_T_193) @[PMP.scala 65:47]
    node _res_hit_T_195 = not(io.pmp[0].mask) @[PMP.scala 65:54]
    node _res_hit_T_196 = and(_res_hit_T_194, _res_hit_T_195) @[PMP.scala 65:52]
    node _res_hit_T_197 = eq(_res_hit_T_196, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_198 = bits(io.pmp[0].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_199 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_200 = dshl(_res_hit_T_199, io.size) @[package.scala 234:77]
    node _res_hit_T_201 = bits(_res_hit_T_200, 1, 0) @[package.scala 234:82]
    node _res_hit_T_202 = not(_res_hit_T_201) @[package.scala 234:46]
    node _res_hit_T_203 = shl(pmp0.addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_204 = not(_res_hit_T_203) @[PMP.scala 62:29]
    node _res_hit_T_205 = or(_res_hit_T_204, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_206 = not(_res_hit_T_205) @[PMP.scala 62:27]
    node _res_hit_T_207 = lt(io.addr, _res_hit_T_206) @[PMP.scala 79:9]
    node _res_hit_T_208 = eq(_res_hit_T_207, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_209 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_210 = not(_res_hit_T_209) @[PMP.scala 62:29]
    node _res_hit_T_211 = or(_res_hit_T_210, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_212 = not(_res_hit_T_211) @[PMP.scala 62:27]
    node _res_hit_T_213 = lt(io.addr, _res_hit_T_212) @[PMP.scala 79:9]
    node _res_hit_T_214 = and(_res_hit_T_208, _res_hit_T_213) @[PMP.scala 96:48]
    node _res_hit_T_215 = and(_res_hit_T_198, _res_hit_T_214) @[PMP.scala 134:61]
    node res_hit_7 = mux(_res_hit_T_189, _res_hit_T_197, _res_hit_T_215) @[PMP.scala 134:8]
    node _res_ignore_T_7 = eq(io.pmp[0].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_7 = and(default, _res_ignore_T_7) @[PMP.scala 165:26]
    node _res_T_315 = eq(io.pmp[0].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_316 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_317 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_318 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_319 = eq(io.pmp[0].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_42 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_320 = cat(res_hi_42, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_321 = eq(_res_T_320, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_43 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_322 = cat(res_hi_43, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_323 = eq(_res_T_322, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_44 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_324 = cat(res_hi_44, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_325 = eq(_res_T_324, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_45 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_326 = cat(res_hi_45, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_327 = eq(_res_T_326, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_46 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_328 = cat(res_hi_46, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_329 = eq(_res_T_328, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_47 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_330 = cat(res_hi_47, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_331 = eq(_res_T_330, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_332 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_333 = and(_res_T_332, res_hit_7) @[PMP.scala 178:23]
    node _res_T_334 = and(_res_T_333, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_335 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_336 = and(_res_T_334, _res_T_335) @[PMP.scala 178:41]
    node _res_T_337 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_338 = and(_res_T_337, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_339 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_340 = and(_res_T_338, _res_T_339) @[PMP.scala 179:43]
    node _res_T_341 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_342 = and(_res_T_341, res_hit_7) @[PMP.scala 178:23]
    node _res_T_343 = and(_res_T_342, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_344 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_345 = and(_res_T_343, _res_T_344) @[PMP.scala 178:41]
    node _res_T_346 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_347 = and(_res_T_346, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_348 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_349 = and(_res_T_347, _res_T_348) @[PMP.scala 179:43]
    node _res_T_350 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_351 = and(_res_T_350, res_hit_7) @[PMP.scala 178:23]
    node _res_T_352 = and(_res_T_351, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_353 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_354 = and(_res_T_352, _res_T_353) @[PMP.scala 178:41]
    node _res_T_355 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_356 = and(_res_T_355, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_357 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_358 = and(_res_T_356, _res_T_357) @[PMP.scala 179:43]
    wire res_cur_7 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_7.mask <= io.pmp[0].mask
    res_cur_7.addr <= io.pmp[0].addr
    res_cur_7.cfg.r <= io.pmp[0].cfg.r
    res_cur_7.cfg.w <= io.pmp[0].cfg.w
    res_cur_7.cfg.x <= io.pmp[0].cfg.x
    res_cur_7.cfg.a <= io.pmp[0].cfg.a
    res_cur_7.cfg.res <= io.pmp[0].cfg.res
    res_cur_7.cfg.l <= io.pmp[0].cfg.l
    node _res_cur_cfg_r_T_14 = or(io.pmp[0].cfg.r, res_ignore_7) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_15 = and(UInt<1>("h01"), _res_cur_cfg_r_T_14) @[PMP.scala 183:26]
    res_cur_7.cfg.r <= _res_cur_cfg_r_T_15 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_14 = or(io.pmp[0].cfg.w, res_ignore_7) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_15 = and(UInt<1>("h01"), _res_cur_cfg_w_T_14) @[PMP.scala 184:26]
    res_cur_7.cfg.w <= _res_cur_cfg_w_T_15 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_14 = or(io.pmp[0].cfg.x, res_ignore_7) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_15 = and(UInt<1>("h01"), _res_cur_cfg_x_T_14) @[PMP.scala 185:26]
    res_cur_7.cfg.x <= _res_cur_cfg_x_T_15 @[PMP.scala 185:15]
    node res = mux(res_hit_7, res_cur_7, _res_T_314) @[PMP.scala 186:8]
    io.r <= res.cfg.r @[PMP.scala 189:8]
    io.w <= res.cfg.w @[PMP.scala 190:8]
    io.x <= res.cfg.x @[PMP.scala 191:8]
    
  module OptimizationBarrier_1 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_2 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_3 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_4 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_5 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_6 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_7 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_8 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_9 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_10 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_11 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_12 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_13 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_14 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_15 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_16 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_17 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_18 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module PMPChecker_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip prv : UInt<2>, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip addr : UInt<32>, flip size : UInt<2>, r : UInt<1>, w : UInt<1>, x : UInt<1>}
    
    node default = gt(io.prv, UInt<1>("h01")) @[PMP.scala 157:56]
    wire _pmp0_WIRE : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 158:35]
    _pmp0_WIRE.mask <= UInt<32>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.addr <= UInt<30>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.r <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.w <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.x <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.a <= UInt<2>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.res <= UInt<2>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.l <= UInt<1>("h00") @[PMP.scala 158:35]
    wire pmp0 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    pmp0.mask <= _pmp0_WIRE.mask
    pmp0.addr <= _pmp0_WIRE.addr
    pmp0.cfg.r <= _pmp0_WIRE.cfg.r
    pmp0.cfg.w <= _pmp0_WIRE.cfg.w
    pmp0.cfg.x <= _pmp0_WIRE.cfg.x
    pmp0.cfg.a <= _pmp0_WIRE.cfg.a
    pmp0.cfg.res <= _pmp0_WIRE.cfg.res
    pmp0.cfg.l <= _pmp0_WIRE.cfg.l
    pmp0.cfg.r <= default @[PMP.scala 159:14]
    pmp0.cfg.w <= default @[PMP.scala 160:14]
    pmp0.cfg.x <= default @[PMP.scala 161:14]
    node _res_hit_T = bits(io.pmp[7].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_1 = shl(io.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_2 = not(_res_hit_T_1) @[PMP.scala 62:29]
    node _res_hit_T_3 = or(_res_hit_T_2, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_4 = not(_res_hit_T_3) @[PMP.scala 62:27]
    node _res_hit_T_5 = xor(io.addr, _res_hit_T_4) @[PMP.scala 65:47]
    node _res_hit_T_6 = not(io.pmp[7].mask) @[PMP.scala 65:54]
    node _res_hit_T_7 = and(_res_hit_T_5, _res_hit_T_6) @[PMP.scala 65:52]
    node _res_hit_T_8 = eq(_res_hit_T_7, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_9 = bits(io.pmp[7].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_10 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_11 = dshl(_res_hit_T_10, io.size) @[package.scala 234:77]
    node _res_hit_T_12 = bits(_res_hit_T_11, 1, 0) @[package.scala 234:82]
    node _res_hit_T_13 = not(_res_hit_T_12) @[package.scala 234:46]
    node _res_hit_T_14 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_15 = not(_res_hit_T_14) @[PMP.scala 62:29]
    node _res_hit_T_16 = or(_res_hit_T_15, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_17 = not(_res_hit_T_16) @[PMP.scala 62:27]
    node _res_hit_T_18 = lt(io.addr, _res_hit_T_17) @[PMP.scala 79:9]
    node _res_hit_T_19 = eq(_res_hit_T_18, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_20 = shl(io.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_21 = not(_res_hit_T_20) @[PMP.scala 62:29]
    node _res_hit_T_22 = or(_res_hit_T_21, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_23 = not(_res_hit_T_22) @[PMP.scala 62:27]
    node _res_hit_T_24 = lt(io.addr, _res_hit_T_23) @[PMP.scala 79:9]
    node _res_hit_T_25 = and(_res_hit_T_19, _res_hit_T_24) @[PMP.scala 96:48]
    node _res_hit_T_26 = and(_res_hit_T_9, _res_hit_T_25) @[PMP.scala 134:61]
    node res_hit = mux(_res_hit_T, _res_hit_T_8, _res_hit_T_26) @[PMP.scala 134:8]
    node _res_ignore_T = eq(io.pmp[7].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore = and(default, _res_ignore_T) @[PMP.scala 165:26]
    node _res_T = eq(io.pmp[7].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_1 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_2 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_3 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_4 = eq(io.pmp[7].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_5 = cat(res_hi, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_6 = eq(_res_T_5, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_1 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_7 = cat(res_hi_1, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_8 = eq(_res_T_7, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_2 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_9 = cat(res_hi_2, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_10 = eq(_res_T_9, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_3 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_11 = cat(res_hi_3, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_12 = eq(_res_T_11, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_4 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_13 = cat(res_hi_4, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_14 = eq(_res_T_13, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_5 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_15 = cat(res_hi_5, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_16 = eq(_res_T_15, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_17 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_18 = and(_res_T_17, res_hit) @[PMP.scala 178:23]
    node _res_T_19 = and(_res_T_18, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_20 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_21 = and(_res_T_19, _res_T_20) @[PMP.scala 178:41]
    node _res_T_22 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_23 = and(_res_T_22, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_24 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_25 = and(_res_T_23, _res_T_24) @[PMP.scala 179:43]
    node _res_T_26 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_27 = and(_res_T_26, res_hit) @[PMP.scala 178:23]
    node _res_T_28 = and(_res_T_27, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_29 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_30 = and(_res_T_28, _res_T_29) @[PMP.scala 178:41]
    node _res_T_31 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_32 = and(_res_T_31, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_33 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_34 = and(_res_T_32, _res_T_33) @[PMP.scala 179:43]
    node _res_T_35 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_36 = and(_res_T_35, res_hit) @[PMP.scala 178:23]
    node _res_T_37 = and(_res_T_36, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_38 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_39 = and(_res_T_37, _res_T_38) @[PMP.scala 178:41]
    node _res_T_40 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_41 = and(_res_T_40, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_42 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_43 = and(_res_T_41, _res_T_42) @[PMP.scala 179:43]
    wire res_cur : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur.mask <= io.pmp[7].mask
    res_cur.addr <= io.pmp[7].addr
    res_cur.cfg.r <= io.pmp[7].cfg.r
    res_cur.cfg.w <= io.pmp[7].cfg.w
    res_cur.cfg.x <= io.pmp[7].cfg.x
    res_cur.cfg.a <= io.pmp[7].cfg.a
    res_cur.cfg.res <= io.pmp[7].cfg.res
    res_cur.cfg.l <= io.pmp[7].cfg.l
    node _res_cur_cfg_r_T = or(io.pmp[7].cfg.r, res_ignore) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_1 = and(UInt<1>("h01"), _res_cur_cfg_r_T) @[PMP.scala 183:26]
    res_cur.cfg.r <= _res_cur_cfg_r_T_1 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T = or(io.pmp[7].cfg.w, res_ignore) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_1 = and(UInt<1>("h01"), _res_cur_cfg_w_T) @[PMP.scala 184:26]
    res_cur.cfg.w <= _res_cur_cfg_w_T_1 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T = or(io.pmp[7].cfg.x, res_ignore) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_1 = and(UInt<1>("h01"), _res_cur_cfg_x_T) @[PMP.scala 185:26]
    res_cur.cfg.x <= _res_cur_cfg_x_T_1 @[PMP.scala 185:15]
    node _res_T_44 = mux(res_hit, res_cur, pmp0) @[PMP.scala 186:8]
    node _res_hit_T_27 = bits(io.pmp[6].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_28 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_29 = not(_res_hit_T_28) @[PMP.scala 62:29]
    node _res_hit_T_30 = or(_res_hit_T_29, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_31 = not(_res_hit_T_30) @[PMP.scala 62:27]
    node _res_hit_T_32 = xor(io.addr, _res_hit_T_31) @[PMP.scala 65:47]
    node _res_hit_T_33 = not(io.pmp[6].mask) @[PMP.scala 65:54]
    node _res_hit_T_34 = and(_res_hit_T_32, _res_hit_T_33) @[PMP.scala 65:52]
    node _res_hit_T_35 = eq(_res_hit_T_34, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_36 = bits(io.pmp[6].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_37 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_38 = dshl(_res_hit_T_37, io.size) @[package.scala 234:77]
    node _res_hit_T_39 = bits(_res_hit_T_38, 1, 0) @[package.scala 234:82]
    node _res_hit_T_40 = not(_res_hit_T_39) @[package.scala 234:46]
    node _res_hit_T_41 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_42 = not(_res_hit_T_41) @[PMP.scala 62:29]
    node _res_hit_T_43 = or(_res_hit_T_42, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_44 = not(_res_hit_T_43) @[PMP.scala 62:27]
    node _res_hit_T_45 = lt(io.addr, _res_hit_T_44) @[PMP.scala 79:9]
    node _res_hit_T_46 = eq(_res_hit_T_45, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_47 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_48 = not(_res_hit_T_47) @[PMP.scala 62:29]
    node _res_hit_T_49 = or(_res_hit_T_48, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_50 = not(_res_hit_T_49) @[PMP.scala 62:27]
    node _res_hit_T_51 = lt(io.addr, _res_hit_T_50) @[PMP.scala 79:9]
    node _res_hit_T_52 = and(_res_hit_T_46, _res_hit_T_51) @[PMP.scala 96:48]
    node _res_hit_T_53 = and(_res_hit_T_36, _res_hit_T_52) @[PMP.scala 134:61]
    node res_hit_1 = mux(_res_hit_T_27, _res_hit_T_35, _res_hit_T_53) @[PMP.scala 134:8]
    node _res_ignore_T_1 = eq(io.pmp[6].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_1 = and(default, _res_ignore_T_1) @[PMP.scala 165:26]
    node _res_T_45 = eq(io.pmp[6].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_46 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_47 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_48 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_49 = eq(io.pmp[6].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_6 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_50 = cat(res_hi_6, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_51 = eq(_res_T_50, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_7 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_52 = cat(res_hi_7, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_53 = eq(_res_T_52, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_8 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_54 = cat(res_hi_8, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_55 = eq(_res_T_54, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_9 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_56 = cat(res_hi_9, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_57 = eq(_res_T_56, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_10 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_58 = cat(res_hi_10, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_59 = eq(_res_T_58, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_11 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_60 = cat(res_hi_11, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_61 = eq(_res_T_60, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_62 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_63 = and(_res_T_62, res_hit_1) @[PMP.scala 178:23]
    node _res_T_64 = and(_res_T_63, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_65 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_66 = and(_res_T_64, _res_T_65) @[PMP.scala 178:41]
    node _res_T_67 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_68 = and(_res_T_67, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_69 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_70 = and(_res_T_68, _res_T_69) @[PMP.scala 179:43]
    node _res_T_71 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_72 = and(_res_T_71, res_hit_1) @[PMP.scala 178:23]
    node _res_T_73 = and(_res_T_72, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_74 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_75 = and(_res_T_73, _res_T_74) @[PMP.scala 178:41]
    node _res_T_76 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_77 = and(_res_T_76, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_78 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_79 = and(_res_T_77, _res_T_78) @[PMP.scala 179:43]
    node _res_T_80 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_81 = and(_res_T_80, res_hit_1) @[PMP.scala 178:23]
    node _res_T_82 = and(_res_T_81, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_83 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_84 = and(_res_T_82, _res_T_83) @[PMP.scala 178:41]
    node _res_T_85 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_86 = and(_res_T_85, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_87 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_88 = and(_res_T_86, _res_T_87) @[PMP.scala 179:43]
    wire res_cur_1 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_1.mask <= io.pmp[6].mask
    res_cur_1.addr <= io.pmp[6].addr
    res_cur_1.cfg.r <= io.pmp[6].cfg.r
    res_cur_1.cfg.w <= io.pmp[6].cfg.w
    res_cur_1.cfg.x <= io.pmp[6].cfg.x
    res_cur_1.cfg.a <= io.pmp[6].cfg.a
    res_cur_1.cfg.res <= io.pmp[6].cfg.res
    res_cur_1.cfg.l <= io.pmp[6].cfg.l
    node _res_cur_cfg_r_T_2 = or(io.pmp[6].cfg.r, res_ignore_1) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_3 = and(UInt<1>("h01"), _res_cur_cfg_r_T_2) @[PMP.scala 183:26]
    res_cur_1.cfg.r <= _res_cur_cfg_r_T_3 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_2 = or(io.pmp[6].cfg.w, res_ignore_1) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_3 = and(UInt<1>("h01"), _res_cur_cfg_w_T_2) @[PMP.scala 184:26]
    res_cur_1.cfg.w <= _res_cur_cfg_w_T_3 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_2 = or(io.pmp[6].cfg.x, res_ignore_1) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_3 = and(UInt<1>("h01"), _res_cur_cfg_x_T_2) @[PMP.scala 185:26]
    res_cur_1.cfg.x <= _res_cur_cfg_x_T_3 @[PMP.scala 185:15]
    node _res_T_89 = mux(res_hit_1, res_cur_1, _res_T_44) @[PMP.scala 186:8]
    node _res_hit_T_54 = bits(io.pmp[5].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_55 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_56 = not(_res_hit_T_55) @[PMP.scala 62:29]
    node _res_hit_T_57 = or(_res_hit_T_56, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_58 = not(_res_hit_T_57) @[PMP.scala 62:27]
    node _res_hit_T_59 = xor(io.addr, _res_hit_T_58) @[PMP.scala 65:47]
    node _res_hit_T_60 = not(io.pmp[5].mask) @[PMP.scala 65:54]
    node _res_hit_T_61 = and(_res_hit_T_59, _res_hit_T_60) @[PMP.scala 65:52]
    node _res_hit_T_62 = eq(_res_hit_T_61, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_63 = bits(io.pmp[5].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_64 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_65 = dshl(_res_hit_T_64, io.size) @[package.scala 234:77]
    node _res_hit_T_66 = bits(_res_hit_T_65, 1, 0) @[package.scala 234:82]
    node _res_hit_T_67 = not(_res_hit_T_66) @[package.scala 234:46]
    node _res_hit_T_68 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_69 = not(_res_hit_T_68) @[PMP.scala 62:29]
    node _res_hit_T_70 = or(_res_hit_T_69, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_71 = not(_res_hit_T_70) @[PMP.scala 62:27]
    node _res_hit_T_72 = lt(io.addr, _res_hit_T_71) @[PMP.scala 79:9]
    node _res_hit_T_73 = eq(_res_hit_T_72, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_74 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_75 = not(_res_hit_T_74) @[PMP.scala 62:29]
    node _res_hit_T_76 = or(_res_hit_T_75, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_77 = not(_res_hit_T_76) @[PMP.scala 62:27]
    node _res_hit_T_78 = lt(io.addr, _res_hit_T_77) @[PMP.scala 79:9]
    node _res_hit_T_79 = and(_res_hit_T_73, _res_hit_T_78) @[PMP.scala 96:48]
    node _res_hit_T_80 = and(_res_hit_T_63, _res_hit_T_79) @[PMP.scala 134:61]
    node res_hit_2 = mux(_res_hit_T_54, _res_hit_T_62, _res_hit_T_80) @[PMP.scala 134:8]
    node _res_ignore_T_2 = eq(io.pmp[5].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_2 = and(default, _res_ignore_T_2) @[PMP.scala 165:26]
    node _res_T_90 = eq(io.pmp[5].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_91 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_92 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_93 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_94 = eq(io.pmp[5].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_12 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_95 = cat(res_hi_12, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_96 = eq(_res_T_95, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_13 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_97 = cat(res_hi_13, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_98 = eq(_res_T_97, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_14 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_99 = cat(res_hi_14, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_100 = eq(_res_T_99, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_15 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_101 = cat(res_hi_15, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_102 = eq(_res_T_101, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_16 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_103 = cat(res_hi_16, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_104 = eq(_res_T_103, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_17 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_105 = cat(res_hi_17, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_106 = eq(_res_T_105, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_107 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_108 = and(_res_T_107, res_hit_2) @[PMP.scala 178:23]
    node _res_T_109 = and(_res_T_108, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_110 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_111 = and(_res_T_109, _res_T_110) @[PMP.scala 178:41]
    node _res_T_112 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_113 = and(_res_T_112, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_114 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_115 = and(_res_T_113, _res_T_114) @[PMP.scala 179:43]
    node _res_T_116 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_117 = and(_res_T_116, res_hit_2) @[PMP.scala 178:23]
    node _res_T_118 = and(_res_T_117, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_119 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_120 = and(_res_T_118, _res_T_119) @[PMP.scala 178:41]
    node _res_T_121 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_122 = and(_res_T_121, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_123 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_124 = and(_res_T_122, _res_T_123) @[PMP.scala 179:43]
    node _res_T_125 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_126 = and(_res_T_125, res_hit_2) @[PMP.scala 178:23]
    node _res_T_127 = and(_res_T_126, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_128 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_129 = and(_res_T_127, _res_T_128) @[PMP.scala 178:41]
    node _res_T_130 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_131 = and(_res_T_130, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_132 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_133 = and(_res_T_131, _res_T_132) @[PMP.scala 179:43]
    wire res_cur_2 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_2.mask <= io.pmp[5].mask
    res_cur_2.addr <= io.pmp[5].addr
    res_cur_2.cfg.r <= io.pmp[5].cfg.r
    res_cur_2.cfg.w <= io.pmp[5].cfg.w
    res_cur_2.cfg.x <= io.pmp[5].cfg.x
    res_cur_2.cfg.a <= io.pmp[5].cfg.a
    res_cur_2.cfg.res <= io.pmp[5].cfg.res
    res_cur_2.cfg.l <= io.pmp[5].cfg.l
    node _res_cur_cfg_r_T_4 = or(io.pmp[5].cfg.r, res_ignore_2) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_5 = and(UInt<1>("h01"), _res_cur_cfg_r_T_4) @[PMP.scala 183:26]
    res_cur_2.cfg.r <= _res_cur_cfg_r_T_5 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_4 = or(io.pmp[5].cfg.w, res_ignore_2) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_5 = and(UInt<1>("h01"), _res_cur_cfg_w_T_4) @[PMP.scala 184:26]
    res_cur_2.cfg.w <= _res_cur_cfg_w_T_5 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_4 = or(io.pmp[5].cfg.x, res_ignore_2) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_5 = and(UInt<1>("h01"), _res_cur_cfg_x_T_4) @[PMP.scala 185:26]
    res_cur_2.cfg.x <= _res_cur_cfg_x_T_5 @[PMP.scala 185:15]
    node _res_T_134 = mux(res_hit_2, res_cur_2, _res_T_89) @[PMP.scala 186:8]
    node _res_hit_T_81 = bits(io.pmp[4].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_82 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_83 = not(_res_hit_T_82) @[PMP.scala 62:29]
    node _res_hit_T_84 = or(_res_hit_T_83, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_85 = not(_res_hit_T_84) @[PMP.scala 62:27]
    node _res_hit_T_86 = xor(io.addr, _res_hit_T_85) @[PMP.scala 65:47]
    node _res_hit_T_87 = not(io.pmp[4].mask) @[PMP.scala 65:54]
    node _res_hit_T_88 = and(_res_hit_T_86, _res_hit_T_87) @[PMP.scala 65:52]
    node _res_hit_T_89 = eq(_res_hit_T_88, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_90 = bits(io.pmp[4].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_91 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_92 = dshl(_res_hit_T_91, io.size) @[package.scala 234:77]
    node _res_hit_T_93 = bits(_res_hit_T_92, 1, 0) @[package.scala 234:82]
    node _res_hit_T_94 = not(_res_hit_T_93) @[package.scala 234:46]
    node _res_hit_T_95 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_96 = not(_res_hit_T_95) @[PMP.scala 62:29]
    node _res_hit_T_97 = or(_res_hit_T_96, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_98 = not(_res_hit_T_97) @[PMP.scala 62:27]
    node _res_hit_T_99 = lt(io.addr, _res_hit_T_98) @[PMP.scala 79:9]
    node _res_hit_T_100 = eq(_res_hit_T_99, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_101 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_102 = not(_res_hit_T_101) @[PMP.scala 62:29]
    node _res_hit_T_103 = or(_res_hit_T_102, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_104 = not(_res_hit_T_103) @[PMP.scala 62:27]
    node _res_hit_T_105 = lt(io.addr, _res_hit_T_104) @[PMP.scala 79:9]
    node _res_hit_T_106 = and(_res_hit_T_100, _res_hit_T_105) @[PMP.scala 96:48]
    node _res_hit_T_107 = and(_res_hit_T_90, _res_hit_T_106) @[PMP.scala 134:61]
    node res_hit_3 = mux(_res_hit_T_81, _res_hit_T_89, _res_hit_T_107) @[PMP.scala 134:8]
    node _res_ignore_T_3 = eq(io.pmp[4].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_3 = and(default, _res_ignore_T_3) @[PMP.scala 165:26]
    node _res_T_135 = eq(io.pmp[4].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_136 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_137 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_138 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_139 = eq(io.pmp[4].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_18 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_140 = cat(res_hi_18, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_141 = eq(_res_T_140, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_19 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_142 = cat(res_hi_19, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_143 = eq(_res_T_142, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_20 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_144 = cat(res_hi_20, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_145 = eq(_res_T_144, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_21 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_146 = cat(res_hi_21, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_147 = eq(_res_T_146, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_22 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_148 = cat(res_hi_22, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_149 = eq(_res_T_148, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_23 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_150 = cat(res_hi_23, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_151 = eq(_res_T_150, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_152 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_153 = and(_res_T_152, res_hit_3) @[PMP.scala 178:23]
    node _res_T_154 = and(_res_T_153, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_155 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_156 = and(_res_T_154, _res_T_155) @[PMP.scala 178:41]
    node _res_T_157 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_158 = and(_res_T_157, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_159 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_160 = and(_res_T_158, _res_T_159) @[PMP.scala 179:43]
    node _res_T_161 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_162 = and(_res_T_161, res_hit_3) @[PMP.scala 178:23]
    node _res_T_163 = and(_res_T_162, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_164 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_165 = and(_res_T_163, _res_T_164) @[PMP.scala 178:41]
    node _res_T_166 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_167 = and(_res_T_166, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_168 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_169 = and(_res_T_167, _res_T_168) @[PMP.scala 179:43]
    node _res_T_170 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_171 = and(_res_T_170, res_hit_3) @[PMP.scala 178:23]
    node _res_T_172 = and(_res_T_171, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_173 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_174 = and(_res_T_172, _res_T_173) @[PMP.scala 178:41]
    node _res_T_175 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_176 = and(_res_T_175, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_177 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_178 = and(_res_T_176, _res_T_177) @[PMP.scala 179:43]
    wire res_cur_3 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_3.mask <= io.pmp[4].mask
    res_cur_3.addr <= io.pmp[4].addr
    res_cur_3.cfg.r <= io.pmp[4].cfg.r
    res_cur_3.cfg.w <= io.pmp[4].cfg.w
    res_cur_3.cfg.x <= io.pmp[4].cfg.x
    res_cur_3.cfg.a <= io.pmp[4].cfg.a
    res_cur_3.cfg.res <= io.pmp[4].cfg.res
    res_cur_3.cfg.l <= io.pmp[4].cfg.l
    node _res_cur_cfg_r_T_6 = or(io.pmp[4].cfg.r, res_ignore_3) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_7 = and(UInt<1>("h01"), _res_cur_cfg_r_T_6) @[PMP.scala 183:26]
    res_cur_3.cfg.r <= _res_cur_cfg_r_T_7 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_6 = or(io.pmp[4].cfg.w, res_ignore_3) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_7 = and(UInt<1>("h01"), _res_cur_cfg_w_T_6) @[PMP.scala 184:26]
    res_cur_3.cfg.w <= _res_cur_cfg_w_T_7 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_6 = or(io.pmp[4].cfg.x, res_ignore_3) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_7 = and(UInt<1>("h01"), _res_cur_cfg_x_T_6) @[PMP.scala 185:26]
    res_cur_3.cfg.x <= _res_cur_cfg_x_T_7 @[PMP.scala 185:15]
    node _res_T_179 = mux(res_hit_3, res_cur_3, _res_T_134) @[PMP.scala 186:8]
    node _res_hit_T_108 = bits(io.pmp[3].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_109 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_110 = not(_res_hit_T_109) @[PMP.scala 62:29]
    node _res_hit_T_111 = or(_res_hit_T_110, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_112 = not(_res_hit_T_111) @[PMP.scala 62:27]
    node _res_hit_T_113 = xor(io.addr, _res_hit_T_112) @[PMP.scala 65:47]
    node _res_hit_T_114 = not(io.pmp[3].mask) @[PMP.scala 65:54]
    node _res_hit_T_115 = and(_res_hit_T_113, _res_hit_T_114) @[PMP.scala 65:52]
    node _res_hit_T_116 = eq(_res_hit_T_115, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_117 = bits(io.pmp[3].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_118 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_119 = dshl(_res_hit_T_118, io.size) @[package.scala 234:77]
    node _res_hit_T_120 = bits(_res_hit_T_119, 1, 0) @[package.scala 234:82]
    node _res_hit_T_121 = not(_res_hit_T_120) @[package.scala 234:46]
    node _res_hit_T_122 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_123 = not(_res_hit_T_122) @[PMP.scala 62:29]
    node _res_hit_T_124 = or(_res_hit_T_123, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_125 = not(_res_hit_T_124) @[PMP.scala 62:27]
    node _res_hit_T_126 = lt(io.addr, _res_hit_T_125) @[PMP.scala 79:9]
    node _res_hit_T_127 = eq(_res_hit_T_126, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_128 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_129 = not(_res_hit_T_128) @[PMP.scala 62:29]
    node _res_hit_T_130 = or(_res_hit_T_129, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_131 = not(_res_hit_T_130) @[PMP.scala 62:27]
    node _res_hit_T_132 = lt(io.addr, _res_hit_T_131) @[PMP.scala 79:9]
    node _res_hit_T_133 = and(_res_hit_T_127, _res_hit_T_132) @[PMP.scala 96:48]
    node _res_hit_T_134 = and(_res_hit_T_117, _res_hit_T_133) @[PMP.scala 134:61]
    node res_hit_4 = mux(_res_hit_T_108, _res_hit_T_116, _res_hit_T_134) @[PMP.scala 134:8]
    node _res_ignore_T_4 = eq(io.pmp[3].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_4 = and(default, _res_ignore_T_4) @[PMP.scala 165:26]
    node _res_T_180 = eq(io.pmp[3].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_181 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_182 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_183 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_184 = eq(io.pmp[3].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_24 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_185 = cat(res_hi_24, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_186 = eq(_res_T_185, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_25 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_187 = cat(res_hi_25, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_188 = eq(_res_T_187, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_26 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_189 = cat(res_hi_26, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_190 = eq(_res_T_189, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_27 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_191 = cat(res_hi_27, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_192 = eq(_res_T_191, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_28 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_193 = cat(res_hi_28, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_194 = eq(_res_T_193, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_29 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_195 = cat(res_hi_29, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_196 = eq(_res_T_195, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_197 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_198 = and(_res_T_197, res_hit_4) @[PMP.scala 178:23]
    node _res_T_199 = and(_res_T_198, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_200 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_201 = and(_res_T_199, _res_T_200) @[PMP.scala 178:41]
    node _res_T_202 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_203 = and(_res_T_202, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_204 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_205 = and(_res_T_203, _res_T_204) @[PMP.scala 179:43]
    node _res_T_206 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_207 = and(_res_T_206, res_hit_4) @[PMP.scala 178:23]
    node _res_T_208 = and(_res_T_207, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_209 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_210 = and(_res_T_208, _res_T_209) @[PMP.scala 178:41]
    node _res_T_211 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_212 = and(_res_T_211, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_213 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_214 = and(_res_T_212, _res_T_213) @[PMP.scala 179:43]
    node _res_T_215 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_216 = and(_res_T_215, res_hit_4) @[PMP.scala 178:23]
    node _res_T_217 = and(_res_T_216, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_218 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_219 = and(_res_T_217, _res_T_218) @[PMP.scala 178:41]
    node _res_T_220 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_221 = and(_res_T_220, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_222 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_223 = and(_res_T_221, _res_T_222) @[PMP.scala 179:43]
    wire res_cur_4 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_4.mask <= io.pmp[3].mask
    res_cur_4.addr <= io.pmp[3].addr
    res_cur_4.cfg.r <= io.pmp[3].cfg.r
    res_cur_4.cfg.w <= io.pmp[3].cfg.w
    res_cur_4.cfg.x <= io.pmp[3].cfg.x
    res_cur_4.cfg.a <= io.pmp[3].cfg.a
    res_cur_4.cfg.res <= io.pmp[3].cfg.res
    res_cur_4.cfg.l <= io.pmp[3].cfg.l
    node _res_cur_cfg_r_T_8 = or(io.pmp[3].cfg.r, res_ignore_4) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_9 = and(UInt<1>("h01"), _res_cur_cfg_r_T_8) @[PMP.scala 183:26]
    res_cur_4.cfg.r <= _res_cur_cfg_r_T_9 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_8 = or(io.pmp[3].cfg.w, res_ignore_4) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_9 = and(UInt<1>("h01"), _res_cur_cfg_w_T_8) @[PMP.scala 184:26]
    res_cur_4.cfg.w <= _res_cur_cfg_w_T_9 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_8 = or(io.pmp[3].cfg.x, res_ignore_4) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_9 = and(UInt<1>("h01"), _res_cur_cfg_x_T_8) @[PMP.scala 185:26]
    res_cur_4.cfg.x <= _res_cur_cfg_x_T_9 @[PMP.scala 185:15]
    node _res_T_224 = mux(res_hit_4, res_cur_4, _res_T_179) @[PMP.scala 186:8]
    node _res_hit_T_135 = bits(io.pmp[2].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_136 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_137 = not(_res_hit_T_136) @[PMP.scala 62:29]
    node _res_hit_T_138 = or(_res_hit_T_137, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_139 = not(_res_hit_T_138) @[PMP.scala 62:27]
    node _res_hit_T_140 = xor(io.addr, _res_hit_T_139) @[PMP.scala 65:47]
    node _res_hit_T_141 = not(io.pmp[2].mask) @[PMP.scala 65:54]
    node _res_hit_T_142 = and(_res_hit_T_140, _res_hit_T_141) @[PMP.scala 65:52]
    node _res_hit_T_143 = eq(_res_hit_T_142, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_144 = bits(io.pmp[2].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_145 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_146 = dshl(_res_hit_T_145, io.size) @[package.scala 234:77]
    node _res_hit_T_147 = bits(_res_hit_T_146, 1, 0) @[package.scala 234:82]
    node _res_hit_T_148 = not(_res_hit_T_147) @[package.scala 234:46]
    node _res_hit_T_149 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_150 = not(_res_hit_T_149) @[PMP.scala 62:29]
    node _res_hit_T_151 = or(_res_hit_T_150, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_152 = not(_res_hit_T_151) @[PMP.scala 62:27]
    node _res_hit_T_153 = lt(io.addr, _res_hit_T_152) @[PMP.scala 79:9]
    node _res_hit_T_154 = eq(_res_hit_T_153, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_155 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_156 = not(_res_hit_T_155) @[PMP.scala 62:29]
    node _res_hit_T_157 = or(_res_hit_T_156, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_158 = not(_res_hit_T_157) @[PMP.scala 62:27]
    node _res_hit_T_159 = lt(io.addr, _res_hit_T_158) @[PMP.scala 79:9]
    node _res_hit_T_160 = and(_res_hit_T_154, _res_hit_T_159) @[PMP.scala 96:48]
    node _res_hit_T_161 = and(_res_hit_T_144, _res_hit_T_160) @[PMP.scala 134:61]
    node res_hit_5 = mux(_res_hit_T_135, _res_hit_T_143, _res_hit_T_161) @[PMP.scala 134:8]
    node _res_ignore_T_5 = eq(io.pmp[2].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_5 = and(default, _res_ignore_T_5) @[PMP.scala 165:26]
    node _res_T_225 = eq(io.pmp[2].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_226 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_227 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_228 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_229 = eq(io.pmp[2].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_30 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_230 = cat(res_hi_30, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_231 = eq(_res_T_230, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_31 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_232 = cat(res_hi_31, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_233 = eq(_res_T_232, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_32 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_234 = cat(res_hi_32, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_235 = eq(_res_T_234, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_33 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_236 = cat(res_hi_33, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_237 = eq(_res_T_236, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_34 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_238 = cat(res_hi_34, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_239 = eq(_res_T_238, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_35 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_240 = cat(res_hi_35, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_241 = eq(_res_T_240, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_242 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_243 = and(_res_T_242, res_hit_5) @[PMP.scala 178:23]
    node _res_T_244 = and(_res_T_243, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_245 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_246 = and(_res_T_244, _res_T_245) @[PMP.scala 178:41]
    node _res_T_247 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_248 = and(_res_T_247, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_249 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_250 = and(_res_T_248, _res_T_249) @[PMP.scala 179:43]
    node _res_T_251 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_252 = and(_res_T_251, res_hit_5) @[PMP.scala 178:23]
    node _res_T_253 = and(_res_T_252, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_254 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_255 = and(_res_T_253, _res_T_254) @[PMP.scala 178:41]
    node _res_T_256 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_257 = and(_res_T_256, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_258 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_259 = and(_res_T_257, _res_T_258) @[PMP.scala 179:43]
    node _res_T_260 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_261 = and(_res_T_260, res_hit_5) @[PMP.scala 178:23]
    node _res_T_262 = and(_res_T_261, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_263 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_264 = and(_res_T_262, _res_T_263) @[PMP.scala 178:41]
    node _res_T_265 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_266 = and(_res_T_265, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_267 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_268 = and(_res_T_266, _res_T_267) @[PMP.scala 179:43]
    wire res_cur_5 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_5.mask <= io.pmp[2].mask
    res_cur_5.addr <= io.pmp[2].addr
    res_cur_5.cfg.r <= io.pmp[2].cfg.r
    res_cur_5.cfg.w <= io.pmp[2].cfg.w
    res_cur_5.cfg.x <= io.pmp[2].cfg.x
    res_cur_5.cfg.a <= io.pmp[2].cfg.a
    res_cur_5.cfg.res <= io.pmp[2].cfg.res
    res_cur_5.cfg.l <= io.pmp[2].cfg.l
    node _res_cur_cfg_r_T_10 = or(io.pmp[2].cfg.r, res_ignore_5) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_11 = and(UInt<1>("h01"), _res_cur_cfg_r_T_10) @[PMP.scala 183:26]
    res_cur_5.cfg.r <= _res_cur_cfg_r_T_11 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_10 = or(io.pmp[2].cfg.w, res_ignore_5) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_11 = and(UInt<1>("h01"), _res_cur_cfg_w_T_10) @[PMP.scala 184:26]
    res_cur_5.cfg.w <= _res_cur_cfg_w_T_11 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_10 = or(io.pmp[2].cfg.x, res_ignore_5) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_11 = and(UInt<1>("h01"), _res_cur_cfg_x_T_10) @[PMP.scala 185:26]
    res_cur_5.cfg.x <= _res_cur_cfg_x_T_11 @[PMP.scala 185:15]
    node _res_T_269 = mux(res_hit_5, res_cur_5, _res_T_224) @[PMP.scala 186:8]
    node _res_hit_T_162 = bits(io.pmp[1].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_163 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_164 = not(_res_hit_T_163) @[PMP.scala 62:29]
    node _res_hit_T_165 = or(_res_hit_T_164, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_166 = not(_res_hit_T_165) @[PMP.scala 62:27]
    node _res_hit_T_167 = xor(io.addr, _res_hit_T_166) @[PMP.scala 65:47]
    node _res_hit_T_168 = not(io.pmp[1].mask) @[PMP.scala 65:54]
    node _res_hit_T_169 = and(_res_hit_T_167, _res_hit_T_168) @[PMP.scala 65:52]
    node _res_hit_T_170 = eq(_res_hit_T_169, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_171 = bits(io.pmp[1].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_172 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_173 = dshl(_res_hit_T_172, io.size) @[package.scala 234:77]
    node _res_hit_T_174 = bits(_res_hit_T_173, 1, 0) @[package.scala 234:82]
    node _res_hit_T_175 = not(_res_hit_T_174) @[package.scala 234:46]
    node _res_hit_T_176 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_177 = not(_res_hit_T_176) @[PMP.scala 62:29]
    node _res_hit_T_178 = or(_res_hit_T_177, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_179 = not(_res_hit_T_178) @[PMP.scala 62:27]
    node _res_hit_T_180 = lt(io.addr, _res_hit_T_179) @[PMP.scala 79:9]
    node _res_hit_T_181 = eq(_res_hit_T_180, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_182 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_183 = not(_res_hit_T_182) @[PMP.scala 62:29]
    node _res_hit_T_184 = or(_res_hit_T_183, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_185 = not(_res_hit_T_184) @[PMP.scala 62:27]
    node _res_hit_T_186 = lt(io.addr, _res_hit_T_185) @[PMP.scala 79:9]
    node _res_hit_T_187 = and(_res_hit_T_181, _res_hit_T_186) @[PMP.scala 96:48]
    node _res_hit_T_188 = and(_res_hit_T_171, _res_hit_T_187) @[PMP.scala 134:61]
    node res_hit_6 = mux(_res_hit_T_162, _res_hit_T_170, _res_hit_T_188) @[PMP.scala 134:8]
    node _res_ignore_T_6 = eq(io.pmp[1].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_6 = and(default, _res_ignore_T_6) @[PMP.scala 165:26]
    node _res_T_270 = eq(io.pmp[1].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_271 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_272 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_273 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_274 = eq(io.pmp[1].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_36 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_275 = cat(res_hi_36, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_276 = eq(_res_T_275, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_37 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_277 = cat(res_hi_37, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_278 = eq(_res_T_277, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_38 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_279 = cat(res_hi_38, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_280 = eq(_res_T_279, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_39 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_281 = cat(res_hi_39, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_282 = eq(_res_T_281, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_40 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_283 = cat(res_hi_40, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_284 = eq(_res_T_283, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_41 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_285 = cat(res_hi_41, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_286 = eq(_res_T_285, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_287 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_288 = and(_res_T_287, res_hit_6) @[PMP.scala 178:23]
    node _res_T_289 = and(_res_T_288, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_290 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_291 = and(_res_T_289, _res_T_290) @[PMP.scala 178:41]
    node _res_T_292 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_293 = and(_res_T_292, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_294 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_295 = and(_res_T_293, _res_T_294) @[PMP.scala 179:43]
    node _res_T_296 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_297 = and(_res_T_296, res_hit_6) @[PMP.scala 178:23]
    node _res_T_298 = and(_res_T_297, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_299 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_300 = and(_res_T_298, _res_T_299) @[PMP.scala 178:41]
    node _res_T_301 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_302 = and(_res_T_301, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_303 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_304 = and(_res_T_302, _res_T_303) @[PMP.scala 179:43]
    node _res_T_305 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_306 = and(_res_T_305, res_hit_6) @[PMP.scala 178:23]
    node _res_T_307 = and(_res_T_306, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_308 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_309 = and(_res_T_307, _res_T_308) @[PMP.scala 178:41]
    node _res_T_310 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_311 = and(_res_T_310, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_312 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_313 = and(_res_T_311, _res_T_312) @[PMP.scala 179:43]
    wire res_cur_6 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_6.mask <= io.pmp[1].mask
    res_cur_6.addr <= io.pmp[1].addr
    res_cur_6.cfg.r <= io.pmp[1].cfg.r
    res_cur_6.cfg.w <= io.pmp[1].cfg.w
    res_cur_6.cfg.x <= io.pmp[1].cfg.x
    res_cur_6.cfg.a <= io.pmp[1].cfg.a
    res_cur_6.cfg.res <= io.pmp[1].cfg.res
    res_cur_6.cfg.l <= io.pmp[1].cfg.l
    node _res_cur_cfg_r_T_12 = or(io.pmp[1].cfg.r, res_ignore_6) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_13 = and(UInt<1>("h01"), _res_cur_cfg_r_T_12) @[PMP.scala 183:26]
    res_cur_6.cfg.r <= _res_cur_cfg_r_T_13 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_12 = or(io.pmp[1].cfg.w, res_ignore_6) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_13 = and(UInt<1>("h01"), _res_cur_cfg_w_T_12) @[PMP.scala 184:26]
    res_cur_6.cfg.w <= _res_cur_cfg_w_T_13 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_12 = or(io.pmp[1].cfg.x, res_ignore_6) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_13 = and(UInt<1>("h01"), _res_cur_cfg_x_T_12) @[PMP.scala 185:26]
    res_cur_6.cfg.x <= _res_cur_cfg_x_T_13 @[PMP.scala 185:15]
    node _res_T_314 = mux(res_hit_6, res_cur_6, _res_T_269) @[PMP.scala 186:8]
    node _res_hit_T_189 = bits(io.pmp[0].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_190 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_191 = not(_res_hit_T_190) @[PMP.scala 62:29]
    node _res_hit_T_192 = or(_res_hit_T_191, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_193 = not(_res_hit_T_192) @[PMP.scala 62:27]
    node _res_hit_T_194 = xor(io.addr, _res_hit_T_193) @[PMP.scala 65:47]
    node _res_hit_T_195 = not(io.pmp[0].mask) @[PMP.scala 65:54]
    node _res_hit_T_196 = and(_res_hit_T_194, _res_hit_T_195) @[PMP.scala 65:52]
    node _res_hit_T_197 = eq(_res_hit_T_196, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_198 = bits(io.pmp[0].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_199 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_200 = dshl(_res_hit_T_199, io.size) @[package.scala 234:77]
    node _res_hit_T_201 = bits(_res_hit_T_200, 1, 0) @[package.scala 234:82]
    node _res_hit_T_202 = not(_res_hit_T_201) @[package.scala 234:46]
    node _res_hit_T_203 = shl(pmp0.addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_204 = not(_res_hit_T_203) @[PMP.scala 62:29]
    node _res_hit_T_205 = or(_res_hit_T_204, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_206 = not(_res_hit_T_205) @[PMP.scala 62:27]
    node _res_hit_T_207 = lt(io.addr, _res_hit_T_206) @[PMP.scala 79:9]
    node _res_hit_T_208 = eq(_res_hit_T_207, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_209 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_210 = not(_res_hit_T_209) @[PMP.scala 62:29]
    node _res_hit_T_211 = or(_res_hit_T_210, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_212 = not(_res_hit_T_211) @[PMP.scala 62:27]
    node _res_hit_T_213 = lt(io.addr, _res_hit_T_212) @[PMP.scala 79:9]
    node _res_hit_T_214 = and(_res_hit_T_208, _res_hit_T_213) @[PMP.scala 96:48]
    node _res_hit_T_215 = and(_res_hit_T_198, _res_hit_T_214) @[PMP.scala 134:61]
    node res_hit_7 = mux(_res_hit_T_189, _res_hit_T_197, _res_hit_T_215) @[PMP.scala 134:8]
    node _res_ignore_T_7 = eq(io.pmp[0].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_7 = and(default, _res_ignore_T_7) @[PMP.scala 165:26]
    node _res_T_315 = eq(io.pmp[0].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_316 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_317 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_318 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_319 = eq(io.pmp[0].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_42 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_320 = cat(res_hi_42, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_321 = eq(_res_T_320, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_43 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_322 = cat(res_hi_43, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_323 = eq(_res_T_322, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_44 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_324 = cat(res_hi_44, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_325 = eq(_res_T_324, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_45 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_326 = cat(res_hi_45, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_327 = eq(_res_T_326, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_46 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_328 = cat(res_hi_46, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_329 = eq(_res_T_328, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_47 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_330 = cat(res_hi_47, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_331 = eq(_res_T_330, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_332 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_333 = and(_res_T_332, res_hit_7) @[PMP.scala 178:23]
    node _res_T_334 = and(_res_T_333, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_335 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_336 = and(_res_T_334, _res_T_335) @[PMP.scala 178:41]
    node _res_T_337 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_338 = and(_res_T_337, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_339 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_340 = and(_res_T_338, _res_T_339) @[PMP.scala 179:43]
    node _res_T_341 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_342 = and(_res_T_341, res_hit_7) @[PMP.scala 178:23]
    node _res_T_343 = and(_res_T_342, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_344 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_345 = and(_res_T_343, _res_T_344) @[PMP.scala 178:41]
    node _res_T_346 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_347 = and(_res_T_346, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_348 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_349 = and(_res_T_347, _res_T_348) @[PMP.scala 179:43]
    node _res_T_350 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_351 = and(_res_T_350, res_hit_7) @[PMP.scala 178:23]
    node _res_T_352 = and(_res_T_351, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_353 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_354 = and(_res_T_352, _res_T_353) @[PMP.scala 178:41]
    node _res_T_355 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_356 = and(_res_T_355, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_357 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_358 = and(_res_T_356, _res_T_357) @[PMP.scala 179:43]
    wire res_cur_7 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_7.mask <= io.pmp[0].mask
    res_cur_7.addr <= io.pmp[0].addr
    res_cur_7.cfg.r <= io.pmp[0].cfg.r
    res_cur_7.cfg.w <= io.pmp[0].cfg.w
    res_cur_7.cfg.x <= io.pmp[0].cfg.x
    res_cur_7.cfg.a <= io.pmp[0].cfg.a
    res_cur_7.cfg.res <= io.pmp[0].cfg.res
    res_cur_7.cfg.l <= io.pmp[0].cfg.l
    node _res_cur_cfg_r_T_14 = or(io.pmp[0].cfg.r, res_ignore_7) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_15 = and(UInt<1>("h01"), _res_cur_cfg_r_T_14) @[PMP.scala 183:26]
    res_cur_7.cfg.r <= _res_cur_cfg_r_T_15 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_14 = or(io.pmp[0].cfg.w, res_ignore_7) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_15 = and(UInt<1>("h01"), _res_cur_cfg_w_T_14) @[PMP.scala 184:26]
    res_cur_7.cfg.w <= _res_cur_cfg_w_T_15 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_14 = or(io.pmp[0].cfg.x, res_ignore_7) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_15 = and(UInt<1>("h01"), _res_cur_cfg_x_T_14) @[PMP.scala 185:26]
    res_cur_7.cfg.x <= _res_cur_cfg_x_T_15 @[PMP.scala 185:15]
    node res = mux(res_hit_7, res_cur_7, _res_T_314) @[PMP.scala 186:8]
    io.r <= res.cfg.r @[PMP.scala 189:8]
    io.w <= res.cfg.w @[PMP.scala 190:8]
    io.x <= res.cfg.x @[PMP.scala 191:8]
    
  module OptimizationBarrier_19 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_20 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_21 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_22 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_23 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_24 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_25 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_26 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_27 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_28 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_29 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_30 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_31 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_32 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_33 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_34 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_35 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_36 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module PMPChecker_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip prv : UInt<2>, flip pmp : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}[8], flip addr : UInt<32>, flip size : UInt<2>, r : UInt<1>, w : UInt<1>, x : UInt<1>}
    
    node default = gt(io.prv, UInt<1>("h01")) @[PMP.scala 157:56]
    wire _pmp0_WIRE : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>} @[PMP.scala 158:35]
    _pmp0_WIRE.mask <= UInt<32>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.addr <= UInt<30>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.r <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.w <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.x <= UInt<1>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.a <= UInt<2>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.res <= UInt<2>("h00") @[PMP.scala 158:35]
    _pmp0_WIRE.cfg.l <= UInt<1>("h00") @[PMP.scala 158:35]
    wire pmp0 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    pmp0.mask <= _pmp0_WIRE.mask
    pmp0.addr <= _pmp0_WIRE.addr
    pmp0.cfg.r <= _pmp0_WIRE.cfg.r
    pmp0.cfg.w <= _pmp0_WIRE.cfg.w
    pmp0.cfg.x <= _pmp0_WIRE.cfg.x
    pmp0.cfg.a <= _pmp0_WIRE.cfg.a
    pmp0.cfg.res <= _pmp0_WIRE.cfg.res
    pmp0.cfg.l <= _pmp0_WIRE.cfg.l
    pmp0.cfg.r <= default @[PMP.scala 159:14]
    pmp0.cfg.w <= default @[PMP.scala 160:14]
    pmp0.cfg.x <= default @[PMP.scala 161:14]
    node _res_hit_T = bits(io.pmp[7].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_1 = shl(io.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_2 = not(_res_hit_T_1) @[PMP.scala 62:29]
    node _res_hit_T_3 = or(_res_hit_T_2, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_4 = not(_res_hit_T_3) @[PMP.scala 62:27]
    node _res_hit_T_5 = xor(io.addr, _res_hit_T_4) @[PMP.scala 65:47]
    node _res_hit_T_6 = not(io.pmp[7].mask) @[PMP.scala 65:54]
    node _res_hit_T_7 = and(_res_hit_T_5, _res_hit_T_6) @[PMP.scala 65:52]
    node _res_hit_T_8 = eq(_res_hit_T_7, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_9 = bits(io.pmp[7].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_10 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_11 = dshl(_res_hit_T_10, io.size) @[package.scala 234:77]
    node _res_hit_T_12 = bits(_res_hit_T_11, 1, 0) @[package.scala 234:82]
    node _res_hit_T_13 = not(_res_hit_T_12) @[package.scala 234:46]
    node _res_hit_T_14 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_15 = not(_res_hit_T_14) @[PMP.scala 62:29]
    node _res_hit_T_16 = or(_res_hit_T_15, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_17 = not(_res_hit_T_16) @[PMP.scala 62:27]
    node _res_hit_T_18 = lt(io.addr, _res_hit_T_17) @[PMP.scala 79:9]
    node _res_hit_T_19 = eq(_res_hit_T_18, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_20 = shl(io.pmp[7].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_21 = not(_res_hit_T_20) @[PMP.scala 62:29]
    node _res_hit_T_22 = or(_res_hit_T_21, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_23 = not(_res_hit_T_22) @[PMP.scala 62:27]
    node _res_hit_T_24 = lt(io.addr, _res_hit_T_23) @[PMP.scala 79:9]
    node _res_hit_T_25 = and(_res_hit_T_19, _res_hit_T_24) @[PMP.scala 96:48]
    node _res_hit_T_26 = and(_res_hit_T_9, _res_hit_T_25) @[PMP.scala 134:61]
    node res_hit = mux(_res_hit_T, _res_hit_T_8, _res_hit_T_26) @[PMP.scala 134:8]
    node _res_ignore_T = eq(io.pmp[7].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore = and(default, _res_ignore_T) @[PMP.scala 165:26]
    node _res_T = eq(io.pmp[7].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_1 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_2 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_3 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_4 = eq(io.pmp[7].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_5 = cat(res_hi, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_6 = eq(_res_T_5, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_1 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_7 = cat(res_hi_1, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_8 = eq(_res_T_7, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_2 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_9 = cat(res_hi_2, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_10 = eq(_res_T_9, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_3 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_11 = cat(res_hi_3, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_12 = eq(_res_T_11, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_4 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_13 = cat(res_hi_4, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_14 = eq(_res_T_13, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_5 = cat(io.pmp[7].cfg.x, io.pmp[7].cfg.w) @[Cat.scala 30:58]
    node _res_T_15 = cat(res_hi_5, io.pmp[7].cfg.r) @[Cat.scala 30:58]
    node _res_T_16 = eq(_res_T_15, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_17 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_18 = and(_res_T_17, res_hit) @[PMP.scala 178:23]
    node _res_T_19 = and(_res_T_18, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_20 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_21 = and(_res_T_19, _res_T_20) @[PMP.scala 178:41]
    node _res_T_22 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_23 = and(_res_T_22, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_24 = eq(io.pmp[7].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_25 = and(_res_T_23, _res_T_24) @[PMP.scala 179:43]
    node _res_T_26 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_27 = and(_res_T_26, res_hit) @[PMP.scala 178:23]
    node _res_T_28 = and(_res_T_27, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_29 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_30 = and(_res_T_28, _res_T_29) @[PMP.scala 178:41]
    node _res_T_31 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_32 = and(_res_T_31, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_33 = eq(io.pmp[7].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_34 = and(_res_T_32, _res_T_33) @[PMP.scala 179:43]
    node _res_T_35 = eq(res_ignore, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_36 = and(_res_T_35, res_hit) @[PMP.scala 178:23]
    node _res_T_37 = and(_res_T_36, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_38 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_39 = and(_res_T_37, _res_T_38) @[PMP.scala 178:41]
    node _res_T_40 = and(io.pmp[7].cfg.l, res_hit) @[PMP.scala 179:25]
    node _res_T_41 = and(_res_T_40, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_42 = eq(io.pmp[7].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_43 = and(_res_T_41, _res_T_42) @[PMP.scala 179:43]
    wire res_cur : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur.mask <= io.pmp[7].mask
    res_cur.addr <= io.pmp[7].addr
    res_cur.cfg.r <= io.pmp[7].cfg.r
    res_cur.cfg.w <= io.pmp[7].cfg.w
    res_cur.cfg.x <= io.pmp[7].cfg.x
    res_cur.cfg.a <= io.pmp[7].cfg.a
    res_cur.cfg.res <= io.pmp[7].cfg.res
    res_cur.cfg.l <= io.pmp[7].cfg.l
    node _res_cur_cfg_r_T = or(io.pmp[7].cfg.r, res_ignore) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_1 = and(UInt<1>("h01"), _res_cur_cfg_r_T) @[PMP.scala 183:26]
    res_cur.cfg.r <= _res_cur_cfg_r_T_1 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T = or(io.pmp[7].cfg.w, res_ignore) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_1 = and(UInt<1>("h01"), _res_cur_cfg_w_T) @[PMP.scala 184:26]
    res_cur.cfg.w <= _res_cur_cfg_w_T_1 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T = or(io.pmp[7].cfg.x, res_ignore) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_1 = and(UInt<1>("h01"), _res_cur_cfg_x_T) @[PMP.scala 185:26]
    res_cur.cfg.x <= _res_cur_cfg_x_T_1 @[PMP.scala 185:15]
    node _res_T_44 = mux(res_hit, res_cur, pmp0) @[PMP.scala 186:8]
    node _res_hit_T_27 = bits(io.pmp[6].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_28 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_29 = not(_res_hit_T_28) @[PMP.scala 62:29]
    node _res_hit_T_30 = or(_res_hit_T_29, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_31 = not(_res_hit_T_30) @[PMP.scala 62:27]
    node _res_hit_T_32 = xor(io.addr, _res_hit_T_31) @[PMP.scala 65:47]
    node _res_hit_T_33 = not(io.pmp[6].mask) @[PMP.scala 65:54]
    node _res_hit_T_34 = and(_res_hit_T_32, _res_hit_T_33) @[PMP.scala 65:52]
    node _res_hit_T_35 = eq(_res_hit_T_34, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_36 = bits(io.pmp[6].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_37 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_38 = dshl(_res_hit_T_37, io.size) @[package.scala 234:77]
    node _res_hit_T_39 = bits(_res_hit_T_38, 1, 0) @[package.scala 234:82]
    node _res_hit_T_40 = not(_res_hit_T_39) @[package.scala 234:46]
    node _res_hit_T_41 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_42 = not(_res_hit_T_41) @[PMP.scala 62:29]
    node _res_hit_T_43 = or(_res_hit_T_42, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_44 = not(_res_hit_T_43) @[PMP.scala 62:27]
    node _res_hit_T_45 = lt(io.addr, _res_hit_T_44) @[PMP.scala 79:9]
    node _res_hit_T_46 = eq(_res_hit_T_45, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_47 = shl(io.pmp[6].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_48 = not(_res_hit_T_47) @[PMP.scala 62:29]
    node _res_hit_T_49 = or(_res_hit_T_48, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_50 = not(_res_hit_T_49) @[PMP.scala 62:27]
    node _res_hit_T_51 = lt(io.addr, _res_hit_T_50) @[PMP.scala 79:9]
    node _res_hit_T_52 = and(_res_hit_T_46, _res_hit_T_51) @[PMP.scala 96:48]
    node _res_hit_T_53 = and(_res_hit_T_36, _res_hit_T_52) @[PMP.scala 134:61]
    node res_hit_1 = mux(_res_hit_T_27, _res_hit_T_35, _res_hit_T_53) @[PMP.scala 134:8]
    node _res_ignore_T_1 = eq(io.pmp[6].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_1 = and(default, _res_ignore_T_1) @[PMP.scala 165:26]
    node _res_T_45 = eq(io.pmp[6].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_46 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_47 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_48 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_49 = eq(io.pmp[6].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_6 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_50 = cat(res_hi_6, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_51 = eq(_res_T_50, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_7 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_52 = cat(res_hi_7, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_53 = eq(_res_T_52, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_8 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_54 = cat(res_hi_8, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_55 = eq(_res_T_54, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_9 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_56 = cat(res_hi_9, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_57 = eq(_res_T_56, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_10 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_58 = cat(res_hi_10, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_59 = eq(_res_T_58, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_11 = cat(io.pmp[6].cfg.x, io.pmp[6].cfg.w) @[Cat.scala 30:58]
    node _res_T_60 = cat(res_hi_11, io.pmp[6].cfg.r) @[Cat.scala 30:58]
    node _res_T_61 = eq(_res_T_60, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_62 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_63 = and(_res_T_62, res_hit_1) @[PMP.scala 178:23]
    node _res_T_64 = and(_res_T_63, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_65 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_66 = and(_res_T_64, _res_T_65) @[PMP.scala 178:41]
    node _res_T_67 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_68 = and(_res_T_67, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_69 = eq(io.pmp[6].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_70 = and(_res_T_68, _res_T_69) @[PMP.scala 179:43]
    node _res_T_71 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_72 = and(_res_T_71, res_hit_1) @[PMP.scala 178:23]
    node _res_T_73 = and(_res_T_72, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_74 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_75 = and(_res_T_73, _res_T_74) @[PMP.scala 178:41]
    node _res_T_76 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_77 = and(_res_T_76, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_78 = eq(io.pmp[6].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_79 = and(_res_T_77, _res_T_78) @[PMP.scala 179:43]
    node _res_T_80 = eq(res_ignore_1, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_81 = and(_res_T_80, res_hit_1) @[PMP.scala 178:23]
    node _res_T_82 = and(_res_T_81, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_83 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_84 = and(_res_T_82, _res_T_83) @[PMP.scala 178:41]
    node _res_T_85 = and(io.pmp[6].cfg.l, res_hit_1) @[PMP.scala 179:25]
    node _res_T_86 = and(_res_T_85, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_87 = eq(io.pmp[6].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_88 = and(_res_T_86, _res_T_87) @[PMP.scala 179:43]
    wire res_cur_1 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_1.mask <= io.pmp[6].mask
    res_cur_1.addr <= io.pmp[6].addr
    res_cur_1.cfg.r <= io.pmp[6].cfg.r
    res_cur_1.cfg.w <= io.pmp[6].cfg.w
    res_cur_1.cfg.x <= io.pmp[6].cfg.x
    res_cur_1.cfg.a <= io.pmp[6].cfg.a
    res_cur_1.cfg.res <= io.pmp[6].cfg.res
    res_cur_1.cfg.l <= io.pmp[6].cfg.l
    node _res_cur_cfg_r_T_2 = or(io.pmp[6].cfg.r, res_ignore_1) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_3 = and(UInt<1>("h01"), _res_cur_cfg_r_T_2) @[PMP.scala 183:26]
    res_cur_1.cfg.r <= _res_cur_cfg_r_T_3 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_2 = or(io.pmp[6].cfg.w, res_ignore_1) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_3 = and(UInt<1>("h01"), _res_cur_cfg_w_T_2) @[PMP.scala 184:26]
    res_cur_1.cfg.w <= _res_cur_cfg_w_T_3 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_2 = or(io.pmp[6].cfg.x, res_ignore_1) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_3 = and(UInt<1>("h01"), _res_cur_cfg_x_T_2) @[PMP.scala 185:26]
    res_cur_1.cfg.x <= _res_cur_cfg_x_T_3 @[PMP.scala 185:15]
    node _res_T_89 = mux(res_hit_1, res_cur_1, _res_T_44) @[PMP.scala 186:8]
    node _res_hit_T_54 = bits(io.pmp[5].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_55 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_56 = not(_res_hit_T_55) @[PMP.scala 62:29]
    node _res_hit_T_57 = or(_res_hit_T_56, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_58 = not(_res_hit_T_57) @[PMP.scala 62:27]
    node _res_hit_T_59 = xor(io.addr, _res_hit_T_58) @[PMP.scala 65:47]
    node _res_hit_T_60 = not(io.pmp[5].mask) @[PMP.scala 65:54]
    node _res_hit_T_61 = and(_res_hit_T_59, _res_hit_T_60) @[PMP.scala 65:52]
    node _res_hit_T_62 = eq(_res_hit_T_61, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_63 = bits(io.pmp[5].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_64 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_65 = dshl(_res_hit_T_64, io.size) @[package.scala 234:77]
    node _res_hit_T_66 = bits(_res_hit_T_65, 1, 0) @[package.scala 234:82]
    node _res_hit_T_67 = not(_res_hit_T_66) @[package.scala 234:46]
    node _res_hit_T_68 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_69 = not(_res_hit_T_68) @[PMP.scala 62:29]
    node _res_hit_T_70 = or(_res_hit_T_69, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_71 = not(_res_hit_T_70) @[PMP.scala 62:27]
    node _res_hit_T_72 = lt(io.addr, _res_hit_T_71) @[PMP.scala 79:9]
    node _res_hit_T_73 = eq(_res_hit_T_72, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_74 = shl(io.pmp[5].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_75 = not(_res_hit_T_74) @[PMP.scala 62:29]
    node _res_hit_T_76 = or(_res_hit_T_75, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_77 = not(_res_hit_T_76) @[PMP.scala 62:27]
    node _res_hit_T_78 = lt(io.addr, _res_hit_T_77) @[PMP.scala 79:9]
    node _res_hit_T_79 = and(_res_hit_T_73, _res_hit_T_78) @[PMP.scala 96:48]
    node _res_hit_T_80 = and(_res_hit_T_63, _res_hit_T_79) @[PMP.scala 134:61]
    node res_hit_2 = mux(_res_hit_T_54, _res_hit_T_62, _res_hit_T_80) @[PMP.scala 134:8]
    node _res_ignore_T_2 = eq(io.pmp[5].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_2 = and(default, _res_ignore_T_2) @[PMP.scala 165:26]
    node _res_T_90 = eq(io.pmp[5].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_91 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_92 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_93 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_94 = eq(io.pmp[5].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_12 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_95 = cat(res_hi_12, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_96 = eq(_res_T_95, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_13 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_97 = cat(res_hi_13, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_98 = eq(_res_T_97, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_14 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_99 = cat(res_hi_14, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_100 = eq(_res_T_99, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_15 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_101 = cat(res_hi_15, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_102 = eq(_res_T_101, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_16 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_103 = cat(res_hi_16, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_104 = eq(_res_T_103, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_17 = cat(io.pmp[5].cfg.x, io.pmp[5].cfg.w) @[Cat.scala 30:58]
    node _res_T_105 = cat(res_hi_17, io.pmp[5].cfg.r) @[Cat.scala 30:58]
    node _res_T_106 = eq(_res_T_105, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_107 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_108 = and(_res_T_107, res_hit_2) @[PMP.scala 178:23]
    node _res_T_109 = and(_res_T_108, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_110 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_111 = and(_res_T_109, _res_T_110) @[PMP.scala 178:41]
    node _res_T_112 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_113 = and(_res_T_112, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_114 = eq(io.pmp[5].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_115 = and(_res_T_113, _res_T_114) @[PMP.scala 179:43]
    node _res_T_116 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_117 = and(_res_T_116, res_hit_2) @[PMP.scala 178:23]
    node _res_T_118 = and(_res_T_117, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_119 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_120 = and(_res_T_118, _res_T_119) @[PMP.scala 178:41]
    node _res_T_121 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_122 = and(_res_T_121, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_123 = eq(io.pmp[5].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_124 = and(_res_T_122, _res_T_123) @[PMP.scala 179:43]
    node _res_T_125 = eq(res_ignore_2, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_126 = and(_res_T_125, res_hit_2) @[PMP.scala 178:23]
    node _res_T_127 = and(_res_T_126, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_128 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_129 = and(_res_T_127, _res_T_128) @[PMP.scala 178:41]
    node _res_T_130 = and(io.pmp[5].cfg.l, res_hit_2) @[PMP.scala 179:25]
    node _res_T_131 = and(_res_T_130, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_132 = eq(io.pmp[5].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_133 = and(_res_T_131, _res_T_132) @[PMP.scala 179:43]
    wire res_cur_2 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_2.mask <= io.pmp[5].mask
    res_cur_2.addr <= io.pmp[5].addr
    res_cur_2.cfg.r <= io.pmp[5].cfg.r
    res_cur_2.cfg.w <= io.pmp[5].cfg.w
    res_cur_2.cfg.x <= io.pmp[5].cfg.x
    res_cur_2.cfg.a <= io.pmp[5].cfg.a
    res_cur_2.cfg.res <= io.pmp[5].cfg.res
    res_cur_2.cfg.l <= io.pmp[5].cfg.l
    node _res_cur_cfg_r_T_4 = or(io.pmp[5].cfg.r, res_ignore_2) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_5 = and(UInt<1>("h01"), _res_cur_cfg_r_T_4) @[PMP.scala 183:26]
    res_cur_2.cfg.r <= _res_cur_cfg_r_T_5 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_4 = or(io.pmp[5].cfg.w, res_ignore_2) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_5 = and(UInt<1>("h01"), _res_cur_cfg_w_T_4) @[PMP.scala 184:26]
    res_cur_2.cfg.w <= _res_cur_cfg_w_T_5 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_4 = or(io.pmp[5].cfg.x, res_ignore_2) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_5 = and(UInt<1>("h01"), _res_cur_cfg_x_T_4) @[PMP.scala 185:26]
    res_cur_2.cfg.x <= _res_cur_cfg_x_T_5 @[PMP.scala 185:15]
    node _res_T_134 = mux(res_hit_2, res_cur_2, _res_T_89) @[PMP.scala 186:8]
    node _res_hit_T_81 = bits(io.pmp[4].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_82 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_83 = not(_res_hit_T_82) @[PMP.scala 62:29]
    node _res_hit_T_84 = or(_res_hit_T_83, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_85 = not(_res_hit_T_84) @[PMP.scala 62:27]
    node _res_hit_T_86 = xor(io.addr, _res_hit_T_85) @[PMP.scala 65:47]
    node _res_hit_T_87 = not(io.pmp[4].mask) @[PMP.scala 65:54]
    node _res_hit_T_88 = and(_res_hit_T_86, _res_hit_T_87) @[PMP.scala 65:52]
    node _res_hit_T_89 = eq(_res_hit_T_88, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_90 = bits(io.pmp[4].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_91 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_92 = dshl(_res_hit_T_91, io.size) @[package.scala 234:77]
    node _res_hit_T_93 = bits(_res_hit_T_92, 1, 0) @[package.scala 234:82]
    node _res_hit_T_94 = not(_res_hit_T_93) @[package.scala 234:46]
    node _res_hit_T_95 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_96 = not(_res_hit_T_95) @[PMP.scala 62:29]
    node _res_hit_T_97 = or(_res_hit_T_96, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_98 = not(_res_hit_T_97) @[PMP.scala 62:27]
    node _res_hit_T_99 = lt(io.addr, _res_hit_T_98) @[PMP.scala 79:9]
    node _res_hit_T_100 = eq(_res_hit_T_99, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_101 = shl(io.pmp[4].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_102 = not(_res_hit_T_101) @[PMP.scala 62:29]
    node _res_hit_T_103 = or(_res_hit_T_102, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_104 = not(_res_hit_T_103) @[PMP.scala 62:27]
    node _res_hit_T_105 = lt(io.addr, _res_hit_T_104) @[PMP.scala 79:9]
    node _res_hit_T_106 = and(_res_hit_T_100, _res_hit_T_105) @[PMP.scala 96:48]
    node _res_hit_T_107 = and(_res_hit_T_90, _res_hit_T_106) @[PMP.scala 134:61]
    node res_hit_3 = mux(_res_hit_T_81, _res_hit_T_89, _res_hit_T_107) @[PMP.scala 134:8]
    node _res_ignore_T_3 = eq(io.pmp[4].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_3 = and(default, _res_ignore_T_3) @[PMP.scala 165:26]
    node _res_T_135 = eq(io.pmp[4].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_136 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_137 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_138 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_139 = eq(io.pmp[4].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_18 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_140 = cat(res_hi_18, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_141 = eq(_res_T_140, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_19 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_142 = cat(res_hi_19, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_143 = eq(_res_T_142, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_20 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_144 = cat(res_hi_20, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_145 = eq(_res_T_144, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_21 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_146 = cat(res_hi_21, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_147 = eq(_res_T_146, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_22 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_148 = cat(res_hi_22, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_149 = eq(_res_T_148, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_23 = cat(io.pmp[4].cfg.x, io.pmp[4].cfg.w) @[Cat.scala 30:58]
    node _res_T_150 = cat(res_hi_23, io.pmp[4].cfg.r) @[Cat.scala 30:58]
    node _res_T_151 = eq(_res_T_150, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_152 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_153 = and(_res_T_152, res_hit_3) @[PMP.scala 178:23]
    node _res_T_154 = and(_res_T_153, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_155 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_156 = and(_res_T_154, _res_T_155) @[PMP.scala 178:41]
    node _res_T_157 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_158 = and(_res_T_157, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_159 = eq(io.pmp[4].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_160 = and(_res_T_158, _res_T_159) @[PMP.scala 179:43]
    node _res_T_161 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_162 = and(_res_T_161, res_hit_3) @[PMP.scala 178:23]
    node _res_T_163 = and(_res_T_162, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_164 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_165 = and(_res_T_163, _res_T_164) @[PMP.scala 178:41]
    node _res_T_166 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_167 = and(_res_T_166, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_168 = eq(io.pmp[4].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_169 = and(_res_T_167, _res_T_168) @[PMP.scala 179:43]
    node _res_T_170 = eq(res_ignore_3, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_171 = and(_res_T_170, res_hit_3) @[PMP.scala 178:23]
    node _res_T_172 = and(_res_T_171, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_173 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_174 = and(_res_T_172, _res_T_173) @[PMP.scala 178:41]
    node _res_T_175 = and(io.pmp[4].cfg.l, res_hit_3) @[PMP.scala 179:25]
    node _res_T_176 = and(_res_T_175, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_177 = eq(io.pmp[4].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_178 = and(_res_T_176, _res_T_177) @[PMP.scala 179:43]
    wire res_cur_3 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_3.mask <= io.pmp[4].mask
    res_cur_3.addr <= io.pmp[4].addr
    res_cur_3.cfg.r <= io.pmp[4].cfg.r
    res_cur_3.cfg.w <= io.pmp[4].cfg.w
    res_cur_3.cfg.x <= io.pmp[4].cfg.x
    res_cur_3.cfg.a <= io.pmp[4].cfg.a
    res_cur_3.cfg.res <= io.pmp[4].cfg.res
    res_cur_3.cfg.l <= io.pmp[4].cfg.l
    node _res_cur_cfg_r_T_6 = or(io.pmp[4].cfg.r, res_ignore_3) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_7 = and(UInt<1>("h01"), _res_cur_cfg_r_T_6) @[PMP.scala 183:26]
    res_cur_3.cfg.r <= _res_cur_cfg_r_T_7 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_6 = or(io.pmp[4].cfg.w, res_ignore_3) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_7 = and(UInt<1>("h01"), _res_cur_cfg_w_T_6) @[PMP.scala 184:26]
    res_cur_3.cfg.w <= _res_cur_cfg_w_T_7 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_6 = or(io.pmp[4].cfg.x, res_ignore_3) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_7 = and(UInt<1>("h01"), _res_cur_cfg_x_T_6) @[PMP.scala 185:26]
    res_cur_3.cfg.x <= _res_cur_cfg_x_T_7 @[PMP.scala 185:15]
    node _res_T_179 = mux(res_hit_3, res_cur_3, _res_T_134) @[PMP.scala 186:8]
    node _res_hit_T_108 = bits(io.pmp[3].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_109 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_110 = not(_res_hit_T_109) @[PMP.scala 62:29]
    node _res_hit_T_111 = or(_res_hit_T_110, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_112 = not(_res_hit_T_111) @[PMP.scala 62:27]
    node _res_hit_T_113 = xor(io.addr, _res_hit_T_112) @[PMP.scala 65:47]
    node _res_hit_T_114 = not(io.pmp[3].mask) @[PMP.scala 65:54]
    node _res_hit_T_115 = and(_res_hit_T_113, _res_hit_T_114) @[PMP.scala 65:52]
    node _res_hit_T_116 = eq(_res_hit_T_115, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_117 = bits(io.pmp[3].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_118 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_119 = dshl(_res_hit_T_118, io.size) @[package.scala 234:77]
    node _res_hit_T_120 = bits(_res_hit_T_119, 1, 0) @[package.scala 234:82]
    node _res_hit_T_121 = not(_res_hit_T_120) @[package.scala 234:46]
    node _res_hit_T_122 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_123 = not(_res_hit_T_122) @[PMP.scala 62:29]
    node _res_hit_T_124 = or(_res_hit_T_123, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_125 = not(_res_hit_T_124) @[PMP.scala 62:27]
    node _res_hit_T_126 = lt(io.addr, _res_hit_T_125) @[PMP.scala 79:9]
    node _res_hit_T_127 = eq(_res_hit_T_126, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_128 = shl(io.pmp[3].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_129 = not(_res_hit_T_128) @[PMP.scala 62:29]
    node _res_hit_T_130 = or(_res_hit_T_129, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_131 = not(_res_hit_T_130) @[PMP.scala 62:27]
    node _res_hit_T_132 = lt(io.addr, _res_hit_T_131) @[PMP.scala 79:9]
    node _res_hit_T_133 = and(_res_hit_T_127, _res_hit_T_132) @[PMP.scala 96:48]
    node _res_hit_T_134 = and(_res_hit_T_117, _res_hit_T_133) @[PMP.scala 134:61]
    node res_hit_4 = mux(_res_hit_T_108, _res_hit_T_116, _res_hit_T_134) @[PMP.scala 134:8]
    node _res_ignore_T_4 = eq(io.pmp[3].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_4 = and(default, _res_ignore_T_4) @[PMP.scala 165:26]
    node _res_T_180 = eq(io.pmp[3].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_181 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_182 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_183 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_184 = eq(io.pmp[3].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_24 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_185 = cat(res_hi_24, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_186 = eq(_res_T_185, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_25 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_187 = cat(res_hi_25, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_188 = eq(_res_T_187, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_26 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_189 = cat(res_hi_26, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_190 = eq(_res_T_189, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_27 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_191 = cat(res_hi_27, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_192 = eq(_res_T_191, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_28 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_193 = cat(res_hi_28, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_194 = eq(_res_T_193, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_29 = cat(io.pmp[3].cfg.x, io.pmp[3].cfg.w) @[Cat.scala 30:58]
    node _res_T_195 = cat(res_hi_29, io.pmp[3].cfg.r) @[Cat.scala 30:58]
    node _res_T_196 = eq(_res_T_195, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_197 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_198 = and(_res_T_197, res_hit_4) @[PMP.scala 178:23]
    node _res_T_199 = and(_res_T_198, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_200 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_201 = and(_res_T_199, _res_T_200) @[PMP.scala 178:41]
    node _res_T_202 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_203 = and(_res_T_202, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_204 = eq(io.pmp[3].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_205 = and(_res_T_203, _res_T_204) @[PMP.scala 179:43]
    node _res_T_206 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_207 = and(_res_T_206, res_hit_4) @[PMP.scala 178:23]
    node _res_T_208 = and(_res_T_207, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_209 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_210 = and(_res_T_208, _res_T_209) @[PMP.scala 178:41]
    node _res_T_211 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_212 = and(_res_T_211, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_213 = eq(io.pmp[3].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_214 = and(_res_T_212, _res_T_213) @[PMP.scala 179:43]
    node _res_T_215 = eq(res_ignore_4, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_216 = and(_res_T_215, res_hit_4) @[PMP.scala 178:23]
    node _res_T_217 = and(_res_T_216, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_218 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_219 = and(_res_T_217, _res_T_218) @[PMP.scala 178:41]
    node _res_T_220 = and(io.pmp[3].cfg.l, res_hit_4) @[PMP.scala 179:25]
    node _res_T_221 = and(_res_T_220, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_222 = eq(io.pmp[3].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_223 = and(_res_T_221, _res_T_222) @[PMP.scala 179:43]
    wire res_cur_4 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_4.mask <= io.pmp[3].mask
    res_cur_4.addr <= io.pmp[3].addr
    res_cur_4.cfg.r <= io.pmp[3].cfg.r
    res_cur_4.cfg.w <= io.pmp[3].cfg.w
    res_cur_4.cfg.x <= io.pmp[3].cfg.x
    res_cur_4.cfg.a <= io.pmp[3].cfg.a
    res_cur_4.cfg.res <= io.pmp[3].cfg.res
    res_cur_4.cfg.l <= io.pmp[3].cfg.l
    node _res_cur_cfg_r_T_8 = or(io.pmp[3].cfg.r, res_ignore_4) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_9 = and(UInt<1>("h01"), _res_cur_cfg_r_T_8) @[PMP.scala 183:26]
    res_cur_4.cfg.r <= _res_cur_cfg_r_T_9 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_8 = or(io.pmp[3].cfg.w, res_ignore_4) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_9 = and(UInt<1>("h01"), _res_cur_cfg_w_T_8) @[PMP.scala 184:26]
    res_cur_4.cfg.w <= _res_cur_cfg_w_T_9 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_8 = or(io.pmp[3].cfg.x, res_ignore_4) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_9 = and(UInt<1>("h01"), _res_cur_cfg_x_T_8) @[PMP.scala 185:26]
    res_cur_4.cfg.x <= _res_cur_cfg_x_T_9 @[PMP.scala 185:15]
    node _res_T_224 = mux(res_hit_4, res_cur_4, _res_T_179) @[PMP.scala 186:8]
    node _res_hit_T_135 = bits(io.pmp[2].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_136 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_137 = not(_res_hit_T_136) @[PMP.scala 62:29]
    node _res_hit_T_138 = or(_res_hit_T_137, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_139 = not(_res_hit_T_138) @[PMP.scala 62:27]
    node _res_hit_T_140 = xor(io.addr, _res_hit_T_139) @[PMP.scala 65:47]
    node _res_hit_T_141 = not(io.pmp[2].mask) @[PMP.scala 65:54]
    node _res_hit_T_142 = and(_res_hit_T_140, _res_hit_T_141) @[PMP.scala 65:52]
    node _res_hit_T_143 = eq(_res_hit_T_142, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_144 = bits(io.pmp[2].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_145 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_146 = dshl(_res_hit_T_145, io.size) @[package.scala 234:77]
    node _res_hit_T_147 = bits(_res_hit_T_146, 1, 0) @[package.scala 234:82]
    node _res_hit_T_148 = not(_res_hit_T_147) @[package.scala 234:46]
    node _res_hit_T_149 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_150 = not(_res_hit_T_149) @[PMP.scala 62:29]
    node _res_hit_T_151 = or(_res_hit_T_150, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_152 = not(_res_hit_T_151) @[PMP.scala 62:27]
    node _res_hit_T_153 = lt(io.addr, _res_hit_T_152) @[PMP.scala 79:9]
    node _res_hit_T_154 = eq(_res_hit_T_153, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_155 = shl(io.pmp[2].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_156 = not(_res_hit_T_155) @[PMP.scala 62:29]
    node _res_hit_T_157 = or(_res_hit_T_156, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_158 = not(_res_hit_T_157) @[PMP.scala 62:27]
    node _res_hit_T_159 = lt(io.addr, _res_hit_T_158) @[PMP.scala 79:9]
    node _res_hit_T_160 = and(_res_hit_T_154, _res_hit_T_159) @[PMP.scala 96:48]
    node _res_hit_T_161 = and(_res_hit_T_144, _res_hit_T_160) @[PMP.scala 134:61]
    node res_hit_5 = mux(_res_hit_T_135, _res_hit_T_143, _res_hit_T_161) @[PMP.scala 134:8]
    node _res_ignore_T_5 = eq(io.pmp[2].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_5 = and(default, _res_ignore_T_5) @[PMP.scala 165:26]
    node _res_T_225 = eq(io.pmp[2].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_226 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_227 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_228 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_229 = eq(io.pmp[2].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_30 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_230 = cat(res_hi_30, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_231 = eq(_res_T_230, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_31 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_232 = cat(res_hi_31, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_233 = eq(_res_T_232, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_32 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_234 = cat(res_hi_32, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_235 = eq(_res_T_234, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_33 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_236 = cat(res_hi_33, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_237 = eq(_res_T_236, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_34 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_238 = cat(res_hi_34, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_239 = eq(_res_T_238, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_35 = cat(io.pmp[2].cfg.x, io.pmp[2].cfg.w) @[Cat.scala 30:58]
    node _res_T_240 = cat(res_hi_35, io.pmp[2].cfg.r) @[Cat.scala 30:58]
    node _res_T_241 = eq(_res_T_240, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_242 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_243 = and(_res_T_242, res_hit_5) @[PMP.scala 178:23]
    node _res_T_244 = and(_res_T_243, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_245 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_246 = and(_res_T_244, _res_T_245) @[PMP.scala 178:41]
    node _res_T_247 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_248 = and(_res_T_247, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_249 = eq(io.pmp[2].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_250 = and(_res_T_248, _res_T_249) @[PMP.scala 179:43]
    node _res_T_251 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_252 = and(_res_T_251, res_hit_5) @[PMP.scala 178:23]
    node _res_T_253 = and(_res_T_252, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_254 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_255 = and(_res_T_253, _res_T_254) @[PMP.scala 178:41]
    node _res_T_256 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_257 = and(_res_T_256, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_258 = eq(io.pmp[2].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_259 = and(_res_T_257, _res_T_258) @[PMP.scala 179:43]
    node _res_T_260 = eq(res_ignore_5, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_261 = and(_res_T_260, res_hit_5) @[PMP.scala 178:23]
    node _res_T_262 = and(_res_T_261, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_263 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_264 = and(_res_T_262, _res_T_263) @[PMP.scala 178:41]
    node _res_T_265 = and(io.pmp[2].cfg.l, res_hit_5) @[PMP.scala 179:25]
    node _res_T_266 = and(_res_T_265, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_267 = eq(io.pmp[2].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_268 = and(_res_T_266, _res_T_267) @[PMP.scala 179:43]
    wire res_cur_5 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_5.mask <= io.pmp[2].mask
    res_cur_5.addr <= io.pmp[2].addr
    res_cur_5.cfg.r <= io.pmp[2].cfg.r
    res_cur_5.cfg.w <= io.pmp[2].cfg.w
    res_cur_5.cfg.x <= io.pmp[2].cfg.x
    res_cur_5.cfg.a <= io.pmp[2].cfg.a
    res_cur_5.cfg.res <= io.pmp[2].cfg.res
    res_cur_5.cfg.l <= io.pmp[2].cfg.l
    node _res_cur_cfg_r_T_10 = or(io.pmp[2].cfg.r, res_ignore_5) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_11 = and(UInt<1>("h01"), _res_cur_cfg_r_T_10) @[PMP.scala 183:26]
    res_cur_5.cfg.r <= _res_cur_cfg_r_T_11 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_10 = or(io.pmp[2].cfg.w, res_ignore_5) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_11 = and(UInt<1>("h01"), _res_cur_cfg_w_T_10) @[PMP.scala 184:26]
    res_cur_5.cfg.w <= _res_cur_cfg_w_T_11 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_10 = or(io.pmp[2].cfg.x, res_ignore_5) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_11 = and(UInt<1>("h01"), _res_cur_cfg_x_T_10) @[PMP.scala 185:26]
    res_cur_5.cfg.x <= _res_cur_cfg_x_T_11 @[PMP.scala 185:15]
    node _res_T_269 = mux(res_hit_5, res_cur_5, _res_T_224) @[PMP.scala 186:8]
    node _res_hit_T_162 = bits(io.pmp[1].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_163 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_164 = not(_res_hit_T_163) @[PMP.scala 62:29]
    node _res_hit_T_165 = or(_res_hit_T_164, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_166 = not(_res_hit_T_165) @[PMP.scala 62:27]
    node _res_hit_T_167 = xor(io.addr, _res_hit_T_166) @[PMP.scala 65:47]
    node _res_hit_T_168 = not(io.pmp[1].mask) @[PMP.scala 65:54]
    node _res_hit_T_169 = and(_res_hit_T_167, _res_hit_T_168) @[PMP.scala 65:52]
    node _res_hit_T_170 = eq(_res_hit_T_169, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_171 = bits(io.pmp[1].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_172 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_173 = dshl(_res_hit_T_172, io.size) @[package.scala 234:77]
    node _res_hit_T_174 = bits(_res_hit_T_173, 1, 0) @[package.scala 234:82]
    node _res_hit_T_175 = not(_res_hit_T_174) @[package.scala 234:46]
    node _res_hit_T_176 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_177 = not(_res_hit_T_176) @[PMP.scala 62:29]
    node _res_hit_T_178 = or(_res_hit_T_177, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_179 = not(_res_hit_T_178) @[PMP.scala 62:27]
    node _res_hit_T_180 = lt(io.addr, _res_hit_T_179) @[PMP.scala 79:9]
    node _res_hit_T_181 = eq(_res_hit_T_180, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_182 = shl(io.pmp[1].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_183 = not(_res_hit_T_182) @[PMP.scala 62:29]
    node _res_hit_T_184 = or(_res_hit_T_183, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_185 = not(_res_hit_T_184) @[PMP.scala 62:27]
    node _res_hit_T_186 = lt(io.addr, _res_hit_T_185) @[PMP.scala 79:9]
    node _res_hit_T_187 = and(_res_hit_T_181, _res_hit_T_186) @[PMP.scala 96:48]
    node _res_hit_T_188 = and(_res_hit_T_171, _res_hit_T_187) @[PMP.scala 134:61]
    node res_hit_6 = mux(_res_hit_T_162, _res_hit_T_170, _res_hit_T_188) @[PMP.scala 134:8]
    node _res_ignore_T_6 = eq(io.pmp[1].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_6 = and(default, _res_ignore_T_6) @[PMP.scala 165:26]
    node _res_T_270 = eq(io.pmp[1].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_271 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_272 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_273 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_274 = eq(io.pmp[1].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_36 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_275 = cat(res_hi_36, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_276 = eq(_res_T_275, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_37 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_277 = cat(res_hi_37, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_278 = eq(_res_T_277, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_38 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_279 = cat(res_hi_38, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_280 = eq(_res_T_279, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_39 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_281 = cat(res_hi_39, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_282 = eq(_res_T_281, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_40 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_283 = cat(res_hi_40, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_284 = eq(_res_T_283, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_41 = cat(io.pmp[1].cfg.x, io.pmp[1].cfg.w) @[Cat.scala 30:58]
    node _res_T_285 = cat(res_hi_41, io.pmp[1].cfg.r) @[Cat.scala 30:58]
    node _res_T_286 = eq(_res_T_285, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_287 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_288 = and(_res_T_287, res_hit_6) @[PMP.scala 178:23]
    node _res_T_289 = and(_res_T_288, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_290 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_291 = and(_res_T_289, _res_T_290) @[PMP.scala 178:41]
    node _res_T_292 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_293 = and(_res_T_292, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_294 = eq(io.pmp[1].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_295 = and(_res_T_293, _res_T_294) @[PMP.scala 179:43]
    node _res_T_296 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_297 = and(_res_T_296, res_hit_6) @[PMP.scala 178:23]
    node _res_T_298 = and(_res_T_297, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_299 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_300 = and(_res_T_298, _res_T_299) @[PMP.scala 178:41]
    node _res_T_301 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_302 = and(_res_T_301, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_303 = eq(io.pmp[1].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_304 = and(_res_T_302, _res_T_303) @[PMP.scala 179:43]
    node _res_T_305 = eq(res_ignore_6, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_306 = and(_res_T_305, res_hit_6) @[PMP.scala 178:23]
    node _res_T_307 = and(_res_T_306, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_308 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_309 = and(_res_T_307, _res_T_308) @[PMP.scala 178:41]
    node _res_T_310 = and(io.pmp[1].cfg.l, res_hit_6) @[PMP.scala 179:25]
    node _res_T_311 = and(_res_T_310, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_312 = eq(io.pmp[1].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_313 = and(_res_T_311, _res_T_312) @[PMP.scala 179:43]
    wire res_cur_6 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_6.mask <= io.pmp[1].mask
    res_cur_6.addr <= io.pmp[1].addr
    res_cur_6.cfg.r <= io.pmp[1].cfg.r
    res_cur_6.cfg.w <= io.pmp[1].cfg.w
    res_cur_6.cfg.x <= io.pmp[1].cfg.x
    res_cur_6.cfg.a <= io.pmp[1].cfg.a
    res_cur_6.cfg.res <= io.pmp[1].cfg.res
    res_cur_6.cfg.l <= io.pmp[1].cfg.l
    node _res_cur_cfg_r_T_12 = or(io.pmp[1].cfg.r, res_ignore_6) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_13 = and(UInt<1>("h01"), _res_cur_cfg_r_T_12) @[PMP.scala 183:26]
    res_cur_6.cfg.r <= _res_cur_cfg_r_T_13 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_12 = or(io.pmp[1].cfg.w, res_ignore_6) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_13 = and(UInt<1>("h01"), _res_cur_cfg_w_T_12) @[PMP.scala 184:26]
    res_cur_6.cfg.w <= _res_cur_cfg_w_T_13 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_12 = or(io.pmp[1].cfg.x, res_ignore_6) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_13 = and(UInt<1>("h01"), _res_cur_cfg_x_T_12) @[PMP.scala 185:26]
    res_cur_6.cfg.x <= _res_cur_cfg_x_T_13 @[PMP.scala 185:15]
    node _res_T_314 = mux(res_hit_6, res_cur_6, _res_T_269) @[PMP.scala 186:8]
    node _res_hit_T_189 = bits(io.pmp[0].cfg.a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_190 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_191 = not(_res_hit_T_190) @[PMP.scala 62:29]
    node _res_hit_T_192 = or(_res_hit_T_191, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_193 = not(_res_hit_T_192) @[PMP.scala 62:27]
    node _res_hit_T_194 = xor(io.addr, _res_hit_T_193) @[PMP.scala 65:47]
    node _res_hit_T_195 = not(io.pmp[0].mask) @[PMP.scala 65:54]
    node _res_hit_T_196 = and(_res_hit_T_194, _res_hit_T_195) @[PMP.scala 65:52]
    node _res_hit_T_197 = eq(_res_hit_T_196, UInt<1>("h00")) @[PMP.scala 65:58]
    node _res_hit_T_198 = bits(io.pmp[0].cfg.a, 0, 0) @[PMP.scala 48:26]
    node _res_hit_T_199 = asUInt(asSInt(UInt<2>("h03"))) @[package.scala 234:70]
    node _res_hit_T_200 = dshl(_res_hit_T_199, io.size) @[package.scala 234:77]
    node _res_hit_T_201 = bits(_res_hit_T_200, 1, 0) @[package.scala 234:82]
    node _res_hit_T_202 = not(_res_hit_T_201) @[package.scala 234:46]
    node _res_hit_T_203 = shl(pmp0.addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_204 = not(_res_hit_T_203) @[PMP.scala 62:29]
    node _res_hit_T_205 = or(_res_hit_T_204, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_206 = not(_res_hit_T_205) @[PMP.scala 62:27]
    node _res_hit_T_207 = lt(io.addr, _res_hit_T_206) @[PMP.scala 79:9]
    node _res_hit_T_208 = eq(_res_hit_T_207, UInt<1>("h00")) @[PMP.scala 90:5]
    node _res_hit_T_209 = shl(io.pmp[0].addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_210 = not(_res_hit_T_209) @[PMP.scala 62:29]
    node _res_hit_T_211 = or(_res_hit_T_210, UInt<2>("h03")) @[PMP.scala 62:48]
    node _res_hit_T_212 = not(_res_hit_T_211) @[PMP.scala 62:27]
    node _res_hit_T_213 = lt(io.addr, _res_hit_T_212) @[PMP.scala 79:9]
    node _res_hit_T_214 = and(_res_hit_T_208, _res_hit_T_213) @[PMP.scala 96:48]
    node _res_hit_T_215 = and(_res_hit_T_198, _res_hit_T_214) @[PMP.scala 134:61]
    node res_hit_7 = mux(_res_hit_T_189, _res_hit_T_197, _res_hit_T_215) @[PMP.scala 134:8]
    node _res_ignore_T_7 = eq(io.pmp[0].cfg.l, UInt<1>("h00")) @[PMP.scala 165:29]
    node res_ignore_7 = and(default, _res_ignore_T_7) @[PMP.scala 165:26]
    node _res_T_315 = eq(io.pmp[0].cfg.a, UInt<1>("h00")) @[PMP.scala 169:25]
    node _res_T_316 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 169:25]
    node _res_T_317 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 169:25]
    node _res_T_318 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 169:25]
    node _res_T_319 = eq(io.pmp[0].cfg.l, UInt<1>("h01")) @[PMP.scala 171:21]
    node res_hi_42 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_320 = cat(res_hi_42, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_321 = eq(_res_T_320, UInt<1>("h00")) @[PMP.scala 175:51]
    node res_hi_43 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_322 = cat(res_hi_43, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_323 = eq(_res_T_322, UInt<1>("h01")) @[PMP.scala 175:51]
    node res_hi_44 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_324 = cat(res_hi_44, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_325 = eq(_res_T_324, UInt<2>("h03")) @[PMP.scala 175:51]
    node res_hi_45 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_326 = cat(res_hi_45, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_327 = eq(_res_T_326, UInt<3>("h04")) @[PMP.scala 175:51]
    node res_hi_46 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_328 = cat(res_hi_46, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_329 = eq(_res_T_328, UInt<3>("h05")) @[PMP.scala 175:51]
    node res_hi_47 = cat(io.pmp[0].cfg.x, io.pmp[0].cfg.w) @[Cat.scala 30:58]
    node _res_T_330 = cat(res_hi_47, io.pmp[0].cfg.r) @[Cat.scala 30:58]
    node _res_T_331 = eq(_res_T_330, UInt<3>("h07")) @[PMP.scala 175:51]
    node _res_T_332 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_333 = and(_res_T_332, res_hit_7) @[PMP.scala 178:23]
    node _res_T_334 = and(_res_T_333, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_335 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 178:54]
    node _res_T_336 = and(_res_T_334, _res_T_335) @[PMP.scala 178:41]
    node _res_T_337 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_338 = and(_res_T_337, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_339 = eq(io.pmp[0].cfg.a, UInt<1>("h01")) @[PMP.scala 179:56]
    node _res_T_340 = and(_res_T_338, _res_T_339) @[PMP.scala 179:43]
    node _res_T_341 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_342 = and(_res_T_341, res_hit_7) @[PMP.scala 178:23]
    node _res_T_343 = and(_res_T_342, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_344 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 178:54]
    node _res_T_345 = and(_res_T_343, _res_T_344) @[PMP.scala 178:41]
    node _res_T_346 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_347 = and(_res_T_346, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_348 = eq(io.pmp[0].cfg.a, UInt<2>("h02")) @[PMP.scala 179:56]
    node _res_T_349 = and(_res_T_347, _res_T_348) @[PMP.scala 179:43]
    node _res_T_350 = eq(res_ignore_7, UInt<1>("h00")) @[PMP.scala 178:15]
    node _res_T_351 = and(_res_T_350, res_hit_7) @[PMP.scala 178:23]
    node _res_T_352 = and(_res_T_351, UInt<1>("h01")) @[PMP.scala 178:30]
    node _res_T_353 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 178:54]
    node _res_T_354 = and(_res_T_352, _res_T_353) @[PMP.scala 178:41]
    node _res_T_355 = and(io.pmp[0].cfg.l, res_hit_7) @[PMP.scala 179:25]
    node _res_T_356 = and(_res_T_355, UInt<1>("h01")) @[PMP.scala 179:32]
    node _res_T_357 = eq(io.pmp[0].cfg.a, UInt<2>("h03")) @[PMP.scala 179:56]
    node _res_T_358 = and(_res_T_356, _res_T_357) @[PMP.scala 179:43]
    wire res_cur_7 : {cfg : {l : UInt<1>, res : UInt<2>, a : UInt<2>, x : UInt<1>, w : UInt<1>, r : UInt<1>}, addr : UInt<30>, mask : UInt<32>}
    res_cur_7.mask <= io.pmp[0].mask
    res_cur_7.addr <= io.pmp[0].addr
    res_cur_7.cfg.r <= io.pmp[0].cfg.r
    res_cur_7.cfg.w <= io.pmp[0].cfg.w
    res_cur_7.cfg.x <= io.pmp[0].cfg.x
    res_cur_7.cfg.a <= io.pmp[0].cfg.a
    res_cur_7.cfg.res <= io.pmp[0].cfg.res
    res_cur_7.cfg.l <= io.pmp[0].cfg.l
    node _res_cur_cfg_r_T_14 = or(io.pmp[0].cfg.r, res_ignore_7) @[PMP.scala 183:40]
    node _res_cur_cfg_r_T_15 = and(UInt<1>("h01"), _res_cur_cfg_r_T_14) @[PMP.scala 183:26]
    res_cur_7.cfg.r <= _res_cur_cfg_r_T_15 @[PMP.scala 183:15]
    node _res_cur_cfg_w_T_14 = or(io.pmp[0].cfg.w, res_ignore_7) @[PMP.scala 184:40]
    node _res_cur_cfg_w_T_15 = and(UInt<1>("h01"), _res_cur_cfg_w_T_14) @[PMP.scala 184:26]
    res_cur_7.cfg.w <= _res_cur_cfg_w_T_15 @[PMP.scala 184:15]
    node _res_cur_cfg_x_T_14 = or(io.pmp[0].cfg.x, res_ignore_7) @[PMP.scala 185:40]
    node _res_cur_cfg_x_T_15 = and(UInt<1>("h01"), _res_cur_cfg_x_T_14) @[PMP.scala 185:26]
    res_cur_7.cfg.x <= _res_cur_cfg_x_T_15 @[PMP.scala 185:15]
    node res = mux(res_hit_7, res_cur_7, _res_T_314) @[PMP.scala 186:8]
    io.r <= res.cfg.r @[PMP.scala 189:8]
    io.w <= res.cfg.w @[PMP.scala 190:8]
    io.x <= res.cfg.x @[PMP.scala 191:8]
    
  module OptimizationBarrier_37 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_38 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_39 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_40 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_41 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_42 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_43 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_44 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_45 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_46 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_47 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_48 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_49 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_50 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_51 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_52 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module OptimizationBarrier_53 : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip x : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}, y : {ppn : UInt<20>, u : UInt<1>, g : UInt<1>, ae : UInt<1>, sw : UInt<1>, sx : UInt<1>, sr : UInt<1>, pw : UInt<1>, px : UInt<1>, pr : UInt<1>, ppp : UInt<1>, pal : UInt<1>, paa : UInt<1>, eff : UInt<1>, c : UInt<1>, fragmented_superpage : UInt<1>}}
    
    clock is invalid
    reset is invalid
    io is invalid
    io.y <- io.x @[package.scala 263:12]
    
  module RVCExpander : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : UInt<32>, out : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>}, rvc : UInt<1>}
    
    node _io_rvc_T = bits(io.in, 1, 0) @[RVC.scala 163:20]
    node _io_rvc_T_1 = neq(_io_rvc_T, UInt<2>("h03")) @[RVC.scala 163:26]
    io.rvc <= _io_rvc_T_1 @[RVC.scala 163:12]
    node _io_out_s_opc_T = bits(io.in, 12, 5) @[RVC.scala 53:22]
    node _io_out_s_opc_T_1 = orr(_io_out_s_opc_T) @[RVC.scala 53:29]
    node io_out_s_lo_lo = mux(_io_out_s_opc_T_1, UInt<7>("h013"), UInt<7>("h01f")) @[RVC.scala 53:20]
    node io_out_s_hi_hi_hi = bits(io.in, 10, 7) @[RVC.scala 34:26]
    node io_out_s_hi_hi_lo = bits(io.in, 12, 11) @[RVC.scala 34:35]
    node io_out_s_hi_lo = bits(io.in, 5, 5) @[RVC.scala 34:45]
    node io_out_s_lo_hi = bits(io.in, 6, 6) @[RVC.scala 34:51]
    node io_out_s_lo = cat(io_out_s_lo_hi, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi = cat(io_out_s_hi_hi_hi, io_out_s_hi_hi_lo) @[Cat.scala 30:58]
    node io_out_s_hi = cat(io_out_s_hi_hi, io_out_s_hi_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_1 = cat(io_out_s_hi, io_out_s_lo) @[Cat.scala 30:58]
    node io_out_s_lo_1 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_lo_hi_1 = cat(UInt<2>("h01"), io_out_s_lo_1) @[Cat.scala 30:58]
    node io_out_s_lo_2 = cat(io_out_s_lo_hi_1, io_out_s_lo_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_1 = cat(io_out_s_hi_hi_hi_1, UInt<5>("h02")) @[Cat.scala 30:58]
    node io_out_s_hi_1 = cat(io_out_s_hi_hi_1, UInt<3>("h00")) @[Cat.scala 30:58]
    node _io_out_s_T = cat(io_out_s_hi_1, io_out_s_lo_2) @[Cat.scala 30:58]
    node io_out_s_lo_3 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_1 = cat(UInt<2>("h01"), io_out_s_lo_3) @[Cat.scala 30:58]
    node io_out_s_lo_4 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_2 = cat(UInt<2>("h01"), io_out_s_lo_4) @[Cat.scala 30:58]
    node _io_out_s_T_3 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_0 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_0.bits <= _io_out_s_T @[RVC.scala 22:14]
    io_out_s_0.rd <= _io_out_s_T_1 @[RVC.scala 23:12]
    io_out_s_0.rs1 <= UInt<5>("h02") @[RVC.scala 24:13]
    io_out_s_0.rs2 <= _io_out_s_T_2 @[RVC.scala 25:13]
    io_out_s_0.rs3 <= _io_out_s_T_3 @[RVC.scala 26:13]
    node io_out_s_hi_hi_2 = bits(io.in, 6, 5) @[RVC.scala 36:20]
    node io_out_s_hi_lo_1 = bits(io.in, 12, 10) @[RVC.scala 36:28]
    node io_out_s_hi_2 = cat(io_out_s_hi_hi_2, io_out_s_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_2 = cat(io_out_s_hi_2, UInt<3>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_5 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_hi_lo_1 = cat(UInt<2>("h01"), io_out_s_lo_5) @[Cat.scala 30:58]
    node io_out_s_lo_6 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_lo_hi_2 = cat(UInt<2>("h01"), io_out_s_lo_6) @[Cat.scala 30:58]
    node io_out_s_lo_7 = cat(io_out_s_lo_hi_2, UInt<7>("h07")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_3 = cat(io_out_s_hi_hi_hi_2, io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_3 = cat(io_out_s_hi_hi_3, UInt<3>("h03")) @[Cat.scala 30:58]
    node _io_out_s_T_4 = cat(io_out_s_hi_3, io_out_s_lo_7) @[Cat.scala 30:58]
    node io_out_s_lo_8 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_5 = cat(UInt<2>("h01"), io_out_s_lo_8) @[Cat.scala 30:58]
    node io_out_s_lo_9 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_6 = cat(UInt<2>("h01"), io_out_s_lo_9) @[Cat.scala 30:58]
    node io_out_s_lo_10 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_7 = cat(UInt<2>("h01"), io_out_s_lo_10) @[Cat.scala 30:58]
    node _io_out_s_T_8 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_1 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_1.bits <= _io_out_s_T_4 @[RVC.scala 22:14]
    io_out_s_1.rd <= _io_out_s_T_5 @[RVC.scala 23:12]
    io_out_s_1.rs1 <= _io_out_s_T_6 @[RVC.scala 24:13]
    io_out_s_1.rs2 <= _io_out_s_T_7 @[RVC.scala 25:13]
    io_out_s_1.rs3 <= _io_out_s_T_8 @[RVC.scala 26:13]
    node io_out_s_hi_hi_4 = bits(io.in, 5, 5) @[RVC.scala 35:20]
    node io_out_s_hi_lo_2 = bits(io.in, 12, 10) @[RVC.scala 35:26]
    node io_out_s_lo_hi_3 = bits(io.in, 6, 6) @[RVC.scala 35:36]
    node io_out_s_lo_11 = cat(io_out_s_lo_hi_3, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_4 = cat(io_out_s_hi_hi_4, io_out_s_hi_lo_2) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_3 = cat(io_out_s_hi_4, io_out_s_lo_11) @[Cat.scala 30:58]
    node io_out_s_lo_12 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_hi_lo_2 = cat(UInt<2>("h01"), io_out_s_lo_12) @[Cat.scala 30:58]
    node io_out_s_lo_13 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_lo_hi_4 = cat(UInt<2>("h01"), io_out_s_lo_13) @[Cat.scala 30:58]
    node io_out_s_lo_14 = cat(io_out_s_lo_hi_4, UInt<7>("h03")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_5 = cat(io_out_s_hi_hi_hi_3, io_out_s_hi_hi_lo_2) @[Cat.scala 30:58]
    node io_out_s_hi_5 = cat(io_out_s_hi_hi_5, UInt<3>("h02")) @[Cat.scala 30:58]
    node _io_out_s_T_9 = cat(io_out_s_hi_5, io_out_s_lo_14) @[Cat.scala 30:58]
    node io_out_s_lo_15 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_10 = cat(UInt<2>("h01"), io_out_s_lo_15) @[Cat.scala 30:58]
    node io_out_s_lo_16 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_11 = cat(UInt<2>("h01"), io_out_s_lo_16) @[Cat.scala 30:58]
    node io_out_s_lo_17 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_12 = cat(UInt<2>("h01"), io_out_s_lo_17) @[Cat.scala 30:58]
    node _io_out_s_T_13 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_2 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_2.bits <= _io_out_s_T_9 @[RVC.scala 22:14]
    io_out_s_2.rd <= _io_out_s_T_10 @[RVC.scala 23:12]
    io_out_s_2.rs1 <= _io_out_s_T_11 @[RVC.scala 24:13]
    io_out_s_2.rs2 <= _io_out_s_T_12 @[RVC.scala 25:13]
    io_out_s_2.rs3 <= _io_out_s_T_13 @[RVC.scala 26:13]
    node io_out_s_hi_hi_6 = bits(io.in, 5, 5) @[RVC.scala 35:20]
    node io_out_s_hi_lo_3 = bits(io.in, 12, 10) @[RVC.scala 35:26]
    node io_out_s_lo_hi_5 = bits(io.in, 6, 6) @[RVC.scala 35:36]
    node io_out_s_lo_18 = cat(io_out_s_lo_hi_5, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_6 = cat(io_out_s_hi_hi_6, io_out_s_hi_lo_3) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_4 = cat(io_out_s_hi_6, io_out_s_lo_18) @[Cat.scala 30:58]
    node io_out_s_lo_19 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_hi_lo_3 = cat(UInt<2>("h01"), io_out_s_lo_19) @[Cat.scala 30:58]
    node io_out_s_lo_20 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_lo_hi_6 = cat(UInt<2>("h01"), io_out_s_lo_20) @[Cat.scala 30:58]
    node io_out_s_lo_21 = cat(io_out_s_lo_hi_6, UInt<7>("h07")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_7 = cat(io_out_s_hi_hi_hi_4, io_out_s_hi_hi_lo_3) @[Cat.scala 30:58]
    node io_out_s_hi_7 = cat(io_out_s_hi_hi_7, UInt<3>("h02")) @[Cat.scala 30:58]
    node _io_out_s_T_14 = cat(io_out_s_hi_7, io_out_s_lo_21) @[Cat.scala 30:58]
    node io_out_s_lo_22 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_15 = cat(UInt<2>("h01"), io_out_s_lo_22) @[Cat.scala 30:58]
    node io_out_s_lo_23 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_16 = cat(UInt<2>("h01"), io_out_s_lo_23) @[Cat.scala 30:58]
    node io_out_s_lo_24 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_17 = cat(UInt<2>("h01"), io_out_s_lo_24) @[Cat.scala 30:58]
    node _io_out_s_T_18 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_3 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_3.bits <= _io_out_s_T_14 @[RVC.scala 22:14]
    io_out_s_3.rd <= _io_out_s_T_15 @[RVC.scala 23:12]
    io_out_s_3.rs1 <= _io_out_s_T_16 @[RVC.scala 24:13]
    io_out_s_3.rs2 <= _io_out_s_T_17 @[RVC.scala 25:13]
    io_out_s_3.rs3 <= _io_out_s_T_18 @[RVC.scala 26:13]
    node io_out_s_hi_hi_8 = bits(io.in, 5, 5) @[RVC.scala 35:20]
    node io_out_s_hi_lo_4 = bits(io.in, 12, 10) @[RVC.scala 35:26]
    node io_out_s_lo_hi_7 = bits(io.in, 6, 6) @[RVC.scala 35:36]
    node io_out_s_lo_25 = cat(io_out_s_lo_hi_7, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_8 = cat(io_out_s_hi_hi_8, io_out_s_hi_lo_4) @[Cat.scala 30:58]
    node _io_out_s_T_19 = cat(io_out_s_hi_8, io_out_s_lo_25) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_5 = shr(_io_out_s_T_19, 5) @[RVC.scala 63:32]
    node io_out_s_lo_26 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_hi_hi_lo_4 = cat(UInt<2>("h01"), io_out_s_lo_26) @[Cat.scala 30:58]
    node io_out_s_lo_27 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_lo_5 = cat(UInt<2>("h01"), io_out_s_lo_27) @[Cat.scala 30:58]
    node io_out_s_hi_hi_9 = bits(io.in, 5, 5) @[RVC.scala 35:20]
    node io_out_s_hi_lo_6 = bits(io.in, 12, 10) @[RVC.scala 35:26]
    node io_out_s_lo_hi_8 = bits(io.in, 6, 6) @[RVC.scala 35:36]
    node io_out_s_lo_28 = cat(io_out_s_lo_hi_8, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_9 = cat(io_out_s_hi_hi_9, io_out_s_hi_lo_6) @[Cat.scala 30:58]
    node _io_out_s_T_20 = cat(io_out_s_hi_9, io_out_s_lo_28) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo = bits(_io_out_s_T_20, 4, 0) @[RVC.scala 63:65]
    node io_out_s_lo_hi_9 = cat(UInt<3>("h02"), io_out_s_lo_hi_lo) @[Cat.scala 30:58]
    node io_out_s_lo_29 = cat(io_out_s_lo_hi_9, UInt<7>("h03f")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_10 = cat(io_out_s_hi_hi_hi_5, io_out_s_hi_hi_lo_4) @[Cat.scala 30:58]
    node io_out_s_hi_10 = cat(io_out_s_hi_hi_10, io_out_s_hi_lo_5) @[Cat.scala 30:58]
    node _io_out_s_T_21 = cat(io_out_s_hi_10, io_out_s_lo_29) @[Cat.scala 30:58]
    node io_out_s_lo_30 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_22 = cat(UInt<2>("h01"), io_out_s_lo_30) @[Cat.scala 30:58]
    node io_out_s_lo_31 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_23 = cat(UInt<2>("h01"), io_out_s_lo_31) @[Cat.scala 30:58]
    node io_out_s_lo_32 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_24 = cat(UInt<2>("h01"), io_out_s_lo_32) @[Cat.scala 30:58]
    node _io_out_s_T_25 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_4 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_4.bits <= _io_out_s_T_21 @[RVC.scala 22:14]
    io_out_s_4.rd <= _io_out_s_T_22 @[RVC.scala 23:12]
    io_out_s_4.rs1 <= _io_out_s_T_23 @[RVC.scala 24:13]
    io_out_s_4.rs2 <= _io_out_s_T_24 @[RVC.scala 25:13]
    io_out_s_4.rs3 <= _io_out_s_T_25 @[RVC.scala 26:13]
    node io_out_s_hi_hi_11 = bits(io.in, 6, 5) @[RVC.scala 36:20]
    node io_out_s_hi_lo_7 = bits(io.in, 12, 10) @[RVC.scala 36:28]
    node io_out_s_hi_11 = cat(io_out_s_hi_hi_11, io_out_s_hi_lo_7) @[Cat.scala 30:58]
    node _io_out_s_T_26 = cat(io_out_s_hi_11, UInt<3>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_6 = shr(_io_out_s_T_26, 5) @[RVC.scala 66:30]
    node io_out_s_lo_33 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_hi_hi_lo_5 = cat(UInt<2>("h01"), io_out_s_lo_33) @[Cat.scala 30:58]
    node io_out_s_lo_34 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_lo_8 = cat(UInt<2>("h01"), io_out_s_lo_34) @[Cat.scala 30:58]
    node io_out_s_hi_hi_12 = bits(io.in, 6, 5) @[RVC.scala 36:20]
    node io_out_s_hi_lo_9 = bits(io.in, 12, 10) @[RVC.scala 36:28]
    node io_out_s_hi_12 = cat(io_out_s_hi_hi_12, io_out_s_hi_lo_9) @[Cat.scala 30:58]
    node _io_out_s_T_27 = cat(io_out_s_hi_12, UInt<3>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo_1 = bits(_io_out_s_T_27, 4, 0) @[RVC.scala 66:63]
    node io_out_s_lo_hi_10 = cat(UInt<3>("h03"), io_out_s_lo_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_lo_35 = cat(io_out_s_lo_hi_10, UInt<7>("h027")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_13 = cat(io_out_s_hi_hi_hi_6, io_out_s_hi_hi_lo_5) @[Cat.scala 30:58]
    node io_out_s_hi_13 = cat(io_out_s_hi_hi_13, io_out_s_hi_lo_8) @[Cat.scala 30:58]
    node _io_out_s_T_28 = cat(io_out_s_hi_13, io_out_s_lo_35) @[Cat.scala 30:58]
    node io_out_s_lo_36 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_29 = cat(UInt<2>("h01"), io_out_s_lo_36) @[Cat.scala 30:58]
    node io_out_s_lo_37 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_30 = cat(UInt<2>("h01"), io_out_s_lo_37) @[Cat.scala 30:58]
    node io_out_s_lo_38 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_31 = cat(UInt<2>("h01"), io_out_s_lo_38) @[Cat.scala 30:58]
    node _io_out_s_T_32 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_5 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_5.bits <= _io_out_s_T_28 @[RVC.scala 22:14]
    io_out_s_5.rd <= _io_out_s_T_29 @[RVC.scala 23:12]
    io_out_s_5.rs1 <= _io_out_s_T_30 @[RVC.scala 24:13]
    io_out_s_5.rs2 <= _io_out_s_T_31 @[RVC.scala 25:13]
    io_out_s_5.rs3 <= _io_out_s_T_32 @[RVC.scala 26:13]
    node io_out_s_hi_hi_14 = bits(io.in, 5, 5) @[RVC.scala 35:20]
    node io_out_s_hi_lo_10 = bits(io.in, 12, 10) @[RVC.scala 35:26]
    node io_out_s_lo_hi_11 = bits(io.in, 6, 6) @[RVC.scala 35:36]
    node io_out_s_lo_39 = cat(io_out_s_lo_hi_11, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_14 = cat(io_out_s_hi_hi_14, io_out_s_hi_lo_10) @[Cat.scala 30:58]
    node _io_out_s_T_33 = cat(io_out_s_hi_14, io_out_s_lo_39) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_7 = shr(_io_out_s_T_33, 5) @[RVC.scala 65:29]
    node io_out_s_lo_40 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_hi_hi_lo_6 = cat(UInt<2>("h01"), io_out_s_lo_40) @[Cat.scala 30:58]
    node io_out_s_lo_41 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_lo_11 = cat(UInt<2>("h01"), io_out_s_lo_41) @[Cat.scala 30:58]
    node io_out_s_hi_hi_15 = bits(io.in, 5, 5) @[RVC.scala 35:20]
    node io_out_s_hi_lo_12 = bits(io.in, 12, 10) @[RVC.scala 35:26]
    node io_out_s_lo_hi_12 = bits(io.in, 6, 6) @[RVC.scala 35:36]
    node io_out_s_lo_42 = cat(io_out_s_lo_hi_12, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_15 = cat(io_out_s_hi_hi_15, io_out_s_hi_lo_12) @[Cat.scala 30:58]
    node _io_out_s_T_34 = cat(io_out_s_hi_15, io_out_s_lo_42) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo_2 = bits(_io_out_s_T_34, 4, 0) @[RVC.scala 65:62]
    node io_out_s_lo_hi_13 = cat(UInt<3>("h02"), io_out_s_lo_hi_lo_2) @[Cat.scala 30:58]
    node io_out_s_lo_43 = cat(io_out_s_lo_hi_13, UInt<7>("h023")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_16 = cat(io_out_s_hi_hi_hi_7, io_out_s_hi_hi_lo_6) @[Cat.scala 30:58]
    node io_out_s_hi_16 = cat(io_out_s_hi_hi_16, io_out_s_hi_lo_11) @[Cat.scala 30:58]
    node _io_out_s_T_35 = cat(io_out_s_hi_16, io_out_s_lo_43) @[Cat.scala 30:58]
    node io_out_s_lo_44 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_36 = cat(UInt<2>("h01"), io_out_s_lo_44) @[Cat.scala 30:58]
    node io_out_s_lo_45 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_37 = cat(UInt<2>("h01"), io_out_s_lo_45) @[Cat.scala 30:58]
    node io_out_s_lo_46 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_38 = cat(UInt<2>("h01"), io_out_s_lo_46) @[Cat.scala 30:58]
    node _io_out_s_T_39 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_6 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_6.bits <= _io_out_s_T_35 @[RVC.scala 22:14]
    io_out_s_6.rd <= _io_out_s_T_36 @[RVC.scala 23:12]
    io_out_s_6.rs1 <= _io_out_s_T_37 @[RVC.scala 24:13]
    io_out_s_6.rs2 <= _io_out_s_T_38 @[RVC.scala 25:13]
    io_out_s_6.rs3 <= _io_out_s_T_39 @[RVC.scala 26:13]
    node io_out_s_hi_hi_17 = bits(io.in, 5, 5) @[RVC.scala 35:20]
    node io_out_s_hi_lo_13 = bits(io.in, 12, 10) @[RVC.scala 35:26]
    node io_out_s_lo_hi_14 = bits(io.in, 6, 6) @[RVC.scala 35:36]
    node io_out_s_lo_47 = cat(io_out_s_lo_hi_14, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_17 = cat(io_out_s_hi_hi_17, io_out_s_hi_lo_13) @[Cat.scala 30:58]
    node _io_out_s_T_40 = cat(io_out_s_hi_17, io_out_s_lo_47) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_8 = shr(_io_out_s_T_40, 5) @[RVC.scala 68:38]
    node io_out_s_lo_48 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_hi_hi_lo_7 = cat(UInt<2>("h01"), io_out_s_lo_48) @[Cat.scala 30:58]
    node io_out_s_lo_49 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_lo_14 = cat(UInt<2>("h01"), io_out_s_lo_49) @[Cat.scala 30:58]
    node io_out_s_hi_hi_18 = bits(io.in, 5, 5) @[RVC.scala 35:20]
    node io_out_s_hi_lo_15 = bits(io.in, 12, 10) @[RVC.scala 35:26]
    node io_out_s_lo_hi_15 = bits(io.in, 6, 6) @[RVC.scala 35:36]
    node io_out_s_lo_50 = cat(io_out_s_lo_hi_15, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_18 = cat(io_out_s_hi_hi_18, io_out_s_hi_lo_15) @[Cat.scala 30:58]
    node _io_out_s_T_41 = cat(io_out_s_hi_18, io_out_s_lo_50) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo_3 = bits(_io_out_s_T_41, 4, 0) @[RVC.scala 68:71]
    node io_out_s_lo_hi_16 = cat(UInt<3>("h02"), io_out_s_lo_hi_lo_3) @[Cat.scala 30:58]
    node io_out_s_lo_51 = cat(io_out_s_lo_hi_16, UInt<7>("h027")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_19 = cat(io_out_s_hi_hi_hi_8, io_out_s_hi_hi_lo_7) @[Cat.scala 30:58]
    node io_out_s_hi_19 = cat(io_out_s_hi_hi_19, io_out_s_hi_lo_14) @[Cat.scala 30:58]
    node _io_out_s_T_42 = cat(io_out_s_hi_19, io_out_s_lo_51) @[Cat.scala 30:58]
    node io_out_s_lo_52 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_43 = cat(UInt<2>("h01"), io_out_s_lo_52) @[Cat.scala 30:58]
    node io_out_s_lo_53 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_44 = cat(UInt<2>("h01"), io_out_s_lo_53) @[Cat.scala 30:58]
    node io_out_s_lo_54 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_45 = cat(UInt<2>("h01"), io_out_s_lo_54) @[Cat.scala 30:58]
    node _io_out_s_T_46 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_7 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_7.bits <= _io_out_s_T_42 @[RVC.scala 22:14]
    io_out_s_7.rd <= _io_out_s_T_43 @[RVC.scala 23:12]
    io_out_s_7.rs1 <= _io_out_s_T_44 @[RVC.scala 24:13]
    io_out_s_7.rs2 <= _io_out_s_T_45 @[RVC.scala 25:13]
    io_out_s_7.rs3 <= _io_out_s_T_46 @[RVC.scala 26:13]
    node _io_out_s_T_47 = bits(io.in, 12, 12) @[RVC.scala 43:30]
    node _io_out_s_T_48 = bits(_io_out_s_T_47, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_20 = mux(_io_out_s_T_48, UInt<7>("h07f"), UInt<7>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_lo_55 = bits(io.in, 6, 2) @[RVC.scala 43:38]
    node io_out_s_hi_hi_hi_9 = cat(io_out_s_hi_20, io_out_s_lo_55) @[Cat.scala 30:58]
    node io_out_s_hi_hi_lo_8 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_hi_17 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_56 = cat(io_out_s_lo_hi_17, UInt<7>("h013")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_20 = cat(io_out_s_hi_hi_hi_9, io_out_s_hi_hi_lo_8) @[Cat.scala 30:58]
    node io_out_s_hi_21 = cat(io_out_s_hi_hi_20, UInt<3>("h00")) @[Cat.scala 30:58]
    node _io_out_s_T_49 = cat(io_out_s_hi_21, io_out_s_lo_56) @[Cat.scala 30:58]
    node _io_out_s_T_50 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_51 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_57 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_52 = cat(UInt<2>("h01"), io_out_s_lo_57) @[Cat.scala 30:58]
    node _io_out_s_T_53 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_8 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_8.bits <= _io_out_s_T_49 @[RVC.scala 22:14]
    io_out_s_8.rd <= _io_out_s_T_50 @[RVC.scala 23:12]
    io_out_s_8.rs1 <= _io_out_s_T_51 @[RVC.scala 24:13]
    io_out_s_8.rs2 <= _io_out_s_T_52 @[RVC.scala 25:13]
    io_out_s_8.rs3 <= _io_out_s_T_53 @[RVC.scala 26:13]
    node _io_out_s_T_54 = bits(io.in, 12, 12) @[RVC.scala 44:28]
    node _io_out_s_T_55 = bits(_io_out_s_T_54, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_hi = mux(_io_out_s_T_55, UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo = bits(io.in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_9 = bits(io.in, 10, 9) @[RVC.scala 44:42]
    node io_out_s_hi_lo_hi = bits(io.in, 6, 6) @[RVC.scala 44:51]
    node io_out_s_hi_lo_lo = bits(io.in, 7, 7) @[RVC.scala 44:57]
    node io_out_s_lo_hi_hi = bits(io.in, 2, 2) @[RVC.scala 44:63]
    node io_out_s_lo_hi_lo_4 = bits(io.in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi = bits(io.in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_1 = cat(io_out_s_lo_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_18 = cat(io_out_s_lo_hi_hi, io_out_s_lo_hi_lo_4) @[Cat.scala 30:58]
    node io_out_s_lo_58 = cat(io_out_s_lo_hi_18, io_out_s_lo_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_lo_16 = cat(io_out_s_hi_lo_hi, io_out_s_hi_lo_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_10 = cat(io_out_s_hi_hi_hi_hi, io_out_s_hi_hi_hi_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_21 = cat(io_out_s_hi_hi_hi_10, io_out_s_hi_hi_lo_9) @[Cat.scala 30:58]
    node io_out_s_hi_22 = cat(io_out_s_hi_hi_21, io_out_s_hi_lo_16) @[Cat.scala 30:58]
    node _io_out_s_T_56 = cat(io_out_s_hi_22, io_out_s_lo_58) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_11 = bits(_io_out_s_T_56, 20, 20) @[RVC.scala 81:36]
    node _io_out_s_T_57 = bits(io.in, 12, 12) @[RVC.scala 44:28]
    node _io_out_s_T_58 = bits(_io_out_s_T_57, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_hi_1 = mux(_io_out_s_T_58, UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo_1 = bits(io.in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_10 = bits(io.in, 10, 9) @[RVC.scala 44:42]
    node io_out_s_hi_lo_hi_1 = bits(io.in, 6, 6) @[RVC.scala 44:51]
    node io_out_s_hi_lo_lo_1 = bits(io.in, 7, 7) @[RVC.scala 44:57]
    node io_out_s_lo_hi_hi_1 = bits(io.in, 2, 2) @[RVC.scala 44:63]
    node io_out_s_lo_hi_lo_5 = bits(io.in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi_1 = bits(io.in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_2 = cat(io_out_s_lo_lo_hi_1, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_19 = cat(io_out_s_lo_hi_hi_1, io_out_s_lo_hi_lo_5) @[Cat.scala 30:58]
    node io_out_s_lo_59 = cat(io_out_s_lo_hi_19, io_out_s_lo_lo_2) @[Cat.scala 30:58]
    node io_out_s_hi_lo_17 = cat(io_out_s_hi_lo_hi_1, io_out_s_hi_lo_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_12 = cat(io_out_s_hi_hi_hi_hi_1, io_out_s_hi_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_hi_22 = cat(io_out_s_hi_hi_hi_12, io_out_s_hi_hi_lo_10) @[Cat.scala 30:58]
    node io_out_s_hi_23 = cat(io_out_s_hi_hi_22, io_out_s_hi_lo_17) @[Cat.scala 30:58]
    node _io_out_s_T_59 = cat(io_out_s_hi_23, io_out_s_lo_59) @[Cat.scala 30:58]
    node io_out_s_hi_hi_lo_11 = bits(_io_out_s_T_59, 10, 1) @[RVC.scala 81:46]
    node _io_out_s_T_60 = bits(io.in, 12, 12) @[RVC.scala 44:28]
    node _io_out_s_T_61 = bits(_io_out_s_T_60, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_hi_2 = mux(_io_out_s_T_61, UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo_2 = bits(io.in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_12 = bits(io.in, 10, 9) @[RVC.scala 44:42]
    node io_out_s_hi_lo_hi_2 = bits(io.in, 6, 6) @[RVC.scala 44:51]
    node io_out_s_hi_lo_lo_2 = bits(io.in, 7, 7) @[RVC.scala 44:57]
    node io_out_s_lo_hi_hi_2 = bits(io.in, 2, 2) @[RVC.scala 44:63]
    node io_out_s_lo_hi_lo_6 = bits(io.in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi_2 = bits(io.in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_3 = cat(io_out_s_lo_lo_hi_2, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_20 = cat(io_out_s_lo_hi_hi_2, io_out_s_lo_hi_lo_6) @[Cat.scala 30:58]
    node io_out_s_lo_60 = cat(io_out_s_lo_hi_20, io_out_s_lo_lo_3) @[Cat.scala 30:58]
    node io_out_s_hi_lo_18 = cat(io_out_s_hi_lo_hi_2, io_out_s_hi_lo_lo_2) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_13 = cat(io_out_s_hi_hi_hi_hi_2, io_out_s_hi_hi_hi_lo_2) @[Cat.scala 30:58]
    node io_out_s_hi_hi_23 = cat(io_out_s_hi_hi_hi_13, io_out_s_hi_hi_lo_12) @[Cat.scala 30:58]
    node io_out_s_hi_24 = cat(io_out_s_hi_hi_23, io_out_s_hi_lo_18) @[Cat.scala 30:58]
    node _io_out_s_T_62 = cat(io_out_s_hi_24, io_out_s_lo_60) @[Cat.scala 30:58]
    node io_out_s_hi_lo_19 = bits(_io_out_s_T_62, 11, 11) @[RVC.scala 81:58]
    node _io_out_s_T_63 = bits(io.in, 12, 12) @[RVC.scala 44:28]
    node _io_out_s_T_64 = bits(_io_out_s_T_63, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_hi_3 = mux(_io_out_s_T_64, UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo_3 = bits(io.in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_13 = bits(io.in, 10, 9) @[RVC.scala 44:42]
    node io_out_s_hi_lo_hi_3 = bits(io.in, 6, 6) @[RVC.scala 44:51]
    node io_out_s_hi_lo_lo_3 = bits(io.in, 7, 7) @[RVC.scala 44:57]
    node io_out_s_lo_hi_hi_3 = bits(io.in, 2, 2) @[RVC.scala 44:63]
    node io_out_s_lo_hi_lo_7 = bits(io.in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi_3 = bits(io.in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_4 = cat(io_out_s_lo_lo_hi_3, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_21 = cat(io_out_s_lo_hi_hi_3, io_out_s_lo_hi_lo_7) @[Cat.scala 30:58]
    node io_out_s_lo_61 = cat(io_out_s_lo_hi_21, io_out_s_lo_lo_4) @[Cat.scala 30:58]
    node io_out_s_hi_lo_20 = cat(io_out_s_hi_lo_hi_3, io_out_s_hi_lo_lo_3) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_14 = cat(io_out_s_hi_hi_hi_hi_3, io_out_s_hi_hi_hi_lo_3) @[Cat.scala 30:58]
    node io_out_s_hi_hi_24 = cat(io_out_s_hi_hi_hi_14, io_out_s_hi_hi_lo_13) @[Cat.scala 30:58]
    node io_out_s_hi_25 = cat(io_out_s_hi_hi_24, io_out_s_hi_lo_20) @[Cat.scala 30:58]
    node _io_out_s_T_65 = cat(io_out_s_hi_25, io_out_s_lo_61) @[Cat.scala 30:58]
    node io_out_s_lo_hi_hi_4 = bits(_io_out_s_T_65, 19, 12) @[RVC.scala 81:68]
    node io_out_s_lo_hi_22 = cat(io_out_s_lo_hi_hi_4, UInt<5>("h01")) @[Cat.scala 30:58]
    node io_out_s_lo_62 = cat(io_out_s_lo_hi_22, UInt<7>("h06f")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_25 = cat(io_out_s_hi_hi_hi_11, io_out_s_hi_hi_lo_11) @[Cat.scala 30:58]
    node io_out_s_hi_26 = cat(io_out_s_hi_hi_25, io_out_s_hi_lo_19) @[Cat.scala 30:58]
    node _io_out_s_T_66 = cat(io_out_s_hi_26, io_out_s_lo_62) @[Cat.scala 30:58]
    node _io_out_s_T_67 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_63 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_68 = cat(UInt<2>("h01"), io_out_s_lo_63) @[Cat.scala 30:58]
    node _io_out_s_T_69 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_9 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_9.bits <= _io_out_s_T_66 @[RVC.scala 22:14]
    io_out_s_9.rd <= UInt<5>("h01") @[RVC.scala 23:12]
    io_out_s_9.rs1 <= _io_out_s_T_67 @[RVC.scala 24:13]
    io_out_s_9.rs2 <= _io_out_s_T_68 @[RVC.scala 25:13]
    io_out_s_9.rs3 <= _io_out_s_T_69 @[RVC.scala 26:13]
    node _io_out_s_T_70 = bits(io.in, 12, 12) @[RVC.scala 43:30]
    node _io_out_s_T_71 = bits(_io_out_s_T_70, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_27 = mux(_io_out_s_T_71, UInt<7>("h07f"), UInt<7>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_lo_64 = bits(io.in, 6, 2) @[RVC.scala 43:38]
    node io_out_s_hi_hi_hi_15 = cat(io_out_s_hi_27, io_out_s_lo_64) @[Cat.scala 30:58]
    node io_out_s_lo_hi_23 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_65 = cat(io_out_s_lo_hi_23, UInt<7>("h013")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_26 = cat(io_out_s_hi_hi_hi_15, UInt<5>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_28 = cat(io_out_s_hi_hi_26, UInt<3>("h00")) @[Cat.scala 30:58]
    node _io_out_s_T_72 = cat(io_out_s_hi_28, io_out_s_lo_65) @[Cat.scala 30:58]
    node _io_out_s_T_73 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_66 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_74 = cat(UInt<2>("h01"), io_out_s_lo_66) @[Cat.scala 30:58]
    node _io_out_s_T_75 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_10 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_10.bits <= _io_out_s_T_72 @[RVC.scala 22:14]
    io_out_s_10.rd <= _io_out_s_T_73 @[RVC.scala 23:12]
    io_out_s_10.rs1 <= UInt<5>("h00") @[RVC.scala 24:13]
    io_out_s_10.rs2 <= _io_out_s_T_74 @[RVC.scala 25:13]
    io_out_s_10.rs3 <= _io_out_s_T_75 @[RVC.scala 26:13]
    node _io_out_s_opc_T_2 = bits(io.in, 12, 12) @[RVC.scala 43:30]
    node _io_out_s_opc_T_3 = bits(_io_out_s_opc_T_2, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_opc_hi = mux(_io_out_s_opc_T_3, UInt<7>("h07f"), UInt<7>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_opc_lo = bits(io.in, 6, 2) @[RVC.scala 43:38]
    node _io_out_s_opc_T_4 = cat(io_out_s_opc_hi, io_out_s_opc_lo) @[Cat.scala 30:58]
    node _io_out_s_opc_T_5 = orr(_io_out_s_opc_T_4) @[RVC.scala 90:29]
    node io_out_s_me_lo = mux(_io_out_s_opc_T_5, UInt<7>("h037"), UInt<7>("h03f")) @[RVC.scala 90:20]
    node _io_out_s_me_T = bits(io.in, 12, 12) @[RVC.scala 41:30]
    node _io_out_s_me_T_1 = bits(_io_out_s_me_T, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_me_hi_hi = mux(_io_out_s_me_T_1, UInt<15>("h07fff"), UInt<15>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_me_hi_lo = bits(io.in, 6, 2) @[RVC.scala 41:38]
    node io_out_s_me_hi = cat(io_out_s_me_hi_hi, io_out_s_me_hi_lo) @[Cat.scala 30:58]
    node _io_out_s_me_T_2 = cat(io_out_s_me_hi, UInt<12>("h00")) @[Cat.scala 30:58]
    node io_out_s_me_hi_hi_1 = bits(_io_out_s_me_T_2, 31, 12) @[RVC.scala 91:31]
    node io_out_s_me_hi_lo_1 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_me_hi_1 = cat(io_out_s_me_hi_hi_1, io_out_s_me_hi_lo_1) @[Cat.scala 30:58]
    node _io_out_s_me_T_3 = cat(io_out_s_me_hi_1, io_out_s_me_lo) @[Cat.scala 30:58]
    node _io_out_s_me_T_4 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_me_T_5 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_me_lo_1 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_me_T_6 = cat(UInt<2>("h01"), io_out_s_me_lo_1) @[Cat.scala 30:58]
    node _io_out_s_me_T_7 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_me : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_me.bits <= _io_out_s_me_T_3 @[RVC.scala 22:14]
    io_out_s_me.rd <= _io_out_s_me_T_4 @[RVC.scala 23:12]
    io_out_s_me.rs1 <= _io_out_s_me_T_5 @[RVC.scala 24:13]
    io_out_s_me.rs2 <= _io_out_s_me_T_6 @[RVC.scala 25:13]
    io_out_s_me.rs3 <= _io_out_s_me_T_7 @[RVC.scala 26:13]
    node _io_out_s_T_76 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_77 = eq(_io_out_s_T_76, UInt<5>("h00")) @[RVC.scala 92:14]
    node _io_out_s_T_78 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_79 = eq(_io_out_s_T_78, UInt<5>("h02")) @[RVC.scala 92:27]
    node _io_out_s_T_80 = or(_io_out_s_T_77, _io_out_s_T_79) @[RVC.scala 92:21]
    node _io_out_s_opc_T_6 = bits(io.in, 12, 12) @[RVC.scala 43:30]
    node _io_out_s_opc_T_7 = bits(_io_out_s_opc_T_6, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_opc_hi_1 = mux(_io_out_s_opc_T_7, UInt<7>("h07f"), UInt<7>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_opc_lo_1 = bits(io.in, 6, 2) @[RVC.scala 43:38]
    node _io_out_s_opc_T_8 = cat(io_out_s_opc_hi_1, io_out_s_opc_lo_1) @[Cat.scala 30:58]
    node _io_out_s_opc_T_9 = orr(_io_out_s_opc_T_8) @[RVC.scala 86:29]
    node io_out_s_lo_lo_5 = mux(_io_out_s_opc_T_9, UInt<7>("h013"), UInt<7>("h01f")) @[RVC.scala 86:20]
    node _io_out_s_T_81 = bits(io.in, 12, 12) @[RVC.scala 42:34]
    node _io_out_s_T_82 = bits(_io_out_s_T_81, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_16 = mux(_io_out_s_T_82, UInt<3>("h07"), UInt<3>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_14 = bits(io.in, 4, 3) @[RVC.scala 42:42]
    node io_out_s_hi_lo_21 = bits(io.in, 5, 5) @[RVC.scala 42:50]
    node io_out_s_lo_hi_hi_5 = bits(io.in, 2, 2) @[RVC.scala 42:56]
    node io_out_s_lo_hi_lo_8 = bits(io.in, 6, 6) @[RVC.scala 42:62]
    node io_out_s_lo_hi_24 = cat(io_out_s_lo_hi_hi_5, io_out_s_lo_hi_lo_8) @[Cat.scala 30:58]
    node io_out_s_lo_67 = cat(io_out_s_lo_hi_24, UInt<4>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_27 = cat(io_out_s_hi_hi_hi_16, io_out_s_hi_hi_lo_14) @[Cat.scala 30:58]
    node io_out_s_hi_29 = cat(io_out_s_hi_hi_27, io_out_s_hi_lo_21) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_17 = cat(io_out_s_hi_29, io_out_s_lo_67) @[Cat.scala 30:58]
    node io_out_s_hi_hi_lo_15 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_hi_25 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_68 = cat(io_out_s_lo_hi_25, io_out_s_lo_lo_5) @[Cat.scala 30:58]
    node io_out_s_hi_hi_28 = cat(io_out_s_hi_hi_hi_17, io_out_s_hi_hi_lo_15) @[Cat.scala 30:58]
    node io_out_s_hi_30 = cat(io_out_s_hi_hi_28, UInt<3>("h00")) @[Cat.scala 30:58]
    node _io_out_s_T_83 = cat(io_out_s_hi_30, io_out_s_lo_68) @[Cat.scala 30:58]
    node _io_out_s_T_84 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_85 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_69 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_86 = cat(UInt<2>("h01"), io_out_s_lo_69) @[Cat.scala 30:58]
    node _io_out_s_T_87 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_res : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_res.bits <= _io_out_s_T_83 @[RVC.scala 22:14]
    io_out_s_res.rd <= _io_out_s_T_84 @[RVC.scala 23:12]
    io_out_s_res.rs1 <= _io_out_s_T_85 @[RVC.scala 24:13]
    io_out_s_res.rs2 <= _io_out_s_T_86 @[RVC.scala 25:13]
    io_out_s_res.rs3 <= _io_out_s_T_87 @[RVC.scala 26:13]
    node io_out_s_11 = mux(_io_out_s_T_80, io_out_s_res, io_out_s_me) @[RVC.scala 92:10]
    node io_out_s_hi_31 = bits(io.in, 12, 12) @[RVC.scala 46:20]
    node io_out_s_lo_70 = bits(io.in, 6, 2) @[RVC.scala 46:27]
    node io_out_s_hi_hi_hi_18 = cat(io_out_s_hi_31, io_out_s_lo_70) @[Cat.scala 30:58]
    node io_out_s_lo_71 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_hi_lo_16 = cat(UInt<2>("h01"), io_out_s_lo_71) @[Cat.scala 30:58]
    node io_out_s_lo_72 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_lo_hi_26 = cat(UInt<2>("h01"), io_out_s_lo_72) @[Cat.scala 30:58]
    node io_out_s_lo_73 = cat(io_out_s_lo_hi_26, UInt<7>("h013")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_29 = cat(io_out_s_hi_hi_hi_18, io_out_s_hi_hi_lo_16) @[Cat.scala 30:58]
    node io_out_s_hi_32 = cat(io_out_s_hi_hi_29, UInt<3>("h05")) @[Cat.scala 30:58]
    node _io_out_s_T_88 = cat(io_out_s_hi_32, io_out_s_lo_73) @[Cat.scala 30:58]
    node io_out_s_hi_33 = bits(io.in, 12, 12) @[RVC.scala 46:20]
    node io_out_s_lo_74 = bits(io.in, 6, 2) @[RVC.scala 46:27]
    node io_out_s_hi_hi_hi_19 = cat(io_out_s_hi_33, io_out_s_lo_74) @[Cat.scala 30:58]
    node io_out_s_lo_75 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_hi_lo_17 = cat(UInt<2>("h01"), io_out_s_lo_75) @[Cat.scala 30:58]
    node io_out_s_lo_76 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_lo_hi_27 = cat(UInt<2>("h01"), io_out_s_lo_76) @[Cat.scala 30:58]
    node io_out_s_lo_77 = cat(io_out_s_lo_hi_27, UInt<7>("h013")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_30 = cat(io_out_s_hi_hi_hi_19, io_out_s_hi_hi_lo_17) @[Cat.scala 30:58]
    node io_out_s_hi_34 = cat(io_out_s_hi_hi_30, UInt<3>("h05")) @[Cat.scala 30:58]
    node _io_out_s_T_89 = cat(io_out_s_hi_34, io_out_s_lo_77) @[Cat.scala 30:58]
    node _io_out_s_T_90 = or(_io_out_s_T_89, UInt<31>("h040000000")) @[RVC.scala 99:23]
    node _io_out_s_T_91 = bits(io.in, 12, 12) @[RVC.scala 43:30]
    node _io_out_s_T_92 = bits(_io_out_s_T_91, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_35 = mux(_io_out_s_T_92, UInt<7>("h07f"), UInt<7>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_lo_78 = bits(io.in, 6, 2) @[RVC.scala 43:38]
    node io_out_s_hi_hi_hi_20 = cat(io_out_s_hi_35, io_out_s_lo_78) @[Cat.scala 30:58]
    node io_out_s_lo_79 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_hi_lo_18 = cat(UInt<2>("h01"), io_out_s_lo_79) @[Cat.scala 30:58]
    node io_out_s_lo_80 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_lo_hi_28 = cat(UInt<2>("h01"), io_out_s_lo_80) @[Cat.scala 30:58]
    node io_out_s_lo_81 = cat(io_out_s_lo_hi_28, UInt<7>("h013")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_31 = cat(io_out_s_hi_hi_hi_20, io_out_s_hi_hi_lo_18) @[Cat.scala 30:58]
    node io_out_s_hi_36 = cat(io_out_s_hi_hi_31, UInt<3>("h07")) @[Cat.scala 30:58]
    node _io_out_s_T_93 = cat(io_out_s_hi_36, io_out_s_lo_81) @[Cat.scala 30:58]
    node io_out_s_funct_hi = bits(io.in, 12, 12) @[RVC.scala 102:70]
    node io_out_s_funct_lo = bits(io.in, 6, 5) @[RVC.scala 102:77]
    node _io_out_s_funct_T = cat(io_out_s_funct_hi, io_out_s_funct_lo) @[Cat.scala 30:58]
    node _io_out_s_funct_T_1 = eq(_io_out_s_funct_T, UInt<1>("h01")) @[package.scala 32:86]
    node _io_out_s_funct_T_2 = mux(_io_out_s_funct_T_1, UInt<3>("h04"), UInt<1>("h00")) @[package.scala 32:76]
    node _io_out_s_funct_T_3 = eq(_io_out_s_funct_T, UInt<2>("h02")) @[package.scala 32:86]
    node _io_out_s_funct_T_4 = mux(_io_out_s_funct_T_3, UInt<3>("h06"), _io_out_s_funct_T_2) @[package.scala 32:76]
    node _io_out_s_funct_T_5 = eq(_io_out_s_funct_T, UInt<2>("h03")) @[package.scala 32:86]
    node _io_out_s_funct_T_6 = mux(_io_out_s_funct_T_5, UInt<3>("h07"), _io_out_s_funct_T_4) @[package.scala 32:76]
    node _io_out_s_funct_T_7 = eq(_io_out_s_funct_T, UInt<3>("h04")) @[package.scala 32:86]
    node _io_out_s_funct_T_8 = mux(_io_out_s_funct_T_7, UInt<1>("h00"), _io_out_s_funct_T_6) @[package.scala 32:76]
    node _io_out_s_funct_T_9 = eq(_io_out_s_funct_T, UInt<3>("h05")) @[package.scala 32:86]
    node _io_out_s_funct_T_10 = mux(_io_out_s_funct_T_9, UInt<1>("h00"), _io_out_s_funct_T_8) @[package.scala 32:76]
    node _io_out_s_funct_T_11 = eq(_io_out_s_funct_T, UInt<3>("h06")) @[package.scala 32:86]
    node _io_out_s_funct_T_12 = mux(_io_out_s_funct_T_11, UInt<2>("h02"), _io_out_s_funct_T_10) @[package.scala 32:76]
    node _io_out_s_funct_T_13 = eq(_io_out_s_funct_T, UInt<3>("h07")) @[package.scala 32:86]
    node io_out_s_hi_lo_22 = mux(_io_out_s_funct_T_13, UInt<2>("h03"), _io_out_s_funct_T_12) @[package.scala 32:76]
    node _io_out_s_sub_T = bits(io.in, 6, 5) @[RVC.scala 103:24]
    node _io_out_s_sub_T_1 = eq(_io_out_s_sub_T, UInt<1>("h00")) @[RVC.scala 103:30]
    node io_out_s_sub = mux(_io_out_s_sub_T_1, UInt<31>("h040000000"), UInt<1>("h00")) @[RVC.scala 103:22]
    node _io_out_s_opc_T_10 = bits(io.in, 12, 12) @[RVC.scala 104:24]
    node io_out_s_lo_lo_6 = mux(_io_out_s_opc_T_10, UInt<7>("h03b"), UInt<7>("h033")) @[RVC.scala 104:22]
    node io_out_s_lo_82 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_hi_hi_hi_21 = cat(UInt<2>("h01"), io_out_s_lo_82) @[Cat.scala 30:58]
    node io_out_s_lo_83 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_hi_lo_19 = cat(UInt<2>("h01"), io_out_s_lo_83) @[Cat.scala 30:58]
    node io_out_s_lo_84 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_lo_hi_29 = cat(UInt<2>("h01"), io_out_s_lo_84) @[Cat.scala 30:58]
    node io_out_s_lo_85 = cat(io_out_s_lo_hi_29, io_out_s_lo_lo_6) @[Cat.scala 30:58]
    node io_out_s_hi_hi_32 = cat(io_out_s_hi_hi_hi_21, io_out_s_hi_hi_lo_19) @[Cat.scala 30:58]
    node io_out_s_hi_37 = cat(io_out_s_hi_hi_32, io_out_s_hi_lo_22) @[Cat.scala 30:58]
    node _io_out_s_T_94 = cat(io_out_s_hi_37, io_out_s_lo_85) @[Cat.scala 30:58]
    node _io_out_s_T_95 = or(_io_out_s_T_94, io_out_s_sub) @[RVC.scala 105:43]
    node _io_out_s_T_96 = bits(io.in, 11, 10) @[RVC.scala 107:42]
    node _io_out_s_T_97 = eq(_io_out_s_T_96, UInt<1>("h01")) @[package.scala 32:86]
    node _io_out_s_T_98 = mux(_io_out_s_T_97, _io_out_s_T_90, _io_out_s_T_88) @[package.scala 32:76]
    node _io_out_s_T_99 = eq(_io_out_s_T_96, UInt<2>("h02")) @[package.scala 32:86]
    node _io_out_s_T_100 = mux(_io_out_s_T_99, _io_out_s_T_93, _io_out_s_T_98) @[package.scala 32:76]
    node _io_out_s_T_101 = eq(_io_out_s_T_96, UInt<2>("h03")) @[package.scala 32:86]
    node _io_out_s_T_102 = mux(_io_out_s_T_101, _io_out_s_T_95, _io_out_s_T_100) @[package.scala 32:76]
    node io_out_s_lo_86 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_103 = cat(UInt<2>("h01"), io_out_s_lo_86) @[Cat.scala 30:58]
    node io_out_s_lo_87 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_104 = cat(UInt<2>("h01"), io_out_s_lo_87) @[Cat.scala 30:58]
    node io_out_s_lo_88 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_105 = cat(UInt<2>("h01"), io_out_s_lo_88) @[Cat.scala 30:58]
    node _io_out_s_T_106 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_12 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_12.bits <= _io_out_s_T_102 @[RVC.scala 22:14]
    io_out_s_12.rd <= _io_out_s_T_103 @[RVC.scala 23:12]
    io_out_s_12.rs1 <= _io_out_s_T_104 @[RVC.scala 24:13]
    io_out_s_12.rs2 <= _io_out_s_T_105 @[RVC.scala 25:13]
    io_out_s_12.rs3 <= _io_out_s_T_106 @[RVC.scala 26:13]
    node _io_out_s_T_107 = bits(io.in, 12, 12) @[RVC.scala 44:28]
    node _io_out_s_T_108 = bits(_io_out_s_T_107, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_hi_4 = mux(_io_out_s_T_108, UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo_4 = bits(io.in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_20 = bits(io.in, 10, 9) @[RVC.scala 44:42]
    node io_out_s_hi_lo_hi_4 = bits(io.in, 6, 6) @[RVC.scala 44:51]
    node io_out_s_hi_lo_lo_4 = bits(io.in, 7, 7) @[RVC.scala 44:57]
    node io_out_s_lo_hi_hi_6 = bits(io.in, 2, 2) @[RVC.scala 44:63]
    node io_out_s_lo_hi_lo_9 = bits(io.in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi_4 = bits(io.in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_7 = cat(io_out_s_lo_lo_hi_4, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_30 = cat(io_out_s_lo_hi_hi_6, io_out_s_lo_hi_lo_9) @[Cat.scala 30:58]
    node io_out_s_lo_89 = cat(io_out_s_lo_hi_30, io_out_s_lo_lo_7) @[Cat.scala 30:58]
    node io_out_s_hi_lo_23 = cat(io_out_s_hi_lo_hi_4, io_out_s_hi_lo_lo_4) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_22 = cat(io_out_s_hi_hi_hi_hi_4, io_out_s_hi_hi_hi_lo_4) @[Cat.scala 30:58]
    node io_out_s_hi_hi_33 = cat(io_out_s_hi_hi_hi_22, io_out_s_hi_hi_lo_20) @[Cat.scala 30:58]
    node io_out_s_hi_38 = cat(io_out_s_hi_hi_33, io_out_s_hi_lo_23) @[Cat.scala 30:58]
    node _io_out_s_T_109 = cat(io_out_s_hi_38, io_out_s_lo_89) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_23 = bits(_io_out_s_T_109, 20, 20) @[RVC.scala 94:26]
    node _io_out_s_T_110 = bits(io.in, 12, 12) @[RVC.scala 44:28]
    node _io_out_s_T_111 = bits(_io_out_s_T_110, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_hi_5 = mux(_io_out_s_T_111, UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo_5 = bits(io.in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_21 = bits(io.in, 10, 9) @[RVC.scala 44:42]
    node io_out_s_hi_lo_hi_5 = bits(io.in, 6, 6) @[RVC.scala 44:51]
    node io_out_s_hi_lo_lo_5 = bits(io.in, 7, 7) @[RVC.scala 44:57]
    node io_out_s_lo_hi_hi_7 = bits(io.in, 2, 2) @[RVC.scala 44:63]
    node io_out_s_lo_hi_lo_10 = bits(io.in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi_5 = bits(io.in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_8 = cat(io_out_s_lo_lo_hi_5, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_31 = cat(io_out_s_lo_hi_hi_7, io_out_s_lo_hi_lo_10) @[Cat.scala 30:58]
    node io_out_s_lo_90 = cat(io_out_s_lo_hi_31, io_out_s_lo_lo_8) @[Cat.scala 30:58]
    node io_out_s_hi_lo_24 = cat(io_out_s_hi_lo_hi_5, io_out_s_hi_lo_lo_5) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_24 = cat(io_out_s_hi_hi_hi_hi_5, io_out_s_hi_hi_hi_lo_5) @[Cat.scala 30:58]
    node io_out_s_hi_hi_34 = cat(io_out_s_hi_hi_hi_24, io_out_s_hi_hi_lo_21) @[Cat.scala 30:58]
    node io_out_s_hi_39 = cat(io_out_s_hi_hi_34, io_out_s_hi_lo_24) @[Cat.scala 30:58]
    node _io_out_s_T_112 = cat(io_out_s_hi_39, io_out_s_lo_90) @[Cat.scala 30:58]
    node io_out_s_hi_hi_lo_22 = bits(_io_out_s_T_112, 10, 1) @[RVC.scala 94:36]
    node _io_out_s_T_113 = bits(io.in, 12, 12) @[RVC.scala 44:28]
    node _io_out_s_T_114 = bits(_io_out_s_T_113, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_hi_6 = mux(_io_out_s_T_114, UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo_6 = bits(io.in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_23 = bits(io.in, 10, 9) @[RVC.scala 44:42]
    node io_out_s_hi_lo_hi_6 = bits(io.in, 6, 6) @[RVC.scala 44:51]
    node io_out_s_hi_lo_lo_6 = bits(io.in, 7, 7) @[RVC.scala 44:57]
    node io_out_s_lo_hi_hi_8 = bits(io.in, 2, 2) @[RVC.scala 44:63]
    node io_out_s_lo_hi_lo_11 = bits(io.in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi_6 = bits(io.in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_9 = cat(io_out_s_lo_lo_hi_6, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_32 = cat(io_out_s_lo_hi_hi_8, io_out_s_lo_hi_lo_11) @[Cat.scala 30:58]
    node io_out_s_lo_91 = cat(io_out_s_lo_hi_32, io_out_s_lo_lo_9) @[Cat.scala 30:58]
    node io_out_s_hi_lo_25 = cat(io_out_s_hi_lo_hi_6, io_out_s_hi_lo_lo_6) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_25 = cat(io_out_s_hi_hi_hi_hi_6, io_out_s_hi_hi_hi_lo_6) @[Cat.scala 30:58]
    node io_out_s_hi_hi_35 = cat(io_out_s_hi_hi_hi_25, io_out_s_hi_hi_lo_23) @[Cat.scala 30:58]
    node io_out_s_hi_40 = cat(io_out_s_hi_hi_35, io_out_s_hi_lo_25) @[Cat.scala 30:58]
    node _io_out_s_T_115 = cat(io_out_s_hi_40, io_out_s_lo_91) @[Cat.scala 30:58]
    node io_out_s_hi_lo_26 = bits(_io_out_s_T_115, 11, 11) @[RVC.scala 94:48]
    node _io_out_s_T_116 = bits(io.in, 12, 12) @[RVC.scala 44:28]
    node _io_out_s_T_117 = bits(_io_out_s_T_116, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_hi_7 = mux(_io_out_s_T_117, UInt<10>("h03ff"), UInt<10>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo_7 = bits(io.in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_24 = bits(io.in, 10, 9) @[RVC.scala 44:42]
    node io_out_s_hi_lo_hi_7 = bits(io.in, 6, 6) @[RVC.scala 44:51]
    node io_out_s_hi_lo_lo_7 = bits(io.in, 7, 7) @[RVC.scala 44:57]
    node io_out_s_lo_hi_hi_9 = bits(io.in, 2, 2) @[RVC.scala 44:63]
    node io_out_s_lo_hi_lo_12 = bits(io.in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi_7 = bits(io.in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_10 = cat(io_out_s_lo_lo_hi_7, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_33 = cat(io_out_s_lo_hi_hi_9, io_out_s_lo_hi_lo_12) @[Cat.scala 30:58]
    node io_out_s_lo_92 = cat(io_out_s_lo_hi_33, io_out_s_lo_lo_10) @[Cat.scala 30:58]
    node io_out_s_hi_lo_27 = cat(io_out_s_hi_lo_hi_7, io_out_s_hi_lo_lo_7) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_26 = cat(io_out_s_hi_hi_hi_hi_7, io_out_s_hi_hi_hi_lo_7) @[Cat.scala 30:58]
    node io_out_s_hi_hi_36 = cat(io_out_s_hi_hi_hi_26, io_out_s_hi_hi_lo_24) @[Cat.scala 30:58]
    node io_out_s_hi_41 = cat(io_out_s_hi_hi_36, io_out_s_hi_lo_27) @[Cat.scala 30:58]
    node _io_out_s_T_118 = cat(io_out_s_hi_41, io_out_s_lo_92) @[Cat.scala 30:58]
    node io_out_s_lo_hi_hi_10 = bits(_io_out_s_T_118, 19, 12) @[RVC.scala 94:58]
    node io_out_s_lo_hi_34 = cat(io_out_s_lo_hi_hi_10, UInt<5>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_93 = cat(io_out_s_lo_hi_34, UInt<7>("h06f")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_37 = cat(io_out_s_hi_hi_hi_23, io_out_s_hi_hi_lo_22) @[Cat.scala 30:58]
    node io_out_s_hi_42 = cat(io_out_s_hi_hi_37, io_out_s_hi_lo_26) @[Cat.scala 30:58]
    node _io_out_s_T_119 = cat(io_out_s_hi_42, io_out_s_lo_93) @[Cat.scala 30:58]
    node io_out_s_lo_94 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_120 = cat(UInt<2>("h01"), io_out_s_lo_94) @[Cat.scala 30:58]
    node io_out_s_lo_95 = bits(io.in, 4, 2) @[RVC.scala 31:29]
    node _io_out_s_T_121 = cat(UInt<2>("h01"), io_out_s_lo_95) @[Cat.scala 30:58]
    node _io_out_s_T_122 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_13 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_13.bits <= _io_out_s_T_119 @[RVC.scala 22:14]
    io_out_s_13.rd <= UInt<5>("h00") @[RVC.scala 23:12]
    io_out_s_13.rs1 <= _io_out_s_T_120 @[RVC.scala 24:13]
    io_out_s_13.rs2 <= _io_out_s_T_121 @[RVC.scala 25:13]
    io_out_s_13.rs3 <= _io_out_s_T_122 @[RVC.scala 26:13]
    node _io_out_s_T_123 = bits(io.in, 12, 12) @[RVC.scala 45:27]
    node _io_out_s_T_124 = bits(_io_out_s_T_123, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_27 = mux(_io_out_s_T_124, UInt<5>("h01f"), UInt<5>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_25 = bits(io.in, 6, 5) @[RVC.scala 45:35]
    node io_out_s_hi_lo_28 = bits(io.in, 2, 2) @[RVC.scala 45:43]
    node io_out_s_lo_hi_hi_11 = bits(io.in, 11, 10) @[RVC.scala 45:49]
    node io_out_s_lo_hi_lo_13 = bits(io.in, 4, 3) @[RVC.scala 45:59]
    node io_out_s_lo_hi_35 = cat(io_out_s_lo_hi_hi_11, io_out_s_lo_hi_lo_13) @[Cat.scala 30:58]
    node io_out_s_lo_96 = cat(io_out_s_lo_hi_35, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_38 = cat(io_out_s_hi_hi_hi_27, io_out_s_hi_hi_lo_25) @[Cat.scala 30:58]
    node io_out_s_hi_43 = cat(io_out_s_hi_hi_38, io_out_s_hi_lo_28) @[Cat.scala 30:58]
    node _io_out_s_T_125 = cat(io_out_s_hi_43, io_out_s_lo_96) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_28 = bits(_io_out_s_T_125, 12, 12) @[RVC.scala 95:29]
    node _io_out_s_T_126 = bits(io.in, 12, 12) @[RVC.scala 45:27]
    node _io_out_s_T_127 = bits(_io_out_s_T_126, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_29 = mux(_io_out_s_T_127, UInt<5>("h01f"), UInt<5>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_26 = bits(io.in, 6, 5) @[RVC.scala 45:35]
    node io_out_s_hi_lo_29 = bits(io.in, 2, 2) @[RVC.scala 45:43]
    node io_out_s_lo_hi_hi_12 = bits(io.in, 11, 10) @[RVC.scala 45:49]
    node io_out_s_lo_hi_lo_14 = bits(io.in, 4, 3) @[RVC.scala 45:59]
    node io_out_s_lo_hi_36 = cat(io_out_s_lo_hi_hi_12, io_out_s_lo_hi_lo_14) @[Cat.scala 30:58]
    node io_out_s_lo_97 = cat(io_out_s_lo_hi_36, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_39 = cat(io_out_s_hi_hi_hi_29, io_out_s_hi_hi_lo_26) @[Cat.scala 30:58]
    node io_out_s_hi_44 = cat(io_out_s_hi_hi_39, io_out_s_hi_lo_29) @[Cat.scala 30:58]
    node _io_out_s_T_128 = cat(io_out_s_hi_44, io_out_s_lo_97) @[Cat.scala 30:58]
    node io_out_s_hi_hi_lo_27 = bits(_io_out_s_T_128, 10, 5) @[RVC.scala 95:39]
    node io_out_s_lo_98 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_lo_lo_8 = cat(UInt<2>("h01"), io_out_s_lo_98) @[Cat.scala 30:58]
    node _io_out_s_T_129 = bits(io.in, 12, 12) @[RVC.scala 45:27]
    node _io_out_s_T_130 = bits(_io_out_s_T_129, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_30 = mux(_io_out_s_T_130, UInt<5>("h01f"), UInt<5>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_28 = bits(io.in, 6, 5) @[RVC.scala 45:35]
    node io_out_s_hi_lo_30 = bits(io.in, 2, 2) @[RVC.scala 45:43]
    node io_out_s_lo_hi_hi_13 = bits(io.in, 11, 10) @[RVC.scala 45:49]
    node io_out_s_lo_hi_lo_15 = bits(io.in, 4, 3) @[RVC.scala 45:59]
    node io_out_s_lo_hi_37 = cat(io_out_s_lo_hi_hi_13, io_out_s_lo_hi_lo_15) @[Cat.scala 30:58]
    node io_out_s_lo_99 = cat(io_out_s_lo_hi_37, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_40 = cat(io_out_s_hi_hi_hi_30, io_out_s_hi_hi_lo_28) @[Cat.scala 30:58]
    node io_out_s_hi_45 = cat(io_out_s_hi_hi_40, io_out_s_hi_lo_30) @[Cat.scala 30:58]
    node _io_out_s_T_131 = cat(io_out_s_hi_45, io_out_s_lo_99) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo_16 = bits(_io_out_s_T_131, 4, 1) @[RVC.scala 95:71]
    node _io_out_s_T_132 = bits(io.in, 12, 12) @[RVC.scala 45:27]
    node _io_out_s_T_133 = bits(_io_out_s_T_132, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_31 = mux(_io_out_s_T_133, UInt<5>("h01f"), UInt<5>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_29 = bits(io.in, 6, 5) @[RVC.scala 45:35]
    node io_out_s_hi_lo_31 = bits(io.in, 2, 2) @[RVC.scala 45:43]
    node io_out_s_lo_hi_hi_14 = bits(io.in, 11, 10) @[RVC.scala 45:49]
    node io_out_s_lo_hi_lo_17 = bits(io.in, 4, 3) @[RVC.scala 45:59]
    node io_out_s_lo_hi_38 = cat(io_out_s_lo_hi_hi_14, io_out_s_lo_hi_lo_17) @[Cat.scala 30:58]
    node io_out_s_lo_100 = cat(io_out_s_lo_hi_38, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_41 = cat(io_out_s_hi_hi_hi_31, io_out_s_hi_hi_lo_29) @[Cat.scala 30:58]
    node io_out_s_hi_46 = cat(io_out_s_hi_hi_41, io_out_s_hi_lo_31) @[Cat.scala 30:58]
    node _io_out_s_T_134 = cat(io_out_s_hi_46, io_out_s_lo_100) @[Cat.scala 30:58]
    node io_out_s_lo_lo_hi_8 = bits(_io_out_s_T_134, 11, 11) @[RVC.scala 95:82]
    node io_out_s_lo_lo_11 = cat(io_out_s_lo_lo_hi_8, UInt<7>("h063")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_39 = cat(UInt<3>("h00"), io_out_s_lo_hi_lo_16) @[Cat.scala 30:58]
    node io_out_s_lo_101 = cat(io_out_s_lo_hi_39, io_out_s_lo_lo_11) @[Cat.scala 30:58]
    node io_out_s_hi_lo_32 = cat(UInt<5>("h00"), io_out_s_hi_lo_lo_8) @[Cat.scala 30:58]
    node io_out_s_hi_hi_42 = cat(io_out_s_hi_hi_hi_28, io_out_s_hi_hi_lo_27) @[Cat.scala 30:58]
    node io_out_s_hi_47 = cat(io_out_s_hi_hi_42, io_out_s_hi_lo_32) @[Cat.scala 30:58]
    node _io_out_s_T_135 = cat(io_out_s_hi_47, io_out_s_lo_101) @[Cat.scala 30:58]
    node io_out_s_lo_102 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_136 = cat(UInt<2>("h01"), io_out_s_lo_102) @[Cat.scala 30:58]
    node io_out_s_lo_103 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_137 = cat(UInt<2>("h01"), io_out_s_lo_103) @[Cat.scala 30:58]
    node _io_out_s_T_138 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_14 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_14.bits <= _io_out_s_T_135 @[RVC.scala 22:14]
    io_out_s_14.rd <= _io_out_s_T_136 @[RVC.scala 23:12]
    io_out_s_14.rs1 <= _io_out_s_T_137 @[RVC.scala 24:13]
    io_out_s_14.rs2 <= UInt<5>("h00") @[RVC.scala 25:13]
    io_out_s_14.rs3 <= _io_out_s_T_138 @[RVC.scala 26:13]
    node _io_out_s_T_139 = bits(io.in, 12, 12) @[RVC.scala 45:27]
    node _io_out_s_T_140 = bits(_io_out_s_T_139, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_32 = mux(_io_out_s_T_140, UInt<5>("h01f"), UInt<5>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_30 = bits(io.in, 6, 5) @[RVC.scala 45:35]
    node io_out_s_hi_lo_33 = bits(io.in, 2, 2) @[RVC.scala 45:43]
    node io_out_s_lo_hi_hi_15 = bits(io.in, 11, 10) @[RVC.scala 45:49]
    node io_out_s_lo_hi_lo_18 = bits(io.in, 4, 3) @[RVC.scala 45:59]
    node io_out_s_lo_hi_40 = cat(io_out_s_lo_hi_hi_15, io_out_s_lo_hi_lo_18) @[Cat.scala 30:58]
    node io_out_s_lo_104 = cat(io_out_s_lo_hi_40, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_43 = cat(io_out_s_hi_hi_hi_32, io_out_s_hi_hi_lo_30) @[Cat.scala 30:58]
    node io_out_s_hi_48 = cat(io_out_s_hi_hi_43, io_out_s_hi_lo_33) @[Cat.scala 30:58]
    node _io_out_s_T_141 = cat(io_out_s_hi_48, io_out_s_lo_104) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_33 = bits(_io_out_s_T_141, 12, 12) @[RVC.scala 96:29]
    node _io_out_s_T_142 = bits(io.in, 12, 12) @[RVC.scala 45:27]
    node _io_out_s_T_143 = bits(_io_out_s_T_142, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_34 = mux(_io_out_s_T_143, UInt<5>("h01f"), UInt<5>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_31 = bits(io.in, 6, 5) @[RVC.scala 45:35]
    node io_out_s_hi_lo_34 = bits(io.in, 2, 2) @[RVC.scala 45:43]
    node io_out_s_lo_hi_hi_16 = bits(io.in, 11, 10) @[RVC.scala 45:49]
    node io_out_s_lo_hi_lo_19 = bits(io.in, 4, 3) @[RVC.scala 45:59]
    node io_out_s_lo_hi_41 = cat(io_out_s_lo_hi_hi_16, io_out_s_lo_hi_lo_19) @[Cat.scala 30:58]
    node io_out_s_lo_105 = cat(io_out_s_lo_hi_41, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_44 = cat(io_out_s_hi_hi_hi_34, io_out_s_hi_hi_lo_31) @[Cat.scala 30:58]
    node io_out_s_hi_49 = cat(io_out_s_hi_hi_44, io_out_s_hi_lo_34) @[Cat.scala 30:58]
    node _io_out_s_T_144 = cat(io_out_s_hi_49, io_out_s_lo_105) @[Cat.scala 30:58]
    node io_out_s_hi_hi_lo_32 = bits(_io_out_s_T_144, 10, 5) @[RVC.scala 96:39]
    node io_out_s_lo_106 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_lo_lo_9 = cat(UInt<2>("h01"), io_out_s_lo_106) @[Cat.scala 30:58]
    node _io_out_s_T_145 = bits(io.in, 12, 12) @[RVC.scala 45:27]
    node _io_out_s_T_146 = bits(_io_out_s_T_145, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_35 = mux(_io_out_s_T_146, UInt<5>("h01f"), UInt<5>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_33 = bits(io.in, 6, 5) @[RVC.scala 45:35]
    node io_out_s_hi_lo_35 = bits(io.in, 2, 2) @[RVC.scala 45:43]
    node io_out_s_lo_hi_hi_17 = bits(io.in, 11, 10) @[RVC.scala 45:49]
    node io_out_s_lo_hi_lo_20 = bits(io.in, 4, 3) @[RVC.scala 45:59]
    node io_out_s_lo_hi_42 = cat(io_out_s_lo_hi_hi_17, io_out_s_lo_hi_lo_20) @[Cat.scala 30:58]
    node io_out_s_lo_107 = cat(io_out_s_lo_hi_42, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_45 = cat(io_out_s_hi_hi_hi_35, io_out_s_hi_hi_lo_33) @[Cat.scala 30:58]
    node io_out_s_hi_50 = cat(io_out_s_hi_hi_45, io_out_s_hi_lo_35) @[Cat.scala 30:58]
    node _io_out_s_T_147 = cat(io_out_s_hi_50, io_out_s_lo_107) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo_21 = bits(_io_out_s_T_147, 4, 1) @[RVC.scala 96:71]
    node _io_out_s_T_148 = bits(io.in, 12, 12) @[RVC.scala 45:27]
    node _io_out_s_T_149 = bits(_io_out_s_T_148, 0, 0) @[Bitwise.scala 72:15]
    node io_out_s_hi_hi_hi_36 = mux(_io_out_s_T_149, UInt<5>("h01f"), UInt<5>("h00")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_34 = bits(io.in, 6, 5) @[RVC.scala 45:35]
    node io_out_s_hi_lo_36 = bits(io.in, 2, 2) @[RVC.scala 45:43]
    node io_out_s_lo_hi_hi_18 = bits(io.in, 11, 10) @[RVC.scala 45:49]
    node io_out_s_lo_hi_lo_22 = bits(io.in, 4, 3) @[RVC.scala 45:59]
    node io_out_s_lo_hi_43 = cat(io_out_s_lo_hi_hi_18, io_out_s_lo_hi_lo_22) @[Cat.scala 30:58]
    node io_out_s_lo_108 = cat(io_out_s_lo_hi_43, UInt<1>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_46 = cat(io_out_s_hi_hi_hi_36, io_out_s_hi_hi_lo_34) @[Cat.scala 30:58]
    node io_out_s_hi_51 = cat(io_out_s_hi_hi_46, io_out_s_hi_lo_36) @[Cat.scala 30:58]
    node _io_out_s_T_150 = cat(io_out_s_hi_51, io_out_s_lo_108) @[Cat.scala 30:58]
    node io_out_s_lo_lo_hi_9 = bits(_io_out_s_T_150, 11, 11) @[RVC.scala 96:82]
    node io_out_s_lo_lo_12 = cat(io_out_s_lo_lo_hi_9, UInt<7>("h063")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_44 = cat(UInt<3>("h01"), io_out_s_lo_hi_lo_21) @[Cat.scala 30:58]
    node io_out_s_lo_109 = cat(io_out_s_lo_hi_44, io_out_s_lo_lo_12) @[Cat.scala 30:58]
    node io_out_s_hi_lo_37 = cat(UInt<5>("h00"), io_out_s_hi_lo_lo_9) @[Cat.scala 30:58]
    node io_out_s_hi_hi_47 = cat(io_out_s_hi_hi_hi_33, io_out_s_hi_hi_lo_32) @[Cat.scala 30:58]
    node io_out_s_hi_52 = cat(io_out_s_hi_hi_47, io_out_s_hi_lo_37) @[Cat.scala 30:58]
    node _io_out_s_T_151 = cat(io_out_s_hi_52, io_out_s_lo_109) @[Cat.scala 30:58]
    node io_out_s_lo_110 = bits(io.in, 9, 7) @[RVC.scala 30:29]
    node _io_out_s_T_152 = cat(UInt<2>("h01"), io_out_s_lo_110) @[Cat.scala 30:58]
    node _io_out_s_T_153 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_15 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_15.bits <= _io_out_s_T_151 @[RVC.scala 22:14]
    io_out_s_15.rd <= UInt<5>("h00") @[RVC.scala 23:12]
    io_out_s_15.rs1 <= _io_out_s_T_152 @[RVC.scala 24:13]
    io_out_s_15.rs2 <= UInt<5>("h00") @[RVC.scala 25:13]
    io_out_s_15.rs3 <= _io_out_s_T_153 @[RVC.scala 26:13]
    node _io_out_s_load_opc_T = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_load_opc_T_1 = orr(_io_out_s_load_opc_T) @[RVC.scala 113:27]
    node io_out_s_lo_lo_13 = mux(_io_out_s_load_opc_T_1, UInt<7>("h03"), UInt<7>("h01f")) @[RVC.scala 113:23]
    node io_out_s_hi_53 = bits(io.in, 12, 12) @[RVC.scala 46:20]
    node io_out_s_lo_111 = bits(io.in, 6, 2) @[RVC.scala 46:27]
    node io_out_s_hi_hi_hi_37 = cat(io_out_s_hi_53, io_out_s_lo_111) @[Cat.scala 30:58]
    node io_out_s_hi_hi_lo_35 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_hi_45 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_112 = cat(io_out_s_lo_hi_45, UInt<7>("h013")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_48 = cat(io_out_s_hi_hi_hi_37, io_out_s_hi_hi_lo_35) @[Cat.scala 30:58]
    node io_out_s_hi_54 = cat(io_out_s_hi_hi_48, UInt<3>("h01")) @[Cat.scala 30:58]
    node _io_out_s_T_154 = cat(io_out_s_hi_54, io_out_s_lo_112) @[Cat.scala 30:58]
    node _io_out_s_T_155 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_156 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_157 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_T_158 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_16 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_16.bits <= _io_out_s_T_154 @[RVC.scala 22:14]
    io_out_s_16.rd <= _io_out_s_T_155 @[RVC.scala 23:12]
    io_out_s_16.rs1 <= _io_out_s_T_156 @[RVC.scala 24:13]
    io_out_s_16.rs2 <= _io_out_s_T_157 @[RVC.scala 25:13]
    io_out_s_16.rs3 <= _io_out_s_T_158 @[RVC.scala 26:13]
    node io_out_s_hi_hi_49 = bits(io.in, 4, 2) @[RVC.scala 38:22]
    node io_out_s_hi_lo_38 = bits(io.in, 12, 12) @[RVC.scala 38:30]
    node io_out_s_lo_hi_46 = bits(io.in, 6, 5) @[RVC.scala 38:37]
    node io_out_s_lo_113 = cat(io_out_s_lo_hi_46, UInt<3>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_55 = cat(io_out_s_hi_hi_49, io_out_s_hi_lo_38) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_38 = cat(io_out_s_hi_55, io_out_s_lo_113) @[Cat.scala 30:58]
    node io_out_s_lo_hi_47 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_114 = cat(io_out_s_lo_hi_47, UInt<7>("h07")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_50 = cat(io_out_s_hi_hi_hi_38, UInt<5>("h02")) @[Cat.scala 30:58]
    node io_out_s_hi_56 = cat(io_out_s_hi_hi_50, UInt<3>("h03")) @[Cat.scala 30:58]
    node _io_out_s_T_159 = cat(io_out_s_hi_56, io_out_s_lo_114) @[Cat.scala 30:58]
    node _io_out_s_T_160 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_161 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_T_162 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_17 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_17.bits <= _io_out_s_T_159 @[RVC.scala 22:14]
    io_out_s_17.rd <= _io_out_s_T_160 @[RVC.scala 23:12]
    io_out_s_17.rs1 <= UInt<5>("h02") @[RVC.scala 24:13]
    io_out_s_17.rs2 <= _io_out_s_T_161 @[RVC.scala 25:13]
    io_out_s_17.rs3 <= _io_out_s_T_162 @[RVC.scala 26:13]
    node io_out_s_hi_hi_51 = bits(io.in, 3, 2) @[RVC.scala 37:22]
    node io_out_s_hi_lo_39 = bits(io.in, 12, 12) @[RVC.scala 37:30]
    node io_out_s_lo_hi_48 = bits(io.in, 6, 4) @[RVC.scala 37:37]
    node io_out_s_lo_115 = cat(io_out_s_lo_hi_48, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_57 = cat(io_out_s_hi_hi_51, io_out_s_hi_lo_39) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_39 = cat(io_out_s_hi_57, io_out_s_lo_115) @[Cat.scala 30:58]
    node io_out_s_lo_hi_49 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_116 = cat(io_out_s_lo_hi_49, io_out_s_lo_lo_13) @[Cat.scala 30:58]
    node io_out_s_hi_hi_52 = cat(io_out_s_hi_hi_hi_39, UInt<5>("h02")) @[Cat.scala 30:58]
    node io_out_s_hi_58 = cat(io_out_s_hi_hi_52, UInt<3>("h02")) @[Cat.scala 30:58]
    node _io_out_s_T_163 = cat(io_out_s_hi_58, io_out_s_lo_116) @[Cat.scala 30:58]
    node _io_out_s_T_164 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_165 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_T_166 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_18 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_18.bits <= _io_out_s_T_163 @[RVC.scala 22:14]
    io_out_s_18.rd <= _io_out_s_T_164 @[RVC.scala 23:12]
    io_out_s_18.rs1 <= UInt<5>("h02") @[RVC.scala 24:13]
    io_out_s_18.rs2 <= _io_out_s_T_165 @[RVC.scala 25:13]
    io_out_s_18.rs3 <= _io_out_s_T_166 @[RVC.scala 26:13]
    node io_out_s_hi_hi_53 = bits(io.in, 3, 2) @[RVC.scala 37:22]
    node io_out_s_hi_lo_40 = bits(io.in, 12, 12) @[RVC.scala 37:30]
    node io_out_s_lo_hi_50 = bits(io.in, 6, 4) @[RVC.scala 37:37]
    node io_out_s_lo_117 = cat(io_out_s_lo_hi_50, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_59 = cat(io_out_s_hi_hi_53, io_out_s_hi_lo_40) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_40 = cat(io_out_s_hi_59, io_out_s_lo_117) @[Cat.scala 30:58]
    node io_out_s_lo_hi_51 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_lo_118 = cat(io_out_s_lo_hi_51, UInt<7>("h07")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_54 = cat(io_out_s_hi_hi_hi_40, UInt<5>("h02")) @[Cat.scala 30:58]
    node io_out_s_hi_60 = cat(io_out_s_hi_hi_54, UInt<3>("h02")) @[Cat.scala 30:58]
    node _io_out_s_T_167 = cat(io_out_s_hi_60, io_out_s_lo_118) @[Cat.scala 30:58]
    node _io_out_s_T_168 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_169 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_T_170 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_19 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_19.bits <= _io_out_s_T_167 @[RVC.scala 22:14]
    io_out_s_19.rd <= _io_out_s_T_168 @[RVC.scala 23:12]
    io_out_s_19.rs1 <= UInt<5>("h02") @[RVC.scala 24:13]
    io_out_s_19.rs2 <= _io_out_s_T_169 @[RVC.scala 25:13]
    io_out_s_19.rs3 <= _io_out_s_T_170 @[RVC.scala 26:13]
    node io_out_s_mv_hi_hi_hi = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node io_out_s_mv_lo_hi = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_mv_lo = cat(io_out_s_mv_lo_hi, UInt<7>("h033")) @[Cat.scala 30:58]
    node io_out_s_mv_hi_hi = cat(io_out_s_mv_hi_hi_hi, UInt<5>("h00")) @[Cat.scala 30:58]
    node io_out_s_mv_hi = cat(io_out_s_mv_hi_hi, UInt<3>("h00")) @[Cat.scala 30:58]
    node _io_out_s_mv_T = cat(io_out_s_mv_hi, io_out_s_mv_lo) @[Cat.scala 30:58]
    node _io_out_s_mv_T_1 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_mv_T_2 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_mv_T_3 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_mv : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_mv.bits <= _io_out_s_mv_T @[RVC.scala 22:14]
    io_out_s_mv.rd <= _io_out_s_mv_T_1 @[RVC.scala 23:12]
    io_out_s_mv.rs1 <= UInt<5>("h00") @[RVC.scala 24:13]
    io_out_s_mv.rs2 <= _io_out_s_mv_T_2 @[RVC.scala 25:13]
    io_out_s_mv.rs3 <= _io_out_s_mv_T_3 @[RVC.scala 26:13]
    node io_out_s_add_hi_hi_hi = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node io_out_s_add_hi_hi_lo = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_add_lo_hi = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_add_lo = cat(io_out_s_add_lo_hi, UInt<7>("h033")) @[Cat.scala 30:58]
    node io_out_s_add_hi_hi = cat(io_out_s_add_hi_hi_hi, io_out_s_add_hi_hi_lo) @[Cat.scala 30:58]
    node io_out_s_add_hi = cat(io_out_s_add_hi_hi, UInt<3>("h00")) @[Cat.scala 30:58]
    node _io_out_s_add_T = cat(io_out_s_add_hi, io_out_s_add_lo) @[Cat.scala 30:58]
    node _io_out_s_add_T_1 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_add_T_2 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_add_T_3 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_add_T_4 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_add : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_add.bits <= _io_out_s_add_T @[RVC.scala 22:14]
    io_out_s_add.rd <= _io_out_s_add_T_1 @[RVC.scala 23:12]
    io_out_s_add.rs1 <= _io_out_s_add_T_2 @[RVC.scala 24:13]
    io_out_s_add.rs2 <= _io_out_s_add_T_3 @[RVC.scala 25:13]
    io_out_s_add.rs3 <= _io_out_s_add_T_4 @[RVC.scala 26:13]
    node io_out_s_jr_hi_hi_hi = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node io_out_s_jr_hi_hi_lo = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_jr_lo = cat(UInt<5>("h00"), UInt<7>("h067")) @[Cat.scala 30:58]
    node io_out_s_jr_hi_hi = cat(io_out_s_jr_hi_hi_hi, io_out_s_jr_hi_hi_lo) @[Cat.scala 30:58]
    node io_out_s_jr_hi = cat(io_out_s_jr_hi_hi, UInt<3>("h00")) @[Cat.scala 30:58]
    node io_out_s_jr = cat(io_out_s_jr_hi, io_out_s_jr_lo) @[Cat.scala 30:58]
    node io_out_s_reserved_hi = shr(io_out_s_jr, 7) @[RVC.scala 133:29]
    node io_out_s_reserved = cat(io_out_s_reserved_hi, UInt<7>("h01f")) @[Cat.scala 30:58]
    node _io_out_s_jr_reserved_T = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_jr_reserved_T_1 = orr(_io_out_s_jr_reserved_T) @[RVC.scala 134:37]
    node _io_out_s_jr_reserved_T_2 = mux(_io_out_s_jr_reserved_T_1, io_out_s_jr, io_out_s_reserved) @[RVC.scala 134:33]
    node _io_out_s_jr_reserved_T_3 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_jr_reserved_T_4 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_jr_reserved_T_5 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_jr_reserved : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_jr_reserved.bits <= _io_out_s_jr_reserved_T_2 @[RVC.scala 22:14]
    io_out_s_jr_reserved.rd <= UInt<5>("h00") @[RVC.scala 23:12]
    io_out_s_jr_reserved.rs1 <= _io_out_s_jr_reserved_T_3 @[RVC.scala 24:13]
    io_out_s_jr_reserved.rs2 <= _io_out_s_jr_reserved_T_4 @[RVC.scala 25:13]
    io_out_s_jr_reserved.rs3 <= _io_out_s_jr_reserved_T_5 @[RVC.scala 26:13]
    node _io_out_s_jr_mv_T = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_jr_mv_T_1 = orr(_io_out_s_jr_mv_T) @[RVC.scala 135:27]
    node io_out_s_jr_mv = mux(_io_out_s_jr_mv_T_1, io_out_s_mv, io_out_s_jr_reserved) @[RVC.scala 135:22]
    node io_out_s_jalr_hi_hi_hi = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node io_out_s_jalr_hi_hi_lo = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node io_out_s_jalr_lo = cat(UInt<5>("h01"), UInt<7>("h067")) @[Cat.scala 30:58]
    node io_out_s_jalr_hi_hi = cat(io_out_s_jalr_hi_hi_hi, io_out_s_jalr_hi_hi_lo) @[Cat.scala 30:58]
    node io_out_s_jalr_hi = cat(io_out_s_jalr_hi_hi, UInt<3>("h00")) @[Cat.scala 30:58]
    node io_out_s_jalr = cat(io_out_s_jalr_hi, io_out_s_jalr_lo) @[Cat.scala 30:58]
    node io_out_s_ebreak_hi = shr(io_out_s_jr, 7) @[RVC.scala 137:27]
    node _io_out_s_ebreak_T = cat(io_out_s_ebreak_hi, UInt<7>("h073")) @[Cat.scala 30:58]
    node io_out_s_ebreak = or(_io_out_s_ebreak_T, UInt<21>("h0100000")) @[RVC.scala 137:46]
    node _io_out_s_jalr_ebreak_T = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_jalr_ebreak_T_1 = orr(_io_out_s_jalr_ebreak_T) @[RVC.scala 138:37]
    node _io_out_s_jalr_ebreak_T_2 = mux(_io_out_s_jalr_ebreak_T_1, io_out_s_jalr, io_out_s_ebreak) @[RVC.scala 138:33]
    node _io_out_s_jalr_ebreak_T_3 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_jalr_ebreak_T_4 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_jalr_ebreak_T_5 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_jalr_ebreak : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_jalr_ebreak.bits <= _io_out_s_jalr_ebreak_T_2 @[RVC.scala 22:14]
    io_out_s_jalr_ebreak.rd <= UInt<5>("h01") @[RVC.scala 23:12]
    io_out_s_jalr_ebreak.rs1 <= _io_out_s_jalr_ebreak_T_3 @[RVC.scala 24:13]
    io_out_s_jalr_ebreak.rs2 <= _io_out_s_jalr_ebreak_T_4 @[RVC.scala 25:13]
    io_out_s_jalr_ebreak.rs3 <= _io_out_s_jalr_ebreak_T_5 @[RVC.scala 26:13]
    node _io_out_s_jalr_add_T = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_jalr_add_T_1 = orr(_io_out_s_jalr_add_T) @[RVC.scala 139:30]
    node io_out_s_jalr_add = mux(_io_out_s_jalr_add_T_1, io_out_s_add, io_out_s_jalr_ebreak) @[RVC.scala 139:25]
    node _io_out_s_T_171 = bits(io.in, 12, 12) @[RVC.scala 140:12]
    node io_out_s_20 = mux(_io_out_s_T_171, io_out_s_jalr_add, io_out_s_jr_mv) @[RVC.scala 140:10]
    node io_out_s_hi_hi_55 = bits(io.in, 9, 7) @[RVC.scala 40:22]
    node io_out_s_hi_lo_41 = bits(io.in, 12, 10) @[RVC.scala 40:30]
    node io_out_s_hi_61 = cat(io_out_s_hi_hi_55, io_out_s_hi_lo_41) @[Cat.scala 30:58]
    node _io_out_s_T_172 = cat(io_out_s_hi_61, UInt<3>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_41 = shr(_io_out_s_T_172, 5) @[RVC.scala 124:34]
    node io_out_s_hi_hi_lo_36 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node io_out_s_hi_hi_56 = bits(io.in, 9, 7) @[RVC.scala 40:22]
    node io_out_s_hi_lo_42 = bits(io.in, 12, 10) @[RVC.scala 40:30]
    node io_out_s_hi_62 = cat(io_out_s_hi_hi_56, io_out_s_hi_lo_42) @[Cat.scala 30:58]
    node _io_out_s_T_173 = cat(io_out_s_hi_62, UInt<3>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo_23 = bits(_io_out_s_T_173, 4, 0) @[RVC.scala 124:66]
    node io_out_s_lo_hi_52 = cat(UInt<3>("h03"), io_out_s_lo_hi_lo_23) @[Cat.scala 30:58]
    node io_out_s_lo_119 = cat(io_out_s_lo_hi_52, UInt<7>("h027")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_57 = cat(io_out_s_hi_hi_hi_41, io_out_s_hi_hi_lo_36) @[Cat.scala 30:58]
    node io_out_s_hi_63 = cat(io_out_s_hi_hi_57, UInt<5>("h02")) @[Cat.scala 30:58]
    node _io_out_s_T_174 = cat(io_out_s_hi_63, io_out_s_lo_119) @[Cat.scala 30:58]
    node _io_out_s_T_175 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_176 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_T_177 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_21 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_21.bits <= _io_out_s_T_174 @[RVC.scala 22:14]
    io_out_s_21.rd <= _io_out_s_T_175 @[RVC.scala 23:12]
    io_out_s_21.rs1 <= UInt<5>("h02") @[RVC.scala 24:13]
    io_out_s_21.rs2 <= _io_out_s_T_176 @[RVC.scala 25:13]
    io_out_s_21.rs3 <= _io_out_s_T_177 @[RVC.scala 26:13]
    node io_out_s_hi_hi_58 = bits(io.in, 8, 7) @[RVC.scala 39:22]
    node io_out_s_hi_lo_43 = bits(io.in, 12, 9) @[RVC.scala 39:30]
    node io_out_s_hi_64 = cat(io_out_s_hi_hi_58, io_out_s_hi_lo_43) @[Cat.scala 30:58]
    node _io_out_s_T_178 = cat(io_out_s_hi_64, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_42 = shr(_io_out_s_T_178, 5) @[RVC.scala 123:33]
    node io_out_s_hi_hi_lo_37 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node io_out_s_hi_hi_59 = bits(io.in, 8, 7) @[RVC.scala 39:22]
    node io_out_s_hi_lo_44 = bits(io.in, 12, 9) @[RVC.scala 39:30]
    node io_out_s_hi_65 = cat(io_out_s_hi_hi_59, io_out_s_hi_lo_44) @[Cat.scala 30:58]
    node _io_out_s_T_179 = cat(io_out_s_hi_65, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo_24 = bits(_io_out_s_T_179, 4, 0) @[RVC.scala 123:65]
    node io_out_s_lo_hi_53 = cat(UInt<3>("h02"), io_out_s_lo_hi_lo_24) @[Cat.scala 30:58]
    node io_out_s_lo_120 = cat(io_out_s_lo_hi_53, UInt<7>("h023")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_60 = cat(io_out_s_hi_hi_hi_42, io_out_s_hi_hi_lo_37) @[Cat.scala 30:58]
    node io_out_s_hi_66 = cat(io_out_s_hi_hi_60, UInt<5>("h02")) @[Cat.scala 30:58]
    node _io_out_s_T_180 = cat(io_out_s_hi_66, io_out_s_lo_120) @[Cat.scala 30:58]
    node _io_out_s_T_181 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_182 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_T_183 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_22 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_22.bits <= _io_out_s_T_180 @[RVC.scala 22:14]
    io_out_s_22.rd <= _io_out_s_T_181 @[RVC.scala 23:12]
    io_out_s_22.rs1 <= UInt<5>("h02") @[RVC.scala 24:13]
    io_out_s_22.rs2 <= _io_out_s_T_182 @[RVC.scala 25:13]
    io_out_s_22.rs3 <= _io_out_s_T_183 @[RVC.scala 26:13]
    node io_out_s_hi_hi_61 = bits(io.in, 8, 7) @[RVC.scala 39:22]
    node io_out_s_hi_lo_45 = bits(io.in, 12, 9) @[RVC.scala 39:30]
    node io_out_s_hi_67 = cat(io_out_s_hi_hi_61, io_out_s_hi_lo_45) @[Cat.scala 30:58]
    node _io_out_s_T_184 = cat(io_out_s_hi_67, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_43 = shr(_io_out_s_T_184, 5) @[RVC.scala 126:40]
    node io_out_s_hi_hi_lo_38 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node io_out_s_hi_hi_62 = bits(io.in, 8, 7) @[RVC.scala 39:22]
    node io_out_s_hi_lo_46 = bits(io.in, 12, 9) @[RVC.scala 39:30]
    node io_out_s_hi_68 = cat(io_out_s_hi_hi_62, io_out_s_hi_lo_46) @[Cat.scala 30:58]
    node _io_out_s_T_185 = cat(io_out_s_hi_68, UInt<2>("h00")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_lo_25 = bits(_io_out_s_T_185, 4, 0) @[RVC.scala 126:72]
    node io_out_s_lo_hi_54 = cat(UInt<3>("h02"), io_out_s_lo_hi_lo_25) @[Cat.scala 30:58]
    node io_out_s_lo_121 = cat(io_out_s_lo_hi_54, UInt<7>("h027")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_63 = cat(io_out_s_hi_hi_hi_43, io_out_s_hi_hi_lo_38) @[Cat.scala 30:58]
    node io_out_s_hi_69 = cat(io_out_s_hi_hi_63, UInt<5>("h02")) @[Cat.scala 30:58]
    node _io_out_s_T_186 = cat(io_out_s_hi_69, io_out_s_lo_121) @[Cat.scala 30:58]
    node _io_out_s_T_187 = bits(io.in, 11, 7) @[RVC.scala 33:13]
    node _io_out_s_T_188 = bits(io.in, 6, 2) @[RVC.scala 32:14]
    node _io_out_s_T_189 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_23 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_23.bits <= _io_out_s_T_186 @[RVC.scala 22:14]
    io_out_s_23.rd <= _io_out_s_T_187 @[RVC.scala 23:12]
    io_out_s_23.rs1 <= UInt<5>("h02") @[RVC.scala 24:13]
    io_out_s_23.rs2 <= _io_out_s_T_188 @[RVC.scala 25:13]
    io_out_s_23.rs3 <= _io_out_s_T_189 @[RVC.scala 26:13]
    node _io_out_s_T_190 = bits(io.in, 11, 7) @[RVC.scala 20:36]
    node _io_out_s_T_191 = bits(io.in, 19, 15) @[RVC.scala 20:57]
    node _io_out_s_T_192 = bits(io.in, 24, 20) @[RVC.scala 20:79]
    node _io_out_s_T_193 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_24 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_24.bits <= io.in @[RVC.scala 22:14]
    io_out_s_24.rd <= _io_out_s_T_190 @[RVC.scala 23:12]
    io_out_s_24.rs1 <= _io_out_s_T_191 @[RVC.scala 24:13]
    io_out_s_24.rs2 <= _io_out_s_T_192 @[RVC.scala 25:13]
    io_out_s_24.rs3 <= _io_out_s_T_193 @[RVC.scala 26:13]
    node _io_out_s_T_194 = bits(io.in, 11, 7) @[RVC.scala 20:36]
    node _io_out_s_T_195 = bits(io.in, 19, 15) @[RVC.scala 20:57]
    node _io_out_s_T_196 = bits(io.in, 24, 20) @[RVC.scala 20:79]
    node _io_out_s_T_197 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_25 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_25.bits <= io.in @[RVC.scala 22:14]
    io_out_s_25.rd <= _io_out_s_T_194 @[RVC.scala 23:12]
    io_out_s_25.rs1 <= _io_out_s_T_195 @[RVC.scala 24:13]
    io_out_s_25.rs2 <= _io_out_s_T_196 @[RVC.scala 25:13]
    io_out_s_25.rs3 <= _io_out_s_T_197 @[RVC.scala 26:13]
    node _io_out_s_T_198 = bits(io.in, 11, 7) @[RVC.scala 20:36]
    node _io_out_s_T_199 = bits(io.in, 19, 15) @[RVC.scala 20:57]
    node _io_out_s_T_200 = bits(io.in, 24, 20) @[RVC.scala 20:79]
    node _io_out_s_T_201 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_26 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_26.bits <= io.in @[RVC.scala 22:14]
    io_out_s_26.rd <= _io_out_s_T_198 @[RVC.scala 23:12]
    io_out_s_26.rs1 <= _io_out_s_T_199 @[RVC.scala 24:13]
    io_out_s_26.rs2 <= _io_out_s_T_200 @[RVC.scala 25:13]
    io_out_s_26.rs3 <= _io_out_s_T_201 @[RVC.scala 26:13]
    node _io_out_s_T_202 = bits(io.in, 11, 7) @[RVC.scala 20:36]
    node _io_out_s_T_203 = bits(io.in, 19, 15) @[RVC.scala 20:57]
    node _io_out_s_T_204 = bits(io.in, 24, 20) @[RVC.scala 20:79]
    node _io_out_s_T_205 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_27 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_27.bits <= io.in @[RVC.scala 22:14]
    io_out_s_27.rd <= _io_out_s_T_202 @[RVC.scala 23:12]
    io_out_s_27.rs1 <= _io_out_s_T_203 @[RVC.scala 24:13]
    io_out_s_27.rs2 <= _io_out_s_T_204 @[RVC.scala 25:13]
    io_out_s_27.rs3 <= _io_out_s_T_205 @[RVC.scala 26:13]
    node _io_out_s_T_206 = bits(io.in, 11, 7) @[RVC.scala 20:36]
    node _io_out_s_T_207 = bits(io.in, 19, 15) @[RVC.scala 20:57]
    node _io_out_s_T_208 = bits(io.in, 24, 20) @[RVC.scala 20:79]
    node _io_out_s_T_209 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_28 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_28.bits <= io.in @[RVC.scala 22:14]
    io_out_s_28.rd <= _io_out_s_T_206 @[RVC.scala 23:12]
    io_out_s_28.rs1 <= _io_out_s_T_207 @[RVC.scala 24:13]
    io_out_s_28.rs2 <= _io_out_s_T_208 @[RVC.scala 25:13]
    io_out_s_28.rs3 <= _io_out_s_T_209 @[RVC.scala 26:13]
    node _io_out_s_T_210 = bits(io.in, 11, 7) @[RVC.scala 20:36]
    node _io_out_s_T_211 = bits(io.in, 19, 15) @[RVC.scala 20:57]
    node _io_out_s_T_212 = bits(io.in, 24, 20) @[RVC.scala 20:79]
    node _io_out_s_T_213 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_29 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_29.bits <= io.in @[RVC.scala 22:14]
    io_out_s_29.rd <= _io_out_s_T_210 @[RVC.scala 23:12]
    io_out_s_29.rs1 <= _io_out_s_T_211 @[RVC.scala 24:13]
    io_out_s_29.rs2 <= _io_out_s_T_212 @[RVC.scala 25:13]
    io_out_s_29.rs3 <= _io_out_s_T_213 @[RVC.scala 26:13]
    node _io_out_s_T_214 = bits(io.in, 11, 7) @[RVC.scala 20:36]
    node _io_out_s_T_215 = bits(io.in, 19, 15) @[RVC.scala 20:57]
    node _io_out_s_T_216 = bits(io.in, 24, 20) @[RVC.scala 20:79]
    node _io_out_s_T_217 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_30 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_30.bits <= io.in @[RVC.scala 22:14]
    io_out_s_30.rd <= _io_out_s_T_214 @[RVC.scala 23:12]
    io_out_s_30.rs1 <= _io_out_s_T_215 @[RVC.scala 24:13]
    io_out_s_30.rs2 <= _io_out_s_T_216 @[RVC.scala 25:13]
    io_out_s_30.rs3 <= _io_out_s_T_217 @[RVC.scala 26:13]
    node _io_out_s_T_218 = bits(io.in, 11, 7) @[RVC.scala 20:36]
    node _io_out_s_T_219 = bits(io.in, 19, 15) @[RVC.scala 20:57]
    node _io_out_s_T_220 = bits(io.in, 24, 20) @[RVC.scala 20:79]
    node _io_out_s_T_221 = bits(io.in, 31, 27) @[RVC.scala 20:101]
    wire io_out_s_31 : {bits : UInt<32>, rd : UInt<5>, rs1 : UInt<5>, rs2 : UInt<5>, rs3 : UInt<5>} @[RVC.scala 21:19]
    io_out_s_31.bits <= io.in @[RVC.scala 22:14]
    io_out_s_31.rd <= _io_out_s_T_218 @[RVC.scala 23:12]
    io_out_s_31.rs1 <= _io_out_s_T_219 @[RVC.scala 24:13]
    io_out_s_31.rs2 <= _io_out_s_T_220 @[RVC.scala 25:13]
    io_out_s_31.rs3 <= _io_out_s_T_221 @[RVC.scala 26:13]
    node io_out_hi = bits(io.in, 1, 0) @[RVC.scala 151:12]
    node io_out_lo = bits(io.in, 15, 13) @[RVC.scala 151:20]
    node _io_out_T = cat(io_out_hi, io_out_lo) @[Cat.scala 30:58]
    node _io_out_T_1 = eq(_io_out_T, UInt<1>("h01")) @[package.scala 32:86]
    node _io_out_T_2 = mux(_io_out_T_1, io_out_s_1, io_out_s_0) @[package.scala 32:76]
    node _io_out_T_3 = eq(_io_out_T, UInt<2>("h02")) @[package.scala 32:86]
    node _io_out_T_4 = mux(_io_out_T_3, io_out_s_2, _io_out_T_2) @[package.scala 32:76]
    node _io_out_T_5 = eq(_io_out_T, UInt<2>("h03")) @[package.scala 32:86]
    node _io_out_T_6 = mux(_io_out_T_5, io_out_s_3, _io_out_T_4) @[package.scala 32:76]
    node _io_out_T_7 = eq(_io_out_T, UInt<3>("h04")) @[package.scala 32:86]
    node _io_out_T_8 = mux(_io_out_T_7, io_out_s_4, _io_out_T_6) @[package.scala 32:76]
    node _io_out_T_9 = eq(_io_out_T, UInt<3>("h05")) @[package.scala 32:86]
    node _io_out_T_10 = mux(_io_out_T_9, io_out_s_5, _io_out_T_8) @[package.scala 32:76]
    node _io_out_T_11 = eq(_io_out_T, UInt<3>("h06")) @[package.scala 32:86]
    node _io_out_T_12 = mux(_io_out_T_11, io_out_s_6, _io_out_T_10) @[package.scala 32:76]
    node _io_out_T_13 = eq(_io_out_T, UInt<3>("h07")) @[package.scala 32:86]
    node _io_out_T_14 = mux(_io_out_T_13, io_out_s_7, _io_out_T_12) @[package.scala 32:76]
    node _io_out_T_15 = eq(_io_out_T, UInt<4>("h08")) @[package.scala 32:86]
    node _io_out_T_16 = mux(_io_out_T_15, io_out_s_8, _io_out_T_14) @[package.scala 32:76]
    node _io_out_T_17 = eq(_io_out_T, UInt<4>("h09")) @[package.scala 32:86]
    node _io_out_T_18 = mux(_io_out_T_17, io_out_s_9, _io_out_T_16) @[package.scala 32:76]
    node _io_out_T_19 = eq(_io_out_T, UInt<4>("h0a")) @[package.scala 32:86]
    node _io_out_T_20 = mux(_io_out_T_19, io_out_s_10, _io_out_T_18) @[package.scala 32:76]
    node _io_out_T_21 = eq(_io_out_T, UInt<4>("h0b")) @[package.scala 32:86]
    node _io_out_T_22 = mux(_io_out_T_21, io_out_s_11, _io_out_T_20) @[package.scala 32:76]
    node _io_out_T_23 = eq(_io_out_T, UInt<4>("h0c")) @[package.scala 32:86]
    node _io_out_T_24 = mux(_io_out_T_23, io_out_s_12, _io_out_T_22) @[package.scala 32:76]
    node _io_out_T_25 = eq(_io_out_T, UInt<4>("h0d")) @[package.scala 32:86]
    node _io_out_T_26 = mux(_io_out_T_25, io_out_s_13, _io_out_T_24) @[package.scala 32:76]
    node _io_out_T_27 = eq(_io_out_T, UInt<4>("h0e")) @[package.scala 32:86]
    node _io_out_T_28 = mux(_io_out_T_27, io_out_s_14, _io_out_T_26) @[package.scala 32:76]
    node _io_out_T_29 = eq(_io_out_T, UInt<4>("h0f")) @[package.scala 32:86]
    node _io_out_T_30 = mux(_io_out_T_29, io_out_s_15, _io_out_T_28) @[package.scala 32:76]
    node _io_out_T_31 = eq(_io_out_T, UInt<5>("h010")) @[package.scala 32:86]
    node _io_out_T_32 = mux(_io_out_T_31, io_out_s_16, _io_out_T_30) @[package.scala 32:76]
    node _io_out_T_33 = eq(_io_out_T, UInt<5>("h011")) @[package.scala 32:86]
    node _io_out_T_34 = mux(_io_out_T_33, io_out_s_17, _io_out_T_32) @[package.scala 32:76]
    node _io_out_T_35 = eq(_io_out_T, UInt<5>("h012")) @[package.scala 32:86]
    node _io_out_T_36 = mux(_io_out_T_35, io_out_s_18, _io_out_T_34) @[package.scala 32:76]
    node _io_out_T_37 = eq(_io_out_T, UInt<5>("h013")) @[package.scala 32:86]
    node _io_out_T_38 = mux(_io_out_T_37, io_out_s_19, _io_out_T_36) @[package.scala 32:76]
    node _io_out_T_39 = eq(_io_out_T, UInt<5>("h014")) @[package.scala 32:86]
    node _io_out_T_40 = mux(_io_out_T_39, io_out_s_20, _io_out_T_38) @[package.scala 32:76]
    node _io_out_T_41 = eq(_io_out_T, UInt<5>("h015")) @[package.scala 32:86]
    node _io_out_T_42 = mux(_io_out_T_41, io_out_s_21, _io_out_T_40) @[package.scala 32:76]
    node _io_out_T_43 = eq(_io_out_T, UInt<5>("h016")) @[package.scala 32:86]
    node _io_out_T_44 = mux(_io_out_T_43, io_out_s_22, _io_out_T_42) @[package.scala 32:76]
    node _io_out_T_45 = eq(_io_out_T, UInt<5>("h017")) @[package.scala 32:86]
    node _io_out_T_46 = mux(_io_out_T_45, io_out_s_23, _io_out_T_44) @[package.scala 32:76]
    node _io_out_T_47 = eq(_io_out_T, UInt<5>("h018")) @[package.scala 32:86]
    node _io_out_T_48 = mux(_io_out_T_47, io_out_s_24, _io_out_T_46) @[package.scala 32:76]
    node _io_out_T_49 = eq(_io_out_T, UInt<5>("h019")) @[package.scala 32:86]
    node _io_out_T_50 = mux(_io_out_T_49, io_out_s_25, _io_out_T_48) @[package.scala 32:76]
    node _io_out_T_51 = eq(_io_out_T, UInt<5>("h01a")) @[package.scala 32:86]
    node _io_out_T_52 = mux(_io_out_T_51, io_out_s_26, _io_out_T_50) @[package.scala 32:76]
    node _io_out_T_53 = eq(_io_out_T, UInt<5>("h01b")) @[package.scala 32:86]
    node _io_out_T_54 = mux(_io_out_T_53, io_out_s_27, _io_out_T_52) @[package.scala 32:76]
    node _io_out_T_55 = eq(_io_out_T, UInt<5>("h01c")) @[package.scala 32:86]
    node _io_out_T_56 = mux(_io_out_T_55, io_out_s_28, _io_out_T_54) @[package.scala 32:76]
    node _io_out_T_57 = eq(_io_out_T, UInt<5>("h01d")) @[package.scala 32:86]
    node _io_out_T_58 = mux(_io_out_T_57, io_out_s_29, _io_out_T_56) @[package.scala 32:76]
    node _io_out_T_59 = eq(_io_out_T, UInt<5>("h01e")) @[package.scala 32:86]
    node _io_out_T_60 = mux(_io_out_T_59, io_out_s_30, _io_out_T_58) @[package.scala 32:76]
    node _io_out_T_61 = eq(_io_out_T, UInt<5>("h01f")) @[package.scala 32:86]
    node _io_out_T_62 = mux(_io_out_T_61, io_out_s_31, _io_out_T_60) @[package.scala 32:76]
    io.out.rs3 <= _io_out_T_62.rs3 @[RVC.scala 164:12]
    io.out.rs2 <= _io_out_T_62.rs2 @[RVC.scala 164:12]
    io.out.rs1 <= _io_out_T_62.rs1 @[RVC.scala 164:12]
    io.out.rd <= _io_out_T_62.rd @[RVC.scala 164:12]
    io.out.bits <= _io_out_T_62.bits @[RVC.scala 164:12]
    
  extmodule plusarg_reader : 
    output out : UInt<32>
    
    defname = plusarg_reader
    parameter FORMAT = "max_core_cycles=%d"
    parameter DEFAULT = 0
    parameter WIDTH = 32
    
