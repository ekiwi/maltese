circuit RocketTile :
  module RocketTile :
    input clock : Clock
    input reset : UInt<1>
    output auto_broadcast_out_1_0_valid : UInt<1>
    output auto_broadcast_out_1_0_iaddr : UInt<40>
    output auto_broadcast_out_1_0_insn : UInt<32>
    output auto_broadcast_out_1_0_priv : UInt<3>
    output auto_broadcast_out_1_0_exception : UInt<1>
    output auto_broadcast_out_1_0_interrupt : UInt<1>
    output auto_broadcast_out_1_0_cause : UInt<64>
    output auto_broadcast_out_1_0_tval : UInt<40>
    output auto_broadcast_out_0_0_valid : UInt<1>
    output auto_broadcast_out_0_0_iaddr : UInt<40>
    output auto_broadcast_out_0_0_insn : UInt<32>
    output auto_broadcast_out_0_0_priv : UInt<3>
    output auto_broadcast_out_0_0_exception : UInt<1>
    output auto_broadcast_out_0_0_interrupt : UInt<1>
    output auto_broadcast_out_0_0_cause : UInt<64>
    output auto_broadcast_out_0_0_tval : UInt<40>
    output auto_wfi_out_0 : UInt<1>
    output auto_cease_out_0 : UInt<1>
    output auto_halt_out_0 : UInt<1>
    input auto_int_local_in_3_0 : UInt<1>
    input auto_int_local_in_2_0 : UInt<1>
    input auto_int_local_in_1_0 : UInt<1>
    input auto_int_local_in_1_1 : UInt<1>
    input auto_int_local_in_0_0 : UInt<1>
    output auto_trace_core_source_out_group_0_iretire : UInt<1>
    output auto_trace_core_source_out_group_0_iaddr : UInt<32>
    output auto_trace_core_source_out_group_0_itype : UInt<4>
    output auto_trace_core_source_out_group_0_ilastsize : UInt<1>
    output auto_trace_core_source_out_priv : UInt<4>
    output auto_trace_core_source_out_tval : UInt<32>
    output auto_trace_core_source_out_cause : UInt<32>
    input auto_nmi_in_rnmi : UInt<1>
    input auto_nmi_in_rnmi_interrupt_vector : UInt<32>
    input auto_nmi_in_rnmi_exception_vector : UInt<32>
    input auto_nmi_in_unmi : UInt<1>
    input auto_nmi_in_unmi_interrupt_vector : UInt<32>
    input auto_nmi_in_unmi_exception_vector : UInt<32>
    input auto_reset_vector_in : UInt<32>
    input auto_hartid_in : UInt<1>
    input auto_tl_other_masters_out_a_ready : UInt<1>
    output auto_tl_other_masters_out_a_valid : UInt<1>
    output auto_tl_other_masters_out_a_bits_opcode : UInt<3>
    output auto_tl_other_masters_out_a_bits_param : UInt<3>
    output auto_tl_other_masters_out_a_bits_size : UInt<4>
    output auto_tl_other_masters_out_a_bits_source : UInt<2>
    output auto_tl_other_masters_out_a_bits_address : UInt<32>
    output auto_tl_other_masters_out_a_bits_mask : UInt<8>
    output auto_tl_other_masters_out_a_bits_data : UInt<64>
    output auto_tl_other_masters_out_a_bits_corrupt : UInt<1>
    output auto_tl_other_masters_out_b_ready : UInt<1>
    input auto_tl_other_masters_out_b_valid : UInt<1>
    input auto_tl_other_masters_out_b_bits_opcode : UInt<3>
    input auto_tl_other_masters_out_b_bits_param : UInt<2>
    input auto_tl_other_masters_out_b_bits_size : UInt<4>
    input auto_tl_other_masters_out_b_bits_source : UInt<2>
    input auto_tl_other_masters_out_b_bits_address : UInt<32>
    input auto_tl_other_masters_out_b_bits_mask : UInt<8>
    input auto_tl_other_masters_out_b_bits_data : UInt<64>
    input auto_tl_other_masters_out_b_bits_corrupt : UInt<1>
    input auto_tl_other_masters_out_c_ready : UInt<1>
    output auto_tl_other_masters_out_c_valid : UInt<1>
    output auto_tl_other_masters_out_c_bits_opcode : UInt<3>
    output auto_tl_other_masters_out_c_bits_param : UInt<3>
    output auto_tl_other_masters_out_c_bits_size : UInt<4>
    output auto_tl_other_masters_out_c_bits_source : UInt<2>
    output auto_tl_other_masters_out_c_bits_address : UInt<32>
    output auto_tl_other_masters_out_c_bits_data : UInt<64>
    output auto_tl_other_masters_out_c_bits_corrupt : UInt<1>
    output auto_tl_other_masters_out_d_ready : UInt<1>
    input auto_tl_other_masters_out_d_valid : UInt<1>
    input auto_tl_other_masters_out_d_bits_opcode : UInt<3>
    input auto_tl_other_masters_out_d_bits_param : UInt<2>
    input auto_tl_other_masters_out_d_bits_size : UInt<4>
    input auto_tl_other_masters_out_d_bits_source : UInt<2>
    input auto_tl_other_masters_out_d_bits_sink : UInt<3>
    input auto_tl_other_masters_out_d_bits_denied : UInt<1>
    input auto_tl_other_masters_out_d_bits_data : UInt<64>
    input auto_tl_other_masters_out_d_bits_corrupt : UInt<1>
    input auto_tl_other_masters_out_e_ready : UInt<1>
    output auto_tl_other_masters_out_e_valid : UInt<1>
    output auto_tl_other_masters_out_e_bits_sink : UInt<3>

    inst tlMasterXbar of TLXbar_7 @[BaseTile.scala 195:42]
    skip
    inst intXbar of IntXbar_1 @[BaseTile.scala 197:37]
    inst broadcast of BundleBridgeNexus_6 @[BundleBridge.scala 196:31]
    inst broadcast_1 of BundleBridgeNexus_7 @[BundleBridge.scala 196:31]
    skip
    skip
    inst broadcast_3 of BundleBridgeNexus_10 @[BundleBridge.scala 196:31]
    skip
    skip
    inst dcache of DCache @[HellaCache.scala 265:43]
    inst frontend of Frontend @[Frontend.scala 350:28]
    skip
    skip
    inst fpuOpt of FPU @[RocketTile.scala 202:62]
    inst dcacheArb of HellaCacheArbiter @[HellaCache.scala 276:25]
    inst ptw of PTW @[PTW.scala 439:19]
    inst core of Rocket @[RocketTile.scala 140:20]
    reg bundleOut_0_0_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), bundleOut_0_0_REG) @[Interrupts.scala 129:36]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    auto_broadcast_out_1_0_valid <= broadcast_3.auto_out_1_0_valid @[LazyModule.scala 311:12]
    auto_broadcast_out_1_0_iaddr <= broadcast_3.auto_out_1_0_iaddr @[LazyModule.scala 311:12]
    auto_broadcast_out_1_0_insn <= broadcast_3.auto_out_1_0_insn @[LazyModule.scala 311:12]
    auto_broadcast_out_1_0_priv <= broadcast_3.auto_out_1_0_priv @[LazyModule.scala 311:12]
    auto_broadcast_out_1_0_exception <= broadcast_3.auto_out_1_0_exception @[LazyModule.scala 311:12]
    auto_broadcast_out_1_0_interrupt <= broadcast_3.auto_out_1_0_interrupt @[LazyModule.scala 311:12]
    auto_broadcast_out_1_0_cause <= broadcast_3.auto_out_1_0_cause @[LazyModule.scala 311:12]
    auto_broadcast_out_1_0_tval <= broadcast_3.auto_out_1_0_tval @[LazyModule.scala 311:12]
    auto_broadcast_out_0_0_valid <= broadcast_3.auto_out_0_0_valid @[LazyModule.scala 311:12]
    auto_broadcast_out_0_0_iaddr <= broadcast_3.auto_out_0_0_iaddr @[LazyModule.scala 311:12]
    auto_broadcast_out_0_0_insn <= broadcast_3.auto_out_0_0_insn @[LazyModule.scala 311:12]
    auto_broadcast_out_0_0_priv <= broadcast_3.auto_out_0_0_priv @[LazyModule.scala 311:12]
    auto_broadcast_out_0_0_exception <= broadcast_3.auto_out_0_0_exception @[LazyModule.scala 311:12]
    auto_broadcast_out_0_0_interrupt <= broadcast_3.auto_out_0_0_interrupt @[LazyModule.scala 311:12]
    auto_broadcast_out_0_0_cause <= broadcast_3.auto_out_0_0_cause @[LazyModule.scala 311:12]
    auto_broadcast_out_0_0_tval <= broadcast_3.auto_out_0_0_tval @[LazyModule.scala 311:12]
    auto_wfi_out_0 <= bundleOut_0_0_REG @[Nodes.scala 1207:84 Interrupts.scala 129:12]
    auto_cease_out_0 <= UInt<1>("h0") @[Interrupts.scala 115:14 Nodes.scala 1207:84]
    auto_halt_out_0 <= UInt<1>("h0") @[Nodes.scala 1207:84 Interrupts.scala 95:28]
    auto_trace_core_source_out_group_0_iretire <= UInt<1>("h0") @[LazyModule.scala 311:12]
    auto_trace_core_source_out_group_0_iaddr <= UInt<32>("h0") @[LazyModule.scala 311:12]
    auto_trace_core_source_out_group_0_itype <= UInt<4>("h0") @[LazyModule.scala 311:12]
    auto_trace_core_source_out_group_0_ilastsize <= UInt<1>("h0") @[LazyModule.scala 311:12]
    auto_trace_core_source_out_priv <= UInt<4>("h0") @[LazyModule.scala 311:12]
    auto_trace_core_source_out_tval <= UInt<32>("h0") @[LazyModule.scala 311:12]
    auto_trace_core_source_out_cause <= UInt<32>("h0") @[LazyModule.scala 311:12]
    auto_tl_other_masters_out_a_valid <= tlMasterXbar.auto_out_a_valid @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_a_bits_opcode <= tlMasterXbar.auto_out_a_bits_opcode @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_a_bits_param <= tlMasterXbar.auto_out_a_bits_param @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_a_bits_size <= tlMasterXbar.auto_out_a_bits_size @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_a_bits_source <= tlMasterXbar.auto_out_a_bits_source @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_a_bits_address <= tlMasterXbar.auto_out_a_bits_address @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_a_bits_mask <= tlMasterXbar.auto_out_a_bits_mask @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_a_bits_data <= tlMasterXbar.auto_out_a_bits_data @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_a_bits_corrupt <= UInt<1>("h0") @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_b_ready <= tlMasterXbar.auto_out_b_ready @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_c_valid <= tlMasterXbar.auto_out_c_valid @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_c_bits_opcode <= tlMasterXbar.auto_out_c_bits_opcode @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_c_bits_param <= tlMasterXbar.auto_out_c_bits_param @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_c_bits_size <= tlMasterXbar.auto_out_c_bits_size @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_c_bits_source <= tlMasterXbar.auto_out_c_bits_source @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_c_bits_address <= tlMasterXbar.auto_out_c_bits_address @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_c_bits_data <= tlMasterXbar.auto_out_c_bits_data @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_c_bits_corrupt <= UInt<1>("h0") @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_d_ready <= tlMasterXbar.auto_out_d_ready @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_e_valid <= tlMasterXbar.auto_out_e_valid @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    auto_tl_other_masters_out_e_bits_sink <= tlMasterXbar.auto_out_e_bits_sink @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    tlMasterXbar.clock <= clock
    tlMasterXbar.reset <= reset
    tlMasterXbar.auto_in_1_a_valid <= frontend.auto_icache_master_out_a_valid @[LazyModule.scala 296:16]
    skip
    skip
    skip
    skip
    tlMasterXbar.auto_in_1_a_bits_address <= frontend.auto_icache_master_out_a_bits_address @[LazyModule.scala 296:16]
    skip
    skip
    skip
    skip
    tlMasterXbar.auto_in_0_a_valid <= dcache.auto_out_a_valid @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_a_bits_opcode <= dcache.auto_out_a_bits_opcode @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_a_bits_param <= dcache.auto_out_a_bits_param @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_a_bits_size <= dcache.auto_out_a_bits_size @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_a_bits_source <= dcache.auto_out_a_bits_source @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_a_bits_address <= dcache.auto_out_a_bits_address @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_a_bits_mask <= dcache.auto_out_a_bits_mask @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_a_bits_data <= dcache.auto_out_a_bits_data @[LazyModule.scala 296:16]
    skip
    tlMasterXbar.auto_in_0_b_ready <= dcache.auto_out_b_ready @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_c_valid <= dcache.auto_out_c_valid @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_c_bits_opcode <= dcache.auto_out_c_bits_opcode @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_c_bits_param <= dcache.auto_out_c_bits_param @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_c_bits_size <= dcache.auto_out_c_bits_size @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_c_bits_source <= dcache.auto_out_c_bits_source @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_c_bits_address <= dcache.auto_out_c_bits_address @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_c_bits_data <= dcache.auto_out_c_bits_data @[LazyModule.scala 296:16]
    skip
    tlMasterXbar.auto_in_0_d_ready <= dcache.auto_out_d_ready @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_e_valid <= dcache.auto_out_e_valid @[LazyModule.scala 296:16]
    tlMasterXbar.auto_in_0_e_bits_sink <= dcache.auto_out_e_bits_sink @[LazyModule.scala 296:16]
    tlMasterXbar.auto_out_a_ready <= auto_tl_other_masters_out_a_ready @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_b_valid <= auto_tl_other_masters_out_b_valid @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    skip
    tlMasterXbar.auto_out_b_bits_param <= auto_tl_other_masters_out_b_bits_param @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_b_bits_size <= auto_tl_other_masters_out_b_bits_size @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_b_bits_source <= auto_tl_other_masters_out_b_bits_source @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_b_bits_address <= auto_tl_other_masters_out_b_bits_address @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    skip
    skip
    skip
    tlMasterXbar.auto_out_c_ready <= auto_tl_other_masters_out_c_ready @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_valid <= auto_tl_other_masters_out_d_valid @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_bits_opcode <= auto_tl_other_masters_out_d_bits_opcode @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_bits_param <= auto_tl_other_masters_out_d_bits_param @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_bits_size <= auto_tl_other_masters_out_d_bits_size @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_bits_source <= auto_tl_other_masters_out_d_bits_source @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_bits_sink <= auto_tl_other_masters_out_d_bits_sink @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_bits_denied <= auto_tl_other_masters_out_d_bits_denied @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_bits_data <= auto_tl_other_masters_out_d_bits_data @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_d_bits_corrupt <= auto_tl_other_masters_out_d_bits_corrupt @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    tlMasterXbar.auto_out_e_ready <= auto_tl_other_masters_out_e_ready @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    skip
    skip
    skip
    skip
    intXbar.auto_int_in_3_0 <= auto_int_local_in_3_0 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    intXbar.auto_int_in_2_0 <= auto_int_local_in_2_0 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    intXbar.auto_int_in_1_0 <= auto_int_local_in_1_0 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    intXbar.auto_int_in_1_1 <= auto_int_local_in_1_1 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    intXbar.auto_int_in_0_0 <= auto_int_local_in_0_0 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    skip
    skip
    broadcast.auto_in <= auto_hartid_in @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    skip
    skip
    broadcast_1.auto_in <= auto_reset_vector_in @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    broadcast_3.auto_in_0_valid <= core.io_trace_0_valid @[Nodes.scala 1207:84 RocketTile.scala 165:32]
    broadcast_3.auto_in_0_iaddr <= core.io_trace_0_iaddr @[Nodes.scala 1207:84 RocketTile.scala 165:32]
    broadcast_3.auto_in_0_insn <= core.io_trace_0_insn @[Nodes.scala 1207:84 RocketTile.scala 165:32]
    broadcast_3.auto_in_0_priv <= core.io_trace_0_priv @[Nodes.scala 1207:84 RocketTile.scala 165:32]
    broadcast_3.auto_in_0_exception <= core.io_trace_0_exception @[Nodes.scala 1207:84 RocketTile.scala 165:32]
    broadcast_3.auto_in_0_interrupt <= core.io_trace_0_interrupt @[Nodes.scala 1207:84 RocketTile.scala 165:32]
    broadcast_3.auto_in_0_cause <= core.io_trace_0_cause @[Nodes.scala 1207:84 RocketTile.scala 165:32]
    broadcast_3.auto_in_0_tval <= core.io_trace_0_tval @[Nodes.scala 1207:84 RocketTile.scala 165:32]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    dcache.gated_clock <= clock
    dcache.reset <= reset
    dcache.auto_out_a_ready <= tlMasterXbar.auto_in_0_a_ready @[LazyModule.scala 296:16]
    dcache.auto_out_b_valid <= tlMasterXbar.auto_in_0_b_valid @[LazyModule.scala 296:16]
    skip
    dcache.auto_out_b_bits_param <= tlMasterXbar.auto_in_0_b_bits_param @[LazyModule.scala 296:16]
    dcache.auto_out_b_bits_size <= tlMasterXbar.auto_in_0_b_bits_size @[LazyModule.scala 296:16]
    dcache.auto_out_b_bits_source <= tlMasterXbar.auto_in_0_b_bits_source @[LazyModule.scala 296:16]
    dcache.auto_out_b_bits_address <= tlMasterXbar.auto_in_0_b_bits_address @[LazyModule.scala 296:16]
    skip
    skip
    skip
    dcache.auto_out_c_ready <= tlMasterXbar.auto_in_0_c_ready @[LazyModule.scala 296:16]
    dcache.auto_out_d_valid <= tlMasterXbar.auto_in_0_d_valid @[LazyModule.scala 296:16]
    dcache.auto_out_d_bits_opcode <= tlMasterXbar.auto_in_0_d_bits_opcode @[LazyModule.scala 296:16]
    dcache.auto_out_d_bits_param <= tlMasterXbar.auto_in_0_d_bits_param @[LazyModule.scala 296:16]
    dcache.auto_out_d_bits_size <= tlMasterXbar.auto_in_0_d_bits_size @[LazyModule.scala 296:16]
    dcache.auto_out_d_bits_source <= tlMasterXbar.auto_in_0_d_bits_source @[LazyModule.scala 296:16]
    dcache.auto_out_d_bits_sink <= tlMasterXbar.auto_in_0_d_bits_sink @[LazyModule.scala 296:16]
    dcache.auto_out_d_bits_denied <= tlMasterXbar.auto_in_0_d_bits_denied @[LazyModule.scala 296:16]
    dcache.auto_out_d_bits_data <= tlMasterXbar.auto_in_0_d_bits_data @[LazyModule.scala 296:16]
    skip
    dcache.auto_out_e_ready <= tlMasterXbar.auto_in_0_e_ready @[LazyModule.scala 296:16]
    dcache.io_cpu_req_valid <= dcacheArb.io_mem_req_valid @[HellaCache.scala 277:30]
    dcache.io_cpu_req_bits_addr <= dcacheArb.io_mem_req_bits_addr @[HellaCache.scala 277:30]
    dcache.io_cpu_req_bits_tag <= dcacheArb.io_mem_req_bits_tag @[HellaCache.scala 277:30]
    dcache.io_cpu_req_bits_cmd <= dcacheArb.io_mem_req_bits_cmd @[HellaCache.scala 277:30]
    dcache.io_cpu_req_bits_size <= dcacheArb.io_mem_req_bits_size @[HellaCache.scala 277:30]
    dcache.io_cpu_req_bits_signed <= dcacheArb.io_mem_req_bits_signed @[HellaCache.scala 277:30]
    skip
    dcache.io_cpu_req_bits_phys <= dcacheArb.io_mem_req_bits_phys @[HellaCache.scala 277:30]
    skip
    skip
    skip
    skip
    dcache.io_cpu_s1_kill <= dcacheArb.io_mem_s1_kill @[HellaCache.scala 277:30]
    dcache.io_cpu_s1_data_data <= dcacheArb.io_mem_s1_data_data @[HellaCache.scala 277:30]
    skip
    skip
    skip
    dcache.io_ptw_req_ready <= ptw.io_requestor_0_req_ready @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_valid <= ptw.io_requestor_0_resp_valid @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_ae <= ptw.io_requestor_0_resp_bits_ae @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_pte_ppn <= ptw.io_requestor_0_resp_bits_pte_ppn @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_resp_bits_pte_d <= ptw.io_requestor_0_resp_bits_pte_d @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_pte_a <= ptw.io_requestor_0_resp_bits_pte_a @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_pte_g <= ptw.io_requestor_0_resp_bits_pte_g @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_pte_u <= ptw.io_requestor_0_resp_bits_pte_u @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_pte_x <= ptw.io_requestor_0_resp_bits_pte_x @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_pte_w <= ptw.io_requestor_0_resp_bits_pte_w @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_pte_r <= ptw.io_requestor_0_resp_bits_pte_r @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_pte_v <= ptw.io_requestor_0_resp_bits_pte_v @[RocketTile.scala 198:20]
    dcache.io_ptw_resp_bits_level <= ptw.io_requestor_0_resp_bits_level @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_resp_bits_homogeneous <= ptw.io_requestor_0_resp_bits_homogeneous @[RocketTile.scala 198:20]
    dcache.io_ptw_ptbr_mode <= ptw.io_requestor_0_ptbr_mode @[RocketTile.scala 198:20]
    skip
    skip
    dcache.io_ptw_status_debug <= ptw.io_requestor_0_status_debug @[RocketTile.scala 198:20]
    skip
    skip
    skip
    dcache.io_ptw_status_dprv <= ptw.io_requestor_0_status_dprv @[RocketTile.scala 198:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    dcache.io_ptw_status_mxr <= ptw.io_requestor_0_status_mxr @[RocketTile.scala 198:20]
    dcache.io_ptw_status_sum <= ptw.io_requestor_0_status_sum @[RocketTile.scala 198:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    dcache.io_ptw_pmp_0_cfg_l <= ptw.io_requestor_0_pmp_0_cfg_l @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_pmp_0_cfg_a <= ptw.io_requestor_0_pmp_0_cfg_a @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_0_cfg_x <= ptw.io_requestor_0_pmp_0_cfg_x @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_0_cfg_w <= ptw.io_requestor_0_pmp_0_cfg_w @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_0_cfg_r <= ptw.io_requestor_0_pmp_0_cfg_r @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_0_addr <= ptw.io_requestor_0_pmp_0_addr @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_0_mask <= ptw.io_requestor_0_pmp_0_mask @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_1_cfg_l <= ptw.io_requestor_0_pmp_1_cfg_l @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_pmp_1_cfg_a <= ptw.io_requestor_0_pmp_1_cfg_a @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_1_cfg_x <= ptw.io_requestor_0_pmp_1_cfg_x @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_1_cfg_w <= ptw.io_requestor_0_pmp_1_cfg_w @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_1_cfg_r <= ptw.io_requestor_0_pmp_1_cfg_r @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_1_addr <= ptw.io_requestor_0_pmp_1_addr @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_1_mask <= ptw.io_requestor_0_pmp_1_mask @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_2_cfg_l <= ptw.io_requestor_0_pmp_2_cfg_l @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_pmp_2_cfg_a <= ptw.io_requestor_0_pmp_2_cfg_a @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_2_cfg_x <= ptw.io_requestor_0_pmp_2_cfg_x @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_2_cfg_w <= ptw.io_requestor_0_pmp_2_cfg_w @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_2_cfg_r <= ptw.io_requestor_0_pmp_2_cfg_r @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_2_addr <= ptw.io_requestor_0_pmp_2_addr @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_2_mask <= ptw.io_requestor_0_pmp_2_mask @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_3_cfg_l <= ptw.io_requestor_0_pmp_3_cfg_l @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_pmp_3_cfg_a <= ptw.io_requestor_0_pmp_3_cfg_a @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_3_cfg_x <= ptw.io_requestor_0_pmp_3_cfg_x @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_3_cfg_w <= ptw.io_requestor_0_pmp_3_cfg_w @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_3_cfg_r <= ptw.io_requestor_0_pmp_3_cfg_r @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_3_addr <= ptw.io_requestor_0_pmp_3_addr @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_3_mask <= ptw.io_requestor_0_pmp_3_mask @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_4_cfg_l <= ptw.io_requestor_0_pmp_4_cfg_l @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_pmp_4_cfg_a <= ptw.io_requestor_0_pmp_4_cfg_a @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_4_cfg_x <= ptw.io_requestor_0_pmp_4_cfg_x @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_4_cfg_w <= ptw.io_requestor_0_pmp_4_cfg_w @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_4_cfg_r <= ptw.io_requestor_0_pmp_4_cfg_r @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_4_addr <= ptw.io_requestor_0_pmp_4_addr @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_4_mask <= ptw.io_requestor_0_pmp_4_mask @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_5_cfg_l <= ptw.io_requestor_0_pmp_5_cfg_l @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_pmp_5_cfg_a <= ptw.io_requestor_0_pmp_5_cfg_a @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_5_cfg_x <= ptw.io_requestor_0_pmp_5_cfg_x @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_5_cfg_w <= ptw.io_requestor_0_pmp_5_cfg_w @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_5_cfg_r <= ptw.io_requestor_0_pmp_5_cfg_r @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_5_addr <= ptw.io_requestor_0_pmp_5_addr @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_5_mask <= ptw.io_requestor_0_pmp_5_mask @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_6_cfg_l <= ptw.io_requestor_0_pmp_6_cfg_l @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_pmp_6_cfg_a <= ptw.io_requestor_0_pmp_6_cfg_a @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_6_cfg_x <= ptw.io_requestor_0_pmp_6_cfg_x @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_6_cfg_w <= ptw.io_requestor_0_pmp_6_cfg_w @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_6_cfg_r <= ptw.io_requestor_0_pmp_6_cfg_r @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_6_addr <= ptw.io_requestor_0_pmp_6_addr @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_6_mask <= ptw.io_requestor_0_pmp_6_mask @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_7_cfg_l <= ptw.io_requestor_0_pmp_7_cfg_l @[RocketTile.scala 198:20]
    skip
    dcache.io_ptw_pmp_7_cfg_a <= ptw.io_requestor_0_pmp_7_cfg_a @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_7_cfg_x <= ptw.io_requestor_0_pmp_7_cfg_x @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_7_cfg_w <= ptw.io_requestor_0_pmp_7_cfg_w @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_7_cfg_r <= ptw.io_requestor_0_pmp_7_cfg_r @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_7_addr <= ptw.io_requestor_0_pmp_7_addr @[RocketTile.scala 198:20]
    dcache.io_ptw_pmp_7_mask <= ptw.io_requestor_0_pmp_7_mask @[RocketTile.scala 198:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    frontend.gated_clock <= clock
    frontend.reset <= reset
    frontend.auto_icache_master_out_a_ready <= tlMasterXbar.auto_in_1_a_ready @[LazyModule.scala 296:16]
    frontend.auto_icache_master_out_d_valid <= tlMasterXbar.auto_in_1_d_valid @[LazyModule.scala 296:16]
    frontend.auto_icache_master_out_d_bits_opcode <= tlMasterXbar.auto_in_1_d_bits_opcode @[LazyModule.scala 296:16]
    skip
    frontend.auto_icache_master_out_d_bits_size <= tlMasterXbar.auto_in_1_d_bits_size @[LazyModule.scala 296:16]
    skip
    skip
    skip
    frontend.auto_icache_master_out_d_bits_data <= tlMasterXbar.auto_in_1_d_bits_data @[LazyModule.scala 296:16]
    frontend.auto_icache_master_out_d_bits_corrupt <= tlMasterXbar.auto_in_1_d_bits_corrupt @[LazyModule.scala 296:16]
    frontend.auto_reset_vector_sink_in <= broadcast_1.auto_out_1 @[LazyModule.scala 298:16]
    frontend.io_cpu_might_request <= core.io_imem_might_request @[RocketTile.scala 173:32]
    frontend.io_cpu_req_valid <= core.io_imem_req_valid @[RocketTile.scala 173:32]
    frontend.io_cpu_req_bits_pc <= core.io_imem_req_bits_pc @[RocketTile.scala 173:32]
    frontend.io_cpu_req_bits_speculative <= core.io_imem_req_bits_speculative @[RocketTile.scala 173:32]
    frontend.io_cpu_sfence_valid <= core.io_imem_sfence_valid @[RocketTile.scala 173:32]
    frontend.io_cpu_sfence_bits_rs1 <= core.io_imem_sfence_bits_rs1 @[RocketTile.scala 173:32]
    frontend.io_cpu_sfence_bits_rs2 <= core.io_imem_sfence_bits_rs2 @[RocketTile.scala 173:32]
    frontend.io_cpu_sfence_bits_addr <= core.io_imem_sfence_bits_addr @[RocketTile.scala 173:32]
    skip
    frontend.io_cpu_resp_ready <= core.io_imem_resp_ready @[RocketTile.scala 173:32]
    frontend.io_cpu_btb_update_valid <= core.io_imem_btb_update_valid @[RocketTile.scala 173:32]
    skip
    skip
    skip
    skip
    skip
    frontend.io_cpu_btb_update_bits_prediction_entry <= core.io_imem_btb_update_bits_prediction_entry @[RocketTile.scala 173:32]
    skip
    skip
    frontend.io_cpu_btb_update_bits_pc <= core.io_imem_btb_update_bits_pc @[RocketTile.scala 173:32]
    skip
    skip
    frontend.io_cpu_btb_update_bits_isValid <= core.io_imem_btb_update_bits_isValid @[RocketTile.scala 173:32]
    frontend.io_cpu_btb_update_bits_br_pc <= core.io_imem_btb_update_bits_br_pc @[RocketTile.scala 173:32]
    frontend.io_cpu_btb_update_bits_cfiType <= core.io_imem_btb_update_bits_cfiType @[RocketTile.scala 173:32]
    frontend.io_cpu_bht_update_valid <= core.io_imem_bht_update_valid @[RocketTile.scala 173:32]
    frontend.io_cpu_bht_update_bits_prediction_history <= core.io_imem_bht_update_bits_prediction_history @[RocketTile.scala 173:32]
    skip
    frontend.io_cpu_bht_update_bits_pc <= core.io_imem_bht_update_bits_pc @[RocketTile.scala 173:32]
    frontend.io_cpu_bht_update_bits_branch <= core.io_imem_bht_update_bits_branch @[RocketTile.scala 173:32]
    frontend.io_cpu_bht_update_bits_taken <= core.io_imem_bht_update_bits_taken @[RocketTile.scala 173:32]
    frontend.io_cpu_bht_update_bits_mispredict <= core.io_imem_bht_update_bits_mispredict @[RocketTile.scala 173:32]
    skip
    skip
    skip
    frontend.io_cpu_flush_icache <= core.io_imem_flush_icache @[RocketTile.scala 173:32]
    frontend.io_ptw_req_ready <= ptw.io_requestor_1_req_ready @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_valid <= ptw.io_requestor_1_resp_valid @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_ae <= ptw.io_requestor_1_resp_bits_ae @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_pte_ppn <= ptw.io_requestor_1_resp_bits_pte_ppn @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_resp_bits_pte_d <= ptw.io_requestor_1_resp_bits_pte_d @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_pte_a <= ptw.io_requestor_1_resp_bits_pte_a @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_pte_g <= ptw.io_requestor_1_resp_bits_pte_g @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_pte_u <= ptw.io_requestor_1_resp_bits_pte_u @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_pte_x <= ptw.io_requestor_1_resp_bits_pte_x @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_pte_w <= ptw.io_requestor_1_resp_bits_pte_w @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_pte_r <= ptw.io_requestor_1_resp_bits_pte_r @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_pte_v <= ptw.io_requestor_1_resp_bits_pte_v @[RocketTile.scala 198:20]
    frontend.io_ptw_resp_bits_level <= ptw.io_requestor_1_resp_bits_level @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_resp_bits_homogeneous <= ptw.io_requestor_1_resp_bits_homogeneous @[RocketTile.scala 198:20]
    frontend.io_ptw_ptbr_mode <= ptw.io_requestor_1_ptbr_mode @[RocketTile.scala 198:20]
    skip
    skip
    frontend.io_ptw_status_debug <= ptw.io_requestor_1_status_debug @[RocketTile.scala 198:20]
    skip
    skip
    skip
    skip
    frontend.io_ptw_status_prv <= ptw.io_requestor_1_status_prv @[RocketTile.scala 198:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    frontend.io_ptw_pmp_0_cfg_l <= ptw.io_requestor_1_pmp_0_cfg_l @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_pmp_0_cfg_a <= ptw.io_requestor_1_pmp_0_cfg_a @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_0_cfg_x <= ptw.io_requestor_1_pmp_0_cfg_x @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_0_cfg_w <= ptw.io_requestor_1_pmp_0_cfg_w @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_0_cfg_r <= ptw.io_requestor_1_pmp_0_cfg_r @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_0_addr <= ptw.io_requestor_1_pmp_0_addr @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_0_mask <= ptw.io_requestor_1_pmp_0_mask @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_1_cfg_l <= ptw.io_requestor_1_pmp_1_cfg_l @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_pmp_1_cfg_a <= ptw.io_requestor_1_pmp_1_cfg_a @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_1_cfg_x <= ptw.io_requestor_1_pmp_1_cfg_x @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_1_cfg_w <= ptw.io_requestor_1_pmp_1_cfg_w @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_1_cfg_r <= ptw.io_requestor_1_pmp_1_cfg_r @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_1_addr <= ptw.io_requestor_1_pmp_1_addr @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_1_mask <= ptw.io_requestor_1_pmp_1_mask @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_2_cfg_l <= ptw.io_requestor_1_pmp_2_cfg_l @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_pmp_2_cfg_a <= ptw.io_requestor_1_pmp_2_cfg_a @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_2_cfg_x <= ptw.io_requestor_1_pmp_2_cfg_x @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_2_cfg_w <= ptw.io_requestor_1_pmp_2_cfg_w @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_2_cfg_r <= ptw.io_requestor_1_pmp_2_cfg_r @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_2_addr <= ptw.io_requestor_1_pmp_2_addr @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_2_mask <= ptw.io_requestor_1_pmp_2_mask @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_3_cfg_l <= ptw.io_requestor_1_pmp_3_cfg_l @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_pmp_3_cfg_a <= ptw.io_requestor_1_pmp_3_cfg_a @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_3_cfg_x <= ptw.io_requestor_1_pmp_3_cfg_x @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_3_cfg_w <= ptw.io_requestor_1_pmp_3_cfg_w @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_3_cfg_r <= ptw.io_requestor_1_pmp_3_cfg_r @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_3_addr <= ptw.io_requestor_1_pmp_3_addr @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_3_mask <= ptw.io_requestor_1_pmp_3_mask @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_4_cfg_l <= ptw.io_requestor_1_pmp_4_cfg_l @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_pmp_4_cfg_a <= ptw.io_requestor_1_pmp_4_cfg_a @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_4_cfg_x <= ptw.io_requestor_1_pmp_4_cfg_x @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_4_cfg_w <= ptw.io_requestor_1_pmp_4_cfg_w @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_4_cfg_r <= ptw.io_requestor_1_pmp_4_cfg_r @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_4_addr <= ptw.io_requestor_1_pmp_4_addr @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_4_mask <= ptw.io_requestor_1_pmp_4_mask @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_5_cfg_l <= ptw.io_requestor_1_pmp_5_cfg_l @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_pmp_5_cfg_a <= ptw.io_requestor_1_pmp_5_cfg_a @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_5_cfg_x <= ptw.io_requestor_1_pmp_5_cfg_x @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_5_cfg_w <= ptw.io_requestor_1_pmp_5_cfg_w @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_5_cfg_r <= ptw.io_requestor_1_pmp_5_cfg_r @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_5_addr <= ptw.io_requestor_1_pmp_5_addr @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_5_mask <= ptw.io_requestor_1_pmp_5_mask @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_6_cfg_l <= ptw.io_requestor_1_pmp_6_cfg_l @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_pmp_6_cfg_a <= ptw.io_requestor_1_pmp_6_cfg_a @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_6_cfg_x <= ptw.io_requestor_1_pmp_6_cfg_x @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_6_cfg_w <= ptw.io_requestor_1_pmp_6_cfg_w @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_6_cfg_r <= ptw.io_requestor_1_pmp_6_cfg_r @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_6_addr <= ptw.io_requestor_1_pmp_6_addr @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_6_mask <= ptw.io_requestor_1_pmp_6_mask @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_7_cfg_l <= ptw.io_requestor_1_pmp_7_cfg_l @[RocketTile.scala 198:20]
    skip
    frontend.io_ptw_pmp_7_cfg_a <= ptw.io_requestor_1_pmp_7_cfg_a @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_7_cfg_x <= ptw.io_requestor_1_pmp_7_cfg_x @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_7_cfg_w <= ptw.io_requestor_1_pmp_7_cfg_w @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_7_cfg_r <= ptw.io_requestor_1_pmp_7_cfg_r @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_7_addr <= ptw.io_requestor_1_pmp_7_addr @[RocketTile.scala 198:20]
    frontend.io_ptw_pmp_7_mask <= ptw.io_requestor_1_pmp_7_mask @[RocketTile.scala 198:20]
    skip
    skip
    frontend.io_ptw_customCSRs_csrs_0_value <= ptw.io_requestor_1_customCSRs_csrs_0_value @[RocketTile.scala 198:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    fpuOpt.clock <= clock
    fpuOpt.reset <= reset
    skip
    skip
    fpuOpt.io_inst <= core.io_fpu_inst @[RocketTile.scala 175:39]
    fpuOpt.io_fromint_data <= core.io_fpu_fromint_data @[RocketTile.scala 175:39]
    fpuOpt.io_fcsr_rm <= core.io_fpu_fcsr_rm @[RocketTile.scala 175:39]
    fpuOpt.io_dmem_resp_val <= core.io_fpu_dmem_resp_val @[RocketTile.scala 175:39]
    fpuOpt.io_dmem_resp_type <= core.io_fpu_dmem_resp_type @[RocketTile.scala 175:39]
    fpuOpt.io_dmem_resp_tag <= core.io_fpu_dmem_resp_tag @[RocketTile.scala 175:39]
    fpuOpt.io_dmem_resp_data <= core.io_fpu_dmem_resp_data @[RocketTile.scala 175:39]
    fpuOpt.io_valid <= core.io_fpu_valid @[RocketTile.scala 175:39]
    fpuOpt.io_killx <= core.io_fpu_killx @[RocketTile.scala 175:39]
    fpuOpt.io_killm <= core.io_fpu_killm @[RocketTile.scala 175:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    dcacheArb.clock <= clock
    skip
    dcacheArb.io_requestor_0_req_valid <= ptw.io_mem_req_valid @[RocketTile.scala 197:26]
    dcacheArb.io_requestor_0_req_bits_addr <= ptw.io_mem_req_bits_addr @[RocketTile.scala 197:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    dcacheArb.io_requestor_0_s1_kill <= ptw.io_mem_s1_kill @[RocketTile.scala 197:26]
    skip
    skip
    skip
    skip
    dcacheArb.io_requestor_1_req_valid <= core.io_dmem_req_valid @[RocketTile.scala 197:26]
    dcacheArb.io_requestor_1_req_bits_addr <= core.io_dmem_req_bits_addr @[RocketTile.scala 197:26]
    dcacheArb.io_requestor_1_req_bits_tag <= core.io_dmem_req_bits_tag @[RocketTile.scala 197:26]
    dcacheArb.io_requestor_1_req_bits_cmd <= core.io_dmem_req_bits_cmd @[RocketTile.scala 197:26]
    dcacheArb.io_requestor_1_req_bits_size <= core.io_dmem_req_bits_size @[RocketTile.scala 197:26]
    dcacheArb.io_requestor_1_req_bits_signed <= core.io_dmem_req_bits_signed @[RocketTile.scala 197:26]
    skip
    skip
    skip
    skip
    skip
    skip
    dcacheArb.io_requestor_1_s1_kill <= core.io_dmem_s1_kill @[RocketTile.scala 197:26]
    dcacheArb.io_requestor_1_s1_data_data <= core.io_dmem_s1_data_data @[RocketTile.scala 197:26]
    skip
    skip
    skip
    dcacheArb.io_mem_req_ready <= dcache.io_cpu_req_ready @[HellaCache.scala 277:30]
    dcacheArb.io_mem_s2_nack <= dcache.io_cpu_s2_nack @[HellaCache.scala 277:30]
    skip
    skip
    skip
    dcacheArb.io_mem_resp_valid <= dcache.io_cpu_resp_valid @[HellaCache.scala 277:30]
    skip
    dcacheArb.io_mem_resp_bits_tag <= dcache.io_cpu_resp_bits_tag @[HellaCache.scala 277:30]
    skip
    dcacheArb.io_mem_resp_bits_size <= dcache.io_cpu_resp_bits_size @[HellaCache.scala 277:30]
    skip
    skip
    dcacheArb.io_mem_resp_bits_data <= dcache.io_cpu_resp_bits_data @[HellaCache.scala 277:30]
    skip
    dcacheArb.io_mem_resp_bits_replay <= dcache.io_cpu_resp_bits_replay @[HellaCache.scala 277:30]
    dcacheArb.io_mem_resp_bits_has_data <= dcache.io_cpu_resp_bits_has_data @[HellaCache.scala 277:30]
    dcacheArb.io_mem_resp_bits_data_word_bypass <= dcache.io_cpu_resp_bits_data_word_bypass @[HellaCache.scala 277:30]
    skip
    skip
    dcacheArb.io_mem_replay_next <= dcache.io_cpu_replay_next @[HellaCache.scala 277:30]
    dcacheArb.io_mem_s2_xcpt_ma_ld <= dcache.io_cpu_s2_xcpt_ma_ld @[HellaCache.scala 277:30]
    dcacheArb.io_mem_s2_xcpt_ma_st <= dcache.io_cpu_s2_xcpt_ma_st @[HellaCache.scala 277:30]
    dcacheArb.io_mem_s2_xcpt_pf_ld <= dcache.io_cpu_s2_xcpt_pf_ld @[HellaCache.scala 277:30]
    dcacheArb.io_mem_s2_xcpt_pf_st <= dcache.io_cpu_s2_xcpt_pf_st @[HellaCache.scala 277:30]
    dcacheArb.io_mem_s2_xcpt_ae_ld <= dcache.io_cpu_s2_xcpt_ae_ld @[HellaCache.scala 277:30]
    dcacheArb.io_mem_s2_xcpt_ae_st <= dcache.io_cpu_s2_xcpt_ae_st @[HellaCache.scala 277:30]
    dcacheArb.io_mem_ordered <= dcache.io_cpu_ordered @[HellaCache.scala 277:30]
    skip
    dcacheArb.io_mem_perf_release <= dcache.io_cpu_perf_release @[HellaCache.scala 277:30]
    dcacheArb.io_mem_perf_grant <= dcache.io_cpu_perf_grant @[HellaCache.scala 277:30]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    ptw.clock <= clock
    ptw.reset <= reset
    ptw.io_requestor_0_req_valid <= dcache.io_ptw_req_valid @[RocketTile.scala 198:20]
    skip
    ptw.io_requestor_0_req_bits_bits_addr <= dcache.io_ptw_req_bits_bits_addr @[RocketTile.scala 198:20]
    ptw.io_requestor_1_req_valid <= frontend.io_ptw_req_valid @[RocketTile.scala 198:20]
    ptw.io_requestor_1_req_bits_valid <= frontend.io_ptw_req_bits_valid @[RocketTile.scala 198:20]
    ptw.io_requestor_1_req_bits_bits_addr <= frontend.io_ptw_req_bits_bits_addr @[RocketTile.scala 198:20]
    ptw.io_mem_req_ready <= dcacheArb.io_requestor_0_req_ready @[RocketTile.scala 197:26]
    ptw.io_mem_s2_nack <= dcacheArb.io_requestor_0_s2_nack @[RocketTile.scala 197:26]
    skip
    skip
    skip
    ptw.io_mem_resp_valid <= dcacheArb.io_requestor_0_resp_valid @[RocketTile.scala 197:26]
    skip
    skip
    skip
    skip
    skip
    skip
    ptw.io_mem_resp_bits_data <= dcacheArb.io_requestor_0_resp_bits_data @[RocketTile.scala 197:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    ptw.io_mem_s2_xcpt_ae_ld <= dcacheArb.io_requestor_0_s2_xcpt_ae_ld @[RocketTile.scala 197:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    ptw.io_dpath_ptbr_mode <= core.io_ptw_ptbr_mode @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_ptbr_ppn <= core.io_ptw_ptbr_ppn @[RocketTile.scala 176:15]
    ptw.io_dpath_sfence_valid <= core.io_ptw_sfence_valid @[RocketTile.scala 176:15]
    ptw.io_dpath_sfence_bits_rs1 <= core.io_ptw_sfence_bits_rs1 @[RocketTile.scala 176:15]
    ptw.io_dpath_sfence_bits_rs2 <= core.io_ptw_sfence_bits_rs2 @[RocketTile.scala 176:15]
    ptw.io_dpath_sfence_bits_addr <= core.io_ptw_sfence_bits_addr @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_status_debug <= core.io_ptw_status_debug @[RocketTile.scala 176:15]
    skip
    skip
    skip
    ptw.io_dpath_status_dprv <= core.io_ptw_status_dprv @[RocketTile.scala 176:15]
    ptw.io_dpath_status_prv <= core.io_ptw_status_prv @[RocketTile.scala 176:15]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    ptw.io_dpath_status_mxr <= core.io_ptw_status_mxr @[RocketTile.scala 176:15]
    ptw.io_dpath_status_sum <= core.io_ptw_status_sum @[RocketTile.scala 176:15]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    ptw.io_dpath_pmp_0_cfg_l <= core.io_ptw_pmp_0_cfg_l @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_pmp_0_cfg_a <= core.io_ptw_pmp_0_cfg_a @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_0_cfg_x <= core.io_ptw_pmp_0_cfg_x @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_0_cfg_w <= core.io_ptw_pmp_0_cfg_w @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_0_cfg_r <= core.io_ptw_pmp_0_cfg_r @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_0_addr <= core.io_ptw_pmp_0_addr @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_0_mask <= core.io_ptw_pmp_0_mask @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_1_cfg_l <= core.io_ptw_pmp_1_cfg_l @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_pmp_1_cfg_a <= core.io_ptw_pmp_1_cfg_a @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_1_cfg_x <= core.io_ptw_pmp_1_cfg_x @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_1_cfg_w <= core.io_ptw_pmp_1_cfg_w @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_1_cfg_r <= core.io_ptw_pmp_1_cfg_r @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_1_addr <= core.io_ptw_pmp_1_addr @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_1_mask <= core.io_ptw_pmp_1_mask @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_2_cfg_l <= core.io_ptw_pmp_2_cfg_l @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_pmp_2_cfg_a <= core.io_ptw_pmp_2_cfg_a @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_2_cfg_x <= core.io_ptw_pmp_2_cfg_x @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_2_cfg_w <= core.io_ptw_pmp_2_cfg_w @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_2_cfg_r <= core.io_ptw_pmp_2_cfg_r @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_2_addr <= core.io_ptw_pmp_2_addr @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_2_mask <= core.io_ptw_pmp_2_mask @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_3_cfg_l <= core.io_ptw_pmp_3_cfg_l @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_pmp_3_cfg_a <= core.io_ptw_pmp_3_cfg_a @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_3_cfg_x <= core.io_ptw_pmp_3_cfg_x @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_3_cfg_w <= core.io_ptw_pmp_3_cfg_w @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_3_cfg_r <= core.io_ptw_pmp_3_cfg_r @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_3_addr <= core.io_ptw_pmp_3_addr @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_3_mask <= core.io_ptw_pmp_3_mask @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_4_cfg_l <= core.io_ptw_pmp_4_cfg_l @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_pmp_4_cfg_a <= core.io_ptw_pmp_4_cfg_a @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_4_cfg_x <= core.io_ptw_pmp_4_cfg_x @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_4_cfg_w <= core.io_ptw_pmp_4_cfg_w @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_4_cfg_r <= core.io_ptw_pmp_4_cfg_r @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_4_addr <= core.io_ptw_pmp_4_addr @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_4_mask <= core.io_ptw_pmp_4_mask @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_5_cfg_l <= core.io_ptw_pmp_5_cfg_l @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_pmp_5_cfg_a <= core.io_ptw_pmp_5_cfg_a @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_5_cfg_x <= core.io_ptw_pmp_5_cfg_x @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_5_cfg_w <= core.io_ptw_pmp_5_cfg_w @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_5_cfg_r <= core.io_ptw_pmp_5_cfg_r @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_5_addr <= core.io_ptw_pmp_5_addr @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_5_mask <= core.io_ptw_pmp_5_mask @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_6_cfg_l <= core.io_ptw_pmp_6_cfg_l @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_pmp_6_cfg_a <= core.io_ptw_pmp_6_cfg_a @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_6_cfg_x <= core.io_ptw_pmp_6_cfg_x @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_6_cfg_w <= core.io_ptw_pmp_6_cfg_w @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_6_cfg_r <= core.io_ptw_pmp_6_cfg_r @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_6_addr <= core.io_ptw_pmp_6_addr @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_6_mask <= core.io_ptw_pmp_6_mask @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_7_cfg_l <= core.io_ptw_pmp_7_cfg_l @[RocketTile.scala 176:15]
    skip
    ptw.io_dpath_pmp_7_cfg_a <= core.io_ptw_pmp_7_cfg_a @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_7_cfg_x <= core.io_ptw_pmp_7_cfg_x @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_7_cfg_w <= core.io_ptw_pmp_7_cfg_w @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_7_cfg_r <= core.io_ptw_pmp_7_cfg_r @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_7_addr <= core.io_ptw_pmp_7_addr @[RocketTile.scala 176:15]
    ptw.io_dpath_pmp_7_mask <= core.io_ptw_pmp_7_mask @[RocketTile.scala 176:15]
    skip
    skip
    ptw.io_dpath_customCSRs_csrs_0_value <= core.io_ptw_customCSRs_csrs_0_value @[RocketTile.scala 176:15]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    core.clock <= clock
    core.reset <= reset
    core.io_hartid <= broadcast.auto_out @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    skip
    core.io_interrupts_debug <= intXbar.auto_int_out_0 @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    core.io_interrupts_mtip <= intXbar.auto_int_out_2 @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    core.io_interrupts_msip <= intXbar.auto_int_out_1 @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    core.io_interrupts_meip <= intXbar.auto_int_out_3 @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    core.io_interrupts_seip <= intXbar.auto_int_out_4 @[Nodes.scala 1210:84 LazyModule.scala 296:16]
    skip
    core.io_imem_resp_valid <= frontend.io_cpu_resp_valid @[RocketTile.scala 173:32]
    skip
    core.io_imem_resp_bits_btb_taken <= frontend.io_cpu_resp_bits_btb_taken @[RocketTile.scala 173:32]
    skip
    core.io_imem_resp_bits_btb_bridx <= frontend.io_cpu_resp_bits_btb_bridx @[RocketTile.scala 173:32]
    skip
    core.io_imem_resp_bits_btb_entry <= frontend.io_cpu_resp_bits_btb_entry @[RocketTile.scala 173:32]
    core.io_imem_resp_bits_btb_bht_history <= frontend.io_cpu_resp_bits_btb_bht_history @[RocketTile.scala 173:32]
    skip
    core.io_imem_resp_bits_pc <= frontend.io_cpu_resp_bits_pc @[RocketTile.scala 173:32]
    core.io_imem_resp_bits_data <= frontend.io_cpu_resp_bits_data @[RocketTile.scala 173:32]
    skip
    core.io_imem_resp_bits_xcpt_pf_inst <= frontend.io_cpu_resp_bits_xcpt_pf_inst @[RocketTile.scala 173:32]
    core.io_imem_resp_bits_xcpt_ae_inst <= frontend.io_cpu_resp_bits_xcpt_ae_inst @[RocketTile.scala 173:32]
    core.io_imem_resp_bits_replay <= frontend.io_cpu_resp_bits_replay @[RocketTile.scala 173:32]
    skip
    skip
    skip
    core.io_dmem_req_ready <= dcacheArb.io_requestor_1_req_ready @[RocketTile.scala 197:26]
    core.io_dmem_s2_nack <= dcacheArb.io_requestor_1_s2_nack @[RocketTile.scala 197:26]
    skip
    skip
    skip
    core.io_dmem_resp_valid <= dcacheArb.io_requestor_1_resp_valid @[RocketTile.scala 197:26]
    skip
    core.io_dmem_resp_bits_tag <= dcacheArb.io_requestor_1_resp_bits_tag @[RocketTile.scala 197:26]
    skip
    core.io_dmem_resp_bits_size <= dcacheArb.io_requestor_1_resp_bits_size @[RocketTile.scala 197:26]
    skip
    skip
    core.io_dmem_resp_bits_data <= dcacheArb.io_requestor_1_resp_bits_data @[RocketTile.scala 197:26]
    skip
    core.io_dmem_resp_bits_replay <= dcacheArb.io_requestor_1_resp_bits_replay @[RocketTile.scala 197:26]
    core.io_dmem_resp_bits_has_data <= dcacheArb.io_requestor_1_resp_bits_has_data @[RocketTile.scala 197:26]
    core.io_dmem_resp_bits_data_word_bypass <= dcacheArb.io_requestor_1_resp_bits_data_word_bypass @[RocketTile.scala 197:26]
    skip
    skip
    core.io_dmem_replay_next <= dcacheArb.io_requestor_1_replay_next @[RocketTile.scala 197:26]
    core.io_dmem_s2_xcpt_ma_ld <= dcacheArb.io_requestor_1_s2_xcpt_ma_ld @[RocketTile.scala 197:26]
    core.io_dmem_s2_xcpt_ma_st <= dcacheArb.io_requestor_1_s2_xcpt_ma_st @[RocketTile.scala 197:26]
    core.io_dmem_s2_xcpt_pf_ld <= dcacheArb.io_requestor_1_s2_xcpt_pf_ld @[RocketTile.scala 197:26]
    core.io_dmem_s2_xcpt_pf_st <= dcacheArb.io_requestor_1_s2_xcpt_pf_st @[RocketTile.scala 197:26]
    core.io_dmem_s2_xcpt_ae_ld <= dcacheArb.io_requestor_1_s2_xcpt_ae_ld @[RocketTile.scala 197:26]
    core.io_dmem_s2_xcpt_ae_st <= dcacheArb.io_requestor_1_s2_xcpt_ae_st @[RocketTile.scala 197:26]
    core.io_dmem_ordered <= dcacheArb.io_requestor_1_ordered @[RocketTile.scala 197:26]
    skip
    core.io_dmem_perf_release <= dcacheArb.io_requestor_1_perf_release @[RocketTile.scala 197:26]
    core.io_dmem_perf_grant <= dcacheArb.io_requestor_1_perf_grant @[RocketTile.scala 197:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    core.io_fpu_fcsr_flags_valid <= fpuOpt.io_fcsr_flags_valid @[RocketTile.scala 175:39]
    core.io_fpu_fcsr_flags_bits <= fpuOpt.io_fcsr_flags_bits @[RocketTile.scala 175:39]
    core.io_fpu_store_data <= fpuOpt.io_store_data @[RocketTile.scala 175:39]
    core.io_fpu_toint_data <= fpuOpt.io_toint_data @[RocketTile.scala 175:39]
    core.io_fpu_fcsr_rdy <= fpuOpt.io_fcsr_rdy @[RocketTile.scala 175:39]
    core.io_fpu_nack_mem <= fpuOpt.io_nack_mem @[RocketTile.scala 175:39]
    core.io_fpu_illegal_rm <= fpuOpt.io_illegal_rm @[RocketTile.scala 175:39]
    skip
    core.io_fpu_dec_wen <= fpuOpt.io_dec_wen @[RocketTile.scala 175:39]
    core.io_fpu_dec_ren1 <= fpuOpt.io_dec_ren1 @[RocketTile.scala 175:39]
    core.io_fpu_dec_ren2 <= fpuOpt.io_dec_ren2 @[RocketTile.scala 175:39]
    core.io_fpu_dec_ren3 <= fpuOpt.io_dec_ren3 @[RocketTile.scala 175:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    core.io_fpu_sboard_set <= fpuOpt.io_sboard_set @[RocketTile.scala 175:39]
    core.io_fpu_sboard_clr <= fpuOpt.io_sboard_clr @[RocketTile.scala 175:39]
    core.io_fpu_sboard_clra <= fpuOpt.io_sboard_clra @[RocketTile.scala 175:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    bundleOut_0_0_REG <= mux(reset, UInt<1>("h0"), core.io_wfi) @[Interrupts.scala 129:{36,36,36}]

  module TLXbar_7 :
    input clock : Clock
    input reset : UInt<1>
    output auto_in_1_a_ready : UInt<1>
    input auto_in_1_a_valid : UInt<1>
    input auto_in_1_a_bits_address : UInt<32>
    output auto_in_1_d_valid : UInt<1>
    output auto_in_1_d_bits_opcode : UInt<3>
    output auto_in_1_d_bits_size : UInt<4>
    output auto_in_1_d_bits_data : UInt<64>
    output auto_in_1_d_bits_corrupt : UInt<1>
    output auto_in_0_a_ready : UInt<1>
    input auto_in_0_a_valid : UInt<1>
    input auto_in_0_a_bits_opcode : UInt<3>
    input auto_in_0_a_bits_param : UInt<3>
    input auto_in_0_a_bits_size : UInt<4>
    input auto_in_0_a_bits_source : UInt<1>
    input auto_in_0_a_bits_address : UInt<32>
    input auto_in_0_a_bits_mask : UInt<8>
    input auto_in_0_a_bits_data : UInt<64>
    input auto_in_0_b_ready : UInt<1>
    output auto_in_0_b_valid : UInt<1>
    output auto_in_0_b_bits_param : UInt<2>
    output auto_in_0_b_bits_size : UInt<4>
    output auto_in_0_b_bits_source : UInt<1>
    output auto_in_0_b_bits_address : UInt<32>
    output auto_in_0_c_ready : UInt<1>
    input auto_in_0_c_valid : UInt<1>
    input auto_in_0_c_bits_opcode : UInt<3>
    input auto_in_0_c_bits_param : UInt<3>
    input auto_in_0_c_bits_size : UInt<4>
    input auto_in_0_c_bits_source : UInt<1>
    input auto_in_0_c_bits_address : UInt<32>
    input auto_in_0_c_bits_data : UInt<64>
    input auto_in_0_d_ready : UInt<1>
    output auto_in_0_d_valid : UInt<1>
    output auto_in_0_d_bits_opcode : UInt<3>
    output auto_in_0_d_bits_param : UInt<2>
    output auto_in_0_d_bits_size : UInt<4>
    output auto_in_0_d_bits_source : UInt<1>
    output auto_in_0_d_bits_sink : UInt<3>
    output auto_in_0_d_bits_denied : UInt<1>
    output auto_in_0_d_bits_data : UInt<64>
    output auto_in_0_e_ready : UInt<1>
    input auto_in_0_e_valid : UInt<1>
    input auto_in_0_e_bits_sink : UInt<3>
    input auto_out_a_ready : UInt<1>
    output auto_out_a_valid : UInt<1>
    output auto_out_a_bits_opcode : UInt<3>
    output auto_out_a_bits_param : UInt<3>
    output auto_out_a_bits_size : UInt<4>
    output auto_out_a_bits_source : UInt<2>
    output auto_out_a_bits_address : UInt<32>
    output auto_out_a_bits_mask : UInt<8>
    output auto_out_a_bits_data : UInt<64>
    output auto_out_b_ready : UInt<1>
    input auto_out_b_valid : UInt<1>
    input auto_out_b_bits_param : UInt<2>
    input auto_out_b_bits_size : UInt<4>
    input auto_out_b_bits_source : UInt<2>
    input auto_out_b_bits_address : UInt<32>
    input auto_out_c_ready : UInt<1>
    output auto_out_c_valid : UInt<1>
    output auto_out_c_bits_opcode : UInt<3>
    output auto_out_c_bits_param : UInt<3>
    output auto_out_c_bits_size : UInt<4>
    output auto_out_c_bits_source : UInt<2>
    output auto_out_c_bits_address : UInt<32>
    output auto_out_c_bits_data : UInt<64>
    output auto_out_d_ready : UInt<1>
    input auto_out_d_valid : UInt<1>
    input auto_out_d_bits_opcode : UInt<3>
    input auto_out_d_bits_param : UInt<2>
    input auto_out_d_bits_size : UInt<4>
    input auto_out_d_bits_source : UInt<2>
    input auto_out_d_bits_sink : UInt<3>
    input auto_out_d_bits_denied : UInt<1>
    input auto_out_d_bits_data : UInt<64>
    input auto_out_d_bits_corrupt : UInt<1>
    input auto_out_e_ready : UInt<1>
    output auto_out_e_valid : UInt<1>
    output auto_out_e_bits_sink : UInt<3>

    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _requestBOI_T = shr(auto_out_b_bits_source, 1) @[Parameters.scala 54:10]
    node requestBOI_0_0 = not(_requestBOI_T) @[Parameters.scala 54:32]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _requestDOI_T = shr(auto_out_d_bits_source, 1) @[Parameters.scala 54:10]
    node requestDOI_0_0 = not(_requestDOI_T) @[Parameters.scala 54:32]
    skip
    skip
    skip
    skip
    node requestDOI_0_1 = eq(auto_out_d_bits_source, UInt<2>("h2")) @[Parameters.scala 46:9]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _beatsAI_decode_T_1 = dshl(UInt<12>("hfff"), auto_in_0_a_bits_size) @[package.scala 234:77]
    node _beatsAI_decode_T_2 = bits(_beatsAI_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beatsAI_decode_T_3 = not(_beatsAI_decode_T_2) @[package.scala 234:46]
    node beatsAI_decode = shr(_beatsAI_decode_T_3, 3) @[Edges.scala 219:59]
    skip
    skip
    skip
    node _beatsAI_opdata_T = bits(auto_in_0_a_bits_opcode, 2, 2) @[Edges.scala 91:37]
    node beatsAI_opdata = not(_beatsAI_opdata_T) @[Edges.scala 91:28]
    node beatsAI_0 = mux(beatsAI_opdata, beatsAI_decode, UInt<9>("h0")) @[Edges.scala 220:14]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _portsDIO_out_0_d_ready_T = and(requestDOI_0_0, auto_in_0_d_ready) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg beatsLeft : UInt<9>, clock with :
      reset => (UInt<1>("h0"), beatsLeft) @[Arbiter.scala 87:30]
    node idle = eq(beatsLeft, UInt<9>("h0")) @[Arbiter.scala 88:28]
    skip
    skip
    skip
    skip
    skip
    node latch = and(idle, auto_out_a_ready) @[Arbiter.scala 89:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node readys_filter_lo = cat(auto_in_1_a_valid, auto_in_0_a_valid) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    reg readys_mask : UInt<2>, clock with :
      reset => (UInt<1>("h0"), readys_mask) @[Arbiter.scala 23:23]
    node _readys_filter_T = not(readys_mask) @[Arbiter.scala 24:30]
    node readys_filter_hi = and(readys_filter_lo, _readys_filter_T) @[Arbiter.scala 24:28]
    node readys_filter = cat(readys_filter_hi, readys_filter_lo) @[Cat.scala 30:58]
    node _readys_unready_T = shr(readys_filter, 1) @[package.scala 253:48]
    node _GEN_1 = pad(_readys_unready_T, 4) @[package.scala 253:43]
    node _readys_unready_T_1 = or(readys_filter, _GEN_1) @[package.scala 253:43]
    skip
    node _readys_unready_T_3 = shr(_readys_unready_T_1, 1) @[Arbiter.scala 25:52]
    node _readys_unready_T_4 = shl(readys_mask, 2) @[Arbiter.scala 25:66]
    node _GEN_2 = pad(_readys_unready_T_3, 4) @[Arbiter.scala 25:58]
    node readys_unready = or(_GEN_2, _readys_unready_T_4) @[Arbiter.scala 25:58]
    node _readys_readys_T = shr(readys_unready, 2) @[Arbiter.scala 26:29]
    node _readys_readys_T_1 = bits(readys_unready, 1, 0) @[Arbiter.scala 26:48]
    node _readys_readys_T_2 = and(_readys_readys_T, _readys_readys_T_1) @[Arbiter.scala 26:39]
    node readys_readys = not(_readys_readys_T_2) @[Arbiter.scala 26:18]
    node _readys_T_5 = orr(readys_filter_lo) @[Arbiter.scala 27:27]
    node _readys_T_6 = and(latch, _readys_T_5) @[Arbiter.scala 27:18]
    node _readys_mask_T = and(readys_readys, readys_filter_lo) @[Arbiter.scala 28:29]
    node _readys_mask_T_1 = shl(_readys_mask_T, 1) @[package.scala 244:48]
    node _readys_mask_T_2 = bits(_readys_mask_T_1, 1, 0) @[package.scala 244:53]
    node _readys_mask_T_3 = or(_readys_mask_T, _readys_mask_T_2) @[package.scala 244:43]
    skip
    node _GEN_0 = mux(_readys_T_6, _readys_mask_T_3, readys_mask) @[Arbiter.scala 27:32 28:12 23:23]
    skip
    node readys_0 = bits(readys_readys, 0, 0) @[Arbiter.scala 95:86]
    node readys_1 = bits(readys_readys, 1, 1) @[Arbiter.scala 95:86]
    skip
    node earlyWinner_0 = and(readys_0, auto_in_0_a_valid) @[Arbiter.scala 97:79]
    skip
    node earlyWinner_1 = and(readys_1, auto_in_1_a_valid) @[Arbiter.scala 97:79]
    skip
    skip
    skip
    skip
    skip
    node _prefixOR_T = or(earlyWinner_0, earlyWinner_1) @[Arbiter.scala 104:53]
    skip
    node _T_2 = not(earlyWinner_0) @[Arbiter.scala 105:67]
    skip
    skip
    node _T_5 = not(earlyWinner_1) @[Arbiter.scala 105:67]
    node _T_6 = or(_T_2, _T_5) @[Arbiter.scala 105:64]
    skip
    skip
    node _T_9 = or(_T_6, reset) @[Arbiter.scala 105:13]
    node _T_10 = not(_T_9) @[Arbiter.scala 105:13]
    node _T_11 = or(auto_in_0_a_valid, auto_in_1_a_valid) @[Arbiter.scala 107:36]
    node _T_12 = not(_T_11) @[Arbiter.scala 107:15]
    skip
    node _T_14 = or(_T_12, _prefixOR_T) @[Arbiter.scala 107:41]
    skip
    node _T_16 = or(_T_14, reset) @[Arbiter.scala 107:14]
    node _T_17 = not(_T_16) @[Arbiter.scala 107:14]
    skip
    skip
    skip
    node _T_21 = or(_T_12, _T_11) @[Arbiter.scala 108:41]
    skip
    node _T_23 = or(_T_21, reset) @[Arbiter.scala 108:14]
    node _T_24 = not(_T_23) @[Arbiter.scala 108:14]
    skip
    node maskedBeats_0 = mux(earlyWinner_0, beatsAI_0, UInt<9>("h0")) @[Arbiter.scala 111:73]
    skip
    skip
    skip
    reg state_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_0) @[Arbiter.scala 116:26]
    node muxStateEarly_0 = mux(idle, earlyWinner_0, state_0) @[Arbiter.scala 117:30]
    skip
    reg state_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_1) @[Arbiter.scala 116:26]
    node muxStateEarly_1 = mux(idle, earlyWinner_1, state_1) @[Arbiter.scala 117:30]
    skip
    skip
    skip
    skip
    skip
    skip
    node _out_0_a_earlyValid_T_1 = and(state_0, auto_in_0_a_valid) @[Mux.scala 27:72]
    node _out_0_a_earlyValid_T_2 = and(state_1, auto_in_1_a_valid) @[Mux.scala 27:72]
    node _out_0_a_earlyValid_T_3 = or(_out_0_a_earlyValid_T_1, _out_0_a_earlyValid_T_2) @[Mux.scala 27:72]
    skip
    node out_2_0_a_earlyValid = mux(idle, _T_11, _out_0_a_earlyValid_T_3) @[Arbiter.scala 125:29]
    skip
    skip
    node _beatsLeft_T_2 = and(auto_out_a_ready, out_2_0_a_earlyValid) @[ReadyValidCancel.scala 50:33]
    node _GEN_3 = pad(_beatsLeft_T_2, 9) @[Arbiter.scala 113:52]
    node _beatsLeft_T_3 = sub(beatsLeft, _GEN_3) @[Arbiter.scala 113:52]
    node _beatsLeft_T_4 = tail(_beatsLeft_T_3, 1) @[Arbiter.scala 113:52]
    node _beatsLeft_T_5 = mux(latch, maskedBeats_0, _beatsLeft_T_4) @[Arbiter.scala 113:23]
    skip
    skip
    node allowed_0 = mux(idle, readys_0, state_0) @[Arbiter.scala 121:24]
    node allowed_1 = mux(idle, readys_1, state_1) @[Arbiter.scala 121:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_31 = mux(muxStateEarly_0, auto_in_0_a_bits_mask, UInt<8>("h0")) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    node _T_32 = mux(muxStateEarly_1, UInt<8>("hff"), UInt<8>("h0")) @[Mux.scala 27:72]
    skip
    skip
    node _T_34 = mux(muxStateEarly_0, auto_in_0_a_bits_address, UInt<32>("h0")) @[Mux.scala 27:72]
    skip
    node _T_35 = mux(muxStateEarly_1, auto_in_1_a_bits_address, UInt<32>("h0")) @[Mux.scala 27:72]
    skip
    node in_0_a_bits_source = pad(auto_in_0_a_bits_source, 2) @[Xbar.scala 231:18 237:29]
    skip
    node _T_37 = mux(muxStateEarly_0, in_0_a_bits_source, UInt<2>("h0")) @[Mux.scala 27:72]
    skip
    skip
    node _T_38 = mux(muxStateEarly_1, UInt<2>("h2"), UInt<2>("h0")) @[Mux.scala 27:72]
    skip
    skip
    node _T_40 = mux(muxStateEarly_0, auto_in_0_a_bits_size, UInt<4>("h0")) @[Mux.scala 27:72]
    skip
    node _T_41 = mux(muxStateEarly_1, UInt<4>("h6"), UInt<4>("h0")) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_46 = mux(muxStateEarly_0, auto_in_0_a_bits_opcode, UInt<3>("h0")) @[Mux.scala 27:72]
    skip
    node _T_47 = mux(muxStateEarly_1, UInt<3>("h4"), UInt<3>("h0")) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    auto_in_1_a_ready <= and(auto_out_a_ready, allowed_1) @[Arbiter.scala 123:31]
    auto_in_1_d_valid <= and(auto_out_d_valid, requestDOI_0_1) @[Xbar.scala 179:40]
    auto_in_1_d_bits_opcode <= auto_out_d_bits_opcode @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    skip
    auto_in_1_d_bits_size <= auto_out_d_bits_size @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    skip
    skip
    skip
    auto_in_1_d_bits_data <= auto_out_d_bits_data @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_1_d_bits_corrupt <= auto_out_d_bits_corrupt @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_0_a_ready <= and(auto_out_a_ready, allowed_0) @[Arbiter.scala 123:31]
    auto_in_0_b_valid <= and(auto_out_b_valid, requestBOI_0_0) @[Xbar.scala 179:40]
    skip
    auto_in_0_b_bits_param <= auto_out_b_bits_param @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_0_b_bits_size <= auto_out_b_bits_size @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_0_b_bits_source <= bits(auto_out_b_bits_source, 0, 0) @[Xbar.scala 228:69]
    auto_in_0_b_bits_address <= auto_out_b_bits_address @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    skip
    skip
    skip
    auto_in_0_c_ready <= auto_out_c_ready @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_0_d_valid <= and(auto_out_d_valid, requestDOI_0_0) @[Xbar.scala 179:40]
    auto_in_0_d_bits_opcode <= auto_out_d_bits_opcode @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_0_d_bits_param <= auto_out_d_bits_param @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_0_d_bits_size <= auto_out_d_bits_size @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_0_d_bits_source <= bits(auto_out_d_bits_source, 0, 0) @[Xbar.scala 228:69]
    auto_in_0_d_bits_sink <= auto_out_d_bits_sink @[Xbar.scala 323:53]
    auto_in_0_d_bits_denied <= auto_out_d_bits_denied @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_in_0_d_bits_data <= auto_out_d_bits_data @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    skip
    auto_in_0_e_ready <= auto_out_e_ready @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    auto_out_a_valid <= mux(idle, _T_11, _out_0_a_earlyValid_T_3) @[Arbiter.scala 125:29]
    auto_out_a_bits_opcode <= or(_T_46, _T_47) @[Mux.scala 27:72]
    auto_out_a_bits_param <= mux(muxStateEarly_0, auto_in_0_a_bits_param, UInt<3>("h0")) @[Mux.scala 27:72]
    auto_out_a_bits_size <= or(_T_40, _T_41) @[Mux.scala 27:72]
    auto_out_a_bits_source <= or(_T_37, _T_38) @[Mux.scala 27:72]
    auto_out_a_bits_address <= or(_T_34, _T_35) @[Mux.scala 27:72]
    auto_out_a_bits_mask <= or(_T_31, _T_32) @[Mux.scala 27:72]
    auto_out_a_bits_data <= mux(muxStateEarly_0, auto_in_0_a_bits_data, UInt<64>("h0")) @[Mux.scala 27:72]
    skip
    auto_out_b_ready <= and(requestBOI_0_0, auto_in_0_b_ready) @[Mux.scala 27:72]
    auto_out_c_valid <= auto_in_0_c_valid @[ReadyValidCancel.scala 21:38]
    auto_out_c_bits_opcode <= auto_in_0_c_bits_opcode @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_c_bits_param <= auto_in_0_c_bits_param @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_c_bits_size <= auto_in_0_c_bits_size @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_c_bits_source <= pad(auto_in_0_c_bits_source, 2) @[Xbar.scala 231:18 259:29]
    auto_out_c_bits_address <= auto_in_0_c_bits_address @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_c_bits_data <= auto_in_0_c_bits_data @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    skip
    auto_out_d_ready <= or(_portsDIO_out_0_d_ready_T, requestDOI_0_1) @[Mux.scala 27:72]
    auto_out_e_valid <= auto_in_0_e_valid @[ReadyValidCancel.scala 21:38]
    auto_out_e_bits_sink <= auto_in_0_e_bits_sink @[Xbar.scala 228:69]
    beatsLeft <= mux(reset, UInt<9>("h0"), _beatsLeft_T_5) @[Arbiter.scala 113:17 87:{30,30}]
    readys_mask <= mux(reset, UInt<2>("h3"), _GEN_0) @[Arbiter.scala 23:{23,23}]
    state_0 <= mux(reset, UInt<1>("h0"), muxStateEarly_0) @[Arbiter.scala 116:{26,26} 119:13]
    state_1 <= mux(reset, UInt<1>("h0"), muxStateEarly_1) @[Arbiter.scala 116:{26,26} 119:13]
    skip
    skip
    printf(clock, _T_10, "Assertion failed\n    at Arbiter.scala:105 assert((prefixOR zip earlyWinner) map { case (p,w) => !p || !w } reduce {_ && _})\n") @[Arbiter.scala 105:13]
    stop(clock, _T_10, 1) @[Arbiter.scala 105:13]
    printf(clock, _T_17, "Assertion failed\n    at Arbiter.scala:107 assert (!earlyValids.reduce(_||_) || earlyWinner.reduce(_||_))\n") @[Arbiter.scala 107:14]
    stop(clock, _T_17, 1) @[Arbiter.scala 107:14]
    printf(clock, _T_24, "Assertion failed\n    at Arbiter.scala:108 assert (!validQuals .reduce(_||_) || validQuals .reduce(_||_))\n") @[Arbiter.scala 108:14]
    stop(clock, _T_24, 1) @[Arbiter.scala 108:14]

  module IntXbar_1 :
    input auto_int_in_3_0 : UInt<1>
    input auto_int_in_2_0 : UInt<1>
    input auto_int_in_1_0 : UInt<1>
    input auto_int_in_1_1 : UInt<1>
    input auto_int_in_0_0 : UInt<1>
    output auto_int_out_0 : UInt<1>
    output auto_int_out_1 : UInt<1>
    output auto_int_out_2 : UInt<1>
    output auto_int_out_3 : UInt<1>
    output auto_int_out_4 : UInt<1>

    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    auto_int_out_0 <= auto_int_in_0_0 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_int_out_1 <= auto_int_in_1_0 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_int_out_2 <= auto_int_in_1_1 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_int_out_3 <= auto_int_in_2_0 @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_int_out_4 <= auto_int_in_3_0 @[Nodes.scala 1210:84 LazyModule.scala 309:16]

  module BundleBridgeNexus_6 :
    input auto_in : UInt<1>
    output auto_out : UInt<1>

    skip
    skip
    auto_out <= auto_in @[Nodes.scala 1210:84 LazyModule.scala 309:16]

  module BundleBridgeNexus_7 :
    input auto_in : UInt<32>
    output auto_out_1 : UInt<32>

    skip
    skip
    skip
    auto_out_1 <= auto_in @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    skip

  module BundleBridgeNexus_10 :
    input auto_in_0_valid : UInt<1>
    input auto_in_0_iaddr : UInt<40>
    input auto_in_0_insn : UInt<32>
    input auto_in_0_priv : UInt<3>
    input auto_in_0_exception : UInt<1>
    input auto_in_0_interrupt : UInt<1>
    input auto_in_0_cause : UInt<64>
    input auto_in_0_tval : UInt<40>
    output auto_out_1_0_valid : UInt<1>
    output auto_out_1_0_iaddr : UInt<40>
    output auto_out_1_0_insn : UInt<32>
    output auto_out_1_0_priv : UInt<3>
    output auto_out_1_0_exception : UInt<1>
    output auto_out_1_0_interrupt : UInt<1>
    output auto_out_1_0_cause : UInt<64>
    output auto_out_1_0_tval : UInt<40>
    output auto_out_0_0_valid : UInt<1>
    output auto_out_0_0_iaddr : UInt<40>
    output auto_out_0_0_insn : UInt<32>
    output auto_out_0_0_priv : UInt<3>
    output auto_out_0_0_exception : UInt<1>
    output auto_out_0_0_interrupt : UInt<1>
    output auto_out_0_0_cause : UInt<64>
    output auto_out_0_0_tval : UInt<40>

    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    auto_out_1_0_valid <= auto_in_0_valid @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_1_0_iaddr <= auto_in_0_iaddr @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_1_0_insn <= auto_in_0_insn @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_1_0_priv <= auto_in_0_priv @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_1_0_exception <= auto_in_0_exception @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_1_0_interrupt <= auto_in_0_interrupt @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_1_0_cause <= auto_in_0_cause @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_1_0_tval <= auto_in_0_tval @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_0_0_valid <= auto_in_0_valid @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_0_0_iaddr <= auto_in_0_iaddr @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_0_0_insn <= auto_in_0_insn @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_0_0_priv <= auto_in_0_priv @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_0_0_exception <= auto_in_0_exception @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_0_0_interrupt <= auto_in_0_interrupt @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_0_0_cause <= auto_in_0_cause @[Nodes.scala 1210:84 LazyModule.scala 309:16]
    auto_out_0_0_tval <= auto_in_0_tval @[Nodes.scala 1210:84 LazyModule.scala 309:16]

  module DCache :
    input gated_clock : Clock
    input reset : UInt<1>
    input auto_out_a_ready : UInt<1>
    output auto_out_a_valid : UInt<1>
    output auto_out_a_bits_opcode : UInt<3>
    output auto_out_a_bits_param : UInt<3>
    output auto_out_a_bits_size : UInt<4>
    output auto_out_a_bits_source : UInt<1>
    output auto_out_a_bits_address : UInt<32>
    output auto_out_a_bits_mask : UInt<8>
    output auto_out_a_bits_data : UInt<64>
    output auto_out_b_ready : UInt<1>
    input auto_out_b_valid : UInt<1>
    input auto_out_b_bits_param : UInt<2>
    input auto_out_b_bits_size : UInt<4>
    input auto_out_b_bits_source : UInt<1>
    input auto_out_b_bits_address : UInt<32>
    input auto_out_c_ready : UInt<1>
    output auto_out_c_valid : UInt<1>
    output auto_out_c_bits_opcode : UInt<3>
    output auto_out_c_bits_param : UInt<3>
    output auto_out_c_bits_size : UInt<4>
    output auto_out_c_bits_source : UInt<1>
    output auto_out_c_bits_address : UInt<32>
    output auto_out_c_bits_data : UInt<64>
    output auto_out_d_ready : UInt<1>
    input auto_out_d_valid : UInt<1>
    input auto_out_d_bits_opcode : UInt<3>
    input auto_out_d_bits_param : UInt<2>
    input auto_out_d_bits_size : UInt<4>
    input auto_out_d_bits_source : UInt<1>
    input auto_out_d_bits_sink : UInt<3>
    input auto_out_d_bits_denied : UInt<1>
    input auto_out_d_bits_data : UInt<64>
    input auto_out_e_ready : UInt<1>
    output auto_out_e_valid : UInt<1>
    output auto_out_e_bits_sink : UInt<3>
    output io_cpu_req_ready : UInt<1>
    input io_cpu_req_valid : UInt<1>
    input io_cpu_req_bits_addr : UInt<40>
    input io_cpu_req_bits_tag : UInt<7>
    input io_cpu_req_bits_cmd : UInt<5>
    input io_cpu_req_bits_size : UInt<2>
    input io_cpu_req_bits_signed : UInt<1>
    input io_cpu_req_bits_phys : UInt<1>
    input io_cpu_s1_kill : UInt<1>
    input io_cpu_s1_data_data : UInt<64>
    output io_cpu_s2_nack : UInt<1>
    output io_cpu_resp_valid : UInt<1>
    output io_cpu_resp_bits_tag : UInt<7>
    output io_cpu_resp_bits_size : UInt<2>
    output io_cpu_resp_bits_data : UInt<64>
    output io_cpu_resp_bits_replay : UInt<1>
    output io_cpu_resp_bits_has_data : UInt<1>
    output io_cpu_resp_bits_data_word_bypass : UInt<64>
    output io_cpu_replay_next : UInt<1>
    output io_cpu_s2_xcpt_ma_ld : UInt<1>
    output io_cpu_s2_xcpt_ma_st : UInt<1>
    output io_cpu_s2_xcpt_pf_ld : UInt<1>
    output io_cpu_s2_xcpt_pf_st : UInt<1>
    output io_cpu_s2_xcpt_ae_ld : UInt<1>
    output io_cpu_s2_xcpt_ae_st : UInt<1>
    output io_cpu_ordered : UInt<1>
    output io_cpu_perf_release : UInt<1>
    output io_cpu_perf_grant : UInt<1>
    input io_ptw_req_ready : UInt<1>
    output io_ptw_req_valid : UInt<1>
    output io_ptw_req_bits_bits_addr : UInt<27>
    input io_ptw_resp_valid : UInt<1>
    input io_ptw_resp_bits_ae : UInt<1>
    input io_ptw_resp_bits_pte_ppn : UInt<54>
    input io_ptw_resp_bits_pte_d : UInt<1>
    input io_ptw_resp_bits_pte_a : UInt<1>
    input io_ptw_resp_bits_pte_g : UInt<1>
    input io_ptw_resp_bits_pte_u : UInt<1>
    input io_ptw_resp_bits_pte_x : UInt<1>
    input io_ptw_resp_bits_pte_w : UInt<1>
    input io_ptw_resp_bits_pte_r : UInt<1>
    input io_ptw_resp_bits_pte_v : UInt<1>
    input io_ptw_resp_bits_level : UInt<2>
    input io_ptw_resp_bits_homogeneous : UInt<1>
    input io_ptw_ptbr_mode : UInt<4>
    input io_ptw_status_debug : UInt<1>
    input io_ptw_status_dprv : UInt<2>
    input io_ptw_status_mxr : UInt<1>
    input io_ptw_status_sum : UInt<1>
    input io_ptw_pmp_0_cfg_l : UInt<1>
    input io_ptw_pmp_0_cfg_a : UInt<2>
    input io_ptw_pmp_0_cfg_x : UInt<1>
    input io_ptw_pmp_0_cfg_w : UInt<1>
    input io_ptw_pmp_0_cfg_r : UInt<1>
    input io_ptw_pmp_0_addr : UInt<30>
    input io_ptw_pmp_0_mask : UInt<32>
    input io_ptw_pmp_1_cfg_l : UInt<1>
    input io_ptw_pmp_1_cfg_a : UInt<2>
    input io_ptw_pmp_1_cfg_x : UInt<1>
    input io_ptw_pmp_1_cfg_w : UInt<1>
    input io_ptw_pmp_1_cfg_r : UInt<1>
    input io_ptw_pmp_1_addr : UInt<30>
    input io_ptw_pmp_1_mask : UInt<32>
    input io_ptw_pmp_2_cfg_l : UInt<1>
    input io_ptw_pmp_2_cfg_a : UInt<2>
    input io_ptw_pmp_2_cfg_x : UInt<1>
    input io_ptw_pmp_2_cfg_w : UInt<1>
    input io_ptw_pmp_2_cfg_r : UInt<1>
    input io_ptw_pmp_2_addr : UInt<30>
    input io_ptw_pmp_2_mask : UInt<32>
    input io_ptw_pmp_3_cfg_l : UInt<1>
    input io_ptw_pmp_3_cfg_a : UInt<2>
    input io_ptw_pmp_3_cfg_x : UInt<1>
    input io_ptw_pmp_3_cfg_w : UInt<1>
    input io_ptw_pmp_3_cfg_r : UInt<1>
    input io_ptw_pmp_3_addr : UInt<30>
    input io_ptw_pmp_3_mask : UInt<32>
    input io_ptw_pmp_4_cfg_l : UInt<1>
    input io_ptw_pmp_4_cfg_a : UInt<2>
    input io_ptw_pmp_4_cfg_x : UInt<1>
    input io_ptw_pmp_4_cfg_w : UInt<1>
    input io_ptw_pmp_4_cfg_r : UInt<1>
    input io_ptw_pmp_4_addr : UInt<30>
    input io_ptw_pmp_4_mask : UInt<32>
    input io_ptw_pmp_5_cfg_l : UInt<1>
    input io_ptw_pmp_5_cfg_a : UInt<2>
    input io_ptw_pmp_5_cfg_x : UInt<1>
    input io_ptw_pmp_5_cfg_w : UInt<1>
    input io_ptw_pmp_5_cfg_r : UInt<1>
    input io_ptw_pmp_5_addr : UInt<30>
    input io_ptw_pmp_5_mask : UInt<32>
    input io_ptw_pmp_6_cfg_l : UInt<1>
    input io_ptw_pmp_6_cfg_a : UInt<2>
    input io_ptw_pmp_6_cfg_x : UInt<1>
    input io_ptw_pmp_6_cfg_w : UInt<1>
    input io_ptw_pmp_6_cfg_r : UInt<1>
    input io_ptw_pmp_6_addr : UInt<30>
    input io_ptw_pmp_6_mask : UInt<32>
    input io_ptw_pmp_7_cfg_l : UInt<1>
    input io_ptw_pmp_7_cfg_a : UInt<2>
    input io_ptw_pmp_7_cfg_x : UInt<1>
    input io_ptw_pmp_7_cfg_w : UInt<1>
    input io_ptw_pmp_7_cfg_r : UInt<1>
    input io_ptw_pmp_7_addr : UInt<30>
    input io_ptw_pmp_7_mask : UInt<32>

    inst tlb of TLB @[DCache.scala 117:19]
    inst pma_checker of TLB @[DCache.scala 118:27]
    inst lfsr_prng of MaxPeriodFibonacciLFSR_1 @[PRNG.scala 82:22]
    inst metaArb of DCacheModuleImpl_Anon_1 @[DCache.scala 122:23]
    mem tag_array_0 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<22>
      depth => 64
      read-latency => 1
      write-latency => 1
      reader => s1_meta
      writer => MPORT
      read-under-write => undefined
    mem tag_array_1 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<22>
      depth => 64
      read-latency => 1
      write-latency => 1
      reader => s1_meta
      writer => MPORT
      read-under-write => undefined
    mem tag_array_2 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<22>
      depth => 64
      read-latency => 1
      write-latency => 1
      reader => s1_meta
      writer => MPORT
      read-under-write => undefined
    mem tag_array_3 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<22>
      depth => 64
      read-latency => 1
      write-latency => 1
      reader => s1_meta
      writer => MPORT
      read-under-write => undefined
    inst data of DCacheDataArray @[DCache.scala 132:20]
    inst dataArb of DCacheModuleImpl_Anon_2 @[DCache.scala 133:23]
    inst amoalu of AMOALU @[DCache.scala 952:26]
    skip
    node lfsr_lo_lo_lo = cat(lfsr_prng.io_out_1, lfsr_prng.io_out_0) @[PRNG.scala 86:17]
    node lfsr_lo_lo_hi = cat(lfsr_prng.io_out_3, lfsr_prng.io_out_2) @[PRNG.scala 86:17]
    node lfsr_lo_lo = cat(lfsr_lo_lo_hi, lfsr_lo_lo_lo) @[PRNG.scala 86:17]
    node lfsr_lo_hi_lo = cat(lfsr_prng.io_out_5, lfsr_prng.io_out_4) @[PRNG.scala 86:17]
    node lfsr_lo_hi_hi = cat(lfsr_prng.io_out_7, lfsr_prng.io_out_6) @[PRNG.scala 86:17]
    node lfsr_lo_hi = cat(lfsr_lo_hi_hi, lfsr_lo_hi_lo) @[PRNG.scala 86:17]
    node lfsr_lo = cat(lfsr_lo_hi, lfsr_lo_lo) @[PRNG.scala 86:17]
    node lfsr_hi_lo_lo = cat(lfsr_prng.io_out_9, lfsr_prng.io_out_8) @[PRNG.scala 86:17]
    node lfsr_hi_lo_hi = cat(lfsr_prng.io_out_11, lfsr_prng.io_out_10) @[PRNG.scala 86:17]
    node lfsr_hi_lo = cat(lfsr_hi_lo_hi, lfsr_hi_lo_lo) @[PRNG.scala 86:17]
    node lfsr_hi_hi_lo = cat(lfsr_prng.io_out_13, lfsr_prng.io_out_12) @[PRNG.scala 86:17]
    node lfsr_hi_hi_hi = cat(lfsr_prng.io_out_15, lfsr_prng.io_out_14) @[PRNG.scala 86:17]
    node lfsr_hi_hi = cat(lfsr_hi_hi_hi, lfsr_hi_hi_lo) @[PRNG.scala 86:17]
    node lfsr_hi = cat(lfsr_hi_hi, lfsr_hi_lo) @[PRNG.scala 86:17]
    node lfsr = cat(lfsr_hi, lfsr_lo) @[PRNG.scala 86:17]
    node s1_valid_x9 = and(io_cpu_req_ready, io_cpu_req_valid) @[Decoupled.scala 40:37]
    reg s1_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_valid) @[DCache.scala 162:21]
    reg blockProbeAfterGrantCount : UInt<3>, gated_clock with :
      reset => (UInt<1>("h0"), blockProbeAfterGrantCount) @[DCache.scala 640:38]
    node _block_probe_for_core_progress_T = gt(blockProbeAfterGrantCount, UInt<3>("h0")) @[DCache.scala 738:65]
    reg lrscCount : UInt<7>, gated_clock with :
      reset => (UInt<1>("h0"), lrscCount) @[DCache.scala 444:22]
    node lrscValid = gt(lrscCount, UInt<7>("h3")) @[DCache.scala 445:29]
    node block_probe_for_core_progress = or(_block_probe_for_core_progress_T, lrscValid) @[DCache.scala 738:69]
    reg s1_probe : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_probe) @[DCache.scala 163:21]
    reg s2_probe : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_probe) @[DCache.scala 305:21]
    node _releaseInFlight_T = or(s1_probe, s2_probe) @[DCache.scala 306:34]
    reg release_state : UInt<4>, gated_clock with :
      reset => (UInt<1>("h0"), release_state) @[DCache.scala 207:26]
    node _releaseInFlight_T_1 = neq(release_state, UInt<4>("h0")) @[DCache.scala 306:63]
    node releaseInFlight = or(_releaseInFlight_T, _releaseInFlight_T_1) @[DCache.scala 306:46]
    reg release_ack_wait : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), release_ack_wait) @[DCache.scala 204:29]
    reg release_ack_dirty : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), release_ack_dirty) @[DCache.scala 205:30]
    node _block_probe_for_pending_release_ack_T = and(release_ack_wait, release_ack_dirty) @[DCache.scala 739:62]
    skip
    reg release_ack_addr : UInt<32>, gated_clock with :
      reset => (UInt<1>("h0"), release_ack_addr) @[DCache.scala 206:29]
    node _block_probe_for_pending_release_ack_T_1 = xor(auto_out_b_bits_address, release_ack_addr) @[DCache.scala 739:109]
    node _block_probe_for_pending_release_ack_T_2 = bits(_block_probe_for_pending_release_ack_T_1, 11, 6) @[DCache.scala 739:128]
    node _block_probe_for_pending_release_ack_T_3 = eq(_block_probe_for_pending_release_ack_T_2, UInt<6>("h0")) @[DCache.scala 739:145]
    node block_probe_for_pending_release_ack = and(_block_probe_for_pending_release_ack_T, _block_probe_for_pending_release_ack_T_3) @[DCache.scala 739:83]
    node _block_probe_for_ordering_T = or(releaseInFlight, block_probe_for_pending_release_ack) @[DCache.scala 740:50]
    reg grantInProgress : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), grantInProgress) @[DCache.scala 639:28]
    node block_probe_for_ordering = or(_block_probe_for_ordering_T, grantInProgress) @[DCache.scala 740:89]
    node _bundleOut_0_b_ready_T = or(block_probe_for_core_progress, block_probe_for_ordering) @[DCache.scala 742:79]
    node _bundleOut_0_b_ready_T_1 = or(_bundleOut_0_b_ready_T, s1_valid) @[DCache.scala 742:107]
    reg s2_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_valid) @[DCache.scala 303:21]
    node _bundleOut_0_b_ready_T_2 = or(_bundleOut_0_b_ready_T_1, s2_valid) @[DCache.scala 742:119]
    node _bundleOut_0_b_ready_T_3 = not(_bundleOut_0_b_ready_T_2) @[DCache.scala 742:47]
    node tl_out__b_ready = and(metaArb.io_in_6_ready, _bundleOut_0_b_ready_T_3) @[DCache.scala 742:44]
    skip
    skip
    node s1_probe_x12 = and(tl_out__b_ready, auto_out_b_valid) @[Decoupled.scala 40:37]
    skip
    skip
    reg probe_bits_param : UInt<2>, gated_clock with :
      reset => (UInt<1>("h0"), probe_bits_param) @[Reg.scala 15:16]
    reg probe_bits_size : UInt<4>, gated_clock with :
      reset => (UInt<1>("h0"), probe_bits_size) @[Reg.scala 15:16]
    reg probe_bits_source : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), probe_bits_source) @[Reg.scala 15:16]
    reg probe_bits_address : UInt<32>, gated_clock with :
      reset => (UInt<1>("h0"), probe_bits_address) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_3 = mux(s1_probe_x12, auto_out_b_bits_address, probe_bits_address) @[Reg.scala 15:16 16:{19,23}]
    skip
    node _GEN_4 = mux(s1_probe_x12, auto_out_b_bits_source, probe_bits_source) @[Reg.scala 15:16 16:{19,23}]
    skip
    node _GEN_5 = mux(s1_probe_x12, auto_out_b_bits_size, probe_bits_size) @[Reg.scala 15:16 16:{19,23}]
    skip
    node _GEN_6 = mux(s1_probe_x12, auto_out_b_bits_param, probe_bits_param) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    node _s1_valid_masked_T = not(io_cpu_s1_kill) @[DCache.scala 166:37]
    node s1_valid_masked = and(s1_valid, _s1_valid_masked_T) @[DCache.scala 166:34]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg s2_probe_state_state : UInt<2>, gated_clock with :
      reset => (UInt<1>("h0"), s2_probe_state_state) @[Reg.scala 15:16]
    node _T_118 = cat(probe_bits_param, s2_probe_state_state) @[Cat.scala 30:58]
    node _T_175 = eq(UInt<4>("h3"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_171 = eq(UInt<4>("h2"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_167 = eq(UInt<4>("h1"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_163 = eq(UInt<4>("h0"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_159 = eq(UInt<4>("h7"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_155 = eq(UInt<4>("h6"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_151 = eq(UInt<4>("h5"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_147 = eq(UInt<4>("h4"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_143 = eq(UInt<4>("hb"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_139 = eq(UInt<4>("ha"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_135 = eq(UInt<4>("h9"), _T_118) @[Misc.scala 55:20]
    skip
    node _T_131 = eq(UInt<4>("h8"), _T_118) @[Misc.scala 55:20]
    skip
    skip
    skip
    skip
    node _T_148 = mux(_T_147, UInt<1>("h0"), _T_143) @[Misc.scala 37:9]
    node _T_152 = mux(_T_151, UInt<1>("h0"), _T_148) @[Misc.scala 37:9]
    node _T_156 = mux(_T_155, UInt<1>("h0"), _T_152) @[Misc.scala 37:9]
    node _T_160 = or(_T_159, _T_156) @[Misc.scala 37:9]
    node _T_164 = mux(_T_163, UInt<1>("h0"), _T_160) @[Misc.scala 37:9]
    node _T_168 = mux(_T_167, UInt<1>("h0"), _T_164) @[Misc.scala 37:9]
    node _T_172 = mux(_T_171, UInt<1>("h0"), _T_168) @[Misc.scala 37:9]
    node s2_prb_ack_data = or(_T_175, _T_172) @[Misc.scala 37:9]
    node _T_303 = gt(s2_probe_state_state, UInt<2>("h0")) @[Metadata.scala 49:45]
    reg counter_1 : UInt<9>, gated_clock with :
      reset => (UInt<1>("h0"), counter_1) @[Edges.scala 228:27]
    node _last_T_2 = eq(counter_1, UInt<9>("h1")) @[Edges.scala 231:25]
    node _T_308 = eq(release_state, UInt<4>("h1")) @[package.scala 15:47]
    node _T_309 = eq(release_state, UInt<4>("h6")) @[package.scala 15:47]
    node _T_311 = or(_T_308, _T_309) @[package.scala 72:59]
    node _T_310 = eq(release_state, UInt<4>("h9")) @[package.scala 15:47]
    node _T_312 = or(_T_311, _T_310) @[package.scala 72:59]
    skip
    skip
    skip
    node _GEN_323 = mux(_T_310, UInt<3>("h6"), UInt<3>("h7")) @[DCache.scala 846:52 847:23 852:23]
    node _T_307 = eq(release_state, UInt<4>("h2")) @[DCache.scala 841:25]
    skip
    node _T_306 = eq(release_state, UInt<4>("h3")) @[DCache.scala 836:25]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_315 = mux(_T_307, UInt<3>("h5"), UInt<3>("h4")) @[DCache.scala 841:48 842:21]
    node tl_out__c_bits_opcode = mux(_T_312, _GEN_323, _GEN_315) @[DCache.scala 845:102]
    skip
    node beats1_opdata_1 = bits(tl_out__c_bits_opcode, 0, 0) @[Edges.scala 101:36]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node tl_out__c_bits_size = mux(_T_312, UInt<4>("h6"), probe_bits_size) @[DCache.scala 845:102]
    skip
    node _beats1_decode_T_5 = dshl(UInt<12>("hfff"), tl_out__c_bits_size) @[package.scala 234:77]
    node _beats1_decode_T_6 = bits(_beats1_decode_T_5, 11, 0) @[package.scala 234:82]
    node _beats1_decode_T_7 = not(_beats1_decode_T_6) @[package.scala 234:46]
    node beats1_decode_1 = shr(_beats1_decode_T_7, 3) @[Edges.scala 219:59]
    node beats1_1 = mux(beats1_opdata_1, beats1_decode_1, UInt<9>("h0")) @[Edges.scala 220:14]
    node _last_T_3 = eq(beats1_1, UInt<9>("h0")) @[Edges.scala 231:47]
    node c_last = or(_last_T_2, _last_T_3) @[Edges.scala 231:37]
    skip
    node _T_305 = eq(release_state, UInt<4>("h5")) @[DCache.scala 832:25]
    reg s2_release_data_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_release_data_valid) @[DCache.scala 774:34]
    skip
    skip
    skip
    node c_first = eq(counter_1, UInt<9>("h0")) @[Edges.scala 230:25]
    node _bundleOut_0_c_valid_T_3 = and(c_first, release_ack_wait) @[DCache.scala 782:128]
    node _bundleOut_0_c_valid_T_4 = not(_bundleOut_0_c_valid_T_3) @[DCache.scala 782:118]
    node _bundleOut_0_c_valid_T_5 = and(s2_release_data_valid, _bundleOut_0_c_valid_T_4) @[DCache.scala 782:115]
    skip
    node _GEN_264 = mux(s2_prb_ack_data, _bundleOut_0_c_valid_T_5, UInt<1>("h1")) @[DCache.scala 782:18 810:36]
    skip
    node _GEN_285 = mux(s2_probe, _GEN_264, _bundleOut_0_c_valid_T_5) @[DCache.scala 782:18 806:21]
    node _GEN_302 = or(_T_305, _GEN_285) @[DCache.scala 832:47 833:22]
    node tl_out__c_valid = or(_T_306, _GEN_302) @[DCache.scala 836:48 837:22]
    skip
    node _T_297 = and(auto_out_c_ready, tl_out__c_valid) @[Decoupled.scala 40:37]
    node releaseDone = and(c_last, _T_297) @[Edges.scala 232:22]
    node _probeNack_T = not(releaseDone) @[DCache.scala 818:22]
    node _GEN_262 = or(_T_303, _probeNack_T) @[DCache.scala 812:45 818:19]
    node probeNack = or(s2_prb_ack_data, _GEN_262) @[DCache.scala 810:36]
    skip
    skip
    reg s1_req_cmd : UInt<5>, gated_clock with :
      reset => (UInt<1>("h0"), s1_req_cmd) @[Reg.scala 15:16]
    node _s1_read_T = eq(s1_req_cmd, UInt<5>("h0")) @[Consts.scala 81:31]
    node _s1_read_T_1 = eq(s1_req_cmd, UInt<5>("h6")) @[Consts.scala 81:48]
    node _s1_read_T_2 = or(_s1_read_T, _s1_read_T_1) @[Consts.scala 81:41]
    node _s1_read_T_3 = eq(s1_req_cmd, UInt<5>("h7")) @[Consts.scala 81:65]
    node _s1_read_T_4 = or(_s1_read_T_2, _s1_read_T_3) @[Consts.scala 81:58]
    node _s1_read_T_5 = eq(s1_req_cmd, UInt<5>("h4")) @[package.scala 15:47]
    node _s1_read_T_6 = eq(s1_req_cmd, UInt<5>("h9")) @[package.scala 15:47]
    node _s1_read_T_9 = or(_s1_read_T_5, _s1_read_T_6) @[package.scala 72:59]
    node _s1_read_T_7 = eq(s1_req_cmd, UInt<5>("ha")) @[package.scala 15:47]
    node _s1_read_T_10 = or(_s1_read_T_9, _s1_read_T_7) @[package.scala 72:59]
    node _s1_read_T_8 = eq(s1_req_cmd, UInt<5>("hb")) @[package.scala 15:47]
    node _s1_read_T_11 = or(_s1_read_T_10, _s1_read_T_8) @[package.scala 72:59]
    node _s1_read_T_12 = eq(s1_req_cmd, UInt<5>("h8")) @[package.scala 15:47]
    node _s1_read_T_13 = eq(s1_req_cmd, UInt<5>("hc")) @[package.scala 15:47]
    node _s1_read_T_17 = or(_s1_read_T_12, _s1_read_T_13) @[package.scala 72:59]
    node _s1_read_T_14 = eq(s1_req_cmd, UInt<5>("hd")) @[package.scala 15:47]
    node _s1_read_T_18 = or(_s1_read_T_17, _s1_read_T_14) @[package.scala 72:59]
    node _s1_read_T_15 = eq(s1_req_cmd, UInt<5>("he")) @[package.scala 15:47]
    node _s1_read_T_19 = or(_s1_read_T_18, _s1_read_T_15) @[package.scala 72:59]
    node _s1_read_T_16 = eq(s1_req_cmd, UInt<5>("hf")) @[package.scala 15:47]
    node _s1_read_T_20 = or(_s1_read_T_19, _s1_read_T_16) @[package.scala 72:59]
    node _s1_read_T_21 = or(_s1_read_T_11, _s1_read_T_20) @[Consts.scala 79:44]
    node s1_read = or(_s1_read_T_4, _s1_read_T_21) @[Consts.scala 81:75]
    reg s2_req_cmd : UInt<5>, gated_clock with :
      reset => (UInt<1>("h0"), s2_req_cmd) @[DCache.scala 311:19]
    node _s2_write_T = eq(s2_req_cmd, UInt<5>("h1")) @[Consts.scala 82:32]
    node _s2_write_T_1 = eq(s2_req_cmd, UInt<5>("h11")) @[Consts.scala 82:49]
    node _s2_write_T_2 = or(_s2_write_T, _s2_write_T_1) @[Consts.scala 82:42]
    node _s2_write_T_3 = eq(s2_req_cmd, UInt<5>("h7")) @[Consts.scala 82:66]
    node _s2_write_T_4 = or(_s2_write_T_2, _s2_write_T_3) @[Consts.scala 82:59]
    node _s2_write_T_5 = eq(s2_req_cmd, UInt<5>("h4")) @[package.scala 15:47]
    node _s2_write_T_6 = eq(s2_req_cmd, UInt<5>("h9")) @[package.scala 15:47]
    node _s2_write_T_9 = or(_s2_write_T_5, _s2_write_T_6) @[package.scala 72:59]
    node _s2_write_T_7 = eq(s2_req_cmd, UInt<5>("ha")) @[package.scala 15:47]
    node _s2_write_T_10 = or(_s2_write_T_9, _s2_write_T_7) @[package.scala 72:59]
    node _s2_write_T_8 = eq(s2_req_cmd, UInt<5>("hb")) @[package.scala 15:47]
    node _s2_write_T_11 = or(_s2_write_T_10, _s2_write_T_8) @[package.scala 72:59]
    node _s2_write_T_12 = eq(s2_req_cmd, UInt<5>("h8")) @[package.scala 15:47]
    node _s2_write_T_13 = eq(s2_req_cmd, UInt<5>("hc")) @[package.scala 15:47]
    node _s2_write_T_17 = or(_s2_write_T_12, _s2_write_T_13) @[package.scala 72:59]
    node _s2_write_T_14 = eq(s2_req_cmd, UInt<5>("hd")) @[package.scala 15:47]
    node _s2_write_T_18 = or(_s2_write_T_17, _s2_write_T_14) @[package.scala 72:59]
    node _s2_write_T_15 = eq(s2_req_cmd, UInt<5>("he")) @[package.scala 15:47]
    node _s2_write_T_19 = or(_s2_write_T_18, _s2_write_T_15) @[package.scala 72:59]
    node _s2_write_T_16 = eq(s2_req_cmd, UInt<5>("hf")) @[package.scala 15:47]
    node _s2_write_T_20 = or(_s2_write_T_19, _s2_write_T_16) @[package.scala 72:59]
    node _s2_write_T_21 = or(_s2_write_T_11, _s2_write_T_20) @[Consts.scala 79:44]
    node s2_write = or(_s2_write_T_4, _s2_write_T_21) @[Consts.scala 82:76]
    node _pstore1_valid_likely_T = and(s2_valid, s2_write) @[DCache.scala 477:39]
    reg pstore1_held : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), pstore1_held) @[DCache.scala 476:29]
    node pstore1_valid_likely = or(_pstore1_valid_likely_T, pstore1_held) @[DCache.scala 477:51]
    reg pstore1_addr : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), pstore1_addr) @[Reg.scala 15:16]
    node _s1_hazard_T = bits(pstore1_addr, 11, 3) @[DCache.scala 533:9]
    reg s1_req_addr : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), s1_req_addr) @[Reg.scala 15:16]
    node s1_vaddr_hi = shr(s1_req_addr, 12) @[DCache.scala 177:56]
    node s1_vaddr_lo = bits(s1_req_addr, 11, 0) @[DCache.scala 177:78]
    node s1_vaddr = cat(s1_vaddr_hi, s1_vaddr_lo) @[Cat.scala 30:58]
    node _s1_hazard_T_1 = bits(s1_vaddr, 11, 3) @[DCache.scala 533:43]
    node _s1_hazard_T_2 = eq(_s1_hazard_T, _s1_hazard_T_1) @[DCache.scala 533:31]
    node _s1_write_T = eq(s1_req_cmd, UInt<5>("h1")) @[Consts.scala 82:32]
    node _s1_write_T_1 = eq(s1_req_cmd, UInt<5>("h11")) @[Consts.scala 82:49]
    node _s1_write_T_2 = or(_s1_write_T, _s1_write_T_1) @[Consts.scala 82:42]
    skip
    node _s1_write_T_4 = or(_s1_write_T_2, _s1_read_T_3) @[Consts.scala 82:59]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s1_write = or(_s1_write_T_4, _s1_read_T_21) @[Consts.scala 82:76]
    reg pstore1_mask : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore1_mask) @[Reg.scala 15:16]
    node _s1_hazard_T_10 = bits(pstore1_mask, 7, 7) @[package.scala 202:50]
    node s1_hazard_hi_hi_hi = orr(_s1_hazard_T_10) @[DCache.scala 1151:66]
    node _s1_hazard_T_9 = bits(pstore1_mask, 6, 6) @[package.scala 202:50]
    node s1_hazard_hi_hi_lo = orr(_s1_hazard_T_9) @[DCache.scala 1151:66]
    node s1_hazard_hi_hi = cat(s1_hazard_hi_hi_hi, s1_hazard_hi_hi_lo) @[Cat.scala 30:58]
    node _s1_hazard_T_8 = bits(pstore1_mask, 5, 5) @[package.scala 202:50]
    node s1_hazard_hi_lo_hi = orr(_s1_hazard_T_8) @[DCache.scala 1151:66]
    node _s1_hazard_T_7 = bits(pstore1_mask, 4, 4) @[package.scala 202:50]
    node s1_hazard_hi_lo_lo = orr(_s1_hazard_T_7) @[DCache.scala 1151:66]
    node s1_hazard_hi_lo = cat(s1_hazard_hi_lo_hi, s1_hazard_hi_lo_lo) @[Cat.scala 30:58]
    node s1_hazard_hi = cat(s1_hazard_hi_hi, s1_hazard_hi_lo) @[Cat.scala 30:58]
    node _s1_hazard_T_6 = bits(pstore1_mask, 3, 3) @[package.scala 202:50]
    node s1_hazard_lo_hi_hi = orr(_s1_hazard_T_6) @[DCache.scala 1151:66]
    node _s1_hazard_T_5 = bits(pstore1_mask, 2, 2) @[package.scala 202:50]
    node s1_hazard_lo_hi_lo = orr(_s1_hazard_T_5) @[DCache.scala 1151:66]
    node s1_hazard_lo_hi = cat(s1_hazard_lo_hi_hi, s1_hazard_lo_hi_lo) @[Cat.scala 30:58]
    node _s1_hazard_T_4 = bits(pstore1_mask, 1, 1) @[package.scala 202:50]
    node s1_hazard_lo_lo_hi = orr(_s1_hazard_T_4) @[DCache.scala 1151:66]
    node _s1_hazard_T_3 = bits(pstore1_mask, 0, 0) @[package.scala 202:50]
    node s1_hazard_lo_lo_lo = orr(_s1_hazard_T_3) @[DCache.scala 1151:66]
    node s1_hazard_lo_lo = cat(s1_hazard_lo_lo_hi, s1_hazard_lo_lo_lo) @[Cat.scala 30:58]
    node s1_hazard_lo = cat(s1_hazard_lo_hi, s1_hazard_lo_lo) @[Cat.scala 30:58]
    node _s1_hazard_T_11 = cat(s1_hazard_hi, s1_hazard_lo) @[Cat.scala 30:58]
    node s1_hazard_hi_hi_hi_1 = bits(_s1_hazard_T_11, 7, 7) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_lo_1 = bits(_s1_hazard_T_11, 6, 6) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_1 = cat(s1_hazard_hi_hi_hi_1, s1_hazard_hi_hi_lo_1) @[Cat.scala 30:58]
    node s1_hazard_hi_lo_hi_1 = bits(_s1_hazard_T_11, 5, 5) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_lo_1 = bits(_s1_hazard_T_11, 4, 4) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_1 = cat(s1_hazard_hi_lo_hi_1, s1_hazard_hi_lo_lo_1) @[Cat.scala 30:58]
    node s1_hazard_hi_1 = cat(s1_hazard_hi_hi_1, s1_hazard_hi_lo_1) @[Cat.scala 30:58]
    node s1_hazard_lo_hi_hi_1 = bits(_s1_hazard_T_11, 3, 3) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_lo_1 = bits(_s1_hazard_T_11, 2, 2) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_1 = cat(s1_hazard_lo_hi_hi_1, s1_hazard_lo_hi_lo_1) @[Cat.scala 30:58]
    node s1_hazard_lo_lo_hi_1 = bits(_s1_hazard_T_11, 1, 1) @[Bitwise.scala 26:51]
    node s1_hazard_lo_lo_lo_1 = bits(_s1_hazard_T_11, 0, 0) @[Bitwise.scala 26:51]
    node s1_hazard_lo_lo_1 = cat(s1_hazard_lo_lo_hi_1, s1_hazard_lo_lo_lo_1) @[Cat.scala 30:58]
    node s1_hazard_lo_1 = cat(s1_hazard_lo_hi_1, s1_hazard_lo_lo_1) @[Cat.scala 30:58]
    node _s1_hazard_T_12 = cat(s1_hazard_hi_1, s1_hazard_lo_1) @[Cat.scala 30:58]
    node _s1_mask_xwr_upper_T_8 = bits(s1_req_addr, 2, 2) @[AMOALU.scala 17:27]
    node _s1_mask_xwr_upper_T_4 = bits(s1_req_addr, 1, 1) @[AMOALU.scala 17:27]
    node _s1_mask_xwr_upper_T = bits(s1_req_addr, 0, 0) @[AMOALU.scala 17:27]
    skip
    reg s1_req_size : UInt<2>, gated_clock with :
      reset => (UInt<1>("h0"), s1_req_size) @[Reg.scala 15:16]
    skip
    node _s1_mask_xwr_upper_T_2 = geq(s1_req_size, UInt<2>("h1")) @[AMOALU.scala 17:57]
    skip
    node s1_mask_xwr_hi = or(_s1_mask_xwr_upper_T, _s1_mask_xwr_upper_T_2) @[AMOALU.scala 17:46]
    skip
    node s1_mask_xwr_lo = mux(_s1_mask_xwr_upper_T, UInt<1>("h0"), UInt<1>("h1")) @[AMOALU.scala 18:22]
    node _s1_mask_xwr_T = cat(s1_mask_xwr_hi, s1_mask_xwr_lo) @[Cat.scala 30:58]
    node _s1_mask_xwr_upper_T_5 = mux(_s1_mask_xwr_upper_T_4, _s1_mask_xwr_T, UInt<2>("h0")) @[AMOALU.scala 17:22]
    node _s1_mask_xwr_upper_T_6 = geq(s1_req_size, UInt<2>("h2")) @[AMOALU.scala 17:57]
    node _s1_mask_xwr_upper_T_7 = mux(_s1_mask_xwr_upper_T_6, UInt<2>("h3"), UInt<2>("h0")) @[AMOALU.scala 17:51]
    node s1_mask_xwr_hi_1 = or(_s1_mask_xwr_upper_T_5, _s1_mask_xwr_upper_T_7) @[AMOALU.scala 17:46]
    skip
    node s1_mask_xwr_lo_1 = mux(_s1_mask_xwr_upper_T_4, UInt<2>("h0"), _s1_mask_xwr_T) @[AMOALU.scala 18:22]
    node _s1_mask_xwr_T_1 = cat(s1_mask_xwr_hi_1, s1_mask_xwr_lo_1) @[Cat.scala 30:58]
    node _s1_mask_xwr_upper_T_9 = mux(_s1_mask_xwr_upper_T_8, _s1_mask_xwr_T_1, UInt<4>("h0")) @[AMOALU.scala 17:22]
    node _s1_mask_xwr_upper_T_10 = geq(s1_req_size, UInt<2>("h3")) @[AMOALU.scala 17:57]
    node _s1_mask_xwr_upper_T_11 = mux(_s1_mask_xwr_upper_T_10, UInt<4>("hf"), UInt<4>("h0")) @[AMOALU.scala 17:51]
    node s1_mask_xwr_hi_2 = or(_s1_mask_xwr_upper_T_9, _s1_mask_xwr_upper_T_11) @[AMOALU.scala 17:46]
    skip
    node s1_mask_xwr_lo_2 = mux(_s1_mask_xwr_upper_T_8, UInt<4>("h0"), _s1_mask_xwr_T_1) @[AMOALU.scala 18:22]
    node s1_mask_xwr = cat(s1_mask_xwr_hi_2, s1_mask_xwr_lo_2) @[Cat.scala 30:58]
    node _s1_hazard_T_20 = bits(s1_mask_xwr, 7, 7) @[package.scala 202:50]
    node s1_hazard_hi_hi_hi_2 = orr(_s1_hazard_T_20) @[DCache.scala 1151:66]
    node _s1_hazard_T_19 = bits(s1_mask_xwr, 6, 6) @[package.scala 202:50]
    node s1_hazard_hi_hi_lo_2 = orr(_s1_hazard_T_19) @[DCache.scala 1151:66]
    node s1_hazard_hi_hi_2 = cat(s1_hazard_hi_hi_hi_2, s1_hazard_hi_hi_lo_2) @[Cat.scala 30:58]
    node _s1_hazard_T_18 = bits(s1_mask_xwr, 5, 5) @[package.scala 202:50]
    node s1_hazard_hi_lo_hi_2 = orr(_s1_hazard_T_18) @[DCache.scala 1151:66]
    node _s1_hazard_T_17 = bits(s1_mask_xwr, 4, 4) @[package.scala 202:50]
    node s1_hazard_hi_lo_lo_2 = orr(_s1_hazard_T_17) @[DCache.scala 1151:66]
    node s1_hazard_hi_lo_2 = cat(s1_hazard_hi_lo_hi_2, s1_hazard_hi_lo_lo_2) @[Cat.scala 30:58]
    node s1_hazard_hi_2 = cat(s1_hazard_hi_hi_2, s1_hazard_hi_lo_2) @[Cat.scala 30:58]
    node _s1_hazard_T_16 = bits(s1_mask_xwr, 3, 3) @[package.scala 202:50]
    node s1_hazard_lo_hi_hi_2 = orr(_s1_hazard_T_16) @[DCache.scala 1151:66]
    node _s1_hazard_T_15 = bits(s1_mask_xwr, 2, 2) @[package.scala 202:50]
    node s1_hazard_lo_hi_lo_2 = orr(_s1_hazard_T_15) @[DCache.scala 1151:66]
    node s1_hazard_lo_hi_2 = cat(s1_hazard_lo_hi_hi_2, s1_hazard_lo_hi_lo_2) @[Cat.scala 30:58]
    node _s1_hazard_T_14 = bits(s1_mask_xwr, 1, 1) @[package.scala 202:50]
    node s1_hazard_lo_lo_hi_2 = orr(_s1_hazard_T_14) @[DCache.scala 1151:66]
    node _s1_hazard_T_13 = bits(s1_mask_xwr, 0, 0) @[package.scala 202:50]
    node s1_hazard_lo_lo_lo_2 = orr(_s1_hazard_T_13) @[DCache.scala 1151:66]
    node s1_hazard_lo_lo_2 = cat(s1_hazard_lo_lo_hi_2, s1_hazard_lo_lo_lo_2) @[Cat.scala 30:58]
    node s1_hazard_lo_2 = cat(s1_hazard_lo_hi_2, s1_hazard_lo_lo_2) @[Cat.scala 30:58]
    node _s1_hazard_T_21 = cat(s1_hazard_hi_2, s1_hazard_lo_2) @[Cat.scala 30:58]
    node s1_hazard_hi_hi_hi_3 = bits(_s1_hazard_T_21, 7, 7) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_lo_3 = bits(_s1_hazard_T_21, 6, 6) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_3 = cat(s1_hazard_hi_hi_hi_3, s1_hazard_hi_hi_lo_3) @[Cat.scala 30:58]
    node s1_hazard_hi_lo_hi_3 = bits(_s1_hazard_T_21, 5, 5) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_lo_3 = bits(_s1_hazard_T_21, 4, 4) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_3 = cat(s1_hazard_hi_lo_hi_3, s1_hazard_hi_lo_lo_3) @[Cat.scala 30:58]
    node s1_hazard_hi_3 = cat(s1_hazard_hi_hi_3, s1_hazard_hi_lo_3) @[Cat.scala 30:58]
    node s1_hazard_lo_hi_hi_3 = bits(_s1_hazard_T_21, 3, 3) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_lo_3 = bits(_s1_hazard_T_21, 2, 2) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_3 = cat(s1_hazard_lo_hi_hi_3, s1_hazard_lo_hi_lo_3) @[Cat.scala 30:58]
    node s1_hazard_lo_lo_hi_3 = bits(_s1_hazard_T_21, 1, 1) @[Bitwise.scala 26:51]
    node s1_hazard_lo_lo_lo_3 = bits(_s1_hazard_T_21, 0, 0) @[Bitwise.scala 26:51]
    node s1_hazard_lo_lo_3 = cat(s1_hazard_lo_lo_hi_3, s1_hazard_lo_lo_lo_3) @[Cat.scala 30:58]
    node s1_hazard_lo_3 = cat(s1_hazard_lo_hi_3, s1_hazard_lo_lo_3) @[Cat.scala 30:58]
    node _s1_hazard_T_22 = cat(s1_hazard_hi_3, s1_hazard_lo_3) @[Cat.scala 30:58]
    node _s1_hazard_T_23 = and(_s1_hazard_T_12, _s1_hazard_T_22) @[DCache.scala 534:38]
    node _s1_hazard_T_24 = orr(_s1_hazard_T_23) @[DCache.scala 534:66]
    node _s1_hazard_T_25 = and(pstore1_mask, s1_mask_xwr) @[DCache.scala 534:77]
    node _s1_hazard_T_26 = orr(_s1_hazard_T_25) @[DCache.scala 534:92]
    node _s1_hazard_T_27 = mux(s1_write, _s1_hazard_T_24, _s1_hazard_T_26) @[DCache.scala 534:8]
    node _s1_hazard_T_28 = and(_s1_hazard_T_2, _s1_hazard_T_27) @[DCache.scala 533:65]
    node _s1_hazard_T_29 = and(pstore1_valid_likely, _s1_hazard_T_28) @[DCache.scala 536:27]
    reg pstore2_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_valid) @[DCache.scala 473:30]
    reg pstore2_addr : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_addr) @[Reg.scala 15:16]
    node _s1_hazard_T_30 = bits(pstore2_addr, 11, 3) @[DCache.scala 533:9]
    skip
    node _s1_hazard_T_32 = eq(_s1_hazard_T_30, _s1_hazard_T_1) @[DCache.scala 533:31]
    reg mask : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), mask) @[DCache.scala 503:19]
    node _s1_hazard_T_40 = bits(mask, 7, 7) @[package.scala 202:50]
    node s1_hazard_hi_hi_hi_4 = orr(_s1_hazard_T_40) @[DCache.scala 1151:66]
    node _s1_hazard_T_39 = bits(mask, 6, 6) @[package.scala 202:50]
    node s1_hazard_hi_hi_lo_4 = orr(_s1_hazard_T_39) @[DCache.scala 1151:66]
    node s1_hazard_hi_hi_4 = cat(s1_hazard_hi_hi_hi_4, s1_hazard_hi_hi_lo_4) @[Cat.scala 30:58]
    node _s1_hazard_T_38 = bits(mask, 5, 5) @[package.scala 202:50]
    node s1_hazard_hi_lo_hi_4 = orr(_s1_hazard_T_38) @[DCache.scala 1151:66]
    node _s1_hazard_T_37 = bits(mask, 4, 4) @[package.scala 202:50]
    node s1_hazard_hi_lo_lo_4 = orr(_s1_hazard_T_37) @[DCache.scala 1151:66]
    node s1_hazard_hi_lo_4 = cat(s1_hazard_hi_lo_hi_4, s1_hazard_hi_lo_lo_4) @[Cat.scala 30:58]
    node s1_hazard_hi_4 = cat(s1_hazard_hi_hi_4, s1_hazard_hi_lo_4) @[Cat.scala 30:58]
    node _s1_hazard_T_36 = bits(mask, 3, 3) @[package.scala 202:50]
    node s1_hazard_lo_hi_hi_4 = orr(_s1_hazard_T_36) @[DCache.scala 1151:66]
    node _s1_hazard_T_35 = bits(mask, 2, 2) @[package.scala 202:50]
    node s1_hazard_lo_hi_lo_4 = orr(_s1_hazard_T_35) @[DCache.scala 1151:66]
    node s1_hazard_lo_hi_4 = cat(s1_hazard_lo_hi_hi_4, s1_hazard_lo_hi_lo_4) @[Cat.scala 30:58]
    node _s1_hazard_T_34 = bits(mask, 1, 1) @[package.scala 202:50]
    node s1_hazard_lo_lo_hi_4 = orr(_s1_hazard_T_34) @[DCache.scala 1151:66]
    node _s1_hazard_T_33 = bits(mask, 0, 0) @[package.scala 202:50]
    node s1_hazard_lo_lo_lo_4 = orr(_s1_hazard_T_33) @[DCache.scala 1151:66]
    node s1_hazard_lo_lo_4 = cat(s1_hazard_lo_lo_hi_4, s1_hazard_lo_lo_lo_4) @[Cat.scala 30:58]
    node s1_hazard_lo_4 = cat(s1_hazard_lo_hi_4, s1_hazard_lo_lo_4) @[Cat.scala 30:58]
    node _s1_hazard_T_41 = cat(s1_hazard_hi_4, s1_hazard_lo_4) @[Cat.scala 30:58]
    node s1_hazard_hi_hi_hi_5 = bits(_s1_hazard_T_41, 7, 7) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_lo_5 = bits(_s1_hazard_T_41, 6, 6) @[Bitwise.scala 26:51]
    node s1_hazard_hi_hi_5 = cat(s1_hazard_hi_hi_hi_5, s1_hazard_hi_hi_lo_5) @[Cat.scala 30:58]
    node s1_hazard_hi_lo_hi_5 = bits(_s1_hazard_T_41, 5, 5) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_lo_5 = bits(_s1_hazard_T_41, 4, 4) @[Bitwise.scala 26:51]
    node s1_hazard_hi_lo_5 = cat(s1_hazard_hi_lo_hi_5, s1_hazard_hi_lo_lo_5) @[Cat.scala 30:58]
    node s1_hazard_hi_5 = cat(s1_hazard_hi_hi_5, s1_hazard_hi_lo_5) @[Cat.scala 30:58]
    node s1_hazard_lo_hi_hi_5 = bits(_s1_hazard_T_41, 3, 3) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_lo_5 = bits(_s1_hazard_T_41, 2, 2) @[Bitwise.scala 26:51]
    node s1_hazard_lo_hi_5 = cat(s1_hazard_lo_hi_hi_5, s1_hazard_lo_hi_lo_5) @[Cat.scala 30:58]
    node s1_hazard_lo_lo_hi_5 = bits(_s1_hazard_T_41, 1, 1) @[Bitwise.scala 26:51]
    node s1_hazard_lo_lo_lo_5 = bits(_s1_hazard_T_41, 0, 0) @[Bitwise.scala 26:51]
    node s1_hazard_lo_lo_5 = cat(s1_hazard_lo_lo_hi_5, s1_hazard_lo_lo_lo_5) @[Cat.scala 30:58]
    node s1_hazard_lo_5 = cat(s1_hazard_lo_hi_5, s1_hazard_lo_lo_5) @[Cat.scala 30:58]
    node _s1_hazard_T_42 = cat(s1_hazard_hi_5, s1_hazard_lo_5) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s1_hazard_T_53 = and(_s1_hazard_T_42, _s1_hazard_T_22) @[DCache.scala 534:38]
    node _s1_hazard_T_54 = orr(_s1_hazard_T_53) @[DCache.scala 534:66]
    node _s1_hazard_T_55 = and(mask, s1_mask_xwr) @[DCache.scala 534:77]
    node _s1_hazard_T_56 = orr(_s1_hazard_T_55) @[DCache.scala 534:92]
    node _s1_hazard_T_57 = mux(s1_write, _s1_hazard_T_54, _s1_hazard_T_56) @[DCache.scala 534:8]
    node _s1_hazard_T_58 = and(_s1_hazard_T_32, _s1_hazard_T_57) @[DCache.scala 533:65]
    node _s1_hazard_T_59 = and(pstore2_valid, _s1_hazard_T_58) @[DCache.scala 537:21]
    node s1_hazard = or(_s1_hazard_T_29, _s1_hazard_T_59) @[DCache.scala 536:69]
    node s1_raw_hazard = and(s1_read, s1_hazard) @[DCache.scala 538:31]
    node _T_262 = and(s1_valid, s1_raw_hazard) @[DCache.scala 543:18]
    node s2_valid_no_xcpt_hi_hi = cat(io_cpu_s2_xcpt_ma_ld, io_cpu_s2_xcpt_ma_st) @[DCache.scala 304:54]
    node s2_valid_no_xcpt_hi = cat(s2_valid_no_xcpt_hi_hi, io_cpu_s2_xcpt_pf_ld) @[DCache.scala 304:54]
    node s2_valid_no_xcpt_lo_hi = cat(io_cpu_s2_xcpt_pf_st, io_cpu_s2_xcpt_ae_ld) @[DCache.scala 304:54]
    node s2_valid_no_xcpt_lo = cat(s2_valid_no_xcpt_lo_hi, io_cpu_s2_xcpt_ae_st) @[DCache.scala 304:54]
    node _s2_valid_no_xcpt_T = cat(s2_valid_no_xcpt_hi, s2_valid_no_xcpt_lo) @[DCache.scala 304:54]
    node _s2_valid_no_xcpt_T_1 = orr(_s2_valid_no_xcpt_T) @[DCache.scala 304:61]
    node _s2_valid_no_xcpt_T_2 = not(_s2_valid_no_xcpt_T_1) @[DCache.scala 304:38]
    node s2_valid_no_xcpt = and(s2_valid, _s2_valid_no_xcpt_T_2) @[DCache.scala 304:35]
    reg s2_not_nacked_in_s1 : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_not_nacked_in_s1) @[DCache.scala 307:36]
    node s2_valid_masked = and(s2_valid_no_xcpt, s2_not_nacked_in_s1) @[DCache.scala 309:42]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _c_cat_T_45 = eq(s2_req_cmd, UInt<5>("h3")) @[Consts.scala 83:54]
    node _c_cat_T_46 = or(s2_write, _c_cat_T_45) @[Consts.scala 83:47]
    node _c_cat_T_47 = eq(s2_req_cmd, UInt<5>("h6")) @[Consts.scala 83:71]
    node c_cat_lo = or(_c_cat_T_46, _c_cat_T_47) @[Consts.scala 83:64]
    node hi_1 = cat(s2_write, c_cat_lo) @[Cat.scala 30:58]
    reg s2_hit_state_state : UInt<2>, gated_clock with :
      reset => (UInt<1>("h0"), s2_hit_state_state) @[Reg.scala 15:16]
    node _T_71 = cat(hi_1, s2_hit_state_state) @[Cat.scala 30:58]
    node _T_117 = eq(UInt<4>("h3"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_114 = eq(UInt<4>("h2"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_111 = eq(UInt<4>("h1"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_108 = eq(UInt<4>("h7"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_105 = eq(UInt<4>("h6"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_102 = eq(UInt<4>("hf"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_99 = eq(UInt<4>("he"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_96 = eq(UInt<4>("h0"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_93 = eq(UInt<4>("h5"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_90 = eq(UInt<4>("h4"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_87 = eq(UInt<4>("hd"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    node _T_84 = eq(UInt<4>("hc"), _T_71) @[Misc.scala 48:20]
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_103 = or(_T_102, _T_99) @[Misc.scala 34:9]
    node _T_106 = or(_T_105, _T_103) @[Misc.scala 34:9]
    node _T_109 = or(_T_108, _T_106) @[Misc.scala 34:9]
    node _T_112 = or(_T_111, _T_109) @[Misc.scala 34:9]
    node _T_115 = or(_T_114, _T_112) @[Misc.scala 34:9]
    node s2_hit = or(_T_117, _T_115) @[Misc.scala 34:9]
    node s2_valid_hit_maybe_flush_pre_data_ecc_and_waw = and(s2_valid_masked, s2_hit) @[DCache.scala 369:89]
    node _s2_read_T = eq(s2_req_cmd, UInt<5>("h0")) @[Consts.scala 81:31]
    skip
    node _s2_read_T_2 = or(_s2_read_T, _c_cat_T_47) @[Consts.scala 81:41]
    skip
    node _s2_read_T_4 = or(_s2_read_T_2, _s2_write_T_3) @[Consts.scala 81:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s2_read = or(_s2_read_T_4, _s2_write_T_21) @[Consts.scala 81:75]
    node s2_readwrite = or(s2_read, s2_write) @[DCache.scala 326:30]
    node s2_valid_hit_pre_data_ecc_and_waw = and(s2_valid_hit_maybe_flush_pre_data_ecc_and_waw, s2_readwrite) @[DCache.scala 390:89]
    skip
    skip
    node _T_86 = mux(_T_84, UInt<2>("h1"), UInt<2>("h0")) @[Misc.scala 34:36]
    node _T_89 = mux(_T_87, UInt<2>("h2"), _T_86) @[Misc.scala 34:36]
    node _T_92 = mux(_T_90, UInt<2>("h1"), _T_89) @[Misc.scala 34:36]
    node _T_95 = mux(_T_93, UInt<2>("h2"), _T_92) @[Misc.scala 34:36]
    node _T_98 = mux(_T_96, UInt<2>("h0"), _T_95) @[Misc.scala 34:36]
    node _T_101 = mux(_T_99, UInt<2>("h3"), _T_98) @[Misc.scala 34:36]
    node _T_104 = mux(_T_102, UInt<2>("h3"), _T_101) @[Misc.scala 34:36]
    node _T_107 = mux(_T_105, UInt<2>("h2"), _T_104) @[Misc.scala 34:36]
    node _T_110 = mux(_T_108, UInt<2>("h3"), _T_107) @[Misc.scala 34:36]
    node _T_113 = mux(_T_111, UInt<2>("h1"), _T_110) @[Misc.scala 34:36]
    node _T_116 = mux(_T_114, UInt<2>("h2"), _T_113) @[Misc.scala 34:36]
    node s2_grow_param = mux(_T_117, UInt<2>("h3"), _T_116) @[Misc.scala 34:36]
    skip
    node _s2_update_meta_T = eq(s2_hit_state_state, s2_grow_param) @[Metadata.scala 45:46]
    node s2_update_meta = not(_s2_update_meta_T) @[Metadata.scala 46:40]
    node _T_241 = and(s2_valid_hit_pre_data_ecc_and_waw, s2_update_meta) @[DCache.scala 418:62]
    node _T_242 = or(io_cpu_s2_nack, _T_241) @[DCache.scala 418:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s1_readwrite = or(s1_read, s1_write) @[DCache.scala 190:30]
    node _s1_flush_line_T = eq(s1_req_cmd, UInt<5>("h5")) @[DCache.scala 192:34]
    node _s1_flush_line_T_1 = bits(s1_req_size, 0, 0) @[DCache.scala 192:64]
    node s1_flush_line = and(_s1_flush_line_T, _s1_flush_line_T_1) @[DCache.scala 192:50]
    node _s1_cmd_uses_tlb_T = or(s1_readwrite, s1_flush_line) @[DCache.scala 249:38]
    node _s1_cmd_uses_tlb_T_1 = eq(s1_req_cmd, UInt<5>("h17")) @[DCache.scala 249:69]
    node s1_cmd_uses_tlb = or(_s1_cmd_uses_tlb_T, _s1_cmd_uses_tlb_T_1) @[DCache.scala 249:55]
    node _T_13 = and(s1_valid, s1_cmd_uses_tlb) @[DCache.scala 255:39]
    node _T_14 = and(_T_13, tlb.io_resp_miss) @[DCache.scala 255:58]
    skip
    skip
    node _GEN_117 = or(_T_242, _T_14) @[DCache.scala 418:{82,92}]
    node _GEN_141 = or(_T_262, _GEN_117) @[DCache.scala 543:{36,46}]
    node _GEN_283 = or(probeNack, _GEN_141) @[DCache.scala 821:{24,34}]
    node s1_nack = mux(s2_probe, _GEN_283, _GEN_141) @[DCache.scala 806:21]
    skip
    node _s1_valid_not_nacked_T = not(s1_nack) @[DCache.scala 167:41]
    node s1_valid_not_nacked = and(s1_valid, _s1_valid_not_nacked_T) @[DCache.scala 167:38]
    skip
    skip
    node _s0_clk_en_T = not(metaArb.io_out_bits_write) @[DCache.scala 170:43]
    node s0_clk_en = and(metaArb.io_out_valid, _s0_clk_en_T) @[DCache.scala 170:40]
    node s0_req_addr_hi = shr(metaArb.io_out_bits_addr, 6) @[DCache.scala 173:47]
    node s0_req_addr_lo = bits(io_cpu_req_bits_addr, 5, 0) @[DCache.scala 173:84]
    node s0_req_addr = cat(s0_req_addr_hi, s0_req_addr_lo) @[Cat.scala 30:58]
    node _T = not(metaArb.io_in_7_ready) @[DCache.scala 175:9]
    node s0_req_phys = or(_T, io_cpu_req_bits_phys) @[DCache.scala 175:{34,48}]
    reg s1_req_tag : UInt<7>, gated_clock with :
      reset => (UInt<1>("h0"), s1_req_tag) @[Reg.scala 15:16]
    reg s1_req_signed : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_req_signed) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg s1_tlb_req_vaddr : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), s1_tlb_req_vaddr) @[Reg.scala 15:16]
    reg s1_tlb_req_passthrough : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_tlb_req_passthrough) @[Reg.scala 15:16]
    reg s1_tlb_req_size : UInt<2>, gated_clock with :
      reset => (UInt<1>("h0"), s1_tlb_req_size) @[Reg.scala 15:16]
    reg s1_tlb_req_cmd : UInt<5>, gated_clock with :
      reset => (UInt<1>("h0"), s1_tlb_req_cmd) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s1_sfence = eq(s1_req_cmd, UInt<5>("h14")) @[DCache.scala 191:30]
    reg s1_flush_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_flush_valid) @[DCache.scala 193:27]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg cached_grant_wait : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), cached_grant_wait) @[DCache.scala 201:30]
    reg resetting : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), resetting) @[DCache.scala 202:26]
    reg flushCounter : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), flushCounter) @[DCache.scala 203:25]
    reg refill_way : UInt<4>, gated_clock with :
      reset => (UInt<1>("h0"), refill_way) @[DCache.scala 208:23]
    skip
    skip
    node inWriteback = or(_T_308, _T_307) @[package.scala 72:59]
    node _io_cpu_req_ready_T = eq(release_state, UInt<4>("h0")) @[DCache.scala 212:38]
    node _io_cpu_req_ready_T_1 = not(cached_grant_wait) @[DCache.scala 212:54]
    node _io_cpu_req_ready_T_2 = and(_io_cpu_req_ready_T, _io_cpu_req_ready_T_1) @[DCache.scala 212:51]
    skip
    node _io_cpu_req_ready_T_4 = and(_io_cpu_req_ready_T_2, _s1_valid_not_nacked_T) @[DCache.scala 212:73]
    reg uncachedInFlight_0 : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), uncachedInFlight_0) @[DCache.scala 215:33]
    reg uncachedReqs_0_addr : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), uncachedReqs_0_addr) @[DCache.scala 216:25]
    reg uncachedReqs_0_tag : UInt<7>, gated_clock with :
      reset => (UInt<1>("h0"), uncachedReqs_0_tag) @[DCache.scala 216:25]
    skip
    reg uncachedReqs_0_size : UInt<2>, gated_clock with :
      reset => (UInt<1>("h0"), uncachedReqs_0_size) @[DCache.scala 216:25]
    reg uncachedReqs_0_signed : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), uncachedReqs_0_signed) @[DCache.scala 216:25]
    skip
    skip
    skip
    skip
    skip
    skip
    node _s0_read_T = eq(io_cpu_req_bits_cmd, UInt<5>("h0")) @[Consts.scala 81:31]
    node _s0_read_T_1 = eq(io_cpu_req_bits_cmd, UInt<5>("h6")) @[Consts.scala 81:48]
    node _s0_read_T_2 = or(_s0_read_T, _s0_read_T_1) @[Consts.scala 81:41]
    node _s0_read_T_3 = eq(io_cpu_req_bits_cmd, UInt<5>("h7")) @[Consts.scala 81:65]
    node _s0_read_T_4 = or(_s0_read_T_2, _s0_read_T_3) @[Consts.scala 81:58]
    node _s0_read_T_5 = eq(io_cpu_req_bits_cmd, UInt<5>("h4")) @[package.scala 15:47]
    node _s0_read_T_6 = eq(io_cpu_req_bits_cmd, UInt<5>("h9")) @[package.scala 15:47]
    node _s0_read_T_7 = eq(io_cpu_req_bits_cmd, UInt<5>("ha")) @[package.scala 15:47]
    node _s0_read_T_8 = eq(io_cpu_req_bits_cmd, UInt<5>("hb")) @[package.scala 15:47]
    node _s0_read_T_9 = or(_s0_read_T_5, _s0_read_T_6) @[package.scala 72:59]
    node _s0_read_T_10 = or(_s0_read_T_9, _s0_read_T_7) @[package.scala 72:59]
    node _s0_read_T_11 = or(_s0_read_T_10, _s0_read_T_8) @[package.scala 72:59]
    node _s0_read_T_12 = eq(io_cpu_req_bits_cmd, UInt<5>("h8")) @[package.scala 15:47]
    node _s0_read_T_13 = eq(io_cpu_req_bits_cmd, UInt<5>("hc")) @[package.scala 15:47]
    node _s0_read_T_14 = eq(io_cpu_req_bits_cmd, UInt<5>("hd")) @[package.scala 15:47]
    node _s0_read_T_15 = eq(io_cpu_req_bits_cmd, UInt<5>("he")) @[package.scala 15:47]
    node _s0_read_T_16 = eq(io_cpu_req_bits_cmd, UInt<5>("hf")) @[package.scala 15:47]
    node _s0_read_T_17 = or(_s0_read_T_12, _s0_read_T_13) @[package.scala 72:59]
    node _s0_read_T_18 = or(_s0_read_T_17, _s0_read_T_14) @[package.scala 72:59]
    node _s0_read_T_19 = or(_s0_read_T_18, _s0_read_T_15) @[package.scala 72:59]
    node _s0_read_T_20 = or(_s0_read_T_19, _s0_read_T_16) @[package.scala 72:59]
    node _s0_read_T_21 = or(_s0_read_T_11, _s0_read_T_20) @[Consts.scala 79:44]
    node s0_read = or(_s0_read_T_4, _s0_read_T_21) @[Consts.scala 81:75]
    node _dataArb_io_in_3_valid_res_T = eq(io_cpu_req_bits_cmd, UInt<5>("h1")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_res_T_1 = eq(io_cpu_req_bits_cmd, UInt<5>("h3")) @[package.scala 15:47]
    node _dataArb_io_in_3_valid_res_T_2 = or(_dataArb_io_in_3_valid_res_T, _dataArb_io_in_3_valid_res_T_1) @[package.scala 72:59]
    node res = not(_dataArb_io_in_3_valid_res_T_2) @[DCache.scala 1155:15]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _dataArb_io_in_3_valid_T_24 = eq(io_cpu_req_bits_cmd, UInt<5>("h11")) @[Consts.scala 82:49]
    node _dataArb_io_in_3_valid_T_25 = or(_dataArb_io_in_3_valid_res_T, _dataArb_io_in_3_valid_T_24) @[Consts.scala 82:42]
    skip
    node _dataArb_io_in_3_valid_T_27 = or(_dataArb_io_in_3_valid_T_25, _s0_read_T_3) @[Consts.scala 82:59]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _dataArb_io_in_3_valid_T_45 = or(_dataArb_io_in_3_valid_T_27, _s0_read_T_21) @[Consts.scala 82:76]
    skip
    skip
    skip
    node _dataArb_io_in_3_valid_T_49 = and(_dataArb_io_in_3_valid_T_45, _dataArb_io_in_3_valid_T_24) @[DCache.scala 1161:23]
    node _dataArb_io_in_3_valid_T_50 = or(s0_read, _dataArb_io_in_3_valid_T_49) @[DCache.scala 1160:21]
    node _dataArb_io_in_3_valid_T_51 = not(_dataArb_io_in_3_valid_T_50) @[DCache.scala 1156:12]
    node _dataArb_io_in_3_valid_T_52 = or(_dataArb_io_in_3_valid_T_51, res) @[DCache.scala 1156:28]
    skip
    node _dataArb_io_in_3_valid_T_54 = or(_dataArb_io_in_3_valid_T_52, reset) @[DCache.scala 1156:11]
    node _dataArb_io_in_3_valid_T_55 = not(_dataArb_io_in_3_valid_T_54) @[DCache.scala 1156:11]
    node _dataArb_io_in_3_valid_T_56 = and(io_cpu_req_valid, res) @[DCache.scala 221:46]
    node dataArb_io_in_3_bits_addr_hi = shr(io_cpu_req_bits_addr, 12) @[DCache.scala 224:89]
    node dataArb_io_in_3_bits_addr_lo = bits(io_cpu_req_bits_addr, 11, 0) @[DCache.scala 224:120]
    node _dataArb_io_in_3_bits_addr_T = cat(dataArb_io_in_3_bits_addr_hi, dataArb_io_in_3_bits_addr_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _T_3 = not(dataArb.io_in_3_ready) @[DCache.scala 237:9]
    node _T_4 = and(_T_3, s0_read) @[DCache.scala 237:33]
    node _GEN_28 = mux(_T_4, UInt<1>("h0"), _io_cpu_req_ready_T_4) @[DCache.scala 212:20 237:{45,64}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s1_did_read_T_51 = and(io_cpu_req_valid, _dataArb_io_in_3_valid_T_50) @[DCache.scala 238:75]
    node _s1_did_read_T_52 = and(dataArb.io_in_3_ready, _s1_did_read_T_51) @[DCache.scala 238:54]
    reg s1_did_read : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_did_read) @[Reg.scala 15:16]
    skip
    reg s1_read_mask : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_read_mask) @[Reg.scala 15:16]
    skip
    skip
    skip
    node _GEN_31 = mux(_T, UInt<1>("h0"), _GEN_28) @[DCache.scala 246:{34,53}]
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_6 = not(tlb.io_req_ready) @[DCache.scala 254:9]
    node _T_7 = not(tlb.io_ptw_resp_valid) @[DCache.scala 254:30]
    node _T_8 = and(_T_6, _T_7) @[DCache.scala 254:27]
    node _T_9 = not(io_cpu_req_bits_phys) @[DCache.scala 254:56]
    node _T_10 = and(_T_8, _T_9) @[DCache.scala 254:53]
    node _GEN_32 = mux(_T_10, UInt<1>("h0"), _GEN_31) @[DCache.scala 254:{79,98}]
    skip
    skip
    skip
    skip
    skip
    skip
    node s1_paddr_hi = shr(tlb.io_resp_paddr, 12) @[DCache.scala 270:99]
    skip
    skip
    node s1_paddr = cat(s1_paddr_hi, s1_vaddr_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _WIRE_2 = tag_array_0.s1_meta.data
    node s1_meta_uncorrected_0_tag = bits(_WIRE_2, 19, 0) @[DCache.scala 287:80]
    node s1_meta_uncorrected_0_coh_state = bits(_WIRE_2, 21, 20) @[DCache.scala 287:80]
    node _WIRE_3 = tag_array_1.s1_meta.data
    node s1_meta_uncorrected_1_tag = bits(_WIRE_3, 19, 0) @[DCache.scala 287:80]
    node s1_meta_uncorrected_1_coh_state = bits(_WIRE_3, 21, 20) @[DCache.scala 287:80]
    node _WIRE_4 = tag_array_2.s1_meta.data
    node s1_meta_uncorrected_2_tag = bits(_WIRE_4, 19, 0) @[DCache.scala 287:80]
    node s1_meta_uncorrected_2_coh_state = bits(_WIRE_4, 21, 20) @[DCache.scala 287:80]
    node _WIRE_5 = tag_array_3.s1_meta.data
    node s1_meta_uncorrected_3_tag = bits(_WIRE_5, 19, 0) @[DCache.scala 287:80]
    node s1_meta_uncorrected_3_coh_state = bits(_WIRE_5, 21, 20) @[DCache.scala 287:80]
    node s1_tag = shr(s1_paddr, 12) @[DCache.scala 288:29]
    skip
    node _T_32 = gt(s1_meta_uncorrected_0_coh_state, UInt<2>("h0")) @[Metadata.scala 49:45]
    skip
    node _T_33 = eq(s1_meta_uncorrected_0_tag, s1_tag) @[DCache.scala 289:83]
    node lo_lo = and(_T_32, _T_33) @[DCache.scala 289:74]
    skip
    node _T_34 = gt(s1_meta_uncorrected_1_coh_state, UInt<2>("h0")) @[Metadata.scala 49:45]
    skip
    node _T_35 = eq(s1_meta_uncorrected_1_tag, s1_tag) @[DCache.scala 289:83]
    node lo_hi = and(_T_34, _T_35) @[DCache.scala 289:74]
    skip
    node _T_36 = gt(s1_meta_uncorrected_2_coh_state, UInt<2>("h0")) @[Metadata.scala 49:45]
    skip
    node _T_37 = eq(s1_meta_uncorrected_2_tag, s1_tag) @[DCache.scala 289:83]
    node hi_lo = and(_T_36, _T_37) @[DCache.scala 289:74]
    skip
    node _T_38 = gt(s1_meta_uncorrected_3_coh_state, UInt<2>("h0")) @[Metadata.scala 49:45]
    skip
    node _T_39 = eq(s1_meta_uncorrected_3_tag, s1_tag) @[DCache.scala 289:83]
    node hi_hi = and(_T_38, _T_39) @[DCache.scala 289:74]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node s1_meta_hit_way = cat(hi, lo) @[Cat.scala 30:58]
    skip
    node _T_41 = not(s1_flush_valid) @[DCache.scala 291:62]
    node _T_42 = and(_T_33, _T_41) @[DCache.scala 291:59]
    node _T_43 = mux(_T_42, s1_meta_uncorrected_0_coh_state, UInt<2>("h0")) @[DCache.scala 291:41]
    skip
    skip
    node _T_46 = and(_T_35, _T_41) @[DCache.scala 291:59]
    node _T_47 = mux(_T_46, s1_meta_uncorrected_1_coh_state, UInt<2>("h0")) @[DCache.scala 291:41]
    skip
    skip
    node _T_50 = and(_T_37, _T_41) @[DCache.scala 291:59]
    node _T_51 = mux(_T_50, s1_meta_uncorrected_2_coh_state, UInt<2>("h0")) @[DCache.scala 291:41]
    skip
    skip
    node _T_54 = and(_T_39, _T_41) @[DCache.scala 291:59]
    node _T_55 = mux(_T_54, s1_meta_uncorrected_3_coh_state, UInt<2>("h0")) @[DCache.scala 291:41]
    node _T_56 = or(_T_43, _T_47) @[DCache.scala 292:19]
    node _T_57 = or(_T_56, _T_51) @[DCache.scala 292:19]
    node s1_meta_hit_state_state = or(_T_57, _T_55) @[DCache.scala 292:19]
    skip
    skip
    node s2_hit_valid = gt(s2_hit_state_state, UInt<2>("h0")) @[Metadata.scala 49:45]
    reg s2_hit_way : UInt<4>, gated_clock with :
      reset => (UInt<1>("h0"), s2_hit_way) @[Reg.scala 15:16]
    reg s2_victim_way_r : UInt<2>, gated_clock with :
      reset => (UInt<1>("h0"), s2_victim_way_r) @[Reg.scala 15:16]
    node s2_victim_way = dshl(UInt<1>("h1"), s2_victim_way_r) @[OneHot.scala 58:35]
    node s2_victim_or_hit_way = mux(s2_hit_valid, s2_hit_way, s2_victim_way) @[DCache.scala 404:33]
    reg s2_probe_way : UInt<4>, gated_clock with :
      reset => (UInt<1>("h0"), s2_probe_way) @[Reg.scala 15:16]
    node releaseWay = mux(_T_312, s2_victim_or_hit_way, s2_probe_way) @[DCache.scala 845:102 785:14 859:18]
    skip
    node s1_data_way_x35 = mux(inWriteback, releaseWay, s1_meta_hit_way) @[DCache.scala 295:61]
    skip
    node tl_d_data_encoded_lo_lo_lo = bits(auto_out_d_bits_data, 7, 0) @[package.scala 202:50]
    node tl_d_data_encoded_lo_lo_hi = bits(auto_out_d_bits_data, 15, 8) @[package.scala 202:50]
    node tl_d_data_encoded_lo_hi_lo = bits(auto_out_d_bits_data, 23, 16) @[package.scala 202:50]
    node tl_d_data_encoded_lo_hi_hi = bits(auto_out_d_bits_data, 31, 24) @[package.scala 202:50]
    node tl_d_data_encoded_hi_lo_lo = bits(auto_out_d_bits_data, 39, 32) @[package.scala 202:50]
    node tl_d_data_encoded_hi_lo_hi = bits(auto_out_d_bits_data, 47, 40) @[package.scala 202:50]
    node tl_d_data_encoded_hi_hi_lo = bits(auto_out_d_bits_data, 55, 48) @[package.scala 202:50]
    node tl_d_data_encoded_hi_hi_hi = bits(auto_out_d_bits_data, 63, 56) @[package.scala 202:50]
    node tl_d_data_encoded_lo_lo = cat(tl_d_data_encoded_lo_lo_hi, tl_d_data_encoded_lo_lo_lo) @[Cat.scala 30:58]
    node tl_d_data_encoded_lo_hi = cat(tl_d_data_encoded_lo_hi_hi, tl_d_data_encoded_lo_hi_lo) @[Cat.scala 30:58]
    node tl_d_data_encoded_lo = cat(tl_d_data_encoded_lo_hi, tl_d_data_encoded_lo_lo) @[Cat.scala 30:58]
    node tl_d_data_encoded_hi_lo = cat(tl_d_data_encoded_hi_lo_hi, tl_d_data_encoded_hi_lo_lo) @[Cat.scala 30:58]
    node tl_d_data_encoded_hi_hi = cat(tl_d_data_encoded_hi_hi_hi, tl_d_data_encoded_hi_hi_lo) @[Cat.scala 30:58]
    node tl_d_data_encoded_hi = cat(tl_d_data_encoded_hi_hi, tl_d_data_encoded_hi_lo) @[Cat.scala 30:58]
    node _tl_d_data_encoded_T = cat(tl_d_data_encoded_hi, tl_d_data_encoded_lo) @[Cat.scala 30:58]
    skip
    node s1_mask = mux(_s1_write_T_1, UInt<8>("h0"), s1_mask_xwr) @[DCache.scala 299:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s2_valid_x37_T = not(s1_sfence) @[DCache.scala 303:46]
    node s2_valid_x37 = and(s1_valid_masked, _s2_valid_x37_T) @[DCache.scala 303:43]
    skip
    skip
    skip
    skip
    reg s2_req_addr : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), s2_req_addr) @[DCache.scala 311:19]
    reg s2_req_tag : UInt<7>, gated_clock with :
      reset => (UInt<1>("h0"), s2_req_tag) @[DCache.scala 311:19]
    reg s2_req_size : UInt<2>, gated_clock with :
      reset => (UInt<1>("h0"), s2_req_size) @[DCache.scala 311:19]
    reg s2_req_signed : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_req_signed) @[DCache.scala 311:19]
    skip
    skip
    skip
    skip
    skip
    skip
    node _s2_cmd_flush_all_T = eq(s2_req_cmd, UInt<5>("h5")) @[DCache.scala 312:37]
    node _s2_cmd_flush_all_T_1 = bits(s2_req_size, 0, 0) @[DCache.scala 312:68]
    skip
    skip
    skip
    skip
    node s2_cmd_flush_line = and(_s2_cmd_flush_all_T, _s2_cmd_flush_all_T_1) @[DCache.scala 313:54]
    skip
    skip
    reg s2_tlb_xcpt_pf_ld : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_xcpt_pf_ld) @[DCache.scala 314:24]
    reg s2_tlb_xcpt_pf_st : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_xcpt_pf_st) @[DCache.scala 314:24]
    skip
    reg s2_tlb_xcpt_ae_ld : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_xcpt_ae_ld) @[DCache.scala 314:24]
    reg s2_tlb_xcpt_ae_st : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_xcpt_ae_st) @[DCache.scala 314:24]
    skip
    reg s2_tlb_xcpt_ma_ld : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_xcpt_ma_ld) @[DCache.scala 314:24]
    reg s2_tlb_xcpt_ma_st : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_xcpt_ma_st) @[DCache.scala 314:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg s2_pma_cacheable : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_pma_cacheable) @[DCache.scala 315:19]
    skip
    skip
    skip
    node _T_70 = or(s1_valid_not_nacked, s1_flush_valid) @[DCache.scala 317:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s2_pma_T_cacheable = tlb.io_resp_cacheable @[DCache.scala 321:18]
    skip
    skip
    node _GEN_58 = mux(_T_70, pad(s1_paddr, 40), s2_req_addr) @[DCache.scala 317:48 319:17 311:19]
    node _GEN_59 = mux(_T_70, s1_req_tag, s2_req_tag) @[DCache.scala 317:48 318:12 311:19]
    node _GEN_60 = mux(_T_70, s1_req_cmd, s2_req_cmd) @[DCache.scala 317:48 318:12 311:19]
    node _GEN_61 = mux(_T_70, s1_req_size, s2_req_size) @[DCache.scala 317:48 318:12 311:19]
    node _GEN_62 = mux(_T_70, s1_req_signed, s2_req_signed) @[DCache.scala 317:48 318:12 311:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg s2_vaddr_r : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), s2_vaddr_r) @[Reg.scala 15:16]
    skip
    node s2_vaddr_hi = shr(s2_vaddr_r, 12) @[DCache.scala 323:81]
    node s2_vaddr_lo = bits(s2_req_addr, 11, 0) @[DCache.scala 323:103]
    node s2_vaddr = cat(s2_vaddr_hi, s2_vaddr_lo) @[Cat.scala 30:58]
    reg s2_flush_valid_pre_tag_ecc : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_flush_valid_pre_tag_ecc) @[DCache.scala 327:43]
    skip
    node s1_meta_clk_en = or(_T_70, s1_probe) @[DCache.scala 329:62]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg s2_meta_corrected_r : UInt<22>, gated_clock with :
      reset => (UInt<1>("h0"), s2_meta_corrected_r) @[Reg.scala 15:16]
    skip
    skip
    node s2_meta_corrected_0_tag = bits(s2_meta_corrected_r, 19, 0) @[DCache.scala 333:99]
    node s2_meta_corrected_0_coh_state = bits(s2_meta_corrected_r, 21, 20) @[DCache.scala 333:99]
    reg s2_meta_corrected_r_1 : UInt<22>, gated_clock with :
      reset => (UInt<1>("h0"), s2_meta_corrected_r_1) @[Reg.scala 15:16]
    skip
    skip
    node s2_meta_corrected_1_tag = bits(s2_meta_corrected_r_1, 19, 0) @[DCache.scala 333:99]
    node s2_meta_corrected_1_coh_state = bits(s2_meta_corrected_r_1, 21, 20) @[DCache.scala 333:99]
    reg s2_meta_corrected_r_2 : UInt<22>, gated_clock with :
      reset => (UInt<1>("h0"), s2_meta_corrected_r_2) @[Reg.scala 15:16]
    skip
    skip
    node s2_meta_corrected_2_tag = bits(s2_meta_corrected_r_2, 19, 0) @[DCache.scala 333:99]
    node s2_meta_corrected_2_coh_state = bits(s2_meta_corrected_r_2, 21, 20) @[DCache.scala 333:99]
    reg s2_meta_corrected_r_3 : UInt<22>, gated_clock with :
      reset => (UInt<1>("h0"), s2_meta_corrected_r_3) @[Reg.scala 15:16]
    skip
    skip
    node s2_meta_corrected_3_tag = bits(s2_meta_corrected_r_3, 19, 0) @[DCache.scala 333:99]
    node s2_meta_corrected_3_coh_state = bits(s2_meta_corrected_r_3, 21, 20) @[DCache.scala 333:99]
    skip
    skip
    node _s2_data_en_T = or(s1_valid, inWriteback) @[DCache.scala 338:23]
    node en = or(_s2_data_en_T, io_cpu_replay_next) @[DCache.scala 338:38]
    node _s2_data_word_en_T = and(s1_did_read, s1_read_mask) @[DCache.scala 339:63]
    node word_en = or(inWriteback, _s2_data_word_en_T) @[DCache.scala 339:22]
    node s1_all_data_ways_0 = data.io_resp_0 @[DCache.scala 297:{29,29}]
    skip
    node s1_all_data_ways_1 = data.io_resp_1 @[DCache.scala 297:{29,29}]
    skip
    node s1_all_data_ways_2 = data.io_resp_2 @[DCache.scala 297:{29,29}]
    skip
    node s1_all_data_ways_3 = data.io_resp_3 @[DCache.scala 297:{29,29}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s2_data_s1_word_en_T = not(io_cpu_replay_next) @[DCache.scala 349:28]
    node s1_word_en = mux(_s2_data_s1_word_en_T, word_en, UInt<1>("h1")) @[DCache.scala 349:27]
    skip
    skip
    node grantIsUncachedData = eq(auto_out_d_bits_opcode, UInt<3>("h1")) @[package.scala 15:47]
    reg blockUncachedGrant : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), blockUncachedGrant) @[DCache.scala 722:33]
    node _T_293 = or(blockUncachedGrant, s1_valid) @[DCache.scala 724:54]
    node _T_294 = and(grantIsUncachedData, _T_293) @[DCache.scala 724:31]
    node grantIsRefill = eq(auto_out_d_bits_opcode, UInt<3>("h5")) @[DCache.scala 638:29]
    node _T_291 = not(dataArb.io_in_1_ready) @[DCache.scala 694:26]
    node _T_292 = and(grantIsRefill, _T_291) @[DCache.scala 694:23]
    node _grantIsCached_T = eq(auto_out_d_bits_opcode, UInt<3>("h4")) @[package.scala 15:47]
    skip
    node grantIsCached = or(_grantIsCached_T, grantIsRefill) @[package.scala 72:59]
    reg counter : UInt<9>, gated_clock with :
      reset => (UInt<1>("h0"), counter) @[Edges.scala 228:27]
    node d_first = eq(counter, UInt<9>("h0")) @[Edges.scala 230:25]
    node _bundleOut_0_d_ready_T = not(d_first) @[DCache.scala 643:41]
    skip
    node _bundleOut_0_d_ready_T_1 = or(_bundleOut_0_d_ready_T, auto_out_e_ready) @[DCache.scala 643:50]
    skip
    skip
    skip
    skip
    skip
    node canAcceptCachedGrant = not(_T_312) @[DCache.scala 642:30]
    node _bundleOut_0_d_ready_T_2 = and(_bundleOut_0_d_ready_T_1, canAcceptCachedGrant) @[DCache.scala 643:69]
    node _bundleOut_0_d_ready_T_3 = mux(grantIsCached, _bundleOut_0_d_ready_T_2, UInt<1>("h1")) @[DCache.scala 643:24]
    node _GEN_233 = mux(_T_292, UInt<1>("h0"), _bundleOut_0_d_ready_T_3) @[DCache.scala 643:18 694:51 696:20]
    node tl_out__d_ready = mux(_T_294, UInt<1>("h0"), _GEN_233) @[DCache.scala 724:68 725:22]
    skip
    skip
    node _T_271 = and(tl_out__d_ready, auto_out_d_valid) @[Decoupled.scala 40:37]
    skip
    node _T_267 = eq(auto_out_d_bits_opcode, UInt<3>("h0")) @[package.scala 15:47]
    node _T_269 = or(grantIsUncachedData, _T_267) @[package.scala 72:59]
    node _T_268 = eq(auto_out_d_bits_opcode, UInt<3>("h2")) @[package.scala 15:47]
    node grantIsUncached = or(_T_269, _T_268) @[package.scala 72:59]
    skip
    node _GEN_189 = mux(grantIsUncachedData, UInt<5>("h10"), pad(s1_data_way_x35, 5)) @[DCache.scala 663:34 666:25]
    node _GEN_198 = mux(grantIsUncached, _GEN_189, pad(s1_data_way_x35, 5)) @[DCache.scala 656:35]
    node _GEN_211 = mux(grantIsCached, pad(s1_data_way_x35, 5), _GEN_198) @[DCache.scala 647:26]
    node s1_data_way = mux(_T_271, _GEN_211, pad(s1_data_way_x35, 5)) @[DCache.scala 646:26]
    skip
    node _s2_data_T_1 = mux(s1_word_en, s1_data_way, UInt<5>("h0")) @[DCache.scala 351:28]
    node _s2_data_T_2 = bits(_s2_data_T_1, 0, 0) @[Mux.scala 29:36]
    node _s2_data_T_3 = bits(_s2_data_T_1, 1, 1) @[Mux.scala 29:36]
    node _s2_data_T_4 = bits(_s2_data_T_1, 2, 2) @[Mux.scala 29:36]
    node _s2_data_T_5 = bits(_s2_data_T_1, 3, 3) @[Mux.scala 29:36]
    node _s2_data_T_6 = bits(_s2_data_T_1, 4, 4) @[Mux.scala 29:36]
    node _s2_data_T_7 = mux(_s2_data_T_2, s1_all_data_ways_0, UInt<64>("h0")) @[Mux.scala 27:72]
    node _s2_data_T_8 = mux(_s2_data_T_3, s1_all_data_ways_1, UInt<64>("h0")) @[Mux.scala 27:72]
    node _s2_data_T_9 = mux(_s2_data_T_4, s1_all_data_ways_2, UInt<64>("h0")) @[Mux.scala 27:72]
    node _s2_data_T_10 = mux(_s2_data_T_5, s1_all_data_ways_3, UInt<64>("h0")) @[Mux.scala 27:72]
    node _s2_data_T_11 = mux(_s2_data_T_6, _tl_d_data_encoded_T, UInt<64>("h0")) @[Mux.scala 27:72]
    node _s2_data_T_12 = or(_s2_data_T_7, _s2_data_T_8) @[Mux.scala 27:72]
    node _s2_data_T_13 = or(_s2_data_T_12, _s2_data_T_9) @[Mux.scala 27:72]
    node _s2_data_T_14 = or(_s2_data_T_13, _s2_data_T_10) @[Mux.scala 27:72]
    node _s2_data_T_15 = or(_s2_data_T_14, _s2_data_T_11) @[Mux.scala 27:72]
    reg s2_data : UInt<64>, gated_clock with :
      reset => (UInt<1>("h0"), s2_data) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s2_data_uncorrected_lo_lo_lo = bits(s2_data, 7, 0) @[package.scala 202:50]
    node s2_data_uncorrected_lo_lo_hi = bits(s2_data, 15, 8) @[package.scala 202:50]
    node s2_data_uncorrected_lo_hi_lo = bits(s2_data, 23, 16) @[package.scala 202:50]
    node s2_data_uncorrected_lo_hi_hi = bits(s2_data, 31, 24) @[package.scala 202:50]
    node s2_data_uncorrected_hi_lo_lo = bits(s2_data, 39, 32) @[package.scala 202:50]
    node s2_data_uncorrected_hi_lo_hi = bits(s2_data, 47, 40) @[package.scala 202:50]
    node s2_data_uncorrected_hi_hi_lo = bits(s2_data, 55, 48) @[package.scala 202:50]
    node s2_data_uncorrected_hi_hi_hi = bits(s2_data, 63, 56) @[package.scala 202:50]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s2_data_corrected_lo_lo = cat(s2_data_uncorrected_lo_lo_hi, s2_data_uncorrected_lo_lo_lo) @[Cat.scala 30:58]
    node s2_data_corrected_lo_hi = cat(s2_data_uncorrected_lo_hi_hi, s2_data_uncorrected_lo_hi_lo) @[Cat.scala 30:58]
    node s2_data_corrected_lo = cat(s2_data_corrected_lo_hi, s2_data_corrected_lo_lo) @[Cat.scala 30:58]
    node s2_data_corrected_hi_lo = cat(s2_data_uncorrected_hi_lo_hi, s2_data_uncorrected_hi_lo_lo) @[Cat.scala 30:58]
    node s2_data_corrected_hi_hi = cat(s2_data_uncorrected_hi_hi_hi, s2_data_uncorrected_hi_hi_lo) @[Cat.scala 30:58]
    node s2_data_corrected_hi = cat(s2_data_corrected_hi_hi, s2_data_corrected_hi_lo) @[Cat.scala 30:58]
    node s2_data_corrected = cat(s2_data_corrected_hi, s2_data_corrected_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s2_valid_flush_line = and(s2_valid_hit_maybe_flush_pre_data_ecc_and_waw, s2_cmd_flush_line) @[DCache.scala 391:75]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s2_valid_miss_T = and(s2_valid_masked, s2_readwrite) @[DCache.scala 395:39]
    skip
    skip
    node _s2_valid_miss_T_3 = not(s2_hit) @[DCache.scala 395:76]
    node s2_valid_miss = and(_s2_valid_miss_T, _s2_valid_miss_T_3) @[DCache.scala 395:73]
    node s2_uncached = not(s2_pma_cacheable) @[DCache.scala 396:21]
    skip
    skip
    skip
    skip
    skip
    node _s2_valid_cached_miss_T = not(s2_uncached) @[DCache.scala 397:47]
    node _s2_valid_cached_miss_T_1 = and(s2_valid_miss, _s2_valid_cached_miss_T) @[DCache.scala 397:44]
    node _s2_valid_cached_miss_T_2 = orr(uncachedInFlight_0) @[DCache.scala 397:88]
    node _s2_valid_cached_miss_T_3 = not(_s2_valid_cached_miss_T_2) @[DCache.scala 397:63]
    node s2_valid_cached_miss = and(_s2_valid_cached_miss_T_1, _s2_valid_cached_miss_T_3) @[DCache.scala 397:60]
    node _s2_want_victimize_T = or(s2_valid_cached_miss, s2_valid_flush_line) @[DCache.scala 399:79]
    skip
    node s2_want_victimize = or(_s2_want_victimize_T, s2_flush_valid_pre_tag_ecc) @[DCache.scala 399:125]
    skip
    node _s2_cannot_victimize_T = not(s2_flush_valid_pre_tag_ecc) @[DCache.scala 400:29]
    skip
    skip
    skip
    node _s2_valid_uncached_pending_T = and(s2_valid_miss, s2_uncached) @[DCache.scala 402:49]
    node _s2_valid_uncached_pending_T_1 = andr(uncachedInFlight_0) @[DCache.scala 402:92]
    node _s2_valid_uncached_pending_T_2 = not(_s2_valid_uncached_pending_T_1) @[DCache.scala 402:67]
    node s2_valid_uncached_pending = and(_s2_valid_uncached_pending_T, _s2_valid_uncached_pending_T_2) @[DCache.scala 402:64]
    skip
    node s1_victim_way = bits(lfsr, 1, 0) @[package.scala 154:13]
    skip
    skip
    skip
    node _s2_victim_tag_T_1 = bits(s2_req_addr, 31, 12) @[DCache.scala 405:82]
    node _s2_victim_tag_T_2 = bits(s2_victim_way, 0, 0) @[Mux.scala 29:36]
    node _s2_victim_tag_T_3 = bits(s2_victim_way, 1, 1) @[Mux.scala 29:36]
    node _s2_victim_tag_T_4 = bits(s2_victim_way, 2, 2) @[Mux.scala 29:36]
    node _s2_victim_tag_T_5 = bits(s2_victim_way, 3, 3) @[Mux.scala 29:36]
    skip
    node _s2_victim_tag_T_6 = mux(_s2_victim_tag_T_2, s2_meta_corrected_0_tag, UInt<20>("h0")) @[Mux.scala 27:72]
    skip
    node _s2_victim_tag_T_7 = mux(_s2_victim_tag_T_3, s2_meta_corrected_1_tag, UInt<20>("h0")) @[Mux.scala 27:72]
    skip
    node _s2_victim_tag_T_8 = mux(_s2_victim_tag_T_4, s2_meta_corrected_2_tag, UInt<20>("h0")) @[Mux.scala 27:72]
    skip
    node _s2_victim_tag_T_9 = mux(_s2_victim_tag_T_5, s2_meta_corrected_3_tag, UInt<20>("h0")) @[Mux.scala 27:72]
    node _s2_victim_tag_T_10 = or(_s2_victim_tag_T_6, _s2_victim_tag_T_7) @[Mux.scala 27:72]
    node _s2_victim_tag_T_11 = or(_s2_victim_tag_T_10, _s2_victim_tag_T_8) @[Mux.scala 27:72]
    node _s2_victim_tag_T_12 = or(_s2_victim_tag_T_11, _s2_victim_tag_T_9) @[Mux.scala 27:72]
    skip
    node _s2_victim_tag_T_13 = mux(_s2_victim_tag_T_2, s2_meta_corrected_0_coh_state, UInt<2>("h0")) @[Mux.scala 27:72]
    skip
    node _s2_victim_tag_T_14 = mux(_s2_victim_tag_T_3, s2_meta_corrected_1_coh_state, UInt<2>("h0")) @[Mux.scala 27:72]
    skip
    node _s2_victim_tag_T_15 = mux(_s2_victim_tag_T_4, s2_meta_corrected_2_coh_state, UInt<2>("h0")) @[Mux.scala 27:72]
    skip
    node _s2_victim_tag_T_16 = mux(_s2_victim_tag_T_5, s2_meta_corrected_3_coh_state, UInt<2>("h0")) @[Mux.scala 27:72]
    node _s2_victim_tag_T_17 = or(_s2_victim_tag_T_13, _s2_victim_tag_T_14) @[Mux.scala 27:72]
    node _s2_victim_tag_T_18 = or(_s2_victim_tag_T_17, _s2_victim_tag_T_15) @[Mux.scala 27:72]
    node _s2_victim_tag_T_19 = or(_s2_victim_tag_T_18, _s2_victim_tag_T_16) @[Mux.scala 27:72]
    skip
    skip
    node s2_victim_tag = mux(s2_valid_flush_line, _s2_victim_tag_T_1, _s2_victim_tag_T_12) @[DCache.scala 405:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s2_victim_state_state = mux(s2_hit_valid, s2_hit_state_state, _s2_victim_tag_T_19) @[DCache.scala 406:28]
    node _T_133 = mux(_T_131, UInt<3>("h5"), UInt<3>("h0")) @[Misc.scala 37:36]
    skip
    node _T_137 = mux(_T_135, UInt<3>("h2"), _T_133) @[Misc.scala 37:36]
    skip
    node _T_141 = mux(_T_139, UInt<3>("h1"), _T_137) @[Misc.scala 37:36]
    skip
    node _T_145 = mux(_T_143, UInt<3>("h1"), _T_141) @[Misc.scala 37:36]
    skip
    node _T_149 = mux(_T_147, UInt<3>("h5"), _T_145) @[Misc.scala 37:36]
    skip
    node _T_153 = mux(_T_151, UInt<3>("h4"), _T_149) @[Misc.scala 37:36]
    node _T_154 = mux(_T_151, UInt<2>("h1"), UInt<2>("h0")) @[Misc.scala 37:63]
    node _T_157 = mux(_T_155, UInt<3>("h0"), _T_153) @[Misc.scala 37:36]
    node _T_158 = mux(_T_155, UInt<2>("h1"), _T_154) @[Misc.scala 37:63]
    node _T_161 = mux(_T_159, UInt<3>("h0"), _T_157) @[Misc.scala 37:36]
    node _T_162 = mux(_T_159, UInt<2>("h1"), _T_158) @[Misc.scala 37:63]
    node _T_165 = mux(_T_163, UInt<3>("h5"), _T_161) @[Misc.scala 37:36]
    node _T_166 = mux(_T_163, UInt<2>("h0"), _T_162) @[Misc.scala 37:63]
    node _T_169 = mux(_T_167, UInt<3>("h4"), _T_165) @[Misc.scala 37:36]
    node _T_170 = mux(_T_167, UInt<2>("h1"), _T_166) @[Misc.scala 37:63]
    node _T_173 = mux(_T_171, UInt<3>("h3"), _T_169) @[Misc.scala 37:36]
    node _T_174 = mux(_T_171, UInt<2>("h2"), _T_170) @[Misc.scala 37:63]
    node s2_report_param = mux(_T_175, UInt<3>("h3"), _T_173) @[Misc.scala 37:36]
    node probeNewCoh_state = mux(_T_175, UInt<2>("h2"), _T_174) @[Misc.scala 37:63]
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_182 = cat(UInt<2>("h2"), s2_victim_state_state) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_195 = eq(UInt<4>("h8"), _T_182) @[Misc.scala 55:20]
    skip
    node _T_197 = mux(_T_195, UInt<3>("h5"), UInt<3>("h0")) @[Misc.scala 37:36]
    skip
    node _T_199 = eq(UInt<4>("h9"), _T_182) @[Misc.scala 55:20]
    skip
    node _T_201 = mux(_T_199, UInt<3>("h2"), _T_197) @[Misc.scala 37:36]
    skip
    node _T_203 = eq(UInt<4>("ha"), _T_182) @[Misc.scala 55:20]
    skip
    node _T_205 = mux(_T_203, UInt<3>("h1"), _T_201) @[Misc.scala 37:36]
    skip
    node _T_207 = eq(UInt<4>("hb"), _T_182) @[Misc.scala 55:20]
    skip
    node _T_209 = mux(_T_207, UInt<3>("h1"), _T_205) @[Misc.scala 37:36]
    skip
    node _T_211 = eq(UInt<4>("h4"), _T_182) @[Misc.scala 55:20]
    node _T_212 = mux(_T_211, UInt<1>("h0"), _T_207) @[Misc.scala 37:9]
    node _T_213 = mux(_T_211, UInt<3>("h5"), _T_209) @[Misc.scala 37:36]
    skip
    node _T_215 = eq(UInt<4>("h5"), _T_182) @[Misc.scala 55:20]
    node _T_216 = mux(_T_215, UInt<1>("h0"), _T_212) @[Misc.scala 37:9]
    node _T_217 = mux(_T_215, UInt<3>("h4"), _T_213) @[Misc.scala 37:36]
    node _T_218 = mux(_T_215, UInt<2>("h1"), UInt<2>("h0")) @[Misc.scala 37:63]
    node _T_219 = eq(UInt<4>("h6"), _T_182) @[Misc.scala 55:20]
    node _T_220 = mux(_T_219, UInt<1>("h0"), _T_216) @[Misc.scala 37:9]
    node _T_221 = mux(_T_219, UInt<3>("h0"), _T_217) @[Misc.scala 37:36]
    node _T_222 = mux(_T_219, UInt<2>("h1"), _T_218) @[Misc.scala 37:63]
    node _T_223 = eq(UInt<4>("h7"), _T_182) @[Misc.scala 55:20]
    node _T_224 = or(_T_223, _T_220) @[Misc.scala 37:9]
    node _T_225 = mux(_T_223, UInt<3>("h0"), _T_221) @[Misc.scala 37:36]
    node _T_226 = mux(_T_223, UInt<2>("h1"), _T_222) @[Misc.scala 37:63]
    node _T_227 = eq(UInt<4>("h0"), _T_182) @[Misc.scala 55:20]
    node _T_228 = mux(_T_227, UInt<1>("h0"), _T_224) @[Misc.scala 37:9]
    node _T_229 = mux(_T_227, UInt<3>("h5"), _T_225) @[Misc.scala 37:36]
    node _T_230 = mux(_T_227, UInt<2>("h0"), _T_226) @[Misc.scala 37:63]
    node _T_231 = eq(UInt<4>("h1"), _T_182) @[Misc.scala 55:20]
    node _T_232 = mux(_T_231, UInt<1>("h0"), _T_228) @[Misc.scala 37:9]
    node _T_233 = mux(_T_231, UInt<3>("h4"), _T_229) @[Misc.scala 37:36]
    node _T_234 = mux(_T_231, UInt<2>("h1"), _T_230) @[Misc.scala 37:63]
    node _T_235 = eq(UInt<4>("h2"), _T_182) @[Misc.scala 55:20]
    node _T_236 = mux(_T_235, UInt<1>("h0"), _T_232) @[Misc.scala 37:9]
    node _T_237 = mux(_T_235, UInt<3>("h3"), _T_233) @[Misc.scala 37:36]
    node _T_238 = mux(_T_235, UInt<2>("h2"), _T_234) @[Misc.scala 37:63]
    node _T_239 = eq(UInt<4>("h3"), _T_182) @[Misc.scala 55:20]
    node s2_victim_dirty = or(_T_239, _T_236) @[Misc.scala 37:9]
    node s2_shrink_param = mux(_T_239, UInt<3>("h3"), _T_237) @[Misc.scala 37:36]
    node voluntaryNewCoh_state = mux(_T_239, UInt<2>("h2"), _T_238) @[Misc.scala 37:63]
    skip
    skip
    skip
    node s2_dont_nack_uncached = and(s2_valid_uncached_pending, auto_out_a_ready) @[DCache.scala 412:57]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s2_dont_nack_misc_T_10 = eq(s2_req_cmd, UInt<5>("h17")) @[DCache.scala 416:17]
    skip
    node s2_dont_nack_misc = and(s2_valid_masked, _s2_dont_nack_misc_T_10) @[DCache.scala 413:61]
    node _io_cpu_s2_nack_T = not(s2_dont_nack_uncached) @[DCache.scala 417:41]
    node _io_cpu_s2_nack_T_1 = and(s2_valid_no_xcpt, _io_cpu_s2_nack_T) @[DCache.scala 417:38]
    node _io_cpu_s2_nack_T_2 = not(s2_dont_nack_misc) @[DCache.scala 417:67]
    node _io_cpu_s2_nack_T_3 = and(_io_cpu_s2_nack_T_1, _io_cpu_s2_nack_T_2) @[DCache.scala 417:64]
    node _io_cpu_s2_nack_T_4 = not(s2_valid_hit_pre_data_ecc_and_waw) @[DCache.scala 417:89]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _metaArb_io_in_1_bits_idx_T = bits(probe_bits_address, 11, 6) @[DCache.scala 1170:47]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node metaArb_io_in_2_bits_addr_lo = bits(s2_vaddr, 11, 0) @[DCache.scala 438:80]
    skip
    node _metaArb_io_in_2_bits_data_T = shr(s2_req_addr, 12) @[DCache.scala 439:68]
    skip
    node metaArb_io_in_2_bits_data_meta_tag = bits(_metaArb_io_in_2_bits_data_T, 19, 0) @[HellaCache.scala 289:20 290:14]
    skip
    skip
    skip
    skip
    skip
    node _lrscBackingOff_T = gt(lrscCount, UInt<7>("h0")) @[DCache.scala 446:34]
    node _lrscBackingOff_T_1 = not(lrscValid) @[DCache.scala 446:41]
    node lrscBackingOff = and(_lrscBackingOff_T, _lrscBackingOff_T_1) @[DCache.scala 446:38]
    reg lrscAddr : UInt<34>, gated_clock with :
      reset => (UInt<1>("h0"), lrscAddr) @[DCache.scala 447:21]
    node _lrscAddrMatch_T = shr(s2_req_addr, 6) @[DCache.scala 448:49]
    node lrscAddrMatch = eq(lrscAddr, _lrscAddrMatch_T) @[DCache.scala 448:32]
    node _s2_sc_fail_T = and(lrscValid, lrscAddrMatch) @[DCache.scala 449:41]
    node _s2_sc_fail_T_1 = not(_s2_sc_fail_T) @[DCache.scala 449:29]
    node s2_sc_fail = and(_s2_write_T_3, _s2_sc_fail_T_1) @[DCache.scala 449:26]
    node _T_243 = and(s2_valid_hit_pre_data_ecc_and_waw, _c_cat_T_47) @[DCache.scala 450:23]
    skip
    node _T_245 = and(_T_243, _io_cpu_req_ready_T_1) @[DCache.scala 450:32]
    node _T_246 = or(_T_245, s2_valid_cached_miss) @[DCache.scala 450:54]
    skip
    skip
    node _lrscCount_T = mux(s2_hit, UInt<7>("h4f"), UInt<7>("h0")) @[DCache.scala 451:21]
    skip
    node _GEN_119 = mux(_T_246, _lrscCount_T, lrscCount) @[DCache.scala 450:99 451:15 444:22]
    skip
    skip
    node _lrscCount_T_1 = sub(lrscCount, UInt<7>("h1")) @[DCache.scala 454:49]
    node _lrscCount_T_2 = tail(_lrscCount_T_1, 1) @[DCache.scala 454:49]
    node _GEN_121 = mux(_lrscBackingOff_T, _lrscCount_T_2, _GEN_119) @[DCache.scala 454:{24,36}]
    node _T_250 = and(s2_valid_masked, lrscValid) @[DCache.scala 455:29]
    node _GEN_122 = mux(_T_250, UInt<7>("h3"), _GEN_121) @[DCache.scala 455:{43,55}]
    node _GEN_123 = mux(s1_probe, UInt<7>("h0"), _GEN_122) @[DCache.scala 456:{19,31}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pstore1_cmd_T = and(s1_valid_not_nacked, s1_write) @[DCache.scala 464:63]
    reg pstore1_cmd : UInt<5>, gated_clock with :
      reset => (UInt<1>("h0"), pstore1_cmd) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    reg pstore1_data : UInt<64>, gated_clock with :
      reset => (UInt<1>("h0"), pstore1_data) @[Reg.scala 15:16]
    skip
    skip
    reg pstore1_way : UInt<4>, gated_clock with :
      reset => (UInt<1>("h0"), pstore1_way) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pstore1_rmw_T_49 = and(s1_write, _s1_write_T_1) @[DCache.scala 1161:23]
    node _pstore1_rmw_T_50 = or(s1_read, _pstore1_rmw_T_49) @[DCache.scala 1160:21]
    skip
    reg pstore1_rmw_r : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), pstore1_rmw_r) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    node _pstore1_merge_T = and(s2_valid_hit_pre_data_ecc_and_waw, s2_write) @[DCache.scala 462:46]
    node _pstore1_merge_T_1 = not(s2_sc_fail) @[DCache.scala 462:61]
    node _pstore1_merge_T_2 = and(_pstore1_merge_T, _pstore1_merge_T_1) @[DCache.scala 462:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node pstore_drain_opportunistic = not(_dataArb_io_in_3_valid_T_56) @[DCache.scala 474:36]
    skip
    skip
    skip
    reg pstore_drain_on_miss_REG : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), pstore_drain_on_miss_REG) @[DCache.scala 475:56]
    node pstore_drain_on_miss = or(releaseInFlight, pstore_drain_on_miss_REG) @[DCache.scala 475:46]
    skip
    skip
    skip
    skip
    skip
    node pstore1_valid = or(_pstore1_merge_T_2, pstore1_held) @[DCache.scala 479:38]
    node _pstore_drain_structural_T = and(pstore1_valid_likely, pstore2_valid) @[DCache.scala 481:54]
    node _pstore_drain_structural_T_1 = and(s1_valid, s1_write) @[DCache.scala 481:85]
    node _pstore_drain_structural_T_2 = or(_pstore_drain_structural_T_1, pstore1_rmw_r) @[DCache.scala 481:98]
    node pstore_drain_structural = and(_pstore_drain_structural_T, _pstore_drain_structural_T_2) @[DCache.scala 481:71]
    skip
    skip
    skip
    node _T_254 = or(_pstore1_merge_T, pstore1_held) @[DCache.scala 478:96]
    node _T_255 = eq(_T_254, pstore1_valid) @[DCache.scala 482:63]
    node _T_256 = or(pstore1_rmw_r, _T_255) @[DCache.scala 482:22]
    skip
    node _T_258 = or(_T_256, reset) @[DCache.scala 482:9]
    node _T_259 = not(_T_258) @[DCache.scala 482:9]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pstore_drain_T_6 = not(pstore1_rmw_r) @[DCache.scala 490:44]
    node _pstore_drain_T_7 = and(_T_254, _pstore_drain_T_6) @[DCache.scala 490:41]
    node _pstore_drain_T_8 = or(_pstore_drain_T_7, pstore2_valid) @[DCache.scala 490:58]
    node _pstore_drain_T_9 = or(pstore_drain_opportunistic, pstore_drain_on_miss) @[DCache.scala 490:107]
    node _pstore_drain_T_10 = and(_pstore_drain_T_8, _pstore_drain_T_9) @[DCache.scala 490:76]
    node pstore_drain = or(pstore_drain_structural, _pstore_drain_T_10) @[DCache.scala 489:48]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pstore1_held_T_8 = and(pstore1_valid, pstore2_valid) @[DCache.scala 493:71]
    node _pstore1_held_T_9 = not(pstore_drain) @[DCache.scala 493:91]
    node _pstore1_held_T_10 = and(_pstore1_held_T_8, _pstore1_held_T_9) @[DCache.scala 493:88]
    skip
    node _advance_pstore1_T_1 = eq(pstore2_valid, pstore_drain) @[DCache.scala 494:79]
    node advance_pstore1 = and(pstore1_valid, _advance_pstore1_T_1) @[DCache.scala 494:61]
    skip
    node _pstore2_valid_T_1 = and(pstore2_valid, _pstore1_held_T_9) @[DCache.scala 495:34]
    node _pstore2_valid_T_2 = or(_pstore2_valid_T_1, advance_pstore1) @[DCache.scala 495:51]
    skip
    skip
    skip
    reg pstore2_way : UInt<4>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_way) @[Reg.scala 15:16]
    skip
    node pstore1_storegen_data = amoalu.io_out
    node _pstore2_storegen_data_T = bits(pstore1_storegen_data, 7, 0) @[DCache.scala 500:44]
    skip
    skip
    skip
    reg pstore2_storegen_data_lo_lo_lo : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_storegen_data_lo_lo_lo) @[Reg.scala 15:16]
    skip
    node _pstore2_storegen_data_T_4 = bits(pstore1_storegen_data, 15, 8) @[DCache.scala 500:44]
    skip
    skip
    skip
    reg pstore2_storegen_data_lo_lo_hi : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_storegen_data_lo_lo_hi) @[Reg.scala 15:16]
    skip
    node _pstore2_storegen_data_T_8 = bits(pstore1_storegen_data, 23, 16) @[DCache.scala 500:44]
    skip
    skip
    skip
    reg pstore2_storegen_data_lo_hi_lo : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_storegen_data_lo_hi_lo) @[Reg.scala 15:16]
    skip
    node _pstore2_storegen_data_T_12 = bits(pstore1_storegen_data, 31, 24) @[DCache.scala 500:44]
    skip
    skip
    skip
    reg pstore2_storegen_data_lo_hi_hi : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_storegen_data_lo_hi_hi) @[Reg.scala 15:16]
    skip
    node _pstore2_storegen_data_T_16 = bits(pstore1_storegen_data, 39, 32) @[DCache.scala 500:44]
    skip
    skip
    skip
    reg pstore2_storegen_data_hi_lo_lo : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_storegen_data_hi_lo_lo) @[Reg.scala 15:16]
    skip
    node _pstore2_storegen_data_T_20 = bits(pstore1_storegen_data, 47, 40) @[DCache.scala 500:44]
    skip
    skip
    skip
    reg pstore2_storegen_data_hi_lo_hi : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_storegen_data_hi_lo_hi) @[Reg.scala 15:16]
    skip
    node _pstore2_storegen_data_T_24 = bits(pstore1_storegen_data, 55, 48) @[DCache.scala 500:44]
    skip
    skip
    skip
    reg pstore2_storegen_data_hi_hi_lo : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_storegen_data_hi_hi_lo) @[Reg.scala 15:16]
    skip
    node _pstore2_storegen_data_T_28 = bits(pstore1_storegen_data, 63, 56) @[DCache.scala 500:44]
    skip
    skip
    skip
    reg pstore2_storegen_data_hi_hi_hi : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), pstore2_storegen_data_hi_hi_hi) @[Reg.scala 15:16]
    skip
    node pstore2_storegen_data_lo_lo = cat(pstore2_storegen_data_lo_lo_hi, pstore2_storegen_data_lo_lo_lo) @[Cat.scala 30:58]
    node pstore2_storegen_data_lo_hi = cat(pstore2_storegen_data_lo_hi_hi, pstore2_storegen_data_lo_hi_lo) @[Cat.scala 30:58]
    node pstore2_storegen_data_lo = cat(pstore2_storegen_data_lo_hi, pstore2_storegen_data_lo_lo) @[Cat.scala 30:58]
    node pstore2_storegen_data_hi_lo = cat(pstore2_storegen_data_hi_lo_hi, pstore2_storegen_data_hi_lo_lo) @[Cat.scala 30:58]
    node pstore2_storegen_data_hi_hi = cat(pstore2_storegen_data_hi_hi_hi, pstore2_storegen_data_hi_hi_lo) @[Cat.scala 30:58]
    node pstore2_storegen_data_hi = cat(pstore2_storegen_data_hi_hi, pstore2_storegen_data_hi_lo) @[Cat.scala 30:58]
    node pstore2_storegen_data = cat(pstore2_storegen_data_hi, pstore2_storegen_data_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _pstore2_storegen_mask_mask_T = not(pstore1_mask) @[DCache.scala 506:37]
    skip
    node _pstore2_storegen_mask_mask_T_2 = not(_pstore2_storegen_mask_mask_T) @[DCache.scala 506:15]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _dataArb_io_in_0_bits_addr_T = mux(pstore2_valid, pstore2_addr, pstore1_addr) @[DCache.scala 521:36]
    skip
    node _dataArb_io_in_0_bits_wdata_T = mux(pstore2_valid, pstore2_storegen_data, pstore1_data) @[DCache.scala 523:63]
    node dataArb_io_in_0_bits_wdata_lo_lo_lo = bits(_dataArb_io_in_0_bits_wdata_T, 7, 0) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_lo_lo_hi = bits(_dataArb_io_in_0_bits_wdata_T, 15, 8) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_lo_hi_lo = bits(_dataArb_io_in_0_bits_wdata_T, 23, 16) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_lo_hi_hi = bits(_dataArb_io_in_0_bits_wdata_T, 31, 24) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_hi_lo_lo = bits(_dataArb_io_in_0_bits_wdata_T, 39, 32) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_hi_lo_hi = bits(_dataArb_io_in_0_bits_wdata_T, 47, 40) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_hi_hi_lo = bits(_dataArb_io_in_0_bits_wdata_T, 55, 48) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_hi_hi_hi = bits(_dataArb_io_in_0_bits_wdata_T, 63, 56) @[package.scala 202:50]
    node dataArb_io_in_0_bits_wdata_lo_lo = cat(dataArb_io_in_0_bits_wdata_lo_lo_hi, dataArb_io_in_0_bits_wdata_lo_lo_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_wdata_lo_hi = cat(dataArb_io_in_0_bits_wdata_lo_hi_hi, dataArb_io_in_0_bits_wdata_lo_hi_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_wdata_lo = cat(dataArb_io_in_0_bits_wdata_lo_hi, dataArb_io_in_0_bits_wdata_lo_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_wdata_hi_lo = cat(dataArb_io_in_0_bits_wdata_hi_lo_hi, dataArb_io_in_0_bits_wdata_hi_lo_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_wdata_hi_hi = cat(dataArb_io_in_0_bits_wdata_hi_hi_hi, dataArb_io_in_0_bits_wdata_hi_hi_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_wdata_hi = cat(dataArb_io_in_0_bits_wdata_hi_hi, dataArb_io_in_0_bits_wdata_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _dataArb_io_in_0_bits_eccMask_T = mux(pstore2_valid, mask, pstore1_mask) @[DCache.scala 529:47]
    node _dataArb_io_in_0_bits_eccMask_T_1 = bits(_dataArb_io_in_0_bits_eccMask_T, 0, 0) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_2 = bits(_dataArb_io_in_0_bits_eccMask_T, 1, 1) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_3 = bits(_dataArb_io_in_0_bits_eccMask_T, 2, 2) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_4 = bits(_dataArb_io_in_0_bits_eccMask_T, 3, 3) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_5 = bits(_dataArb_io_in_0_bits_eccMask_T, 4, 4) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_6 = bits(_dataArb_io_in_0_bits_eccMask_T, 5, 5) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_7 = bits(_dataArb_io_in_0_bits_eccMask_T, 6, 6) @[package.scala 202:50]
    node _dataArb_io_in_0_bits_eccMask_T_8 = bits(_dataArb_io_in_0_bits_eccMask_T, 7, 7) @[package.scala 202:50]
    node dataArb_io_in_0_bits_eccMask_lo_lo_lo = orr(_dataArb_io_in_0_bits_eccMask_T_1) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_lo_lo_hi = orr(_dataArb_io_in_0_bits_eccMask_T_2) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_lo_hi_lo = orr(_dataArb_io_in_0_bits_eccMask_T_3) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_lo_hi_hi = orr(_dataArb_io_in_0_bits_eccMask_T_4) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_hi_lo_lo = orr(_dataArb_io_in_0_bits_eccMask_T_5) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_hi_lo_hi = orr(_dataArb_io_in_0_bits_eccMask_T_6) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_hi_hi_lo = orr(_dataArb_io_in_0_bits_eccMask_T_7) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_hi_hi_hi = orr(_dataArb_io_in_0_bits_eccMask_T_8) @[DCache.scala 1151:66]
    node dataArb_io_in_0_bits_eccMask_lo_lo = cat(dataArb_io_in_0_bits_eccMask_lo_lo_hi, dataArb_io_in_0_bits_eccMask_lo_lo_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_eccMask_lo_hi = cat(dataArb_io_in_0_bits_eccMask_lo_hi_hi, dataArb_io_in_0_bits_eccMask_lo_hi_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_eccMask_lo = cat(dataArb_io_in_0_bits_eccMask_lo_hi, dataArb_io_in_0_bits_eccMask_lo_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_eccMask_hi_lo = cat(dataArb_io_in_0_bits_eccMask_hi_lo_hi, dataArb_io_in_0_bits_eccMask_hi_lo_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_eccMask_hi_hi = cat(dataArb_io_in_0_bits_eccMask_hi_hi_hi, dataArb_io_in_0_bits_eccMask_hi_hi_lo) @[Cat.scala 30:58]
    node dataArb_io_in_0_bits_eccMask_hi = cat(dataArb_io_in_0_bits_eccMask_hi_hi, dataArb_io_in_0_bits_eccMask_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _a_source_T = not(uncachedInFlight_0) @[DCache.scala 549:34]
    node _a_source_T_1 = shl(_a_source_T, 1) @[DCache.scala 549:59]
    node _a_source_T_2 = bits(_a_source_T_1, 0, 0) @[OneHot.scala 47:40]
    skip
    node a_source = mux(_a_source_T_2, UInt<1>("h0"), UInt<1>("h1")) @[Mux.scala 47:69]
    skip
    node acquire_address = shl(_lrscAddrMatch_T, 6) @[DCache.scala 550:49]
    skip
    node a_mask = pad(pstore1_mask, 23) @[DCache.scala 554:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _get_a_mask_sizeOH_T = pad(s2_req_size, 3) @[Misc.scala 201:34]
    node get_a_mask_sizeOH_shiftAmount = bits(_get_a_mask_sizeOH_T, 1, 0) @[OneHot.scala 64:49]
    node _get_a_mask_sizeOH_T_1 = dshl(UInt<1>("h1"), get_a_mask_sizeOH_shiftAmount) @[OneHot.scala 65:12]
    node _get_a_mask_sizeOH_T_2 = bits(_get_a_mask_sizeOH_T_1, 2, 0) @[OneHot.scala 65:27]
    node get_a_mask_sizeOH = or(_get_a_mask_sizeOH_T_2, UInt<3>("h1")) @[Misc.scala 201:81]
    node _get_a_mask_T = geq(s2_req_size, UInt<2>("h3")) @[Misc.scala 205:21]
    node get_a_mask_size = bits(get_a_mask_sizeOH, 2, 2) @[Misc.scala 208:26]
    node get_a_mask_bit = bits(s2_req_addr, 2, 2) @[Misc.scala 209:26]
    node get_a_mask_nbit = not(get_a_mask_bit) @[Misc.scala 210:20]
    skip
    node _get_a_mask_acc_T = and(get_a_mask_size, get_a_mask_nbit) @[Misc.scala 214:38]
    node get_a_mask_acc = or(_get_a_mask_T, _get_a_mask_acc_T) @[Misc.scala 214:29]
    skip
    node _get_a_mask_acc_T_1 = and(get_a_mask_size, get_a_mask_bit) @[Misc.scala 214:38]
    node get_a_mask_acc_1 = or(_get_a_mask_T, _get_a_mask_acc_T_1) @[Misc.scala 214:29]
    node get_a_mask_size_1 = bits(get_a_mask_sizeOH, 1, 1) @[Misc.scala 208:26]
    node get_a_mask_bit_1 = bits(s2_req_addr, 1, 1) @[Misc.scala 209:26]
    node get_a_mask_nbit_1 = not(get_a_mask_bit_1) @[Misc.scala 210:20]
    node get_a_mask_eq_2 = and(get_a_mask_nbit, get_a_mask_nbit_1) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_2 = and(get_a_mask_size_1, get_a_mask_eq_2) @[Misc.scala 214:38]
    node get_a_mask_acc_2 = or(get_a_mask_acc, _get_a_mask_acc_T_2) @[Misc.scala 214:29]
    node get_a_mask_eq_3 = and(get_a_mask_nbit, get_a_mask_bit_1) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_3 = and(get_a_mask_size_1, get_a_mask_eq_3) @[Misc.scala 214:38]
    node get_a_mask_acc_3 = or(get_a_mask_acc, _get_a_mask_acc_T_3) @[Misc.scala 214:29]
    node get_a_mask_eq_4 = and(get_a_mask_bit, get_a_mask_nbit_1) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_4 = and(get_a_mask_size_1, get_a_mask_eq_4) @[Misc.scala 214:38]
    node get_a_mask_acc_4 = or(get_a_mask_acc_1, _get_a_mask_acc_T_4) @[Misc.scala 214:29]
    node get_a_mask_eq_5 = and(get_a_mask_bit, get_a_mask_bit_1) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_5 = and(get_a_mask_size_1, get_a_mask_eq_5) @[Misc.scala 214:38]
    node get_a_mask_acc_5 = or(get_a_mask_acc_1, _get_a_mask_acc_T_5) @[Misc.scala 214:29]
    node get_a_mask_size_2 = bits(get_a_mask_sizeOH, 0, 0) @[Misc.scala 208:26]
    node get_a_mask_bit_2 = bits(s2_req_addr, 0, 0) @[Misc.scala 209:26]
    node get_a_mask_nbit_2 = not(get_a_mask_bit_2) @[Misc.scala 210:20]
    node get_a_mask_eq_6 = and(get_a_mask_eq_2, get_a_mask_nbit_2) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_6 = and(get_a_mask_size_2, get_a_mask_eq_6) @[Misc.scala 214:38]
    node get_a_mask_lo_lo_lo = or(get_a_mask_acc_2, _get_a_mask_acc_T_6) @[Misc.scala 214:29]
    node get_a_mask_eq_7 = and(get_a_mask_eq_2, get_a_mask_bit_2) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_7 = and(get_a_mask_size_2, get_a_mask_eq_7) @[Misc.scala 214:38]
    node get_a_mask_lo_lo_hi = or(get_a_mask_acc_2, _get_a_mask_acc_T_7) @[Misc.scala 214:29]
    node get_a_mask_eq_8 = and(get_a_mask_eq_3, get_a_mask_nbit_2) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_8 = and(get_a_mask_size_2, get_a_mask_eq_8) @[Misc.scala 214:38]
    node get_a_mask_lo_hi_lo = or(get_a_mask_acc_3, _get_a_mask_acc_T_8) @[Misc.scala 214:29]
    node get_a_mask_eq_9 = and(get_a_mask_eq_3, get_a_mask_bit_2) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_9 = and(get_a_mask_size_2, get_a_mask_eq_9) @[Misc.scala 214:38]
    node get_a_mask_lo_hi_hi = or(get_a_mask_acc_3, _get_a_mask_acc_T_9) @[Misc.scala 214:29]
    node get_a_mask_eq_10 = and(get_a_mask_eq_4, get_a_mask_nbit_2) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_10 = and(get_a_mask_size_2, get_a_mask_eq_10) @[Misc.scala 214:38]
    node get_a_mask_hi_lo_lo = or(get_a_mask_acc_4, _get_a_mask_acc_T_10) @[Misc.scala 214:29]
    node get_a_mask_eq_11 = and(get_a_mask_eq_4, get_a_mask_bit_2) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_11 = and(get_a_mask_size_2, get_a_mask_eq_11) @[Misc.scala 214:38]
    node get_a_mask_hi_lo_hi = or(get_a_mask_acc_4, _get_a_mask_acc_T_11) @[Misc.scala 214:29]
    node get_a_mask_eq_12 = and(get_a_mask_eq_5, get_a_mask_nbit_2) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_12 = and(get_a_mask_size_2, get_a_mask_eq_12) @[Misc.scala 214:38]
    node get_a_mask_hi_hi_lo = or(get_a_mask_acc_5, _get_a_mask_acc_T_12) @[Misc.scala 214:29]
    node get_a_mask_eq_13 = and(get_a_mask_eq_5, get_a_mask_bit_2) @[Misc.scala 213:27]
    node _get_a_mask_acc_T_13 = and(get_a_mask_size_2, get_a_mask_eq_13) @[Misc.scala 214:38]
    node get_a_mask_hi_hi_hi = or(get_a_mask_acc_5, _get_a_mask_acc_T_13) @[Misc.scala 214:29]
    node get_a_mask_lo_lo = cat(get_a_mask_lo_lo_hi, get_a_mask_lo_lo_lo) @[Cat.scala 30:58]
    node get_a_mask_lo_hi = cat(get_a_mask_lo_hi_hi, get_a_mask_lo_hi_lo) @[Cat.scala 30:58]
    node get_a_mask_lo = cat(get_a_mask_lo_hi, get_a_mask_lo_lo) @[Cat.scala 30:58]
    node get_a_mask_hi_lo = cat(get_a_mask_hi_lo_hi, get_a_mask_hi_lo_lo) @[Cat.scala 30:58]
    node get_a_mask_hi_hi = cat(get_a_mask_hi_hi_hi, get_a_mask_hi_hi_lo) @[Cat.scala 30:58]
    node get_a_mask_hi = cat(get_a_mask_hi_hi, get_a_mask_hi_lo) @[Cat.scala 30:58]
    node get_mask = cat(get_a_mask_hi, get_a_mask_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _atomics_T = eq(UInt<5>("h4"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    skip
    node _atomics_T_1_opcode = mux(_atomics_T, UInt<3>("h3"), UInt<3>("h0")) @[Mux.scala 80:57]
    skip
    skip
    skip
    node atomics_a_size = pad(s2_req_size, 4) @[Edges.scala 513:17 516:15]
    skip
    node _atomics_T_1_size = mux(_atomics_T, atomics_a_size, UInt<4>("h0")) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_1_source = and(_atomics_T, a_source) @[Mux.scala 80:57]
    node atomics_a_address = bits(s2_req_addr, 31, 0) @[Edges.scala 513:17 518:15]
    skip
    node _atomics_T_1_address = mux(_atomics_T, atomics_a_address, UInt<32>("h0")) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_1_mask = mux(_atomics_T, get_mask, UInt<8>("h0")) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_1_data = mux(_atomics_T, pstore1_data, UInt<64>("h0")) @[Mux.scala 80:57]
    skip
    skip
    skip
    node _atomics_T_2 = eq(UInt<5>("h9"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    node _atomics_T_3_opcode = mux(_atomics_T_2, UInt<3>("h3"), _atomics_T_1_opcode) @[Mux.scala 80:57]
    skip
    node _atomics_T_3_param = mux(_atomics_T_2, UInt<3>("h0"), _atomics_T_1_opcode) @[Mux.scala 80:57]
    skip
    node _atomics_T_3_size = mux(_atomics_T_2, atomics_a_size, _atomics_T_1_size) @[Mux.scala 80:57]
    skip
    node _atomics_T_3_source = mux(_atomics_T_2, a_source, _atomics_T_1_source) @[Mux.scala 80:57]
    skip
    node _atomics_T_3_address = mux(_atomics_T_2, atomics_a_address, _atomics_T_1_address) @[Mux.scala 80:57]
    skip
    node _atomics_T_3_mask = mux(_atomics_T_2, get_mask, _atomics_T_1_mask) @[Mux.scala 80:57]
    skip
    node _atomics_T_3_data = mux(_atomics_T_2, pstore1_data, _atomics_T_1_data) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_4 = eq(UInt<5>("ha"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    node _atomics_T_5_opcode = mux(_atomics_T_4, UInt<3>("h3"), _atomics_T_3_opcode) @[Mux.scala 80:57]
    skip
    node _atomics_T_5_param = mux(_atomics_T_4, UInt<3>("h1"), _atomics_T_3_param) @[Mux.scala 80:57]
    skip
    node _atomics_T_5_size = mux(_atomics_T_4, atomics_a_size, _atomics_T_3_size) @[Mux.scala 80:57]
    skip
    node _atomics_T_5_source = mux(_atomics_T_4, a_source, _atomics_T_3_source) @[Mux.scala 80:57]
    skip
    node _atomics_T_5_address = mux(_atomics_T_4, atomics_a_address, _atomics_T_3_address) @[Mux.scala 80:57]
    skip
    node _atomics_T_5_mask = mux(_atomics_T_4, get_mask, _atomics_T_3_mask) @[Mux.scala 80:57]
    skip
    node _atomics_T_5_data = mux(_atomics_T_4, pstore1_data, _atomics_T_3_data) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_6 = eq(UInt<5>("hb"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    node _atomics_T_7_opcode = mux(_atomics_T_6, UInt<3>("h3"), _atomics_T_5_opcode) @[Mux.scala 80:57]
    skip
    node _atomics_T_7_param = mux(_atomics_T_6, UInt<3>("h2"), _atomics_T_5_param) @[Mux.scala 80:57]
    skip
    node _atomics_T_7_size = mux(_atomics_T_6, atomics_a_size, _atomics_T_5_size) @[Mux.scala 80:57]
    skip
    node _atomics_T_7_source = mux(_atomics_T_6, a_source, _atomics_T_5_source) @[Mux.scala 80:57]
    skip
    node _atomics_T_7_address = mux(_atomics_T_6, atomics_a_address, _atomics_T_5_address) @[Mux.scala 80:57]
    skip
    node _atomics_T_7_mask = mux(_atomics_T_6, get_mask, _atomics_T_5_mask) @[Mux.scala 80:57]
    skip
    node _atomics_T_7_data = mux(_atomics_T_6, pstore1_data, _atomics_T_5_data) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_8 = eq(UInt<5>("h8"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    node _atomics_T_9_opcode = mux(_atomics_T_8, UInt<3>("h2"), _atomics_T_7_opcode) @[Mux.scala 80:57]
    skip
    node _atomics_T_9_param = mux(_atomics_T_8, UInt<3>("h4"), _atomics_T_7_param) @[Mux.scala 80:57]
    skip
    node _atomics_T_9_size = mux(_atomics_T_8, atomics_a_size, _atomics_T_7_size) @[Mux.scala 80:57]
    skip
    node _atomics_T_9_source = mux(_atomics_T_8, a_source, _atomics_T_7_source) @[Mux.scala 80:57]
    skip
    node _atomics_T_9_address = mux(_atomics_T_8, atomics_a_address, _atomics_T_7_address) @[Mux.scala 80:57]
    skip
    node _atomics_T_9_mask = mux(_atomics_T_8, get_mask, _atomics_T_7_mask) @[Mux.scala 80:57]
    skip
    node _atomics_T_9_data = mux(_atomics_T_8, pstore1_data, _atomics_T_7_data) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_10 = eq(UInt<5>("hc"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    node _atomics_T_11_opcode = mux(_atomics_T_10, UInt<3>("h2"), _atomics_T_9_opcode) @[Mux.scala 80:57]
    skip
    node _atomics_T_11_param = mux(_atomics_T_10, UInt<3>("h0"), _atomics_T_9_param) @[Mux.scala 80:57]
    skip
    node _atomics_T_11_size = mux(_atomics_T_10, atomics_a_size, _atomics_T_9_size) @[Mux.scala 80:57]
    skip
    node _atomics_T_11_source = mux(_atomics_T_10, a_source, _atomics_T_9_source) @[Mux.scala 80:57]
    skip
    node _atomics_T_11_address = mux(_atomics_T_10, atomics_a_address, _atomics_T_9_address) @[Mux.scala 80:57]
    skip
    node _atomics_T_11_mask = mux(_atomics_T_10, get_mask, _atomics_T_9_mask) @[Mux.scala 80:57]
    skip
    node _atomics_T_11_data = mux(_atomics_T_10, pstore1_data, _atomics_T_9_data) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_12 = eq(UInt<5>("hd"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    node _atomics_T_13_opcode = mux(_atomics_T_12, UInt<3>("h2"), _atomics_T_11_opcode) @[Mux.scala 80:57]
    skip
    node _atomics_T_13_param = mux(_atomics_T_12, UInt<3>("h1"), _atomics_T_11_param) @[Mux.scala 80:57]
    skip
    node _atomics_T_13_size = mux(_atomics_T_12, atomics_a_size, _atomics_T_11_size) @[Mux.scala 80:57]
    skip
    node _atomics_T_13_source = mux(_atomics_T_12, a_source, _atomics_T_11_source) @[Mux.scala 80:57]
    skip
    node _atomics_T_13_address = mux(_atomics_T_12, atomics_a_address, _atomics_T_11_address) @[Mux.scala 80:57]
    skip
    node _atomics_T_13_mask = mux(_atomics_T_12, get_mask, _atomics_T_11_mask) @[Mux.scala 80:57]
    skip
    node _atomics_T_13_data = mux(_atomics_T_12, pstore1_data, _atomics_T_11_data) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_14 = eq(UInt<5>("he"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    node _atomics_T_15_opcode = mux(_atomics_T_14, UInt<3>("h2"), _atomics_T_13_opcode) @[Mux.scala 80:57]
    skip
    node _atomics_T_15_param = mux(_atomics_T_14, UInt<3>("h2"), _atomics_T_13_param) @[Mux.scala 80:57]
    skip
    node _atomics_T_15_size = mux(_atomics_T_14, atomics_a_size, _atomics_T_13_size) @[Mux.scala 80:57]
    skip
    node _atomics_T_15_source = mux(_atomics_T_14, a_source, _atomics_T_13_source) @[Mux.scala 80:57]
    skip
    node _atomics_T_15_address = mux(_atomics_T_14, atomics_a_address, _atomics_T_13_address) @[Mux.scala 80:57]
    skip
    node _atomics_T_15_mask = mux(_atomics_T_14, get_mask, _atomics_T_13_mask) @[Mux.scala 80:57]
    skip
    node _atomics_T_15_data = mux(_atomics_T_14, pstore1_data, _atomics_T_13_data) @[Mux.scala 80:57]
    skip
    skip
    node _atomics_T_16 = eq(UInt<5>("hf"), s2_req_cmd) @[Mux.scala 80:60]
    skip
    node atomics_opcode = mux(_atomics_T_16, UInt<3>("h2"), _atomics_T_15_opcode) @[Mux.scala 80:57]
    skip
    node atomics_param = mux(_atomics_T_16, UInt<3>("h3"), _atomics_T_15_param) @[Mux.scala 80:57]
    skip
    node atomics_size = mux(_atomics_T_16, atomics_a_size, _atomics_T_15_size) @[Mux.scala 80:57]
    skip
    node atomics_source = mux(_atomics_T_16, a_source, _atomics_T_15_source) @[Mux.scala 80:57]
    skip
    node atomics_address = mux(_atomics_T_16, atomics_a_address, _atomics_T_15_address) @[Mux.scala 80:57]
    skip
    node atomics_mask = mux(_atomics_T_16, get_mask, _atomics_T_15_mask) @[Mux.scala 80:57]
    skip
    node atomics_data = mux(_atomics_T_16, pstore1_data, _atomics_T_15_data) @[Mux.scala 80:57]
    skip
    skip
    skip
    skip
    node _tl_out_a_valid_T_2 = not(_block_probe_for_pending_release_ack_T) @[DCache.scala 578:8]
    node _tl_out_a_valid_T_3 = and(s2_valid_cached_miss, _tl_out_a_valid_T_2) @[DCache.scala 577:29]
    node _tl_out_a_valid_T_4 = not(release_ack_wait) @[DCache.scala 579:45]
    skip
    skip
    node _tl_out_a_valid_T_7 = not(s2_victim_dirty) @[DCache.scala 579:89]
    skip
    node _tl_out_a_valid_T_9 = and(_tl_out_a_valid_T_3, _tl_out_a_valid_T_7) @[DCache.scala 578:49]
    node tl_out_a_valid = or(s2_valid_uncached_pending, _tl_out_a_valid_T_9) @[DCache.scala 576:32]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _tl_out_a_bits_T_3 = not(s2_write) @[DCache.scala 581:9]
    skip
    node _tl_out_a_bits_T_5 = not(s2_read) @[DCache.scala 583:9]
    skip
    node _tl_out_a_bits_T_6_opcode = mux(_tl_out_a_bits_T_5, UInt<3>("h0"), atomics_opcode) @[DCache.scala 583:8]
    skip
    node _tl_out_a_bits_T_6_param = mux(_tl_out_a_bits_T_5, UInt<3>("h0"), atomics_param) @[DCache.scala 583:8]
    skip
    node _tl_out_a_bits_T_6_size = mux(_tl_out_a_bits_T_5, atomics_a_size, atomics_size) @[DCache.scala 583:8]
    skip
    node _tl_out_a_bits_T_6_source = mux(_tl_out_a_bits_T_5, a_source, atomics_source) @[DCache.scala 583:8]
    skip
    node _tl_out_a_bits_T_6_address = mux(_tl_out_a_bits_T_5, atomics_a_address, atomics_address) @[DCache.scala 583:8]
    skip
    node _tl_out_a_bits_T_6_mask = mux(_tl_out_a_bits_T_5, get_mask, atomics_mask) @[DCache.scala 583:8]
    skip
    node _tl_out_a_bits_T_6_data = mux(_tl_out_a_bits_T_5, pstore1_data, atomics_data) @[DCache.scala 583:8]
    skip
    skip
    skip
    node _tl_out_a_bits_T_7_opcode = mux(_s2_write_T_1, UInt<3>("h1"), _tl_out_a_bits_T_6_opcode) @[DCache.scala 582:8]
    skip
    node _tl_out_a_bits_T_7_param = mux(_s2_write_T_1, UInt<3>("h0"), _tl_out_a_bits_T_6_param) @[DCache.scala 582:8]
    skip
    node _tl_out_a_bits_T_7_size = mux(_s2_write_T_1, atomics_a_size, _tl_out_a_bits_T_6_size) @[DCache.scala 582:8]
    skip
    node _tl_out_a_bits_T_7_source = mux(_s2_write_T_1, a_source, _tl_out_a_bits_T_6_source) @[DCache.scala 582:8]
    skip
    node _tl_out_a_bits_T_7_address = mux(_s2_write_T_1, atomics_a_address, _tl_out_a_bits_T_6_address) @[DCache.scala 582:8]
    node putpartial_mask = bits(a_mask, 7, 0) @[Edges.scala 483:17 489:15]
    node _tl_out_a_bits_T_7_mask = mux(_s2_write_T_1, putpartial_mask, _tl_out_a_bits_T_6_mask) @[DCache.scala 582:8]
    skip
    node _tl_out_a_bits_T_7_data = mux(_s2_write_T_1, pstore1_data, _tl_out_a_bits_T_6_data) @[DCache.scala 582:8]
    skip
    skip
    skip
    node _tl_out_a_bits_T_8_opcode = mux(_tl_out_a_bits_T_3, UInt<3>("h4"), _tl_out_a_bits_T_7_opcode) @[DCache.scala 581:8]
    skip
    node _tl_out_a_bits_T_8_param = mux(_tl_out_a_bits_T_3, UInt<3>("h0"), _tl_out_a_bits_T_7_param) @[DCache.scala 581:8]
    skip
    node _tl_out_a_bits_T_8_size = mux(_tl_out_a_bits_T_3, atomics_a_size, _tl_out_a_bits_T_7_size) @[DCache.scala 581:8]
    skip
    node _tl_out_a_bits_T_8_source = mux(_tl_out_a_bits_T_3, a_source, _tl_out_a_bits_T_7_source) @[DCache.scala 581:8]
    skip
    node _tl_out_a_bits_T_8_address = mux(_tl_out_a_bits_T_3, atomics_a_address, _tl_out_a_bits_T_7_address) @[DCache.scala 581:8]
    skip
    node _tl_out_a_bits_T_8_mask = mux(_tl_out_a_bits_T_3, get_mask, _tl_out_a_bits_T_7_mask) @[DCache.scala 581:8]
    skip
    node _tl_out_a_bits_T_8_data = mux(_tl_out_a_bits_T_3, UInt<64>("h0"), _tl_out_a_bits_T_7_data) @[DCache.scala 581:8]
    skip
    skip
    skip
    skip
    node tl_out_a_bits_a_param = pad(s2_grow_param, 3) @[Edges.scala 345:17 347:15]
    skip
    skip
    skip
    skip
    skip
    node tl_out_a_bits_a_address = bits(acquire_address, 31, 0) @[Edges.scala 345:17 350:15]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _a_sel_T = dshl(UInt<1>("h1"), a_source) @[OneHot.scala 65:12]
    skip
    node a_sel = shr(_a_sel_T, 1) @[DCache.scala 602:66]
    skip
    node _T_263 = and(auto_out_a_ready, tl_out_a_valid) @[Decoupled.scala 40:37]
    skip
    skip
    skip
    skip
    node _GEN_142 = or(a_sel, uncachedInFlight_0) @[DCache.scala 606:18 607:13 215:33]
    node _GEN_143 = mux(a_sel, s2_req_addr, uncachedReqs_0_addr) @[DCache.scala 606:18 608:13 216:25]
    node _GEN_144 = mux(a_sel, s2_req_tag, uncachedReqs_0_tag) @[DCache.scala 606:18 608:13 216:25]
    skip
    node _GEN_146 = mux(a_sel, s2_req_size, uncachedReqs_0_size) @[DCache.scala 606:18 608:13 216:25]
    node _GEN_147 = mux(a_sel, s2_req_signed, uncachedReqs_0_signed) @[DCache.scala 606:18 608:13 216:25]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_154 = mux(s2_uncached, _GEN_142, uncachedInFlight_0) @[DCache.scala 604:24 215:33]
    node _GEN_155 = mux(s2_uncached, _GEN_143, uncachedReqs_0_addr) @[DCache.scala 604:24 216:25]
    node _GEN_156 = mux(s2_uncached, _GEN_144, uncachedReqs_0_tag) @[DCache.scala 604:24 216:25]
    skip
    node _GEN_158 = mux(s2_uncached, _GEN_146, uncachedReqs_0_size) @[DCache.scala 604:24 216:25]
    node _GEN_159 = mux(s2_uncached, _GEN_147, uncachedReqs_0_signed) @[DCache.scala 604:24 216:25]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_166 = mux(s2_uncached, cached_grant_wait, UInt<1>("h1")) @[DCache.scala 604:24 201:30 613:25]
    node _GEN_167 = mux(s2_uncached, refill_way, s2_victim_or_hit_way) @[DCache.scala 208:23 604:24 614:18]
    node _GEN_168 = mux(_T_263, _GEN_154, uncachedInFlight_0) @[DCache.scala 603:26 215:33]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_180 = mux(_T_263, _GEN_166, cached_grant_wait) @[DCache.scala 603:26 201:30]
    skip
    skip
    skip
    skip
    node _beats1_decode_T_1 = dshl(UInt<12>("hfff"), auto_out_d_bits_size) @[package.scala 234:77]
    node _beats1_decode_T_2 = bits(_beats1_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beats1_decode_T_3 = not(_beats1_decode_T_2) @[package.scala 234:46]
    node beats1_decode = shr(_beats1_decode_T_3, 3) @[Edges.scala 219:59]
    node beats1_opdata = bits(auto_out_d_bits_opcode, 0, 0) @[Edges.scala 105:36]
    node beats1 = mux(beats1_opdata, beats1_decode, UInt<9>("h0")) @[Edges.scala 220:14]
    node _counter1_T = sub(counter, UInt<9>("h1")) @[Edges.scala 229:28]
    node counter1 = tail(_counter1_T, 1) @[Edges.scala 229:28]
    node _last_T = eq(counter, UInt<9>("h1")) @[Edges.scala 231:25]
    node _last_T_1 = eq(beats1, UInt<9>("h0")) @[Edges.scala 231:47]
    node d_last = or(_last_T, _last_T_1) @[Edges.scala 231:37]
    node d_done = and(d_last, _T_271) @[Edges.scala 232:22]
    node _count_T = not(counter1) @[Edges.scala 233:27]
    node count = and(beats1, _count_T) @[Edges.scala 233:25]
    node _counter_T = mux(d_first, beats1, counter1) @[Edges.scala 235:21]
    node _GEN_182 = mux(_T_271, _counter_T, counter) @[Edges.scala 234:17 235:15 228:27]
    node d_address_inc = shl(count, 3) @[Edges.scala 268:29]
    skip
    skip
    skip
    skip
    node _tl_d_data_encoded_T_4 = not(grantIsUncached) @[DCache.scala 635:129]
    skip
    node grantIsVoluntary = eq(auto_out_d_bits_opcode, UInt<3>("h6")) @[DCache.scala 637:32]
    skip
    node _blockProbeAfterGrantCount_T = sub(blockProbeAfterGrantCount, UInt<3>("h1")) @[DCache.scala 641:97]
    node _blockProbeAfterGrantCount_T_1 = tail(_blockProbeAfterGrantCount_T, 1) @[DCache.scala 641:97]
    node _GEN_183 = mux(_block_probe_for_core_progress_T, _blockProbeAfterGrantCount_T_1, blockProbeAfterGrantCount) @[DCache.scala 640:38 641:{40,68}]
    skip
    skip
    node _uncachedRespIdxOH_T = dshl(UInt<1>("h1"), auto_out_d_bits_source) @[OneHot.scala 65:12]
    skip
    node uncachedRespIdxOH = shr(_uncachedRespIdxOH_T, 1) @[DCache.scala 644:90]
    skip
    skip
    node _T_273 = or(cached_grant_wait, reset) @[DCache.scala 649:13]
    node _T_274 = not(_T_273) @[DCache.scala 649:13]
    node _GEN_184 = mux(d_last, UInt<1>("h0"), _GEN_180) @[DCache.scala 650:20 651:27]
    node _GEN_185 = mux(d_last, UInt<1>("h0"), UInt<1>("h1")) @[DCache.scala 650:20 648:23 652:25]
    node _GEN_186 = mux(d_last, UInt<3>("h7"), _GEN_183) @[DCache.scala 650:20 653:35]
    skip
    skip
    node _T_276 = and(uncachedRespIdxOH, d_last) @[DCache.scala 658:17]
    skip
    node _T_278 = or(uncachedInFlight_0, reset) @[DCache.scala 659:17]
    node _T_279 = not(_T_278) @[DCache.scala 659:17]
    node _GEN_188 = mux(_T_276, UInt<1>("h0"), _GEN_168) @[DCache.scala 658:28 660:13]
    node _s2_req_addr_dontCareBits_T = shr(s1_paddr, 3) @[DCache.scala 673:41]
    node dontCareBits = shl(_s2_req_addr_dontCareBits_T, 3) @[DCache.scala 673:55]
    skip
    node _s2_req_addr_T = bits(uncachedReqs_0_addr, 2, 0) @[DCache.scala 674:45]
    node _GEN_359 = pad(_s2_req_addr_T, 32) @[DCache.scala 674:26]
    node _s2_req_addr_T_1 = or(dontCareBits, _GEN_359) @[DCache.scala 674:26]
    node _GEN_190 = mux(grantIsUncachedData, UInt<5>("h0"), _GEN_60) @[DCache.scala 663:34 667:22]
    skip
    node _GEN_191 = mux(grantIsUncachedData, uncachedReqs_0_size, _GEN_61) @[DCache.scala 663:34 668:23]
    skip
    node _GEN_192 = mux(grantIsUncachedData, uncachedReqs_0_signed, _GEN_62) @[DCache.scala 663:34 669:25]
    skip
    node _GEN_193 = mux(grantIsUncachedData, uncachedReqs_0_tag, _GEN_59) @[DCache.scala 663:34 670:22]
    node _GEN_194 = mux(grantIsUncachedData, pad(_s2_req_addr_T_1, 40), _GEN_58) @[DCache.scala 663:34 671:23]
    skip
    skip
    node _T_281 = or(release_ack_wait, reset) @[DCache.scala 680:13]
    node _T_282 = not(_T_281) @[DCache.scala 680:13]
    node _GEN_196 = mux(grantIsVoluntary, UInt<1>("h0"), release_ack_wait) @[DCache.scala 679:36 681:24 204:29]
    node _GEN_197 = mux(grantIsUncached, _GEN_188, _GEN_168) @[DCache.scala 656:35]
    node _GEN_199 = mux(grantIsUncached, _GEN_190, _GEN_60) @[DCache.scala 656:35]
    node _GEN_200 = mux(grantIsUncached, _GEN_191, _GEN_61) @[DCache.scala 656:35]
    node _GEN_201 = mux(grantIsUncached, _GEN_192, _GEN_62) @[DCache.scala 656:35]
    node _GEN_202 = mux(grantIsUncached, _GEN_193, _GEN_59) @[DCache.scala 656:35]
    node _GEN_203 = mux(grantIsUncached, _GEN_194, _GEN_58) @[DCache.scala 656:35]
    skip
    node _GEN_205 = mux(grantIsUncached, release_ack_wait, _GEN_196) @[DCache.scala 204:29 656:35]
    node _GEN_206 = mux(grantIsCached, _GEN_185, grantInProgress) @[DCache.scala 647:26 639:28]
    node _GEN_207 = mux(grantIsCached, _GEN_184, _GEN_180) @[DCache.scala 647:26]
    node _GEN_208 = mux(grantIsCached, _GEN_186, _GEN_183) @[DCache.scala 647:26]
    node _GEN_209 = and(grantIsCached, d_last) @[DCache.scala 647:26 Replacement.scala 38:11]
    node _GEN_210 = mux(grantIsCached, _GEN_168, _GEN_197) @[DCache.scala 647:26]
    node _GEN_212 = mux(grantIsCached, _GEN_60, _GEN_199) @[DCache.scala 647:26]
    node _GEN_213 = mux(grantIsCached, _GEN_61, _GEN_200) @[DCache.scala 647:26]
    node _GEN_214 = mux(grantIsCached, _GEN_62, _GEN_201) @[DCache.scala 647:26]
    node _GEN_215 = mux(grantIsCached, _GEN_59, _GEN_202) @[DCache.scala 647:26]
    node _GEN_216 = mux(grantIsCached, _GEN_58, _GEN_203) @[DCache.scala 647:26]
    skip
    node _GEN_218 = mux(grantIsCached, release_ack_wait, _GEN_205) @[DCache.scala 647:26 204:29]
    node _GEN_219 = mux(_T_271, _GEN_206, grantInProgress) @[DCache.scala 646:26 639:28]
    node _GEN_220 = mux(_T_271, _GEN_207, _GEN_180) @[DCache.scala 646:26]
    node _GEN_221 = mux(_T_271, _GEN_208, _GEN_183) @[DCache.scala 646:26]
    skip
    node _GEN_223 = mux(_T_271, _GEN_210, _GEN_168) @[DCache.scala 646:26]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_231 = mux(_T_271, _GEN_218, release_ack_wait) @[DCache.scala 646:26 204:29]
    node _bundleOut_0_e_valid_T = and(auto_out_d_valid, d_first) @[DCache.scala 686:36]
    node _bundleOut_0_e_valid_T_1 = and(_bundleOut_0_e_valid_T, grantIsCached) @[DCache.scala 686:47]
    node _bundleOut_0_e_valid_T_2 = and(_bundleOut_0_e_valid_T_1, canAcceptCachedGrant) @[DCache.scala 686:64]
    node tl_out__e_valid = mux(_T_292, UInt<1>("h0"), _bundleOut_0_e_valid_T_2) @[DCache.scala 686:18 694:51 695:20]
    skip
    node _T_283 = and(auto_out_e_ready, tl_out__e_valid) @[Decoupled.scala 40:37]
    skip
    node _T_285 = and(_T_271, d_first) @[DCache.scala 688:47]
    node _T_286 = and(_T_285, grantIsCached) @[DCache.scala 688:58]
    node _T_287 = eq(_T_283, _T_286) @[DCache.scala 688:26]
    skip
    node _T_289 = or(_T_287, reset) @[DCache.scala 688:9]
    node _T_290 = not(_T_289) @[DCache.scala 688:9]
    node _dataArb_io_in_1_valid_T = and(auto_out_d_valid, grantIsRefill) @[DCache.scala 693:44]
    node _dataArb_io_in_1_valid_T_1 = and(_dataArb_io_in_1_valid_T, canAcceptCachedGrant) @[DCache.scala 693:61]
    node _dataArb_io_in_1_bits_addr_T = shr(s2_vaddr, 6) @[DCache.scala 700:46]
    node _dataArb_io_in_1_bits_addr_T_1 = shl(_dataArb_io_in_1_bits_addr_T, 6) @[DCache.scala 700:57]
    node _GEN_360 = pad(d_address_inc, 40) @[DCache.scala 700:67]
    node _dataArb_io_in_1_bits_addr_T_2 = or(_dataArb_io_in_1_bits_addr_T_1, _GEN_360) @[DCache.scala 700:67]
    skip
    skip
    node _metaArb_io_in_3_valid_T = and(grantIsCached, d_done) @[DCache.scala 713:43]
    skip
    node _metaArb_io_in_3_valid_T_1 = not(auto_out_d_bits_denied) @[DCache.scala 713:56]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _metaArb_io_in_3_bits_data_T_1 = cat(hi_1, auto_out_d_bits_param) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _metaArb_io_in_3_bits_data_T_6 = eq(UInt<4>("h1"), _metaArb_io_in_3_bits_data_T_1) @[Mux.scala 80:60]
    node _metaArb_io_in_3_bits_data_T_7 = mux(_metaArb_io_in_3_bits_data_T_6, UInt<2>("h1"), UInt<2>("h0")) @[Mux.scala 80:57]
    node _metaArb_io_in_3_bits_data_T_8 = eq(UInt<4>("h0"), _metaArb_io_in_3_bits_data_T_1) @[Mux.scala 80:60]
    node _metaArb_io_in_3_bits_data_T_9 = mux(_metaArb_io_in_3_bits_data_T_8, UInt<2>("h2"), _metaArb_io_in_3_bits_data_T_7) @[Mux.scala 80:57]
    node _metaArb_io_in_3_bits_data_T_10 = eq(UInt<4>("h4"), _metaArb_io_in_3_bits_data_T_1) @[Mux.scala 80:60]
    node _metaArb_io_in_3_bits_data_T_11 = mux(_metaArb_io_in_3_bits_data_T_10, UInt<2>("h2"), _metaArb_io_in_3_bits_data_T_9) @[Mux.scala 80:57]
    node _metaArb_io_in_3_bits_data_T_12 = eq(UInt<4>("hc"), _metaArb_io_in_3_bits_data_T_1) @[Mux.scala 80:60]
    node metaArb_io_in_3_bits_data_meta_state = mux(_metaArb_io_in_3_bits_data_T_12, UInt<2>("h3"), _metaArb_io_in_3_bits_data_T_11) @[Mux.scala 80:57]
    skip
    skip
    skip
    skip
    skip
    node _GEN_234 = mux(auto_out_d_valid, UInt<1>("h0"), _GEN_32) @[DCache.scala 727:29 728:26]
    node _GEN_235 = or(auto_out_d_valid, _dataArb_io_in_1_valid_T_1) @[DCache.scala 693:26 727:29 729:32]
    node _GEN_236 = mux(auto_out_d_valid, UInt<1>("h0"), UInt<1>("h1")) @[DCache.scala 727:29 699:33 730:37]
    node _GEN_237 = mux(auto_out_d_valid, _T_291, dataArb.io_out_valid) @[DCache.scala 723:24 727:29 731:28]
    skip
    skip
    skip
    skip
    skip
    skip
    node _metaArb_io_in_6_valid_T = not(block_probe_for_core_progress) @[DCache.scala 741:48]
    node _metaArb_io_in_6_valid_T_1 = or(_metaArb_io_in_6_valid_T, lrscBackingOff) @[DCache.scala 741:79]
    node _metaArb_io_in_6_valid_T_2 = and(auto_out_b_valid, _metaArb_io_in_6_valid_T_1) @[DCache.scala 741:44]
    node _metaArb_io_in_6_bits_idx_T = bits(auto_out_b_bits_address, 11, 6) @[DCache.scala 1170:47]
    node metaArb_io_in_6_bits_addr_hi = shr(io_cpu_req_bits_addr, 32) @[DCache.scala 745:58]
    node _metaArb_io_in_6_bits_addr_T = cat(metaArb_io_in_6_bits_addr_hi, auto_out_b_bits_address) @[Cat.scala 30:58]
    node _counter1_T_1 = sub(counter_1, UInt<9>("h1")) @[Edges.scala 229:28]
    node counter1_1 = tail(_counter1_T_1, 1) @[Edges.scala 229:28]
    node _count_T_1 = not(counter1_1) @[Edges.scala 233:27]
    node c_count = and(beats1_1, _count_T_1) @[Edges.scala 233:25]
    node _counter_T_1 = mux(c_first, beats1_1, counter1_1) @[Edges.scala 235:21]
    node _GEN_243 = mux(_T_297, _counter_T_1, counter_1) @[Edges.scala 234:17 235:15 228:27]
    skip
    reg s1_release_data_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_release_data_valid) @[DCache.scala 773:34]
    skip
    node _releaseRejected_T_1 = not(_T_297) @[DCache.scala 775:47]
    node releaseRejected = and(s2_release_data_valid, _releaseRejected_T_1) @[DCache.scala 775:44]
    skip
    node _s2_release_data_valid_x61_T = not(releaseRejected) @[DCache.scala 774:67]
    skip
    node _releaseDataBeat_T = cat(UInt<1>("h0"), c_count) @[Cat.scala 30:58]
    node _releaseDataBeat_T_1 = cat(UInt<1>("h0"), s2_release_data_valid) @[Cat.scala 30:58]
    node _GEN_361 = pad(s1_release_data_valid, 2) @[DCache.scala 776:101]
    node _releaseDataBeat_T_2 = add(_GEN_361, _releaseDataBeat_T_1) @[DCache.scala 776:101]
    node _releaseDataBeat_T_3 = tail(_releaseDataBeat_T_2, 1) @[DCache.scala 776:101]
    node _releaseDataBeat_T_4 = mux(releaseRejected, UInt<2>("h0"), _releaseDataBeat_T_3) @[DCache.scala 776:52]
    node _GEN_362 = pad(_releaseDataBeat_T_4, 10) @[DCache.scala 776:47]
    node _releaseDataBeat_T_5 = add(_releaseDataBeat_T, _GEN_362) @[DCache.scala 776:47]
    node releaseDataBeat = tail(_releaseDataBeat_T_5, 1) @[DCache.scala 776:47]
    node _T_298 = or(s2_valid_flush_line, s2_flush_valid_pre_tag_ecc) @[DCache.scala 799:34]
    node _T_299 = or(_T_298, io_cpu_s2_nack) @[DCache.scala 799:52]
    skip
    node _T_301 = or(_T_299, reset) @[DCache.scala 799:13]
    node _T_302 = not(_T_301) @[DCache.scala 799:13]
    node _discard_line_T = bits(s2_req_size, 1, 1) @[DCache.scala 800:60]
    node discard_line = and(s2_valid_flush_line, _discard_line_T) @[DCache.scala 800:46]
    skip
    skip
    skip
    node _release_state_T = not(discard_line) @[DCache.scala 801:47]
    node _release_state_T_1 = and(s2_victim_dirty, _release_state_T) @[DCache.scala 801:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _release_state_T_13 = mux(_release_state_T_1, UInt<4>("h1"), UInt<4>("h6")) @[DCache.scala 801:27]
    node probe_bits_lo = bits(s2_req_addr, 11, 6) @[DCache.scala 804:76]
    node _probe_bits_T_1 = cat(s2_victim_tag, probe_bits_lo) @[Cat.scala 30:58]
    node res_2_address = shl(_probe_bits_T_1, 6) @[DCache.scala 804:96]
    node _GEN_244 = mux(s2_want_victimize, _release_state_T_13, release_state) @[DCache.scala 798:25 801:21 207:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _release_state_T_14 = mux(releaseDone, UInt<4>("h7"), UInt<4>("h3")) @[DCache.scala 815:29]
    node _release_state_T_15 = mux(releaseDone, UInt<4>("h0"), UInt<4>("h5")) @[DCache.scala 819:29]
    skip
    skip
    node _GEN_255 = mux(_T_303, s2_report_param, UInt<3>("h5")) @[DCache.scala 783:17 812:45 814:23]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_261 = mux(_T_303, _release_state_T_14, _release_state_T_15) @[DCache.scala 812:45 815:23 819:23]
    node _GEN_263 = mux(s2_prb_ack_data, UInt<4>("h2"), _GEN_261) @[DCache.scala 810:36 811:23]
    node _GEN_266 = mux(s2_prb_ack_data, UInt<3>("h5"), _GEN_255) @[DCache.scala 783:17 810:36]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_284 = mux(s2_probe, _GEN_263, _GEN_244) @[DCache.scala 806:21]
    node _GEN_287 = mux(s2_probe, _GEN_266, UInt<3>("h5")) @[DCache.scala 783:17 806:21]
    skip
    skip
    skip
    skip
    node _T_304 = eq(release_state, UInt<4>("h4")) @[DCache.scala 823:25]
    skip
    skip
    node _metaArb_io_in_6_bits_addr_T_1 = cat(metaArb_io_in_6_bits_addr_hi, probe_bits_address) @[Cat.scala 30:58]
    node _GEN_294 = mux(metaArb.io_in_6_ready, UInt<4>("h0"), _GEN_284) @[DCache.scala 827:37 828:23]
    node _GEN_295 = or(metaArb.io_in_6_ready, s1_probe_x12) @[DCache.scala 827:37 829:18 163:21]
    skip
    skip
    skip
    node _GEN_299 = mux(_T_304, _GEN_294, _GEN_284) @[DCache.scala 823:44]
    node _GEN_300 = mux(_T_304, _GEN_295, s1_probe_x12) @[DCache.scala 163:21 823:44]
    node _GEN_301 = mux(releaseDone, UInt<4>("h0"), _GEN_299) @[DCache.scala 834:{26,42}]
    node _GEN_303 = mux(_T_305, _GEN_301, _GEN_299) @[DCache.scala 832:47]
    node _GEN_304 = mux(releaseDone, UInt<4>("h7"), _GEN_303) @[DCache.scala 839:{26,42}]
    node _GEN_307 = mux(_T_306, s2_report_param, _GEN_287) @[DCache.scala 836:48 838:21]
    skip
    skip
    skip
    skip
    node _GEN_313 = mux(_T_306, _GEN_304, _GEN_303) @[DCache.scala 836:48]
    node _GEN_314 = mux(releaseDone, UInt<4>("h7"), _GEN_313) @[DCache.scala 843:{26,42}]
    skip
    node _GEN_316 = mux(_T_307, s2_report_param, _GEN_307) @[DCache.scala 841:48 842:21]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_322 = mux(_T_307, _GEN_314, _GEN_313) @[DCache.scala 841:48]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_330 = mux(releaseDone, UInt<4>("h6"), _GEN_322) @[DCache.scala 860:{26,42}]
    skip
    node _T_315 = and(_T_297, c_first) @[DCache.scala 861:29]
    node _GEN_331 = or(_T_315, _GEN_231) @[DCache.scala 861:41 862:26]
    node _GEN_332 = mux(_T_315, inWriteback, release_ack_dirty) @[DCache.scala 861:41 863:27 205:30]
    node _GEN_333 = mux(_T_315, probe_bits_address, release_ack_addr) @[DCache.scala 861:41 864:26 206:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node newCoh_state = mux(_T_312, voluntaryNewCoh_state, probeNewCoh_state) @[DCache.scala 845:102 858:14]
    node _GEN_343 = mux(_T_312, _GEN_330, _GEN_322) @[DCache.scala 845:102]
    node _GEN_344 = mux(_T_312, _GEN_331, _GEN_231) @[DCache.scala 845:102]
    skip
    skip
    skip
    node _dataArb_io_in_2_valid_T = lt(releaseDataBeat, UInt<10>("h8")) @[DCache.scala 873:60]
    skip
    skip
    node _dataArb_io_in_2_bits_addr_T_1 = shl(_metaArb_io_in_1_bits_idx_T, 6) @[DCache.scala 876:55]
    node _dataArb_io_in_2_bits_addr_T_2 = bits(releaseDataBeat, 2, 0) @[DCache.scala 876:90]
    node _dataArb_io_in_2_bits_addr_T_3 = shl(_dataArb_io_in_2_bits_addr_T_2, 3) @[DCache.scala 876:117]
    node _GEN_375 = pad(_dataArb_io_in_2_bits_addr_T_3, 12) @[DCache.scala 876:72]
    skip
    skip
    skip
    skip
    skip
    node _metaArb_io_in_4_valid_T_1 = eq(release_state, UInt<4>("h7")) @[package.scala 15:47]
    skip
    skip
    skip
    node metaArb_io_in_4_bits_addr_lo = bits(probe_bits_address, 11, 0) @[DCache.scala 885:90]
    skip
    skip
    node metaArb_io_in_4_bits_data_meta_tag = shr(probe_bits_address, 12) @[DCache.scala 886:78]
    skip
    skip
    skip
    skip
    node _T_316 = and(metaArb.io_in_4_ready, metaArb.io_in_4_valid) @[Decoupled.scala 40:37]
    node _GEN_347 = mux(_T_316, UInt<4>("h0"), _GEN_343) @[DCache.scala 887:{34,50}]
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_cpu_ordered_T_4 = or(s1_valid, s2_valid) @[DCache.scala 900:57]
    node _io_cpu_ordered_T_5 = or(_io_cpu_ordered_T_4, cached_grant_wait) @[DCache.scala 900:94]
    skip
    node _io_cpu_ordered_T_7 = or(_io_cpu_ordered_T_5, _s2_valid_cached_miss_T_2) @[DCache.scala 900:115]
    skip
    skip
    node _s1_xcpt_valid_T_1 = tlb.io_req_valid @[DCache.scala 902:40]
    skip
    skip
    reg io_cpu_s2_xcpt_REG : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), io_cpu_s2_xcpt_REG) @[DCache.scala 903:32]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg doUncachedResp : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), doUncachedResp) @[DCache.scala 918:27]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_321 = or(_io_cpu_s2_nack_T_4, reset) @[DCache.scala 922:11]
    node _T_322 = not(_T_321) @[DCache.scala 922:11]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_cpu_resp_bits_data_shifted_T_1 = bits(s2_data_corrected, 63, 32) @[AMOALU.scala 39:37]
    node _io_cpu_resp_bits_data_shifted_T_2 = bits(s2_data_corrected, 31, 0) @[AMOALU.scala 39:55]
    node io_cpu_resp_bits_data_shifted = mux(get_a_mask_bit, _io_cpu_resp_bits_data_shifted_T_1, _io_cpu_resp_bits_data_shifted_T_2) @[AMOALU.scala 39:24]
    skip
    skip
    node _io_cpu_resp_bits_data_T = eq(s2_req_size, UInt<2>("h2")) @[AMOALU.scala 42:26]
    skip
    node _io_cpu_resp_bits_data_T_2 = bits(io_cpu_resp_bits_data_shifted, 31, 31) @[AMOALU.scala 42:85]
    node _io_cpu_resp_bits_data_T_3 = and(s2_req_signed, _io_cpu_resp_bits_data_T_2) @[AMOALU.scala 42:76]
    skip
    node _io_cpu_resp_bits_data_T_5 = mux(_io_cpu_resp_bits_data_T_3, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 72:12]
    skip
    node io_cpu_resp_bits_data_hi = mux(_io_cpu_resp_bits_data_T, _io_cpu_resp_bits_data_T_5, _io_cpu_resp_bits_data_shifted_T_1) @[AMOALU.scala 42:20]
    node _io_cpu_resp_bits_data_T_7 = cat(io_cpu_resp_bits_data_hi, io_cpu_resp_bits_data_shifted) @[Cat.scala 30:58]
    skip
    node _io_cpu_resp_bits_data_shifted_T_4 = bits(_io_cpu_resp_bits_data_T_7, 31, 16) @[AMOALU.scala 39:37]
    node _io_cpu_resp_bits_data_shifted_T_5 = bits(_io_cpu_resp_bits_data_T_7, 15, 0) @[AMOALU.scala 39:55]
    node io_cpu_resp_bits_data_shifted_1 = mux(get_a_mask_bit_1, _io_cpu_resp_bits_data_shifted_T_4, _io_cpu_resp_bits_data_shifted_T_5) @[AMOALU.scala 39:24]
    skip
    skip
    node _io_cpu_resp_bits_data_T_8 = eq(s2_req_size, UInt<2>("h1")) @[AMOALU.scala 42:26]
    skip
    node _io_cpu_resp_bits_data_T_10 = bits(io_cpu_resp_bits_data_shifted_1, 15, 15) @[AMOALU.scala 42:85]
    node _io_cpu_resp_bits_data_T_11 = and(s2_req_signed, _io_cpu_resp_bits_data_T_10) @[AMOALU.scala 42:76]
    skip
    node _io_cpu_resp_bits_data_T_13 = mux(_io_cpu_resp_bits_data_T_11, UInt<48>("hffffffffffff"), UInt<48>("h0")) @[Bitwise.scala 72:12]
    node _io_cpu_resp_bits_data_T_14 = bits(_io_cpu_resp_bits_data_T_7, 63, 16) @[AMOALU.scala 42:98]
    node io_cpu_resp_bits_data_hi_1 = mux(_io_cpu_resp_bits_data_T_8, _io_cpu_resp_bits_data_T_13, _io_cpu_resp_bits_data_T_14) @[AMOALU.scala 42:20]
    node _io_cpu_resp_bits_data_T_15 = cat(io_cpu_resp_bits_data_hi_1, io_cpu_resp_bits_data_shifted_1) @[Cat.scala 30:58]
    skip
    node _io_cpu_resp_bits_data_shifted_T_7 = bits(_io_cpu_resp_bits_data_T_15, 15, 8) @[AMOALU.scala 39:37]
    node _io_cpu_resp_bits_data_shifted_T_8 = bits(_io_cpu_resp_bits_data_T_15, 7, 0) @[AMOALU.scala 39:55]
    node io_cpu_resp_bits_data_shifted_2 = mux(get_a_mask_bit_2, _io_cpu_resp_bits_data_shifted_T_7, _io_cpu_resp_bits_data_shifted_T_8) @[AMOALU.scala 39:24]
    skip
    node io_cpu_resp_bits_data_lo_2 = mux(_s2_write_T_3, UInt<8>("h0"), io_cpu_resp_bits_data_shifted_2) @[AMOALU.scala 41:23]
    node _io_cpu_resp_bits_data_T_16 = eq(s2_req_size, UInt<2>("h0")) @[AMOALU.scala 42:26]
    node _io_cpu_resp_bits_data_T_17 = or(_io_cpu_resp_bits_data_T_16, _s2_write_T_3) @[AMOALU.scala 42:38]
    node _io_cpu_resp_bits_data_T_18 = bits(io_cpu_resp_bits_data_lo_2, 7, 7) @[AMOALU.scala 42:85]
    node _io_cpu_resp_bits_data_T_19 = and(s2_req_signed, _io_cpu_resp_bits_data_T_18) @[AMOALU.scala 42:76]
    skip
    node _io_cpu_resp_bits_data_T_21 = mux(_io_cpu_resp_bits_data_T_19, UInt<56>("hffffffffffffff"), UInt<56>("h0")) @[Bitwise.scala 72:12]
    node _io_cpu_resp_bits_data_T_22 = bits(_io_cpu_resp_bits_data_T_15, 63, 8) @[AMOALU.scala 42:98]
    node io_cpu_resp_bits_data_hi_2 = mux(_io_cpu_resp_bits_data_T_17, _io_cpu_resp_bits_data_T_21, _io_cpu_resp_bits_data_T_22) @[AMOALU.scala 42:20]
    node _io_cpu_resp_bits_data_T_23 = cat(io_cpu_resp_bits_data_hi_2, io_cpu_resp_bits_data_lo_2) @[Cat.scala 30:58]
    node _GEN_376 = pad(s2_sc_fail, 64) @[DCache.scala 944:41]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg REG : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), REG) @[DCache.scala 978:18]
    node _GEN_351 = or(REG, resetting) @[DCache.scala 202:26 978:{27,39}]
    node flushCounterNext = add(flushCounter, UInt<8>("h1")) @[DCache.scala 979:39]
    node _flushDone_T = shr(flushCounterNext, 6) @[DCache.scala 980:37]
    node flushDone = eq(_flushDone_T, UInt<3>("h4")) @[DCache.scala 980:57]
    skip
    skip
    skip
    skip
    skip
    node _s1_flush_valid_T = and(metaArb.io_in_5_ready, metaArb.io_in_5_valid) @[Decoupled.scala 40:37]
    skip
    node _s1_flush_valid_T_2 = and(_s1_flush_valid_T, _T_41) @[DCache.scala 984:45]
    skip
    node _s1_flush_valid_T_4 = and(_s1_flush_valid_T_2, _s2_cannot_victimize_T) @[DCache.scala 984:64]
    skip
    node _s1_flush_valid_T_6 = and(_s1_flush_valid_T_4, _io_cpu_req_ready_T) @[DCache.scala 984:95]
    skip
    skip
    skip
    skip
    skip
    skip
    node metaArb_io_in_5_bits_addr_lo = shl(metaArb.io_in_5_bits_idx, 6) @[DCache.scala 988:98]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_352 = mux(flushDone, UInt<1>("h0"), _GEN_351) @[DCache.scala 1023:22 1024:17]
    node _GEN_353 = mux(resetting, flushCounterNext, pad(flushCounter, 9)) @[DCache.scala 1021:20 1022:18 203:25]
    node _GEN_354 = mux(resetting, _GEN_352, _GEN_351) @[DCache.scala 1021:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg io_cpu_perf_release_counter : UInt<9>, gated_clock with :
      reset => (UInt<1>("h0"), io_cpu_perf_release_counter) @[Edges.scala 228:27]
    node _io_cpu_perf_release_counter1_T = sub(io_cpu_perf_release_counter, UInt<9>("h1")) @[Edges.scala 229:28]
    node io_cpu_perf_release_counter1 = tail(_io_cpu_perf_release_counter1_T, 1) @[Edges.scala 229:28]
    node io_cpu_perf_release_first = eq(io_cpu_perf_release_counter, UInt<9>("h0")) @[Edges.scala 230:25]
    node _io_cpu_perf_release_last_T = eq(io_cpu_perf_release_counter, UInt<9>("h1")) @[Edges.scala 231:25]
    skip
    node io_cpu_perf_release_last = or(_io_cpu_perf_release_last_T, _last_T_3) @[Edges.scala 231:37]
    skip
    skip
    skip
    node _io_cpu_perf_release_counter_T = mux(io_cpu_perf_release_first, beats1_1, io_cpu_perf_release_counter1) @[Edges.scala 235:21]
    node _GEN_356 = mux(_T_297, _io_cpu_perf_release_counter_T, io_cpu_perf_release_counter) @[Edges.scala 234:17 235:15 228:27]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_332 = not(grantIsCached) @[DCache.scala 1103:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    auto_out_a_valid <= or(s2_valid_uncached_pending, _tl_out_a_valid_T_9) @[DCache.scala 576:32]
    auto_out_a_bits_opcode <= mux(_s2_valid_cached_miss_T, UInt<3>("h6"), _tl_out_a_bits_T_8_opcode) @[DCache.scala 580:23]
    auto_out_a_bits_param <= mux(_s2_valid_cached_miss_T, tl_out_a_bits_a_param, _tl_out_a_bits_T_8_param) @[DCache.scala 580:23]
    auto_out_a_bits_size <= mux(_s2_valid_cached_miss_T, UInt<4>("h6"), _tl_out_a_bits_T_8_size) @[DCache.scala 580:23]
    auto_out_a_bits_source <= mux(_s2_valid_cached_miss_T, UInt<1>("h0"), _tl_out_a_bits_T_8_source) @[DCache.scala 580:23]
    auto_out_a_bits_address <= mux(_s2_valid_cached_miss_T, tl_out_a_bits_a_address, _tl_out_a_bits_T_8_address) @[DCache.scala 580:23]
    auto_out_a_bits_mask <= mux(_s2_valid_cached_miss_T, UInt<8>("hff"), _tl_out_a_bits_T_8_mask) @[DCache.scala 580:23]
    auto_out_a_bits_data <= mux(_s2_valid_cached_miss_T, UInt<64>("h0"), _tl_out_a_bits_T_8_data) @[DCache.scala 580:23]
    skip
    auto_out_b_ready <= and(metaArb.io_in_6_ready, _bundleOut_0_b_ready_T_3) @[DCache.scala 742:44]
    auto_out_c_valid <= or(_T_306, _GEN_302) @[DCache.scala 836:48 837:22]
    auto_out_c_bits_opcode <= mux(_T_312, _GEN_323, _GEN_315) @[DCache.scala 845:102]
    auto_out_c_bits_param <= mux(_T_312, s2_shrink_param, _GEN_316) @[DCache.scala 845:102]
    auto_out_c_bits_size <= mux(_T_312, UInt<4>("h6"), probe_bits_size) @[DCache.scala 845:102]
    auto_out_c_bits_source <= probe_bits_source @[Nodes.scala 1207:84 DCache.scala 867:26]
    auto_out_c_bits_address <= probe_bits_address @[Nodes.scala 1207:84 DCache.scala 868:27]
    auto_out_c_bits_data <= cat(s2_data_corrected_hi, s2_data_corrected_lo) @[Cat.scala 30:58]
    skip
    auto_out_d_ready <= mux(_T_294, UInt<1>("h0"), _GEN_233) @[DCache.scala 724:68 725:22]
    auto_out_e_valid <= mux(_T_292, UInt<1>("h0"), _bundleOut_0_e_valid_T_2) @[DCache.scala 686:18 694:51 695:20]
    auto_out_e_bits_sink <= auto_out_d_bits_sink @[Nodes.scala 1207:84 LazyModule.scala 311:12]
    io_cpu_req_ready <= mux(_T_294, _GEN_234, _GEN_32) @[DCache.scala 724:68]
    io_cpu_s2_nack <= and(_io_cpu_s2_nack_T_3, _io_cpu_s2_nack_T_4) @[DCache.scala 417:86]
    skip
    skip
    skip
    io_cpu_resp_valid <= or(s2_valid_hit_pre_data_ecc_and_waw, doUncachedResp) @[DCache.scala 919:51]
    skip
    io_cpu_resp_bits_tag <= s2_req_tag @[DCache.scala 890:20]
    skip
    io_cpu_resp_bits_size <= s2_req_size @[DCache.scala 890:20]
    skip
    skip
    skip
    io_cpu_resp_bits_data <= or(_io_cpu_resp_bits_data_T_23, _GEN_376) @[DCache.scala 944:41]
    skip
    io_cpu_resp_bits_replay <= doUncachedResp @[DCache.scala 921:25 892:27 923:29]
    io_cpu_resp_bits_has_data <= or(_s2_read_T_4, _s2_write_T_21) @[Consts.scala 81:75]
    io_cpu_resp_bits_data_word_bypass <= cat(io_cpu_resp_bits_data_hi, io_cpu_resp_bits_data_shifted) @[Cat.scala 30:58]
    skip
    skip
    io_cpu_replay_next <= and(_T_271, grantIsUncachedData) @[DCache.scala 920:41]
    io_cpu_s2_xcpt_ma_ld <= and(io_cpu_s2_xcpt_REG, s2_tlb_xcpt_ma_ld) @[DCache.scala 903:24]
    io_cpu_s2_xcpt_ma_st <= and(io_cpu_s2_xcpt_REG, s2_tlb_xcpt_ma_st) @[DCache.scala 903:24]
    io_cpu_s2_xcpt_pf_ld <= and(io_cpu_s2_xcpt_REG, s2_tlb_xcpt_pf_ld) @[DCache.scala 903:24]
    io_cpu_s2_xcpt_pf_st <= and(io_cpu_s2_xcpt_REG, s2_tlb_xcpt_pf_st) @[DCache.scala 903:24]
    io_cpu_s2_xcpt_ae_ld <= and(io_cpu_s2_xcpt_REG, s2_tlb_xcpt_ae_ld) @[DCache.scala 903:24]
    io_cpu_s2_xcpt_ae_st <= and(io_cpu_s2_xcpt_REG, s2_tlb_xcpt_ae_st) @[DCache.scala 903:24]
    io_cpu_ordered <= not(_io_cpu_ordered_T_7) @[DCache.scala 900:21]
    skip
    io_cpu_perf_release <= and(io_cpu_perf_release_last, _T_297) @[Edges.scala 232:22]
    io_cpu_perf_grant <= and(auto_out_d_valid, d_last) @[DCache.scala 1048:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_ptw_req_valid <= tlb.io_ptw_req_valid @[DCache.scala 250:10]
    skip
    io_ptw_req_bits_bits_addr <= tlb.io_ptw_req_bits_bits_addr @[DCache.scala 250:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    tlb.clock <= gated_clock
    tlb.reset <= reset
    tlb.io_req_valid <= and(s1_valid_masked, s1_cmd_uses_tlb) @[DCache.scala 252:71]
    tlb.io_req_bits_vaddr <= s1_tlb_req_vaddr @[DCache.scala 253:19]
    tlb.io_req_bits_passthrough <= s1_tlb_req_passthrough @[DCache.scala 253:19]
    tlb.io_req_bits_size <= s1_tlb_req_size @[DCache.scala 253:19]
    tlb.io_req_bits_cmd <= s1_tlb_req_cmd @[DCache.scala 253:19]
    tlb.io_sfence_valid <= and(s1_valid_masked, s1_sfence) @[DCache.scala 257:54]
    tlb.io_sfence_bits_rs1 <= bits(s1_req_size, 0, 0) @[DCache.scala 258:40]
    tlb.io_sfence_bits_rs2 <= bits(s1_req_size, 1, 1) @[DCache.scala 259:40]
    tlb.io_sfence_bits_addr <= bits(s1_req_addr, 38, 0) @[DCache.scala 261:27]
    skip
    tlb.io_ptw_req_ready <= io_ptw_req_ready @[DCache.scala 250:10]
    tlb.io_ptw_resp_valid <= io_ptw_resp_valid @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_ae <= io_ptw_resp_bits_ae @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_pte_ppn <= io_ptw_resp_bits_pte_ppn @[DCache.scala 250:10]
    skip
    tlb.io_ptw_resp_bits_pte_d <= io_ptw_resp_bits_pte_d @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_pte_a <= io_ptw_resp_bits_pte_a @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_pte_g <= io_ptw_resp_bits_pte_g @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_pte_u <= io_ptw_resp_bits_pte_u @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_pte_x <= io_ptw_resp_bits_pte_x @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_pte_w <= io_ptw_resp_bits_pte_w @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_pte_r <= io_ptw_resp_bits_pte_r @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_pte_v <= io_ptw_resp_bits_pte_v @[DCache.scala 250:10]
    tlb.io_ptw_resp_bits_level <= io_ptw_resp_bits_level @[DCache.scala 250:10]
    skip
    tlb.io_ptw_resp_bits_homogeneous <= io_ptw_resp_bits_homogeneous @[DCache.scala 250:10]
    tlb.io_ptw_ptbr_mode <= io_ptw_ptbr_mode @[DCache.scala 250:10]
    skip
    skip
    tlb.io_ptw_status_debug <= io_ptw_status_debug @[DCache.scala 250:10]
    skip
    skip
    skip
    tlb.io_ptw_status_dprv <= io_ptw_status_dprv @[DCache.scala 250:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    tlb.io_ptw_status_mxr <= io_ptw_status_mxr @[DCache.scala 250:10]
    tlb.io_ptw_status_sum <= io_ptw_status_sum @[DCache.scala 250:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    tlb.io_ptw_pmp_0_cfg_l <= io_ptw_pmp_0_cfg_l @[DCache.scala 250:10]
    skip
    tlb.io_ptw_pmp_0_cfg_a <= io_ptw_pmp_0_cfg_a @[DCache.scala 250:10]
    tlb.io_ptw_pmp_0_cfg_x <= io_ptw_pmp_0_cfg_x @[DCache.scala 250:10]
    tlb.io_ptw_pmp_0_cfg_w <= io_ptw_pmp_0_cfg_w @[DCache.scala 250:10]
    tlb.io_ptw_pmp_0_cfg_r <= io_ptw_pmp_0_cfg_r @[DCache.scala 250:10]
    tlb.io_ptw_pmp_0_addr <= io_ptw_pmp_0_addr @[DCache.scala 250:10]
    tlb.io_ptw_pmp_0_mask <= io_ptw_pmp_0_mask @[DCache.scala 250:10]
    tlb.io_ptw_pmp_1_cfg_l <= io_ptw_pmp_1_cfg_l @[DCache.scala 250:10]
    skip
    tlb.io_ptw_pmp_1_cfg_a <= io_ptw_pmp_1_cfg_a @[DCache.scala 250:10]
    tlb.io_ptw_pmp_1_cfg_x <= io_ptw_pmp_1_cfg_x @[DCache.scala 250:10]
    tlb.io_ptw_pmp_1_cfg_w <= io_ptw_pmp_1_cfg_w @[DCache.scala 250:10]
    tlb.io_ptw_pmp_1_cfg_r <= io_ptw_pmp_1_cfg_r @[DCache.scala 250:10]
    tlb.io_ptw_pmp_1_addr <= io_ptw_pmp_1_addr @[DCache.scala 250:10]
    tlb.io_ptw_pmp_1_mask <= io_ptw_pmp_1_mask @[DCache.scala 250:10]
    tlb.io_ptw_pmp_2_cfg_l <= io_ptw_pmp_2_cfg_l @[DCache.scala 250:10]
    skip
    tlb.io_ptw_pmp_2_cfg_a <= io_ptw_pmp_2_cfg_a @[DCache.scala 250:10]
    tlb.io_ptw_pmp_2_cfg_x <= io_ptw_pmp_2_cfg_x @[DCache.scala 250:10]
    tlb.io_ptw_pmp_2_cfg_w <= io_ptw_pmp_2_cfg_w @[DCache.scala 250:10]
    tlb.io_ptw_pmp_2_cfg_r <= io_ptw_pmp_2_cfg_r @[DCache.scala 250:10]
    tlb.io_ptw_pmp_2_addr <= io_ptw_pmp_2_addr @[DCache.scala 250:10]
    tlb.io_ptw_pmp_2_mask <= io_ptw_pmp_2_mask @[DCache.scala 250:10]
    tlb.io_ptw_pmp_3_cfg_l <= io_ptw_pmp_3_cfg_l @[DCache.scala 250:10]
    skip
    tlb.io_ptw_pmp_3_cfg_a <= io_ptw_pmp_3_cfg_a @[DCache.scala 250:10]
    tlb.io_ptw_pmp_3_cfg_x <= io_ptw_pmp_3_cfg_x @[DCache.scala 250:10]
    tlb.io_ptw_pmp_3_cfg_w <= io_ptw_pmp_3_cfg_w @[DCache.scala 250:10]
    tlb.io_ptw_pmp_3_cfg_r <= io_ptw_pmp_3_cfg_r @[DCache.scala 250:10]
    tlb.io_ptw_pmp_3_addr <= io_ptw_pmp_3_addr @[DCache.scala 250:10]
    tlb.io_ptw_pmp_3_mask <= io_ptw_pmp_3_mask @[DCache.scala 250:10]
    tlb.io_ptw_pmp_4_cfg_l <= io_ptw_pmp_4_cfg_l @[DCache.scala 250:10]
    skip
    tlb.io_ptw_pmp_4_cfg_a <= io_ptw_pmp_4_cfg_a @[DCache.scala 250:10]
    tlb.io_ptw_pmp_4_cfg_x <= io_ptw_pmp_4_cfg_x @[DCache.scala 250:10]
    tlb.io_ptw_pmp_4_cfg_w <= io_ptw_pmp_4_cfg_w @[DCache.scala 250:10]
    tlb.io_ptw_pmp_4_cfg_r <= io_ptw_pmp_4_cfg_r @[DCache.scala 250:10]
    tlb.io_ptw_pmp_4_addr <= io_ptw_pmp_4_addr @[DCache.scala 250:10]
    tlb.io_ptw_pmp_4_mask <= io_ptw_pmp_4_mask @[DCache.scala 250:10]
    tlb.io_ptw_pmp_5_cfg_l <= io_ptw_pmp_5_cfg_l @[DCache.scala 250:10]
    skip
    tlb.io_ptw_pmp_5_cfg_a <= io_ptw_pmp_5_cfg_a @[DCache.scala 250:10]
    tlb.io_ptw_pmp_5_cfg_x <= io_ptw_pmp_5_cfg_x @[DCache.scala 250:10]
    tlb.io_ptw_pmp_5_cfg_w <= io_ptw_pmp_5_cfg_w @[DCache.scala 250:10]
    tlb.io_ptw_pmp_5_cfg_r <= io_ptw_pmp_5_cfg_r @[DCache.scala 250:10]
    tlb.io_ptw_pmp_5_addr <= io_ptw_pmp_5_addr @[DCache.scala 250:10]
    tlb.io_ptw_pmp_5_mask <= io_ptw_pmp_5_mask @[DCache.scala 250:10]
    tlb.io_ptw_pmp_6_cfg_l <= io_ptw_pmp_6_cfg_l @[DCache.scala 250:10]
    skip
    tlb.io_ptw_pmp_6_cfg_a <= io_ptw_pmp_6_cfg_a @[DCache.scala 250:10]
    tlb.io_ptw_pmp_6_cfg_x <= io_ptw_pmp_6_cfg_x @[DCache.scala 250:10]
    tlb.io_ptw_pmp_6_cfg_w <= io_ptw_pmp_6_cfg_w @[DCache.scala 250:10]
    tlb.io_ptw_pmp_6_cfg_r <= io_ptw_pmp_6_cfg_r @[DCache.scala 250:10]
    tlb.io_ptw_pmp_6_addr <= io_ptw_pmp_6_addr @[DCache.scala 250:10]
    tlb.io_ptw_pmp_6_mask <= io_ptw_pmp_6_mask @[DCache.scala 250:10]
    tlb.io_ptw_pmp_7_cfg_l <= io_ptw_pmp_7_cfg_l @[DCache.scala 250:10]
    skip
    tlb.io_ptw_pmp_7_cfg_a <= io_ptw_pmp_7_cfg_a @[DCache.scala 250:10]
    tlb.io_ptw_pmp_7_cfg_x <= io_ptw_pmp_7_cfg_x @[DCache.scala 250:10]
    tlb.io_ptw_pmp_7_cfg_w <= io_ptw_pmp_7_cfg_w @[DCache.scala 250:10]
    tlb.io_ptw_pmp_7_cfg_r <= io_ptw_pmp_7_cfg_r @[DCache.scala 250:10]
    tlb.io_ptw_pmp_7_addr <= io_ptw_pmp_7_addr @[DCache.scala 250:10]
    tlb.io_ptw_pmp_7_mask <= io_ptw_pmp_7_mask @[DCache.scala 250:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    pma_checker.clock <= gated_clock
    pma_checker.reset <= reset
    pma_checker.io_req_valid <= UInt<1>("h0")
    pma_checker.io_req_bits_vaddr <= UInt<40>("h0")
    pma_checker.io_req_bits_passthrough <= UInt<1>("h1") @[DCache.scala 267:39]
    pma_checker.io_req_bits_size <= s1_req_size @[DCache.scala 268:27]
    pma_checker.io_req_bits_cmd <= s1_req_cmd @[DCache.scala 268:27]
    pma_checker.io_sfence_valid <= UInt<1>("h0")
    pma_checker.io_sfence_bits_rs1 <= UInt<1>("h0")
    pma_checker.io_sfence_bits_rs2 <= UInt<1>("h0")
    pma_checker.io_sfence_bits_addr <= UInt<39>("h0")
    skip
    pma_checker.io_ptw_req_ready <= UInt<1>("h0")
    pma_checker.io_ptw_resp_valid <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_ae <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_pte_ppn <= UInt<54>("h0")
    skip
    pma_checker.io_ptw_resp_bits_pte_d <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_pte_a <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_pte_g <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_pte_u <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_pte_x <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_pte_w <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_pte_r <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_pte_v <= UInt<1>("h0")
    pma_checker.io_ptw_resp_bits_level <= UInt<2>("h0")
    skip
    pma_checker.io_ptw_resp_bits_homogeneous <= UInt<1>("h0")
    pma_checker.io_ptw_ptbr_mode <= UInt<4>("h0")
    skip
    skip
    pma_checker.io_ptw_status_debug <= UInt<1>("h0")
    skip
    skip
    skip
    pma_checker.io_ptw_status_dprv <= UInt<2>("h0")
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    pma_checker.io_ptw_status_mxr <= UInt<1>("h0")
    pma_checker.io_ptw_status_sum <= UInt<1>("h0")
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    pma_checker.io_ptw_pmp_0_cfg_l <= UInt<1>("h0")
    skip
    pma_checker.io_ptw_pmp_0_cfg_a <= UInt<2>("h0")
    pma_checker.io_ptw_pmp_0_cfg_x <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_0_cfg_w <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_0_cfg_r <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_0_addr <= UInt<30>("h0")
    pma_checker.io_ptw_pmp_0_mask <= UInt<32>("h0")
    pma_checker.io_ptw_pmp_1_cfg_l <= UInt<1>("h0")
    skip
    pma_checker.io_ptw_pmp_1_cfg_a <= UInt<2>("h0")
    pma_checker.io_ptw_pmp_1_cfg_x <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_1_cfg_w <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_1_cfg_r <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_1_addr <= UInt<30>("h0")
    pma_checker.io_ptw_pmp_1_mask <= UInt<32>("h0")
    pma_checker.io_ptw_pmp_2_cfg_l <= UInt<1>("h0")
    skip
    pma_checker.io_ptw_pmp_2_cfg_a <= UInt<2>("h0")
    pma_checker.io_ptw_pmp_2_cfg_x <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_2_cfg_w <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_2_cfg_r <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_2_addr <= UInt<30>("h0")
    pma_checker.io_ptw_pmp_2_mask <= UInt<32>("h0")
    pma_checker.io_ptw_pmp_3_cfg_l <= UInt<1>("h0")
    skip
    pma_checker.io_ptw_pmp_3_cfg_a <= UInt<2>("h0")
    pma_checker.io_ptw_pmp_3_cfg_x <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_3_cfg_w <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_3_cfg_r <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_3_addr <= UInt<30>("h0")
    pma_checker.io_ptw_pmp_3_mask <= UInt<32>("h0")
    pma_checker.io_ptw_pmp_4_cfg_l <= UInt<1>("h0")
    skip
    pma_checker.io_ptw_pmp_4_cfg_a <= UInt<2>("h0")
    pma_checker.io_ptw_pmp_4_cfg_x <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_4_cfg_w <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_4_cfg_r <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_4_addr <= UInt<30>("h0")
    pma_checker.io_ptw_pmp_4_mask <= UInt<32>("h0")
    pma_checker.io_ptw_pmp_5_cfg_l <= UInt<1>("h0")
    skip
    pma_checker.io_ptw_pmp_5_cfg_a <= UInt<2>("h0")
    pma_checker.io_ptw_pmp_5_cfg_x <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_5_cfg_w <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_5_cfg_r <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_5_addr <= UInt<30>("h0")
    pma_checker.io_ptw_pmp_5_mask <= UInt<32>("h0")
    pma_checker.io_ptw_pmp_6_cfg_l <= UInt<1>("h0")
    skip
    pma_checker.io_ptw_pmp_6_cfg_a <= UInt<2>("h0")
    pma_checker.io_ptw_pmp_6_cfg_x <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_6_cfg_w <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_6_cfg_r <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_6_addr <= UInt<30>("h0")
    pma_checker.io_ptw_pmp_6_mask <= UInt<32>("h0")
    pma_checker.io_ptw_pmp_7_cfg_l <= UInt<1>("h0")
    skip
    pma_checker.io_ptw_pmp_7_cfg_a <= UInt<2>("h0")
    pma_checker.io_ptw_pmp_7_cfg_x <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_7_cfg_w <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_7_cfg_r <= UInt<1>("h0")
    pma_checker.io_ptw_pmp_7_addr <= UInt<30>("h0")
    pma_checker.io_ptw_pmp_7_mask <= UInt<32>("h0")
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    lfsr_prng.clock <= gated_clock
    lfsr_prng.reset <= reset
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    lfsr_prng.io_increment <= and(_T_271, _GEN_209) @[DCache.scala 646:26 Replacement.scala 38:11]
    skip
    skip
    metaArb.io_in_0_valid <= resetting @[DCache.scala 1016:26]
    skip
    metaArb.io_in_0_bits_addr <= metaArb.io_in_5_bits_addr @[DCache.scala 1017:25]
    metaArb.io_in_0_bits_idx <= metaArb.io_in_5_bits_idx @[DCache.scala 1017:25]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    metaArb.io_in_2_valid <= and(s2_valid_hit_pre_data_ecc_and_waw, s2_update_meta) @[DCache.scala 434:63]
    skip
    metaArb.io_in_2_bits_addr <= cat(dataArb_io_in_3_bits_addr_hi, metaArb_io_in_2_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io_in_2_bits_idx <= bits(s2_vaddr, 11, 6) @[DCache.scala 437:40]
    metaArb.io_in_2_bits_way_en <= mux(s2_hit_valid, s2_hit_way, s2_victim_way) @[DCache.scala 404:33]
    metaArb.io_in_2_bits_data <= cat(s2_grow_param, metaArb_io_in_2_bits_data_meta_tag) @[DCache.scala 439:97]
    metaArb.io_in_3_valid <= and(_metaArb_io_in_3_valid_T, _metaArb_io_in_3_valid_T_1) @[DCache.scala 713:53]
    skip
    metaArb.io_in_3_bits_addr <= cat(dataArb_io_in_3_bits_addr_hi, metaArb_io_in_2_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io_in_3_bits_idx <= bits(s2_vaddr, 11, 6) @[DCache.scala 716:40]
    metaArb.io_in_3_bits_way_en <= refill_way @[DCache.scala 715:32]
    metaArb.io_in_3_bits_data <= cat(metaArb_io_in_3_bits_data_meta_state, metaArb_io_in_2_bits_data_meta_tag) @[DCache.scala 718:134]
    metaArb.io_in_4_valid <= or(_T_309, _metaArb_io_in_4_valid_T_1) @[package.scala 72:59]
    skip
    metaArb.io_in_4_bits_addr <= cat(dataArb_io_in_3_bits_addr_hi, metaArb_io_in_4_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io_in_4_bits_idx <= bits(probe_bits_address, 11, 6) @[DCache.scala 1170:47]
    metaArb.io_in_4_bits_way_en <= mux(_T_312, s2_victim_or_hit_way, s2_probe_way) @[DCache.scala 845:102 785:14 859:18]
    metaArb.io_in_4_bits_data <= cat(newCoh_state, metaArb_io_in_4_bits_data_meta_tag) @[DCache.scala 886:97]
    metaArb.io_in_5_valid <= UInt<1>("h0") @[DCache.scala 985:38]
    skip
    metaArb.io_in_5_bits_addr <= cat(dataArb_io_in_3_bits_addr_hi, metaArb_io_in_5_bits_addr_lo) @[Cat.scala 30:58]
    metaArb.io_in_5_bits_idx <= bits(flushCounter, 5, 0) @[DCache.scala 987:44]
    skip
    skip
    metaArb.io_in_6_valid <= or(_T_304, _metaArb_io_in_6_valid_T_2) @[DCache.scala 741:26 823:44 824:30]
    skip
    metaArb.io_in_6_bits_addr <= mux(_T_304, _metaArb_io_in_6_bits_addr_T_1, _metaArb_io_in_6_bits_addr_T) @[DCache.scala 745:30 823:44 826:34]
    metaArb.io_in_6_bits_idx <= mux(_T_304, _metaArb_io_in_1_bits_idx_T, _metaArb_io_in_6_bits_idx_T) @[DCache.scala 744:29 823:44 825:33]
    metaArb.io_in_6_bits_way_en <= metaArb.io_in_4_bits_way_en @[DCache.scala 746:32]
    metaArb.io_in_6_bits_data <= metaArb.io_in_4_bits_data @[DCache.scala 747:30]
    metaArb.io_in_7_valid <= io_cpu_req_valid @[DCache.scala 240:26]
    skip
    metaArb.io_in_7_bits_addr <= io_cpu_req_bits_addr @[DCache.scala 243:30]
    metaArb.io_in_7_bits_idx <= bits(dataArb.io_in_3_bits_addr, 11, 6) @[DCache.scala 242:58]
    metaArb.io_in_7_bits_way_en <= metaArb.io_in_4_bits_way_en @[DCache.scala 244:32]
    metaArb.io_in_7_bits_data <= metaArb.io_in_4_bits_data @[DCache.scala 245:30]
    skip
    tag_array_0.s1_meta.addr <= metaArb.io_out_bits_idx @[DCache.scala 286:{35,35}]
    tag_array_1.s1_meta.addr <= metaArb.io_out_bits_idx @[DCache.scala 286:{35,35}]
    tag_array_2.s1_meta.addr <= metaArb.io_out_bits_idx @[DCache.scala 286:{35,35}]
    tag_array_3.s1_meta.addr <= metaArb.io_out_bits_idx @[DCache.scala 286:{35,35}]
    tag_array_0.s1_meta.en <= and(metaArb.io_out_valid, _s0_clk_en_T) @[DCache.scala 286:59]
    tag_array_1.s1_meta.en <= and(metaArb.io_out_valid, _s0_clk_en_T) @[DCache.scala 286:59]
    tag_array_2.s1_meta.en <= and(metaArb.io_out_valid, _s0_clk_en_T) @[DCache.scala 286:59]
    tag_array_3.s1_meta.en <= and(metaArb.io_out_valid, _s0_clk_en_T) @[DCache.scala 286:59]
    tag_array_0.s1_meta.clk <= gated_clock @[DCache.scala 286:{35,35}]
    tag_array_1.s1_meta.clk <= gated_clock @[DCache.scala 286:{35,35}]
    tag_array_2.s1_meta.clk <= gated_clock @[DCache.scala 286:{35,35}]
    tag_array_3.s1_meta.clk <= gated_clock @[DCache.scala 286:{35,35}]
    tag_array_0.MPORT.addr <= metaArb.io_out_bits_idx @[DCache.scala 282:50]
    tag_array_1.MPORT.addr <= metaArb.io_out_bits_idx @[DCache.scala 282:50]
    tag_array_2.MPORT.addr <= metaArb.io_out_bits_idx @[DCache.scala 282:50]
    tag_array_3.MPORT.addr <= metaArb.io_out_bits_idx @[DCache.scala 282:50]
    tag_array_0.MPORT.en <= and(metaArb.io_out_valid, metaArb.io_out_bits_write) @[DCache.scala 282:27]
    tag_array_1.MPORT.en <= and(metaArb.io_out_valid, metaArb.io_out_bits_write) @[DCache.scala 282:27]
    tag_array_2.MPORT.en <= and(metaArb.io_out_valid, metaArb.io_out_bits_write) @[DCache.scala 282:27]
    tag_array_3.MPORT.en <= and(metaArb.io_out_valid, metaArb.io_out_bits_write) @[DCache.scala 282:27]
    tag_array_0.MPORT.clk <= gated_clock @[DCache.scala 282:50]
    tag_array_1.MPORT.clk <= gated_clock @[DCache.scala 282:50]
    tag_array_2.MPORT.clk <= gated_clock @[DCache.scala 282:50]
    tag_array_3.MPORT.clk <= gated_clock @[DCache.scala 282:50]
    tag_array_0.MPORT.data <= metaArb.io_out_bits_data @[compatibility.scala 127:{12,12}]
    tag_array_1.MPORT.data <= metaArb.io_out_bits_data @[compatibility.scala 127:{12,12}]
    tag_array_2.MPORT.data <= metaArb.io_out_bits_data @[compatibility.scala 127:{12,12}]
    tag_array_3.MPORT.data <= metaArb.io_out_bits_data @[compatibility.scala 127:{12,12}]
    tag_array_0.MPORT.mask <= bits(metaArb.io_out_bits_way_en, 0, 0) @[DCache.scala 283:74]
    tag_array_1.MPORT.mask <= bits(metaArb.io_out_bits_way_en, 1, 1) @[DCache.scala 283:74]
    tag_array_2.MPORT.mask <= bits(metaArb.io_out_bits_way_en, 2, 2) @[DCache.scala 283:74]
    tag_array_3.MPORT.mask <= bits(metaArb.io_out_bits_way_en, 3, 3) @[DCache.scala 283:74]
    data.clock <= gated_clock
    skip
    data.io_req_valid <= dataArb.io_out_valid @[DCache.scala 135:15]
    data.io_req_bits_addr <= dataArb.io_out_bits_addr @[DCache.scala 135:15]
    data.io_req_bits_write <= dataArb.io_out_bits_write @[DCache.scala 135:15]
    data.io_req_bits_wdata <= dataArb.io_out_bits_wdata @[DCache.scala 135:15]
    skip
    data.io_req_bits_eccMask <= dataArb.io_out_bits_eccMask @[DCache.scala 135:15]
    data.io_req_bits_way_en <= dataArb.io_out_bits_way_en @[DCache.scala 135:15]
    skip
    skip
    dataArb.io_in_0_valid <= or(pstore_drain_structural, _pstore_drain_T_10) @[DCache.scala 489:48]
    dataArb.io_in_0_bits_addr <= bits(_dataArb_io_in_0_bits_addr_T, 11, 0) @[DCache.scala 521:30]
    dataArb.io_in_0_bits_write <= or(pstore_drain_structural, _pstore_drain_T_10) @[DCache.scala 489:48]
    dataArb.io_in_0_bits_wdata <= cat(dataArb_io_in_0_bits_wdata_hi, dataArb_io_in_0_bits_wdata_lo) @[Cat.scala 30:58]
    skip
    dataArb.io_in_0_bits_eccMask <= cat(dataArb_io_in_0_bits_eccMask_hi, dataArb_io_in_0_bits_eccMask_lo) @[Cat.scala 30:58]
    dataArb.io_in_0_bits_way_en <= mux(pstore2_valid, pstore2_way, pstore1_way) @[DCache.scala 522:38]
    dataArb.io_in_1_valid <= mux(_T_294, _GEN_235, _dataArb_io_in_1_valid_T_1) @[DCache.scala 693:26 724:68]
    dataArb.io_in_1_bits_addr <= bits(_dataArb_io_in_1_bits_addr_T_2, 11, 0) @[DCache.scala 700:32]
    dataArb.io_in_1_bits_write <= mux(_T_294, _GEN_236, UInt<1>("h1")) @[DCache.scala 699:33 724:68]
    dataArb.io_in_1_bits_wdata <= cat(tl_d_data_encoded_hi, tl_d_data_encoded_lo) @[Cat.scala 30:58]
    skip
    skip
    dataArb.io_in_1_bits_way_en <= refill_way @[DCache.scala 701:34]
    dataArb.io_in_2_valid <= and(inWriteback, _dataArb_io_in_2_valid_T) @[DCache.scala 873:41]
    skip
    dataArb.io_in_2_bits_addr <= or(_dataArb_io_in_2_bits_addr_T_1, _GEN_375) @[DCache.scala 876:72]
    skip
    dataArb.io_in_2_bits_wdata <= dataArb.io_in_1_bits_wdata @[DCache.scala 874:25]
    skip
    skip
    skip
    dataArb.io_in_3_valid <= and(io_cpu_req_valid, res) @[DCache.scala 221:46]
    dataArb.io_in_3_bits_addr <= bits(_dataArb_io_in_3_bits_addr_T, 11, 0) @[DCache.scala 224:30]
    skip
    dataArb.io_in_3_bits_wdata <= dataArb.io_in_1_bits_wdata @[DCache.scala 222:25]
    dataArb.io_in_3_bits_wordMask <= UInt<1>("h1") @[DCache.scala 225:34]
    skip
    skip
    skip
    s1_valid <= mux(reset, UInt<1>("h0"), s1_valid_x9) @[DCache.scala 162:{21,21,21}]
    s1_probe <= mux(reset, UInt<1>("h0"), _GEN_300) @[DCache.scala 163:{21,21}]
    skip
    probe_bits_param <= mux(s2_want_victimize, UInt<2>("h0"), _GEN_6) @[DCache.scala 798:25 804:18]
    probe_bits_size <= mux(s2_want_victimize, UInt<4>("h0"), _GEN_5) @[DCache.scala 798:25 804:18]
    probe_bits_source <= mux(s2_want_victimize, UInt<1>("h0"), _GEN_4) @[DCache.scala 798:25 804:18]
    probe_bits_address <= mux(s2_want_victimize, res_2_address, _GEN_3) @[DCache.scala 798:25 804:18]
    skip
    skip
    skip
    skip
    skip
    s1_req_addr <= mux(s0_clk_en, s0_req_addr, s1_req_addr) @[Reg.scala 15:16 16:{19,23}]
    s1_req_tag <= mux(s0_clk_en, io_cpu_req_bits_tag, s1_req_tag) @[Reg.scala 15:16 16:{19,23}]
    s1_req_cmd <= mux(s0_clk_en, io_cpu_req_bits_cmd, s1_req_cmd) @[Reg.scala 15:16 16:{19,23}]
    s1_req_size <= mux(s0_clk_en, io_cpu_req_bits_size, s1_req_size) @[Reg.scala 15:16 16:{19,23}]
    s1_req_signed <= mux(s0_clk_en, io_cpu_req_bits_signed, s1_req_signed) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    skip
    skip
    s1_tlb_req_vaddr <= mux(s0_clk_en, s0_req_addr, s1_tlb_req_vaddr) @[Reg.scala 15:16 16:{19,23}]
    s1_tlb_req_passthrough <= mux(s0_clk_en, s0_req_phys, s1_tlb_req_passthrough) @[Reg.scala 15:16 16:{19,23}]
    s1_tlb_req_size <= mux(s0_clk_en, io_cpu_req_bits_size, s1_tlb_req_size) @[Reg.scala 15:16 16:{19,23}]
    s1_tlb_req_cmd <= mux(s0_clk_en, io_cpu_req_bits_cmd, s1_tlb_req_cmd) @[Reg.scala 15:16 16:{19,23}]
    s1_flush_valid <= and(_s1_flush_valid_T_6, _tl_out_a_valid_T_4) @[DCache.scala 984:124]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    cached_grant_wait <= mux(reset, UInt<1>("h0"), _GEN_220) @[DCache.scala 201:{30,30}]
    resetting <= mux(reset, UInt<1>("h0"), _GEN_354) @[DCache.scala 202:{26,26}]
    node _GEN_379 = mux(reset, UInt<9>("hc0"), _GEN_353) @[DCache.scala 203:{25,25}]
    flushCounter <= bits(_GEN_379, 7, 0) @[DCache.scala 203:{25,25}]
    release_ack_wait <= mux(reset, UInt<1>("h0"), _GEN_344) @[DCache.scala 204:{29,29}]
    release_ack_dirty <= mux(_T_312, _GEN_332, release_ack_dirty) @[DCache.scala 845:102 205:30]
    release_ack_addr <= mux(_T_312, _GEN_333, release_ack_addr) @[DCache.scala 845:102 206:29]
    release_state <= mux(reset, UInt<4>("h0"), _GEN_347) @[DCache.scala 207:{26,26}]
    refill_way <= mux(_T_263, _GEN_167, refill_way) @[DCache.scala 208:23 603:26]
    uncachedInFlight_0 <= mux(reset, UInt<1>("h0"), _GEN_223) @[DCache.scala 215:{33,33}]
    uncachedReqs_0_addr <= mux(_T_263, _GEN_155, uncachedReqs_0_addr) @[DCache.scala 216:25 603:26]
    uncachedReqs_0_tag <= mux(_T_263, _GEN_156, uncachedReqs_0_tag) @[DCache.scala 216:25 603:26]
    skip
    uncachedReqs_0_size <= mux(_T_263, _GEN_158, uncachedReqs_0_size) @[DCache.scala 216:25 603:26]
    uncachedReqs_0_signed <= mux(_T_263, _GEN_159, uncachedReqs_0_signed) @[DCache.scala 216:25 603:26]
    skip
    skip
    skip
    skip
    skip
    skip
    s1_did_read <= mux(s0_clk_en, _s1_did_read_T_52, s1_did_read) @[Reg.scala 15:16 16:{19,23}]
    s1_read_mask <= mux(s0_clk_en, dataArb.io_in_3_bits_wordMask, s1_read_mask) @[Reg.scala 15:16 16:{19,23}]
    s2_valid <= mux(reset, UInt<1>("h0"), s2_valid_x37) @[DCache.scala 303:{21,21,21}]
    s2_probe <= mux(reset, UInt<1>("h0"), s1_probe) @[DCache.scala 305:{21,21,21}]
    s2_not_nacked_in_s1 <= not(s1_nack) @[DCache.scala 307:37]
    s2_req_addr <= mux(_T_271, _GEN_216, _GEN_58) @[DCache.scala 646:26]
    s2_req_tag <= mux(_T_271, _GEN_215, _GEN_59) @[DCache.scala 646:26]
    s2_req_cmd <= mux(_T_271, _GEN_212, _GEN_60) @[DCache.scala 646:26]
    s2_req_size <= mux(_T_271, _GEN_213, _GEN_61) @[DCache.scala 646:26]
    s2_req_signed <= mux(_T_271, _GEN_214, _GEN_62) @[DCache.scala 646:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    s2_tlb_xcpt_pf_ld <= mux(_T_70, tlb.io_resp_pf_ld, s2_tlb_xcpt_pf_ld) @[DCache.scala 317:48 320:17 314:24]
    s2_tlb_xcpt_pf_st <= mux(_T_70, tlb.io_resp_pf_st, s2_tlb_xcpt_pf_st) @[DCache.scala 317:48 320:17 314:24]
    skip
    s2_tlb_xcpt_ae_ld <= mux(_T_70, tlb.io_resp_ae_ld, s2_tlb_xcpt_ae_ld) @[DCache.scala 317:48 320:17 314:24]
    s2_tlb_xcpt_ae_st <= mux(_T_70, tlb.io_resp_ae_st, s2_tlb_xcpt_ae_st) @[DCache.scala 317:48 320:17 314:24]
    skip
    s2_tlb_xcpt_ma_ld <= mux(_T_70, tlb.io_resp_ma_ld, s2_tlb_xcpt_ma_ld) @[DCache.scala 317:48 320:17 314:24]
    s2_tlb_xcpt_ma_st <= mux(_T_70, tlb.io_resp_ma_st, s2_tlb_xcpt_ma_st) @[DCache.scala 317:48 320:17 314:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    s2_pma_cacheable <= mux(_T_70, _s2_pma_T_cacheable, s2_pma_cacheable) @[DCache.scala 317:48 321:12 315:19]
    skip
    skip
    skip
    s2_vaddr_r <= mux(_T_70, s1_vaddr, s2_vaddr_r) @[Reg.scala 15:16 16:{19,23}]
    s2_flush_valid_pre_tag_ecc <= s1_flush_valid @[DCache.scala 327:43]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    s2_meta_corrected_r <= mux(s1_meta_clk_en, tag_array_0.s1_meta.data, s2_meta_corrected_r) @[Reg.scala 15:16 16:{19,23}]
    s2_meta_corrected_r_1 <= mux(s1_meta_clk_en, tag_array_1.s1_meta.data, s2_meta_corrected_r_1) @[Reg.scala 15:16 16:{19,23}]
    s2_meta_corrected_r_2 <= mux(s1_meta_clk_en, tag_array_2.s1_meta.data, s2_meta_corrected_r_2) @[Reg.scala 15:16 16:{19,23}]
    s2_meta_corrected_r_3 <= mux(s1_meta_clk_en, tag_array_3.s1_meta.data, s2_meta_corrected_r_3) @[Reg.scala 15:16 16:{19,23}]
    s2_data <= mux(en, _s2_data_T_15, s2_data) @[Reg.scala 15:16 16:{19,23}]
    s2_probe_way <= mux(s1_probe, s1_meta_hit_way, s2_probe_way) @[Reg.scala 15:16 16:{19,23}]
    s2_probe_state_state <= mux(s1_probe, s1_meta_hit_state_state, s2_probe_state_state) @[Reg.scala 15:16 16:{19,23}]
    s2_hit_way <= mux(s1_valid_not_nacked, s1_meta_hit_way, s2_hit_way) @[Reg.scala 15:16 16:{19,23}]
    s2_hit_state_state <= mux(_T_70, s1_meta_hit_state_state, s2_hit_state_state) @[Reg.scala 15:16 16:{19,23}]
    skip
    s2_victim_way_r <= mux(_T_70, s1_victim_way, s2_victim_way_r) @[Reg.scala 15:16 16:{19,23}]
    lrscCount <= mux(reset, UInt<7>("h0"), _GEN_123) @[DCache.scala 444:{22,22}]
    lrscAddr <= mux(_T_246, _lrscAddrMatch_T, lrscAddr) @[DCache.scala 450:99 452:14 447:21]
    skip
    pstore1_cmd <= mux(_pstore1_cmd_T, s1_req_cmd, pstore1_cmd) @[Reg.scala 15:16 16:{19,23}]
    pstore1_addr <= mux(_pstore1_cmd_T, s1_vaddr, pstore1_addr) @[Reg.scala 15:16 16:{19,23}]
    pstore1_data <= mux(_pstore1_cmd_T, io_cpu_s1_data_data, pstore1_data) @[Reg.scala 15:16 16:{19,23}]
    pstore1_way <= mux(_pstore1_cmd_T, s1_meta_hit_way, pstore1_way) @[Reg.scala 15:16 16:{19,23}]
    pstore1_mask <= mux(_pstore1_cmd_T, s1_mask, pstore1_mask) @[Reg.scala 15:16 16:{19,23}]
    pstore1_rmw_r <= mux(_pstore1_cmd_T, _pstore1_rmw_T_50, pstore1_rmw_r) @[Reg.scala 15:16 16:{19,23}]
    pstore2_valid <= mux(reset, UInt<1>("h0"), _pstore2_valid_T_2) @[DCache.scala 473:{30,30} 495:17]
    pstore_drain_on_miss_REG <= io_cpu_s2_nack @[DCache.scala 475:56]
    pstore1_held <= mux(reset, UInt<1>("h0"), _pstore1_held_T_10) @[DCache.scala 476:{29,29} 493:16]
    pstore2_addr <= mux(advance_pstore1, pstore1_addr, pstore2_addr) @[Reg.scala 15:16 16:{19,23}]
    pstore2_way <= mux(advance_pstore1, pstore1_way, pstore2_way) @[Reg.scala 15:16 16:{19,23}]
    pstore2_storegen_data_lo_lo_lo <= mux(advance_pstore1, _pstore2_storegen_data_T, pstore2_storegen_data_lo_lo_lo) @[Reg.scala 15:16 16:{19,23}]
    pstore2_storegen_data_lo_lo_hi <= mux(advance_pstore1, _pstore2_storegen_data_T_4, pstore2_storegen_data_lo_lo_hi) @[Reg.scala 15:16 16:{19,23}]
    pstore2_storegen_data_lo_hi_lo <= mux(advance_pstore1, _pstore2_storegen_data_T_8, pstore2_storegen_data_lo_hi_lo) @[Reg.scala 15:16 16:{19,23}]
    pstore2_storegen_data_lo_hi_hi <= mux(advance_pstore1, _pstore2_storegen_data_T_12, pstore2_storegen_data_lo_hi_hi) @[Reg.scala 15:16 16:{19,23}]
    pstore2_storegen_data_hi_lo_lo <= mux(advance_pstore1, _pstore2_storegen_data_T_16, pstore2_storegen_data_hi_lo_lo) @[Reg.scala 15:16 16:{19,23}]
    pstore2_storegen_data_hi_lo_hi <= mux(advance_pstore1, _pstore2_storegen_data_T_20, pstore2_storegen_data_hi_lo_hi) @[Reg.scala 15:16 16:{19,23}]
    pstore2_storegen_data_hi_hi_lo <= mux(advance_pstore1, _pstore2_storegen_data_T_24, pstore2_storegen_data_hi_hi_lo) @[Reg.scala 15:16 16:{19,23}]
    pstore2_storegen_data_hi_hi_hi <= mux(advance_pstore1, _pstore2_storegen_data_T_28, pstore2_storegen_data_hi_hi_hi) @[Reg.scala 15:16 16:{19,23}]
    mask <= mux(advance_pstore1, _pstore2_storegen_mask_mask_T_2, mask) @[DCache.scala 504:45 506:12 503:19]
    skip
    counter <= mux(reset, UInt<9>("h0"), _GEN_182) @[Edges.scala 228:{27,27}]
    grantInProgress <= mux(reset, UInt<1>("h0"), _GEN_219) @[DCache.scala 639:{28,28}]
    blockProbeAfterGrantCount <= mux(reset, UInt<3>("h0"), _GEN_221) @[DCache.scala 640:{38,38}]
    blockUncachedGrant <= mux(_T_294, _GEN_237, dataArb.io_out_valid) @[DCache.scala 723:24 724:68]
    counter_1 <= mux(reset, UInt<9>("h0"), _GEN_243) @[Edges.scala 228:{27,27}]
    s1_release_data_valid <= and(dataArb.io_in_2_ready, dataArb.io_in_2_valid) @[Decoupled.scala 40:37]
    s2_release_data_valid <= and(s1_release_data_valid, _s2_release_data_valid_x61_T) @[DCache.scala 774:64]
    io_cpu_s2_xcpt_REG <= and(_s1_xcpt_valid_T_1, _s1_valid_not_nacked_T) @[DCache.scala 902:65]
    skip
    doUncachedResp <= io_cpu_replay_next @[DCache.scala 918:27]
    skip
    skip
    amoalu.io_mask <= pstore1_mask @[DCache.scala 953:38]
    amoalu.io_cmd <= pstore1_cmd @[DCache.scala 954:21]
    amoalu.io_lhs <= cat(s2_data_corrected_hi, s2_data_corrected_lo) @[Cat.scala 30:58]
    amoalu.io_rhs <= pstore1_data @[DCache.scala 956:37]
    REG <= reset @[compatibility.scala 260:56]
    skip
    io_cpu_perf_release_counter <= mux(reset, UInt<9>("h0"), _GEN_356) @[Edges.scala 228:{27,27}]
    skip
    skip
    skip
    printf(gated_clock, _dataArb_io_in_3_valid_T_55, "Assertion failed\n    at DCache.scala:1156 assert(!needsRead(req) || res)\n") @[DCache.scala 1156:11]
    stop(gated_clock, _dataArb_io_in_3_valid_T_55, 1) @[DCache.scala 1156:11]
    skip
    skip
    printf(gated_clock, _dataArb_io_in_3_valid_T_55, "Assertion failed\n    at DCache.scala:1156 assert(!needsRead(req) || res)\n") @[DCache.scala 1156:11]
    stop(gated_clock, _dataArb_io_in_3_valid_T_55, 1) @[DCache.scala 1156:11]
    printf(gated_clock, _T_259, "Assertion failed\n    at DCache.scala:482 assert(pstore1_rmw || pstore1_valid_not_rmw(io.cpu.s2_kill) === pstore1_valid)\n") @[DCache.scala 482:9]
    stop(gated_clock, _T_259, 1) @[DCache.scala 482:9]
    node _GEN_380 = and(_T_271, grantIsCached) @[DCache.scala 649:13]
    printf(gated_clock, and(_GEN_380, _T_274), "Assertion failed: A GrantData was unexpected by the dcache.\n    at DCache.scala:649 assert(cached_grant_wait, \"A GrantData was unexpected by the dcache.\")\n") @[DCache.scala 649:13]
    skip
    stop(gated_clock, and(_GEN_380, _T_274), 1) @[DCache.scala 649:13]
    skip
    node _GEN_383 = and(_T_271, _T_332) @[DCache.scala 659:17]
    node _GEN_384 = and(_GEN_383, grantIsUncached) @[DCache.scala 659:17]
    node _GEN_385 = and(_GEN_384, _T_276) @[DCache.scala 659:17]
    printf(gated_clock, and(_GEN_385, _T_279), "Assertion failed: An AccessAck was unexpected by the dcache.\n    at DCache.scala:659 assert(f, \"An AccessAck was unexpected by the dcache.\") // TODO must handle Ack coming back on same cycle!\n") @[DCache.scala 659:17]
    skip
    skip
    skip
    skip
    stop(gated_clock, and(_GEN_385, _T_279), 1) @[DCache.scala 659:17]
    skip
    skip
    skip
    node _GEN_393 = and(_GEN_383, _tl_d_data_encoded_T_4) @[DCache.scala 680:13]
    node _GEN_394 = and(_GEN_393, grantIsVoluntary) @[DCache.scala 680:13]
    printf(gated_clock, and(_GEN_394, _T_282), "Assertion failed: A ReleaseAck was unexpected by the dcache.\n    at DCache.scala:680 assert(release_ack_wait, \"A ReleaseAck was unexpected by the dcache.\") // TODO should handle Ack coming back on same cycle!\n") @[DCache.scala 680:13]
    skip
    skip
    skip
    skip
    skip
    stop(gated_clock, and(_GEN_394, _T_282), 1) @[DCache.scala 680:13]
    printf(gated_clock, _T_290, "Assertion failed\n    at DCache.scala:688 assert(tl_out.e.fire() === (tl_out.d.fire() && d_first && grantIsCached))\n") @[DCache.scala 688:9]
    stop(gated_clock, _T_290, 1) @[DCache.scala 688:9]
    printf(gated_clock, and(s2_want_victimize, _T_302), "Assertion failed\n    at DCache.scala:799 assert(s2_valid_flush_line || s2_flush_valid || io.cpu.s2_nack)\n") @[DCache.scala 799:13]
    stop(gated_clock, and(s2_want_victimize, _T_302), 1) @[DCache.scala 799:13]
    printf(gated_clock, and(doUncachedResp, _T_322), "Assertion failed\n    at DCache.scala:922 assert(!s2_valid_hit)\n") @[DCache.scala 922:11]
    stop(gated_clock, and(doUncachedResp, _T_322), 1) @[DCache.scala 922:11]

  module Frontend :
    input gated_clock : Clock
    input reset : UInt<1>
    input auto_icache_master_out_a_ready : UInt<1>
    output auto_icache_master_out_a_valid : UInt<1>
    output auto_icache_master_out_a_bits_address : UInt<32>
    input auto_icache_master_out_d_valid : UInt<1>
    input auto_icache_master_out_d_bits_opcode : UInt<3>
    input auto_icache_master_out_d_bits_size : UInt<4>
    input auto_icache_master_out_d_bits_data : UInt<64>
    input auto_icache_master_out_d_bits_corrupt : UInt<1>
    input auto_reset_vector_sink_in : UInt<32>
    input io_cpu_might_request : UInt<1>
    input io_cpu_req_valid : UInt<1>
    input io_cpu_req_bits_pc : UInt<40>
    input io_cpu_req_bits_speculative : UInt<1>
    input io_cpu_sfence_valid : UInt<1>
    input io_cpu_sfence_bits_rs1 : UInt<1>
    input io_cpu_sfence_bits_rs2 : UInt<1>
    input io_cpu_sfence_bits_addr : UInt<39>
    input io_cpu_resp_ready : UInt<1>
    output io_cpu_resp_valid : UInt<1>
    output io_cpu_resp_bits_btb_taken : UInt<1>
    output io_cpu_resp_bits_btb_bridx : UInt<1>
    output io_cpu_resp_bits_btb_entry : UInt<5>
    output io_cpu_resp_bits_btb_bht_history : UInt<8>
    output io_cpu_resp_bits_pc : UInt<40>
    output io_cpu_resp_bits_data : UInt<32>
    output io_cpu_resp_bits_xcpt_pf_inst : UInt<1>
    output io_cpu_resp_bits_xcpt_ae_inst : UInt<1>
    output io_cpu_resp_bits_replay : UInt<1>
    input io_cpu_btb_update_valid : UInt<1>
    input io_cpu_btb_update_bits_prediction_entry : UInt<5>
    input io_cpu_btb_update_bits_pc : UInt<39>
    input io_cpu_btb_update_bits_isValid : UInt<1>
    input io_cpu_btb_update_bits_br_pc : UInt<39>
    input io_cpu_btb_update_bits_cfiType : UInt<2>
    input io_cpu_bht_update_valid : UInt<1>
    input io_cpu_bht_update_bits_prediction_history : UInt<8>
    input io_cpu_bht_update_bits_pc : UInt<39>
    input io_cpu_bht_update_bits_branch : UInt<1>
    input io_cpu_bht_update_bits_taken : UInt<1>
    input io_cpu_bht_update_bits_mispredict : UInt<1>
    input io_cpu_flush_icache : UInt<1>
    output io_cpu_npc : UInt<40>
    input io_ptw_req_ready : UInt<1>
    output io_ptw_req_valid : UInt<1>
    output io_ptw_req_bits_valid : UInt<1>
    output io_ptw_req_bits_bits_addr : UInt<27>
    input io_ptw_resp_valid : UInt<1>
    input io_ptw_resp_bits_ae : UInt<1>
    input io_ptw_resp_bits_pte_ppn : UInt<54>
    input io_ptw_resp_bits_pte_d : UInt<1>
    input io_ptw_resp_bits_pte_a : UInt<1>
    input io_ptw_resp_bits_pte_g : UInt<1>
    input io_ptw_resp_bits_pte_u : UInt<1>
    input io_ptw_resp_bits_pte_x : UInt<1>
    input io_ptw_resp_bits_pte_w : UInt<1>
    input io_ptw_resp_bits_pte_r : UInt<1>
    input io_ptw_resp_bits_pte_v : UInt<1>
    input io_ptw_resp_bits_level : UInt<2>
    input io_ptw_resp_bits_homogeneous : UInt<1>
    input io_ptw_ptbr_mode : UInt<4>
    input io_ptw_status_debug : UInt<1>
    input io_ptw_status_prv : UInt<2>
    input io_ptw_pmp_0_cfg_l : UInt<1>
    input io_ptw_pmp_0_cfg_a : UInt<2>
    input io_ptw_pmp_0_cfg_x : UInt<1>
    input io_ptw_pmp_0_cfg_w : UInt<1>
    input io_ptw_pmp_0_cfg_r : UInt<1>
    input io_ptw_pmp_0_addr : UInt<30>
    input io_ptw_pmp_0_mask : UInt<32>
    input io_ptw_pmp_1_cfg_l : UInt<1>
    input io_ptw_pmp_1_cfg_a : UInt<2>
    input io_ptw_pmp_1_cfg_x : UInt<1>
    input io_ptw_pmp_1_cfg_w : UInt<1>
    input io_ptw_pmp_1_cfg_r : UInt<1>
    input io_ptw_pmp_1_addr : UInt<30>
    input io_ptw_pmp_1_mask : UInt<32>
    input io_ptw_pmp_2_cfg_l : UInt<1>
    input io_ptw_pmp_2_cfg_a : UInt<2>
    input io_ptw_pmp_2_cfg_x : UInt<1>
    input io_ptw_pmp_2_cfg_w : UInt<1>
    input io_ptw_pmp_2_cfg_r : UInt<1>
    input io_ptw_pmp_2_addr : UInt<30>
    input io_ptw_pmp_2_mask : UInt<32>
    input io_ptw_pmp_3_cfg_l : UInt<1>
    input io_ptw_pmp_3_cfg_a : UInt<2>
    input io_ptw_pmp_3_cfg_x : UInt<1>
    input io_ptw_pmp_3_cfg_w : UInt<1>
    input io_ptw_pmp_3_cfg_r : UInt<1>
    input io_ptw_pmp_3_addr : UInt<30>
    input io_ptw_pmp_3_mask : UInt<32>
    input io_ptw_pmp_4_cfg_l : UInt<1>
    input io_ptw_pmp_4_cfg_a : UInt<2>
    input io_ptw_pmp_4_cfg_x : UInt<1>
    input io_ptw_pmp_4_cfg_w : UInt<1>
    input io_ptw_pmp_4_cfg_r : UInt<1>
    input io_ptw_pmp_4_addr : UInt<30>
    input io_ptw_pmp_4_mask : UInt<32>
    input io_ptw_pmp_5_cfg_l : UInt<1>
    input io_ptw_pmp_5_cfg_a : UInt<2>
    input io_ptw_pmp_5_cfg_x : UInt<1>
    input io_ptw_pmp_5_cfg_w : UInt<1>
    input io_ptw_pmp_5_cfg_r : UInt<1>
    input io_ptw_pmp_5_addr : UInt<30>
    input io_ptw_pmp_5_mask : UInt<32>
    input io_ptw_pmp_6_cfg_l : UInt<1>
    input io_ptw_pmp_6_cfg_a : UInt<2>
    input io_ptw_pmp_6_cfg_x : UInt<1>
    input io_ptw_pmp_6_cfg_w : UInt<1>
    input io_ptw_pmp_6_cfg_r : UInt<1>
    input io_ptw_pmp_6_addr : UInt<30>
    input io_ptw_pmp_6_mask : UInt<32>
    input io_ptw_pmp_7_cfg_l : UInt<1>
    input io_ptw_pmp_7_cfg_a : UInt<2>
    input io_ptw_pmp_7_cfg_x : UInt<1>
    input io_ptw_pmp_7_cfg_w : UInt<1>
    input io_ptw_pmp_7_cfg_r : UInt<1>
    input io_ptw_pmp_7_addr : UInt<30>
    input io_ptw_pmp_7_mask : UInt<32>
    input io_ptw_customCSRs_csrs_0_value : UInt<64>

    inst icache of ICache @[Frontend.scala 62:26]
    inst fq of ShiftQueue @[Frontend.scala 84:57]
    inst tlb of TLB_1 @[Frontend.scala 98:19]
    inst btb of BTB @[Frontend.scala 179:21]
    skip
    skip
    skip
    skip
    node _T_2 = or(io_cpu_req_valid, io_cpu_sfence_valid) @[Frontend.scala 89:29]
    node _T_3 = or(_T_2, io_cpu_flush_icache) @[Frontend.scala 89:52]
    node _T_4 = or(_T_3, io_cpu_bht_update_valid) @[Frontend.scala 89:75]
    node _T_5 = or(_T_4, io_cpu_btb_update_valid) @[Frontend.scala 89:102]
    node _T_6 = not(_T_5) @[Frontend.scala 89:10]
    node _T_7 = or(_T_6, io_cpu_might_request) @[Frontend.scala 89:130]
    skip
    node _T_9 = or(_T_7, reset) @[Frontend.scala 89:9]
    node _T_10 = not(_T_9) @[Frontend.scala 89:9]
    reg s1_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_valid) @[Frontend.scala 100:21]
    reg s2_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_valid) @[Frontend.scala 101:25]
    node _s0_fq_has_space_T = bits(fq.io_mask, 2, 2) @[Frontend.scala 103:16]
    node _s0_fq_has_space_T_1 = not(_s0_fq_has_space_T) @[Frontend.scala 103:5]
    node _s0_fq_has_space_T_2 = bits(fq.io_mask, 3, 3) @[Frontend.scala 104:17]
    node _s0_fq_has_space_T_3 = not(_s0_fq_has_space_T_2) @[Frontend.scala 104:6]
    node _s0_fq_has_space_T_4 = not(s1_valid) @[Frontend.scala 104:45]
    node _s0_fq_has_space_T_5 = not(s2_valid) @[Frontend.scala 104:58]
    node _s0_fq_has_space_T_6 = or(_s0_fq_has_space_T_4, _s0_fq_has_space_T_5) @[Frontend.scala 104:55]
    node _s0_fq_has_space_T_7 = and(_s0_fq_has_space_T_3, _s0_fq_has_space_T_6) @[Frontend.scala 104:41]
    node _s0_fq_has_space_T_8 = or(_s0_fq_has_space_T_1, _s0_fq_has_space_T_7) @[Frontend.scala 103:40]
    node _s0_fq_has_space_T_9 = bits(fq.io_mask, 4, 4) @[Frontend.scala 105:17]
    node _s0_fq_has_space_T_10 = not(_s0_fq_has_space_T_9) @[Frontend.scala 105:6]
    skip
    skip
    node _s0_fq_has_space_T_13 = and(_s0_fq_has_space_T_4, _s0_fq_has_space_T_5) @[Frontend.scala 105:55]
    node _s0_fq_has_space_T_14 = and(_s0_fq_has_space_T_10, _s0_fq_has_space_T_13) @[Frontend.scala 105:41]
    node s0_fq_has_space = or(_s0_fq_has_space_T_8, _s0_fq_has_space_T_14) @[Frontend.scala 104:70]
    node s0_valid = or(io_cpu_req_valid, s0_fq_has_space) @[Frontend.scala 106:35]
    reg s1_pc : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), s1_pc) @[Frontend.scala 108:18]
    reg s1_speculative : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s1_speculative) @[Frontend.scala 109:27]
    skip
    node _s2_pc_T = not(auto_reset_vector_sink_in) @[Frontend.scala 341:29]
    node _s2_pc_T_1 = or(_s2_pc_T, UInt<32>("h1")) @[Frontend.scala 341:33]
    node _s2_pc_T_2 = not(_s2_pc_T_1) @[Frontend.scala 341:27]
    reg s2_pc : UInt<40>, gated_clock with :
      reset => (UInt<1>("h0"), s2_pc) @[Frontend.scala 110:22]
    reg s2_btb_resp_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_btb_resp_valid) @[Frontend.scala 111:44]
    skip
    reg s2_btb_resp_bits_taken : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_btb_resp_bits_taken) @[Frontend.scala 112:29]
    skip
    reg s2_btb_resp_bits_bridx : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_btb_resp_bits_bridx) @[Frontend.scala 112:29]
    skip
    reg s2_btb_resp_bits_entry : UInt<5>, gated_clock with :
      reset => (UInt<1>("h0"), s2_btb_resp_bits_entry) @[Frontend.scala 112:29]
    reg s2_btb_resp_bits_bht_history : UInt<8>, gated_clock with :
      reset => (UInt<1>("h0"), s2_btb_resp_bits_bht_history) @[Frontend.scala 112:29]
    reg s2_btb_resp_bits_bht_value : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_btb_resp_bits_bht_value) @[Frontend.scala 112:29]
    node s2_btb_taken = and(s2_btb_resp_valid, s2_btb_resp_bits_taken) @[Frontend.scala 113:40]
    reg s2_tlb_resp_miss : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_resp_miss) @[Frontend.scala 114:24]
    skip
    skip
    skip
    reg s2_tlb_resp_pf_inst : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_resp_pf_inst) @[Frontend.scala 114:24]
    skip
    skip
    reg s2_tlb_resp_ae_inst : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_resp_ae_inst) @[Frontend.scala 114:24]
    skip
    skip
    skip
    reg s2_tlb_resp_cacheable : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_tlb_resp_cacheable) @[Frontend.scala 114:24]
    skip
    skip
    node s2_xcpt = or(s2_tlb_resp_ae_inst, s2_tlb_resp_pf_inst) @[Frontend.scala 115:37]
    reg s2_speculative : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_speculative) @[Frontend.scala 116:27]
    reg s2_partial_insn_valid : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_partial_insn_valid) @[Frontend.scala 117:38]
    reg s2_partial_insn : UInt<16>, gated_clock with :
      reset => (UInt<1>("h0"), s2_partial_insn) @[Frontend.scala 118:28]
    reg wrong_path : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), wrong_path) @[Frontend.scala 119:27]
    node _s1_base_pc_T = not(s1_pc) @[Frontend.scala 121:22]
    node _s1_base_pc_T_1 = or(_s1_base_pc_T, UInt<40>("h3")) @[Frontend.scala 121:29]
    node s1_base_pc = not(_s1_base_pc_T_1) @[Frontend.scala 121:20]
    node _ntpc_T = add(s1_base_pc, UInt<40>("h4")) @[Frontend.scala 122:25]
    node ntpc = tail(_ntpc_T, 1) @[Frontend.scala 122:25]
    node _s2_replay_T = and(fq.io_enq_ready, fq.io_enq_valid) @[Decoupled.scala 40:37]
    node _s2_replay_T_1 = not(_s2_replay_T) @[Frontend.scala 127:29]
    node _s2_replay_T_2 = and(s2_valid, _s2_replay_T_1) @[Frontend.scala 127:26]
    node _s2_replay_T_3 = not(s0_valid) @[Frontend.scala 127:72]
    reg s2_replay_REG : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), s2_replay_REG) @[Frontend.scala 127:58]
    node s2_replay = or(_s2_replay_T_2, s2_replay_REG) @[Frontend.scala 127:48]
    skip
    node _s2_replay_T_4 = and(s2_replay, _s2_replay_T_3) @[Frontend.scala 127:69]
    node _taken_prevRVI_T = bits(s2_partial_insn, 1, 0) @[Frontend.scala 208:39]
    node _taken_prevRVI_T_1 = neq(_taken_prevRVI_T, UInt<2>("h3")) @[Frontend.scala 208:45]
    node _taken_prevRVI_T_2 = not(_taken_prevRVI_T_1) @[Frontend.scala 209:34]
    node taken_prevRVI = and(s2_partial_insn_valid, _taken_prevRVI_T_2) @[Frontend.scala 209:31]
    node taken_bits = bits(fq.io_enq_bits_data, 15, 0) @[Frontend.scala 211:37]
    node taken_rviBits = cat(taken_bits, s2_partial_insn) @[Cat.scala 30:58]
    node _taken_rviJump_T = bits(taken_rviBits, 6, 0) @[Frontend.scala 215:28]
    node taken_rviJump = eq(_taken_rviJump_T, UInt<7>("h6f")) @[Frontend.scala 215:34]
    skip
    node taken_rviJALR = eq(_taken_rviJump_T, UInt<7>("h67")) @[Frontend.scala 216:34]
    node _taken_taken_T = or(taken_rviJump, taken_rviJALR) @[Frontend.scala 230:29]
    skip
    node taken_rviBranch = eq(_taken_rviJump_T, UInt<7>("h63")) @[Frontend.scala 214:36]
    skip
    skip
    node _taken_taken_T_1 = and(taken_rviBranch, s2_btb_resp_bits_bht_value) @[Frontend.scala 230:53]
    node _taken_taken_T_2 = or(_taken_taken_T, _taken_taken_T_1) @[Frontend.scala 230:40]
    node _taken_taken_T_3 = and(taken_prevRVI, _taken_taken_T_2) @[Frontend.scala 230:17]
    node _taken_valid_T = bits(fq.io_enq_bits_mask, 0, 0) @[Frontend.scala 210:38]
    node _taken_valid_T_1 = not(taken_prevRVI) @[Frontend.scala 210:47]
    node taken_valid = and(_taken_valid_T, _taken_valid_T_1) @[Frontend.scala 210:44]
    node _taken_rvcJump_T = and(taken_bits, UInt<16>("he003")) @[Frontend.scala 221:26]
    node taken_rvcJump = eq(UInt<16>("ha001"), _taken_rvcJump_T) @[Frontend.scala 221:26]
    skip
    skip
    skip
    skip
    node _taken_rvcJALR_T = and(taken_bits, UInt<16>("hf003")) @[Frontend.scala 225:26]
    node _taken_rvcJALR_T_1 = eq(UInt<16>("h9002"), _taken_rvcJALR_T) @[Frontend.scala 225:26]
    node _taken_rvcJALR_T_2 = bits(taken_bits, 6, 2) @[Frontend.scala 225:56]
    node _taken_rvcJALR_T_3 = eq(_taken_rvcJALR_T_2, UInt<5>("h0")) @[Frontend.scala 225:62]
    node taken_rvcJALR = and(_taken_rvcJALR_T_1, _taken_rvcJALR_T_3) @[Frontend.scala 225:49]
    node _taken_taken_T_4 = or(taken_rvcJump, taken_rvcJALR) @[Frontend.scala 231:27]
    skip
    node _taken_rvcJR_T_1 = eq(UInt<16>("h8002"), _taken_rvcJALR_T) @[Frontend.scala 223:24]
    skip
    skip
    node taken_rvcJR = and(_taken_rvcJR_T_1, _taken_rvcJALR_T_3) @[Frontend.scala 223:46]
    node _taken_taken_T_5 = or(_taken_taken_T_4, taken_rvcJR) @[Frontend.scala 231:38]
    skip
    node _taken_rvcBranch_T_1 = eq(UInt<16>("hc001"), _taken_rvcJump_T) @[Frontend.scala 219:28]
    skip
    node _taken_rvcBranch_T_3 = eq(UInt<16>("he001"), _taken_rvcJump_T) @[Frontend.scala 219:60]
    node taken_rvcBranch = or(_taken_rvcBranch_T_1, _taken_rvcBranch_T_3) @[Frontend.scala 219:52]
    node _taken_taken_T_6 = and(taken_rvcBranch, s2_btb_resp_bits_bht_value) @[Frontend.scala 231:60]
    node _taken_taken_T_7 = or(_taken_taken_T_5, _taken_taken_T_6) @[Frontend.scala 231:47]
    node _taken_taken_T_8 = and(taken_valid, _taken_taken_T_7) @[Frontend.scala 231:15]
    node taken_taken = or(_taken_taken_T_3, _taken_taken_T_8) @[Frontend.scala 230:71]
    skip
    node taken_idx = not(taken_taken) @[Frontend.scala 245:13]
    node _taken_T_36 = not(s2_btb_taken) @[Frontend.scala 254:15]
    node _taken_prevRVI_T_3 = bits(taken_bits, 1, 0) @[Frontend.scala 208:39]
    node _taken_prevRVI_T_4 = neq(_taken_prevRVI_T_3, UInt<2>("h3")) @[Frontend.scala 208:45]
    node _taken_prevRVI_T_5 = not(_taken_prevRVI_T_4) @[Frontend.scala 209:34]
    node taken_prevRVI_1 = and(taken_valid, _taken_prevRVI_T_5) @[Frontend.scala 209:31]
    node taken_bits_1 = bits(fq.io_enq_bits_data, 31, 16) @[Frontend.scala 211:37]
    node taken_rviBits_1 = cat(taken_bits_1, taken_bits) @[Cat.scala 30:58]
    node _taken_rviJALR_T_1 = bits(taken_rviBits_1, 6, 0) @[Frontend.scala 216:28]
    node taken_rviJALR_1 = eq(_taken_rviJALR_T_1, UInt<7>("h67")) @[Frontend.scala 216:34]
    node _taken_rviReturn_T_6 = bits(taken_rviBits_1, 7, 7) @[Frontend.scala 217:42]
    node _taken_rviReturn_T_7 = not(_taken_rviReturn_T_6) @[Frontend.scala 217:34]
    node _taken_rviReturn_T_8 = and(taken_rviJALR_1, _taken_rviReturn_T_7) @[Frontend.scala 217:31]
    node _taken_rviReturn_T_9 = bits(taken_rviBits_1, 19, 15) @[Frontend.scala 217:77]
    node _taken_rviReturn_T_10 = and(_taken_rviReturn_T_9, UInt<5>("h1b")) @[Frontend.scala 217:66]
    node _taken_rviReturn_T_11 = eq(UInt<5>("h1"), _taken_rviReturn_T_10) @[Frontend.scala 217:66]
    node taken_rviReturn_1 = and(_taken_rviReturn_T_8, _taken_rviReturn_T_11) @[Frontend.scala 217:46]
    node _taken_predictReturn_T_3 = and(taken_prevRVI_1, taken_rviReturn_1) @[Frontend.scala 232:61]
    node _taken_valid_T_2 = bits(fq.io_enq_bits_mask, 1, 1) @[Frontend.scala 210:38]
    node _taken_valid_T_3 = not(taken_prevRVI_1) @[Frontend.scala 210:47]
    node taken_valid_1 = and(_taken_valid_T_2, _taken_valid_T_3) @[Frontend.scala 210:44]
    node _taken_rvcJR_T_4 = and(taken_bits_1, UInt<16>("hf003")) @[Frontend.scala 223:24]
    node _taken_rvcJR_T_5 = eq(UInt<16>("h8002"), _taken_rvcJR_T_4) @[Frontend.scala 223:24]
    node _taken_rvcJR_T_6 = bits(taken_bits_1, 6, 2) @[Frontend.scala 223:53]
    node _taken_rvcJR_T_7 = eq(_taken_rvcJR_T_6, UInt<5>("h0")) @[Frontend.scala 223:59]
    node taken_rvcJR_1 = and(_taken_rvcJR_T_5, _taken_rvcJR_T_7) @[Frontend.scala 223:46]
    node _taken_rvcReturn_T_3 = bits(taken_bits_1, 11, 7) @[Frontend.scala 224:57]
    node _taken_rvcReturn_T_4 = and(_taken_rvcReturn_T_3, UInt<5>("h1b")) @[Frontend.scala 224:49]
    node _taken_rvcReturn_T_5 = eq(UInt<5>("h1"), _taken_rvcReturn_T_4) @[Frontend.scala 224:49]
    node taken_rvcReturn_1 = and(taken_rvcJR_1, _taken_rvcReturn_T_5) @[Frontend.scala 224:29]
    node _taken_predictReturn_T_4 = and(taken_valid_1, taken_rvcReturn_1) @[Frontend.scala 232:83]
    node _taken_predictReturn_T_5 = or(_taken_predictReturn_T_3, _taken_predictReturn_T_4) @[Frontend.scala 232:74]
    node taken_predictReturn_1 = and(btb.io_ras_head_valid, _taken_predictReturn_T_5) @[Frontend.scala 232:49]
    node _taken_T_45 = and(s2_valid, taken_predictReturn_1) @[Frontend.scala 258:26]
    skip
    skip
    node _taken_rviReturn_T = bits(taken_rviBits, 7, 7) @[Frontend.scala 217:42]
    node _taken_rviReturn_T_1 = not(_taken_rviReturn_T) @[Frontend.scala 217:34]
    node _taken_rviReturn_T_2 = and(taken_rviJALR, _taken_rviReturn_T_1) @[Frontend.scala 217:31]
    node _taken_rviReturn_T_3 = bits(taken_rviBits, 19, 15) @[Frontend.scala 217:77]
    node _taken_rviReturn_T_4 = and(_taken_rviReturn_T_3, UInt<5>("h1b")) @[Frontend.scala 217:66]
    node _taken_rviReturn_T_5 = eq(UInt<5>("h1"), _taken_rviReturn_T_4) @[Frontend.scala 217:66]
    node taken_rviReturn = and(_taken_rviReturn_T_2, _taken_rviReturn_T_5) @[Frontend.scala 217:46]
    node _taken_predictReturn_T = and(taken_prevRVI, taken_rviReturn) @[Frontend.scala 232:61]
    node _taken_rvcReturn_T = bits(taken_bits, 11, 7) @[Frontend.scala 224:57]
    node _taken_rvcReturn_T_1 = and(_taken_rvcReturn_T, UInt<5>("h1b")) @[Frontend.scala 224:49]
    node _taken_rvcReturn_T_2 = eq(UInt<5>("h1"), _taken_rvcReturn_T_1) @[Frontend.scala 224:49]
    node taken_rvcReturn = and(taken_rvcJR, _taken_rvcReturn_T_2) @[Frontend.scala 224:29]
    node _taken_predictReturn_T_1 = and(taken_valid, taken_rvcReturn) @[Frontend.scala 232:83]
    node _taken_predictReturn_T_2 = or(_taken_predictReturn_T, _taken_predictReturn_T_1) @[Frontend.scala 232:74]
    node taken_predictReturn = and(btb.io_ras_head_valid, _taken_predictReturn_T_2) @[Frontend.scala 232:49]
    node _taken_T_16 = and(s2_valid, taken_predictReturn) @[Frontend.scala 258:26]
    skip
    node _GEN_45 = and(_taken_T_36, _taken_T_16) @[Frontend.scala 254:30]
    skip
    node _GEN_78 = or(_taken_T_45, _GEN_45) @[Frontend.scala 258:44 259:20]
    node _GEN_81 = mux(_taken_T_36, _GEN_78, _GEN_45) @[Frontend.scala 254:30]
    node useRAS = mux(taken_idx, _GEN_81, _GEN_45) @[Frontend.scala 245:25]
    skip
    skip
    skip
    skip
    node taken_rviBranch_1 = eq(_taken_rviJALR_T_1, UInt<7>("h63")) @[Frontend.scala 214:36]
    node _taken_predictBranch_T_3 = and(taken_prevRVI_1, taken_rviBranch_1) @[Frontend.scala 234:53]
    node _taken_rvcBranch_T_4 = and(taken_bits_1, UInt<16>("he003")) @[Frontend.scala 219:28]
    node _taken_rvcBranch_T_5 = eq(UInt<16>("hc001"), _taken_rvcBranch_T_4) @[Frontend.scala 219:28]
    skip
    node _taken_rvcBranch_T_7 = eq(UInt<16>("he001"), _taken_rvcBranch_T_4) @[Frontend.scala 219:60]
    node taken_rvcBranch_1 = or(_taken_rvcBranch_T_5, _taken_rvcBranch_T_7) @[Frontend.scala 219:52]
    node _taken_predictBranch_T_4 = and(taken_valid_1, taken_rvcBranch_1) @[Frontend.scala 234:75]
    node _taken_predictBranch_T_5 = or(_taken_predictBranch_T_3, _taken_predictBranch_T_4) @[Frontend.scala 234:66]
    node taken_predictBranch_1 = and(s2_btb_resp_bits_bht_value, _taken_predictBranch_T_5) @[Frontend.scala 234:41]
    skip
    node taken_rviJump_1 = eq(_taken_rviJALR_T_1, UInt<7>("h6f")) @[Frontend.scala 215:34]
    node _taken_predictJump_T_2 = and(taken_prevRVI_1, taken_rviJump_1) @[Frontend.scala 233:33]
    skip
    node taken_rvcJump_1 = eq(UInt<16>("ha001"), _taken_rvcBranch_T_4) @[Frontend.scala 221:26]
    skip
    skip
    skip
    skip
    node _taken_predictJump_T_3 = and(taken_valid_1, taken_rvcJump_1) @[Frontend.scala 233:53]
    node taken_predictJump_1 = or(_taken_predictJump_T_2, _taken_predictJump_T_3) @[Frontend.scala 233:44]
    node _taken_T_46 = or(taken_predictBranch_1, taken_predictJump_1) @[Frontend.scala 261:44]
    node _taken_T_47 = and(s2_valid, _taken_T_46) @[Frontend.scala 261:26]
    node _s2_base_pc_T = not(s2_pc) @[Frontend.scala 201:24]
    node _s2_base_pc_T_1 = or(_s2_base_pc_T, UInt<40>("h3")) @[Frontend.scala 201:31]
    node s2_base_pc = not(_s2_base_pc_T_1) @[Frontend.scala 201:22]
    node taken_pc_1 = or(s2_base_pc, UInt<40>("h2")) @[Frontend.scala 262:33]
    node _taken_npc_T_5 = sub(taken_pc_1, UInt<40>("h2")) @[Frontend.scala 265:36]
    node _taken_npc_T_6 = tail(_taken_npc_T_5, 1) @[Frontend.scala 265:36]
    node _taken_npc_T_7 = mux(taken_prevRVI_1, _taken_npc_T_6, taken_pc_1) @[Frontend.scala 265:23]
    node _taken_npc_T_8 = asSInt(_taken_npc_T_7) @[Frontend.scala 265:57]
    node _taken_rviImm_T_5 = bits(taken_rviBits_1, 3, 3) @[Frontend.scala 227:31]
    skip
    node _taken_rviImm_sign_T_7 = bits(taken_rviBits_1, 31, 31) @[RocketCore.scala 1037:48]
    node taken_rviImm_sign_2 = asSInt(_taken_rviImm_sign_T_7) @[RocketCore.scala 1037:53]
    skip
    node taken_rviImm_hi_hi_hi_2 = asUInt(taken_rviImm_sign_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    node taken_rviImm_b30_20_2 = pad(taken_rviImm_sign_2, 11) @[RocketCore.scala 1038:21]
    node taken_rviImm_hi_hi_lo_2 = asUInt(taken_rviImm_b30_20_2) @[Cat.scala 30:58]
    node taken_rviImm_hi_hi_2 = cat(taken_rviImm_hi_hi_hi_2, taken_rviImm_hi_hi_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _taken_rviImm_b19_12_T_13 = bits(taken_rviBits_1, 19, 12) @[RocketCore.scala 1039:65]
    node taken_rviImm_b19_12_2 = asSInt(_taken_rviImm_b19_12_T_13) @[RocketCore.scala 1039:73]
    skip
    node taken_rviImm_hi_lo_hi_2 = asUInt(taken_rviImm_b19_12_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _taken_rviImm_b11_T_26 = bits(taken_rviBits_1, 20, 20) @[RocketCore.scala 1041:39]
    node taken_rviImm_b11_2 = asSInt(_taken_rviImm_b11_T_26) @[RocketCore.scala 1041:44]
    skip
    skip
    node _taken_rviImm_b11_T_30 = asSInt(_taken_rviReturn_T_6) @[RocketCore.scala 1042:43]
    skip
    skip
    skip
    node taken_rviImm_hi_lo_lo_2 = asUInt(taken_rviImm_b11_2) @[Cat.scala 30:58]
    node taken_rviImm_hi_lo_2 = cat(taken_rviImm_hi_lo_hi_2, taken_rviImm_hi_lo_lo_2) @[Cat.scala 30:58]
    node taken_rviImm_hi_2 = cat(taken_rviImm_hi_hi_2, taken_rviImm_hi_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    node taken_rviImm_lo_hi_hi_2 = bits(taken_rviBits_1, 30, 25) @[RocketCore.scala 1043:66]
    skip
    skip
    skip
    skip
    skip
    node _taken_rviImm_b4_1_T_24 = bits(taken_rviBits_1, 11, 8) @[RocketCore.scala 1045:57]
    skip
    skip
    node taken_rviImm_lo_hi_lo_2 = bits(taken_rviBits_1, 24, 21) @[RocketCore.scala 1046:52]
    skip
    skip
    skip
    node taken_rviImm_lo_hi_2 = cat(taken_rviImm_lo_hi_hi_2, taken_rviImm_lo_hi_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_lo_2 = cat(taken_rviImm_lo_hi_2, UInt<1>("h0")) @[Cat.scala 30:58]
    node _taken_rviImm_T_6 = cat(taken_rviImm_hi_2, taken_rviImm_lo_2) @[Cat.scala 30:58]
    node _taken_rviImm_T_7 = asSInt(_taken_rviImm_T_6) @[RocketCore.scala 1051:53]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_b19_12_3 = pad(taken_rviImm_sign_2, 8) @[RocketCore.scala 1039:21]
    node taken_rviImm_hi_lo_hi_3 = asUInt(taken_rviImm_b19_12_3) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_hi_lo_lo_3 = asUInt(_taken_rviImm_b11_T_30) @[Cat.scala 30:58]
    node taken_rviImm_hi_lo_3 = cat(taken_rviImm_hi_lo_hi_3, taken_rviImm_hi_lo_lo_3) @[Cat.scala 30:58]
    node taken_rviImm_hi_3 = cat(taken_rviImm_hi_hi_2, taken_rviImm_hi_lo_3) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_lo_hi_3 = cat(taken_rviImm_lo_hi_hi_2, _taken_rviImm_b4_1_T_24) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_lo_3 = cat(taken_rviImm_lo_hi_3, UInt<1>("h0")) @[Cat.scala 30:58]
    node _taken_rviImm_T_8 = cat(taken_rviImm_hi_3, taken_rviImm_lo_3) @[Cat.scala 30:58]
    node _taken_rviImm_T_9 = asSInt(_taken_rviImm_T_8) @[RocketCore.scala 1051:53]
    node taken_rviImm_1 = mux(_taken_rviImm_T_5, _taken_rviImm_T_7, _taken_rviImm_T_9) @[Frontend.scala 227:23]
    node _taken_rvcImm_T_9 = bits(taken_bits_1, 14, 14) @[Frontend.scala 222:28]
    node _taken_rvcImm_T_10 = bits(taken_bits_1, 12, 12) @[RVC.scala 45:27]
    skip
    node taken_rvcImm_hi_hi_hi_2 = mux(_taken_rvcImm_T_10, UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 72:12]
    node taken_rvcImm_hi_hi_lo_2 = bits(taken_bits_1, 6, 5) @[RVC.scala 45:35]
    node taken_rvcImm_hi_hi_2 = cat(taken_rvcImm_hi_hi_hi_2, taken_rvcImm_hi_hi_lo_2) @[Cat.scala 30:58]
    node taken_rvcImm_hi_lo_2 = bits(taken_bits_1, 2, 2) @[RVC.scala 45:43]
    node taken_rvcImm_hi_2 = cat(taken_rvcImm_hi_hi_2, taken_rvcImm_hi_lo_2) @[Cat.scala 30:58]
    node taken_rvcImm_lo_hi_hi_2 = bits(taken_bits_1, 11, 10) @[RVC.scala 45:49]
    node taken_rvcImm_lo_hi_lo_2 = bits(taken_bits_1, 4, 3) @[RVC.scala 45:59]
    node taken_rvcImm_lo_hi_2 = cat(taken_rvcImm_lo_hi_hi_2, taken_rvcImm_lo_hi_lo_2) @[Cat.scala 30:58]
    node taken_rvcImm_lo_2 = cat(taken_rvcImm_lo_hi_2, UInt<1>("h0")) @[Cat.scala 30:58]
    node _taken_rvcImm_T_12 = cat(taken_rvcImm_hi_2, taken_rvcImm_lo_2) @[Cat.scala 30:58]
    node _taken_rvcImm_T_13 = asSInt(_taken_rvcImm_T_12) @[Frontend.scala 222:66]
    skip
    skip
    node taken_rvcImm_hi_hi_hi_hi_1 = mux(_taken_rvcImm_T_10, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 72:12]
    node taken_rvcImm_hi_hi_hi_lo_1 = bits(taken_bits_1, 8, 8) @[RVC.scala 44:36]
    node taken_rvcImm_hi_hi_hi_3 = cat(taken_rvcImm_hi_hi_hi_hi_1, taken_rvcImm_hi_hi_hi_lo_1) @[Cat.scala 30:58]
    node taken_rvcImm_hi_hi_lo_3 = bits(taken_bits_1, 10, 9) @[RVC.scala 44:42]
    node taken_rvcImm_hi_hi_3 = cat(taken_rvcImm_hi_hi_hi_3, taken_rvcImm_hi_hi_lo_3) @[Cat.scala 30:58]
    node taken_rvcImm_hi_lo_hi_1 = bits(taken_bits_1, 6, 6) @[RVC.scala 44:51]
    node taken_rvcImm_hi_lo_lo_1 = bits(taken_bits_1, 7, 7) @[RVC.scala 44:57]
    node taken_rvcImm_hi_lo_3 = cat(taken_rvcImm_hi_lo_hi_1, taken_rvcImm_hi_lo_lo_1) @[Cat.scala 30:58]
    node taken_rvcImm_hi_3 = cat(taken_rvcImm_hi_hi_3, taken_rvcImm_hi_lo_3) @[Cat.scala 30:58]
    skip
    node taken_rvcImm_lo_hi_lo_3 = bits(taken_bits_1, 11, 11) @[RVC.scala 44:69]
    node taken_rvcImm_lo_hi_3 = cat(taken_rvcImm_hi_lo_2, taken_rvcImm_lo_hi_lo_3) @[Cat.scala 30:58]
    node taken_rvcImm_lo_lo_hi_1 = bits(taken_bits_1, 5, 3) @[RVC.scala 44:76]
    node taken_rvcImm_lo_lo_1 = cat(taken_rvcImm_lo_lo_hi_1, UInt<1>("h0")) @[Cat.scala 30:58]
    node taken_rvcImm_lo_3 = cat(taken_rvcImm_lo_hi_3, taken_rvcImm_lo_lo_1) @[Cat.scala 30:58]
    node _taken_rvcImm_T_16 = cat(taken_rvcImm_hi_3, taken_rvcImm_lo_3) @[Cat.scala 30:58]
    node _taken_rvcImm_T_17 = asSInt(_taken_rvcImm_T_16) @[Frontend.scala 222:106]
    node taken_rvcImm_1 = mux(_taken_rvcImm_T_9, pad(_taken_rvcImm_T_13, 21), _taken_rvcImm_T_17) @[Frontend.scala 222:23]
    node _taken_npc_T_9 = mux(taken_prevRVI_1, taken_rviImm_1, pad(taken_rvcImm_1, 32)) @[Frontend.scala 265:69]
    node _GEN_127 = pad(_taken_npc_T_9, 40) @[Frontend.scala 265:64]
    node _taken_npc_T_10 = add(_taken_npc_T_8, _GEN_127) @[Frontend.scala 265:64]
    node _taken_npc_T_11 = tail(_taken_npc_T_10, 1) @[Frontend.scala 265:64]
    node taken_npc_1 = asSInt(_taken_npc_T_11) @[Frontend.scala 265:64]
    node _taken_predicted_npc_T_1 = asUInt(taken_npc_1) @[Frontend.scala 266:34]
    node _taken_predictBranch_T = and(taken_prevRVI, taken_rviBranch) @[Frontend.scala 234:53]
    node _taken_predictBranch_T_1 = and(taken_valid, taken_rvcBranch) @[Frontend.scala 234:75]
    node _taken_predictBranch_T_2 = or(_taken_predictBranch_T, _taken_predictBranch_T_1) @[Frontend.scala 234:66]
    node taken_predictBranch = and(s2_btb_resp_bits_bht_value, _taken_predictBranch_T_2) @[Frontend.scala 234:41]
    node _taken_predictJump_T = and(taken_prevRVI, taken_rviJump) @[Frontend.scala 233:33]
    node _taken_predictJump_T_1 = and(taken_valid, taken_rvcJump) @[Frontend.scala 233:53]
    node taken_predictJump = or(_taken_predictJump_T, _taken_predictJump_T_1) @[Frontend.scala 233:44]
    node _taken_T_17 = or(taken_predictBranch, taken_predictJump) @[Frontend.scala 261:44]
    node _taken_T_18 = and(s2_valid, _taken_T_17) @[Frontend.scala 261:26]
    skip
    node _taken_npc_T = asSInt(s2_base_pc) @[Frontend.scala 264:32]
    node _taken_rviImm_T = bits(taken_rviBits, 3, 3) @[Frontend.scala 227:31]
    skip
    node _taken_rviImm_sign_T_1 = bits(taken_rviBits, 31, 31) @[RocketCore.scala 1037:48]
    node taken_rviImm_sign = asSInt(_taken_rviImm_sign_T_1) @[RocketCore.scala 1037:53]
    skip
    node taken_rviImm_hi_hi_hi = asUInt(taken_rviImm_sign) @[Cat.scala 30:58]
    skip
    skip
    skip
    node taken_rviImm_b30_20 = pad(taken_rviImm_sign, 11) @[RocketCore.scala 1038:21]
    node taken_rviImm_hi_hi_lo = asUInt(taken_rviImm_b30_20) @[Cat.scala 30:58]
    node taken_rviImm_hi_hi = cat(taken_rviImm_hi_hi_hi, taken_rviImm_hi_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _taken_rviImm_b19_12_T_3 = bits(taken_rviBits, 19, 12) @[RocketCore.scala 1039:65]
    node taken_rviImm_b19_12 = asSInt(_taken_rviImm_b19_12_T_3) @[RocketCore.scala 1039:73]
    skip
    node taken_rviImm_hi_lo_hi = asUInt(taken_rviImm_b19_12) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _taken_rviImm_b11_T_4 = bits(taken_rviBits, 20, 20) @[RocketCore.scala 1041:39]
    node taken_rviImm_b11 = asSInt(_taken_rviImm_b11_T_4) @[RocketCore.scala 1041:44]
    skip
    skip
    node _taken_rviImm_b11_T_8 = asSInt(_taken_rviReturn_T) @[RocketCore.scala 1042:43]
    skip
    skip
    skip
    node taken_rviImm_hi_lo_lo = asUInt(taken_rviImm_b11) @[Cat.scala 30:58]
    node taken_rviImm_hi_lo = cat(taken_rviImm_hi_lo_hi, taken_rviImm_hi_lo_lo) @[Cat.scala 30:58]
    node taken_rviImm_hi = cat(taken_rviImm_hi_hi, taken_rviImm_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    node taken_rviImm_lo_hi_hi = bits(taken_rviBits, 30, 25) @[RocketCore.scala 1043:66]
    skip
    skip
    skip
    skip
    skip
    node _taken_rviImm_b4_1_T_4 = bits(taken_rviBits, 11, 8) @[RocketCore.scala 1045:57]
    skip
    skip
    node taken_rviImm_lo_hi_lo = bits(taken_rviBits, 24, 21) @[RocketCore.scala 1046:52]
    skip
    skip
    skip
    node taken_rviImm_lo_hi = cat(taken_rviImm_lo_hi_hi, taken_rviImm_lo_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_lo = cat(taken_rviImm_lo_hi, UInt<1>("h0")) @[Cat.scala 30:58]
    node _taken_rviImm_T_1 = cat(taken_rviImm_hi, taken_rviImm_lo) @[Cat.scala 30:58]
    node _taken_rviImm_T_2 = asSInt(_taken_rviImm_T_1) @[RocketCore.scala 1051:53]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_b19_12_1 = pad(taken_rviImm_sign, 8) @[RocketCore.scala 1039:21]
    node taken_rviImm_hi_lo_hi_1 = asUInt(taken_rviImm_b19_12_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_hi_lo_lo_1 = asUInt(_taken_rviImm_b11_T_8) @[Cat.scala 30:58]
    node taken_rviImm_hi_lo_1 = cat(taken_rviImm_hi_lo_hi_1, taken_rviImm_hi_lo_lo_1) @[Cat.scala 30:58]
    node taken_rviImm_hi_1 = cat(taken_rviImm_hi_hi, taken_rviImm_hi_lo_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_lo_hi_1 = cat(taken_rviImm_lo_hi_hi, _taken_rviImm_b4_1_T_4) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node taken_rviImm_lo_1 = cat(taken_rviImm_lo_hi_1, UInt<1>("h0")) @[Cat.scala 30:58]
    node _taken_rviImm_T_3 = cat(taken_rviImm_hi_1, taken_rviImm_lo_1) @[Cat.scala 30:58]
    node _taken_rviImm_T_4 = asSInt(_taken_rviImm_T_3) @[RocketCore.scala 1051:53]
    node taken_rviImm = mux(_taken_rviImm_T, _taken_rviImm_T_2, _taken_rviImm_T_4) @[Frontend.scala 227:23]
    node _taken_npc_T_1 = sub(taken_rviImm, SInt<32>("h2")) @[Frontend.scala 264:61]
    node _taken_rvcImm_T = bits(taken_bits, 14, 14) @[Frontend.scala 222:28]
    node _taken_rvcImm_T_1 = bits(taken_bits, 12, 12) @[RVC.scala 45:27]
    skip
    node taken_rvcImm_hi_hi_hi = mux(_taken_rvcImm_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 72:12]
    node taken_rvcImm_hi_hi_lo = bits(taken_bits, 6, 5) @[RVC.scala 45:35]
    node taken_rvcImm_hi_hi = cat(taken_rvcImm_hi_hi_hi, taken_rvcImm_hi_hi_lo) @[Cat.scala 30:58]
    node taken_rvcImm_hi_lo = bits(taken_bits, 2, 2) @[RVC.scala 45:43]
    node taken_rvcImm_hi = cat(taken_rvcImm_hi_hi, taken_rvcImm_hi_lo) @[Cat.scala 30:58]
    node taken_rvcImm_lo_hi_hi = bits(taken_bits, 11, 10) @[RVC.scala 45:49]
    node taken_rvcImm_lo_hi_lo = bits(taken_bits, 4, 3) @[RVC.scala 45:59]
    node taken_rvcImm_lo_hi = cat(taken_rvcImm_lo_hi_hi, taken_rvcImm_lo_hi_lo) @[Cat.scala 30:58]
    node taken_rvcImm_lo = cat(taken_rvcImm_lo_hi, UInt<1>("h0")) @[Cat.scala 30:58]
    node _taken_rvcImm_T_3 = cat(taken_rvcImm_hi, taken_rvcImm_lo) @[Cat.scala 30:58]
    node _taken_rvcImm_T_4 = asSInt(_taken_rvcImm_T_3) @[Frontend.scala 222:66]
    skip
    skip
    node taken_rvcImm_hi_hi_hi_hi = mux(_taken_rvcImm_T_1, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 72:12]
    node taken_rvcImm_hi_hi_hi_lo = bits(taken_bits, 8, 8) @[RVC.scala 44:36]
    node taken_rvcImm_hi_hi_hi_1 = cat(taken_rvcImm_hi_hi_hi_hi, taken_rvcImm_hi_hi_hi_lo) @[Cat.scala 30:58]
    node taken_rvcImm_hi_hi_lo_1 = bits(taken_bits, 10, 9) @[RVC.scala 44:42]
    node taken_rvcImm_hi_hi_1 = cat(taken_rvcImm_hi_hi_hi_1, taken_rvcImm_hi_hi_lo_1) @[Cat.scala 30:58]
    node taken_rvcImm_hi_lo_hi = bits(taken_bits, 6, 6) @[RVC.scala 44:51]
    node taken_rvcImm_hi_lo_lo = bits(taken_bits, 7, 7) @[RVC.scala 44:57]
    node taken_rvcImm_hi_lo_1 = cat(taken_rvcImm_hi_lo_hi, taken_rvcImm_hi_lo_lo) @[Cat.scala 30:58]
    node taken_rvcImm_hi_1 = cat(taken_rvcImm_hi_hi_1, taken_rvcImm_hi_lo_1) @[Cat.scala 30:58]
    skip
    node taken_rvcImm_lo_hi_lo_1 = bits(taken_bits, 11, 11) @[RVC.scala 44:69]
    node taken_rvcImm_lo_hi_1 = cat(taken_rvcImm_hi_lo, taken_rvcImm_lo_hi_lo_1) @[Cat.scala 30:58]
    node taken_rvcImm_lo_lo_hi = bits(taken_bits, 5, 3) @[RVC.scala 44:76]
    node taken_rvcImm_lo_lo = cat(taken_rvcImm_lo_lo_hi, UInt<1>("h0")) @[Cat.scala 30:58]
    node taken_rvcImm_lo_1 = cat(taken_rvcImm_lo_hi_1, taken_rvcImm_lo_lo) @[Cat.scala 30:58]
    node _taken_rvcImm_T_7 = cat(taken_rvcImm_hi_1, taken_rvcImm_lo_1) @[Cat.scala 30:58]
    node _taken_rvcImm_T_8 = asSInt(_taken_rvcImm_T_7) @[Frontend.scala 222:106]
    node taken_rvcImm = mux(_taken_rvcImm_T, pad(_taken_rvcImm_T_4, 21), _taken_rvcImm_T_8) @[Frontend.scala 222:23]
    node _taken_npc_T_2 = mux(taken_prevRVI, _taken_npc_T_1, pad(taken_rvcImm, 33)) @[Frontend.scala 264:44]
    node _GEN_128 = pad(_taken_npc_T_2, 40) @[Frontend.scala 264:39]
    node _taken_npc_T_3 = add(_taken_npc_T, _GEN_128) @[Frontend.scala 264:39]
    node _taken_npc_T_4 = tail(_taken_npc_T_3, 1) @[Frontend.scala 264:39]
    node taken_npc = asSInt(_taken_npc_T_4) @[Frontend.scala 264:39]
    node _taken_predicted_npc_T = asUInt(taken_npc) @[Frontend.scala 266:34]
    node predicted_taken = and(btb.io_resp_valid, btb.io_resp_bits_taken) @[Frontend.scala 192:29]
    node predicted_npc_hi = bits(btb.io_resp_bits_target, 38, 38) @[package.scala 123:38]
    node _predicted_npc_T = cat(predicted_npc_hi, btb.io_resp_bits_target) @[Cat.scala 30:58]
    node _GEN_28 = mux(predicted_taken, _predicted_npc_T, ntpc) @[Frontend.scala 192:56 193:21]
    node _GEN_43 = mux(_taken_T_18, _taken_predicted_npc_T, _GEN_28) @[Frontend.scala 261:61 266:27]
    node _GEN_46 = mux(_taken_T_36, _GEN_43, _GEN_28) @[Frontend.scala 254:30]
    skip
    node _GEN_79 = mux(_taken_T_47, _taken_predicted_npc_T_1, _GEN_46) @[Frontend.scala 261:61 266:27]
    node _GEN_82 = mux(_taken_T_36, _GEN_79, _GEN_46) @[Frontend.scala 254:30]
    node _GEN_99 = mux(taken_idx, _GEN_82, _GEN_46) @[Frontend.scala 245:25]
    node predicted_npc = mux(useRAS, pad(btb.io_ras_head_bits, 40), _GEN_99) @[Frontend.scala 305:19 306:21]
    skip
    node npc = mux(s2_replay, s2_pc, predicted_npc) @[Frontend.scala 128:16]
    node _s0_speculative_T = not(s2_speculative) @[Frontend.scala 134:56]
    node _s0_speculative_T_1 = and(s2_valid, _s0_speculative_T) @[Frontend.scala 134:53]
    node _s0_speculative_T_2 = or(s1_speculative, _s0_speculative_T_1) @[Frontend.scala 134:41]
    skip
    skip
    node s0_speculative = or(_s0_speculative_T_2, predicted_taken) @[Frontend.scala 134:72]
    node _s1_speculative_T = mux(s2_replay, s2_speculative, s0_speculative) @[Frontend.scala 136:75]
    skip
    node _T_11 = not(s2_replay) @[Frontend.scala 140:9]
    skip
    node _taken_taken_T_9 = or(taken_rviJump_1, taken_rviJALR_1) @[Frontend.scala 230:29]
    node _taken_taken_T_10 = and(taken_rviBranch_1, s2_btb_resp_bits_bht_value) @[Frontend.scala 230:53]
    node _taken_taken_T_11 = or(_taken_taken_T_9, _taken_taken_T_10) @[Frontend.scala 230:40]
    node _taken_taken_T_12 = and(taken_prevRVI_1, _taken_taken_T_11) @[Frontend.scala 230:17]
    skip
    node _taken_rvcJALR_T_5 = eq(UInt<16>("h9002"), _taken_rvcJR_T_4) @[Frontend.scala 225:26]
    skip
    skip
    node taken_rvcJALR_1 = and(_taken_rvcJALR_T_5, _taken_rvcJR_T_7) @[Frontend.scala 225:49]
    node _taken_taken_T_13 = or(taken_rvcJump_1, taken_rvcJALR_1) @[Frontend.scala 231:27]
    node _taken_taken_T_14 = or(_taken_taken_T_13, taken_rvcJR_1) @[Frontend.scala 231:38]
    node _taken_taken_T_15 = and(taken_rvcBranch_1, s2_btb_resp_bits_bht_value) @[Frontend.scala 231:60]
    node _taken_taken_T_16 = or(_taken_taken_T_14, _taken_taken_T_15) @[Frontend.scala 231:47]
    node _taken_taken_T_17 = and(taken_valid_1, _taken_taken_T_16) @[Frontend.scala 231:15]
    node taken_taken_1 = or(_taken_taken_T_12, _taken_taken_T_17) @[Frontend.scala 230:71]
    node taken = or(taken_taken, taken_taken_1) @[Frontend.scala 286:19]
    skip
    node _GEN_116 = or(_s2_replay_T, io_cpu_req_valid) @[Frontend.scala 316:{33,47}]
    node _GEN_120 = mux(taken, _GEN_116, io_cpu_req_valid) @[Frontend.scala 312:20]
    node s2_redirect = mux(_taken_T_36, _GEN_120, io_cpu_req_valid) @[Frontend.scala 311:26]
    skip
    node _s2_valid_T = not(s2_redirect) @[Frontend.scala 141:17]
    node _GEN_0 = and(_T_11, _s2_valid_T) @[Frontend.scala 139:12 140:21 141:14]
    node _GEN_1 = mux(_T_11, s1_pc, s2_pc) @[Frontend.scala 140:21 142:11 110:22]
    node _GEN_2 = mux(_T_11, s1_speculative, s2_speculative) @[Frontend.scala 140:21 143:20 116:27]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _icache_io_s1_kill_T = or(s2_redirect, tlb.io_resp_miss) @[Frontend.scala 160:36]
    skip
    node _s2_can_speculatively_refill_T = bits(io_ptw_customCSRs_csrs_0_value, 3, 3) @[CustomCSRs.scala 40:69]
    node _s2_can_speculatively_refill_T_1 = not(_s2_can_speculatively_refill_T) @[Frontend.scala 161:62]
    node s2_can_speculatively_refill = and(s2_tlb_resp_cacheable, _s2_can_speculatively_refill_T_1) @[Frontend.scala 161:59]
    node _icache_io_s2_kill_T = not(s2_can_speculatively_refill) @[Frontend.scala 162:42]
    node _icache_io_s2_kill_T_1 = and(s2_speculative, _icache_io_s2_kill_T) @[Frontend.scala 162:39]
    skip
    skip
    skip
    skip
    reg fq_io_enq_valid_REG : UInt<1>, gated_clock with :
      reset => (UInt<1>("h0"), fq_io_enq_valid_REG) @[Frontend.scala 165:29]
    node _fq_io_enq_valid_T = and(fq_io_enq_valid_REG, s2_valid) @[Frontend.scala 165:40]
    node _fq_io_enq_valid_T_1 = not(s2_tlb_resp_miss) @[Frontend.scala 165:80]
    node _fq_io_enq_valid_T_2 = and(_fq_io_enq_valid_T_1, icache.io_s2_kill) @[Frontend.scala 165:98]
    node _fq_io_enq_valid_T_3 = or(icache.io_resp_valid, _fq_io_enq_valid_T_2) @[Frontend.scala 165:77]
    skip
    node _io_cpu_npc_T = mux(io_cpu_req_valid, io_cpu_req_bits_pc, npc) @[Frontend.scala 167:28]
    node _io_cpu_npc_T_1 = not(_io_cpu_npc_T) @[Frontend.scala 341:29]
    node _io_cpu_npc_T_2 = or(_io_cpu_npc_T_1, UInt<40>("h1")) @[Frontend.scala 341:33]
    skip
    node _fq_io_enq_bits_mask_T = bits(s2_pc, 1, 1) @[package.scala 154:13]
    node _fq_io_enq_bits_mask_T_1 = dshl(UInt<2>("h3"), _fq_io_enq_bits_mask_T) @[Frontend.scala 170:52]
    node _fq_io_enq_bits_replay_T = not(icache.io_resp_valid) @[Frontend.scala 171:79]
    node _fq_io_enq_bits_replay_T_1 = and(icache.io_s2_kill, _fq_io_enq_bits_replay_T) @[Frontend.scala 171:76]
    node _fq_io_enq_bits_replay_T_2 = not(s2_xcpt) @[Frontend.scala 171:104]
    node _fq_io_enq_bits_replay_T_3 = and(_fq_io_enq_bits_replay_T_1, _fq_io_enq_bits_replay_T_2) @[Frontend.scala 171:101]
    skip
    skip
    node _T_13 = and(s2_speculative, _s2_can_speculatively_refill_T) @[Frontend.scala 175:27]
    node _T_14 = not(icache.io_s2_kill) @[Frontend.scala 175:113]
    node _T_15 = and(_T_13, _T_14) @[Frontend.scala 175:110]
    node _T_16 = not(_T_15) @[Frontend.scala 175:10]
    skip
    node _T_18 = or(_T_16, reset) @[Frontend.scala 175:9]
    node _T_19 = not(_T_18) @[Frontend.scala 175:9]
    node _T_20 = and(icache.io_resp_valid, icache.io_resp_bits_ae) @[Frontend.scala 176:30]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_23 = not(io_cpu_btb_update_valid) @[Frontend.scala 292:11]
    node _fetch_bubble_likely_T = bits(fq.io_mask, 1, 1) @[Frontend.scala 293:44]
    node fetch_bubble_likely = not(_fetch_bubble_likely_T) @[Frontend.scala 293:33]
    skip
    node _btb_io_btb_update_valid_T_1 = not(wrong_path) @[Frontend.scala 294:54]
    node _btb_io_btb_update_valid_T_2 = and(_s2_replay_T, _btb_io_btb_update_valid_T_1) @[Frontend.scala 294:51]
    node _btb_io_btb_update_valid_T_3 = and(_btb_io_btb_update_valid_T_2, fetch_bubble_likely) @[Frontend.scala 294:66]
    node _taken_T_51 = not(s2_btb_resp_valid) @[Frontend.scala 273:15]
    skip
    node _taken_T_53 = and(taken_predictBranch_1, s2_btb_resp_bits_bht_value) @[Frontend.scala 273:52]
    node _taken_T_54 = or(_taken_T_53, taken_predictJump_1) @[Frontend.scala 273:91]
    node _taken_T_55 = or(_taken_T_54, taken_predictReturn_1) @[Frontend.scala 273:106]
    node _taken_T_56 = and(_taken_T_51, _taken_T_55) @[Frontend.scala 273:34]
    skip
    skip
    node _taken_T_24 = and(taken_predictBranch, s2_btb_resp_bits_bht_value) @[Frontend.scala 273:52]
    node _taken_T_25 = or(_taken_T_24, taken_predictJump) @[Frontend.scala 273:91]
    node _taken_T_26 = or(_taken_T_25, taken_predictReturn) @[Frontend.scala 273:106]
    node _taken_T_27 = and(_taken_T_51, _taken_T_26) @[Frontend.scala 273:34]
    skip
    skip
    node _GEN_92 = or(_taken_T_56, _taken_T_27) @[Frontend.scala 273:125 274:21]
    node updateBTB = mux(taken_idx, _GEN_92, _taken_T_27) @[Frontend.scala 245:25]
    skip
    node _btb_io_btb_update_valid_T_4 = and(_btb_io_btb_update_valid_T_3, updateBTB) @[Frontend.scala 294:89]
    skip
    skip
    skip
    node _btb_io_btb_update_bits_br_pc_T = shl(taken_idx, 1) @[Frontend.scala 298:63]
    node _GEN_129 = pad(_btb_io_btb_update_bits_br_pc_T, 40) @[Frontend.scala 298:50]
    node _btb_io_btb_update_bits_br_pc_T_1 = or(s2_base_pc, _GEN_129) @[Frontend.scala 298:50]
    skip
    skip
    skip
    skip
    node _GEN_36 = mux(_T_23, _btb_io_btb_update_bits_br_pc_T_1, pad(io_cpu_btb_update_bits_br_pc, 40)) @[Frontend.scala 183:23 292:37 298:36]
    node _GEN_37 = mux(_T_23, s2_base_pc, pad(io_cpu_btb_update_bits_pc, 40)) @[Frontend.scala 183:23 292:37 299:33]
    skip
    node after_idx = mux(taken_idx, UInt<2>("h2"), UInt<2>("h1")) @[Frontend.scala 245:25 247:19]
    skip
    node _btb_io_ras_update_bits_returnAddr_T = shl(after_idx, 1) @[Frontend.scala 302:66]
    node _GEN_130 = pad(_btb_io_ras_update_bits_returnAddr_T, 40) @[Frontend.scala 302:53]
    node _btb_io_ras_update_bits_returnAddr_T_1 = add(s2_base_pc, _GEN_130) @[Frontend.scala 302:53]
    node _btb_io_ras_update_bits_returnAddr_T_2 = tail(_btb_io_ras_update_bits_returnAddr_T_1, 1) @[Frontend.scala 302:53]
    skip
    skip
    node _taken_rviCall_T = or(taken_rviJALR, taken_rviJump) @[Frontend.scala 218:30]
    skip
    node taken_rviCall = and(_taken_rviCall_T, _taken_rviReturn_T) @[Frontend.scala 218:42]
    skip
    node _taken_T = and(s2_valid, s2_btb_resp_valid) @[Frontend.scala 236:22]
    node _taken_T_1 = not(s2_btb_resp_bits_bridx) @[Frontend.scala 236:69]
    node _taken_T_2 = and(_taken_T, _taken_T_1) @[Frontend.scala 236:43]
    node _taken_T_3 = and(_taken_T_2, taken_valid) @[Frontend.scala 236:77]
    skip
    node _taken_T_5 = and(_taken_T_3, _taken_prevRVI_T_5) @[Frontend.scala 236:86]
    skip
    node _GEN_39 = or(_taken_T_5, _fq_io_enq_bits_replay_T_3) @[Frontend.scala 171:25 236:95 240:31]
    node _GEN_40 = or(_taken_T_5, wrong_path) @[Frontend.scala 236:95 241:20 119:27]
    skip
    skip
    skip
    node _taken_btb_io_ras_update_valid_T_3 = or(taken_rviCall, taken_rviReturn) @[Frontend.scala 248:92]
    node _taken_btb_io_ras_update_valid_T_4 = and(taken_prevRVI, _taken_btb_io_ras_update_valid_T_3) @[Frontend.scala 248:80]
    node _taken_btb_io_ras_update_valid_T_5 = or(taken_rvcJALR, taken_rvcReturn) @[Frontend.scala 248:127]
    node _taken_btb_io_ras_update_valid_T_6 = and(taken_valid, _taken_btb_io_ras_update_valid_T_5) @[Frontend.scala 248:115]
    node _taken_btb_io_ras_update_valid_T_7 = or(_taken_btb_io_ras_update_valid_T_4, _taken_btb_io_ras_update_valid_T_6) @[Frontend.scala 248:106]
    node _taken_btb_io_ras_update_valid_T_8 = and(_btb_io_btb_update_valid_T_2, _taken_btb_io_ras_update_valid_T_7) @[Frontend.scala 248:68]
    node _taken_btb_io_ras_update_bits_cfiType_T = mux(taken_prevRVI, taken_rviReturn, taken_rvcReturn) @[Frontend.scala 249:50]
    node _taken_btb_io_ras_update_bits_cfiType_T_1 = mux(taken_prevRVI, taken_rviCall, taken_rvcJALR) @[Frontend.scala 250:50]
    node _taken_btb_io_ras_update_bits_cfiType_T_2 = mux(taken_prevRVI, taken_rviBranch, taken_rvcBranch) @[Frontend.scala 251:50]
    skip
    skip
    node _taken_btb_io_ras_update_bits_cfiType_T_5 = mux(_taken_btb_io_ras_update_bits_cfiType_T_2, UInt<1>("h0"), UInt<1>("h1")) @[Frontend.scala 251:46]
    node _taken_btb_io_ras_update_bits_cfiType_T_6 = mux(_taken_btb_io_ras_update_bits_cfiType_T_1, UInt<2>("h2"), pad(_taken_btb_io_ras_update_bits_cfiType_T_5, 2)) @[Frontend.scala 250:46]
    node _taken_btb_io_ras_update_bits_cfiType_T_7 = mux(_taken_btb_io_ras_update_bits_cfiType_T, UInt<2>("h3"), _taken_btb_io_ras_update_bits_cfiType_T_6) @[Frontend.scala 249:46]
    skip
    node _taken_T_9 = and(_s2_replay_T, taken_taken) @[Frontend.scala 255:34]
    node _taken_T_10 = not(taken_predictBranch) @[Frontend.scala 255:46]
    node _taken_T_11 = and(_taken_T_9, _taken_T_10) @[Frontend.scala 255:43]
    node _taken_T_12 = not(taken_predictJump) @[Frontend.scala 255:64]
    node _taken_T_13 = and(_taken_T_11, _taken_T_12) @[Frontend.scala 255:61]
    node _taken_T_14 = not(taken_predictReturn) @[Frontend.scala 255:80]
    node _taken_T_15 = and(_taken_T_13, _taken_T_14) @[Frontend.scala 255:77]
    node _GEN_41 = or(_taken_T_15, _GEN_40) @[Frontend.scala 255:96 256:24]
    node _GEN_44 = mux(_taken_T_36, _GEN_41, _GEN_40) @[Frontend.scala 254:30]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_47 = and(_taken_predictBranch_T_2, _btb_io_btb_update_valid_T_2) @[Frontend.scala 186:30 269:59 270:36]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _taken_rvc_T_1 = bits(taken_bits_1, 1, 0) @[Frontend.scala 208:39]
    node taken_rvc_1 = neq(_taken_rvc_T_1, UInt<2>("h3")) @[Frontend.scala 208:45]
    node _taken_rviCall_T_2 = or(taken_rviJALR_1, taken_rviJump_1) @[Frontend.scala 218:30]
    skip
    node taken_rviCall_1 = and(_taken_rviCall_T_2, _taken_rviReturn_T_6) @[Frontend.scala 218:42]
    skip
    skip
    skip
    node _taken_T_31 = and(_taken_T, s2_btb_resp_bits_bridx) @[Frontend.scala 236:43]
    node _taken_T_32 = and(_taken_T_31, taken_valid_1) @[Frontend.scala 236:77]
    node _taken_T_33 = not(taken_rvc_1) @[Frontend.scala 236:89]
    node _taken_T_34 = and(_taken_T_32, _taken_T_33) @[Frontend.scala 236:86]
    skip
    skip
    node _GEN_76 = or(_taken_T_34, _GEN_44) @[Frontend.scala 236:95 241:20]
    skip
    skip
    skip
    node _taken_btb_io_ras_update_valid_T_12 = or(taken_rviCall_1, taken_rviReturn_1) @[Frontend.scala 248:92]
    node _taken_btb_io_ras_update_valid_T_13 = and(taken_prevRVI_1, _taken_btb_io_ras_update_valid_T_12) @[Frontend.scala 248:80]
    node _taken_btb_io_ras_update_valid_T_14 = or(taken_rvcJALR_1, taken_rvcReturn_1) @[Frontend.scala 248:127]
    node _taken_btb_io_ras_update_valid_T_15 = and(taken_valid_1, _taken_btb_io_ras_update_valid_T_14) @[Frontend.scala 248:115]
    node _taken_btb_io_ras_update_valid_T_16 = or(_taken_btb_io_ras_update_valid_T_13, _taken_btb_io_ras_update_valid_T_15) @[Frontend.scala 248:106]
    node _taken_btb_io_ras_update_valid_T_17 = and(_btb_io_btb_update_valid_T_2, _taken_btb_io_ras_update_valid_T_16) @[Frontend.scala 248:68]
    node _taken_btb_io_ras_update_bits_cfiType_T_8 = mux(taken_prevRVI_1, taken_rviReturn_1, taken_rvcReturn_1) @[Frontend.scala 249:50]
    node _taken_btb_io_ras_update_bits_cfiType_T_9 = mux(taken_prevRVI_1, taken_rviCall_1, taken_rvcJALR_1) @[Frontend.scala 250:50]
    node _taken_btb_io_ras_update_bits_cfiType_T_10 = mux(taken_prevRVI_1, taken_rviBranch_1, taken_rvcBranch_1) @[Frontend.scala 251:50]
    skip
    skip
    node _taken_btb_io_ras_update_bits_cfiType_T_13 = mux(_taken_btb_io_ras_update_bits_cfiType_T_10, UInt<1>("h0"), UInt<1>("h1")) @[Frontend.scala 251:46]
    node _taken_btb_io_ras_update_bits_cfiType_T_14 = mux(_taken_btb_io_ras_update_bits_cfiType_T_9, UInt<2>("h2"), pad(_taken_btb_io_ras_update_bits_cfiType_T_13, 2)) @[Frontend.scala 250:46]
    node _taken_btb_io_ras_update_bits_cfiType_T_15 = mux(_taken_btb_io_ras_update_bits_cfiType_T_8, UInt<2>("h3"), _taken_btb_io_ras_update_bits_cfiType_T_14) @[Frontend.scala 249:46]
    skip
    node _taken_T_38 = and(_s2_replay_T, taken_taken_1) @[Frontend.scala 255:34]
    node _taken_T_39 = not(taken_predictBranch_1) @[Frontend.scala 255:46]
    node _taken_T_40 = and(_taken_T_38, _taken_T_39) @[Frontend.scala 255:43]
    node _taken_T_41 = not(taken_predictJump_1) @[Frontend.scala 255:64]
    node _taken_T_42 = and(_taken_T_40, _taken_T_41) @[Frontend.scala 255:61]
    node _taken_T_43 = not(taken_predictReturn_1) @[Frontend.scala 255:80]
    node _taken_T_44 = and(_taken_T_42, _taken_T_43) @[Frontend.scala 255:77]
    node _GEN_77 = or(_taken_T_44, _GEN_76) @[Frontend.scala 255:96 256:24]
    node _GEN_80 = mux(_taken_T_36, _GEN_77, _GEN_76) @[Frontend.scala 254:30]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_83 = mux(_taken_predictBranch_T_5, _btb_io_btb_update_valid_T_2, _GEN_47) @[Frontend.scala 269:59 270:36]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_97 = mux(taken_idx, _GEN_80, _GEN_76) @[Frontend.scala 245:25]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _taken_T_59 = and(taken_valid_1, taken_idx) @[Frontend.scala 281:23]
    skip
    node _taken_T_61 = and(_taken_T_59, _taken_T_33) @[Frontend.scala 281:37]
    node _taken_lo_T = or(taken_bits_1, UInt<16>("h3")) @[Frontend.scala 283:37]
    skip
    node _GEN_111 = mux(_taken_T_61, _taken_lo_T, s2_partial_insn) @[Frontend.scala 118:28 281:46 283:29]
    node _GEN_112 = mux(_s2_replay_T, _taken_T_61, s2_partial_insn_valid) @[Frontend.scala 279:33 117:38]
    skip
    skip
    node _T_25 = or(s2_btb_taken, taken) @[Frontend.scala 308:45]
    node _T_26 = and(_s2_replay_T, _T_25) @[Frontend.scala 308:28]
    node _GEN_115 = mux(_T_26, UInt<1>("h0"), _GEN_112) @[Frontend.scala 308:56 309:29]
    node _GEN_117 = mux(taken, taken_idx, s2_btb_resp_bits_bridx) @[Frontend.scala 312:20 172:22 313:34]
    node _GEN_118 = or(taken, s2_btb_taken) @[Frontend.scala 312:20 173:28 314:34]
    node _GEN_119 = mux(taken, UInt<5>("h1c"), s2_btb_resp_bits_entry) @[Frontend.scala 312:20 172:22 315:34]
    skip
    skip
    skip
    node _T_29 = not(s2_partial_insn_valid) @[Frontend.scala 320:12]
    skip
    node _T_31 = or(_T_29, _taken_valid_T) @[Frontend.scala 320:35]
    skip
    node _T_33 = or(_T_31, reset) @[Frontend.scala 320:11]
    node _T_34 = not(_T_33) @[Frontend.scala 320:11]
    node _GEN_125 = mux(s2_redirect, UInt<1>("h0"), _GEN_115) @[Frontend.scala 321:{24,48}]
    node _GEN_126 = mux(io_cpu_req_valid, UInt<1>("h0"), _GEN_97) @[Frontend.scala 322:{29,42}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    auto_icache_master_out_a_valid <= icache.auto_master_out_a_valid @[LazyModule.scala 311:12]
    skip
    skip
    skip
    skip
    auto_icache_master_out_a_bits_address <= icache.auto_master_out_a_bits_address @[LazyModule.scala 311:12]
    skip
    skip
    skip
    skip
    skip
    io_cpu_resp_valid <= fq.io_deq_valid @[Frontend.scala 325:15]
    skip
    io_cpu_resp_bits_btb_taken <= fq.io_deq_bits_btb_taken @[Frontend.scala 325:15]
    skip
    io_cpu_resp_bits_btb_bridx <= fq.io_deq_bits_btb_bridx @[Frontend.scala 325:15]
    skip
    io_cpu_resp_bits_btb_entry <= fq.io_deq_bits_btb_entry @[Frontend.scala 325:15]
    io_cpu_resp_bits_btb_bht_history <= fq.io_deq_bits_btb_bht_history @[Frontend.scala 325:15]
    skip
    io_cpu_resp_bits_pc <= fq.io_deq_bits_pc @[Frontend.scala 325:15]
    io_cpu_resp_bits_data <= fq.io_deq_bits_data @[Frontend.scala 325:15]
    skip
    io_cpu_resp_bits_xcpt_pf_inst <= fq.io_deq_bits_xcpt_pf_inst @[Frontend.scala 325:15]
    io_cpu_resp_bits_xcpt_ae_inst <= fq.io_deq_bits_xcpt_ae_inst @[Frontend.scala 325:15]
    io_cpu_resp_bits_replay <= fq.io_deq_bits_replay @[Frontend.scala 325:15]
    io_cpu_npc <= not(_io_cpu_npc_T_2) @[Frontend.scala 341:27]
    skip
    skip
    io_ptw_req_valid <= tlb.io_ptw_req_valid @[Frontend.scala 147:10]
    io_ptw_req_bits_valid <= tlb.io_ptw_req_bits_valid @[Frontend.scala 147:10]
    io_ptw_req_bits_bits_addr <= tlb.io_ptw_req_bits_bits_addr @[Frontend.scala 147:10]
    skip
    skip
    icache.clock <= gated_clock @[Frontend.scala 94:16]
    icache.reset <= reset
    icache.auto_master_out_a_ready <= auto_icache_master_out_a_ready @[LazyModule.scala 311:12]
    icache.auto_master_out_d_valid <= auto_icache_master_out_d_valid @[LazyModule.scala 311:12]
    icache.auto_master_out_d_bits_opcode <= auto_icache_master_out_d_bits_opcode @[LazyModule.scala 311:12]
    skip
    icache.auto_master_out_d_bits_size <= auto_icache_master_out_d_bits_size @[LazyModule.scala 311:12]
    skip
    skip
    skip
    icache.auto_master_out_d_bits_data <= auto_icache_master_out_d_bits_data @[LazyModule.scala 311:12]
    icache.auto_master_out_d_bits_corrupt <= auto_icache_master_out_d_bits_corrupt @[LazyModule.scala 311:12]
    icache.io_req_valid <= or(io_cpu_req_valid, s0_fq_has_space) @[Frontend.scala 106:35]
    icache.io_req_bits_addr <= bits(io_cpu_npc, 38, 0) @[Frontend.scala 156:27]
    icache.io_s1_paddr <= tlb.io_resp_paddr @[Frontend.scala 158:22]
    skip
    icache.io_s1_kill <= or(_icache_io_s1_kill_T, s2_replay) @[Frontend.scala 160:56]
    icache.io_s2_kill <= or(_icache_io_s2_kill_T_1, s2_xcpt) @[Frontend.scala 162:71]
    skip
    icache.io_invalidate <= io_cpu_flush_icache @[Frontend.scala 157:24]
    skip
    fq.clock <= gated_clock
    fq.reset <= or(reset, io_cpu_req_valid) @[Frontend.scala 84:28]
    fq.io_enq_valid <= and(_fq_io_enq_valid_T, _fq_io_enq_valid_T_3) @[Frontend.scala 165:52]
    skip
    fq.io_enq_bits_btb_taken <= mux(_taken_T_36, _GEN_118, s2_btb_taken) @[Frontend.scala 311:26 173:28]
    skip
    fq.io_enq_bits_btb_bridx <= mux(_taken_T_36, _GEN_117, s2_btb_resp_bits_bridx) @[Frontend.scala 172:22 311:26]
    skip
    fq.io_enq_bits_btb_entry <= mux(_taken_T_36, _GEN_119, s2_btb_resp_bits_entry) @[Frontend.scala 172:22 311:26]
    fq.io_enq_bits_btb_bht_history <= s2_btb_resp_bits_bht_history @[Frontend.scala 172:22]
    skip
    fq.io_enq_bits_pc <= s2_pc @[Frontend.scala 166:21]
    fq.io_enq_bits_data <= icache.io_resp_bits_data @[Frontend.scala 169:23]
    fq.io_enq_bits_mask <= bits(_fq_io_enq_bits_mask_T_1, 1, 0) @[Frontend.scala 170:23]
    fq.io_enq_bits_xcpt_pf_inst <= s2_tlb_resp_pf_inst @[Frontend.scala 174:23]
    fq.io_enq_bits_xcpt_ae_inst <= or(_T_20, s2_tlb_resp_ae_inst) @[Frontend.scala 174:23 176:{57,87}]
    fq.io_enq_bits_replay <= or(_taken_T_34, _GEN_39) @[Frontend.scala 236:95 240:31]
    fq.io_deq_ready <= io_cpu_resp_ready @[Frontend.scala 325:15]
    skip
    tlb.clock <= gated_clock
    tlb.reset <= reset
    tlb.io_req_valid <= and(s1_valid, _T_11) @[Frontend.scala 148:32]
    tlb.io_req_bits_vaddr <= s1_pc @[Frontend.scala 149:25]
    skip
    skip
    skip
    tlb.io_sfence_valid <= io_cpu_sfence_valid @[Frontend.scala 152:17]
    tlb.io_sfence_bits_rs1 <= io_cpu_sfence_bits_rs1 @[Frontend.scala 152:17]
    tlb.io_sfence_bits_rs2 <= io_cpu_sfence_bits_rs2 @[Frontend.scala 152:17]
    tlb.io_sfence_bits_addr <= io_cpu_sfence_bits_addr @[Frontend.scala 152:17]
    skip
    tlb.io_ptw_req_ready <= io_ptw_req_ready @[Frontend.scala 147:10]
    tlb.io_ptw_resp_valid <= io_ptw_resp_valid @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_ae <= io_ptw_resp_bits_ae @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_pte_ppn <= io_ptw_resp_bits_pte_ppn @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_resp_bits_pte_d <= io_ptw_resp_bits_pte_d @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_pte_a <= io_ptw_resp_bits_pte_a @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_pte_g <= io_ptw_resp_bits_pte_g @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_pte_u <= io_ptw_resp_bits_pte_u @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_pte_x <= io_ptw_resp_bits_pte_x @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_pte_w <= io_ptw_resp_bits_pte_w @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_pte_r <= io_ptw_resp_bits_pte_r @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_pte_v <= io_ptw_resp_bits_pte_v @[Frontend.scala 147:10]
    tlb.io_ptw_resp_bits_level <= io_ptw_resp_bits_level @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_resp_bits_homogeneous <= io_ptw_resp_bits_homogeneous @[Frontend.scala 147:10]
    tlb.io_ptw_ptbr_mode <= io_ptw_ptbr_mode @[Frontend.scala 147:10]
    skip
    skip
    tlb.io_ptw_status_debug <= io_ptw_status_debug @[Frontend.scala 147:10]
    skip
    skip
    skip
    skip
    tlb.io_ptw_status_prv <= io_ptw_status_prv @[Frontend.scala 147:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    tlb.io_ptw_pmp_0_cfg_l <= io_ptw_pmp_0_cfg_l @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_pmp_0_cfg_a <= io_ptw_pmp_0_cfg_a @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_0_cfg_x <= io_ptw_pmp_0_cfg_x @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_0_cfg_w <= io_ptw_pmp_0_cfg_w @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_0_cfg_r <= io_ptw_pmp_0_cfg_r @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_0_addr <= io_ptw_pmp_0_addr @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_0_mask <= io_ptw_pmp_0_mask @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_1_cfg_l <= io_ptw_pmp_1_cfg_l @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_pmp_1_cfg_a <= io_ptw_pmp_1_cfg_a @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_1_cfg_x <= io_ptw_pmp_1_cfg_x @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_1_cfg_w <= io_ptw_pmp_1_cfg_w @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_1_cfg_r <= io_ptw_pmp_1_cfg_r @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_1_addr <= io_ptw_pmp_1_addr @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_1_mask <= io_ptw_pmp_1_mask @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_2_cfg_l <= io_ptw_pmp_2_cfg_l @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_pmp_2_cfg_a <= io_ptw_pmp_2_cfg_a @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_2_cfg_x <= io_ptw_pmp_2_cfg_x @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_2_cfg_w <= io_ptw_pmp_2_cfg_w @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_2_cfg_r <= io_ptw_pmp_2_cfg_r @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_2_addr <= io_ptw_pmp_2_addr @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_2_mask <= io_ptw_pmp_2_mask @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_3_cfg_l <= io_ptw_pmp_3_cfg_l @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_pmp_3_cfg_a <= io_ptw_pmp_3_cfg_a @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_3_cfg_x <= io_ptw_pmp_3_cfg_x @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_3_cfg_w <= io_ptw_pmp_3_cfg_w @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_3_cfg_r <= io_ptw_pmp_3_cfg_r @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_3_addr <= io_ptw_pmp_3_addr @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_3_mask <= io_ptw_pmp_3_mask @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_4_cfg_l <= io_ptw_pmp_4_cfg_l @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_pmp_4_cfg_a <= io_ptw_pmp_4_cfg_a @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_4_cfg_x <= io_ptw_pmp_4_cfg_x @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_4_cfg_w <= io_ptw_pmp_4_cfg_w @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_4_cfg_r <= io_ptw_pmp_4_cfg_r @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_4_addr <= io_ptw_pmp_4_addr @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_4_mask <= io_ptw_pmp_4_mask @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_5_cfg_l <= io_ptw_pmp_5_cfg_l @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_pmp_5_cfg_a <= io_ptw_pmp_5_cfg_a @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_5_cfg_x <= io_ptw_pmp_5_cfg_x @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_5_cfg_w <= io_ptw_pmp_5_cfg_w @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_5_cfg_r <= io_ptw_pmp_5_cfg_r @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_5_addr <= io_ptw_pmp_5_addr @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_5_mask <= io_ptw_pmp_5_mask @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_6_cfg_l <= io_ptw_pmp_6_cfg_l @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_pmp_6_cfg_a <= io_ptw_pmp_6_cfg_a @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_6_cfg_x <= io_ptw_pmp_6_cfg_x @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_6_cfg_w <= io_ptw_pmp_6_cfg_w @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_6_cfg_r <= io_ptw_pmp_6_cfg_r @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_6_addr <= io_ptw_pmp_6_addr @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_6_mask <= io_ptw_pmp_6_mask @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_7_cfg_l <= io_ptw_pmp_7_cfg_l @[Frontend.scala 147:10]
    skip
    tlb.io_ptw_pmp_7_cfg_a <= io_ptw_pmp_7_cfg_a @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_7_cfg_x <= io_ptw_pmp_7_cfg_x @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_7_cfg_w <= io_ptw_pmp_7_cfg_w @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_7_cfg_r <= io_ptw_pmp_7_cfg_r @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_7_addr <= io_ptw_pmp_7_addr @[Frontend.scala 147:10]
    tlb.io_ptw_pmp_7_mask <= io_ptw_pmp_7_mask @[Frontend.scala 147:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    tlb.io_kill <= not(s2_valid) @[Frontend.scala 153:18]
    s1_valid <= or(io_cpu_req_valid, s0_fq_has_space) @[Frontend.scala 106:35]
    s2_valid <= mux(reset, UInt<1>("h0"), _GEN_0) @[Frontend.scala 101:{25,25}]
    s1_pc <= io_cpu_npc @[Frontend.scala 130:9]
    s1_speculative <= mux(io_cpu_req_valid, io_cpu_req_bits_speculative, _s1_speculative_T) @[Frontend.scala 136:24]
    s2_pc <= mux(reset, pad(_s2_pc_T_2, 40), _GEN_1) @[Frontend.scala 110:{22,22}]
    s2_btb_resp_valid <= mux(_T_11, btb.io_resp_valid, s2_btb_resp_valid) @[Frontend.scala 187:23 189:25 111:44]
    skip
    s2_btb_resp_bits_taken <= mux(_T_11, btb.io_resp_bits_taken, s2_btb_resp_bits_taken) @[Frontend.scala 187:23 190:24 112:29]
    skip
    s2_btb_resp_bits_bridx <= mux(_T_11, btb.io_resp_bits_bridx, s2_btb_resp_bits_bridx) @[Frontend.scala 187:23 190:24 112:29]
    skip
    s2_btb_resp_bits_entry <= mux(_T_11, btb.io_resp_bits_entry, s2_btb_resp_bits_entry) @[Frontend.scala 187:23 190:24 112:29]
    s2_btb_resp_bits_bht_history <= mux(_T_11, btb.io_resp_bits_bht_history, s2_btb_resp_bits_bht_history) @[Frontend.scala 187:23 190:24 112:29]
    s2_btb_resp_bits_bht_value <= mux(_T_11, btb.io_resp_bits_bht_value, s2_btb_resp_bits_bht_value) @[Frontend.scala 187:23 190:24 112:29]
    s2_tlb_resp_miss <= mux(_T_11, tlb.io_resp_miss, s2_tlb_resp_miss) @[Frontend.scala 140:21 144:17 114:24]
    skip
    skip
    skip
    s2_tlb_resp_pf_inst <= mux(_T_11, tlb.io_resp_pf_inst, s2_tlb_resp_pf_inst) @[Frontend.scala 140:21 144:17 114:24]
    skip
    skip
    s2_tlb_resp_ae_inst <= mux(_T_11, tlb.io_resp_ae_inst, s2_tlb_resp_ae_inst) @[Frontend.scala 140:21 144:17 114:24]
    skip
    skip
    skip
    s2_tlb_resp_cacheable <= mux(_T_11, tlb.io_resp_cacheable, s2_tlb_resp_cacheable) @[Frontend.scala 140:21 144:17 114:24]
    skip
    skip
    s2_speculative <= mux(reset, UInt<1>("h0"), _GEN_2) @[Frontend.scala 116:{27,27}]
    s2_partial_insn_valid <= mux(reset, UInt<1>("h0"), _GEN_125) @[Frontend.scala 117:{38,38}]
    s2_partial_insn <= mux(_s2_replay_T, _GEN_111, s2_partial_insn) @[Frontend.scala 118:28 279:33]
    wrong_path <= mux(reset, UInt<1>("h0"), _GEN_126) @[Frontend.scala 119:{27,27}]
    s2_replay_REG <= or(reset, _s2_replay_T_4) @[Frontend.scala 127:{58,58,58}]
    fq_io_enq_valid_REG <= s1_valid @[Frontend.scala 165:29]
    btb.clock <= gated_clock
    btb.reset <= reset
    skip
    btb.io_req_bits_addr <= bits(s1_pc, 38, 0) @[Frontend.scala 182:26]
    btb.io_btb_update_valid <= mux(_T_23, _btb_io_btb_update_valid_T_4, io_cpu_btb_update_valid) @[Frontend.scala 183:23 292:37 294:31]
    skip
    skip
    skip
    skip
    skip
    btb.io_btb_update_bits_prediction_entry <= mux(_T_23, UInt<5>("h1c"), io_cpu_btb_update_bits_prediction_entry) @[Frontend.scala 183:23 292:37 295:47]
    skip
    skip
    btb.io_btb_update_bits_pc <= bits(_GEN_37, 38, 0)
    skip
    skip
    btb.io_btb_update_bits_isValid <= or(_T_23, io_cpu_btb_update_bits_isValid) @[Frontend.scala 183:23 292:37 296:38]
    btb.io_btb_update_bits_br_pc <= bits(_GEN_36, 38, 0)
    btb.io_btb_update_bits_cfiType <= mux(_T_23, btb.io_ras_update_bits_cfiType, io_cpu_btb_update_bits_cfiType) @[Frontend.scala 183:23 292:37 297:38]
    btb.io_bht_update_valid <= io_cpu_bht_update_valid @[Frontend.scala 184:23 199:{24,50}]
    btb.io_bht_update_bits_prediction_history <= io_cpu_bht_update_bits_prediction_history @[Frontend.scala 184:23]
    skip
    btb.io_bht_update_bits_pc <= io_cpu_bht_update_bits_pc @[Frontend.scala 184:23]
    btb.io_bht_update_bits_branch <= io_cpu_bht_update_bits_branch @[Frontend.scala 184:23]
    btb.io_bht_update_bits_taken <= io_cpu_bht_update_bits_taken @[Frontend.scala 184:23]
    btb.io_bht_update_bits_mispredict <= io_cpu_bht_update_bits_mispredict @[Frontend.scala 184:23]
    btb.io_bht_advance_valid <= mux(taken_idx, _GEN_83, _GEN_47) @[Frontend.scala 245:25]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    btb.io_bht_advance_bits_bht_value <= s2_btb_resp_bits_bht_value @[Frontend.scala 245:25]
    btb.io_ras_update_valid <= mux(taken_idx, _taken_btb_io_ras_update_valid_T_17, _taken_btb_io_ras_update_valid_T_8) @[Frontend.scala 245:25 248:33]
    btb.io_ras_update_bits_cfiType <= mux(taken_idx, _taken_btb_io_ras_update_bits_cfiType_T_15, _taken_btb_io_ras_update_bits_cfiType_T_7) @[Frontend.scala 245:25 249:40]
    btb.io_ras_update_bits_returnAddr <= bits(_btb_io_ras_update_bits_returnAddr_T_2, 38, 0) @[Frontend.scala 302:39]
    btb.io_flush <= or(_taken_T_34, _taken_T_5) @[Frontend.scala 236:95 239:22]
    printf(gated_clock, _T_10, "Assertion failed\n    at Frontend.scala:89 assert(!(io.cpu.req.valid || io.cpu.sfence.valid || io.cpu.flush_icache || io.cpu.bht_update.valid || io.cpu.btb_update.valid) || io.cpu.might_request)\n") @[Frontend.scala 89:9]
    stop(gated_clock, _T_10, 1) @[Frontend.scala 89:9]
    printf(gated_clock, _T_19, "Assertion failed\n    at Frontend.scala:175 assert(!(s2_speculative && io.ptw.customCSRs.asInstanceOf[RocketCustomCSRs].disableSpeculativeICacheRefill && !icache.io.s2_kill))\n") @[Frontend.scala 175:9]
    stop(gated_clock, _T_19, 1) @[Frontend.scala 175:9]
    printf(gated_clock, _T_34, "Assertion failed\n    at Frontend.scala:320 assert(!s2_partial_insn_valid || fq.io.enq.bits.mask(0))\n") @[Frontend.scala 320:11]
    stop(gated_clock, _T_34, 1) @[Frontend.scala 320:11]

  module FPU :
    input clock : Clock
    input reset : UInt<1>
    input io_inst : UInt<32>
    input io_fromint_data : UInt<64>
    input io_fcsr_rm : UInt<3>
    output io_fcsr_flags_valid : UInt<1>
    output io_fcsr_flags_bits : UInt<5>
    output io_store_data : UInt<64>
    output io_toint_data : UInt<64>
    input io_dmem_resp_val : UInt<1>
    input io_dmem_resp_type : UInt<3>
    input io_dmem_resp_tag : UInt<5>
    input io_dmem_resp_data : UInt<64>
    input io_valid : UInt<1>
    output io_fcsr_rdy : UInt<1>
    output io_nack_mem : UInt<1>
    output io_illegal_rm : UInt<1>
    input io_killx : UInt<1>
    input io_killm : UInt<1>
    output io_dec_wen : UInt<1>
    output io_dec_ren1 : UInt<1>
    output io_dec_ren2 : UInt<1>
    output io_dec_ren3 : UInt<1>
    output io_sboard_set : UInt<1>
    output io_sboard_clr : UInt<1>
    output io_sboard_clra : UInt<5>

    inst fp_decoder of FPUDecoder @[FPU.scala 742:26]
    mem regfile : @[FPU.scala 796:20]
      data-type => UInt<65>
      depth => 32
      read-latency => 0
      write-latency => 1
      reader => ex_rs_0
      reader => ex_rs_1
      reader => ex_rs_2
      writer => MPORT
      writer => MPORT_1
      read-under-write => undefined
    inst sfma of FPUFMAPipe @[FPU.scala 844:20]
    inst fpiu of FPToInt @[FPU.scala 848:20]
    inst ifpu of IntToFP @[FPU.scala 858:20]
    inst fpmu of FPToFP @[FPU.scala 863:20]
    inst dfma of FPUFMAPipe_1 @[FPU.scala 882:28]
    inst divSqrt of DivSqrtRecFN_small @[FPU.scala 981:27]
    inst divSqrt_1 of DivSqrtRecFN_small_1 @[FPU.scala 981:27]
    skip
    skip
    reg ex_reg_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_valid) @[FPU.scala 746:25]
    reg ex_reg_inst : UInt<32>, clock with :
      reset => (UInt<1>("h0"), ex_reg_inst) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    reg ex_reg_ctrl_ren2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_ren2) @[Reg.scala 15:16]
    reg ex_reg_ctrl_ren3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_ren3) @[Reg.scala 15:16]
    skip
    reg ex_reg_ctrl_swap23 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_swap23) @[Reg.scala 15:16]
    reg ex_reg_ctrl_typeTagIn : UInt<2>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_typeTagIn) @[Reg.scala 15:16]
    reg ex_reg_ctrl_typeTagOut : UInt<2>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_typeTagOut) @[Reg.scala 15:16]
    reg ex_reg_ctrl_fromint : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_fromint) @[Reg.scala 15:16]
    reg ex_reg_ctrl_toint : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_toint) @[Reg.scala 15:16]
    reg ex_reg_ctrl_fastpipe : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_fastpipe) @[Reg.scala 15:16]
    reg ex_reg_ctrl_fma : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_fma) @[Reg.scala 15:16]
    reg ex_reg_ctrl_div : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_div) @[Reg.scala 15:16]
    reg ex_reg_ctrl_sqrt : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_sqrt) @[Reg.scala 15:16]
    reg ex_reg_ctrl_wflags : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_ctrl_wflags) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg ex_ra_0 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), ex_ra_0) @[FPU.scala 749:31]
    reg ex_ra_1 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), ex_ra_1) @[FPU.scala 749:31]
    reg ex_ra_2 : UInt<5>, clock with :
      reset => (UInt<1>("h0"), ex_ra_2) @[FPU.scala 749:31]
    reg load_wb : UInt<1>, clock with :
      reset => (UInt<1>("h0"), load_wb) @[FPU.scala 752:20]
    node _load_wb_typeTag_T = bits(io_dmem_resp_type, 1, 0) @[FPU.scala 753:52]
    node _load_wb_typeTag_T_1 = sub(_load_wb_typeTag_T, UInt<2>("h2")) @[FPU.scala 753:58]
    node _load_wb_typeTag_T_2 = tail(_load_wb_typeTag_T_1, 1) @[FPU.scala 753:58]
    reg load_wb_typeTag : UInt<2>, clock with :
      reset => (UInt<1>("h0"), load_wb_typeTag) @[Reg.scala 15:16]
    skip
    reg load_wb_data : UInt<64>, clock with :
      reset => (UInt<1>("h0"), load_wb_data) @[Reg.scala 15:16]
    skip
    reg load_wb_tag : UInt<5>, clock with :
      reset => (UInt<1>("h0"), load_wb_tag) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    reg mem_reg_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_valid) @[FPU.scala 763:30]
    node killm = or(io_killm, io_nack_mem) @[FPU.scala 764:25]
    skip
    skip
    node _killx_T = and(mem_reg_valid, killm) @[FPU.scala 768:41]
    node killx = or(io_killx, _killx_T) @[FPU.scala 768:24]
    node _mem_reg_valid_T = not(killx) @[FPU.scala 769:36]
    node _mem_reg_valid_T_1 = and(ex_reg_valid, _mem_reg_valid_T) @[FPU.scala 769:33]
    skip
    reg mem_reg_inst : UInt<32>, clock with :
      reset => (UInt<1>("h0"), mem_reg_inst) @[Reg.scala 15:16]
    skip
    node _wb_reg_valid_x7_T = not(killm) @[FPU.scala 771:49]
    skip
    node wb_reg_valid_x7 = and(mem_reg_valid, _wb_reg_valid_x7_T) @[FPU.scala 771:45]
    reg wb_reg_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_reg_valid) @[FPU.scala 771:25]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg mem_ctrl_typeTagOut : UInt<2>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_typeTagOut) @[Reg.scala 15:16]
    reg mem_ctrl_fromint : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_fromint) @[Reg.scala 15:16]
    reg mem_ctrl_toint : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_toint) @[Reg.scala 15:16]
    reg mem_ctrl_fastpipe : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_fastpipe) @[Reg.scala 15:16]
    reg mem_ctrl_fma : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_fma) @[Reg.scala 15:16]
    reg mem_ctrl_div : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_div) @[Reg.scala 15:16]
    reg mem_ctrl_sqrt : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_sqrt) @[Reg.scala 15:16]
    reg mem_ctrl_wflags : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_wflags) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg wb_ctrl_toint : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_toint) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node wdata_truncIdx = bits(load_wb_typeTag, 0, 0) @[package.scala 31:49]
    skip
    node _wdata_T_1 = mux(wdata_truncIdx, UInt<64>("h0"), UInt<64>("hffffffff00000000")) @[package.scala 32:76]
    node _wdata_T_2 = or(_wdata_T_1, load_wb_data) @[FPU.scala 426:23]
    node wdata_rawIn_sign = bits(_wdata_T_2, 63, 63) @[rawFloatFromFN.scala 46:22]
    node wdata_rawIn_expIn = bits(_wdata_T_2, 62, 52) @[rawFloatFromFN.scala 47:23]
    node wdata_rawIn_fractIn = bits(_wdata_T_2, 51, 0) @[rawFloatFromFN.scala 48:25]
    node wdata_rawIn_isZeroExpIn = eq(wdata_rawIn_expIn, UInt<11>("h0")) @[rawFloatFromFN.scala 50:34]
    node wdata_rawIn_isZeroFractIn = eq(wdata_rawIn_fractIn, UInt<52>("h0")) @[rawFloatFromFN.scala 51:38]
    skip
    node _wdata_rawIn_normDist_T_1 = bits(wdata_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_2 = bits(wdata_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_3 = bits(wdata_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_4 = bits(wdata_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_5 = bits(wdata_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_6 = bits(wdata_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_7 = bits(wdata_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_8 = bits(wdata_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_9 = bits(wdata_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_10 = bits(wdata_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_11 = bits(wdata_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_12 = bits(wdata_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_13 = bits(wdata_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_14 = bits(wdata_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_15 = bits(wdata_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_16 = bits(wdata_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_17 = bits(wdata_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_18 = bits(wdata_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_19 = bits(wdata_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_20 = bits(wdata_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_21 = bits(wdata_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_22 = bits(wdata_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_23 = bits(wdata_rawIn_fractIn, 23, 23) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_24 = bits(wdata_rawIn_fractIn, 24, 24) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_25 = bits(wdata_rawIn_fractIn, 25, 25) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_26 = bits(wdata_rawIn_fractIn, 26, 26) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_27 = bits(wdata_rawIn_fractIn, 27, 27) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_28 = bits(wdata_rawIn_fractIn, 28, 28) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_29 = bits(wdata_rawIn_fractIn, 29, 29) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_30 = bits(wdata_rawIn_fractIn, 30, 30) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_31 = bits(wdata_rawIn_fractIn, 31, 31) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_32 = bits(wdata_rawIn_fractIn, 32, 32) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_33 = bits(wdata_rawIn_fractIn, 33, 33) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_34 = bits(wdata_rawIn_fractIn, 34, 34) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_35 = bits(wdata_rawIn_fractIn, 35, 35) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_36 = bits(wdata_rawIn_fractIn, 36, 36) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_37 = bits(wdata_rawIn_fractIn, 37, 37) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_38 = bits(wdata_rawIn_fractIn, 38, 38) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_39 = bits(wdata_rawIn_fractIn, 39, 39) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_40 = bits(wdata_rawIn_fractIn, 40, 40) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_41 = bits(wdata_rawIn_fractIn, 41, 41) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_42 = bits(wdata_rawIn_fractIn, 42, 42) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_43 = bits(wdata_rawIn_fractIn, 43, 43) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_44 = bits(wdata_rawIn_fractIn, 44, 44) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_45 = bits(wdata_rawIn_fractIn, 45, 45) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_46 = bits(wdata_rawIn_fractIn, 46, 46) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_47 = bits(wdata_rawIn_fractIn, 47, 47) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_48 = bits(wdata_rawIn_fractIn, 48, 48) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_49 = bits(wdata_rawIn_fractIn, 49, 49) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_50 = bits(wdata_rawIn_fractIn, 50, 50) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_51 = bits(wdata_rawIn_fractIn, 51, 51) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_52 = mux(_wdata_rawIn_normDist_T_1, UInt<6>("h32"), UInt<6>("h33")) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_53 = mux(_wdata_rawIn_normDist_T_2, UInt<6>("h31"), _wdata_rawIn_normDist_T_52) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_54 = mux(_wdata_rawIn_normDist_T_3, UInt<6>("h30"), _wdata_rawIn_normDist_T_53) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_55 = mux(_wdata_rawIn_normDist_T_4, UInt<6>("h2f"), _wdata_rawIn_normDist_T_54) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_56 = mux(_wdata_rawIn_normDist_T_5, UInt<6>("h2e"), _wdata_rawIn_normDist_T_55) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_57 = mux(_wdata_rawIn_normDist_T_6, UInt<6>("h2d"), _wdata_rawIn_normDist_T_56) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_58 = mux(_wdata_rawIn_normDist_T_7, UInt<6>("h2c"), _wdata_rawIn_normDist_T_57) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_59 = mux(_wdata_rawIn_normDist_T_8, UInt<6>("h2b"), _wdata_rawIn_normDist_T_58) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_60 = mux(_wdata_rawIn_normDist_T_9, UInt<6>("h2a"), _wdata_rawIn_normDist_T_59) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_61 = mux(_wdata_rawIn_normDist_T_10, UInt<6>("h29"), _wdata_rawIn_normDist_T_60) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_62 = mux(_wdata_rawIn_normDist_T_11, UInt<6>("h28"), _wdata_rawIn_normDist_T_61) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_63 = mux(_wdata_rawIn_normDist_T_12, UInt<6>("h27"), _wdata_rawIn_normDist_T_62) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_64 = mux(_wdata_rawIn_normDist_T_13, UInt<6>("h26"), _wdata_rawIn_normDist_T_63) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_65 = mux(_wdata_rawIn_normDist_T_14, UInt<6>("h25"), _wdata_rawIn_normDist_T_64) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_66 = mux(_wdata_rawIn_normDist_T_15, UInt<6>("h24"), _wdata_rawIn_normDist_T_65) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_67 = mux(_wdata_rawIn_normDist_T_16, UInt<6>("h23"), _wdata_rawIn_normDist_T_66) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_68 = mux(_wdata_rawIn_normDist_T_17, UInt<6>("h22"), _wdata_rawIn_normDist_T_67) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_69 = mux(_wdata_rawIn_normDist_T_18, UInt<6>("h21"), _wdata_rawIn_normDist_T_68) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_70 = mux(_wdata_rawIn_normDist_T_19, UInt<6>("h20"), _wdata_rawIn_normDist_T_69) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_71 = mux(_wdata_rawIn_normDist_T_20, UInt<6>("h1f"), _wdata_rawIn_normDist_T_70) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_72 = mux(_wdata_rawIn_normDist_T_21, UInt<6>("h1e"), _wdata_rawIn_normDist_T_71) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_73 = mux(_wdata_rawIn_normDist_T_22, UInt<6>("h1d"), _wdata_rawIn_normDist_T_72) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_74 = mux(_wdata_rawIn_normDist_T_23, UInt<6>("h1c"), _wdata_rawIn_normDist_T_73) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_75 = mux(_wdata_rawIn_normDist_T_24, UInt<6>("h1b"), _wdata_rawIn_normDist_T_74) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_76 = mux(_wdata_rawIn_normDist_T_25, UInt<6>("h1a"), _wdata_rawIn_normDist_T_75) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_77 = mux(_wdata_rawIn_normDist_T_26, UInt<6>("h19"), _wdata_rawIn_normDist_T_76) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_78 = mux(_wdata_rawIn_normDist_T_27, UInt<6>("h18"), _wdata_rawIn_normDist_T_77) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_79 = mux(_wdata_rawIn_normDist_T_28, UInt<6>("h17"), _wdata_rawIn_normDist_T_78) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_80 = mux(_wdata_rawIn_normDist_T_29, UInt<6>("h16"), _wdata_rawIn_normDist_T_79) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_81 = mux(_wdata_rawIn_normDist_T_30, UInt<6>("h15"), _wdata_rawIn_normDist_T_80) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_82 = mux(_wdata_rawIn_normDist_T_31, UInt<6>("h14"), _wdata_rawIn_normDist_T_81) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_83 = mux(_wdata_rawIn_normDist_T_32, UInt<6>("h13"), _wdata_rawIn_normDist_T_82) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_84 = mux(_wdata_rawIn_normDist_T_33, UInt<6>("h12"), _wdata_rawIn_normDist_T_83) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_85 = mux(_wdata_rawIn_normDist_T_34, UInt<6>("h11"), _wdata_rawIn_normDist_T_84) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_86 = mux(_wdata_rawIn_normDist_T_35, UInt<6>("h10"), _wdata_rawIn_normDist_T_85) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_87 = mux(_wdata_rawIn_normDist_T_36, UInt<6>("hf"), _wdata_rawIn_normDist_T_86) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_88 = mux(_wdata_rawIn_normDist_T_37, UInt<6>("he"), _wdata_rawIn_normDist_T_87) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_89 = mux(_wdata_rawIn_normDist_T_38, UInt<6>("hd"), _wdata_rawIn_normDist_T_88) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_90 = mux(_wdata_rawIn_normDist_T_39, UInt<6>("hc"), _wdata_rawIn_normDist_T_89) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_91 = mux(_wdata_rawIn_normDist_T_40, UInt<6>("hb"), _wdata_rawIn_normDist_T_90) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_92 = mux(_wdata_rawIn_normDist_T_41, UInt<6>("ha"), _wdata_rawIn_normDist_T_91) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_93 = mux(_wdata_rawIn_normDist_T_42, UInt<6>("h9"), _wdata_rawIn_normDist_T_92) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_94 = mux(_wdata_rawIn_normDist_T_43, UInt<6>("h8"), _wdata_rawIn_normDist_T_93) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_95 = mux(_wdata_rawIn_normDist_T_44, UInt<6>("h7"), _wdata_rawIn_normDist_T_94) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_96 = mux(_wdata_rawIn_normDist_T_45, UInt<6>("h6"), _wdata_rawIn_normDist_T_95) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_97 = mux(_wdata_rawIn_normDist_T_46, UInt<6>("h5"), _wdata_rawIn_normDist_T_96) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_98 = mux(_wdata_rawIn_normDist_T_47, UInt<6>("h4"), _wdata_rawIn_normDist_T_97) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_99 = mux(_wdata_rawIn_normDist_T_48, UInt<6>("h3"), _wdata_rawIn_normDist_T_98) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_100 = mux(_wdata_rawIn_normDist_T_49, UInt<6>("h2"), _wdata_rawIn_normDist_T_99) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_101 = mux(_wdata_rawIn_normDist_T_50, UInt<6>("h1"), _wdata_rawIn_normDist_T_100) @[Mux.scala 47:69]
    node wdata_rawIn_normDist = mux(_wdata_rawIn_normDist_T_51, UInt<6>("h0"), _wdata_rawIn_normDist_T_101) @[Mux.scala 47:69]
    node _wdata_rawIn_subnormFract_T = dshl(wdata_rawIn_fractIn, wdata_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _wdata_rawIn_subnormFract_T_1 = bits(_wdata_rawIn_subnormFract_T, 50, 0) @[rawFloatFromFN.scala 54:47]
    node wdata_rawIn_subnormFract = shl(_wdata_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _GEN_170 = pad(wdata_rawIn_normDist, 12) @[rawFloatFromFN.scala 57:26]
    node _wdata_rawIn_adjustedExp_T = xor(_GEN_170, UInt<12>("hfff")) @[rawFloatFromFN.scala 57:26]
    node _wdata_rawIn_adjustedExp_T_1 = mux(wdata_rawIn_isZeroExpIn, _wdata_rawIn_adjustedExp_T, pad(wdata_rawIn_expIn, 12)) @[rawFloatFromFN.scala 56:16]
    node _wdata_rawIn_adjustedExp_T_2 = mux(wdata_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<2>("h1")) @[rawFloatFromFN.scala 60:27]
    node _GEN_171 = pad(_wdata_rawIn_adjustedExp_T_2, 11) @[rawFloatFromFN.scala 60:22]
    node _wdata_rawIn_adjustedExp_T_3 = or(UInt<11>("h400"), _GEN_171) @[rawFloatFromFN.scala 60:22]
    node _GEN_172 = pad(_wdata_rawIn_adjustedExp_T_3, 12) @[rawFloatFromFN.scala 59:15]
    node _wdata_rawIn_adjustedExp_T_4 = add(_wdata_rawIn_adjustedExp_T_1, _GEN_172) @[rawFloatFromFN.scala 59:15]
    node wdata_rawIn_adjustedExp = tail(_wdata_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node wdata_rawIn_isZero = and(wdata_rawIn_isZeroExpIn, wdata_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _wdata_rawIn_isSpecial_T = bits(wdata_rawIn_adjustedExp, 11, 10) @[rawFloatFromFN.scala 63:37]
    node wdata_rawIn_isSpecial = eq(_wdata_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    node _wdata_rawIn_out_isNaN_T = not(wdata_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 66:36]
    node wdata_rawIn__isNaN = and(wdata_rawIn_isSpecial, _wdata_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    skip
    skip
    node wdata_rawIn__sExp = cvt(wdata_rawIn_adjustedExp) @[rawFloatFromFN.scala 70:48]
    node wdata_rawIn_out_sig_hi_lo = not(wdata_rawIn_isZero) @[rawFloatFromFN.scala 72:29]
    node wdata_rawIn_out_sig_lo = mux(wdata_rawIn_isZeroExpIn, wdata_rawIn_subnormFract, wdata_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node wdata_rawIn_out_sig_hi = cat(UInt<1>("h0"), wdata_rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node wdata_rawIn__sig = cat(wdata_rawIn_out_sig_hi, wdata_rawIn_out_sig_lo) @[Cat.scala 30:58]
    skip
    node _wdata_T_3 = bits(wdata_rawIn__sExp, 11, 9) @[recFNFromFN.scala 48:53]
    skip
    node _wdata_T_4 = mux(wdata_rawIn_isZero, UInt<3>("h0"), _wdata_T_3) @[recFNFromFN.scala 48:16]
    skip
    skip
    node _GEN_173 = pad(wdata_rawIn__isNaN, 3) @[recFNFromFN.scala 48:79]
    node wdata_hi_lo = or(_wdata_T_4, _GEN_173) @[recFNFromFN.scala 48:79]
    node wdata_lo_hi = bits(wdata_rawIn__sExp, 8, 0) @[recFNFromFN.scala 50:23]
    skip
    node wdata_lo_lo = bits(wdata_rawIn__sig, 51, 0) @[recFNFromFN.scala 51:22]
    node wdata_lo = cat(wdata_lo_hi, wdata_lo_lo) @[Cat.scala 30:58]
    skip
    node wdata_hi = cat(wdata_rawIn_sign, wdata_hi_lo) @[Cat.scala 30:58]
    node _wdata_T_6 = cat(wdata_hi, wdata_lo) @[Cat.scala 30:58]
    node wdata_rawIn_sign_1 = bits(_wdata_T_2, 31, 31) @[rawFloatFromFN.scala 46:22]
    node wdata_rawIn_expIn_1 = bits(_wdata_T_2, 30, 23) @[rawFloatFromFN.scala 47:23]
    node wdata_rawIn_fractIn_1 = bits(_wdata_T_2, 22, 0) @[rawFloatFromFN.scala 48:25]
    node wdata_rawIn_isZeroExpIn_1 = eq(wdata_rawIn_expIn_1, UInt<8>("h0")) @[rawFloatFromFN.scala 50:34]
    node wdata_rawIn_isZeroFractIn_1 = eq(wdata_rawIn_fractIn_1, UInt<23>("h0")) @[rawFloatFromFN.scala 51:38]
    skip
    node _wdata_rawIn_normDist_T_103 = bits(wdata_rawIn_fractIn_1, 1, 1) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_104 = bits(wdata_rawIn_fractIn_1, 2, 2) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_105 = bits(wdata_rawIn_fractIn_1, 3, 3) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_106 = bits(wdata_rawIn_fractIn_1, 4, 4) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_107 = bits(wdata_rawIn_fractIn_1, 5, 5) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_108 = bits(wdata_rawIn_fractIn_1, 6, 6) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_109 = bits(wdata_rawIn_fractIn_1, 7, 7) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_110 = bits(wdata_rawIn_fractIn_1, 8, 8) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_111 = bits(wdata_rawIn_fractIn_1, 9, 9) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_112 = bits(wdata_rawIn_fractIn_1, 10, 10) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_113 = bits(wdata_rawIn_fractIn_1, 11, 11) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_114 = bits(wdata_rawIn_fractIn_1, 12, 12) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_115 = bits(wdata_rawIn_fractIn_1, 13, 13) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_116 = bits(wdata_rawIn_fractIn_1, 14, 14) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_117 = bits(wdata_rawIn_fractIn_1, 15, 15) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_118 = bits(wdata_rawIn_fractIn_1, 16, 16) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_119 = bits(wdata_rawIn_fractIn_1, 17, 17) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_120 = bits(wdata_rawIn_fractIn_1, 18, 18) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_121 = bits(wdata_rawIn_fractIn_1, 19, 19) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_122 = bits(wdata_rawIn_fractIn_1, 20, 20) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_123 = bits(wdata_rawIn_fractIn_1, 21, 21) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_124 = bits(wdata_rawIn_fractIn_1, 22, 22) @[primitives.scala 92:52]
    node _wdata_rawIn_normDist_T_125 = mux(_wdata_rawIn_normDist_T_103, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_126 = mux(_wdata_rawIn_normDist_T_104, UInt<5>("h14"), _wdata_rawIn_normDist_T_125) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_127 = mux(_wdata_rawIn_normDist_T_105, UInt<5>("h13"), _wdata_rawIn_normDist_T_126) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_128 = mux(_wdata_rawIn_normDist_T_106, UInt<5>("h12"), _wdata_rawIn_normDist_T_127) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_129 = mux(_wdata_rawIn_normDist_T_107, UInt<5>("h11"), _wdata_rawIn_normDist_T_128) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_130 = mux(_wdata_rawIn_normDist_T_108, UInt<5>("h10"), _wdata_rawIn_normDist_T_129) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_131 = mux(_wdata_rawIn_normDist_T_109, UInt<5>("hf"), _wdata_rawIn_normDist_T_130) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_132 = mux(_wdata_rawIn_normDist_T_110, UInt<5>("he"), _wdata_rawIn_normDist_T_131) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_133 = mux(_wdata_rawIn_normDist_T_111, UInt<5>("hd"), _wdata_rawIn_normDist_T_132) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_134 = mux(_wdata_rawIn_normDist_T_112, UInt<5>("hc"), _wdata_rawIn_normDist_T_133) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_135 = mux(_wdata_rawIn_normDist_T_113, UInt<5>("hb"), _wdata_rawIn_normDist_T_134) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_136 = mux(_wdata_rawIn_normDist_T_114, UInt<5>("ha"), _wdata_rawIn_normDist_T_135) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_137 = mux(_wdata_rawIn_normDist_T_115, UInt<5>("h9"), _wdata_rawIn_normDist_T_136) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_138 = mux(_wdata_rawIn_normDist_T_116, UInt<5>("h8"), _wdata_rawIn_normDist_T_137) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_139 = mux(_wdata_rawIn_normDist_T_117, UInt<5>("h7"), _wdata_rawIn_normDist_T_138) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_140 = mux(_wdata_rawIn_normDist_T_118, UInt<5>("h6"), _wdata_rawIn_normDist_T_139) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_141 = mux(_wdata_rawIn_normDist_T_119, UInt<5>("h5"), _wdata_rawIn_normDist_T_140) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_142 = mux(_wdata_rawIn_normDist_T_120, UInt<5>("h4"), _wdata_rawIn_normDist_T_141) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_143 = mux(_wdata_rawIn_normDist_T_121, UInt<5>("h3"), _wdata_rawIn_normDist_T_142) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_144 = mux(_wdata_rawIn_normDist_T_122, UInt<5>("h2"), _wdata_rawIn_normDist_T_143) @[Mux.scala 47:69]
    node _wdata_rawIn_normDist_T_145 = mux(_wdata_rawIn_normDist_T_123, UInt<5>("h1"), _wdata_rawIn_normDist_T_144) @[Mux.scala 47:69]
    node wdata_rawIn_normDist_1 = mux(_wdata_rawIn_normDist_T_124, UInt<5>("h0"), _wdata_rawIn_normDist_T_145) @[Mux.scala 47:69]
    node _wdata_rawIn_subnormFract_T_2 = dshl(wdata_rawIn_fractIn_1, wdata_rawIn_normDist_1) @[rawFloatFromFN.scala 54:36]
    node _wdata_rawIn_subnormFract_T_3 = bits(_wdata_rawIn_subnormFract_T_2, 21, 0) @[rawFloatFromFN.scala 54:47]
    node wdata_rawIn_subnormFract_1 = shl(_wdata_rawIn_subnormFract_T_3, 1) @[rawFloatFromFN.scala 54:64]
    node _GEN_174 = pad(wdata_rawIn_normDist_1, 9) @[rawFloatFromFN.scala 57:26]
    node _wdata_rawIn_adjustedExp_T_5 = xor(_GEN_174, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
    node _wdata_rawIn_adjustedExp_T_6 = mux(wdata_rawIn_isZeroExpIn_1, _wdata_rawIn_adjustedExp_T_5, pad(wdata_rawIn_expIn_1, 9)) @[rawFloatFromFN.scala 56:16]
    node _wdata_rawIn_adjustedExp_T_7 = mux(wdata_rawIn_isZeroExpIn_1, UInt<2>("h2"), UInt<2>("h1")) @[rawFloatFromFN.scala 60:27]
    node _GEN_175 = pad(_wdata_rawIn_adjustedExp_T_7, 8) @[rawFloatFromFN.scala 60:22]
    node _wdata_rawIn_adjustedExp_T_8 = or(UInt<8>("h80"), _GEN_175) @[rawFloatFromFN.scala 60:22]
    node _GEN_176 = pad(_wdata_rawIn_adjustedExp_T_8, 9) @[rawFloatFromFN.scala 59:15]
    node _wdata_rawIn_adjustedExp_T_9 = add(_wdata_rawIn_adjustedExp_T_6, _GEN_176) @[rawFloatFromFN.scala 59:15]
    node wdata_rawIn_adjustedExp_1 = tail(_wdata_rawIn_adjustedExp_T_9, 1) @[rawFloatFromFN.scala 59:15]
    node wdata_rawIn_isZero_1 = and(wdata_rawIn_isZeroExpIn_1, wdata_rawIn_isZeroFractIn_1) @[rawFloatFromFN.scala 62:34]
    node _wdata_rawIn_isSpecial_T_1 = bits(wdata_rawIn_adjustedExp_1, 8, 7) @[rawFloatFromFN.scala 63:37]
    node wdata_rawIn_isSpecial_1 = eq(_wdata_rawIn_isSpecial_T_1, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    node _wdata_rawIn_out_isNaN_T_2 = not(wdata_rawIn_isZeroFractIn_1) @[rawFloatFromFN.scala 66:36]
    node wdata_rawIn_1_isNaN = and(wdata_rawIn_isSpecial_1, _wdata_rawIn_out_isNaN_T_2) @[rawFloatFromFN.scala 66:33]
    skip
    skip
    node wdata_rawIn_1_sExp = cvt(wdata_rawIn_adjustedExp_1) @[rawFloatFromFN.scala 70:48]
    node wdata_rawIn_out_sig_hi_lo_1 = not(wdata_rawIn_isZero_1) @[rawFloatFromFN.scala 72:29]
    node wdata_rawIn_out_sig_lo_1 = mux(wdata_rawIn_isZeroExpIn_1, wdata_rawIn_subnormFract_1, wdata_rawIn_fractIn_1) @[rawFloatFromFN.scala 72:42]
    node wdata_rawIn_out_sig_hi_1 = cat(UInt<1>("h0"), wdata_rawIn_out_sig_hi_lo_1) @[Cat.scala 30:58]
    node wdata_rawIn_1_sig = cat(wdata_rawIn_out_sig_hi_1, wdata_rawIn_out_sig_lo_1) @[Cat.scala 30:58]
    skip
    node _wdata_T_7 = bits(wdata_rawIn_1_sExp, 8, 6) @[recFNFromFN.scala 48:53]
    skip
    node _wdata_T_8 = mux(wdata_rawIn_isZero_1, UInt<3>("h0"), _wdata_T_7) @[recFNFromFN.scala 48:16]
    skip
    skip
    node _GEN_177 = pad(wdata_rawIn_1_isNaN, 3) @[recFNFromFN.scala 48:79]
    node wdata_hi_lo_1 = or(_wdata_T_8, _GEN_177) @[recFNFromFN.scala 48:79]
    node wdata_lo_hi_1 = bits(wdata_rawIn_1_sExp, 5, 0) @[recFNFromFN.scala 50:23]
    skip
    node wdata_lo_lo_1 = bits(wdata_rawIn_1_sig, 22, 0) @[recFNFromFN.scala 51:22]
    node wdata_lo_1 = cat(wdata_lo_hi_1, wdata_lo_lo_1) @[Cat.scala 30:58]
    skip
    node wdata_hi_1 = cat(wdata_rawIn_sign_1, wdata_hi_lo_1) @[Cat.scala 30:58]
    node _wdata_T_10 = cat(wdata_hi_1, wdata_lo_1) @[Cat.scala 30:58]
    node wdata_swizzledNaN_hi_hi_hi = bits(_wdata_T_6, 64, 61) @[FPU.scala 332:8]
    node _wdata_swizzledNaN_T = bits(_wdata_T_6, 51, 32) @[FPU.scala 333:8]
    node wdata_swizzledNaN_hi_hi_lo = andr(_wdata_swizzledNaN_T) @[FPU.scala 333:42]
    node wdata_swizzledNaN_hi_lo_hi = bits(_wdata_T_6, 59, 53) @[FPU.scala 334:8]
    node wdata_swizzledNaN_hi_lo_lo = bits(_wdata_T_10, 31, 31) @[FPU.scala 335:8]
    skip
    node wdata_swizzledNaN_lo_hi_lo = bits(_wdata_T_10, 32, 32) @[FPU.scala 337:8]
    node wdata_swizzledNaN_lo_lo = bits(_wdata_T_10, 30, 0) @[FPU.scala 338:8]
    node wdata_swizzledNaN_lo_hi = cat(_wdata_swizzledNaN_T, wdata_swizzledNaN_lo_hi_lo) @[Cat.scala 30:58]
    node wdata_swizzledNaN_lo = cat(wdata_swizzledNaN_lo_hi, wdata_swizzledNaN_lo_lo) @[Cat.scala 30:58]
    node wdata_swizzledNaN_hi_lo = cat(wdata_swizzledNaN_hi_lo_hi, wdata_swizzledNaN_hi_lo_lo) @[Cat.scala 30:58]
    node wdata_swizzledNaN_hi_hi = cat(wdata_swizzledNaN_hi_hi_hi, wdata_swizzledNaN_hi_hi_lo) @[Cat.scala 30:58]
    node wdata_swizzledNaN_hi = cat(wdata_swizzledNaN_hi_hi, wdata_swizzledNaN_hi_lo) @[Cat.scala 30:58]
    node wdata_swizzledNaN = cat(wdata_swizzledNaN_hi, wdata_swizzledNaN_lo) @[Cat.scala 30:58]
    node _wdata_T_11 = bits(_wdata_T_6, 63, 61) @[FPU.scala 243:25]
    node _wdata_T_12 = andr(_wdata_T_11) @[FPU.scala 243:56]
    node wdata = mux(_wdata_T_12, wdata_swizzledNaN, _wdata_T_6) @[FPU.scala 339:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _curOK_T = bits(wdata, 63, 61) @[FPU.scala 243:25]
    node _curOK_T_1 = andr(_curOK_T) @[FPU.scala 243:56]
    node _curOK_T_2 = not(_curOK_T_1) @[FPU.scala 380:19]
    node _curOK_T_3 = bits(wdata, 60, 60) @[FPU.scala 380:35]
    node _curOK_T_4 = bits(wdata, 51, 32) @[FPU.scala 380:60]
    node _curOK_T_5 = andr(_curOK_T_4) @[FPU.scala 380:96]
    node _curOK_T_6 = eq(_curOK_T_3, _curOK_T_5) @[FPU.scala 380:55]
    node curOK = or(_curOK_T_2, _curOK_T_6) @[FPU.scala 380:31]
    skip
    skip
    node _T_2 = or(curOK, reset) @[FPU.scala 800:11]
    node _T_3 = not(_T_2) @[FPU.scala 800:11]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_4 = not(fp_decoder.io_sigs_swap12) @[FPU.scala 811:13]
    node _ex_ra_0_T = bits(io_inst, 19, 15) @[FPU.scala 811:51]
    node _GEN_59 = mux(_T_4, _ex_ra_0_T, ex_ra_0) @[FPU.scala 811:30 749:31 811:41]
    skip
    node _GEN_60 = mux(fp_decoder.io_sigs_swap12, _ex_ra_0_T, ex_ra_1) @[FPU.scala 812:29 749:31 812:40]
    node _GEN_61 = mux(fp_decoder.io_sigs_ren1, _GEN_59, ex_ra_0) @[FPU.scala 810:25 749:31]
    node _GEN_62 = mux(fp_decoder.io_sigs_ren1, _GEN_60, ex_ra_1) @[FPU.scala 810:25 749:31]
    node _ex_ra_0_T_1 = bits(io_inst, 24, 20) @[FPU.scala 815:50]
    node _GEN_63 = mux(fp_decoder.io_sigs_swap12, _ex_ra_0_T_1, _GEN_61) @[FPU.scala 815:{29,40}]
    skip
    node _GEN_64 = mux(fp_decoder.io_sigs_swap23, _ex_ra_0_T_1, ex_ra_2) @[FPU.scala 816:29 749:31 816:40]
    skip
    node _T_6 = not(fp_decoder.io_sigs_swap23) @[FPU.scala 817:32]
    node _T_7 = and(_T_4, _T_6) @[FPU.scala 817:29]
    skip
    node _GEN_65 = mux(_T_7, _ex_ra_0_T_1, _GEN_62) @[FPU.scala 817:{49,60}]
    node _GEN_66 = mux(fp_decoder.io_sigs_ren2, _GEN_63, _GEN_61) @[FPU.scala 814:25]
    node _GEN_67 = mux(fp_decoder.io_sigs_ren2, _GEN_64, ex_ra_2) @[FPU.scala 814:25 749:31]
    node _GEN_68 = mux(fp_decoder.io_sigs_ren2, _GEN_65, _GEN_62) @[FPU.scala 814:25]
    node _ex_ra_2_T_1 = bits(io_inst, 31, 27) @[FPU.scala 819:46]
    node _GEN_69 = mux(fp_decoder.io_sigs_ren3, _ex_ra_2_T_1, _GEN_67) @[FPU.scala 819:{25,36}]
    skip
    skip
    skip
    node _ex_rm_T = bits(ex_reg_inst, 14, 12) @[FPU.scala 821:30]
    node _ex_rm_T_1 = eq(_ex_rm_T, UInt<3>("h7")) @[FPU.scala 821:38]
    skip
    skip
    node _sfma_io_in_valid_T = and(ex_reg_valid, ex_reg_ctrl_fma) @[FPU.scala 845:33]
    node _sfma_io_in_valid_T_1 = eq(ex_reg_ctrl_typeTagOut, UInt<2>("h0")) @[FPU.scala 845:70]
    skip
    node sfma_io_in_bits_req_in1_unswizzled_hi_hi = bits(regfile.ex_rs_0.data, 31, 31) @[FPU.scala 352:14]
    node sfma_io_in_bits_req_in1_unswizzled_hi_lo = bits(regfile.ex_rs_0.data, 52, 52) @[FPU.scala 353:14]
    node sfma_io_in_bits_req_in1_unswizzled_lo = bits(regfile.ex_rs_0.data, 30, 0) @[FPU.scala 354:14]
    node sfma_io_in_bits_req_in1_unswizzled_hi = cat(sfma_io_in_bits_req_in1_unswizzled_hi_hi, sfma_io_in_bits_req_in1_unswizzled_hi_lo) @[Cat.scala 30:58]
    node sfma_io_in_bits_req_in1_floats_0 = cat(sfma_io_in_bits_req_in1_unswizzled_hi, sfma_io_in_bits_req_in1_unswizzled_lo) @[Cat.scala 30:58]
    node _sfma_io_in_bits_req_in1_isbox_T = bits(regfile.ex_rs_0.data, 64, 60) @[FPU.scala 327:49]
    node sfma_io_in_bits_req_in1_isbox = andr(_sfma_io_in_bits_req_in1_isbox_T) @[FPU.scala 327:84]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _sfma_io_in_bits_req_in1_T = mux(sfma_io_in_bits_req_in1_isbox, UInt<33>("h0"), UInt<33>("he0400000")) @[FPU.scala 367:31]
    node _sfma_io_in_bits_req_in1_T_1 = or(sfma_io_in_bits_req_in1_floats_0, _sfma_io_in_bits_req_in1_T) @[FPU.scala 367:26]
    node sfma_io_in_bits_req_in2_unswizzled_hi_hi = bits(regfile.ex_rs_1.data, 31, 31) @[FPU.scala 352:14]
    node sfma_io_in_bits_req_in2_unswizzled_hi_lo = bits(regfile.ex_rs_1.data, 52, 52) @[FPU.scala 353:14]
    node sfma_io_in_bits_req_in2_unswizzled_lo = bits(regfile.ex_rs_1.data, 30, 0) @[FPU.scala 354:14]
    node sfma_io_in_bits_req_in2_unswizzled_hi = cat(sfma_io_in_bits_req_in2_unswizzled_hi_hi, sfma_io_in_bits_req_in2_unswizzled_hi_lo) @[Cat.scala 30:58]
    node sfma_io_in_bits_req_in2_floats_0 = cat(sfma_io_in_bits_req_in2_unswizzled_hi, sfma_io_in_bits_req_in2_unswizzled_lo) @[Cat.scala 30:58]
    node _sfma_io_in_bits_req_in2_isbox_T = bits(regfile.ex_rs_1.data, 64, 60) @[FPU.scala 327:49]
    node sfma_io_in_bits_req_in2_isbox = andr(_sfma_io_in_bits_req_in2_isbox_T) @[FPU.scala 327:84]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _sfma_io_in_bits_req_in2_T = mux(sfma_io_in_bits_req_in2_isbox, UInt<33>("h0"), UInt<33>("he0400000")) @[FPU.scala 367:31]
    node _sfma_io_in_bits_req_in2_T_1 = or(sfma_io_in_bits_req_in2_floats_0, _sfma_io_in_bits_req_in2_T) @[FPU.scala 367:26]
    node sfma_io_in_bits_req_in3_unswizzled_hi_hi = bits(regfile.ex_rs_2.data, 31, 31) @[FPU.scala 352:14]
    node sfma_io_in_bits_req_in3_unswizzled_hi_lo = bits(regfile.ex_rs_2.data, 52, 52) @[FPU.scala 353:14]
    node sfma_io_in_bits_req_in3_unswizzled_lo = bits(regfile.ex_rs_2.data, 30, 0) @[FPU.scala 354:14]
    node sfma_io_in_bits_req_in3_unswizzled_hi = cat(sfma_io_in_bits_req_in3_unswizzled_hi_hi, sfma_io_in_bits_req_in3_unswizzled_hi_lo) @[Cat.scala 30:58]
    node sfma_io_in_bits_req_in3_floats_0 = cat(sfma_io_in_bits_req_in3_unswizzled_hi, sfma_io_in_bits_req_in3_unswizzled_lo) @[Cat.scala 30:58]
    node _sfma_io_in_bits_req_in3_isbox_T = bits(regfile.ex_rs_2.data, 64, 60) @[FPU.scala 327:49]
    node sfma_io_in_bits_req_in3_isbox = andr(_sfma_io_in_bits_req_in3_isbox_T) @[FPU.scala 327:84]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _sfma_io_in_bits_req_in3_T = mux(sfma_io_in_bits_req_in3_isbox, UInt<33>("h0"), UInt<33>("he0400000")) @[FPU.scala 367:31]
    node _sfma_io_in_bits_req_in3_T_1 = or(sfma_io_in_bits_req_in3_floats_0, _sfma_io_in_bits_req_in3_T) @[FPU.scala 367:26]
    skip
    skip
    node _sfma_io_in_bits_req_fmaCmd_T = bits(ex_reg_inst, 3, 2) @[FPU.scala 833:30]
    node _sfma_io_in_bits_req_fmaCmd_T_1 = not(ex_reg_ctrl_ren3) @[FPU.scala 833:39]
    node _sfma_io_in_bits_req_fmaCmd_T_2 = bits(ex_reg_inst, 27, 27) @[FPU.scala 833:67]
    node _sfma_io_in_bits_req_fmaCmd_T_3 = and(_sfma_io_in_bits_req_fmaCmd_T_1, _sfma_io_in_bits_req_fmaCmd_T_2) @[FPU.scala 833:53]
    node _GEN_178 = pad(_sfma_io_in_bits_req_fmaCmd_T_3, 2) @[FPU.scala 833:36]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _fpiu_io_in_valid_T = or(ex_reg_ctrl_toint, ex_reg_ctrl_div) @[FPU.scala 849:51]
    node _fpiu_io_in_valid_T_1 = or(_fpiu_io_in_valid_T, ex_reg_ctrl_sqrt) @[FPU.scala 849:66]
    node _fpiu_io_in_valid_T_2 = and(ex_reg_ctrl_fastpipe, ex_reg_ctrl_wflags) @[FPU.scala 849:103]
    node _fpiu_io_in_valid_T_3 = or(_fpiu_io_in_valid_T_1, _fpiu_io_in_valid_T_2) @[FPU.scala 849:82]
    skip
    skip
    skip
    skip
    skip
    skip
    node fpiu_io_in_bits_req_in1_hi_hi = bits(sfma_io_in_bits_req_in1_floats_0, 32, 32) @[FPU.scala 268:17]
    node fpiu_io_in_bits_req_in1_fractIn = bits(sfma_io_in_bits_req_in1_floats_0, 22, 0) @[FPU.scala 269:20]
    node fpiu_io_in_bits_req_in1_expIn = bits(sfma_io_in_bits_req_in1_floats_0, 31, 23) @[FPU.scala 270:18]
    node _fpiu_io_in_bits_req_in1_fractOut_T = shl(fpiu_io_in_bits_req_in1_fractIn, 53) @[FPU.scala 271:28]
    node fpiu_io_in_bits_req_in1_lo = shr(_fpiu_io_in_bits_req_in1_fractOut_T, 24) @[FPU.scala 271:38]
    node fpiu_io_in_bits_req_in1_expOut_hi = bits(fpiu_io_in_bits_req_in1_expIn, 8, 6) @[FPU.scala 273:26]
    node _GEN_179 = pad(fpiu_io_in_bits_req_in1_expIn, 12) @[FPU.scala 274:31]
    node _fpiu_io_in_bits_req_in1_expOut_commonCase_T = add(_GEN_179, UInt<12>("h800")) @[FPU.scala 274:31]
    node _fpiu_io_in_bits_req_in1_expOut_commonCase_T_1 = tail(_fpiu_io_in_bits_req_in1_expOut_commonCase_T, 1) @[FPU.scala 274:31]
    node _fpiu_io_in_bits_req_in1_expOut_commonCase_T_2 = sub(_fpiu_io_in_bits_req_in1_expOut_commonCase_T_1, UInt<12>("h100")) @[FPU.scala 274:48]
    node fpiu_io_in_bits_req_in1_expOut_commonCase = tail(_fpiu_io_in_bits_req_in1_expOut_commonCase_T_2, 1) @[FPU.scala 274:48]
    node _fpiu_io_in_bits_req_in1_expOut_T = eq(fpiu_io_in_bits_req_in1_expOut_hi, UInt<3>("h0")) @[FPU.scala 275:19]
    node _fpiu_io_in_bits_req_in1_expOut_T_1 = geq(fpiu_io_in_bits_req_in1_expOut_hi, UInt<3>("h6")) @[FPU.scala 275:36]
    node _fpiu_io_in_bits_req_in1_expOut_T_2 = or(_fpiu_io_in_bits_req_in1_expOut_T, _fpiu_io_in_bits_req_in1_expOut_T_1) @[FPU.scala 275:25]
    node fpiu_io_in_bits_req_in1_expOut_lo = bits(fpiu_io_in_bits_req_in1_expOut_commonCase, 8, 0) @[FPU.scala 275:65]
    node _fpiu_io_in_bits_req_in1_expOut_T_3 = cat(fpiu_io_in_bits_req_in1_expOut_hi, fpiu_io_in_bits_req_in1_expOut_lo) @[Cat.scala 30:58]
    skip
    node fpiu_io_in_bits_req_in1_hi_lo = mux(_fpiu_io_in_bits_req_in1_expOut_T_2, _fpiu_io_in_bits_req_in1_expOut_T_3, fpiu_io_in_bits_req_in1_expOut_commonCase) @[FPU.scala 275:10]
    node fpiu_io_in_bits_req_in1_hi = cat(fpiu_io_in_bits_req_in1_hi_hi, fpiu_io_in_bits_req_in1_hi_lo) @[Cat.scala 30:58]
    node fpiu_io_in_bits_req_in1_floats_0 = cat(fpiu_io_in_bits_req_in1_hi, fpiu_io_in_bits_req_in1_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node fpiu_io_in_bits_req_in1_truncIdx = bits(ex_reg_ctrl_typeTagIn, 0, 0) @[package.scala 31:49]
    skip
    node _fpiu_io_in_bits_req_in1_T_1 = or(fpiu_io_in_bits_req_in1_truncIdx, sfma_io_in_bits_req_in1_isbox) @[package.scala 32:76]
    skip
    skip
    skip
    node _fpiu_io_in_bits_req_in1_T_3 = mux(fpiu_io_in_bits_req_in1_truncIdx, regfile.ex_rs_0.data, fpiu_io_in_bits_req_in1_floats_0) @[package.scala 32:76]
    skip
    skip
    skip
    skip
    skip
    skip
    node fpiu_io_in_bits_req_in2_hi_hi = bits(sfma_io_in_bits_req_in2_floats_0, 32, 32) @[FPU.scala 268:17]
    node fpiu_io_in_bits_req_in2_fractIn = bits(sfma_io_in_bits_req_in2_floats_0, 22, 0) @[FPU.scala 269:20]
    node fpiu_io_in_bits_req_in2_expIn = bits(sfma_io_in_bits_req_in2_floats_0, 31, 23) @[FPU.scala 270:18]
    node _fpiu_io_in_bits_req_in2_fractOut_T = shl(fpiu_io_in_bits_req_in2_fractIn, 53) @[FPU.scala 271:28]
    node fpiu_io_in_bits_req_in2_lo = shr(_fpiu_io_in_bits_req_in2_fractOut_T, 24) @[FPU.scala 271:38]
    node fpiu_io_in_bits_req_in2_expOut_hi = bits(fpiu_io_in_bits_req_in2_expIn, 8, 6) @[FPU.scala 273:26]
    node _GEN_180 = pad(fpiu_io_in_bits_req_in2_expIn, 12) @[FPU.scala 274:31]
    node _fpiu_io_in_bits_req_in2_expOut_commonCase_T = add(_GEN_180, UInt<12>("h800")) @[FPU.scala 274:31]
    node _fpiu_io_in_bits_req_in2_expOut_commonCase_T_1 = tail(_fpiu_io_in_bits_req_in2_expOut_commonCase_T, 1) @[FPU.scala 274:31]
    node _fpiu_io_in_bits_req_in2_expOut_commonCase_T_2 = sub(_fpiu_io_in_bits_req_in2_expOut_commonCase_T_1, UInt<12>("h100")) @[FPU.scala 274:48]
    node fpiu_io_in_bits_req_in2_expOut_commonCase = tail(_fpiu_io_in_bits_req_in2_expOut_commonCase_T_2, 1) @[FPU.scala 274:48]
    node _fpiu_io_in_bits_req_in2_expOut_T = eq(fpiu_io_in_bits_req_in2_expOut_hi, UInt<3>("h0")) @[FPU.scala 275:19]
    node _fpiu_io_in_bits_req_in2_expOut_T_1 = geq(fpiu_io_in_bits_req_in2_expOut_hi, UInt<3>("h6")) @[FPU.scala 275:36]
    node _fpiu_io_in_bits_req_in2_expOut_T_2 = or(_fpiu_io_in_bits_req_in2_expOut_T, _fpiu_io_in_bits_req_in2_expOut_T_1) @[FPU.scala 275:25]
    node fpiu_io_in_bits_req_in2_expOut_lo = bits(fpiu_io_in_bits_req_in2_expOut_commonCase, 8, 0) @[FPU.scala 275:65]
    node _fpiu_io_in_bits_req_in2_expOut_T_3 = cat(fpiu_io_in_bits_req_in2_expOut_hi, fpiu_io_in_bits_req_in2_expOut_lo) @[Cat.scala 30:58]
    skip
    node fpiu_io_in_bits_req_in2_hi_lo = mux(_fpiu_io_in_bits_req_in2_expOut_T_2, _fpiu_io_in_bits_req_in2_expOut_T_3, fpiu_io_in_bits_req_in2_expOut_commonCase) @[FPU.scala 275:10]
    node fpiu_io_in_bits_req_in2_hi = cat(fpiu_io_in_bits_req_in2_hi_hi, fpiu_io_in_bits_req_in2_hi_lo) @[Cat.scala 30:58]
    node fpiu_io_in_bits_req_in2_floats_0 = cat(fpiu_io_in_bits_req_in2_hi, fpiu_io_in_bits_req_in2_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _fpiu_io_in_bits_req_in2_T_1 = or(fpiu_io_in_bits_req_in1_truncIdx, sfma_io_in_bits_req_in2_isbox) @[package.scala 32:76]
    skip
    skip
    skip
    node _fpiu_io_in_bits_req_in2_T_3 = mux(fpiu_io_in_bits_req_in1_truncIdx, regfile.ex_rs_1.data, fpiu_io_in_bits_req_in2_floats_0) @[package.scala 32:76]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ifpu_io_in_bits_in1_T = pad(io_fromint_data, 65) @[FPU.scala 861:29]
    skip
    reg divSqrt_waddr : UInt<5>, clock with :
      reset => (UInt<1>("h0"), divSqrt_waddr) @[FPU.scala 870:26]
    skip
    node _dfma_io_in_valid_T_1 = eq(ex_reg_ctrl_typeTagOut, UInt<2>("h1")) @[FPU.scala 883:78]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _memLatencyMask_T_2 = eq(mem_ctrl_typeTagOut, UInt<2>("h0")) @[FPU.scala 880:72]
    node _memLatencyMask_T_3 = and(mem_ctrl_fma, _memLatencyMask_T_2) @[FPU.scala 880:56]
    node _memLatencyMask_T_4 = mux(_memLatencyMask_T_3, UInt<2>("h2"), UInt<2>("h0")) @[FPU.scala 895:23]
    node _memLatencyMask_T_5 = eq(mem_ctrl_typeTagOut, UInt<2>("h1")) @[FPU.scala 885:78]
    node _memLatencyMask_T_6 = and(mem_ctrl_fma, _memLatencyMask_T_5) @[FPU.scala 885:62]
    node _memLatencyMask_T_7 = mux(_memLatencyMask_T_6, UInt<3>("h4"), UInt<3>("h0")) @[FPU.scala 895:23]
    node _memLatencyMask_T_8 = or(mem_ctrl_fastpipe, mem_ctrl_fromint) @[FPU.scala 895:78]
    node _GEN_187 = pad(_memLatencyMask_T_8, 2) @[FPU.scala 895:78]
    node _memLatencyMask_T_9 = or(_GEN_187, _memLatencyMask_T_4) @[FPU.scala 895:78]
    node _GEN_188 = pad(_memLatencyMask_T_9, 3) @[FPU.scala 895:78]
    node memLatencyMask = or(_GEN_188, _memLatencyMask_T_7) @[FPU.scala 895:78]
    reg wen : UInt<3>, clock with :
      reset => (UInt<1>("h0"), wen) @[FPU.scala 909:16]
    reg wbInfo_0_rd : UInt<5>, clock with :
      reset => (UInt<1>("h0"), wbInfo_0_rd) @[FPU.scala 910:19]
    reg wbInfo_0_typeTag : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wbInfo_0_typeTag) @[FPU.scala 910:19]
    skip
    reg wbInfo_0_pipeid : UInt<2>, clock with :
      reset => (UInt<1>("h0"), wbInfo_0_pipeid) @[FPU.scala 910:19]
    reg wbInfo_1_rd : UInt<5>, clock with :
      reset => (UInt<1>("h0"), wbInfo_1_rd) @[FPU.scala 910:19]
    reg wbInfo_1_typeTag : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wbInfo_1_typeTag) @[FPU.scala 910:19]
    skip
    reg wbInfo_1_pipeid : UInt<2>, clock with :
      reset => (UInt<1>("h0"), wbInfo_1_pipeid) @[FPU.scala 910:19]
    reg wbInfo_2_rd : UInt<5>, clock with :
      reset => (UInt<1>("h0"), wbInfo_2_rd) @[FPU.scala 910:19]
    reg wbInfo_2_typeTag : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wbInfo_2_typeTag) @[FPU.scala 910:19]
    skip
    reg wbInfo_2_pipeid : UInt<2>, clock with :
      reset => (UInt<1>("h0"), wbInfo_2_pipeid) @[FPU.scala 910:19]
    node _mem_wen_T = or(mem_ctrl_fma, mem_ctrl_fastpipe) @[FPU.scala 911:48]
    node _mem_wen_T_1 = or(_mem_wen_T, mem_ctrl_fromint) @[FPU.scala 911:69]
    node mem_wen = and(mem_reg_valid, _mem_wen_T_1) @[FPU.scala 911:31]
    node _write_port_busy_T = mux(ex_reg_ctrl_fastpipe, UInt<2>("h2"), UInt<2>("h0")) @[FPU.scala 895:23]
    node _write_port_busy_T_1 = mux(ex_reg_ctrl_fromint, UInt<2>("h2"), UInt<2>("h0")) @[FPU.scala 895:23]
    skip
    node _write_port_busy_T_3 = and(ex_reg_ctrl_fma, _sfma_io_in_valid_T_1) @[FPU.scala 880:56]
    node _write_port_busy_T_4 = mux(_write_port_busy_T_3, UInt<3>("h4"), UInt<3>("h0")) @[FPU.scala 895:23]
    skip
    node _write_port_busy_T_6 = and(ex_reg_ctrl_fma, _dfma_io_in_valid_T_1) @[FPU.scala 885:62]
    node _write_port_busy_T_7 = mux(_write_port_busy_T_6, UInt<4>("h8"), UInt<4>("h0")) @[FPU.scala 895:23]
    node _write_port_busy_T_8 = or(_write_port_busy_T, _write_port_busy_T_1) @[FPU.scala 895:78]
    node _GEN_189 = pad(_write_port_busy_T_8, 3) @[FPU.scala 895:78]
    node _write_port_busy_T_9 = or(_GEN_189, _write_port_busy_T_4) @[FPU.scala 895:78]
    node _GEN_190 = pad(_write_port_busy_T_9, 4) @[FPU.scala 895:78]
    node _write_port_busy_T_10 = or(_GEN_190, _write_port_busy_T_7) @[FPU.scala 895:78]
    node _GEN_191 = pad(memLatencyMask, 4) @[FPU.scala 912:62]
    node _write_port_busy_T_11 = and(_GEN_191, _write_port_busy_T_10) @[FPU.scala 912:62]
    node _write_port_busy_T_12 = orr(_write_port_busy_T_11) @[FPU.scala 912:89]
    node _write_port_busy_T_13 = and(mem_wen, _write_port_busy_T_12) @[FPU.scala 912:43]
    node _write_port_busy_T_14 = mux(ex_reg_ctrl_fastpipe, UInt<3>("h4"), UInt<3>("h0")) @[FPU.scala 895:23]
    node _write_port_busy_T_15 = mux(ex_reg_ctrl_fromint, UInt<3>("h4"), UInt<3>("h0")) @[FPU.scala 895:23]
    skip
    skip
    node _write_port_busy_T_18 = mux(_write_port_busy_T_3, UInt<4>("h8"), UInt<4>("h0")) @[FPU.scala 895:23]
    skip
    skip
    node _write_port_busy_T_21 = mux(_write_port_busy_T_6, UInt<5>("h10"), UInt<5>("h0")) @[FPU.scala 895:23]
    node _write_port_busy_T_22 = or(_write_port_busy_T_14, _write_port_busy_T_15) @[FPU.scala 895:78]
    node _GEN_192 = pad(_write_port_busy_T_22, 4) @[FPU.scala 895:78]
    node _write_port_busy_T_23 = or(_GEN_192, _write_port_busy_T_18) @[FPU.scala 895:78]
    node _GEN_193 = pad(_write_port_busy_T_23, 5) @[FPU.scala 895:78]
    node _write_port_busy_T_24 = or(_GEN_193, _write_port_busy_T_21) @[FPU.scala 895:78]
    node _GEN_194 = pad(wen, 5) @[FPU.scala 912:101]
    node _write_port_busy_T_25 = and(_GEN_194, _write_port_busy_T_24) @[FPU.scala 912:101]
    node _write_port_busy_T_26 = orr(_write_port_busy_T_25) @[FPU.scala 912:128]
    node _write_port_busy_T_27 = or(_write_port_busy_T_13, _write_port_busy_T_26) @[FPU.scala 912:93]
    reg write_port_busy : UInt<1>, clock with :
      reset => (UInt<1>("h0"), write_port_busy) @[Reg.scala 15:16]
    skip
    skip
    node _T_11 = bits(wen, 1, 1) @[FPU.scala 916:14]
    node _GEN_113 = mux(_T_11, wbInfo_1_rd, wbInfo_0_rd) @[FPU.scala 910:19 916:{21,33}]
    node _GEN_114 = mux(_T_11, wbInfo_1_typeTag, wbInfo_0_typeTag) @[FPU.scala 910:19 916:{21,33}]
    skip
    node _GEN_116 = mux(_T_11, wbInfo_1_pipeid, wbInfo_0_pipeid) @[FPU.scala 910:19 916:{21,33}]
    node _T_12 = bits(wen, 2, 2) @[FPU.scala 916:14]
    node _GEN_117 = mux(_T_12, wbInfo_2_rd, wbInfo_1_rd) @[FPU.scala 910:19 916:{21,33}]
    node _GEN_118 = mux(_T_12, wbInfo_2_typeTag, wbInfo_1_typeTag) @[FPU.scala 910:19 916:{21,33}]
    skip
    node _GEN_120 = mux(_T_12, wbInfo_2_pipeid, wbInfo_1_pipeid) @[FPU.scala 910:19 916:{21,33}]
    node _wen_T = shr(wen, 1) @[FPU.scala 918:14]
    skip
    skip
    node _GEN_195 = pad(_wen_T, 3) @[FPU.scala 921:23]
    node _wen_T_2 = or(_GEN_195, memLatencyMask) @[FPU.scala 921:23]
    node _GEN_121 = mux(_wb_reg_valid_x7_T, _wen_T_2, pad(_wen_T, 3)) @[FPU.scala 920:19 921:11 918:7]
    node _T_14 = not(write_port_busy) @[FPU.scala 924:13]
    node _T_15 = bits(memLatencyMask, 0, 0) @[FPU.scala 924:47]
    node _T_16 = and(_T_14, _T_15) @[FPU.scala 924:30]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _wbInfo_0_pipeid_T_7 = mux(_memLatencyMask_T_6, UInt<2>("h3"), UInt<2>("h0")) @[FPU.scala 897:63]
    skip
    node _GEN_196 = pad(mem_ctrl_fromint, 2) @[FPU.scala 897:108]
    node _wbInfo_0_pipeid_T_9 = or(_GEN_196, _memLatencyMask_T_4) @[FPU.scala 897:108]
    node _wbInfo_0_pipeid_T_10 = or(_wbInfo_0_pipeid_T_9, _wbInfo_0_pipeid_T_7) @[FPU.scala 897:108]
    node _wbInfo_0_rd_T = bits(mem_reg_inst, 11, 7) @[FPU.scala 928:37]
    skip
    node _GEN_123 = mux(_T_16, mem_ctrl_typeTagOut, pad(_GEN_114, 2)) @[FPU.scala 924:52 926:27]
    node _GEN_124 = mux(_T_16, _wbInfo_0_pipeid_T_10, _GEN_116) @[FPU.scala 924:52 927:26]
    node _GEN_125 = mux(_T_16, _wbInfo_0_rd_T, _GEN_113) @[FPU.scala 924:52 928:22]
    skip
    node _T_18 = bits(memLatencyMask, 1, 1) @[FPU.scala 924:47]
    node _T_19 = and(_T_14, _T_18) @[FPU.scala 924:30]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_127 = mux(_T_19, mem_ctrl_typeTagOut, pad(_GEN_118, 2)) @[FPU.scala 924:52 926:27]
    node _GEN_128 = mux(_T_19, _wbInfo_0_pipeid_T_10, _GEN_120) @[FPU.scala 924:52 927:26]
    node _GEN_129 = mux(_T_19, _wbInfo_0_rd_T, _GEN_117) @[FPU.scala 924:52 928:22]
    skip
    node _T_21 = bits(memLatencyMask, 2, 2) @[FPU.scala 924:47]
    node _T_22 = and(_T_14, _T_21) @[FPU.scala 924:30]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_131 = mux(_T_22, mem_ctrl_typeTagOut, pad(wbInfo_2_typeTag, 2)) @[FPU.scala 910:19 924:52 926:27]
    node _GEN_132 = mux(_T_22, _wbInfo_0_pipeid_T_10, wbInfo_2_pipeid) @[FPU.scala 910:19 924:52 927:26]
    node _GEN_133 = mux(_T_22, _wbInfo_0_rd_T, wbInfo_2_rd) @[FPU.scala 910:19 924:52 928:22]
    node _GEN_134 = mux(mem_wen, _GEN_121, pad(_wen_T, 3)) @[FPU.scala 919:18 918:7]
    skip
    node _GEN_136 = mux(mem_wen, _GEN_123, pad(_GEN_114, 2)) @[FPU.scala 919:18]
    skip
    skip
    skip
    node _GEN_140 = mux(mem_wen, _GEN_127, pad(_GEN_118, 2)) @[FPU.scala 919:18]
    skip
    skip
    skip
    node _GEN_144 = mux(mem_wen, _GEN_131, pad(wbInfo_2_typeTag, 2)) @[FPU.scala 919:18 910:19]
    skip
    skip
    node divSqrt_typeTag = or(divSqrt_1.io_outValid_div, divSqrt_1.io_outValid_sqrt) @[FPU.scala 996:37]
    reg divSqrt_killed : UInt<1>, clock with :
      reset => (UInt<1>("h0"), divSqrt_killed) @[FPU.scala 974:29]
    node _divSqrt_wen_T_1 = not(divSqrt_killed) @[FPU.scala 997:24]
    node _T_41 = or(divSqrt.io_outValid_div, divSqrt.io_outValid_sqrt) @[FPU.scala 996:37]
    skip
    node _GEN_159 = and(_T_41, _divSqrt_wen_T_1) @[FPU.scala 996:66 997:21]
    node divSqrt_wen = mux(divSqrt_typeTag, _divSqrt_wen_T_1, _GEN_159) @[FPU.scala 996:66 997:21]
    skip
    skip
    skip
    skip
    skip
    node wtypeTag = mux(divSqrt_wen, divSqrt_typeTag, wbInfo_0_typeTag) @[FPU.scala 934:21]
    node _wdata_T_13 = eq(wbInfo_0_pipeid, UInt<2>("h1")) @[package.scala 32:86]
    node _wdata_T_14 = mux(_wdata_T_13, ifpu.io_out_bits_data, fpmu.io_out_bits_data) @[package.scala 32:76]
    node _wdata_T_15 = eq(wbInfo_0_pipeid, UInt<2>("h2")) @[package.scala 32:86]
    node _wdata_T_16 = mux(_wdata_T_15, sfma.io_out_bits_data, _wdata_T_14) @[package.scala 32:76]
    node _wdata_T_17 = eq(wbInfo_0_pipeid, UInt<2>("h3")) @[package.scala 32:86]
    node _wdata_T_18 = mux(_wdata_T_17, dfma.io_out_bits_data, _wdata_T_16) @[package.scala 32:76]
    node _divSqrt_wdata_T = bits(divSqrt_1.io_out, 63, 61) @[FPU.scala 243:25]
    node _divSqrt_wdata_T_1 = andr(_divSqrt_wdata_T) @[FPU.scala 243:56]
    skip
    node divSqrt_wdata_maskedNaN = and(divSqrt_1.io_out, UInt<65>("h1efefffffffffffff")) @[FPU.scala 408:25]
    node _divSqrt_wdata_T_2 = mux(_divSqrt_wdata_T_1, divSqrt_wdata_maskedNaN, divSqrt_1.io_out) @[FPU.scala 409:10]
    node _GEN_160 = divSqrt.io_out @[FPU.scala 996:66 998:23]
    node divSqrt_wdata = mux(divSqrt_typeTag, _divSqrt_wdata_T_2, pad(_GEN_160, 65)) @[FPU.scala 996:66 998:23]
    skip
    node _wdata_T_19 = mux(divSqrt_wen, divSqrt_wdata, _wdata_T_18) @[FPU.scala 935:22]
    skip
    node wdata_opts_bigger_swizzledNaN_hi_lo_lo = bits(_wdata_T_19, 31, 31) @[FPU.scala 335:8]
    node wdata_opts_bigger_swizzledNaN_lo_hi_lo = bits(_wdata_T_19, 32, 32) @[FPU.scala 337:8]
    node wdata_opts_bigger_swizzledNaN_lo_lo = bits(_wdata_T_19, 30, 0) @[FPU.scala 338:8]
    node wdata_opts_bigger_swizzledNaN_lo_hi = cat(UInt<20>("hfffff"), wdata_opts_bigger_swizzledNaN_lo_hi_lo) @[Cat.scala 30:58]
    node wdata_opts_bigger_swizzledNaN_lo = cat(wdata_opts_bigger_swizzledNaN_lo_hi, wdata_opts_bigger_swizzledNaN_lo_lo) @[Cat.scala 30:58]
    node wdata_opts_bigger_swizzledNaN_hi_lo = cat(UInt<7>("h7f"), wdata_opts_bigger_swizzledNaN_hi_lo_lo) @[Cat.scala 30:58]
    skip
    node wdata_opts_bigger_swizzledNaN_hi = cat(UInt<5>("h1f"), wdata_opts_bigger_swizzledNaN_hi_lo) @[Cat.scala 30:58]
    node wdata_opts_bigger_swizzledNaN = cat(wdata_opts_bigger_swizzledNaN_hi, wdata_opts_bigger_swizzledNaN_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node wdata_1 = mux(wtypeTag, _wdata_T_19, wdata_opts_bigger_swizzledNaN) @[package.scala 32:76]
    skip
    node _wexc_T_1 = mux(_wdata_T_13, ifpu.io_out_bits_exc, fpmu.io_out_bits_exc) @[package.scala 32:76]
    skip
    node _wexc_T_3 = mux(_wdata_T_15, sfma.io_out_bits_exc, _wexc_T_1) @[package.scala 32:76]
    skip
    node wexc = mux(_wdata_T_17, dfma.io_out_bits_exc, _wexc_T_3) @[package.scala 32:76]
    skip
    node _T_24 = bits(wen, 0, 0) @[FPU.scala 937:30]
    skip
    node frfWriteBundle_1_wrenf = or(_T_24, divSqrt_wen) @[FPU.scala 937:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _curOK_T_7 = bits(wdata_1, 63, 61) @[FPU.scala 243:25]
    node _curOK_T_8 = andr(_curOK_T_7) @[FPU.scala 243:56]
    node _curOK_T_9 = not(_curOK_T_8) @[FPU.scala 380:19]
    node _curOK_T_10 = bits(wdata_1, 60, 60) @[FPU.scala 380:35]
    node _curOK_T_11 = bits(wdata_1, 51, 32) @[FPU.scala 380:60]
    node _curOK_T_12 = andr(_curOK_T_11) @[FPU.scala 380:96]
    node _curOK_T_13 = eq(_curOK_T_10, _curOK_T_12) @[FPU.scala 380:55]
    node curOK_1 = or(_curOK_T_9, _curOK_T_13) @[FPU.scala 380:31]
    skip
    skip
    node _T_29 = or(curOK_1, reset) @[FPU.scala 938:11]
    node _T_30 = not(_T_29) @[FPU.scala 938:11]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node wb_toint_valid = and(wb_reg_valid, wb_ctrl_toint) @[FPU.scala 953:37]
    reg wb_toint_exc : UInt<5>, clock with :
      reset => (UInt<1>("h0"), wb_toint_exc) @[Reg.scala 15:16]
    skip
    node _io_fcsr_flags_valid_T = or(wb_toint_valid, divSqrt_wen) @[FPU.scala 955:41]
    skip
    skip
    node _io_fcsr_flags_bits_T = mux(wb_toint_valid, wb_toint_exc, UInt<5>("h0")) @[FPU.scala 957:8]
    node _GEN_161 = divSqrt.io_exceptionFlags @[FPU.scala 996:66 999:23]
    node divSqrt_flags = mux(divSqrt_typeTag, divSqrt_1.io_exceptionFlags, _GEN_161) @[FPU.scala 996:66 999:23]
    skip
    node _io_fcsr_flags_bits_T_1 = mux(divSqrt_wen, divSqrt_flags, UInt<5>("h0")) @[FPU.scala 958:8]
    node _io_fcsr_flags_bits_T_2 = or(_io_fcsr_flags_bits_T, _io_fcsr_flags_bits_T_1) @[FPU.scala 957:48]
    skip
    node _io_fcsr_flags_bits_T_4 = mux(_T_24, wexc, UInt<5>("h0")) @[FPU.scala 959:8]
    skip
    node _divSqrt_write_port_busy_T = or(mem_ctrl_div, mem_ctrl_sqrt) @[FPU.scala 961:47]
    node _divSqrt_write_port_busy_T_1 = orr(wen) @[FPU.scala 961:72]
    node divSqrt_write_port_busy = and(_divSqrt_write_port_busy_T, _divSqrt_write_port_busy_T_1) @[FPU.scala 961:65]
    node _io_fcsr_rdy_T = and(ex_reg_valid, ex_reg_ctrl_wflags) @[FPU.scala 962:33]
    node _io_fcsr_rdy_T_1 = and(mem_reg_valid, mem_ctrl_wflags) @[FPU.scala 962:68]
    node _io_fcsr_rdy_T_2 = or(_io_fcsr_rdy_T, _io_fcsr_rdy_T_1) @[FPU.scala 962:51]
    skip
    node _io_fcsr_rdy_T_4 = or(_io_fcsr_rdy_T_2, wb_toint_valid) @[FPU.scala 962:87]
    skip
    node _io_fcsr_rdy_T_6 = or(_io_fcsr_rdy_T_4, _divSqrt_write_port_busy_T_1) @[FPU.scala 962:120]
    node _T_42 = not(divSqrt_1.io_inReady) @[FPU.scala 989:13]
    node _T_39 = not(divSqrt.io_inReady) @[FPU.scala 989:13]
    skip
    node divSqrt_inFlight = or(_T_42, _T_39) @[FPU.scala 989:{34,53}]
    skip
    node _io_fcsr_rdy_T_7 = or(_io_fcsr_rdy_T_6, divSqrt_inFlight) @[FPU.scala 962:131]
    skip
    node _io_nack_mem_T = or(write_port_busy, divSqrt_write_port_busy) @[FPU.scala 963:34]
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_sboard_set_x27_T_3 = or(_memLatencyMask_T_6, mem_ctrl_div) @[FPU.scala 966:96]
    skip
    reg io_sboard_set_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_sboard_set_REG) @[FPU.scala 966:55]
    skip
    skip
    skip
    skip
    skip
    node _io_sboard_clr_T_4 = and(_T_24, _wdata_T_17) @[FPU.scala 967:60]
    skip
    skip
    skip
    node _io_illegal_rm_T = bits(io_inst, 14, 12) @[FPU.scala 971:27]
    node _io_illegal_rm_T_1 = eq(_io_illegal_rm_T, UInt<3>("h5")) @[package.scala 15:47]
    node _io_illegal_rm_T_2 = eq(_io_illegal_rm_T, UInt<3>("h6")) @[package.scala 15:47]
    node _io_illegal_rm_T_3 = or(_io_illegal_rm_T_1, _io_illegal_rm_T_2) @[package.scala 72:59]
    skip
    node _io_illegal_rm_T_5 = eq(_io_illegal_rm_T, UInt<3>("h7")) @[FPU.scala 971:67]
    node _io_illegal_rm_T_6 = geq(io_fcsr_rm, UInt<3>("h5")) @[FPU.scala 971:87]
    node _io_illegal_rm_T_7 = and(_io_illegal_rm_T_5, _io_illegal_rm_T_6) @[FPU.scala 971:73]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _divSqrt_io_inValid_T_1 = and(mem_reg_valid, _memLatencyMask_T_2) @[FPU.scala 982:43]
    skip
    node _divSqrt_io_inValid_T_3 = and(_divSqrt_io_inValid_T_1, _divSqrt_write_port_busy_T) @[FPU.scala 982:65]
    node _divSqrt_io_inValid_T_4 = not(divSqrt_inFlight) @[FPU.scala 982:103]
    skip
    node divSqrt_io_a_hi_hi = bits(fpiu.io_out_bits_in_in1, 64, 64) @[FPU.scala 268:17]
    node divSqrt_io_a_fractIn = bits(fpiu.io_out_bits_in_in1, 51, 0) @[FPU.scala 269:20]
    node divSqrt_io_a_expIn = bits(fpiu.io_out_bits_in_in1, 63, 52) @[FPU.scala 270:18]
    node _divSqrt_io_a_fractOut_T = shl(divSqrt_io_a_fractIn, 24) @[FPU.scala 271:28]
    node divSqrt_io_a_lo = shr(_divSqrt_io_a_fractOut_T, 53) @[FPU.scala 271:38]
    node divSqrt_io_a_expOut_hi = bits(divSqrt_io_a_expIn, 11, 9) @[FPU.scala 273:26]
    node _divSqrt_io_a_expOut_commonCase_T = add(divSqrt_io_a_expIn, UInt<12>("h100")) @[FPU.scala 274:31]
    node _divSqrt_io_a_expOut_commonCase_T_1 = tail(_divSqrt_io_a_expOut_commonCase_T, 1) @[FPU.scala 274:31]
    node _divSqrt_io_a_expOut_commonCase_T_2 = sub(_divSqrt_io_a_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 274:48]
    node divSqrt_io_a_expOut_commonCase = tail(_divSqrt_io_a_expOut_commonCase_T_2, 1) @[FPU.scala 274:48]
    node _divSqrt_io_a_expOut_T = eq(divSqrt_io_a_expOut_hi, UInt<3>("h0")) @[FPU.scala 275:19]
    node _divSqrt_io_a_expOut_T_1 = geq(divSqrt_io_a_expOut_hi, UInt<3>("h6")) @[FPU.scala 275:36]
    node _divSqrt_io_a_expOut_T_2 = or(_divSqrt_io_a_expOut_T, _divSqrt_io_a_expOut_T_1) @[FPU.scala 275:25]
    node divSqrt_io_a_expOut_lo = bits(divSqrt_io_a_expOut_commonCase, 5, 0) @[FPU.scala 275:65]
    node _divSqrt_io_a_expOut_T_3 = cat(divSqrt_io_a_expOut_hi, divSqrt_io_a_expOut_lo) @[Cat.scala 30:58]
    node _divSqrt_io_a_expOut_T_4 = bits(divSqrt_io_a_expOut_commonCase, 8, 0) @[FPU.scala 275:93]
    node divSqrt_io_a_hi_lo = mux(_divSqrt_io_a_expOut_T_2, _divSqrt_io_a_expOut_T_3, _divSqrt_io_a_expOut_T_4) @[FPU.scala 275:10]
    node divSqrt_io_a_hi = cat(divSqrt_io_a_hi_hi, divSqrt_io_a_hi_lo) @[Cat.scala 30:58]
    skip
    node divSqrt_io_b_hi_hi = bits(fpiu.io_out_bits_in_in2, 64, 64) @[FPU.scala 268:17]
    node divSqrt_io_b_fractIn = bits(fpiu.io_out_bits_in_in2, 51, 0) @[FPU.scala 269:20]
    node divSqrt_io_b_expIn = bits(fpiu.io_out_bits_in_in2, 63, 52) @[FPU.scala 270:18]
    node _divSqrt_io_b_fractOut_T = shl(divSqrt_io_b_fractIn, 24) @[FPU.scala 271:28]
    node divSqrt_io_b_lo = shr(_divSqrt_io_b_fractOut_T, 53) @[FPU.scala 271:38]
    node divSqrt_io_b_expOut_hi = bits(divSqrt_io_b_expIn, 11, 9) @[FPU.scala 273:26]
    node _divSqrt_io_b_expOut_commonCase_T = add(divSqrt_io_b_expIn, UInt<12>("h100")) @[FPU.scala 274:31]
    node _divSqrt_io_b_expOut_commonCase_T_1 = tail(_divSqrt_io_b_expOut_commonCase_T, 1) @[FPU.scala 274:31]
    node _divSqrt_io_b_expOut_commonCase_T_2 = sub(_divSqrt_io_b_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 274:48]
    node divSqrt_io_b_expOut_commonCase = tail(_divSqrt_io_b_expOut_commonCase_T_2, 1) @[FPU.scala 274:48]
    node _divSqrt_io_b_expOut_T = eq(divSqrt_io_b_expOut_hi, UInt<3>("h0")) @[FPU.scala 275:19]
    node _divSqrt_io_b_expOut_T_1 = geq(divSqrt_io_b_expOut_hi, UInt<3>("h6")) @[FPU.scala 275:36]
    node _divSqrt_io_b_expOut_T_2 = or(_divSqrt_io_b_expOut_T, _divSqrt_io_b_expOut_T_1) @[FPU.scala 275:25]
    node divSqrt_io_b_expOut_lo = bits(divSqrt_io_b_expOut_commonCase, 5, 0) @[FPU.scala 275:65]
    node _divSqrt_io_b_expOut_T_3 = cat(divSqrt_io_b_expOut_hi, divSqrt_io_b_expOut_lo) @[Cat.scala 30:58]
    node _divSqrt_io_b_expOut_T_4 = bits(divSqrt_io_b_expOut_commonCase, 8, 0) @[FPU.scala 275:93]
    node divSqrt_io_b_hi_lo = mux(_divSqrt_io_b_expOut_T_2, _divSqrt_io_b_expOut_T_3, _divSqrt_io_b_expOut_T_4) @[FPU.scala 275:10]
    node divSqrt_io_b_hi = cat(divSqrt_io_b_hi_hi, divSqrt_io_b_hi_lo) @[Cat.scala 30:58]
    skip
    node _T_40 = and(divSqrt.io_inValid, divSqrt.io_inReady) @[FPU.scala 991:32]
    skip
    node _GEN_157 = mux(_T_40, killm, divSqrt_killed) @[FPU.scala 991:55 992:24 974:29]
    node _GEN_158 = mux(_T_40, _wbInfo_0_rd_T, divSqrt_waddr) @[FPU.scala 991:55 993:23 870:26]
    skip
    node _divSqrt_io_inValid_T_7 = and(mem_reg_valid, _memLatencyMask_T_5) @[FPU.scala 982:43]
    skip
    node _divSqrt_io_inValid_T_9 = and(_divSqrt_io_inValid_T_7, _divSqrt_write_port_busy_T) @[FPU.scala 982:65]
    skip
    skip
    node _T_43 = and(divSqrt_1.io_inValid, divSqrt_1.io_inReady) @[FPU.scala 991:32]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_fcsr_flags_valid <= or(_io_fcsr_flags_valid_T, _T_24) @[FPU.scala 955:56]
    io_fcsr_flags_bits <= or(_io_fcsr_flags_bits_T_2, _io_fcsr_flags_bits_T_4) @[FPU.scala 958:46]
    io_store_data <= fpiu.io_out_bits_store @[FPU.scala 851:17]
    io_toint_data <= fpiu.io_out_bits_toint @[FPU.scala 852:17]
    io_fcsr_rdy <= not(_io_fcsr_rdy_T_7) @[FPU.scala 962:18]
    io_nack_mem <= or(_io_nack_mem_T, divSqrt_inFlight) @[FPU.scala 963:61]
    io_illegal_rm <= or(_io_illegal_rm_T_3, _io_illegal_rm_T_7) @[FPU.scala 971:49]
    skip
    io_dec_wen <= fp_decoder.io_sigs_wen @[FPU.scala 964:10]
    io_dec_ren1 <= fp_decoder.io_sigs_ren1 @[FPU.scala 964:10]
    io_dec_ren2 <= fp_decoder.io_sigs_ren2 @[FPU.scala 964:10]
    io_dec_ren3 <= fp_decoder.io_sigs_ren3 @[FPU.scala 964:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_sboard_set <= and(wb_reg_valid, io_sboard_set_REG) @[FPU.scala 966:49]
    io_sboard_clr <= or(divSqrt_wen, _io_sboard_clr_T_4) @[FPU.scala 967:49]
    io_sboard_clra <= mux(divSqrt_wen, divSqrt_waddr, wbInfo_0_rd) @[FPU.scala 933:18]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    fp_decoder.io_inst <= io_inst @[FPU.scala 743:22]
    ex_reg_valid <= mux(reset, UInt<1>("h0"), io_valid) @[FPU.scala 746:{25,25,25}]
    ex_reg_inst <= mux(io_valid, io_inst, ex_reg_inst) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    ex_reg_ctrl_ren2 <= mux(io_valid, fp_decoder.io_sigs_ren2, ex_reg_ctrl_ren2) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_ren3 <= mux(io_valid, fp_decoder.io_sigs_ren3, ex_reg_ctrl_ren3) @[Reg.scala 15:16 16:{19,23}]
    skip
    ex_reg_ctrl_swap23 <= mux(io_valid, fp_decoder.io_sigs_swap23, ex_reg_ctrl_swap23) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_typeTagIn <= mux(io_valid, fp_decoder.io_sigs_typeTagIn, ex_reg_ctrl_typeTagIn) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_typeTagOut <= mux(io_valid, fp_decoder.io_sigs_typeTagOut, ex_reg_ctrl_typeTagOut) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_fromint <= mux(io_valid, fp_decoder.io_sigs_fromint, ex_reg_ctrl_fromint) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_toint <= mux(io_valid, fp_decoder.io_sigs_toint, ex_reg_ctrl_toint) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_fastpipe <= mux(io_valid, fp_decoder.io_sigs_fastpipe, ex_reg_ctrl_fastpipe) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_fma <= mux(io_valid, fp_decoder.io_sigs_fma, ex_reg_ctrl_fma) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_div <= mux(io_valid, fp_decoder.io_sigs_div, ex_reg_ctrl_div) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_sqrt <= mux(io_valid, fp_decoder.io_sigs_sqrt, ex_reg_ctrl_sqrt) @[Reg.scala 15:16 16:{19,23}]
    ex_reg_ctrl_wflags <= mux(io_valid, fp_decoder.io_sigs_wflags, ex_reg_ctrl_wflags) @[Reg.scala 15:16 16:{19,23}]
    ex_ra_0 <= mux(io_valid, _GEN_66, ex_ra_0) @[FPU.scala 809:19 749:31]
    ex_ra_1 <= mux(io_valid, _GEN_68, ex_ra_1) @[FPU.scala 809:19 749:31]
    ex_ra_2 <= mux(io_valid, _GEN_69, ex_ra_2) @[FPU.scala 809:19 749:31]
    load_wb <= io_dmem_resp_val @[FPU.scala 752:20]
    load_wb_typeTag <= mux(io_dmem_resp_val, _load_wb_typeTag_T_2, load_wb_typeTag) @[Reg.scala 15:16 16:{19,23}]
    load_wb_data <= mux(io_dmem_resp_val, io_dmem_resp_data, load_wb_data) @[Reg.scala 15:16 16:{19,23}]
    load_wb_tag <= mux(io_dmem_resp_val, io_dmem_resp_tag, load_wb_tag) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    mem_reg_valid <= mux(reset, UInt<1>("h0"), _mem_reg_valid_T_1) @[FPU.scala 763:{30,30} 769:17]
    mem_reg_inst <= mux(ex_reg_valid, ex_reg_inst, mem_reg_inst) @[Reg.scala 15:16 16:{19,23}]
    wb_reg_valid <= mux(reset, UInt<1>("h0"), wb_reg_valid_x7) @[FPU.scala 771:{25,25,25}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    mem_ctrl_typeTagOut <= mux(ex_reg_valid, ex_reg_ctrl_typeTagOut, mem_ctrl_typeTagOut) @[Reg.scala 15:16 16:{19,23}]
    mem_ctrl_fromint <= mux(ex_reg_valid, ex_reg_ctrl_fromint, mem_ctrl_fromint) @[Reg.scala 15:16 16:{19,23}]
    mem_ctrl_toint <= mux(ex_reg_valid, ex_reg_ctrl_toint, mem_ctrl_toint) @[Reg.scala 15:16 16:{19,23}]
    mem_ctrl_fastpipe <= mux(ex_reg_valid, ex_reg_ctrl_fastpipe, mem_ctrl_fastpipe) @[Reg.scala 15:16 16:{19,23}]
    mem_ctrl_fma <= mux(ex_reg_valid, ex_reg_ctrl_fma, mem_ctrl_fma) @[Reg.scala 15:16 16:{19,23}]
    mem_ctrl_div <= mux(ex_reg_valid, ex_reg_ctrl_div, mem_ctrl_div) @[Reg.scala 15:16 16:{19,23}]
    mem_ctrl_sqrt <= mux(ex_reg_valid, ex_reg_ctrl_sqrt, mem_ctrl_sqrt) @[Reg.scala 15:16 16:{19,23}]
    mem_ctrl_wflags <= mux(ex_reg_valid, ex_reg_ctrl_wflags, mem_ctrl_wflags) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    wb_ctrl_toint <= mux(mem_reg_valid, mem_ctrl_toint, wb_ctrl_toint) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    skip
    regfile.ex_rs_0.addr <= ex_ra_0 @[FPU.scala 808:37]
    regfile.ex_rs_0.en <= UInt<1>("h1") @[FPU.scala 808:37]
    regfile.ex_rs_0.clk <= clock @[FPU.scala 808:37]
    regfile.ex_rs_1.addr <= ex_ra_1 @[FPU.scala 808:37]
    regfile.ex_rs_1.en <= UInt<1>("h1") @[FPU.scala 808:37]
    regfile.ex_rs_1.clk <= clock @[FPU.scala 808:37]
    regfile.ex_rs_2.addr <= ex_ra_2 @[FPU.scala 808:37]
    regfile.ex_rs_2.en <= UInt<1>("h1") @[FPU.scala 808:37]
    regfile.ex_rs_2.clk <= clock @[FPU.scala 808:37]
    regfile.MPORT.addr <= load_wb_tag @[FPU.scala 797:18 799:12]
    regfile.MPORT.en <= load_wb @[FPU.scala 797:18 799:12 796:20]
    regfile.MPORT.clk <= clock @[FPU.scala 797:18 799:12]
    regfile.MPORT.data <= mux(_wdata_T_12, wdata_swizzledNaN, _wdata_T_6) @[FPU.scala 339:8]
    regfile.MPORT.mask <= UInt<1>("h1") @[FPU.scala 797:18 799:26]
    regfile.MPORT_1.addr <= mux(divSqrt_wen, divSqrt_waddr, wbInfo_0_rd) @[FPU.scala 933:18]
    regfile.MPORT_1.en <= or(_T_24, divSqrt_wen) @[FPU.scala 937:35]
    regfile.MPORT_1.clk <= clock @[FPU.scala 937:51 939:12]
    regfile.MPORT_1.data <= mux(wtypeTag, _wdata_T_19, wdata_opts_bigger_swizzledNaN) @[package.scala 32:76]
    regfile.MPORT_1.mask <= UInt<1>("h1") @[FPU.scala 937:51 939:20]
    sfma.clock <= clock
    sfma.reset <= reset
    sfma.io_in_valid <= and(_sfma_io_in_valid_T, _sfma_io_in_valid_T_1) @[FPU.scala 845:48]
    skip
    skip
    skip
    skip
    sfma.io_in_bits_ren3 <= ex_reg_ctrl_ren3 @[FPU.scala 834:24 835:11 826:9]
    skip
    sfma.io_in_bits_swap23 <= ex_reg_ctrl_swap23 @[FPU.scala 834:24 835:11 826:9]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    sfma.io_in_bits_rm <= mux(_ex_rm_T_1, io_fcsr_rm, _ex_rm_T) @[FPU.scala 821:18]
    skip
    sfma.io_in_bits_fmaCmd <= or(_sfma_io_in_bits_req_fmaCmd_T, _GEN_178) @[FPU.scala 833:36]
    skip
    skip
    sfma.io_in_bits_in1 <= pad(_sfma_io_in_bits_req_in1_T_1, 65) @[FPU.scala 834:24 835:11 828:13]
    sfma.io_in_bits_in2 <= pad(_sfma_io_in_bits_req_in2_T_1, 65) @[FPU.scala 829:13 834:24]
    sfma.io_in_bits_in3 <= pad(_sfma_io_in_bits_req_in3_T_1, 65) @[FPU.scala 830:13 834:24]
    fpiu.clock <= clock
    skip
    fpiu.io_in_valid <= and(ex_reg_valid, _fpiu_io_in_valid_T_3) @[FPU.scala 849:33]
    skip
    skip
    skip
    fpiu.io_in_bits_ren2 <= ex_reg_ctrl_ren2 @[FPU.scala 834:24 835:11 826:9]
    skip
    skip
    skip
    fpiu.io_in_bits_typeTagIn <= ex_reg_ctrl_typeTagIn @[FPU.scala 834:24 835:11 826:9]
    fpiu.io_in_bits_typeTagOut <= ex_reg_ctrl_typeTagOut @[FPU.scala 834:24 835:11 826:9]
    skip
    skip
    skip
    skip
    skip
    skip
    fpiu.io_in_bits_wflags <= ex_reg_ctrl_wflags @[FPU.scala 834:24 835:11 826:9]
    fpiu.io_in_bits_rm <= mux(_ex_rm_T_1, io_fcsr_rm, _ex_rm_T) @[FPU.scala 821:18]
    skip
    skip
    fpiu.io_in_bits_typ <= bits(ex_reg_inst, 21, 20) @[FPU.scala 831:27]
    fpiu.io_in_bits_fmt <= bits(ex_reg_inst, 26, 25) @[FPU.scala 832:27]
    fpiu.io_in_bits_in1 <= mux(_fpiu_io_in_bits_req_in1_T_1, _fpiu_io_in_bits_req_in1_T_3, UInt<65>("he008000000000000")) @[FPU.scala 364:10]
    fpiu.io_in_bits_in2 <= mux(_fpiu_io_in_bits_req_in2_T_1, _fpiu_io_in_bits_req_in2_T_3, UInt<65>("he008000000000000")) @[FPU.scala 364:10]
    skip
    ifpu.clock <= clock
    ifpu.reset <= reset
    ifpu.io_in_valid <= and(ex_reg_valid, ex_reg_ctrl_fromint) @[FPU.scala 859:33]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    ifpu.io_in_bits_typeTagIn <= fpiu.io_in_bits_typeTagIn @[FPU.scala 860:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    ifpu.io_in_bits_wflags <= fpiu.io_in_bits_wflags @[FPU.scala 860:19]
    ifpu.io_in_bits_rm <= fpiu.io_in_bits_rm @[FPU.scala 860:19]
    ifpu.io_in_bits_typ <= fpiu.io_in_bits_typ @[FPU.scala 860:19]
    ifpu.io_in_bits_in1 <= bits(_ifpu_io_in_bits_in1_T, 63, 0) @[FPU.scala 861:23]
    fpmu.clock <= clock
    fpmu.reset <= reset
    fpmu.io_in_valid <= and(ex_reg_valid, ex_reg_ctrl_fastpipe) @[FPU.scala 864:33]
    skip
    skip
    skip
    fpmu.io_in_bits_ren2 <= fpiu.io_in_bits_ren2 @[FPU.scala 865:19]
    skip
    skip
    skip
    skip
    fpmu.io_in_bits_typeTagOut <= fpiu.io_in_bits_typeTagOut @[FPU.scala 865:19]
    skip
    skip
    skip
    skip
    skip
    skip
    fpmu.io_in_bits_wflags <= fpiu.io_in_bits_wflags @[FPU.scala 865:19]
    fpmu.io_in_bits_rm <= fpiu.io_in_bits_rm @[FPU.scala 865:19]
    skip
    skip
    skip
    fpmu.io_in_bits_in1 <= fpiu.io_in_bits_in1 @[FPU.scala 865:19]
    fpmu.io_in_bits_in2 <= fpiu.io_in_bits_in2 @[FPU.scala 865:19]
    skip
    fpmu.io_lt <= fpiu.io_out_bits_lt @[FPU.scala 866:14]
    divSqrt_waddr <= mux(_T_43, _wbInfo_0_rd_T, _GEN_158) @[FPU.scala 991:55 993:23]
    dfma.clock <= clock
    dfma.reset <= reset
    dfma.io_in_valid <= and(_sfma_io_in_valid_T, _dfma_io_in_valid_T_1) @[FPU.scala 883:56]
    skip
    skip
    skip
    skip
    dfma.io_in_bits_ren3 <= ex_reg_ctrl_ren3 @[FPU.scala 834:24 835:11 826:9]
    skip
    dfma.io_in_bits_swap23 <= ex_reg_ctrl_swap23 @[FPU.scala 834:24 835:11 826:9]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    dfma.io_in_bits_rm <= mux(_ex_rm_T_1, io_fcsr_rm, _ex_rm_T) @[FPU.scala 821:18]
    skip
    dfma.io_in_bits_fmaCmd <= or(_sfma_io_in_bits_req_fmaCmd_T, _GEN_178) @[FPU.scala 833:36]
    skip
    skip
    dfma.io_in_bits_in1 <= regfile.ex_rs_0.data @[FPU.scala 367:26]
    dfma.io_in_bits_in2 <= regfile.ex_rs_1.data @[FPU.scala 367:26]
    dfma.io_in_bits_in3 <= regfile.ex_rs_2.data @[FPU.scala 367:26]
    wen <= mux(reset, UInt<3>("h0"), _GEN_134) @[FPU.scala 909:{16,16}]
    wbInfo_0_rd <= mux(mem_wen, _GEN_125, _GEN_113) @[FPU.scala 919:18]
    wbInfo_0_typeTag <= bits(_GEN_136, 0, 0)
    skip
    wbInfo_0_pipeid <= mux(mem_wen, _GEN_124, _GEN_116) @[FPU.scala 919:18]
    wbInfo_1_rd <= mux(mem_wen, _GEN_129, _GEN_117) @[FPU.scala 919:18]
    wbInfo_1_typeTag <= bits(_GEN_140, 0, 0)
    skip
    wbInfo_1_pipeid <= mux(mem_wen, _GEN_128, _GEN_120) @[FPU.scala 919:18]
    wbInfo_2_rd <= mux(mem_wen, _GEN_133, wbInfo_2_rd) @[FPU.scala 919:18 910:19]
    wbInfo_2_typeTag <= bits(_GEN_144, 0, 0)
    skip
    wbInfo_2_pipeid <= mux(mem_wen, _GEN_132, wbInfo_2_pipeid) @[FPU.scala 919:18 910:19]
    write_port_busy <= mux(ex_reg_valid, _write_port_busy_T_27, write_port_busy) @[Reg.scala 15:16 16:{19,23}]
    wb_toint_exc <= mux(mem_ctrl_toint, fpiu.io_out_bits_exc, wb_toint_exc) @[Reg.scala 15:16 16:{19,23}]
    io_sboard_set_REG <= or(_io_sboard_set_x27_T_3, mem_ctrl_sqrt) @[FPU.scala 966:112]
    divSqrt_killed <= mux(_T_43, killm, _GEN_157) @[FPU.scala 991:55 992:24]
    divSqrt.clock <= clock
    divSqrt.reset <= reset
    divSqrt.io_inValid <= and(_divSqrt_io_inValid_T_3, _divSqrt_io_inValid_T_4) @[FPU.scala 982:100]
    divSqrt.io_sqrtOp <= mem_ctrl_sqrt @[FPU.scala 983:25]
    divSqrt.io_a <= cat(divSqrt_io_a_hi, divSqrt_io_a_lo) @[Cat.scala 30:58]
    divSqrt.io_b <= cat(divSqrt_io_b_hi, divSqrt_io_b_lo) @[Cat.scala 30:58]
    divSqrt.io_roundingMode <= fpiu.io_out_bits_in_rm @[FPU.scala 986:31]
    skip
    divSqrt_1.clock <= clock
    divSqrt_1.reset <= reset
    divSqrt_1.io_inValid <= and(_divSqrt_io_inValid_T_9, _divSqrt_io_inValid_T_4) @[FPU.scala 982:100]
    divSqrt_1.io_sqrtOp <= mem_ctrl_sqrt @[FPU.scala 983:25]
    divSqrt_1.io_a <= fpiu.io_out_bits_in_in1 @[FPU.scala 984:20]
    divSqrt_1.io_b <= fpiu.io_out_bits_in_in2 @[FPU.scala 985:20]
    divSqrt_1.io_roundingMode <= fpiu.io_out_bits_in_rm @[FPU.scala 986:31]
    skip
    printf(clock, and(load_wb, _T_3), "Assertion failed\n    at FPU.scala:800 assert(consistent(wdata))\n") @[FPU.scala 800:11]
    stop(clock, and(load_wb, _T_3), 1) @[FPU.scala 800:11]
    printf(clock, and(frfWriteBundle_1_wrenf, _T_30), "Assertion failed\n    at FPU.scala:938 assert(consistent(wdata))\n") @[FPU.scala 938:11]
    stop(clock, and(frfWriteBundle_1_wrenf, _T_30), 1) @[FPU.scala 938:11]

  module HellaCacheArbiter :
    input clock : Clock
    output io_requestor_0_req_ready : UInt<1>
    input io_requestor_0_req_valid : UInt<1>
    input io_requestor_0_req_bits_addr : UInt<40>
    input io_requestor_0_s1_kill : UInt<1>
    output io_requestor_0_s2_nack : UInt<1>
    output io_requestor_0_resp_valid : UInt<1>
    output io_requestor_0_resp_bits_data : UInt<64>
    output io_requestor_0_s2_xcpt_ae_ld : UInt<1>
    output io_requestor_1_req_ready : UInt<1>
    input io_requestor_1_req_valid : UInt<1>
    input io_requestor_1_req_bits_addr : UInt<40>
    input io_requestor_1_req_bits_tag : UInt<7>
    input io_requestor_1_req_bits_cmd : UInt<5>
    input io_requestor_1_req_bits_size : UInt<2>
    input io_requestor_1_req_bits_signed : UInt<1>
    input io_requestor_1_s1_kill : UInt<1>
    input io_requestor_1_s1_data_data : UInt<64>
    output io_requestor_1_s2_nack : UInt<1>
    output io_requestor_1_resp_valid : UInt<1>
    output io_requestor_1_resp_bits_tag : UInt<7>
    output io_requestor_1_resp_bits_size : UInt<2>
    output io_requestor_1_resp_bits_data : UInt<64>
    output io_requestor_1_resp_bits_replay : UInt<1>
    output io_requestor_1_resp_bits_has_data : UInt<1>
    output io_requestor_1_resp_bits_data_word_bypass : UInt<64>
    output io_requestor_1_replay_next : UInt<1>
    output io_requestor_1_s2_xcpt_ma_ld : UInt<1>
    output io_requestor_1_s2_xcpt_ma_st : UInt<1>
    output io_requestor_1_s2_xcpt_pf_ld : UInt<1>
    output io_requestor_1_s2_xcpt_pf_st : UInt<1>
    output io_requestor_1_s2_xcpt_ae_ld : UInt<1>
    output io_requestor_1_s2_xcpt_ae_st : UInt<1>
    output io_requestor_1_ordered : UInt<1>
    output io_requestor_1_perf_release : UInt<1>
    output io_requestor_1_perf_grant : UInt<1>
    input io_mem_req_ready : UInt<1>
    output io_mem_req_valid : UInt<1>
    output io_mem_req_bits_addr : UInt<40>
    output io_mem_req_bits_tag : UInt<7>
    output io_mem_req_bits_cmd : UInt<5>
    output io_mem_req_bits_size : UInt<2>
    output io_mem_req_bits_signed : UInt<1>
    output io_mem_req_bits_phys : UInt<1>
    output io_mem_s1_kill : UInt<1>
    output io_mem_s1_data_data : UInt<64>
    input io_mem_s2_nack : UInt<1>
    input io_mem_resp_valid : UInt<1>
    input io_mem_resp_bits_tag : UInt<7>
    input io_mem_resp_bits_size : UInt<2>
    input io_mem_resp_bits_data : UInt<64>
    input io_mem_resp_bits_replay : UInt<1>
    input io_mem_resp_bits_has_data : UInt<1>
    input io_mem_resp_bits_data_word_bypass : UInt<64>
    input io_mem_replay_next : UInt<1>
    input io_mem_s2_xcpt_ma_ld : UInt<1>
    input io_mem_s2_xcpt_ma_st : UInt<1>
    input io_mem_s2_xcpt_pf_ld : UInt<1>
    input io_mem_s2_xcpt_pf_st : UInt<1>
    input io_mem_s2_xcpt_ae_ld : UInt<1>
    input io_mem_s2_xcpt_ae_st : UInt<1>
    input io_mem_ordered : UInt<1>
    input io_mem_perf_release : UInt<1>
    input io_mem_perf_grant : UInt<1>

    reg s1_id : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s1_id) @[HellaCacheArbiter.scala 19:20]
    reg s2_id : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_id) @[HellaCacheArbiter.scala 20:20]
    skip
    skip
    node _io_requestor_1_req_ready_T = not(io_requestor_0_req_valid) @[HellaCacheArbiter.scala 27:67]
    skip
    node _io_mem_req_bits_tag_T = cat(io_requestor_1_req_bits_tag, UInt<1>("h1")) @[Cat.scala 30:58]
    skip
    skip
    node _GEN_1 = mux(io_requestor_0_req_valid, UInt<8>("h0"), _io_mem_req_bits_tag_T) @[HellaCacheArbiter.scala 49:26 33:{29,29}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T = not(s1_id) @[HellaCacheArbiter.scala 50:21]
    skip
    skip
    skip
    node _T_1 = not(s2_id) @[HellaCacheArbiter.scala 51:21]
    skip
    node _tag_hit_T = bits(io_mem_resp_bits_tag, 0, 0) @[HellaCacheArbiter.scala 59:41]
    node tag_hit = not(_tag_hit_T) @[HellaCacheArbiter.scala 59:57]
    skip
    skip
    skip
    node _io_requestor_0_resp_bits_tag_T = shr(io_mem_resp_bits_tag, 1) @[HellaCacheArbiter.scala 70:45]
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_0_req_ready <= io_mem_req_ready @[HellaCacheArbiter.scala 25:31]
    io_requestor_0_s2_nack <= and(io_mem_s2_nack, _T_1) @[HellaCacheArbiter.scala 64:49]
    skip
    skip
    skip
    io_requestor_0_resp_valid <= and(io_mem_resp_valid, tag_hit) @[HellaCacheArbiter.scala 60:39]
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_0_resp_bits_data <= io_mem_resp_bits_data @[HellaCacheArbiter.scala 69:17]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_0_s2_xcpt_ae_ld <= io_mem_s2_xcpt_ae_ld @[HellaCacheArbiter.scala 61:31]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_1_req_ready <= and(io_requestor_0_req_ready, _io_requestor_1_req_ready_T) @[HellaCacheArbiter.scala 27:64]
    io_requestor_1_s2_nack <= and(io_mem_s2_nack, s2_id) @[HellaCacheArbiter.scala 64:49]
    skip
    skip
    skip
    io_requestor_1_resp_valid <= and(io_mem_resp_valid, _tag_hit_T) @[HellaCacheArbiter.scala 60:39]
    skip
    io_requestor_1_resp_bits_tag <= pad(_io_requestor_0_resp_bits_tag_T, 7) @[HellaCacheArbiter.scala 70:21]
    skip
    io_requestor_1_resp_bits_size <= io_mem_resp_bits_size @[HellaCacheArbiter.scala 69:17]
    skip
    skip
    io_requestor_1_resp_bits_data <= io_mem_resp_bits_data @[HellaCacheArbiter.scala 69:17]
    skip
    io_requestor_1_resp_bits_replay <= io_mem_resp_bits_replay @[HellaCacheArbiter.scala 69:17]
    io_requestor_1_resp_bits_has_data <= io_mem_resp_bits_has_data @[HellaCacheArbiter.scala 69:17]
    io_requestor_1_resp_bits_data_word_bypass <= io_mem_resp_bits_data_word_bypass @[HellaCacheArbiter.scala 69:17]
    skip
    skip
    io_requestor_1_replay_next <= io_mem_replay_next @[HellaCacheArbiter.scala 72:35]
    io_requestor_1_s2_xcpt_ma_ld <= io_mem_s2_xcpt_ma_ld @[HellaCacheArbiter.scala 61:31]
    io_requestor_1_s2_xcpt_ma_st <= io_mem_s2_xcpt_ma_st @[HellaCacheArbiter.scala 61:31]
    io_requestor_1_s2_xcpt_pf_ld <= io_mem_s2_xcpt_pf_ld @[HellaCacheArbiter.scala 61:31]
    io_requestor_1_s2_xcpt_pf_st <= io_mem_s2_xcpt_pf_st @[HellaCacheArbiter.scala 61:31]
    io_requestor_1_s2_xcpt_ae_ld <= io_mem_s2_xcpt_ae_ld @[HellaCacheArbiter.scala 61:31]
    io_requestor_1_s2_xcpt_ae_st <= io_mem_s2_xcpt_ae_st @[HellaCacheArbiter.scala 61:31]
    io_requestor_1_ordered <= io_mem_ordered @[HellaCacheArbiter.scala 62:31]
    skip
    io_requestor_1_perf_release <= io_mem_perf_release @[HellaCacheArbiter.scala 63:28]
    io_requestor_1_perf_grant <= io_mem_perf_grant @[HellaCacheArbiter.scala 63:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_mem_req_valid <= or(io_requestor_0_req_valid, io_requestor_1_req_valid) @[HellaCacheArbiter.scala 24:63]
    io_mem_req_bits_addr <= mux(io_requestor_0_req_valid, io_requestor_0_req_bits_addr, io_requestor_1_req_bits_addr) @[HellaCacheArbiter.scala 32:{25,25} 49:26]
    io_mem_req_bits_tag <= bits(_GEN_1, 6, 0)
    io_mem_req_bits_cmd <= mux(io_requestor_0_req_valid, UInt<5>("h0"), io_requestor_1_req_bits_cmd) @[HellaCacheArbiter.scala 32:{25,25} 49:26]
    io_mem_req_bits_size <= mux(io_requestor_0_req_valid, UInt<2>("h3"), io_requestor_1_req_bits_size) @[HellaCacheArbiter.scala 32:{25,25} 49:26]
    io_mem_req_bits_signed <= mux(io_requestor_0_req_valid, UInt<1>("h0"), io_requestor_1_req_bits_signed) @[HellaCacheArbiter.scala 32:{25,25} 49:26]
    skip
    io_mem_req_bits_phys <= io_requestor_0_req_valid @[HellaCacheArbiter.scala 32:{25,25} 49:26]
    skip
    skip
    skip
    skip
    io_mem_s1_kill <= mux(_T, io_requestor_0_s1_kill, io_requestor_1_s1_kill) @[HellaCacheArbiter.scala 37:{24,24} 50:34]
    io_mem_s1_data_data <= mux(_T, UInt<64>("h0"), io_requestor_1_s1_data_data) @[HellaCacheArbiter.scala 38:{24,24} 50:34]
    skip
    skip
    skip
    s1_id <= mux(io_requestor_0_req_valid, UInt<1>("h0"), UInt<1>("h1")) @[HellaCacheArbiter.scala 34:{15,15} 49:26]
    s2_id <= s1_id @[HellaCacheArbiter.scala 20:20]

  module PTW :
    input clock : Clock
    input reset : UInt<1>
    output io_requestor_0_req_ready : UInt<1>
    input io_requestor_0_req_valid : UInt<1>
    input io_requestor_0_req_bits_bits_addr : UInt<27>
    output io_requestor_0_resp_valid : UInt<1>
    output io_requestor_0_resp_bits_ae : UInt<1>
    output io_requestor_0_resp_bits_pte_ppn : UInt<54>
    output io_requestor_0_resp_bits_pte_d : UInt<1>
    output io_requestor_0_resp_bits_pte_a : UInt<1>
    output io_requestor_0_resp_bits_pte_g : UInt<1>
    output io_requestor_0_resp_bits_pte_u : UInt<1>
    output io_requestor_0_resp_bits_pte_x : UInt<1>
    output io_requestor_0_resp_bits_pte_w : UInt<1>
    output io_requestor_0_resp_bits_pte_r : UInt<1>
    output io_requestor_0_resp_bits_pte_v : UInt<1>
    output io_requestor_0_resp_bits_level : UInt<2>
    output io_requestor_0_resp_bits_homogeneous : UInt<1>
    output io_requestor_0_ptbr_mode : UInt<4>
    output io_requestor_0_status_debug : UInt<1>
    output io_requestor_0_status_dprv : UInt<2>
    output io_requestor_0_status_mxr : UInt<1>
    output io_requestor_0_status_sum : UInt<1>
    output io_requestor_0_pmp_0_cfg_l : UInt<1>
    output io_requestor_0_pmp_0_cfg_a : UInt<2>
    output io_requestor_0_pmp_0_cfg_x : UInt<1>
    output io_requestor_0_pmp_0_cfg_w : UInt<1>
    output io_requestor_0_pmp_0_cfg_r : UInt<1>
    output io_requestor_0_pmp_0_addr : UInt<30>
    output io_requestor_0_pmp_0_mask : UInt<32>
    output io_requestor_0_pmp_1_cfg_l : UInt<1>
    output io_requestor_0_pmp_1_cfg_a : UInt<2>
    output io_requestor_0_pmp_1_cfg_x : UInt<1>
    output io_requestor_0_pmp_1_cfg_w : UInt<1>
    output io_requestor_0_pmp_1_cfg_r : UInt<1>
    output io_requestor_0_pmp_1_addr : UInt<30>
    output io_requestor_0_pmp_1_mask : UInt<32>
    output io_requestor_0_pmp_2_cfg_l : UInt<1>
    output io_requestor_0_pmp_2_cfg_a : UInt<2>
    output io_requestor_0_pmp_2_cfg_x : UInt<1>
    output io_requestor_0_pmp_2_cfg_w : UInt<1>
    output io_requestor_0_pmp_2_cfg_r : UInt<1>
    output io_requestor_0_pmp_2_addr : UInt<30>
    output io_requestor_0_pmp_2_mask : UInt<32>
    output io_requestor_0_pmp_3_cfg_l : UInt<1>
    output io_requestor_0_pmp_3_cfg_a : UInt<2>
    output io_requestor_0_pmp_3_cfg_x : UInt<1>
    output io_requestor_0_pmp_3_cfg_w : UInt<1>
    output io_requestor_0_pmp_3_cfg_r : UInt<1>
    output io_requestor_0_pmp_3_addr : UInt<30>
    output io_requestor_0_pmp_3_mask : UInt<32>
    output io_requestor_0_pmp_4_cfg_l : UInt<1>
    output io_requestor_0_pmp_4_cfg_a : UInt<2>
    output io_requestor_0_pmp_4_cfg_x : UInt<1>
    output io_requestor_0_pmp_4_cfg_w : UInt<1>
    output io_requestor_0_pmp_4_cfg_r : UInt<1>
    output io_requestor_0_pmp_4_addr : UInt<30>
    output io_requestor_0_pmp_4_mask : UInt<32>
    output io_requestor_0_pmp_5_cfg_l : UInt<1>
    output io_requestor_0_pmp_5_cfg_a : UInt<2>
    output io_requestor_0_pmp_5_cfg_x : UInt<1>
    output io_requestor_0_pmp_5_cfg_w : UInt<1>
    output io_requestor_0_pmp_5_cfg_r : UInt<1>
    output io_requestor_0_pmp_5_addr : UInt<30>
    output io_requestor_0_pmp_5_mask : UInt<32>
    output io_requestor_0_pmp_6_cfg_l : UInt<1>
    output io_requestor_0_pmp_6_cfg_a : UInt<2>
    output io_requestor_0_pmp_6_cfg_x : UInt<1>
    output io_requestor_0_pmp_6_cfg_w : UInt<1>
    output io_requestor_0_pmp_6_cfg_r : UInt<1>
    output io_requestor_0_pmp_6_addr : UInt<30>
    output io_requestor_0_pmp_6_mask : UInt<32>
    output io_requestor_0_pmp_7_cfg_l : UInt<1>
    output io_requestor_0_pmp_7_cfg_a : UInt<2>
    output io_requestor_0_pmp_7_cfg_x : UInt<1>
    output io_requestor_0_pmp_7_cfg_w : UInt<1>
    output io_requestor_0_pmp_7_cfg_r : UInt<1>
    output io_requestor_0_pmp_7_addr : UInt<30>
    output io_requestor_0_pmp_7_mask : UInt<32>
    output io_requestor_1_req_ready : UInt<1>
    input io_requestor_1_req_valid : UInt<1>
    input io_requestor_1_req_bits_valid : UInt<1>
    input io_requestor_1_req_bits_bits_addr : UInt<27>
    output io_requestor_1_resp_valid : UInt<1>
    output io_requestor_1_resp_bits_ae : UInt<1>
    output io_requestor_1_resp_bits_pte_ppn : UInt<54>
    output io_requestor_1_resp_bits_pte_d : UInt<1>
    output io_requestor_1_resp_bits_pte_a : UInt<1>
    output io_requestor_1_resp_bits_pte_g : UInt<1>
    output io_requestor_1_resp_bits_pte_u : UInt<1>
    output io_requestor_1_resp_bits_pte_x : UInt<1>
    output io_requestor_1_resp_bits_pte_w : UInt<1>
    output io_requestor_1_resp_bits_pte_r : UInt<1>
    output io_requestor_1_resp_bits_pte_v : UInt<1>
    output io_requestor_1_resp_bits_level : UInt<2>
    output io_requestor_1_resp_bits_homogeneous : UInt<1>
    output io_requestor_1_ptbr_mode : UInt<4>
    output io_requestor_1_status_debug : UInt<1>
    output io_requestor_1_status_prv : UInt<2>
    output io_requestor_1_pmp_0_cfg_l : UInt<1>
    output io_requestor_1_pmp_0_cfg_a : UInt<2>
    output io_requestor_1_pmp_0_cfg_x : UInt<1>
    output io_requestor_1_pmp_0_cfg_w : UInt<1>
    output io_requestor_1_pmp_0_cfg_r : UInt<1>
    output io_requestor_1_pmp_0_addr : UInt<30>
    output io_requestor_1_pmp_0_mask : UInt<32>
    output io_requestor_1_pmp_1_cfg_l : UInt<1>
    output io_requestor_1_pmp_1_cfg_a : UInt<2>
    output io_requestor_1_pmp_1_cfg_x : UInt<1>
    output io_requestor_1_pmp_1_cfg_w : UInt<1>
    output io_requestor_1_pmp_1_cfg_r : UInt<1>
    output io_requestor_1_pmp_1_addr : UInt<30>
    output io_requestor_1_pmp_1_mask : UInt<32>
    output io_requestor_1_pmp_2_cfg_l : UInt<1>
    output io_requestor_1_pmp_2_cfg_a : UInt<2>
    output io_requestor_1_pmp_2_cfg_x : UInt<1>
    output io_requestor_1_pmp_2_cfg_w : UInt<1>
    output io_requestor_1_pmp_2_cfg_r : UInt<1>
    output io_requestor_1_pmp_2_addr : UInt<30>
    output io_requestor_1_pmp_2_mask : UInt<32>
    output io_requestor_1_pmp_3_cfg_l : UInt<1>
    output io_requestor_1_pmp_3_cfg_a : UInt<2>
    output io_requestor_1_pmp_3_cfg_x : UInt<1>
    output io_requestor_1_pmp_3_cfg_w : UInt<1>
    output io_requestor_1_pmp_3_cfg_r : UInt<1>
    output io_requestor_1_pmp_3_addr : UInt<30>
    output io_requestor_1_pmp_3_mask : UInt<32>
    output io_requestor_1_pmp_4_cfg_l : UInt<1>
    output io_requestor_1_pmp_4_cfg_a : UInt<2>
    output io_requestor_1_pmp_4_cfg_x : UInt<1>
    output io_requestor_1_pmp_4_cfg_w : UInt<1>
    output io_requestor_1_pmp_4_cfg_r : UInt<1>
    output io_requestor_1_pmp_4_addr : UInt<30>
    output io_requestor_1_pmp_4_mask : UInt<32>
    output io_requestor_1_pmp_5_cfg_l : UInt<1>
    output io_requestor_1_pmp_5_cfg_a : UInt<2>
    output io_requestor_1_pmp_5_cfg_x : UInt<1>
    output io_requestor_1_pmp_5_cfg_w : UInt<1>
    output io_requestor_1_pmp_5_cfg_r : UInt<1>
    output io_requestor_1_pmp_5_addr : UInt<30>
    output io_requestor_1_pmp_5_mask : UInt<32>
    output io_requestor_1_pmp_6_cfg_l : UInt<1>
    output io_requestor_1_pmp_6_cfg_a : UInt<2>
    output io_requestor_1_pmp_6_cfg_x : UInt<1>
    output io_requestor_1_pmp_6_cfg_w : UInt<1>
    output io_requestor_1_pmp_6_cfg_r : UInt<1>
    output io_requestor_1_pmp_6_addr : UInt<30>
    output io_requestor_1_pmp_6_mask : UInt<32>
    output io_requestor_1_pmp_7_cfg_l : UInt<1>
    output io_requestor_1_pmp_7_cfg_a : UInt<2>
    output io_requestor_1_pmp_7_cfg_x : UInt<1>
    output io_requestor_1_pmp_7_cfg_w : UInt<1>
    output io_requestor_1_pmp_7_cfg_r : UInt<1>
    output io_requestor_1_pmp_7_addr : UInt<30>
    output io_requestor_1_pmp_7_mask : UInt<32>
    output io_requestor_1_customCSRs_csrs_0_value : UInt<64>
    input io_mem_req_ready : UInt<1>
    output io_mem_req_valid : UInt<1>
    output io_mem_req_bits_addr : UInt<40>
    output io_mem_s1_kill : UInt<1>
    input io_mem_s2_nack : UInt<1>
    input io_mem_resp_valid : UInt<1>
    input io_mem_resp_bits_data : UInt<64>
    input io_mem_s2_xcpt_ae_ld : UInt<1>
    input io_dpath_ptbr_mode : UInt<4>
    input io_dpath_ptbr_ppn : UInt<44>
    input io_dpath_sfence_valid : UInt<1>
    input io_dpath_sfence_bits_rs1 : UInt<1>
    input io_dpath_sfence_bits_rs2 : UInt<1>
    input io_dpath_sfence_bits_addr : UInt<39>
    input io_dpath_status_debug : UInt<1>
    input io_dpath_status_dprv : UInt<2>
    input io_dpath_status_prv : UInt<2>
    input io_dpath_status_mxr : UInt<1>
    input io_dpath_status_sum : UInt<1>
    input io_dpath_pmp_0_cfg_l : UInt<1>
    input io_dpath_pmp_0_cfg_a : UInt<2>
    input io_dpath_pmp_0_cfg_x : UInt<1>
    input io_dpath_pmp_0_cfg_w : UInt<1>
    input io_dpath_pmp_0_cfg_r : UInt<1>
    input io_dpath_pmp_0_addr : UInt<30>
    input io_dpath_pmp_0_mask : UInt<32>
    input io_dpath_pmp_1_cfg_l : UInt<1>
    input io_dpath_pmp_1_cfg_a : UInt<2>
    input io_dpath_pmp_1_cfg_x : UInt<1>
    input io_dpath_pmp_1_cfg_w : UInt<1>
    input io_dpath_pmp_1_cfg_r : UInt<1>
    input io_dpath_pmp_1_addr : UInt<30>
    input io_dpath_pmp_1_mask : UInt<32>
    input io_dpath_pmp_2_cfg_l : UInt<1>
    input io_dpath_pmp_2_cfg_a : UInt<2>
    input io_dpath_pmp_2_cfg_x : UInt<1>
    input io_dpath_pmp_2_cfg_w : UInt<1>
    input io_dpath_pmp_2_cfg_r : UInt<1>
    input io_dpath_pmp_2_addr : UInt<30>
    input io_dpath_pmp_2_mask : UInt<32>
    input io_dpath_pmp_3_cfg_l : UInt<1>
    input io_dpath_pmp_3_cfg_a : UInt<2>
    input io_dpath_pmp_3_cfg_x : UInt<1>
    input io_dpath_pmp_3_cfg_w : UInt<1>
    input io_dpath_pmp_3_cfg_r : UInt<1>
    input io_dpath_pmp_3_addr : UInt<30>
    input io_dpath_pmp_3_mask : UInt<32>
    input io_dpath_pmp_4_cfg_l : UInt<1>
    input io_dpath_pmp_4_cfg_a : UInt<2>
    input io_dpath_pmp_4_cfg_x : UInt<1>
    input io_dpath_pmp_4_cfg_w : UInt<1>
    input io_dpath_pmp_4_cfg_r : UInt<1>
    input io_dpath_pmp_4_addr : UInt<30>
    input io_dpath_pmp_4_mask : UInt<32>
    input io_dpath_pmp_5_cfg_l : UInt<1>
    input io_dpath_pmp_5_cfg_a : UInt<2>
    input io_dpath_pmp_5_cfg_x : UInt<1>
    input io_dpath_pmp_5_cfg_w : UInt<1>
    input io_dpath_pmp_5_cfg_r : UInt<1>
    input io_dpath_pmp_5_addr : UInt<30>
    input io_dpath_pmp_5_mask : UInt<32>
    input io_dpath_pmp_6_cfg_l : UInt<1>
    input io_dpath_pmp_6_cfg_a : UInt<2>
    input io_dpath_pmp_6_cfg_x : UInt<1>
    input io_dpath_pmp_6_cfg_w : UInt<1>
    input io_dpath_pmp_6_cfg_r : UInt<1>
    input io_dpath_pmp_6_addr : UInt<30>
    input io_dpath_pmp_6_mask : UInt<32>
    input io_dpath_pmp_7_cfg_l : UInt<1>
    input io_dpath_pmp_7_cfg_a : UInt<2>
    input io_dpath_pmp_7_cfg_x : UInt<1>
    input io_dpath_pmp_7_cfg_w : UInt<1>
    input io_dpath_pmp_7_cfg_r : UInt<1>
    input io_dpath_pmp_7_addr : UInt<30>
    input io_dpath_pmp_7_mask : UInt<32>
    output io_dpath_perf_l2hit : UInt<1>
    output io_dpath_perf_pte_miss : UInt<1>
    output io_dpath_perf_pte_hit : UInt<1>
    input io_dpath_customCSRs_csrs_0_value : UInt<64>

    inst arb of Arbiter @[PTW.scala 112:19]
    mem l2_tlb_ram_0 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<44>
      depth => 1024
      read-latency => 1
      write-latency => 1
      reader => s1_rdata
      writer => MPORT
      read-under-write => undefined
    inst state_barrier of OptimizationBarrier_117 @[package.scala 258:25]
    inst r_pte_barrier of OptimizationBarrier_118 @[package.scala 258:25]
    reg state : UInt<3>, clock with :
      reset => (UInt<1>("h0"), state) @[PTW.scala 109:18]
    node _arb_io_out_ready_T = eq(state, UInt<3>("h0")) @[PTW.scala 114:30]
    reg l2_refill : UInt<1>, clock with :
      reset => (UInt<1>("h0"), l2_refill) @[PTW.scala 201:26]
    skip
    node _arb_io_out_ready_T_1 = not(l2_refill) @[PTW.scala 114:46]
    skip
    reg resp_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), resp_valid_0) @[PTW.scala 116:23]
    reg resp_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), resp_valid_1) @[PTW.scala 116:23]
    node _clock_en_T = neq(state, UInt<3>("h0")) @[PTW.scala 118:24]
    skip
    skip
    skip
    skip
    skip
    skip
    reg invalidated : UInt<1>, clock with :
      reset => (UInt<1>("h0"), invalidated) @[PTW.scala 125:24]
    reg count : UInt<2>, clock with :
      reset => (UInt<1>("h0"), count) @[PTW.scala 126:18]
    reg resp_ae : UInt<1>, clock with :
      reset => (UInt<1>("h0"), resp_ae) @[PTW.scala 127:24]
    skip
    reg r_req_addr : UInt<27>, clock with :
      reset => (UInt<1>("h0"), r_req_addr) @[PTW.scala 130:18]
    reg r_req_dest : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_req_dest) @[PTW.scala 131:23]
    reg r_pte_ppn : UInt<54>, clock with :
      reset => (UInt<1>("h0"), r_pte_ppn) @[PTW.scala 132:18]
    skip
    reg r_pte_d : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_pte_d) @[PTW.scala 132:18]
    reg r_pte_a : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_pte_a) @[PTW.scala 132:18]
    reg r_pte_g : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_pte_g) @[PTW.scala 132:18]
    reg r_pte_u : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_pte_u) @[PTW.scala 132:18]
    reg r_pte_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_pte_x) @[PTW.scala 132:18]
    reg r_pte_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_pte_w) @[PTW.scala 132:18]
    reg r_pte_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_pte_r) @[PTW.scala 132:18]
    reg r_pte_v : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_pte_v) @[PTW.scala 132:18]
    reg mem_resp_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_resp_valid) @[PTW.scala 134:31]
    reg mem_resp_data : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mem_resp_data) @[PTW.scala 135:30]
    skip
    node tmp_v = bits(mem_resp_data, 0, 0) @[PTW.scala 146:33]
    node tmp_r = bits(mem_resp_data, 1, 1) @[PTW.scala 146:33]
    node tmp_w = bits(mem_resp_data, 2, 2) @[PTW.scala 146:33]
    node tmp_x = bits(mem_resp_data, 3, 3) @[PTW.scala 146:33]
    node tmp_u = bits(mem_resp_data, 4, 4) @[PTW.scala 146:33]
    node tmp_g = bits(mem_resp_data, 5, 5) @[PTW.scala 146:33]
    node tmp_a = bits(mem_resp_data, 6, 6) @[PTW.scala 146:33]
    node tmp_d = bits(mem_resp_data, 7, 7) @[PTW.scala 146:33]
    skip
    node tmp_ppn = bits(mem_resp_data, 63, 10) @[PTW.scala 146:33]
    skip
    node _T_10 = bits(tmp_ppn, 19, 0) @[PTW.scala 148:23]
    skip
    skip
    node _T_11 = or(tmp_r, tmp_w) @[PTW.scala 149:17]
    skip
    node _T_12 = or(_T_11, tmp_x) @[PTW.scala 149:26]
    node _T_13 = leq(count, UInt<2>("h0")) @[PTW.scala 152:21]
    node _T_14 = bits(tmp_ppn, 17, 9) @[PTW.scala 152:36]
    node _T_15 = neq(_T_14, UInt<9>("h0")) @[PTW.scala 152:95]
    node _T_16 = and(_T_13, _T_15) @[PTW.scala 152:26]
    skip
    node _GEN_0 = mux(_T_16, UInt<1>("h0"), tmp_v) @[PTW.scala 152:{102,110}]
    node _T_17 = leq(count, UInt<2>("h1")) @[PTW.scala 152:21]
    node _T_18 = bits(tmp_ppn, 8, 0) @[PTW.scala 152:36]
    node _T_19 = neq(_T_18, UInt<9>("h0")) @[PTW.scala 152:95]
    node _T_20 = and(_T_17, _T_19) @[PTW.scala 152:26]
    node _GEN_1 = mux(_T_20, UInt<1>("h0"), _GEN_0) @[PTW.scala 152:{102,110}]
    node res_v = mux(_T_12, _GEN_1, tmp_v) @[PTW.scala 149:36]
    node _T_21 = shr(tmp_ppn, 20) @[PTW.scala 154:20]
    node invalid_paddr = neq(_T_21, UInt<34>("h0")) @[PTW.scala 154:32]
    skip
    node _traverse_T = not(tmp_r) @[PTW.scala 72:36]
    skip
    node _traverse_T_1 = and(res_v, _traverse_T) @[PTW.scala 72:33]
    skip
    node _traverse_T_2 = not(tmp_w) @[PTW.scala 72:42]
    node _traverse_T_3 = and(_traverse_T_1, _traverse_T_2) @[PTW.scala 72:39]
    skip
    node _traverse_T_4 = not(tmp_x) @[PTW.scala 72:48]
    node _traverse_T_5 = and(_traverse_T_3, _traverse_T_4) @[PTW.scala 72:45]
    node _traverse_T_6 = not(invalid_paddr) @[PTW.scala 156:33]
    node _traverse_T_7 = and(_traverse_T_5, _traverse_T_6) @[PTW.scala 156:30]
    node _traverse_T_8 = lt(count, UInt<2>("h2")) @[PTW.scala 156:57]
    node traverse = and(_traverse_T_7, _traverse_T_8) @[PTW.scala 156:48]
    node vpn_idxs_0 = shr(r_req_addr, 18) @[PTW.scala 158:60]
    skip
    node _pte_addr_vpn_idxs_T_1 = shr(r_req_addr, 9) @[PTW.scala 158:60]
    node vpn_idxs_1 = bits(_pte_addr_vpn_idxs_T_1, 8, 0) @[PTW.scala 158:90]
    skip
    node vpn_idxs_2 = bits(r_req_addr, 8, 0) @[PTW.scala 158:90]
    node _pte_addr_vpn_idx_T = eq(count, UInt<2>("h1")) @[package.scala 32:86]
    node _pte_addr_vpn_idx_T_1 = mux(_pte_addr_vpn_idx_T, vpn_idxs_1, vpn_idxs_0) @[package.scala 32:76]
    node _pte_addr_vpn_idx_T_2 = eq(count, UInt<2>("h2")) @[package.scala 32:86]
    node _pte_addr_vpn_idx_T_3 = mux(_pte_addr_vpn_idx_T_2, vpn_idxs_2, _pte_addr_vpn_idx_T_1) @[package.scala 32:76]
    node _pte_addr_vpn_idx_T_4 = eq(count, UInt<2>("h3")) @[package.scala 32:86]
    node vpn_idx = mux(_pte_addr_vpn_idx_T_4, vpn_idxs_2, _pte_addr_vpn_idx_T_3) @[package.scala 32:76]
    node _pte_addr_T = cat(r_pte_ppn, vpn_idx) @[Cat.scala 30:58]
    node pte_addr = shl(_pte_addr_T, 3) @[PTW.scala 160:29]
    node fragmented_superpage_ppn_choices_hi = shr(r_pte_ppn, 18) @[PTW.scala 163:69]
    node fragmented_superpage_ppn_choices_lo = bits(r_req_addr, 17, 0) @[PTW.scala 163:99]
    node choices_0 = cat(fragmented_superpage_ppn_choices_hi, fragmented_superpage_ppn_choices_lo) @[Cat.scala 30:58]
    node fragmented_superpage_ppn_choices_hi_1 = shr(r_pte_ppn, 9) @[PTW.scala 163:69]
    skip
    node choices_1 = cat(fragmented_superpage_ppn_choices_hi_1, vpn_idxs_2) @[Cat.scala 30:58]
    skip
    node fragmented_superpage_ppn_truncIdx = bits(count, 0, 0) @[package.scala 31:49]
    skip
    node fragmented_superpage_ppn = mux(fragmented_superpage_ppn_truncIdx, choices_1, choices_0) @[package.scala 32:76]
    node _T_22 = and(arb.io_out_ready, arb.io_out_valid) @[Decoupled.scala 40:37]
    skip
    skip
    reg state_reg : UInt<7>, clock with :
      reset => (UInt<1>("h0"), state_reg) @[Replacement.scala 168:70]
    reg valid : UInt<8>, clock with :
      reset => (UInt<1>("h0"), valid) @[PTW.scala 175:24]
    reg tags_0 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), tags_0) @[PTW.scala 176:19]
    reg tags_1 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), tags_1) @[PTW.scala 176:19]
    reg tags_2 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), tags_2) @[PTW.scala 176:19]
    reg tags_3 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), tags_3) @[PTW.scala 176:19]
    reg tags_4 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), tags_4) @[PTW.scala 176:19]
    reg tags_5 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), tags_5) @[PTW.scala 176:19]
    reg tags_6 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), tags_6) @[PTW.scala 176:19]
    reg tags_7 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), tags_7) @[PTW.scala 176:19]
    reg data_0 : UInt<20>, clock with :
      reset => (UInt<1>("h0"), data_0) @[PTW.scala 177:19]
    reg data_1 : UInt<20>, clock with :
      reset => (UInt<1>("h0"), data_1) @[PTW.scala 177:19]
    reg data_2 : UInt<20>, clock with :
      reset => (UInt<1>("h0"), data_2) @[PTW.scala 177:19]
    reg data_3 : UInt<20>, clock with :
      reset => (UInt<1>("h0"), data_3) @[PTW.scala 177:19]
    reg data_4 : UInt<20>, clock with :
      reset => (UInt<1>("h0"), data_4) @[PTW.scala 177:19]
    reg data_5 : UInt<20>, clock with :
      reset => (UInt<1>("h0"), data_5) @[PTW.scala 177:19]
    reg data_6 : UInt<20>, clock with :
      reset => (UInt<1>("h0"), data_6) @[PTW.scala 177:19]
    reg data_7 : UInt<20>, clock with :
      reset => (UInt<1>("h0"), data_7) @[PTW.scala 177:19]
    node _GEN_60 = pad(tags_0, 66) @[PTW.scala 179:27]
    node lo_lo_lo = eq(_GEN_60, pte_addr) @[PTW.scala 179:27]
    node _GEN_61 = pad(tags_1, 66) @[PTW.scala 179:27]
    node lo_lo_hi = eq(_GEN_61, pte_addr) @[PTW.scala 179:27]
    node _GEN_62 = pad(tags_2, 66) @[PTW.scala 179:27]
    node lo_hi_lo = eq(_GEN_62, pte_addr) @[PTW.scala 179:27]
    node _GEN_63 = pad(tags_3, 66) @[PTW.scala 179:27]
    node lo_hi_hi = eq(_GEN_63, pte_addr) @[PTW.scala 179:27]
    node _GEN_64 = pad(tags_4, 66) @[PTW.scala 179:27]
    node hi_lo_lo = eq(_GEN_64, pte_addr) @[PTW.scala 179:27]
    node _GEN_65 = pad(tags_5, 66) @[PTW.scala 179:27]
    node hi_lo_hi = eq(_GEN_65, pte_addr) @[PTW.scala 179:27]
    node _GEN_66 = pad(tags_6, 66) @[PTW.scala 179:27]
    node hi_hi_lo = eq(_GEN_66, pte_addr) @[PTW.scala 179:27]
    node _GEN_67 = pad(tags_7, 66) @[PTW.scala 179:27]
    node hi_hi_hi = eq(_GEN_67, pte_addr) @[PTW.scala 179:27]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[Cat.scala 30:58]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[Cat.scala 30:58]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_23 = cat(hi, lo) @[Cat.scala 30:58]
    node hits = and(_T_23, valid) @[PTW.scala 179:48]
    node hit = orr(hits) @[PTW.scala 180:20]
    node _T_24 = and(mem_resp_valid, traverse) @[PTW.scala 181:26]
    node _T_25 = not(hit) @[PTW.scala 181:41]
    node _T_26 = and(_T_24, _T_25) @[PTW.scala 181:38]
    node _T_27 = not(invalidated) @[PTW.scala 181:49]
    node _T_28 = and(_T_26, _T_27) @[PTW.scala 181:46]
    node _T_29 = andr(valid) @[PTW.scala 182:25]
    node hi_1 = bits(state_reg, 6, 6) @[Replacement.scala 243:38]
    node left_subtree_state = bits(state_reg, 5, 3) @[package.scala 154:13]
    node right_subtree_state = bits(state_reg, 2, 0) @[Replacement.scala 245:38]
    node hi_2 = bits(left_subtree_state, 2, 2) @[Replacement.scala 243:38]
    node left_subtree_state_1 = bits(left_subtree_state, 1, 1) @[package.scala 154:13]
    node right_subtree_state_1 = bits(left_subtree_state, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node lo_1 = mux(hi_2, left_subtree_state_1, right_subtree_state_1) @[Replacement.scala 250:16]
    node _T_32 = cat(hi_2, lo_1) @[Cat.scala 30:58]
    node hi_3 = bits(right_subtree_state, 2, 2) @[Replacement.scala 243:38]
    node left_subtree_state_2 = bits(right_subtree_state, 1, 1) @[package.scala 154:13]
    node right_subtree_state_2 = bits(right_subtree_state, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node lo_2 = mux(hi_3, left_subtree_state_2, right_subtree_state_2) @[Replacement.scala 250:16]
    node _T_35 = cat(hi_3, lo_2) @[Cat.scala 30:58]
    node lo_3 = mux(hi_1, _T_32, _T_35) @[Replacement.scala 250:16]
    node _T_36 = cat(hi_1, lo_3) @[Cat.scala 30:58]
    node _T_37 = not(valid) @[PTW.scala 182:57]
    node _T_38 = bits(_T_37, 0, 0) @[OneHot.scala 47:40]
    node _T_39 = bits(_T_37, 1, 1) @[OneHot.scala 47:40]
    node _T_40 = bits(_T_37, 2, 2) @[OneHot.scala 47:40]
    node _T_41 = bits(_T_37, 3, 3) @[OneHot.scala 47:40]
    node _T_42 = bits(_T_37, 4, 4) @[OneHot.scala 47:40]
    node _T_43 = bits(_T_37, 5, 5) @[OneHot.scala 47:40]
    node _T_44 = bits(_T_37, 6, 6) @[OneHot.scala 47:40]
    skip
    node _T_46 = mux(_T_44, UInt<3>("h6"), UInt<3>("h7")) @[Mux.scala 47:69]
    node _T_47 = mux(_T_43, UInt<3>("h5"), _T_46) @[Mux.scala 47:69]
    node _T_48 = mux(_T_42, UInt<3>("h4"), _T_47) @[Mux.scala 47:69]
    node _T_49 = mux(_T_41, UInt<3>("h3"), _T_48) @[Mux.scala 47:69]
    node _T_50 = mux(_T_40, UInt<3>("h2"), _T_49) @[Mux.scala 47:69]
    node _T_51 = mux(_T_39, UInt<3>("h1"), _T_50) @[Mux.scala 47:69]
    node _T_52 = mux(_T_38, UInt<3>("h0"), _T_51) @[Mux.scala 47:69]
    node r = mux(_T_29, _T_36, _T_52) @[PTW.scala 182:18]
    node _T_53 = dshl(UInt<1>("h1"), r) @[OneHot.scala 58:35]
    node _T_54 = or(valid, _T_53) @[PTW.scala 183:22]
    node _tags_r = bits(pte_addr, 31, 0) @[PTW.scala 184:{15,15}]
    node _GEN_5 = mux(eq(UInt<3>("h0"), r), _tags_r, tags_0) @[PTW.scala 184:{15,15} 176:19]
    node _GEN_6 = mux(eq(UInt<3>("h1"), r), _tags_r, tags_1) @[PTW.scala 184:{15,15} 176:19]
    node _GEN_7 = mux(eq(UInt<3>("h2"), r), _tags_r, tags_2) @[PTW.scala 184:{15,15} 176:19]
    node _GEN_8 = mux(eq(UInt<3>("h3"), r), _tags_r, tags_3) @[PTW.scala 184:{15,15} 176:19]
    node _GEN_9 = mux(eq(UInt<3>("h4"), r), _tags_r, tags_4) @[PTW.scala 184:{15,15} 176:19]
    node _GEN_10 = mux(eq(UInt<3>("h5"), r), _tags_r, tags_5) @[PTW.scala 184:{15,15} 176:19]
    node _GEN_11 = mux(eq(UInt<3>("h6"), r), _tags_r, tags_6) @[PTW.scala 184:{15,15} 176:19]
    node _GEN_12 = mux(eq(UInt<3>("h7"), r), _tags_r, tags_7) @[PTW.scala 184:{15,15} 176:19]
    node res_ppn = pad(_T_10, 54)
    node _data_r = bits(res_ppn, 19, 0) @[PTW.scala 185:{15,15}]
    node _GEN_13 = mux(eq(UInt<3>("h0"), r), _data_r, data_0) @[PTW.scala 185:{15,15} 177:19]
    node _GEN_14 = mux(eq(UInt<3>("h1"), r), _data_r, data_1) @[PTW.scala 185:{15,15} 177:19]
    node _GEN_15 = mux(eq(UInt<3>("h2"), r), _data_r, data_2) @[PTW.scala 185:{15,15} 177:19]
    node _GEN_16 = mux(eq(UInt<3>("h3"), r), _data_r, data_3) @[PTW.scala 185:{15,15} 177:19]
    node _GEN_17 = mux(eq(UInt<3>("h4"), r), _data_r, data_4) @[PTW.scala 185:{15,15} 177:19]
    node _GEN_18 = mux(eq(UInt<3>("h5"), r), _data_r, data_5) @[PTW.scala 185:{15,15} 177:19]
    node _GEN_19 = mux(eq(UInt<3>("h6"), r), _data_r, data_6) @[PTW.scala 185:{15,15} 177:19]
    node _GEN_20 = mux(eq(UInt<3>("h7"), r), _data_r, data_7) @[PTW.scala 185:{15,15} 177:19]
    node _GEN_21 = mux(_T_28, _T_54, valid) @[PTW.scala 181:63 183:13 175:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_55 = eq(state, UInt<3>("h1")) @[PTW.scala 187:24]
    node _T_56 = and(hit, _T_55) @[PTW.scala 187:15]
    node hi_4 = bits(hits, 7, 4) @[OneHot.scala 30:18]
    node lo_4 = bits(hits, 3, 0) @[OneHot.scala 31:18]
    node hi_5 = orr(hi_4) @[OneHot.scala 32:14]
    node _T_57 = or(hi_4, lo_4) @[OneHot.scala 32:28]
    node hi_6 = bits(_T_57, 3, 2) @[OneHot.scala 30:18]
    node lo_5 = bits(_T_57, 1, 0) @[OneHot.scala 31:18]
    node hi_7 = orr(hi_6) @[OneHot.scala 32:14]
    node _T_58 = or(hi_6, lo_5) @[OneHot.scala 32:28]
    node lo_6 = bits(_T_58, 1, 1) @[CircuitMath.scala 30:8]
    node lo_7 = cat(hi_7, lo_6) @[Cat.scala 30:58]
    node state_reg_touch_way_sized = cat(hi_5, lo_7) @[Cat.scala 30:58]
    skip
    node _state_reg_set_left_older_T = bits(state_reg_touch_way_sized, 2, 2) @[Replacement.scala 196:43]
    node state_reg_hi_hi = not(_state_reg_set_left_older_T) @[Replacement.scala 196:33]
    skip
    skip
    node _state_reg_T = bits(state_reg_touch_way_sized, 1, 0) @[package.scala 154:13]
    node _state_reg_set_left_older_T_1 = bits(_state_reg_T, 1, 1) @[Replacement.scala 196:43]
    node state_reg_hi_hi_1 = not(_state_reg_set_left_older_T_1) @[Replacement.scala 196:33]
    skip
    skip
    node _state_reg_T_1 = bits(_state_reg_T, 0, 0) @[package.scala 154:13]
    skip
    node _state_reg_T_3 = not(_state_reg_T_1) @[Replacement.scala 218:7]
    node state_reg_hi_lo = mux(state_reg_hi_hi_1, left_subtree_state_1, _state_reg_T_3) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo = mux(state_reg_hi_hi_1, _state_reg_T_3, right_subtree_state_1) @[Replacement.scala 206:16]
    node state_reg_hi = cat(state_reg_hi_hi_1, state_reg_hi_lo) @[Cat.scala 30:58]
    node _state_reg_T_7 = cat(state_reg_hi, state_reg_lo) @[Cat.scala 30:58]
    node state_reg_hi_lo_1 = mux(state_reg_hi_hi, left_subtree_state, _state_reg_T_7) @[Replacement.scala 203:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node state_reg_hi_lo_2 = mux(state_reg_hi_hi_1, left_subtree_state_2, _state_reg_T_3) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo_1 = mux(state_reg_hi_hi_1, _state_reg_T_3, right_subtree_state_2) @[Replacement.scala 206:16]
    node state_reg_hi_1 = cat(state_reg_hi_hi_1, state_reg_hi_lo_2) @[Cat.scala 30:58]
    node _state_reg_T_15 = cat(state_reg_hi_1, state_reg_lo_1) @[Cat.scala 30:58]
    node state_reg_lo_2 = mux(state_reg_hi_hi, _state_reg_T_15, right_subtree_state) @[Replacement.scala 206:16]
    node state_reg_hi_2 = cat(state_reg_hi_hi, state_reg_hi_lo_1) @[Cat.scala 30:58]
    node _state_reg_T_16 = cat(state_reg_hi_2, state_reg_lo_2) @[Cat.scala 30:58]
    node _GEN_38 = mux(_T_56, _state_reg_T_16, state_reg) @[PTW.scala 187:35 Replacement.scala 172:15 168:70]
    node _T_60 = not(io_dpath_sfence_bits_rs1) @[PTW.scala 188:36]
    node _T_61 = and(io_dpath_sfence_valid, _T_60) @[PTW.scala 188:33]
    node _GEN_39 = mux(_T_61, UInt<8>("h0"), _GEN_21) @[PTW.scala 188:{63,71}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node pte_cache_hit = and(hit, _traverse_T_8) @[PTW.scala 193:10]
    node _T_71 = bits(hits, 0, 0) @[Mux.scala 29:36]
    node _T_72 = bits(hits, 1, 1) @[Mux.scala 29:36]
    node _T_73 = bits(hits, 2, 2) @[Mux.scala 29:36]
    node _T_74 = bits(hits, 3, 3) @[Mux.scala 29:36]
    node _T_75 = bits(hits, 4, 4) @[Mux.scala 29:36]
    node _T_76 = bits(hits, 5, 5) @[Mux.scala 29:36]
    node _T_77 = bits(hits, 6, 6) @[Mux.scala 29:36]
    node _T_78 = bits(hits, 7, 7) @[Mux.scala 29:36]
    node _T_79 = mux(_T_71, data_0, UInt<20>("h0")) @[Mux.scala 27:72]
    node _T_80 = mux(_T_72, data_1, UInt<20>("h0")) @[Mux.scala 27:72]
    node _T_81 = mux(_T_73, data_2, UInt<20>("h0")) @[Mux.scala 27:72]
    node _T_82 = mux(_T_74, data_3, UInt<20>("h0")) @[Mux.scala 27:72]
    node _T_83 = mux(_T_75, data_4, UInt<20>("h0")) @[Mux.scala 27:72]
    node _T_84 = mux(_T_76, data_5, UInt<20>("h0")) @[Mux.scala 27:72]
    node _T_85 = mux(_T_77, data_6, UInt<20>("h0")) @[Mux.scala 27:72]
    node _T_86 = mux(_T_78, data_7, UInt<20>("h0")) @[Mux.scala 27:72]
    node _T_87 = or(_T_79, _T_80) @[Mux.scala 27:72]
    node _T_88 = or(_T_87, _T_81) @[Mux.scala 27:72]
    node _T_89 = or(_T_88, _T_82) @[Mux.scala 27:72]
    node _T_90 = or(_T_89, _T_83) @[Mux.scala 27:72]
    node _T_91 = or(_T_90, _T_84) @[Mux.scala 27:72]
    node _T_92 = or(_T_91, _T_85) @[Mux.scala 27:72]
    node pte_cache_data = or(_T_92, _T_86) @[Mux.scala 27:72]
    reg pte_hit : UInt<1>, clock with :
      reset => (UInt<1>("h0"), pte_hit) @[PTW.scala 195:24]
    skip
    node _io_dpath_perf_pte_hit_T_1 = and(pte_hit, _T_55) @[PTW.scala 197:36]
    node _io_dpath_perf_pte_hit_T_2 = not(io_dpath_perf_l2hit) @[PTW.scala 197:60]
    skip
    node _T_94 = or(io_dpath_perf_pte_miss, io_dpath_perf_pte_hit) @[PTW.scala 198:59]
    node _T_95 = and(io_dpath_perf_l2hit, _T_94) @[PTW.scala 198:32]
    node _T_96 = not(_T_95) @[PTW.scala 198:10]
    skip
    node _T_98 = or(_T_96, reset) @[PTW.scala 198:9]
    node _T_99 = not(_T_98) @[PTW.scala 198:9]
    reg g_0 : UInt<1024>, clock with :
      reset => (UInt<1>("h0"), g_0) @[PTW.scala 223:16]
    reg valid_1_0 : UInt<1024>, clock with :
      reset => (UInt<1>("h0"), valid_1_0) @[PTW.scala 224:24]
    node r_tag = bits(r_req_addr, 26, 10) @[package.scala 154:13]
    node r_idx = bits(r_req_addr, 9, 0) @[package.scala 154:13]
    node _T_100 = dshr(valid_1_0, r_idx) @[PTW.scala 226:34]
    node r_valid_vec = bits(_T_100, 0, 0) @[PTW.scala 226:34]
    skip
    node _T_102 = and(l2_refill, _T_27) @[PTW.scala 227:21]
    skip
    skip
    node lo_lo_1 = cat(r_pte_w, r_pte_r) @[PTW.scala 233:78]
    skip
    skip
    node lo_hi_1 = cat(r_pte_u, r_pte_x) @[PTW.scala 233:78]
    node lo_8 = cat(lo_hi_1, lo_lo_1) @[PTW.scala 233:78]
    skip
    skip
    node hi_lo_1 = cat(r_pte_d, r_pte_a) @[PTW.scala 233:78]
    skip
    node entry_ppn = bits(r_pte_ppn, 19, 0) @[PTW.scala 228:23 231:13]
    node hi_hi_1 = cat(r_tag, entry_ppn) @[PTW.scala 233:78]
    node hi_8 = cat(hi_hi_1, hi_lo_1) @[PTW.scala 233:78]
    node lo_9 = cat(hi_8, lo_8) @[PTW.scala 233:78]
    node hi_9 = xorr(lo_9) @[ECC.scala 71:59]
    skip
    skip
    skip
    skip
    skip
    node mask = dshl(UInt<1>("h1"), r_idx) @[OneHot.scala 58:35]
    node _T_105 = or(valid_1_0, mask) @[PTW.scala 238:36]
    node _T_106 = or(g_0, mask) @[PTW.scala 239:41]
    node _T_107 = not(mask) @[PTW.scala 239:58]
    node _T_108 = and(g_0, _T_107) @[PTW.scala 239:56]
    node _T_109 = mux(r_pte_g, _T_106, _T_108) @[PTW.scala 239:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_49 = mux(_T_102, _T_105, valid_1_0) @[PTW.scala 224:24 227:38]
    skip
    node _T_110 = bits(io_dpath_sfence_bits_addr, 21, 12) @[PTW.scala 246:89]
    node _T_111 = dshl(UInt<1>("h1"), _T_110) @[OneHot.scala 58:35]
    node _T_112 = not(_T_111) @[PTW.scala 246:54]
    node _T_113 = and(valid_1_0, _T_112) @[PTW.scala 246:52]
    node _T_114 = and(valid_1_0, g_0) @[PTW.scala 247:52]
    node _T_115 = mux(io_dpath_sfence_bits_rs2, _T_114, UInt<1024>("h0")) @[PTW.scala 247:14]
    node _T_116 = mux(io_dpath_sfence_bits_rs1, _T_113, _T_115) @[PTW.scala 246:14]
    node _GEN_51 = mux(io_dpath_sfence_valid, _T_116, _GEN_49) @[PTW.scala 243:34 245:20]
    skip
    skip
    node s0_valid = and(_arb_io_out_ready_T_1, _T_22) @[PTW.scala 251:31]
    skip
    reg s1_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s1_valid) @[PTW.scala 252:27]
    reg s2_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_valid) @[PTW.scala 253:27]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg r_1 : UInt<44>, clock with :
      reset => (UInt<1>("h0"), r_1) @[Reg.scala 15:16]
    skip
    node uncorrected = bits(r_1, 42, 0) @[ECC.scala 74:24]
    node uncorrectable = xorr(r_1) @[ECC.scala 77:27]
    reg s2_valid_vec : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_valid_vec) @[Reg.scala 15:16]
    skip
    node _T_123 = dshr(g_0, r_idx) @[PTW.scala 257:41]
    node _T_124 = bits(_T_123, 0, 0) @[PTW.scala 257:41]
    reg s2_g_vec_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_g_vec_0) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    node s2_error = and(s2_valid_vec, uncorrectable) @[PTW.scala 258:81]
    node _T_127 = and(s2_valid, s2_error) @[PTW.scala 259:20]
    node _GEN_59 = mux(_T_127, UInt<1024>("h0"), _GEN_51) @[PTW.scala 259:{33,53}]
    skip
    node s2_entry_vec_0_r = bits(uncorrected, 0, 0) @[PTW.scala 261:59]
    node s2_entry_vec_0_w = bits(uncorrected, 1, 1) @[PTW.scala 261:59]
    node s2_entry_vec_0_x = bits(uncorrected, 2, 2) @[PTW.scala 261:59]
    node s2_entry_vec_0_u = bits(uncorrected, 3, 3) @[PTW.scala 261:59]
    node s2_entry_vec_0_a = bits(uncorrected, 4, 4) @[PTW.scala 261:59]
    node s2_entry_vec_0_d = bits(uncorrected, 5, 5) @[PTW.scala 261:59]
    node s2_entry_vec_0_ppn = bits(uncorrected, 25, 6) @[PTW.scala 261:59]
    node s2_entry_vec_0_tag = bits(uncorrected, 42, 26) @[PTW.scala 261:59]
    skip
    skip
    node _T_137 = eq(r_tag, s2_entry_vec_0_tag) @[PTW.scala 262:93]
    node s2_hit_vec_0 = and(s2_valid_vec, _T_137) @[PTW.scala 262:83]
    node s2_hit = and(s2_valid, s2_hit_vec_0) @[PTW.scala 263:27]
    skip
    skip
    skip
    node _T_139 = or(s2_hit_vec_0, s2_error) @[PTW.scala 268:45]
    skip
    node _T_141 = or(_T_139, reset) @[PTW.scala 268:13]
    node _T_142 = not(_T_141) @[PTW.scala 268:13]
    skip
    skip
    node _invalidated_T_1 = and(invalidated, _clock_en_T) @[PTW.scala 285:56]
    skip
    skip
    node _io_mem_req_valid_T_1 = eq(state, UInt<3>("h3")) @[PTW.scala 287:48]
    skip
    node _io_mem_s1_kill_T = neq(state, UInt<3>("h2")) @[PTW.scala 295:37]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmaPgLevelHomogeneous_T_6 = xor(pte_addr, UInt<66>("hc000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_7 = cvt(_pmaPgLevelHomogeneous_T_6) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_8 = and(_pmaPgLevelHomogeneous_T_7, SInt<67>("h-4000000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_9 = asSInt(_pmaPgLevelHomogeneous_T_8) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_10 = eq(_pmaPgLevelHomogeneous_T_9, SInt<67>("h0")) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_11 = xor(pte_addr, UInt<66>("h80000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_12 = cvt(_pmaPgLevelHomogeneous_T_11) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_13 = and(_pmaPgLevelHomogeneous_T_12, SInt<67>("h-10000000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_14 = asSInt(_pmaPgLevelHomogeneous_T_13) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_15 = eq(_pmaPgLevelHomogeneous_T_14, SInt<67>("h0")) @[Parameters.scala 137:67]
    skip
    node pmaPgLevelHomogeneous_1 = or(_pmaPgLevelHomogeneous_T_10, _pmaPgLevelHomogeneous_T_15) @[TLBPermissions.scala 98:65]
    skip
    skip
    skip
    node _pmaPgLevelHomogeneous_T_20 = cvt(pte_addr) @[Parameters.scala 137:49]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmaPgLevelHomogeneous_T_37 = and(_pmaPgLevelHomogeneous_T_20, SInt<67>("h-5000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_38 = asSInt(_pmaPgLevelHomogeneous_T_37) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_39 = eq(_pmaPgLevelHomogeneous_T_38, SInt<67>("h0")) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_40 = xor(pte_addr, UInt<66>("h3000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_41 = cvt(_pmaPgLevelHomogeneous_T_40) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_42 = and(_pmaPgLevelHomogeneous_T_41, SInt<67>("h-1000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_43 = asSInt(_pmaPgLevelHomogeneous_T_42) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_44 = eq(_pmaPgLevelHomogeneous_T_43, SInt<67>("h0")) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_45 = xor(pte_addr, UInt<66>("h10000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_46 = cvt(_pmaPgLevelHomogeneous_T_45) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_47 = and(_pmaPgLevelHomogeneous_T_46, SInt<67>("h-10000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_48 = asSInt(_pmaPgLevelHomogeneous_T_47) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_49 = eq(_pmaPgLevelHomogeneous_T_48, SInt<67>("h0")) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_50 = xor(pte_addr, UInt<66>("h20000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_51 = cvt(_pmaPgLevelHomogeneous_T_50) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_52 = and(_pmaPgLevelHomogeneous_T_51, SInt<67>("h-10000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_53 = asSInt(_pmaPgLevelHomogeneous_T_52) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_54 = eq(_pmaPgLevelHomogeneous_T_53, SInt<67>("h0")) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_55 = xor(pte_addr, UInt<66>("h100000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_56 = cvt(_pmaPgLevelHomogeneous_T_55) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_57 = and(_pmaPgLevelHomogeneous_T_56, SInt<67>("h-1000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_58 = asSInt(_pmaPgLevelHomogeneous_T_57) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_59 = eq(_pmaPgLevelHomogeneous_T_58, SInt<67>("h0")) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_60 = xor(pte_addr, UInt<66>("h2000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_61 = cvt(_pmaPgLevelHomogeneous_T_60) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_62 = and(_pmaPgLevelHomogeneous_T_61, SInt<67>("h-10000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_63 = asSInt(_pmaPgLevelHomogeneous_T_62) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_64 = eq(_pmaPgLevelHomogeneous_T_63, SInt<67>("h0")) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_65 = xor(pte_addr, UInt<66>("h2010000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_66 = cvt(_pmaPgLevelHomogeneous_T_65) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_67 = and(_pmaPgLevelHomogeneous_T_66, SInt<67>("h-1000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_68 = asSInt(_pmaPgLevelHomogeneous_T_67) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_69 = eq(_pmaPgLevelHomogeneous_T_68, SInt<67>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    node _pmaPgLevelHomogeneous_T_75 = xor(pte_addr, UInt<66>("h10000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_76 = cvt(_pmaPgLevelHomogeneous_T_75) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_77 = and(_pmaPgLevelHomogeneous_T_76, SInt<67>("h-1000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_78 = asSInt(_pmaPgLevelHomogeneous_T_77) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_79 = eq(_pmaPgLevelHomogeneous_T_78, SInt<67>("h0")) @[Parameters.scala 137:67]
    node _pmaPgLevelHomogeneous_T_80 = xor(pte_addr, UInt<66>("h54000000")) @[Parameters.scala 137:31]
    node _pmaPgLevelHomogeneous_T_81 = cvt(_pmaPgLevelHomogeneous_T_80) @[Parameters.scala 137:49]
    node _pmaPgLevelHomogeneous_T_82 = and(_pmaPgLevelHomogeneous_T_81, SInt<67>("h-1000")) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_83 = asSInt(_pmaPgLevelHomogeneous_T_82) @[Parameters.scala 137:52]
    node _pmaPgLevelHomogeneous_T_84 = eq(_pmaPgLevelHomogeneous_T_83, SInt<67>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmaPgLevelHomogeneous_T_91 = or(_pmaPgLevelHomogeneous_T_39, _pmaPgLevelHomogeneous_T_44) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_92 = or(_pmaPgLevelHomogeneous_T_91, _pmaPgLevelHomogeneous_T_49) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_93 = or(_pmaPgLevelHomogeneous_T_92, _pmaPgLevelHomogeneous_T_54) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_94 = or(_pmaPgLevelHomogeneous_T_93, _pmaPgLevelHomogeneous_T_59) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_95 = or(_pmaPgLevelHomogeneous_T_94, _pmaPgLevelHomogeneous_T_64) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_96 = or(_pmaPgLevelHomogeneous_T_95, _pmaPgLevelHomogeneous_T_69) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_97 = or(_pmaPgLevelHomogeneous_T_96, _pmaPgLevelHomogeneous_T_10) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_98 = or(_pmaPgLevelHomogeneous_T_97, _pmaPgLevelHomogeneous_T_79) @[TLBPermissions.scala 98:65]
    node _pmaPgLevelHomogeneous_T_99 = or(_pmaPgLevelHomogeneous_T_98, _pmaPgLevelHomogeneous_T_84) @[TLBPermissions.scala 98:65]
    node pmaPgLevelHomogeneous_2 = or(_pmaPgLevelHomogeneous_T_99, _pmaPgLevelHomogeneous_T_15) @[TLBPermissions.scala 98:65]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmaHomogeneous_T_1 = and(_pte_addr_vpn_idx_T, pmaPgLevelHomogeneous_1) @[package.scala 32:76]
    skip
    node _pmaHomogeneous_T_3 = mux(_pte_addr_vpn_idx_T_2, pmaPgLevelHomogeneous_2, _pmaHomogeneous_T_1) @[package.scala 32:76]
    skip
    node pmaHomogeneous = mux(_pte_addr_vpn_idx_T_4, pmaPgLevelHomogeneous_2, _pmaHomogeneous_T_3) @[package.scala 32:76]
    node _pmpHomogeneous_T = shr(pte_addr, 12) @[PTW.scala 309:79]
    node _pmpHomogeneous_T_1 = shl(_pmpHomogeneous_T, 12) @[PTW.scala 309:92]
    node _pmpHomogeneous_T_2 = bits(io_dpath_pmp_0_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T = bits(io_dpath_pmp_0_mask, 29, 29) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_1 = bits(io_dpath_pmp_0_mask, 20, 20) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_2 = bits(io_dpath_pmp_0_mask, 11, 11) @[PMP.scala 99:93]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_4 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_maskHomogeneous_T_1, _pmpHomogeneous_maskHomogeneous_T) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_6 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_maskHomogeneous_T_2, _pmpHomogeneous_maskHomogeneous_T_4) @[package.scala 32:76]
    skip
    node pmpHomogeneous_maskHomogeneous = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_maskHomogeneous_T_2, _pmpHomogeneous_maskHomogeneous_T_6) @[package.scala 32:76]
    node _pmpHomogeneous_T_3 = shl(io_dpath_pmp_0_addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_4 = not(_pmpHomogeneous_T_3) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_5 = or(_pmpHomogeneous_T_4, UInt<32>("h3")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_6 = not(_pmpHomogeneous_T_5) @[PMP.scala 62:27]
    node _GEN_68 = pad(_pmpHomogeneous_T_6, 66) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_7 = xor(_pmpHomogeneous_T_1, _GEN_68) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_8 = shr(_pmpHomogeneous_T_7, 30) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_9 = neq(_pmpHomogeneous_T_8, UInt<36>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_15 = shr(_pmpHomogeneous_T_7, 21) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_16 = neq(_pmpHomogeneous_T_15, UInt<45>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_22 = shr(_pmpHomogeneous_T_7, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_23 = neq(_pmpHomogeneous_T_22, UInt<54>("h0")) @[PMP.scala 100:78]
    skip
    node _pmpHomogeneous_T_25 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_T_16, _pmpHomogeneous_T_9) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_27 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_T_23, _pmpHomogeneous_T_25) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_29 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_T_23, _pmpHomogeneous_T_27) @[package.scala 32:76]
    node _pmpHomogeneous_T_30 = or(pmpHomogeneous_maskHomogeneous, _pmpHomogeneous_T_29) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_31 = bits(io_dpath_pmp_0_cfg_a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_32 = not(_pmpHomogeneous_T_31) @[PMP.scala 120:45]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_beginsAfterUpper_T_4 = lt(_pmpHomogeneous_T_1, _GEN_68) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper = not(_pmpHomogeneous_beginsAfterUpper_T_4) @[PMP.scala 109:28]
    skip
    node _pmpHomogeneous_pgMask_T_1 = mux(_pte_addr_vpn_idx_T, UInt<32>("hffe00000"), UInt<32>("hc0000000")) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_pgMask_T_3 = mux(_pte_addr_vpn_idx_T_2, UInt<32>("hfffff000"), _pmpHomogeneous_pgMask_T_1) @[package.scala 32:76]
    skip
    node pmpHomogeneous_pgMask = mux(_pte_addr_vpn_idx_T_4, UInt<32>("hfffff000"), _pmpHomogeneous_pgMask_T_3) @[package.scala 32:76]
    node _GEN_72 = pad(pmpHomogeneous_pgMask, 66) @[PMP.scala 112:30]
    node _pmpHomogeneous_endsBeforeLower_T = and(_pmpHomogeneous_T_1, _GEN_72) @[PMP.scala 112:30]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_endsBeforeUpper_T_5 = and(_pmpHomogeneous_T_6, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node _GEN_74 = pad(_pmpHomogeneous_endsBeforeUpper_T_5, 66) @[PMP.scala 113:40]
    node pmpHomogeneous_endsBeforeUpper = lt(_pmpHomogeneous_endsBeforeLower_T, _GEN_74) @[PMP.scala 113:40]
    skip
    skip
    node _pmpHomogeneous_T_35 = or(pmpHomogeneous_beginsAfterUpper, pmpHomogeneous_endsBeforeUpper) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_36 = or(_pmpHomogeneous_T_32, _pmpHomogeneous_T_35) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_37 = mux(_pmpHomogeneous_T_2, _pmpHomogeneous_T_30, _pmpHomogeneous_T_36) @[PMP.scala 120:8]
    skip
    node _pmpHomogeneous_T_39 = bits(io_dpath_pmp_1_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_8 = bits(io_dpath_pmp_1_mask, 29, 29) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_9 = bits(io_dpath_pmp_1_mask, 20, 20) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_10 = bits(io_dpath_pmp_1_mask, 11, 11) @[PMP.scala 99:93]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_12 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_maskHomogeneous_T_9, _pmpHomogeneous_maskHomogeneous_T_8) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_14 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_maskHomogeneous_T_10, _pmpHomogeneous_maskHomogeneous_T_12) @[package.scala 32:76]
    skip
    node pmpHomogeneous_maskHomogeneous_1 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_maskHomogeneous_T_10, _pmpHomogeneous_maskHomogeneous_T_14) @[package.scala 32:76]
    node _pmpHomogeneous_T_40 = shl(io_dpath_pmp_1_addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_41 = not(_pmpHomogeneous_T_40) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_42 = or(_pmpHomogeneous_T_41, UInt<32>("h3")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_43 = not(_pmpHomogeneous_T_42) @[PMP.scala 62:27]
    node _GEN_75 = pad(_pmpHomogeneous_T_43, 66) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_44 = xor(_pmpHomogeneous_T_1, _GEN_75) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_45 = shr(_pmpHomogeneous_T_44, 30) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_46 = neq(_pmpHomogeneous_T_45, UInt<36>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_52 = shr(_pmpHomogeneous_T_44, 21) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_53 = neq(_pmpHomogeneous_T_52, UInt<45>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_59 = shr(_pmpHomogeneous_T_44, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_60 = neq(_pmpHomogeneous_T_59, UInt<54>("h0")) @[PMP.scala 100:78]
    skip
    node _pmpHomogeneous_T_62 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_T_53, _pmpHomogeneous_T_46) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_64 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_T_60, _pmpHomogeneous_T_62) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_66 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_T_60, _pmpHomogeneous_T_64) @[package.scala 32:76]
    node _pmpHomogeneous_T_67 = or(pmpHomogeneous_maskHomogeneous_1, _pmpHomogeneous_T_66) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_68 = bits(io_dpath_pmp_1_cfg_a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_69 = not(_pmpHomogeneous_T_68) @[PMP.scala 120:45]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_beginsAfterUpper_T_9 = lt(_pmpHomogeneous_T_1, _GEN_75) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_1 = not(_pmpHomogeneous_beginsAfterUpper_T_9) @[PMP.scala 109:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_endsBeforeUpper_T_11 = and(_pmpHomogeneous_T_43, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node _GEN_83 = pad(_pmpHomogeneous_endsBeforeUpper_T_11, 66) @[PMP.scala 113:40]
    node pmpHomogeneous_endsBeforeUpper_1 = lt(_pmpHomogeneous_endsBeforeLower_T, _GEN_83) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_70 = or(pmpHomogeneous_endsBeforeUpper, pmpHomogeneous_beginsAfterUpper_1) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_71 = and(pmpHomogeneous_beginsAfterUpper, pmpHomogeneous_endsBeforeUpper_1) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_72 = or(_pmpHomogeneous_T_70, _pmpHomogeneous_T_71) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_73 = or(_pmpHomogeneous_T_69, _pmpHomogeneous_T_72) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_74 = mux(_pmpHomogeneous_T_39, _pmpHomogeneous_T_67, _pmpHomogeneous_T_73) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_75 = and(_pmpHomogeneous_T_37, _pmpHomogeneous_T_74) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_76 = bits(io_dpath_pmp_2_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_16 = bits(io_dpath_pmp_2_mask, 29, 29) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_17 = bits(io_dpath_pmp_2_mask, 20, 20) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_18 = bits(io_dpath_pmp_2_mask, 11, 11) @[PMP.scala 99:93]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_20 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_maskHomogeneous_T_17, _pmpHomogeneous_maskHomogeneous_T_16) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_22 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_maskHomogeneous_T_18, _pmpHomogeneous_maskHomogeneous_T_20) @[package.scala 32:76]
    skip
    node pmpHomogeneous_maskHomogeneous_2 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_maskHomogeneous_T_18, _pmpHomogeneous_maskHomogeneous_T_22) @[package.scala 32:76]
    node _pmpHomogeneous_T_77 = shl(io_dpath_pmp_2_addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_78 = not(_pmpHomogeneous_T_77) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_79 = or(_pmpHomogeneous_T_78, UInt<32>("h3")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_80 = not(_pmpHomogeneous_T_79) @[PMP.scala 62:27]
    node _GEN_84 = pad(_pmpHomogeneous_T_80, 66) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_81 = xor(_pmpHomogeneous_T_1, _GEN_84) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_82 = shr(_pmpHomogeneous_T_81, 30) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_83 = neq(_pmpHomogeneous_T_82, UInt<36>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_89 = shr(_pmpHomogeneous_T_81, 21) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_90 = neq(_pmpHomogeneous_T_89, UInt<45>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_96 = shr(_pmpHomogeneous_T_81, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_97 = neq(_pmpHomogeneous_T_96, UInt<54>("h0")) @[PMP.scala 100:78]
    skip
    node _pmpHomogeneous_T_99 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_T_90, _pmpHomogeneous_T_83) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_101 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_T_97, _pmpHomogeneous_T_99) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_103 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_T_97, _pmpHomogeneous_T_101) @[package.scala 32:76]
    node _pmpHomogeneous_T_104 = or(pmpHomogeneous_maskHomogeneous_2, _pmpHomogeneous_T_103) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_105 = bits(io_dpath_pmp_2_cfg_a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_106 = not(_pmpHomogeneous_T_105) @[PMP.scala 120:45]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_beginsAfterUpper_T_14 = lt(_pmpHomogeneous_T_1, _GEN_84) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_2 = not(_pmpHomogeneous_beginsAfterUpper_T_14) @[PMP.scala 109:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_endsBeforeUpper_T_17 = and(_pmpHomogeneous_T_80, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node _GEN_92 = pad(_pmpHomogeneous_endsBeforeUpper_T_17, 66) @[PMP.scala 113:40]
    node pmpHomogeneous_endsBeforeUpper_2 = lt(_pmpHomogeneous_endsBeforeLower_T, _GEN_92) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_107 = or(pmpHomogeneous_endsBeforeUpper_1, pmpHomogeneous_beginsAfterUpper_2) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_108 = and(pmpHomogeneous_beginsAfterUpper_1, pmpHomogeneous_endsBeforeUpper_2) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_109 = or(_pmpHomogeneous_T_107, _pmpHomogeneous_T_108) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_110 = or(_pmpHomogeneous_T_106, _pmpHomogeneous_T_109) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_111 = mux(_pmpHomogeneous_T_76, _pmpHomogeneous_T_104, _pmpHomogeneous_T_110) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_112 = and(_pmpHomogeneous_T_75, _pmpHomogeneous_T_111) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_113 = bits(io_dpath_pmp_3_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_24 = bits(io_dpath_pmp_3_mask, 29, 29) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_25 = bits(io_dpath_pmp_3_mask, 20, 20) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_26 = bits(io_dpath_pmp_3_mask, 11, 11) @[PMP.scala 99:93]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_28 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_maskHomogeneous_T_25, _pmpHomogeneous_maskHomogeneous_T_24) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_30 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_maskHomogeneous_T_26, _pmpHomogeneous_maskHomogeneous_T_28) @[package.scala 32:76]
    skip
    node pmpHomogeneous_maskHomogeneous_3 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_maskHomogeneous_T_26, _pmpHomogeneous_maskHomogeneous_T_30) @[package.scala 32:76]
    node _pmpHomogeneous_T_114 = shl(io_dpath_pmp_3_addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_115 = not(_pmpHomogeneous_T_114) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_116 = or(_pmpHomogeneous_T_115, UInt<32>("h3")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_117 = not(_pmpHomogeneous_T_116) @[PMP.scala 62:27]
    node _GEN_93 = pad(_pmpHomogeneous_T_117, 66) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_118 = xor(_pmpHomogeneous_T_1, _GEN_93) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_119 = shr(_pmpHomogeneous_T_118, 30) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_120 = neq(_pmpHomogeneous_T_119, UInt<36>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_126 = shr(_pmpHomogeneous_T_118, 21) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_127 = neq(_pmpHomogeneous_T_126, UInt<45>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_133 = shr(_pmpHomogeneous_T_118, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_134 = neq(_pmpHomogeneous_T_133, UInt<54>("h0")) @[PMP.scala 100:78]
    skip
    node _pmpHomogeneous_T_136 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_T_127, _pmpHomogeneous_T_120) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_138 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_T_134, _pmpHomogeneous_T_136) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_140 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_T_134, _pmpHomogeneous_T_138) @[package.scala 32:76]
    node _pmpHomogeneous_T_141 = or(pmpHomogeneous_maskHomogeneous_3, _pmpHomogeneous_T_140) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_142 = bits(io_dpath_pmp_3_cfg_a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_143 = not(_pmpHomogeneous_T_142) @[PMP.scala 120:45]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_beginsAfterUpper_T_19 = lt(_pmpHomogeneous_T_1, _GEN_93) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_3 = not(_pmpHomogeneous_beginsAfterUpper_T_19) @[PMP.scala 109:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_endsBeforeUpper_T_23 = and(_pmpHomogeneous_T_117, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node _GEN_101 = pad(_pmpHomogeneous_endsBeforeUpper_T_23, 66) @[PMP.scala 113:40]
    node pmpHomogeneous_endsBeforeUpper_3 = lt(_pmpHomogeneous_endsBeforeLower_T, _GEN_101) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_144 = or(pmpHomogeneous_endsBeforeUpper_2, pmpHomogeneous_beginsAfterUpper_3) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_145 = and(pmpHomogeneous_beginsAfterUpper_2, pmpHomogeneous_endsBeforeUpper_3) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_146 = or(_pmpHomogeneous_T_144, _pmpHomogeneous_T_145) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_147 = or(_pmpHomogeneous_T_143, _pmpHomogeneous_T_146) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_148 = mux(_pmpHomogeneous_T_113, _pmpHomogeneous_T_141, _pmpHomogeneous_T_147) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_149 = and(_pmpHomogeneous_T_112, _pmpHomogeneous_T_148) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_150 = bits(io_dpath_pmp_4_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_32 = bits(io_dpath_pmp_4_mask, 29, 29) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_33 = bits(io_dpath_pmp_4_mask, 20, 20) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_34 = bits(io_dpath_pmp_4_mask, 11, 11) @[PMP.scala 99:93]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_36 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_maskHomogeneous_T_33, _pmpHomogeneous_maskHomogeneous_T_32) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_38 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_maskHomogeneous_T_34, _pmpHomogeneous_maskHomogeneous_T_36) @[package.scala 32:76]
    skip
    node pmpHomogeneous_maskHomogeneous_4 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_maskHomogeneous_T_34, _pmpHomogeneous_maskHomogeneous_T_38) @[package.scala 32:76]
    node _pmpHomogeneous_T_151 = shl(io_dpath_pmp_4_addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_152 = not(_pmpHomogeneous_T_151) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_153 = or(_pmpHomogeneous_T_152, UInt<32>("h3")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_154 = not(_pmpHomogeneous_T_153) @[PMP.scala 62:27]
    node _GEN_102 = pad(_pmpHomogeneous_T_154, 66) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_155 = xor(_pmpHomogeneous_T_1, _GEN_102) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_156 = shr(_pmpHomogeneous_T_155, 30) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_157 = neq(_pmpHomogeneous_T_156, UInt<36>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_163 = shr(_pmpHomogeneous_T_155, 21) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_164 = neq(_pmpHomogeneous_T_163, UInt<45>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_170 = shr(_pmpHomogeneous_T_155, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_171 = neq(_pmpHomogeneous_T_170, UInt<54>("h0")) @[PMP.scala 100:78]
    skip
    node _pmpHomogeneous_T_173 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_T_164, _pmpHomogeneous_T_157) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_175 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_T_171, _pmpHomogeneous_T_173) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_177 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_T_171, _pmpHomogeneous_T_175) @[package.scala 32:76]
    node _pmpHomogeneous_T_178 = or(pmpHomogeneous_maskHomogeneous_4, _pmpHomogeneous_T_177) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_179 = bits(io_dpath_pmp_4_cfg_a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_180 = not(_pmpHomogeneous_T_179) @[PMP.scala 120:45]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_beginsAfterUpper_T_24 = lt(_pmpHomogeneous_T_1, _GEN_102) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_4 = not(_pmpHomogeneous_beginsAfterUpper_T_24) @[PMP.scala 109:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_endsBeforeUpper_T_29 = and(_pmpHomogeneous_T_154, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node _GEN_110 = pad(_pmpHomogeneous_endsBeforeUpper_T_29, 66) @[PMP.scala 113:40]
    node pmpHomogeneous_endsBeforeUpper_4 = lt(_pmpHomogeneous_endsBeforeLower_T, _GEN_110) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_181 = or(pmpHomogeneous_endsBeforeUpper_3, pmpHomogeneous_beginsAfterUpper_4) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_182 = and(pmpHomogeneous_beginsAfterUpper_3, pmpHomogeneous_endsBeforeUpper_4) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_183 = or(_pmpHomogeneous_T_181, _pmpHomogeneous_T_182) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_184 = or(_pmpHomogeneous_T_180, _pmpHomogeneous_T_183) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_185 = mux(_pmpHomogeneous_T_150, _pmpHomogeneous_T_178, _pmpHomogeneous_T_184) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_186 = and(_pmpHomogeneous_T_149, _pmpHomogeneous_T_185) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_187 = bits(io_dpath_pmp_5_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_40 = bits(io_dpath_pmp_5_mask, 29, 29) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_41 = bits(io_dpath_pmp_5_mask, 20, 20) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_42 = bits(io_dpath_pmp_5_mask, 11, 11) @[PMP.scala 99:93]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_44 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_maskHomogeneous_T_41, _pmpHomogeneous_maskHomogeneous_T_40) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_46 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_maskHomogeneous_T_42, _pmpHomogeneous_maskHomogeneous_T_44) @[package.scala 32:76]
    skip
    node pmpHomogeneous_maskHomogeneous_5 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_maskHomogeneous_T_42, _pmpHomogeneous_maskHomogeneous_T_46) @[package.scala 32:76]
    node _pmpHomogeneous_T_188 = shl(io_dpath_pmp_5_addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_189 = not(_pmpHomogeneous_T_188) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_190 = or(_pmpHomogeneous_T_189, UInt<32>("h3")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_191 = not(_pmpHomogeneous_T_190) @[PMP.scala 62:27]
    node _GEN_111 = pad(_pmpHomogeneous_T_191, 66) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_192 = xor(_pmpHomogeneous_T_1, _GEN_111) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_193 = shr(_pmpHomogeneous_T_192, 30) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_194 = neq(_pmpHomogeneous_T_193, UInt<36>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_200 = shr(_pmpHomogeneous_T_192, 21) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_201 = neq(_pmpHomogeneous_T_200, UInt<45>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_207 = shr(_pmpHomogeneous_T_192, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_208 = neq(_pmpHomogeneous_T_207, UInt<54>("h0")) @[PMP.scala 100:78]
    skip
    node _pmpHomogeneous_T_210 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_T_201, _pmpHomogeneous_T_194) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_212 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_T_208, _pmpHomogeneous_T_210) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_214 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_T_208, _pmpHomogeneous_T_212) @[package.scala 32:76]
    node _pmpHomogeneous_T_215 = or(pmpHomogeneous_maskHomogeneous_5, _pmpHomogeneous_T_214) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_216 = bits(io_dpath_pmp_5_cfg_a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_217 = not(_pmpHomogeneous_T_216) @[PMP.scala 120:45]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_beginsAfterUpper_T_29 = lt(_pmpHomogeneous_T_1, _GEN_111) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_5 = not(_pmpHomogeneous_beginsAfterUpper_T_29) @[PMP.scala 109:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_endsBeforeUpper_T_35 = and(_pmpHomogeneous_T_191, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node _GEN_119 = pad(_pmpHomogeneous_endsBeforeUpper_T_35, 66) @[PMP.scala 113:40]
    node pmpHomogeneous_endsBeforeUpper_5 = lt(_pmpHomogeneous_endsBeforeLower_T, _GEN_119) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_218 = or(pmpHomogeneous_endsBeforeUpper_4, pmpHomogeneous_beginsAfterUpper_5) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_219 = and(pmpHomogeneous_beginsAfterUpper_4, pmpHomogeneous_endsBeforeUpper_5) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_220 = or(_pmpHomogeneous_T_218, _pmpHomogeneous_T_219) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_221 = or(_pmpHomogeneous_T_217, _pmpHomogeneous_T_220) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_222 = mux(_pmpHomogeneous_T_187, _pmpHomogeneous_T_215, _pmpHomogeneous_T_221) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_223 = and(_pmpHomogeneous_T_186, _pmpHomogeneous_T_222) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_224 = bits(io_dpath_pmp_6_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_48 = bits(io_dpath_pmp_6_mask, 29, 29) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_49 = bits(io_dpath_pmp_6_mask, 20, 20) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_50 = bits(io_dpath_pmp_6_mask, 11, 11) @[PMP.scala 99:93]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_52 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_maskHomogeneous_T_49, _pmpHomogeneous_maskHomogeneous_T_48) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_54 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_maskHomogeneous_T_50, _pmpHomogeneous_maskHomogeneous_T_52) @[package.scala 32:76]
    skip
    node pmpHomogeneous_maskHomogeneous_6 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_maskHomogeneous_T_50, _pmpHomogeneous_maskHomogeneous_T_54) @[package.scala 32:76]
    node _pmpHomogeneous_T_225 = shl(io_dpath_pmp_6_addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_226 = not(_pmpHomogeneous_T_225) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_227 = or(_pmpHomogeneous_T_226, UInt<32>("h3")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_228 = not(_pmpHomogeneous_T_227) @[PMP.scala 62:27]
    node _GEN_120 = pad(_pmpHomogeneous_T_228, 66) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_229 = xor(_pmpHomogeneous_T_1, _GEN_120) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_230 = shr(_pmpHomogeneous_T_229, 30) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_231 = neq(_pmpHomogeneous_T_230, UInt<36>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_237 = shr(_pmpHomogeneous_T_229, 21) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_238 = neq(_pmpHomogeneous_T_237, UInt<45>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_244 = shr(_pmpHomogeneous_T_229, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_245 = neq(_pmpHomogeneous_T_244, UInt<54>("h0")) @[PMP.scala 100:78]
    skip
    node _pmpHomogeneous_T_247 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_T_238, _pmpHomogeneous_T_231) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_249 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_T_245, _pmpHomogeneous_T_247) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_251 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_T_245, _pmpHomogeneous_T_249) @[package.scala 32:76]
    node _pmpHomogeneous_T_252 = or(pmpHomogeneous_maskHomogeneous_6, _pmpHomogeneous_T_251) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_253 = bits(io_dpath_pmp_6_cfg_a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_254 = not(_pmpHomogeneous_T_253) @[PMP.scala 120:45]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_beginsAfterUpper_T_34 = lt(_pmpHomogeneous_T_1, _GEN_120) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_6 = not(_pmpHomogeneous_beginsAfterUpper_T_34) @[PMP.scala 109:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_endsBeforeUpper_T_41 = and(_pmpHomogeneous_T_228, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node _GEN_128 = pad(_pmpHomogeneous_endsBeforeUpper_T_41, 66) @[PMP.scala 113:40]
    node pmpHomogeneous_endsBeforeUpper_6 = lt(_pmpHomogeneous_endsBeforeLower_T, _GEN_128) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_255 = or(pmpHomogeneous_endsBeforeUpper_5, pmpHomogeneous_beginsAfterUpper_6) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_256 = and(pmpHomogeneous_beginsAfterUpper_5, pmpHomogeneous_endsBeforeUpper_6) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_257 = or(_pmpHomogeneous_T_255, _pmpHomogeneous_T_256) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_258 = or(_pmpHomogeneous_T_254, _pmpHomogeneous_T_257) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_259 = mux(_pmpHomogeneous_T_224, _pmpHomogeneous_T_252, _pmpHomogeneous_T_258) @[PMP.scala 120:8]
    node _pmpHomogeneous_T_260 = and(_pmpHomogeneous_T_223, _pmpHomogeneous_T_259) @[PMP.scala 140:10]
    node _pmpHomogeneous_T_261 = bits(io_dpath_pmp_7_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _pmpHomogeneous_maskHomogeneous_T_56 = bits(io_dpath_pmp_7_mask, 29, 29) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_57 = bits(io_dpath_pmp_7_mask, 20, 20) @[PMP.scala 99:93]
    node _pmpHomogeneous_maskHomogeneous_T_58 = bits(io_dpath_pmp_7_mask, 11, 11) @[PMP.scala 99:93]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_60 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_maskHomogeneous_T_57, _pmpHomogeneous_maskHomogeneous_T_56) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_maskHomogeneous_T_62 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_maskHomogeneous_T_58, _pmpHomogeneous_maskHomogeneous_T_60) @[package.scala 32:76]
    skip
    node pmpHomogeneous_maskHomogeneous_7 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_maskHomogeneous_T_58, _pmpHomogeneous_maskHomogeneous_T_62) @[package.scala 32:76]
    node _pmpHomogeneous_T_262 = shl(io_dpath_pmp_7_addr, 2) @[PMP.scala 62:36]
    node _pmpHomogeneous_T_263 = not(_pmpHomogeneous_T_262) @[PMP.scala 62:29]
    node _pmpHomogeneous_T_264 = or(_pmpHomogeneous_T_263, UInt<32>("h3")) @[PMP.scala 62:48]
    node _pmpHomogeneous_T_265 = not(_pmpHomogeneous_T_264) @[PMP.scala 62:27]
    node _GEN_129 = pad(_pmpHomogeneous_T_265, 66) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_266 = xor(_pmpHomogeneous_T_1, _GEN_129) @[PMP.scala 100:53]
    node _pmpHomogeneous_T_267 = shr(_pmpHomogeneous_T_266, 30) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_268 = neq(_pmpHomogeneous_T_267, UInt<36>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_274 = shr(_pmpHomogeneous_T_266, 21) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_275 = neq(_pmpHomogeneous_T_274, UInt<45>("h0")) @[PMP.scala 100:78]
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_T_281 = shr(_pmpHomogeneous_T_266, 12) @[PMP.scala 100:66]
    node _pmpHomogeneous_T_282 = neq(_pmpHomogeneous_T_281, UInt<54>("h0")) @[PMP.scala 100:78]
    skip
    node _pmpHomogeneous_T_284 = mux(_pte_addr_vpn_idx_T, _pmpHomogeneous_T_275, _pmpHomogeneous_T_268) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_286 = mux(_pte_addr_vpn_idx_T_2, _pmpHomogeneous_T_282, _pmpHomogeneous_T_284) @[package.scala 32:76]
    skip
    node _pmpHomogeneous_T_288 = mux(_pte_addr_vpn_idx_T_4, _pmpHomogeneous_T_282, _pmpHomogeneous_T_286) @[package.scala 32:76]
    node _pmpHomogeneous_T_289 = or(pmpHomogeneous_maskHomogeneous_7, _pmpHomogeneous_T_288) @[PMP.scala 100:21]
    node _pmpHomogeneous_T_290 = bits(io_dpath_pmp_7_cfg_a, 0, 0) @[PMP.scala 48:26]
    node _pmpHomogeneous_T_291 = not(_pmpHomogeneous_T_290) @[PMP.scala 120:45]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_beginsAfterUpper_T_39 = lt(_pmpHomogeneous_T_1, _GEN_129) @[PMP.scala 109:32]
    node pmpHomogeneous_beginsAfterUpper_7 = not(_pmpHomogeneous_beginsAfterUpper_T_39) @[PMP.scala 109:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pmpHomogeneous_endsBeforeUpper_T_47 = and(_pmpHomogeneous_T_265, pmpHomogeneous_pgMask) @[PMP.scala 113:53]
    node _GEN_137 = pad(_pmpHomogeneous_endsBeforeUpper_T_47, 66) @[PMP.scala 113:40]
    node pmpHomogeneous_endsBeforeUpper_7 = lt(_pmpHomogeneous_endsBeforeLower_T, _GEN_137) @[PMP.scala 113:40]
    node _pmpHomogeneous_T_292 = or(pmpHomogeneous_endsBeforeUpper_6, pmpHomogeneous_beginsAfterUpper_7) @[PMP.scala 115:21]
    node _pmpHomogeneous_T_293 = and(pmpHomogeneous_beginsAfterUpper_6, pmpHomogeneous_endsBeforeUpper_7) @[PMP.scala 115:62]
    node _pmpHomogeneous_T_294 = or(_pmpHomogeneous_T_292, _pmpHomogeneous_T_293) @[PMP.scala 115:41]
    node _pmpHomogeneous_T_295 = or(_pmpHomogeneous_T_291, _pmpHomogeneous_T_294) @[PMP.scala 120:58]
    node _pmpHomogeneous_T_296 = mux(_pmpHomogeneous_T_261, _pmpHomogeneous_T_289, _pmpHomogeneous_T_295) @[PMP.scala 120:8]
    node pmpHomogeneous = and(_pmpHomogeneous_T_260, _pmpHomogeneous_T_296) @[PMP.scala 140:10]
    node homogeneous = and(pmaHomogeneous, pmpHomogeneous) @[PTW.scala 310:36]
    skip
    skip
    skip
    skip
    node _T_144 = eq(UInt<3>("h0"), state) @[Conditional.scala 37:30]
    skip
    node _next_state_T = mux(arb.io_out_bits_valid, UInt<3>("h1"), UInt<3>("h0")) @[PTW.scala 332:26]
    node _GEN_2108 = mux(_T_22, _next_state_T, state) @[PTW.scala 331:32 332:20]
    skip
    skip
    node _T_146 = eq(UInt<3>("h1"), state) @[Conditional.scala 37:30]
    node _count_T_2 = add(count, UInt<2>("h1")) @[PTW.scala 338:24]
    node _count_T_3 = tail(_count_T_2, 1) @[PTW.scala 338:24]
    node _next_state_T_1 = mux(io_mem_req_ready, UInt<3>("h2"), UInt<3>("h1")) @[PTW.scala 341:26]
    node _GEN_2109 = mux(pte_cache_hit, _count_T_3, count) @[PTW.scala 337:28 338:15 126:18]
    skip
    node _GEN_2111 = mux(pte_cache_hit, state, _next_state_T_1) @[PTW.scala 337:28 341:20]
    node _T_147 = eq(UInt<3>("h2"), state) @[Conditional.scala 37:30]
    node _next_state_T_2 = mux(s2_hit, UInt<3>("h1"), UInt<3>("h4")) @[PTW.scala 346:24]
    node _T_148 = eq(UInt<3>("h4"), state) @[Conditional.scala 37:30]
    skip
    skip
    skip
    skip
    skip
    node _GEN_2112 = not(r_req_dest) @[PTW.scala 116:23 354:{32,32}]
    skip
    skip
    skip
    node _GEN_2115 = mux(io_mem_s2_xcpt_ae_ld, UInt<3>("h0"), UInt<3>("h5")) @[PTW.scala 349:18 351:35 353:20]
    node _GEN_2116 = and(io_mem_s2_xcpt_ae_ld, _GEN_2112) @[PTW.scala 116:23 351:35]
    node _GEN_2117 = and(io_mem_s2_xcpt_ae_ld, r_req_dest) @[PTW.scala 116:23 351:35]
    node _T_151 = eq(UInt<3>("h7"), state) @[Conditional.scala 37:30]
    skip
    skip
    skip
    skip
    skip
    node _T_154 = not(homogeneous) @[PTW.scala 361:13]
    node _GEN_2120 = mux(_T_154, UInt<2>("h2"), count) @[PTW.scala 361:27 362:15 126:18]
    skip
    node _GEN_2122 = mux(_T_151, UInt<3>("h0"), state) @[Conditional.scala 39:67 PTW.scala 358:18]
    node _GEN_2123 = and(_T_151, _GEN_2112) @[Conditional.scala 39:67 PTW.scala 116:23]
    node _GEN_2124 = and(_T_151, r_req_dest) @[Conditional.scala 39:67 PTW.scala 116:23]
    skip
    node _GEN_2126 = mux(_T_151, _GEN_2120, count) @[Conditional.scala 39:67 PTW.scala 126:18]
    skip
    node _GEN_2128 = mux(_T_148, _GEN_2115, _GEN_2122) @[Conditional.scala 39:67]
    node _GEN_2129 = and(_T_148, _traverse_T_8) @[Conditional.scala 39:67 PTW.scala 196:26 350:30]
    node _GEN_2130 = and(_T_148, io_mem_s2_xcpt_ae_ld) @[Conditional.scala 39:67]
    node _GEN_2131 = mux(_T_148, _GEN_2116, _GEN_2123) @[Conditional.scala 39:67]
    node _GEN_2132 = mux(_T_148, _GEN_2117, _GEN_2124) @[Conditional.scala 39:67]
    node _GEN_2133 = mux(_T_148, count, _GEN_2126) @[Conditional.scala 39:67 PTW.scala 126:18]
    skip
    node _GEN_2135 = mux(_T_147, _next_state_T_2, _GEN_2128) @[Conditional.scala 39:67 PTW.scala 346:18]
    node _GEN_2136 = mux(_T_147, UInt<1>("h0"), _GEN_2129) @[Conditional.scala 39:67 PTW.scala 196:26]
    node _GEN_2137 = mux(_T_147, UInt<1>("h0"), _GEN_2130) @[Conditional.scala 39:67 PTW.scala 127:24]
    node _GEN_2138 = mux(_T_147, UInt<1>("h0"), _GEN_2131) @[Conditional.scala 39:67 PTW.scala 116:23]
    node _GEN_2139 = mux(_T_147, UInt<1>("h0"), _GEN_2132) @[Conditional.scala 39:67 PTW.scala 116:23]
    node _GEN_2140 = mux(_T_147, count, _GEN_2133) @[Conditional.scala 39:67 PTW.scala 126:18]
    skip
    node _GEN_2142 = mux(_T_146, _GEN_2109, _GEN_2140) @[Conditional.scala 39:67]
    node _GEN_2143 = and(_T_146, pte_cache_hit) @[Conditional.scala 39:67 PTW.scala 195:24]
    node _GEN_2144 = mux(_T_146, _GEN_2111, _GEN_2135) @[Conditional.scala 39:67]
    node _GEN_2145 = mux(_T_146, UInt<1>("h0"), _GEN_2136) @[Conditional.scala 39:67 PTW.scala 196:26]
    node _GEN_2146 = mux(_T_146, UInt<1>("h0"), _GEN_2137) @[Conditional.scala 39:67 PTW.scala 127:24]
    node _GEN_2147 = mux(_T_146, UInt<1>("h0"), _GEN_2138) @[Conditional.scala 39:67 PTW.scala 116:23]
    node _GEN_2148 = mux(_T_146, UInt<1>("h0"), _GEN_2139) @[Conditional.scala 39:67 PTW.scala 116:23]
    skip
    node _GEN_2150 = mux(_T_144, _GEN_2108, _GEN_2144) @[Conditional.scala 40:58]
    node _GEN_2151 = mux(_T_144, UInt<2>("h0"), _GEN_2142) @[Conditional.scala 40:58 PTW.scala 334:13]
    skip
    skip
    node _GEN_2154 = mux(_T_144, UInt<1>("h0"), _GEN_2146) @[Conditional.scala 40:58 PTW.scala 127:24]
    node _GEN_2155 = mux(_T_144, UInt<1>("h0"), _GEN_2147) @[Conditional.scala 40:58 PTW.scala 116:23]
    node _GEN_2156 = mux(_T_144, UInt<1>("h0"), _GEN_2148) @[Conditional.scala 40:58 PTW.scala 116:23]
    skip
    node _r_pte_T = not(s2_error) @[PTW.scala 375:19]
    node _r_pte_T_1 = and(s2_hit, _r_pte_T) @[PTW.scala 375:16]
    node _r_pte_T_2 = eq(state, UInt<3>("h7")) @[PTW.scala 376:15]
    skip
    node _r_pte_T_4 = and(_r_pte_T_2, _T_154) @[PTW.scala 376:40]
    skip
    node _r_pte_T_6 = and(_T_55, pte_cache_hit) @[PTW.scala 377:25]
    skip
    node pte_2_ppn = pad(io_dpath_ptbr_ppn, 54)
    node _r_pte_T_8_ppn = mux(_T_22, pte_2_ppn, r_pte_ppn) @[PTW.scala 378:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node pte_1_ppn = pad(pte_cache_data, 54)
    node _r_pte_T_9_ppn = mux(_r_pte_T_6, pte_1_ppn, _r_pte_T_8_ppn) @[PTW.scala 377:8]
    skip
    skip
    skip
    skip
    skip
    skip
    node _r_pte_T_9_d = mux(_r_pte_T_6, s2_entry_vec_0_d, r_pte_d) @[PTW.scala 377:8]
    skip
    skip
    skip
    node _r_pte_T_9_a = mux(_r_pte_T_6, s2_entry_vec_0_a, r_pte_a) @[PTW.scala 377:8]
    skip
    skip
    node _r_pte_T_9_g = mux(_r_pte_T_6, s2_g_vec_0, r_pte_g) @[PTW.scala 377:8]
    skip
    skip
    skip
    node _r_pte_T_9_u = mux(_r_pte_T_6, s2_entry_vec_0_u, r_pte_u) @[PTW.scala 377:8]
    skip
    skip
    skip
    node _r_pte_T_9_x = mux(_r_pte_T_6, s2_entry_vec_0_x, r_pte_x) @[PTW.scala 377:8]
    skip
    skip
    skip
    node _r_pte_T_9_w = mux(_r_pte_T_6, s2_entry_vec_0_w, r_pte_w) @[PTW.scala 377:8]
    skip
    skip
    skip
    node _r_pte_T_9_r = mux(_r_pte_T_6, s2_entry_vec_0_r, r_pte_r) @[PTW.scala 377:8]
    skip
    skip
    node _r_pte_T_9_v = or(_r_pte_T_6, r_pte_v) @[PTW.scala 377:8]
    skip
    node _r_pte_T_10_ppn = mux(_r_pte_T_4, fragmented_superpage_ppn, _r_pte_T_9_ppn) @[PTW.scala 376:8]
    skip
    skip
    skip
    node _r_pte_T_10_d = mux(_r_pte_T_4, r_pte_d, _r_pte_T_9_d) @[PTW.scala 376:8]
    skip
    node _r_pte_T_10_a = mux(_r_pte_T_4, r_pte_a, _r_pte_T_9_a) @[PTW.scala 376:8]
    skip
    node _r_pte_T_10_g = mux(_r_pte_T_4, r_pte_g, _r_pte_T_9_g) @[PTW.scala 376:8]
    skip
    node _r_pte_T_10_u = mux(_r_pte_T_4, r_pte_u, _r_pte_T_9_u) @[PTW.scala 376:8]
    skip
    node _r_pte_T_10_x = mux(_r_pte_T_4, r_pte_x, _r_pte_T_9_x) @[PTW.scala 376:8]
    skip
    node _r_pte_T_10_w = mux(_r_pte_T_4, r_pte_w, _r_pte_T_9_w) @[PTW.scala 376:8]
    skip
    node _r_pte_T_10_r = mux(_r_pte_T_4, r_pte_r, _r_pte_T_9_r) @[PTW.scala 376:8]
    skip
    node _r_pte_T_10_v = mux(_r_pte_T_4, r_pte_v, _r_pte_T_9_v) @[PTW.scala 376:8]
    skip
    node s2_pte_ppn = pad(s2_entry_vec_0_ppn, 54) @[PTW.scala 271:22 272:14]
    node _r_pte_T_11_ppn = mux(_r_pte_T_1, s2_pte_ppn, _r_pte_T_10_ppn) @[PTW.scala 375:8]
    skip
    node _r_pte_T_11_d = mux(_r_pte_T_1, s2_entry_vec_0_d, _r_pte_T_10_d) @[PTW.scala 375:8]
    node _r_pte_T_11_a = mux(_r_pte_T_1, s2_entry_vec_0_a, _r_pte_T_10_a) @[PTW.scala 375:8]
    node _r_pte_T_11_g = mux(_r_pte_T_1, s2_g_vec_0, _r_pte_T_10_g) @[PTW.scala 375:8]
    node _r_pte_T_11_u = mux(_r_pte_T_1, s2_entry_vec_0_u, _r_pte_T_10_u) @[PTW.scala 375:8]
    node _r_pte_T_11_x = mux(_r_pte_T_1, s2_entry_vec_0_x, _r_pte_T_10_x) @[PTW.scala 375:8]
    node _r_pte_T_11_w = mux(_r_pte_T_1, s2_entry_vec_0_w, _r_pte_T_10_w) @[PTW.scala 375:8]
    node _r_pte_T_11_r = mux(_r_pte_T_1, s2_entry_vec_0_r, _r_pte_T_10_r) @[PTW.scala 375:8]
    node _r_pte_T_11_v = or(_r_pte_T_1, _r_pte_T_10_v) @[PTW.scala 375:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_158 = eq(state, UInt<3>("h2")) @[PTW.scala 382:37]
    node _T_159 = or(_T_55, _T_158) @[PTW.scala 382:28]
    skip
    node _T_161 = or(_T_159, reset) @[PTW.scala 382:11]
    node _T_162 = not(_T_161) @[PTW.scala 382:11]
    skip
    skip
    skip
    skip
    node _GEN_2158 = or(_GEN_2112, _GEN_2155) @[PTW.scala 384:{28,28}]
    node _GEN_2159 = or(r_req_dest, _GEN_2156) @[PTW.scala 384:{28,28}]
    node _GEN_2160 = mux(_r_pte_T_1, UInt<3>("h0"), _GEN_2150) @[PTW.scala 381:30 383:16]
    node _GEN_2161 = mux(_r_pte_T_1, _GEN_2158, _GEN_2155) @[PTW.scala 381:30]
    node _GEN_2162 = mux(_r_pte_T_1, _GEN_2159, _GEN_2156) @[PTW.scala 381:30]
    node _GEN_2163 = mux(_r_pte_T_1, UInt<1>("h0"), _GEN_2154) @[PTW.scala 381:30 385:13]
    node _GEN_2164 = mux(_r_pte_T_1, UInt<2>("h2"), _GEN_2151) @[PTW.scala 381:30 386:11]
    node _T_165 = eq(state, UInt<3>("h5")) @[PTW.scala 389:18]
    skip
    node _T_167 = or(_T_165, reset) @[PTW.scala 389:11]
    node _T_168 = not(_T_167) @[PTW.scala 389:11]
    skip
    skip
    skip
    node _l2_refill_T_1 = and(res_v, _traverse_T_6) @[PTW.scala 394:26]
    skip
    node _l2_refill_T_3 = and(_l2_refill_T_1, _pte_addr_vpn_idx_T_2) @[PTW.scala 394:44]
    node ae = and(res_v, invalid_paddr) @[PTW.scala 395:22]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_2165 = or(_GEN_2112, _GEN_2161) @[PTW.scala 401:{32,32}]
    node _GEN_2166 = or(r_req_dest, _GEN_2162) @[PTW.scala 401:{32,32}]
    skip
    skip
    skip
    node _GEN_2170 = mux(traverse, UInt<3>("h1"), UInt<3>("h0")) @[PTW.scala 390:21 391:18]
    node _GEN_2171 = mux(traverse, _count_T_3, _GEN_2164) @[PTW.scala 390:21 392:13]
    node _GEN_2172 = mux(traverse, UInt<1>("h0"), _l2_refill_T_3) @[PTW.scala 390:21 201:26 394:17]
    node _GEN_2173 = mux(traverse, _GEN_2163, ae) @[PTW.scala 390:21 396:15]
    node _GEN_2174 = mux(traverse, _GEN_2161, _GEN_2165) @[PTW.scala 390:21]
    node _GEN_2175 = mux(traverse, _GEN_2162, _GEN_2166) @[PTW.scala 390:21]
    node _GEN_2176 = mux(mem_resp_valid, _GEN_2170, _GEN_2160) @[PTW.scala 388:25]
    skip
    skip
    skip
    skip
    skip
    node _T_175 = eq(state, UInt<3>("h4")) @[PTW.scala 406:18]
    skip
    node _T_177 = or(_T_175, reset) @[PTW.scala 406:11]
    node _T_178 = not(_T_177) @[PTW.scala 406:11]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_0_req_ready <= arb.io_in_0_ready @[PTW.scala 113:13]
    io_requestor_0_resp_valid <= resp_valid_0 @[PTW.scala 313:32]
    io_requestor_0_resp_bits_ae <= resp_ae @[PTW.scala 314:34]
    io_requestor_0_resp_bits_pte_ppn <= r_pte_ppn @[PTW.scala 315:35]
    skip
    io_requestor_0_resp_bits_pte_d <= r_pte_d @[PTW.scala 315:35]
    io_requestor_0_resp_bits_pte_a <= r_pte_a @[PTW.scala 315:35]
    io_requestor_0_resp_bits_pte_g <= r_pte_g @[PTW.scala 315:35]
    io_requestor_0_resp_bits_pte_u <= r_pte_u @[PTW.scala 315:35]
    io_requestor_0_resp_bits_pte_x <= r_pte_x @[PTW.scala 315:35]
    io_requestor_0_resp_bits_pte_w <= r_pte_w @[PTW.scala 315:35]
    io_requestor_0_resp_bits_pte_r <= r_pte_r @[PTW.scala 315:35]
    io_requestor_0_resp_bits_pte_v <= r_pte_v @[PTW.scala 315:35]
    io_requestor_0_resp_bits_level <= count @[PTW.scala 316:37]
    skip
    io_requestor_0_resp_bits_homogeneous <= and(pmaHomogeneous, pmpHomogeneous) @[PTW.scala 310:36]
    io_requestor_0_ptbr_mode <= io_dpath_ptbr_mode @[PTW.scala 319:26]
    skip
    skip
    io_requestor_0_status_debug <= io_dpath_status_debug @[PTW.scala 321:28]
    skip
    skip
    skip
    io_requestor_0_status_dprv <= io_dpath_status_dprv @[PTW.scala 321:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_0_status_mxr <= io_dpath_status_mxr @[PTW.scala 321:28]
    io_requestor_0_status_sum <= io_dpath_status_sum @[PTW.scala 321:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_0_pmp_0_cfg_l <= io_dpath_pmp_0_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_0_pmp_0_cfg_a <= io_dpath_pmp_0_cfg_a @[PTW.scala 322:25]
    io_requestor_0_pmp_0_cfg_x <= io_dpath_pmp_0_cfg_x @[PTW.scala 322:25]
    io_requestor_0_pmp_0_cfg_w <= io_dpath_pmp_0_cfg_w @[PTW.scala 322:25]
    io_requestor_0_pmp_0_cfg_r <= io_dpath_pmp_0_cfg_r @[PTW.scala 322:25]
    io_requestor_0_pmp_0_addr <= io_dpath_pmp_0_addr @[PTW.scala 322:25]
    io_requestor_0_pmp_0_mask <= io_dpath_pmp_0_mask @[PTW.scala 322:25]
    io_requestor_0_pmp_1_cfg_l <= io_dpath_pmp_1_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_0_pmp_1_cfg_a <= io_dpath_pmp_1_cfg_a @[PTW.scala 322:25]
    io_requestor_0_pmp_1_cfg_x <= io_dpath_pmp_1_cfg_x @[PTW.scala 322:25]
    io_requestor_0_pmp_1_cfg_w <= io_dpath_pmp_1_cfg_w @[PTW.scala 322:25]
    io_requestor_0_pmp_1_cfg_r <= io_dpath_pmp_1_cfg_r @[PTW.scala 322:25]
    io_requestor_0_pmp_1_addr <= io_dpath_pmp_1_addr @[PTW.scala 322:25]
    io_requestor_0_pmp_1_mask <= io_dpath_pmp_1_mask @[PTW.scala 322:25]
    io_requestor_0_pmp_2_cfg_l <= io_dpath_pmp_2_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_0_pmp_2_cfg_a <= io_dpath_pmp_2_cfg_a @[PTW.scala 322:25]
    io_requestor_0_pmp_2_cfg_x <= io_dpath_pmp_2_cfg_x @[PTW.scala 322:25]
    io_requestor_0_pmp_2_cfg_w <= io_dpath_pmp_2_cfg_w @[PTW.scala 322:25]
    io_requestor_0_pmp_2_cfg_r <= io_dpath_pmp_2_cfg_r @[PTW.scala 322:25]
    io_requestor_0_pmp_2_addr <= io_dpath_pmp_2_addr @[PTW.scala 322:25]
    io_requestor_0_pmp_2_mask <= io_dpath_pmp_2_mask @[PTW.scala 322:25]
    io_requestor_0_pmp_3_cfg_l <= io_dpath_pmp_3_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_0_pmp_3_cfg_a <= io_dpath_pmp_3_cfg_a @[PTW.scala 322:25]
    io_requestor_0_pmp_3_cfg_x <= io_dpath_pmp_3_cfg_x @[PTW.scala 322:25]
    io_requestor_0_pmp_3_cfg_w <= io_dpath_pmp_3_cfg_w @[PTW.scala 322:25]
    io_requestor_0_pmp_3_cfg_r <= io_dpath_pmp_3_cfg_r @[PTW.scala 322:25]
    io_requestor_0_pmp_3_addr <= io_dpath_pmp_3_addr @[PTW.scala 322:25]
    io_requestor_0_pmp_3_mask <= io_dpath_pmp_3_mask @[PTW.scala 322:25]
    io_requestor_0_pmp_4_cfg_l <= io_dpath_pmp_4_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_0_pmp_4_cfg_a <= io_dpath_pmp_4_cfg_a @[PTW.scala 322:25]
    io_requestor_0_pmp_4_cfg_x <= io_dpath_pmp_4_cfg_x @[PTW.scala 322:25]
    io_requestor_0_pmp_4_cfg_w <= io_dpath_pmp_4_cfg_w @[PTW.scala 322:25]
    io_requestor_0_pmp_4_cfg_r <= io_dpath_pmp_4_cfg_r @[PTW.scala 322:25]
    io_requestor_0_pmp_4_addr <= io_dpath_pmp_4_addr @[PTW.scala 322:25]
    io_requestor_0_pmp_4_mask <= io_dpath_pmp_4_mask @[PTW.scala 322:25]
    io_requestor_0_pmp_5_cfg_l <= io_dpath_pmp_5_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_0_pmp_5_cfg_a <= io_dpath_pmp_5_cfg_a @[PTW.scala 322:25]
    io_requestor_0_pmp_5_cfg_x <= io_dpath_pmp_5_cfg_x @[PTW.scala 322:25]
    io_requestor_0_pmp_5_cfg_w <= io_dpath_pmp_5_cfg_w @[PTW.scala 322:25]
    io_requestor_0_pmp_5_cfg_r <= io_dpath_pmp_5_cfg_r @[PTW.scala 322:25]
    io_requestor_0_pmp_5_addr <= io_dpath_pmp_5_addr @[PTW.scala 322:25]
    io_requestor_0_pmp_5_mask <= io_dpath_pmp_5_mask @[PTW.scala 322:25]
    io_requestor_0_pmp_6_cfg_l <= io_dpath_pmp_6_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_0_pmp_6_cfg_a <= io_dpath_pmp_6_cfg_a @[PTW.scala 322:25]
    io_requestor_0_pmp_6_cfg_x <= io_dpath_pmp_6_cfg_x @[PTW.scala 322:25]
    io_requestor_0_pmp_6_cfg_w <= io_dpath_pmp_6_cfg_w @[PTW.scala 322:25]
    io_requestor_0_pmp_6_cfg_r <= io_dpath_pmp_6_cfg_r @[PTW.scala 322:25]
    io_requestor_0_pmp_6_addr <= io_dpath_pmp_6_addr @[PTW.scala 322:25]
    io_requestor_0_pmp_6_mask <= io_dpath_pmp_6_mask @[PTW.scala 322:25]
    io_requestor_0_pmp_7_cfg_l <= io_dpath_pmp_7_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_0_pmp_7_cfg_a <= io_dpath_pmp_7_cfg_a @[PTW.scala 322:25]
    io_requestor_0_pmp_7_cfg_x <= io_dpath_pmp_7_cfg_x @[PTW.scala 322:25]
    io_requestor_0_pmp_7_cfg_w <= io_dpath_pmp_7_cfg_w @[PTW.scala 322:25]
    io_requestor_0_pmp_7_cfg_r <= io_dpath_pmp_7_cfg_r @[PTW.scala 322:25]
    io_requestor_0_pmp_7_addr <= io_dpath_pmp_7_addr @[PTW.scala 322:25]
    io_requestor_0_pmp_7_mask <= io_dpath_pmp_7_mask @[PTW.scala 322:25]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_1_req_ready <= arb.io_in_1_ready @[PTW.scala 113:13]
    io_requestor_1_resp_valid <= resp_valid_1 @[PTW.scala 313:32]
    io_requestor_1_resp_bits_ae <= resp_ae @[PTW.scala 314:34]
    io_requestor_1_resp_bits_pte_ppn <= r_pte_ppn @[PTW.scala 315:35]
    skip
    io_requestor_1_resp_bits_pte_d <= r_pte_d @[PTW.scala 315:35]
    io_requestor_1_resp_bits_pte_a <= r_pte_a @[PTW.scala 315:35]
    io_requestor_1_resp_bits_pte_g <= r_pte_g @[PTW.scala 315:35]
    io_requestor_1_resp_bits_pte_u <= r_pte_u @[PTW.scala 315:35]
    io_requestor_1_resp_bits_pte_x <= r_pte_x @[PTW.scala 315:35]
    io_requestor_1_resp_bits_pte_w <= r_pte_w @[PTW.scala 315:35]
    io_requestor_1_resp_bits_pte_r <= r_pte_r @[PTW.scala 315:35]
    io_requestor_1_resp_bits_pte_v <= r_pte_v @[PTW.scala 315:35]
    io_requestor_1_resp_bits_level <= count @[PTW.scala 316:37]
    skip
    io_requestor_1_resp_bits_homogeneous <= and(pmaHomogeneous, pmpHomogeneous) @[PTW.scala 310:36]
    io_requestor_1_ptbr_mode <= io_dpath_ptbr_mode @[PTW.scala 319:26]
    skip
    skip
    io_requestor_1_status_debug <= io_dpath_status_debug @[PTW.scala 321:28]
    skip
    skip
    skip
    skip
    io_requestor_1_status_prv <= io_dpath_status_prv @[PTW.scala 321:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_requestor_1_pmp_0_cfg_l <= io_dpath_pmp_0_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_1_pmp_0_cfg_a <= io_dpath_pmp_0_cfg_a @[PTW.scala 322:25]
    io_requestor_1_pmp_0_cfg_x <= io_dpath_pmp_0_cfg_x @[PTW.scala 322:25]
    io_requestor_1_pmp_0_cfg_w <= io_dpath_pmp_0_cfg_w @[PTW.scala 322:25]
    io_requestor_1_pmp_0_cfg_r <= io_dpath_pmp_0_cfg_r @[PTW.scala 322:25]
    io_requestor_1_pmp_0_addr <= io_dpath_pmp_0_addr @[PTW.scala 322:25]
    io_requestor_1_pmp_0_mask <= io_dpath_pmp_0_mask @[PTW.scala 322:25]
    io_requestor_1_pmp_1_cfg_l <= io_dpath_pmp_1_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_1_pmp_1_cfg_a <= io_dpath_pmp_1_cfg_a @[PTW.scala 322:25]
    io_requestor_1_pmp_1_cfg_x <= io_dpath_pmp_1_cfg_x @[PTW.scala 322:25]
    io_requestor_1_pmp_1_cfg_w <= io_dpath_pmp_1_cfg_w @[PTW.scala 322:25]
    io_requestor_1_pmp_1_cfg_r <= io_dpath_pmp_1_cfg_r @[PTW.scala 322:25]
    io_requestor_1_pmp_1_addr <= io_dpath_pmp_1_addr @[PTW.scala 322:25]
    io_requestor_1_pmp_1_mask <= io_dpath_pmp_1_mask @[PTW.scala 322:25]
    io_requestor_1_pmp_2_cfg_l <= io_dpath_pmp_2_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_1_pmp_2_cfg_a <= io_dpath_pmp_2_cfg_a @[PTW.scala 322:25]
    io_requestor_1_pmp_2_cfg_x <= io_dpath_pmp_2_cfg_x @[PTW.scala 322:25]
    io_requestor_1_pmp_2_cfg_w <= io_dpath_pmp_2_cfg_w @[PTW.scala 322:25]
    io_requestor_1_pmp_2_cfg_r <= io_dpath_pmp_2_cfg_r @[PTW.scala 322:25]
    io_requestor_1_pmp_2_addr <= io_dpath_pmp_2_addr @[PTW.scala 322:25]
    io_requestor_1_pmp_2_mask <= io_dpath_pmp_2_mask @[PTW.scala 322:25]
    io_requestor_1_pmp_3_cfg_l <= io_dpath_pmp_3_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_1_pmp_3_cfg_a <= io_dpath_pmp_3_cfg_a @[PTW.scala 322:25]
    io_requestor_1_pmp_3_cfg_x <= io_dpath_pmp_3_cfg_x @[PTW.scala 322:25]
    io_requestor_1_pmp_3_cfg_w <= io_dpath_pmp_3_cfg_w @[PTW.scala 322:25]
    io_requestor_1_pmp_3_cfg_r <= io_dpath_pmp_3_cfg_r @[PTW.scala 322:25]
    io_requestor_1_pmp_3_addr <= io_dpath_pmp_3_addr @[PTW.scala 322:25]
    io_requestor_1_pmp_3_mask <= io_dpath_pmp_3_mask @[PTW.scala 322:25]
    io_requestor_1_pmp_4_cfg_l <= io_dpath_pmp_4_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_1_pmp_4_cfg_a <= io_dpath_pmp_4_cfg_a @[PTW.scala 322:25]
    io_requestor_1_pmp_4_cfg_x <= io_dpath_pmp_4_cfg_x @[PTW.scala 322:25]
    io_requestor_1_pmp_4_cfg_w <= io_dpath_pmp_4_cfg_w @[PTW.scala 322:25]
    io_requestor_1_pmp_4_cfg_r <= io_dpath_pmp_4_cfg_r @[PTW.scala 322:25]
    io_requestor_1_pmp_4_addr <= io_dpath_pmp_4_addr @[PTW.scala 322:25]
    io_requestor_1_pmp_4_mask <= io_dpath_pmp_4_mask @[PTW.scala 322:25]
    io_requestor_1_pmp_5_cfg_l <= io_dpath_pmp_5_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_1_pmp_5_cfg_a <= io_dpath_pmp_5_cfg_a @[PTW.scala 322:25]
    io_requestor_1_pmp_5_cfg_x <= io_dpath_pmp_5_cfg_x @[PTW.scala 322:25]
    io_requestor_1_pmp_5_cfg_w <= io_dpath_pmp_5_cfg_w @[PTW.scala 322:25]
    io_requestor_1_pmp_5_cfg_r <= io_dpath_pmp_5_cfg_r @[PTW.scala 322:25]
    io_requestor_1_pmp_5_addr <= io_dpath_pmp_5_addr @[PTW.scala 322:25]
    io_requestor_1_pmp_5_mask <= io_dpath_pmp_5_mask @[PTW.scala 322:25]
    io_requestor_1_pmp_6_cfg_l <= io_dpath_pmp_6_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_1_pmp_6_cfg_a <= io_dpath_pmp_6_cfg_a @[PTW.scala 322:25]
    io_requestor_1_pmp_6_cfg_x <= io_dpath_pmp_6_cfg_x @[PTW.scala 322:25]
    io_requestor_1_pmp_6_cfg_w <= io_dpath_pmp_6_cfg_w @[PTW.scala 322:25]
    io_requestor_1_pmp_6_cfg_r <= io_dpath_pmp_6_cfg_r @[PTW.scala 322:25]
    io_requestor_1_pmp_6_addr <= io_dpath_pmp_6_addr @[PTW.scala 322:25]
    io_requestor_1_pmp_6_mask <= io_dpath_pmp_6_mask @[PTW.scala 322:25]
    io_requestor_1_pmp_7_cfg_l <= io_dpath_pmp_7_cfg_l @[PTW.scala 322:25]
    skip
    io_requestor_1_pmp_7_cfg_a <= io_dpath_pmp_7_cfg_a @[PTW.scala 322:25]
    io_requestor_1_pmp_7_cfg_x <= io_dpath_pmp_7_cfg_x @[PTW.scala 322:25]
    io_requestor_1_pmp_7_cfg_w <= io_dpath_pmp_7_cfg_w @[PTW.scala 322:25]
    io_requestor_1_pmp_7_cfg_r <= io_dpath_pmp_7_cfg_r @[PTW.scala 322:25]
    io_requestor_1_pmp_7_addr <= io_dpath_pmp_7_addr @[PTW.scala 322:25]
    io_requestor_1_pmp_7_mask <= io_dpath_pmp_7_mask @[PTW.scala 322:25]
    skip
    skip
    io_requestor_1_customCSRs_csrs_0_value <= io_dpath_customCSRs_csrs_0_value @[PTW.scala 320:32]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_mem_req_valid <= or(_T_55, _io_mem_req_valid_T_1) @[PTW.scala 287:39]
    io_mem_req_bits_addr <= bits(pte_addr, 39, 0) @[PTW.scala 292:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_mem_s1_kill <= or(s2_hit, _io_mem_s1_kill_T) @[PTW.scala 295:28]
    skip
    skip
    skip
    skip
    skip
    io_dpath_perf_l2hit <= and(s2_valid, s2_hit_vec_0) @[PTW.scala 263:27]
    io_dpath_perf_pte_miss <= mux(_T_144, UInt<1>("h0"), _GEN_2145) @[Conditional.scala 40:58 PTW.scala 196:26]
    io_dpath_perf_pte_hit <= and(_io_dpath_perf_pte_hit_T_1, _io_dpath_perf_pte_hit_T_2) @[PTW.scala 197:57]
    skip
    state <= mux(reset, UInt<3>("h0"), state_barrier.io_y) @[PTW.scala 109:{18,18} 327:9]
    skip
    skip
    arb.io_in_0_valid <= io_requestor_0_req_valid @[PTW.scala 113:13]
    skip
    arb.io_in_0_bits_bits_addr <= io_requestor_0_req_bits_bits_addr @[PTW.scala 113:13]
    arb.io_in_1_valid <= io_requestor_1_req_valid @[PTW.scala 113:13]
    arb.io_in_1_bits_valid <= io_requestor_1_req_bits_valid @[PTW.scala 113:13]
    arb.io_in_1_bits_bits_addr <= io_requestor_1_req_bits_bits_addr @[PTW.scala 113:13]
    arb.io_out_ready <= and(_arb_io_out_ready_T, _arb_io_out_ready_T_1) @[PTW.scala 114:43]
    resp_valid_0 <= mux(mem_resp_valid, _GEN_2174, _GEN_2161) @[PTW.scala 388:25]
    resp_valid_1 <= mux(mem_resp_valid, _GEN_2175, _GEN_2162) @[PTW.scala 388:25]
    invalidated <= or(io_dpath_sfence_valid, _invalidated_T_1) @[PTW.scala 285:40]
    count <= mux(mem_resp_valid, _GEN_2171, _GEN_2164) @[PTW.scala 388:25]
    resp_ae <= mux(mem_resp_valid, _GEN_2173, _GEN_2163) @[PTW.scala 388:25]
    skip
    r_req_addr <= mux(_T_22, arb.io_out_bits_bits_addr, r_req_addr) @[PTW.scala 167:28 168:11 130:18]
    r_req_dest <= mux(_T_22, arb.io_chosen, r_req_dest) @[PTW.scala 167:28 169:16 131:23]
    r_pte_ppn <= r_pte_barrier.io_y_ppn @[PTW.scala 373:9]
    skip
    r_pte_d <= r_pte_barrier.io_y_d @[PTW.scala 373:9]
    r_pte_a <= r_pte_barrier.io_y_a @[PTW.scala 373:9]
    r_pte_g <= r_pte_barrier.io_y_g @[PTW.scala 373:9]
    r_pte_u <= r_pte_barrier.io_y_u @[PTW.scala 373:9]
    r_pte_x <= r_pte_barrier.io_y_x @[PTW.scala 373:9]
    r_pte_w <= r_pte_barrier.io_y_w @[PTW.scala 373:9]
    r_pte_r <= r_pte_barrier.io_y_r @[PTW.scala 373:9]
    r_pte_v <= r_pte_barrier.io_y_v @[PTW.scala 373:9]
    mem_resp_valid <= io_mem_resp_valid @[PTW.scala 134:31]
    mem_resp_data <= io_mem_resp_bits_data @[PTW.scala 135:30]
    state_reg <= mux(reset, UInt<7>("h0"), _GEN_38) @[Replacement.scala 168:{70,70}]
    valid <= mux(reset, UInt<8>("h0"), _GEN_39) @[PTW.scala 175:{24,24}]
    tags_0 <= mux(_T_28, _GEN_5, tags_0) @[PTW.scala 176:19 181:63]
    tags_1 <= mux(_T_28, _GEN_6, tags_1) @[PTW.scala 176:19 181:63]
    tags_2 <= mux(_T_28, _GEN_7, tags_2) @[PTW.scala 176:19 181:63]
    tags_3 <= mux(_T_28, _GEN_8, tags_3) @[PTW.scala 176:19 181:63]
    tags_4 <= mux(_T_28, _GEN_9, tags_4) @[PTW.scala 176:19 181:63]
    tags_5 <= mux(_T_28, _GEN_10, tags_5) @[PTW.scala 176:19 181:63]
    tags_6 <= mux(_T_28, _GEN_11, tags_6) @[PTW.scala 176:19 181:63]
    tags_7 <= mux(_T_28, _GEN_12, tags_7) @[PTW.scala 176:19 181:63]
    data_0 <= mux(_T_28, _GEN_13, data_0) @[PTW.scala 177:19 181:63]
    data_1 <= mux(_T_28, _GEN_14, data_1) @[PTW.scala 177:19 181:63]
    data_2 <= mux(_T_28, _GEN_15, data_2) @[PTW.scala 177:19 181:63]
    data_3 <= mux(_T_28, _GEN_16, data_3) @[PTW.scala 177:19 181:63]
    data_4 <= mux(_T_28, _GEN_17, data_4) @[PTW.scala 177:19 181:63]
    data_5 <= mux(_T_28, _GEN_18, data_5) @[PTW.scala 177:19 181:63]
    data_6 <= mux(_T_28, _GEN_19, data_6) @[PTW.scala 177:19 181:63]
    data_7 <= mux(_T_28, _GEN_20, data_7) @[PTW.scala 177:19 181:63]
    pte_hit <= mux(_T_144, UInt<1>("h0"), _GEN_2143) @[Conditional.scala 40:58 PTW.scala 195:24]
    l2_refill <= and(mem_resp_valid, _GEN_2172) @[PTW.scala 388:25 201:26]
    l2_tlb_ram_0.s1_rdata.addr <= bits(arb.io_out_bits_bits_addr, 9, 0) @[PTW.scala 254:54]
    l2_tlb_ram_0.s1_rdata.en <= and(_arb_io_out_ready_T_1, _T_22) @[PTW.scala 251:31]
    l2_tlb_ram_0.s1_rdata.clk <= clock @[PTW.scala 254:{28,28}]
    l2_tlb_ram_0.MPORT.addr <= bits(r_req_addr, 9, 0) @[package.scala 154:13]
    l2_tlb_ram_0.MPORT.en <= and(l2_refill, _T_27) @[PTW.scala 227:21]
    l2_tlb_ram_0.MPORT.clk <= clock @[PTW.scala 227:38]
    l2_tlb_ram_0.MPORT.data <= cat(hi_9, lo_9) @[Cat.scala 30:58]
    l2_tlb_ram_0.MPORT.mask <= UInt<1>("h1")
    g_0 <= mux(_T_102, _T_109, g_0) @[PTW.scala 223:16 227:38]
    valid_1_0 <= mux(reset, UInt<1024>("h0"), _GEN_59) @[PTW.scala 224:{24,24}]
    s1_valid <= and(s0_valid, arb.io_out_bits_valid) @[PTW.scala 252:37]
    s2_valid <= s1_valid @[PTW.scala 253:27]
    r_1 <= mux(s1_valid, l2_tlb_ram_0.s1_rdata.data, r_1) @[Reg.scala 15:16 16:{19,23}]
    s2_valid_vec <= mux(s1_valid, r_valid_vec, s2_valid_vec) @[Reg.scala 15:16 16:{19,23}]
    s2_g_vec_0 <= mux(s1_valid, _T_124, s2_g_vec_0) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    state_barrier.io_x <= mux(io_mem_s2_nack, UInt<3>("h1"), _GEN_2176) @[PTW.scala 405:25 407:16]
    skip
    skip
    r_pte_barrier.io_x_ppn <= mux(mem_resp_valid, res_ppn, _r_pte_T_11_ppn) @[PTW.scala 374:8]
    skip
    r_pte_barrier.io_x_d <= mux(mem_resp_valid, tmp_d, _r_pte_T_11_d) @[PTW.scala 374:8]
    r_pte_barrier.io_x_a <= mux(mem_resp_valid, tmp_a, _r_pte_T_11_a) @[PTW.scala 374:8]
    r_pte_barrier.io_x_g <= mux(mem_resp_valid, tmp_g, _r_pte_T_11_g) @[PTW.scala 374:8]
    r_pte_barrier.io_x_u <= mux(mem_resp_valid, tmp_u, _r_pte_T_11_u) @[PTW.scala 374:8]
    r_pte_barrier.io_x_x <= mux(mem_resp_valid, tmp_x, _r_pte_T_11_x) @[PTW.scala 374:8]
    r_pte_barrier.io_x_w <= mux(mem_resp_valid, tmp_w, _r_pte_T_11_w) @[PTW.scala 374:8]
    r_pte_barrier.io_x_r <= mux(mem_resp_valid, tmp_r, _r_pte_T_11_r) @[PTW.scala 374:8]
    r_pte_barrier.io_x_v <= mux(mem_resp_valid, res_v, _r_pte_T_11_v) @[PTW.scala 374:8]
    printf(clock, _T_99, "Assertion failed: PTE Cache Hit/Miss Performance Monitor Events are lower priority than L2TLB Hit event\n    at PTW.scala:198 assert(!(io.dpath.perf.l2hit && (io.dpath.perf.pte_miss || io.dpath.perf.pte_hit)),\n") @[PTW.scala 198:9]
    stop(clock, _T_99, 1) @[PTW.scala 198:9]
    printf(clock, and(s2_hit, _T_142), "Assertion failed: L2 TLB multi-hit\n    at PTW.scala:268 assert((PopCount(s2_hit_vec) === 1.U) || s2_error, \"L2 TLB multi-hit\")\n") @[PTW.scala 268:13]
    stop(clock, and(s2_hit, _T_142), 1) @[PTW.scala 268:13]
    printf(clock, and(_r_pte_T_1, _T_162), "Assertion failed\n    at PTW.scala:382 assert(state === s_req || state === s_wait1)\n") @[PTW.scala 382:11]
    stop(clock, and(_r_pte_T_1, _T_162), 1) @[PTW.scala 382:11]
    printf(clock, and(mem_resp_valid, _T_168), "Assertion failed\n    at PTW.scala:389 assert(state === s_wait3)\n") @[PTW.scala 389:11]
    stop(clock, and(mem_resp_valid, _T_168), 1) @[PTW.scala 389:11]
    printf(clock, and(io_mem_s2_nack, _T_178), "Assertion failed\n    at PTW.scala:406 assert(state === s_wait2)\n") @[PTW.scala 406:11]
    stop(clock, and(io_mem_s2_nack, _T_178), 1) @[PTW.scala 406:11]

  module Rocket :
    input clock : Clock
    input reset : UInt<1>
    input io_hartid : UInt<1>
    input io_interrupts_debug : UInt<1>
    input io_interrupts_mtip : UInt<1>
    input io_interrupts_msip : UInt<1>
    input io_interrupts_meip : UInt<1>
    input io_interrupts_seip : UInt<1>
    output io_imem_might_request : UInt<1>
    output io_imem_req_valid : UInt<1>
    output io_imem_req_bits_pc : UInt<40>
    output io_imem_req_bits_speculative : UInt<1>
    output io_imem_sfence_valid : UInt<1>
    output io_imem_sfence_bits_rs1 : UInt<1>
    output io_imem_sfence_bits_rs2 : UInt<1>
    output io_imem_sfence_bits_addr : UInt<39>
    output io_imem_resp_ready : UInt<1>
    input io_imem_resp_valid : UInt<1>
    input io_imem_resp_bits_btb_taken : UInt<1>
    input io_imem_resp_bits_btb_bridx : UInt<1>
    input io_imem_resp_bits_btb_entry : UInt<5>
    input io_imem_resp_bits_btb_bht_history : UInt<8>
    input io_imem_resp_bits_pc : UInt<40>
    input io_imem_resp_bits_data : UInt<32>
    input io_imem_resp_bits_xcpt_pf_inst : UInt<1>
    input io_imem_resp_bits_xcpt_ae_inst : UInt<1>
    input io_imem_resp_bits_replay : UInt<1>
    output io_imem_btb_update_valid : UInt<1>
    output io_imem_btb_update_bits_prediction_entry : UInt<5>
    output io_imem_btb_update_bits_pc : UInt<39>
    output io_imem_btb_update_bits_isValid : UInt<1>
    output io_imem_btb_update_bits_br_pc : UInt<39>
    output io_imem_btb_update_bits_cfiType : UInt<2>
    output io_imem_bht_update_valid : UInt<1>
    output io_imem_bht_update_bits_prediction_history : UInt<8>
    output io_imem_bht_update_bits_pc : UInt<39>
    output io_imem_bht_update_bits_branch : UInt<1>
    output io_imem_bht_update_bits_taken : UInt<1>
    output io_imem_bht_update_bits_mispredict : UInt<1>
    output io_imem_flush_icache : UInt<1>
    input io_dmem_req_ready : UInt<1>
    output io_dmem_req_valid : UInt<1>
    output io_dmem_req_bits_addr : UInt<40>
    output io_dmem_req_bits_tag : UInt<7>
    output io_dmem_req_bits_cmd : UInt<5>
    output io_dmem_req_bits_size : UInt<2>
    output io_dmem_req_bits_signed : UInt<1>
    output io_dmem_s1_kill : UInt<1>
    output io_dmem_s1_data_data : UInt<64>
    input io_dmem_s2_nack : UInt<1>
    input io_dmem_resp_valid : UInt<1>
    input io_dmem_resp_bits_tag : UInt<7>
    input io_dmem_resp_bits_size : UInt<2>
    input io_dmem_resp_bits_data : UInt<64>
    input io_dmem_resp_bits_replay : UInt<1>
    input io_dmem_resp_bits_has_data : UInt<1>
    input io_dmem_resp_bits_data_word_bypass : UInt<64>
    input io_dmem_replay_next : UInt<1>
    input io_dmem_s2_xcpt_ma_ld : UInt<1>
    input io_dmem_s2_xcpt_ma_st : UInt<1>
    input io_dmem_s2_xcpt_pf_ld : UInt<1>
    input io_dmem_s2_xcpt_pf_st : UInt<1>
    input io_dmem_s2_xcpt_ae_ld : UInt<1>
    input io_dmem_s2_xcpt_ae_st : UInt<1>
    input io_dmem_ordered : UInt<1>
    input io_dmem_perf_release : UInt<1>
    input io_dmem_perf_grant : UInt<1>
    output io_ptw_ptbr_mode : UInt<4>
    output io_ptw_ptbr_ppn : UInt<44>
    output io_ptw_sfence_valid : UInt<1>
    output io_ptw_sfence_bits_rs1 : UInt<1>
    output io_ptw_sfence_bits_rs2 : UInt<1>
    output io_ptw_sfence_bits_addr : UInt<39>
    output io_ptw_status_debug : UInt<1>
    output io_ptw_status_dprv : UInt<2>
    output io_ptw_status_prv : UInt<2>
    output io_ptw_status_mxr : UInt<1>
    output io_ptw_status_sum : UInt<1>
    output io_ptw_pmp_0_cfg_l : UInt<1>
    output io_ptw_pmp_0_cfg_a : UInt<2>
    output io_ptw_pmp_0_cfg_x : UInt<1>
    output io_ptw_pmp_0_cfg_w : UInt<1>
    output io_ptw_pmp_0_cfg_r : UInt<1>
    output io_ptw_pmp_0_addr : UInt<30>
    output io_ptw_pmp_0_mask : UInt<32>
    output io_ptw_pmp_1_cfg_l : UInt<1>
    output io_ptw_pmp_1_cfg_a : UInt<2>
    output io_ptw_pmp_1_cfg_x : UInt<1>
    output io_ptw_pmp_1_cfg_w : UInt<1>
    output io_ptw_pmp_1_cfg_r : UInt<1>
    output io_ptw_pmp_1_addr : UInt<30>
    output io_ptw_pmp_1_mask : UInt<32>
    output io_ptw_pmp_2_cfg_l : UInt<1>
    output io_ptw_pmp_2_cfg_a : UInt<2>
    output io_ptw_pmp_2_cfg_x : UInt<1>
    output io_ptw_pmp_2_cfg_w : UInt<1>
    output io_ptw_pmp_2_cfg_r : UInt<1>
    output io_ptw_pmp_2_addr : UInt<30>
    output io_ptw_pmp_2_mask : UInt<32>
    output io_ptw_pmp_3_cfg_l : UInt<1>
    output io_ptw_pmp_3_cfg_a : UInt<2>
    output io_ptw_pmp_3_cfg_x : UInt<1>
    output io_ptw_pmp_3_cfg_w : UInt<1>
    output io_ptw_pmp_3_cfg_r : UInt<1>
    output io_ptw_pmp_3_addr : UInt<30>
    output io_ptw_pmp_3_mask : UInt<32>
    output io_ptw_pmp_4_cfg_l : UInt<1>
    output io_ptw_pmp_4_cfg_a : UInt<2>
    output io_ptw_pmp_4_cfg_x : UInt<1>
    output io_ptw_pmp_4_cfg_w : UInt<1>
    output io_ptw_pmp_4_cfg_r : UInt<1>
    output io_ptw_pmp_4_addr : UInt<30>
    output io_ptw_pmp_4_mask : UInt<32>
    output io_ptw_pmp_5_cfg_l : UInt<1>
    output io_ptw_pmp_5_cfg_a : UInt<2>
    output io_ptw_pmp_5_cfg_x : UInt<1>
    output io_ptw_pmp_5_cfg_w : UInt<1>
    output io_ptw_pmp_5_cfg_r : UInt<1>
    output io_ptw_pmp_5_addr : UInt<30>
    output io_ptw_pmp_5_mask : UInt<32>
    output io_ptw_pmp_6_cfg_l : UInt<1>
    output io_ptw_pmp_6_cfg_a : UInt<2>
    output io_ptw_pmp_6_cfg_x : UInt<1>
    output io_ptw_pmp_6_cfg_w : UInt<1>
    output io_ptw_pmp_6_cfg_r : UInt<1>
    output io_ptw_pmp_6_addr : UInt<30>
    output io_ptw_pmp_6_mask : UInt<32>
    output io_ptw_pmp_7_cfg_l : UInt<1>
    output io_ptw_pmp_7_cfg_a : UInt<2>
    output io_ptw_pmp_7_cfg_x : UInt<1>
    output io_ptw_pmp_7_cfg_w : UInt<1>
    output io_ptw_pmp_7_cfg_r : UInt<1>
    output io_ptw_pmp_7_addr : UInt<30>
    output io_ptw_pmp_7_mask : UInt<32>
    output io_ptw_customCSRs_csrs_0_value : UInt<64>
    output io_fpu_inst : UInt<32>
    output io_fpu_fromint_data : UInt<64>
    output io_fpu_fcsr_rm : UInt<3>
    input io_fpu_fcsr_flags_valid : UInt<1>
    input io_fpu_fcsr_flags_bits : UInt<5>
    input io_fpu_store_data : UInt<64>
    input io_fpu_toint_data : UInt<64>
    output io_fpu_dmem_resp_val : UInt<1>
    output io_fpu_dmem_resp_type : UInt<3>
    output io_fpu_dmem_resp_tag : UInt<5>
    output io_fpu_dmem_resp_data : UInt<64>
    output io_fpu_valid : UInt<1>
    input io_fpu_fcsr_rdy : UInt<1>
    input io_fpu_nack_mem : UInt<1>
    input io_fpu_illegal_rm : UInt<1>
    output io_fpu_killx : UInt<1>
    output io_fpu_killm : UInt<1>
    input io_fpu_dec_wen : UInt<1>
    input io_fpu_dec_ren1 : UInt<1>
    input io_fpu_dec_ren2 : UInt<1>
    input io_fpu_dec_ren3 : UInt<1>
    input io_fpu_sboard_set : UInt<1>
    input io_fpu_sboard_clr : UInt<1>
    input io_fpu_sboard_clra : UInt<5>
    output io_trace_0_valid : UInt<1>
    output io_trace_0_iaddr : UInt<40>
    output io_trace_0_insn : UInt<32>
    output io_trace_0_priv : UInt<3>
    output io_trace_0_exception : UInt<1>
    output io_trace_0_interrupt : UInt<1>
    output io_trace_0_cause : UInt<64>
    output io_trace_0_tval : UInt<40>
    output io_wfi : UInt<1>

    inst ibuf of IBuf @[RocketCore.scala 254:20]
    mem rf : @[RocketCore.scala 1015:15]
      data-type => UInt<64>
      depth => 31
      read-latency => 0
      write-latency => 1
      reader => id_rs_MPORT
      reader => id_rs_MPORT_1
      writer => MPORT
      read-under-write => undefined
    inst csr of CSRFile @[RocketCore.scala 282:19]
    inst bpu of BreakpointUnit @[RocketCore.scala 323:19]
    inst alu of ALU @[RocketCore.scala 385:19]
    inst div of MulDiv @[RocketCore.scala 409:19]
    inst PlusArgTimeout of PlusArgTimeout @[PlusArg.scala 89:11]
    skip
    skip
    reg id_reg_pause : UInt<1>, clock with :
      reset => (UInt<1>("h0"), id_reg_pause) @[RocketCore.scala 114:25]
    reg imem_might_request_reg : UInt<1>, clock with :
      reset => (UInt<1>("h0"), imem_might_request_reg) @[RocketCore.scala 115:35]
    skip
    reg ex_ctrl_fp : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_fp) @[RocketCore.scala 190:20]
    skip
    reg ex_ctrl_branch : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_branch) @[RocketCore.scala 190:20]
    reg ex_ctrl_jal : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_jal) @[RocketCore.scala 190:20]
    reg ex_ctrl_jalr : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_jalr) @[RocketCore.scala 190:20]
    reg ex_ctrl_rxs2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_rxs2) @[RocketCore.scala 190:20]
    reg ex_ctrl_rxs1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_rxs1) @[RocketCore.scala 190:20]
    skip
    reg ex_ctrl_sel_alu2 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_sel_alu2) @[RocketCore.scala 190:20]
    reg ex_ctrl_sel_alu1 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_sel_alu1) @[RocketCore.scala 190:20]
    reg ex_ctrl_sel_imm : UInt<3>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_sel_imm) @[RocketCore.scala 190:20]
    reg ex_ctrl_alu_dw : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_alu_dw) @[RocketCore.scala 190:20]
    reg ex_ctrl_alu_fn : UInt<4>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_alu_fn) @[RocketCore.scala 190:20]
    reg ex_ctrl_mem : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_mem) @[RocketCore.scala 190:20]
    reg ex_ctrl_mem_cmd : UInt<5>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_mem_cmd) @[RocketCore.scala 190:20]
    reg ex_ctrl_rfs1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_rfs1) @[RocketCore.scala 190:20]
    reg ex_ctrl_rfs2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_rfs2) @[RocketCore.scala 190:20]
    skip
    reg ex_ctrl_wfd : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_wfd) @[RocketCore.scala 190:20]
    skip
    reg ex_ctrl_div : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_div) @[RocketCore.scala 190:20]
    reg ex_ctrl_wxd : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_wxd) @[RocketCore.scala 190:20]
    reg ex_ctrl_csr : UInt<3>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_csr) @[RocketCore.scala 190:20]
    reg ex_ctrl_fence_i : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_ctrl_fence_i) @[RocketCore.scala 190:20]
    skip
    skip
    skip
    skip
    reg mem_ctrl_fp : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_fp) @[RocketCore.scala 191:21]
    skip
    reg mem_ctrl_branch : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_branch) @[RocketCore.scala 191:21]
    reg mem_ctrl_jal : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_jal) @[RocketCore.scala 191:21]
    reg mem_ctrl_jalr : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_jalr) @[RocketCore.scala 191:21]
    reg mem_ctrl_rxs2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_rxs2) @[RocketCore.scala 191:21]
    reg mem_ctrl_rxs1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_rxs1) @[RocketCore.scala 191:21]
    skip
    skip
    skip
    skip
    skip
    skip
    reg mem_ctrl_mem : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_mem) @[RocketCore.scala 191:21]
    skip
    reg mem_ctrl_rfs1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_rfs1) @[RocketCore.scala 191:21]
    reg mem_ctrl_rfs2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_rfs2) @[RocketCore.scala 191:21]
    skip
    reg mem_ctrl_wfd : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_wfd) @[RocketCore.scala 191:21]
    skip
    reg mem_ctrl_div : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_div) @[RocketCore.scala 191:21]
    reg mem_ctrl_wxd : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_wxd) @[RocketCore.scala 191:21]
    reg mem_ctrl_csr : UInt<3>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_csr) @[RocketCore.scala 191:21]
    reg mem_ctrl_fence_i : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_ctrl_fence_i) @[RocketCore.scala 191:21]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg wb_ctrl_rxs2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_rxs2) @[RocketCore.scala 192:20]
    reg wb_ctrl_rxs1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_rxs1) @[RocketCore.scala 192:20]
    skip
    skip
    skip
    skip
    skip
    skip
    reg wb_ctrl_mem : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_mem) @[RocketCore.scala 192:20]
    skip
    reg wb_ctrl_rfs1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_rfs1) @[RocketCore.scala 192:20]
    reg wb_ctrl_rfs2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_rfs2) @[RocketCore.scala 192:20]
    skip
    reg wb_ctrl_wfd : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_wfd) @[RocketCore.scala 192:20]
    skip
    reg wb_ctrl_div : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_div) @[RocketCore.scala 192:20]
    reg wb_ctrl_wxd : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_wxd) @[RocketCore.scala 192:20]
    reg wb_ctrl_csr : UInt<3>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_csr) @[RocketCore.scala 192:20]
    reg wb_ctrl_fence_i : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_ctrl_fence_i) @[RocketCore.scala 192:20]
    skip
    skip
    skip
    reg ex_reg_xcpt_interrupt : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_xcpt_interrupt) @[RocketCore.scala 194:35]
    reg ex_reg_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_valid) @[RocketCore.scala 195:35]
    reg ex_reg_rvc : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_rvc) @[RocketCore.scala 196:35]
    skip
    skip
    skip
    skip
    skip
    reg ex_reg_btb_resp_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), ex_reg_btb_resp_entry) @[RocketCore.scala 197:35]
    reg ex_reg_btb_resp_bht_history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), ex_reg_btb_resp_bht_history) @[RocketCore.scala 197:35]
    skip
    reg ex_reg_xcpt : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_xcpt) @[RocketCore.scala 198:35]
    reg ex_reg_flush_pipe : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_flush_pipe) @[RocketCore.scala 199:35]
    reg ex_reg_load_use : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_load_use) @[RocketCore.scala 200:35]
    reg ex_reg_cause : UInt<64>, clock with :
      reset => (UInt<1>("h0"), ex_reg_cause) @[RocketCore.scala 201:35]
    reg ex_reg_replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_replay) @[RocketCore.scala 202:26]
    reg ex_reg_pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), ex_reg_pc) @[RocketCore.scala 203:22]
    reg ex_reg_mem_size : UInt<2>, clock with :
      reset => (UInt<1>("h0"), ex_reg_mem_size) @[RocketCore.scala 204:28]
    reg ex_reg_inst : UInt<32>, clock with :
      reset => (UInt<1>("h0"), ex_reg_inst) @[RocketCore.scala 205:24]
    reg ex_reg_raw_inst : UInt<32>, clock with :
      reset => (UInt<1>("h0"), ex_reg_raw_inst) @[RocketCore.scala 206:28]
    skip
    skip
    skip
    reg mem_reg_xcpt_interrupt : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_xcpt_interrupt) @[RocketCore.scala 211:36]
    reg mem_reg_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_valid) @[RocketCore.scala 212:36]
    reg mem_reg_rvc : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_rvc) @[RocketCore.scala 213:36]
    skip
    skip
    skip
    skip
    skip
    reg mem_reg_btb_resp_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), mem_reg_btb_resp_entry) @[RocketCore.scala 214:36]
    reg mem_reg_btb_resp_bht_history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), mem_reg_btb_resp_bht_history) @[RocketCore.scala 214:36]
    skip
    reg mem_reg_xcpt : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_xcpt) @[RocketCore.scala 215:36]
    reg mem_reg_replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_replay) @[RocketCore.scala 216:36]
    reg mem_reg_flush_pipe : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_flush_pipe) @[RocketCore.scala 217:36]
    reg mem_reg_cause : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mem_reg_cause) @[RocketCore.scala 218:36]
    reg mem_reg_slow_bypass : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_slow_bypass) @[RocketCore.scala 219:36]
    reg mem_reg_load : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_load) @[RocketCore.scala 220:36]
    reg mem_reg_store : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_store) @[RocketCore.scala 221:36]
    reg mem_reg_sfence : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_reg_sfence) @[RocketCore.scala 222:27]
    reg mem_reg_pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), mem_reg_pc) @[RocketCore.scala 223:23]
    reg mem_reg_inst : UInt<32>, clock with :
      reset => (UInt<1>("h0"), mem_reg_inst) @[RocketCore.scala 224:25]
    reg mem_reg_mem_size : UInt<2>, clock with :
      reset => (UInt<1>("h0"), mem_reg_mem_size) @[RocketCore.scala 225:29]
    reg mem_reg_raw_inst : UInt<32>, clock with :
      reset => (UInt<1>("h0"), mem_reg_raw_inst) @[RocketCore.scala 226:29]
    skip
    skip
    reg mem_reg_wdata : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mem_reg_wdata) @[RocketCore.scala 229:26]
    reg mem_reg_rs2 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), mem_reg_rs2) @[RocketCore.scala 230:24]
    reg mem_br_taken : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mem_br_taken) @[RocketCore.scala 231:25]
    skip
    reg wb_reg_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_reg_valid) @[RocketCore.scala 235:35]
    reg wb_reg_xcpt : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_reg_xcpt) @[RocketCore.scala 236:35]
    reg wb_reg_replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_reg_replay) @[RocketCore.scala 237:35]
    reg wb_reg_flush_pipe : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_reg_flush_pipe) @[RocketCore.scala 238:35]
    reg wb_reg_cause : UInt<64>, clock with :
      reset => (UInt<1>("h0"), wb_reg_cause) @[RocketCore.scala 239:35]
    reg wb_reg_sfence : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_reg_sfence) @[RocketCore.scala 240:26]
    reg wb_reg_pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), wb_reg_pc) @[RocketCore.scala 241:22]
    reg wb_reg_mem_size : UInt<2>, clock with :
      reset => (UInt<1>("h0"), wb_reg_mem_size) @[RocketCore.scala 242:28]
    reg wb_reg_inst : UInt<32>, clock with :
      reset => (UInt<1>("h0"), wb_reg_inst) @[RocketCore.scala 243:24]
    reg wb_reg_raw_inst : UInt<32>, clock with :
      reset => (UInt<1>("h0"), wb_reg_raw_inst) @[RocketCore.scala 244:28]
    reg wb_reg_wdata : UInt<64>, clock with :
      reset => (UInt<1>("h0"), wb_reg_wdata) @[RocketCore.scala 245:25]
    skip
    skip
    node replay_wb_common = or(io_dmem_s2_nack, wb_reg_replay) @[RocketCore.scala 637:42]
    skip
    skip
    skip
    skip
    node _T_83 = and(wb_reg_valid, wb_ctrl_mem) @[RocketCore.scala 615:19]
    node _T_84 = and(_T_83, io_dmem_s2_xcpt_ma_st) @[RocketCore.scala 615:34]
    node _T_95 = or(wb_reg_xcpt, _T_84) @[RocketCore.scala 975:26]
    skip
    node _T_86 = and(_T_83, io_dmem_s2_xcpt_ma_ld) @[RocketCore.scala 616:34]
    node _T_96 = or(_T_95, _T_86) @[RocketCore.scala 975:26]
    skip
    node _T_88 = and(_T_83, io_dmem_s2_xcpt_pf_st) @[RocketCore.scala 617:34]
    node _T_97 = or(_T_96, _T_88) @[RocketCore.scala 975:26]
    skip
    node _T_90 = and(_T_83, io_dmem_s2_xcpt_pf_ld) @[RocketCore.scala 618:34]
    node _T_98 = or(_T_97, _T_90) @[RocketCore.scala 975:26]
    skip
    node _T_92 = and(_T_83, io_dmem_s2_xcpt_ae_st) @[RocketCore.scala 619:34]
    node _T_99 = or(_T_98, _T_92) @[RocketCore.scala 975:26]
    skip
    node _T_94 = and(_T_83, io_dmem_s2_xcpt_ae_ld) @[RocketCore.scala 620:34]
    node wb_xcpt = or(_T_99, _T_94) @[RocketCore.scala 975:26]
    node _take_pc_wb_T = or(replay_wb_common, wb_xcpt) @[RocketCore.scala 640:27]
    node _take_pc_wb_T_1 = or(_take_pc_wb_T, csr.io_eret) @[RocketCore.scala 640:38]
    node take_pc_wb = or(_take_pc_wb_T_1, wb_reg_flush_pipe) @[RocketCore.scala 640:53]
    skip
    node _ex_pc_valid_T = or(ex_reg_valid, ex_reg_replay) @[RocketCore.scala 490:34]
    node ex_pc_valid = or(_ex_pc_valid_T, ex_reg_xcpt_interrupt) @[RocketCore.scala 490:51]
    node _mem_npc_T = or(mem_ctrl_jalr, mem_reg_sfence) @[RocketCore.scala 513:36]
    node _mem_npc_a_T = asSInt(mem_reg_wdata) @[RocketCore.scala 989:16]
    node a = shr(_mem_npc_a_T, 39) @[RocketCore.scala 989:23]
    node _mem_npc_msb_T = eq(a, SInt<25>("h0")) @[RocketCore.scala 990:21]
    node _mem_npc_msb_T_1 = eq(a, SInt<25>("h-1")) @[RocketCore.scala 990:34]
    node _mem_npc_msb_T_2 = or(_mem_npc_msb_T, _mem_npc_msb_T_1) @[RocketCore.scala 990:29]
    node _mem_npc_msb_T_3 = bits(mem_reg_wdata, 39, 39) @[RocketCore.scala 990:46]
    node _mem_npc_msb_T_4 = bits(mem_reg_wdata, 38, 38) @[RocketCore.scala 990:62]
    node _mem_npc_msb_T_5 = not(_mem_npc_msb_T_4) @[RocketCore.scala 990:59]
    node msb = mux(_mem_npc_msb_T_2, _mem_npc_msb_T_3, _mem_npc_msb_T_5) @[RocketCore.scala 990:18]
    node mem_npc_lo = bits(mem_reg_wdata, 38, 0) @[RocketCore.scala 991:16]
    node _mem_npc_T_1 = cat(msb, mem_npc_lo) @[Cat.scala 30:58]
    node _mem_npc_T_2 = asSInt(_mem_npc_T_1) @[RocketCore.scala 513:106]
    node _mem_br_target_T = asSInt(mem_reg_pc) @[RocketCore.scala 509:34]
    node _mem_br_target_T_1 = and(mem_ctrl_branch, mem_br_taken) @[RocketCore.scala 510:25]
    skip
    node _mem_br_target_sign_T_1 = bits(mem_reg_inst, 31, 31) @[RocketCore.scala 1037:48]
    node mem_br_target_sign = asSInt(_mem_br_target_sign_T_1) @[RocketCore.scala 1037:53]
    skip
    node mem_br_target_hi_hi_hi = asUInt(mem_br_target_sign) @[Cat.scala 30:58]
    skip
    skip
    skip
    node mem_br_target_b30_20 = pad(mem_br_target_sign, 11) @[RocketCore.scala 1038:21]
    node mem_br_target_hi_hi_lo = asUInt(mem_br_target_b30_20) @[Cat.scala 30:58]
    node mem_br_target_hi_hi = cat(mem_br_target_hi_hi_hi, mem_br_target_hi_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _mem_br_target_b19_12_T_3 = bits(mem_reg_inst, 19, 12) @[RocketCore.scala 1039:65]
    node _mem_br_target_b19_12_T_4 = asSInt(_mem_br_target_b19_12_T_3) @[RocketCore.scala 1039:73]
    node mem_br_target_b19_12 = pad(mem_br_target_sign, 8) @[RocketCore.scala 1039:21]
    node mem_br_target_hi_lo_hi = asUInt(mem_br_target_b19_12) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _mem_br_target_b11_T_4 = bits(mem_reg_inst, 20, 20) @[RocketCore.scala 1041:39]
    node _mem_br_target_b11_T_5 = asSInt(_mem_br_target_b11_T_4) @[RocketCore.scala 1041:44]
    skip
    node _mem_br_target_b11_T_7 = bits(mem_reg_inst, 7, 7) @[RocketCore.scala 1042:39]
    node mem_br_target_b11 = asSInt(_mem_br_target_b11_T_7) @[RocketCore.scala 1042:43]
    skip
    skip
    skip
    node mem_br_target_hi_lo_lo = asUInt(mem_br_target_b11) @[Cat.scala 30:58]
    node mem_br_target_hi_lo = cat(mem_br_target_hi_lo_hi, mem_br_target_hi_lo_lo) @[Cat.scala 30:58]
    node mem_br_target_hi = cat(mem_br_target_hi_hi, mem_br_target_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    node mem_br_target_lo_hi_hi = bits(mem_reg_inst, 30, 25) @[RocketCore.scala 1043:66]
    skip
    skip
    skip
    skip
    skip
    node mem_br_target_lo_hi_lo = bits(mem_reg_inst, 11, 8) @[RocketCore.scala 1045:57]
    skip
    skip
    node _mem_br_target_b4_1_T_7 = bits(mem_reg_inst, 24, 21) @[RocketCore.scala 1046:52]
    skip
    skip
    skip
    node mem_br_target_lo_hi = cat(mem_br_target_lo_hi_hi, mem_br_target_lo_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node mem_br_target_lo = cat(mem_br_target_lo_hi, UInt<1>("h0")) @[Cat.scala 30:58]
    node _mem_br_target_T_2 = cat(mem_br_target_hi, mem_br_target_lo) @[Cat.scala 30:58]
    node _mem_br_target_T_3 = asSInt(_mem_br_target_T_2) @[RocketCore.scala 1051:53]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node mem_br_target_hi_lo_hi_1 = asUInt(_mem_br_target_b19_12_T_4) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node mem_br_target_hi_lo_lo_1 = asUInt(_mem_br_target_b11_T_5) @[Cat.scala 30:58]
    node mem_br_target_hi_lo_1 = cat(mem_br_target_hi_lo_hi_1, mem_br_target_hi_lo_lo_1) @[Cat.scala 30:58]
    node mem_br_target_hi_1 = cat(mem_br_target_hi_hi, mem_br_target_hi_lo_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node mem_br_target_lo_hi_1 = cat(mem_br_target_lo_hi_hi, _mem_br_target_b4_1_T_7) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node mem_br_target_lo_1 = cat(mem_br_target_lo_hi_1, UInt<1>("h0")) @[Cat.scala 30:58]
    node _mem_br_target_T_4 = cat(mem_br_target_hi_1, mem_br_target_lo_1) @[Cat.scala 30:58]
    node _mem_br_target_T_5 = asSInt(_mem_br_target_T_4) @[RocketCore.scala 1051:53]
    node _mem_br_target_T_6 = mux(mem_reg_rvc, SInt<4>("h2"), SInt<4>("h4")) @[RocketCore.scala 512:8]
    node _mem_br_target_T_7 = mux(mem_ctrl_jal, _mem_br_target_T_5, pad(_mem_br_target_T_6, 32)) @[RocketCore.scala 511:8]
    node _mem_br_target_T_8 = mux(_mem_br_target_T_1, _mem_br_target_T_3, _mem_br_target_T_7) @[RocketCore.scala 510:8]
    node _GEN_248 = pad(_mem_br_target_T_8, 40) @[RocketCore.scala 509:41]
    node _mem_br_target_T_9 = add(_mem_br_target_T, _GEN_248) @[RocketCore.scala 509:41]
    node _mem_br_target_T_10 = tail(_mem_br_target_T_9, 1) @[RocketCore.scala 509:41]
    node mem_br_target = asSInt(_mem_br_target_T_10) @[RocketCore.scala 509:41]
    node _mem_npc_T_3 = mux(_mem_npc_T, _mem_npc_T_2, mem_br_target) @[RocketCore.scala 513:21]
    node _mem_npc_T_4 = and(_mem_npc_T_3, SInt<40>("h-2")) @[RocketCore.scala 513:129]
    node _mem_npc_T_5 = asSInt(_mem_npc_T_4) @[RocketCore.scala 513:129]
    node mem_npc = asUInt(_mem_npc_T_5) @[RocketCore.scala 513:141]
    node _mem_wrong_npc_T = neq(mem_npc, ex_reg_pc) @[RocketCore.scala 515:30]
    node _mem_wrong_npc_T_1 = or(ibuf.io_inst_0_valid, ibuf.io_imem_valid) @[RocketCore.scala 516:31]
    node _mem_wrong_npc_T_2 = neq(mem_npc, ibuf.io_pc) @[RocketCore.scala 516:62]
    node _mem_wrong_npc_T_3 = mux(_mem_wrong_npc_T_1, _mem_wrong_npc_T_2, UInt<1>("h1")) @[RocketCore.scala 516:8]
    node mem_wrong_npc = mux(ex_pc_valid, _mem_wrong_npc_T, _mem_wrong_npc_T_3) @[RocketCore.scala 515:8]
    node _take_pc_mem_T = or(mem_wrong_npc, mem_reg_sfence) @[RocketCore.scala 523:54]
    node take_pc_mem = and(mem_reg_valid, _take_pc_mem_T) @[RocketCore.scala 523:32]
    skip
    node take_pc_mem_wb = or(take_pc_wb, take_pc_mem) @[RocketCore.scala 250:35]
    node _id_ctrl_decoder_bit_T = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hfe00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_1 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2000033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_3 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2001033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_5 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2003033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_7 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2002033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_9 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2004033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_11 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2005033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_13 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2006033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_15 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2007033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_17 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h200003b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_19 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h200403b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_21 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h200503b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_23 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h200603b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_25 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h200703b")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_26 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hf800707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_27 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_29 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h2000202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_31 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h800202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_33 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h6000202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_35 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h4000202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_37 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h8000202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_39 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("hc000202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_41 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("ha000202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_43 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("he000202f")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_44 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hf9f0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_45 = eq(_id_ctrl_decoder_bit_T_44, UInt<32>("h1000202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_47 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h1800202f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_49 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_51 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h800302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_53 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h2000302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_55 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h6000302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_57 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h4000302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_59 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h8000302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_61 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("hc000302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_63 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("ha000302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_65 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("he000302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_67 = eq(_id_ctrl_decoder_bit_T_44, UInt<32>("h1000302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_69 = eq(_id_ctrl_decoder_bit_T_26, UInt<32>("h1800302f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_71 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h20000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_73 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h20002053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_75 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h20001053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_77 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h28000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_79 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h28001053")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_80 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hfe00007f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_81 = eq(_id_ctrl_decoder_bit_T_80, UInt<32>("h53")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_83 = eq(_id_ctrl_decoder_bit_T_80, UInt<32>("h8000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_85 = eq(_id_ctrl_decoder_bit_T_80, UInt<32>("h10000053")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_86 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h600007f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_87 = eq(_id_ctrl_decoder_bit_T_86, UInt<32>("h43")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_89 = eq(_id_ctrl_decoder_bit_T_86, UInt<32>("h47")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_91 = eq(_id_ctrl_decoder_bit_T_86, UInt<32>("h4f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_93 = eq(_id_ctrl_decoder_bit_T_86, UInt<32>("h4b")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_94 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hfff0707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_95 = eq(_id_ctrl_decoder_bit_T_94, UInt<32>("he0001053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_97 = eq(_id_ctrl_decoder_bit_T_94, UInt<32>("he0000053")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_98 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hfff0007f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_99 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hc0000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_101 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hc0100053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_103 = eq(_id_ctrl_decoder_bit_T, UInt<32>("ha0002053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_105 = eq(_id_ctrl_decoder_bit_T, UInt<32>("ha0001053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_107 = eq(_id_ctrl_decoder_bit_T, UInt<32>("ha0000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_109 = eq(_id_ctrl_decoder_bit_T_94, UInt<32>("hf0000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_111 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hd0000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_113 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hd0100053")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_114 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_115 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h2007")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_117 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h2027")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_119 = eq(_id_ctrl_decoder_bit_T_80, UInt<32>("h18000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_121 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("h58000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_123 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hc0200053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_125 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hc0300053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_127 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hd0200053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_129 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hd0300053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_131 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("h40100053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_133 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("h42000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_135 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h22000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_137 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h22002053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_139 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h22001053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_141 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2a000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_143 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2a001053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_145 = eq(_id_ctrl_decoder_bit_T_80, UInt<32>("h2000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_147 = eq(_id_ctrl_decoder_bit_T_80, UInt<32>("ha000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_149 = eq(_id_ctrl_decoder_bit_T_80, UInt<32>("h12000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_151 = eq(_id_ctrl_decoder_bit_T_86, UInt<32>("h2000043")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_153 = eq(_id_ctrl_decoder_bit_T_86, UInt<32>("h2000047")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_155 = eq(_id_ctrl_decoder_bit_T_86, UInt<32>("h200004f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_157 = eq(_id_ctrl_decoder_bit_T_86, UInt<32>("h200004b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_159 = eq(_id_ctrl_decoder_bit_T_94, UInt<32>("he2001053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_161 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hc2000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_163 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hc2100053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_165 = eq(_id_ctrl_decoder_bit_T, UInt<32>("ha2002053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_167 = eq(_id_ctrl_decoder_bit_T, UInt<32>("ha2001053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_169 = eq(_id_ctrl_decoder_bit_T, UInt<32>("ha2000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_171 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hd2000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_173 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hd2100053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_175 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h3007")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_177 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h3027")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_179 = eq(_id_ctrl_decoder_bit_T_80, UInt<32>("h1a000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_181 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("h5a000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_183 = eq(_id_ctrl_decoder_bit_T_94, UInt<32>("he2000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_185 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hc2200053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_187 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hc2300053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_189 = eq(_id_ctrl_decoder_bit_T_94, UInt<32>("hf2000053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_191 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hd2200053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_193 = eq(_id_ctrl_decoder_bit_T_98, UInt<32>("hd2300053")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_195 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h3003")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_197 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h6003")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_199 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h3023")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_200 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hfc00707f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_201 = eq(_id_ctrl_decoder_bit_T_200, UInt<32>("h1013")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_203 = eq(_id_ctrl_decoder_bit_T_200, UInt<32>("h5013")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_205 = eq(_id_ctrl_decoder_bit_T_200, UInt<32>("h40005013")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_207 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h1b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_209 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h101b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_211 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h501b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_213 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h4000501b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_215 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h3b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_217 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h4000003b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_219 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h103b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_221 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h503b")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_223 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h4000503b")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_224 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hfe007fff")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_225 = eq(_id_ctrl_decoder_bit_T_224, UInt<32>("h12000073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_226 = eq(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h10200073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_227 = eq(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h7b200073")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_229 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h100f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_231 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h1063")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_233 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h63")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_235 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h4063")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_237 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h6063")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_239 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h5063")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_241 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h7063")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_242 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h7f")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_bit_T_243 = eq(_id_ctrl_decoder_bit_T_242, UInt<32>("h6f")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_245 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h67")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_247 = eq(_id_ctrl_decoder_bit_T_242, UInt<32>("h17")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_249 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h3")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_251 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h1003")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_253 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h2003")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_255 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h4003")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_257 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h5003")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_259 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h23")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_261 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h1023")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_263 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h2023")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_265 = eq(_id_ctrl_decoder_bit_T_242, UInt<32>("h37")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_267 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h13")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_269 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h2013")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_271 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h3013")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_273 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h7013")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_275 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h6013")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_277 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h4013")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_279 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h33")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_281 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h40000033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_283 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h2033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_285 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h3033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_287 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h7033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_289 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h6033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_291 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h4033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_293 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h1033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_295 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h5033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_297 = eq(_id_ctrl_decoder_bit_T, UInt<32>("h40005033")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_299 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("hf")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_300 = eq(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h73")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_301 = eq(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h100073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_302 = eq(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h30200073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_303 = eq(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h10500073")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_bit_T_304 = eq(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h30500073")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_306 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h1073")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_308 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h2073")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_310 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h3073")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_312 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h5073")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_314 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h6073")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_316 = eq(_id_ctrl_decoder_bit_T_114, UInt<32>("h7073")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_bit_T_318 = or(_id_ctrl_decoder_bit_T_1, _id_ctrl_decoder_bit_T_3) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_319 = or(_id_ctrl_decoder_bit_T_318, _id_ctrl_decoder_bit_T_5) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_320 = or(_id_ctrl_decoder_bit_T_319, _id_ctrl_decoder_bit_T_7) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_321 = or(_id_ctrl_decoder_bit_T_320, _id_ctrl_decoder_bit_T_9) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_322 = or(_id_ctrl_decoder_bit_T_321, _id_ctrl_decoder_bit_T_11) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_323 = or(_id_ctrl_decoder_bit_T_322, _id_ctrl_decoder_bit_T_13) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_324 = or(_id_ctrl_decoder_bit_T_323, _id_ctrl_decoder_bit_T_15) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_325 = or(_id_ctrl_decoder_bit_T_324, _id_ctrl_decoder_bit_T_17) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_326 = or(_id_ctrl_decoder_bit_T_325, _id_ctrl_decoder_bit_T_19) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_327 = or(_id_ctrl_decoder_bit_T_326, _id_ctrl_decoder_bit_T_21) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_328 = or(_id_ctrl_decoder_bit_T_327, _id_ctrl_decoder_bit_T_23) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_329 = or(_id_ctrl_decoder_bit_T_328, _id_ctrl_decoder_bit_T_25) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_330 = or(_id_ctrl_decoder_bit_T_329, _id_ctrl_decoder_bit_T_27) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_331 = or(_id_ctrl_decoder_bit_T_330, _id_ctrl_decoder_bit_T_29) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_332 = or(_id_ctrl_decoder_bit_T_331, _id_ctrl_decoder_bit_T_31) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_333 = or(_id_ctrl_decoder_bit_T_332, _id_ctrl_decoder_bit_T_33) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_334 = or(_id_ctrl_decoder_bit_T_333, _id_ctrl_decoder_bit_T_35) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_335 = or(_id_ctrl_decoder_bit_T_334, _id_ctrl_decoder_bit_T_37) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_336 = or(_id_ctrl_decoder_bit_T_335, _id_ctrl_decoder_bit_T_39) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_337 = or(_id_ctrl_decoder_bit_T_336, _id_ctrl_decoder_bit_T_41) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_338 = or(_id_ctrl_decoder_bit_T_337, _id_ctrl_decoder_bit_T_43) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_339 = or(_id_ctrl_decoder_bit_T_338, _id_ctrl_decoder_bit_T_45) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_340 = or(_id_ctrl_decoder_bit_T_339, _id_ctrl_decoder_bit_T_47) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_341 = or(_id_ctrl_decoder_bit_T_340, _id_ctrl_decoder_bit_T_49) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_342 = or(_id_ctrl_decoder_bit_T_341, _id_ctrl_decoder_bit_T_51) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_343 = or(_id_ctrl_decoder_bit_T_342, _id_ctrl_decoder_bit_T_53) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_344 = or(_id_ctrl_decoder_bit_T_343, _id_ctrl_decoder_bit_T_55) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_345 = or(_id_ctrl_decoder_bit_T_344, _id_ctrl_decoder_bit_T_57) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_346 = or(_id_ctrl_decoder_bit_T_345, _id_ctrl_decoder_bit_T_59) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_347 = or(_id_ctrl_decoder_bit_T_346, _id_ctrl_decoder_bit_T_61) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_348 = or(_id_ctrl_decoder_bit_T_347, _id_ctrl_decoder_bit_T_63) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_349 = or(_id_ctrl_decoder_bit_T_348, _id_ctrl_decoder_bit_T_65) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_350 = or(_id_ctrl_decoder_bit_T_349, _id_ctrl_decoder_bit_T_67) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_351 = or(_id_ctrl_decoder_bit_T_350, _id_ctrl_decoder_bit_T_69) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_352 = or(_id_ctrl_decoder_bit_T_351, _id_ctrl_decoder_bit_T_71) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_353 = or(_id_ctrl_decoder_bit_T_352, _id_ctrl_decoder_bit_T_73) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_354 = or(_id_ctrl_decoder_bit_T_353, _id_ctrl_decoder_bit_T_75) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_355 = or(_id_ctrl_decoder_bit_T_354, _id_ctrl_decoder_bit_T_77) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_356 = or(_id_ctrl_decoder_bit_T_355, _id_ctrl_decoder_bit_T_79) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_357 = or(_id_ctrl_decoder_bit_T_356, _id_ctrl_decoder_bit_T_81) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_358 = or(_id_ctrl_decoder_bit_T_357, _id_ctrl_decoder_bit_T_83) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_359 = or(_id_ctrl_decoder_bit_T_358, _id_ctrl_decoder_bit_T_85) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_360 = or(_id_ctrl_decoder_bit_T_359, _id_ctrl_decoder_bit_T_87) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_361 = or(_id_ctrl_decoder_bit_T_360, _id_ctrl_decoder_bit_T_89) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_362 = or(_id_ctrl_decoder_bit_T_361, _id_ctrl_decoder_bit_T_91) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_363 = or(_id_ctrl_decoder_bit_T_362, _id_ctrl_decoder_bit_T_93) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_364 = or(_id_ctrl_decoder_bit_T_363, _id_ctrl_decoder_bit_T_95) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_365 = or(_id_ctrl_decoder_bit_T_364, _id_ctrl_decoder_bit_T_97) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_366 = or(_id_ctrl_decoder_bit_T_365, _id_ctrl_decoder_bit_T_99) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_367 = or(_id_ctrl_decoder_bit_T_366, _id_ctrl_decoder_bit_T_101) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_368 = or(_id_ctrl_decoder_bit_T_367, _id_ctrl_decoder_bit_T_103) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_369 = or(_id_ctrl_decoder_bit_T_368, _id_ctrl_decoder_bit_T_105) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_370 = or(_id_ctrl_decoder_bit_T_369, _id_ctrl_decoder_bit_T_107) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_371 = or(_id_ctrl_decoder_bit_T_370, _id_ctrl_decoder_bit_T_109) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_372 = or(_id_ctrl_decoder_bit_T_371, _id_ctrl_decoder_bit_T_111) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_373 = or(_id_ctrl_decoder_bit_T_372, _id_ctrl_decoder_bit_T_113) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_374 = or(_id_ctrl_decoder_bit_T_373, _id_ctrl_decoder_bit_T_115) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_375 = or(_id_ctrl_decoder_bit_T_374, _id_ctrl_decoder_bit_T_117) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_376 = or(_id_ctrl_decoder_bit_T_375, _id_ctrl_decoder_bit_T_119) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_377 = or(_id_ctrl_decoder_bit_T_376, _id_ctrl_decoder_bit_T_121) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_378 = or(_id_ctrl_decoder_bit_T_377, _id_ctrl_decoder_bit_T_123) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_379 = or(_id_ctrl_decoder_bit_T_378, _id_ctrl_decoder_bit_T_125) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_380 = or(_id_ctrl_decoder_bit_T_379, _id_ctrl_decoder_bit_T_127) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_381 = or(_id_ctrl_decoder_bit_T_380, _id_ctrl_decoder_bit_T_129) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_382 = or(_id_ctrl_decoder_bit_T_381, _id_ctrl_decoder_bit_T_131) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_383 = or(_id_ctrl_decoder_bit_T_382, _id_ctrl_decoder_bit_T_133) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_384 = or(_id_ctrl_decoder_bit_T_383, _id_ctrl_decoder_bit_T_135) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_385 = or(_id_ctrl_decoder_bit_T_384, _id_ctrl_decoder_bit_T_137) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_386 = or(_id_ctrl_decoder_bit_T_385, _id_ctrl_decoder_bit_T_139) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_387 = or(_id_ctrl_decoder_bit_T_386, _id_ctrl_decoder_bit_T_141) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_388 = or(_id_ctrl_decoder_bit_T_387, _id_ctrl_decoder_bit_T_143) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_389 = or(_id_ctrl_decoder_bit_T_388, _id_ctrl_decoder_bit_T_145) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_390 = or(_id_ctrl_decoder_bit_T_389, _id_ctrl_decoder_bit_T_147) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_391 = or(_id_ctrl_decoder_bit_T_390, _id_ctrl_decoder_bit_T_149) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_392 = or(_id_ctrl_decoder_bit_T_391, _id_ctrl_decoder_bit_T_151) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_393 = or(_id_ctrl_decoder_bit_T_392, _id_ctrl_decoder_bit_T_153) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_394 = or(_id_ctrl_decoder_bit_T_393, _id_ctrl_decoder_bit_T_155) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_395 = or(_id_ctrl_decoder_bit_T_394, _id_ctrl_decoder_bit_T_157) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_396 = or(_id_ctrl_decoder_bit_T_395, _id_ctrl_decoder_bit_T_159) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_397 = or(_id_ctrl_decoder_bit_T_396, _id_ctrl_decoder_bit_T_161) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_398 = or(_id_ctrl_decoder_bit_T_397, _id_ctrl_decoder_bit_T_163) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_399 = or(_id_ctrl_decoder_bit_T_398, _id_ctrl_decoder_bit_T_165) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_400 = or(_id_ctrl_decoder_bit_T_399, _id_ctrl_decoder_bit_T_167) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_401 = or(_id_ctrl_decoder_bit_T_400, _id_ctrl_decoder_bit_T_169) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_402 = or(_id_ctrl_decoder_bit_T_401, _id_ctrl_decoder_bit_T_171) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_403 = or(_id_ctrl_decoder_bit_T_402, _id_ctrl_decoder_bit_T_173) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_404 = or(_id_ctrl_decoder_bit_T_403, _id_ctrl_decoder_bit_T_175) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_405 = or(_id_ctrl_decoder_bit_T_404, _id_ctrl_decoder_bit_T_177) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_406 = or(_id_ctrl_decoder_bit_T_405, _id_ctrl_decoder_bit_T_179) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_407 = or(_id_ctrl_decoder_bit_T_406, _id_ctrl_decoder_bit_T_181) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_408 = or(_id_ctrl_decoder_bit_T_407, _id_ctrl_decoder_bit_T_183) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_409 = or(_id_ctrl_decoder_bit_T_408, _id_ctrl_decoder_bit_T_185) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_410 = or(_id_ctrl_decoder_bit_T_409, _id_ctrl_decoder_bit_T_187) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_411 = or(_id_ctrl_decoder_bit_T_410, _id_ctrl_decoder_bit_T_189) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_412 = or(_id_ctrl_decoder_bit_T_411, _id_ctrl_decoder_bit_T_191) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_413 = or(_id_ctrl_decoder_bit_T_412, _id_ctrl_decoder_bit_T_193) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_414 = or(_id_ctrl_decoder_bit_T_413, _id_ctrl_decoder_bit_T_195) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_415 = or(_id_ctrl_decoder_bit_T_414, _id_ctrl_decoder_bit_T_197) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_416 = or(_id_ctrl_decoder_bit_T_415, _id_ctrl_decoder_bit_T_199) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_417 = or(_id_ctrl_decoder_bit_T_416, _id_ctrl_decoder_bit_T_201) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_418 = or(_id_ctrl_decoder_bit_T_417, _id_ctrl_decoder_bit_T_203) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_419 = or(_id_ctrl_decoder_bit_T_418, _id_ctrl_decoder_bit_T_205) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_420 = or(_id_ctrl_decoder_bit_T_419, _id_ctrl_decoder_bit_T_207) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_421 = or(_id_ctrl_decoder_bit_T_420, _id_ctrl_decoder_bit_T_209) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_422 = or(_id_ctrl_decoder_bit_T_421, _id_ctrl_decoder_bit_T_211) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_423 = or(_id_ctrl_decoder_bit_T_422, _id_ctrl_decoder_bit_T_213) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_424 = or(_id_ctrl_decoder_bit_T_423, _id_ctrl_decoder_bit_T_215) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_425 = or(_id_ctrl_decoder_bit_T_424, _id_ctrl_decoder_bit_T_217) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_426 = or(_id_ctrl_decoder_bit_T_425, _id_ctrl_decoder_bit_T_219) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_427 = or(_id_ctrl_decoder_bit_T_426, _id_ctrl_decoder_bit_T_221) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_428 = or(_id_ctrl_decoder_bit_T_427, _id_ctrl_decoder_bit_T_223) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_429 = or(_id_ctrl_decoder_bit_T_428, _id_ctrl_decoder_bit_T_225) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_430 = or(_id_ctrl_decoder_bit_T_429, _id_ctrl_decoder_bit_T_226) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_431 = or(_id_ctrl_decoder_bit_T_430, _id_ctrl_decoder_bit_T_227) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_432 = or(_id_ctrl_decoder_bit_T_431, _id_ctrl_decoder_bit_T_229) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_433 = or(_id_ctrl_decoder_bit_T_432, _id_ctrl_decoder_bit_T_231) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_434 = or(_id_ctrl_decoder_bit_T_433, _id_ctrl_decoder_bit_T_233) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_435 = or(_id_ctrl_decoder_bit_T_434, _id_ctrl_decoder_bit_T_235) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_436 = or(_id_ctrl_decoder_bit_T_435, _id_ctrl_decoder_bit_T_237) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_437 = or(_id_ctrl_decoder_bit_T_436, _id_ctrl_decoder_bit_T_239) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_438 = or(_id_ctrl_decoder_bit_T_437, _id_ctrl_decoder_bit_T_241) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_439 = or(_id_ctrl_decoder_bit_T_438, _id_ctrl_decoder_bit_T_243) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_440 = or(_id_ctrl_decoder_bit_T_439, _id_ctrl_decoder_bit_T_245) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_441 = or(_id_ctrl_decoder_bit_T_440, _id_ctrl_decoder_bit_T_247) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_442 = or(_id_ctrl_decoder_bit_T_441, _id_ctrl_decoder_bit_T_249) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_443 = or(_id_ctrl_decoder_bit_T_442, _id_ctrl_decoder_bit_T_251) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_444 = or(_id_ctrl_decoder_bit_T_443, _id_ctrl_decoder_bit_T_253) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_445 = or(_id_ctrl_decoder_bit_T_444, _id_ctrl_decoder_bit_T_255) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_446 = or(_id_ctrl_decoder_bit_T_445, _id_ctrl_decoder_bit_T_257) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_447 = or(_id_ctrl_decoder_bit_T_446, _id_ctrl_decoder_bit_T_259) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_448 = or(_id_ctrl_decoder_bit_T_447, _id_ctrl_decoder_bit_T_261) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_449 = or(_id_ctrl_decoder_bit_T_448, _id_ctrl_decoder_bit_T_263) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_450 = or(_id_ctrl_decoder_bit_T_449, _id_ctrl_decoder_bit_T_265) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_451 = or(_id_ctrl_decoder_bit_T_450, _id_ctrl_decoder_bit_T_267) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_452 = or(_id_ctrl_decoder_bit_T_451, _id_ctrl_decoder_bit_T_269) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_453 = or(_id_ctrl_decoder_bit_T_452, _id_ctrl_decoder_bit_T_271) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_454 = or(_id_ctrl_decoder_bit_T_453, _id_ctrl_decoder_bit_T_273) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_455 = or(_id_ctrl_decoder_bit_T_454, _id_ctrl_decoder_bit_T_275) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_456 = or(_id_ctrl_decoder_bit_T_455, _id_ctrl_decoder_bit_T_277) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_457 = or(_id_ctrl_decoder_bit_T_456, _id_ctrl_decoder_bit_T_279) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_458 = or(_id_ctrl_decoder_bit_T_457, _id_ctrl_decoder_bit_T_281) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_459 = or(_id_ctrl_decoder_bit_T_458, _id_ctrl_decoder_bit_T_283) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_460 = or(_id_ctrl_decoder_bit_T_459, _id_ctrl_decoder_bit_T_285) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_461 = or(_id_ctrl_decoder_bit_T_460, _id_ctrl_decoder_bit_T_287) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_462 = or(_id_ctrl_decoder_bit_T_461, _id_ctrl_decoder_bit_T_289) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_463 = or(_id_ctrl_decoder_bit_T_462, _id_ctrl_decoder_bit_T_291) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_464 = or(_id_ctrl_decoder_bit_T_463, _id_ctrl_decoder_bit_T_293) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_465 = or(_id_ctrl_decoder_bit_T_464, _id_ctrl_decoder_bit_T_295) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_466 = or(_id_ctrl_decoder_bit_T_465, _id_ctrl_decoder_bit_T_297) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_467 = or(_id_ctrl_decoder_bit_T_466, _id_ctrl_decoder_bit_T_299) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_468 = or(_id_ctrl_decoder_bit_T_467, _id_ctrl_decoder_bit_T_300) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_469 = or(_id_ctrl_decoder_bit_T_468, _id_ctrl_decoder_bit_T_301) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_470 = or(_id_ctrl_decoder_bit_T_469, _id_ctrl_decoder_bit_T_302) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_471 = or(_id_ctrl_decoder_bit_T_470, _id_ctrl_decoder_bit_T_303) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_472 = or(_id_ctrl_decoder_bit_T_471, _id_ctrl_decoder_bit_T_304) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_473 = or(_id_ctrl_decoder_bit_T_472, _id_ctrl_decoder_bit_T_306) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_474 = or(_id_ctrl_decoder_bit_T_473, _id_ctrl_decoder_bit_T_308) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_475 = or(_id_ctrl_decoder_bit_T_474, _id_ctrl_decoder_bit_T_310) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_476 = or(_id_ctrl_decoder_bit_T_475, _id_ctrl_decoder_bit_T_312) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_477 = or(_id_ctrl_decoder_bit_T_476, _id_ctrl_decoder_bit_T_314) @[Decode.scala 15:30]
    node id_ctrl_decoder_0 = or(_id_ctrl_decoder_bit_T_477, _id_ctrl_decoder_bit_T_316) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h5c")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_1 = eq(_id_ctrl_decoder_T, UInt<32>("h4")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_2 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h60")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_3 = eq(_id_ctrl_decoder_T_2, UInt<32>("h40")) @[Decode.scala 14:121]
    skip
    node id_ctrl_decoder_1 = or(_id_ctrl_decoder_T_1, _id_ctrl_decoder_T_3) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_5 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h74")) @[Decode.scala 14:65]
    node id_ctrl_decoder_3 = eq(_id_ctrl_decoder_T_5, UInt<32>("h60")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_7 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h68")) @[Decode.scala 14:65]
    node id_ctrl_decoder_4 = eq(_id_ctrl_decoder_T_7, UInt<32>("h68")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_9 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h203c")) @[Decode.scala 14:65]
    node id_ctrl_decoder_5 = eq(_id_ctrl_decoder_T_9, UInt<32>("h24")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_11 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h64")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_12 = eq(_id_ctrl_decoder_T_11, UInt<32>("h20")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_13 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h34")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_14 = eq(_id_ctrl_decoder_T_13, UInt<32>("h20")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_15 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2048")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_16 = eq(_id_ctrl_decoder_T_15, UInt<32>("h2008")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_17 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h42003024")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_18 = eq(_id_ctrl_decoder_T_17, UInt<32>("h2000020")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_20 = or(_id_ctrl_decoder_T_12, _id_ctrl_decoder_T_14) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_21 = or(_id_ctrl_decoder_T_20, _id_ctrl_decoder_T_16) @[Decode.scala 15:30]
    node id_ctrl_decoder_6 = or(_id_ctrl_decoder_T_21, _id_ctrl_decoder_T_18) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_22 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h44")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_23 = eq(_id_ctrl_decoder_T_22, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_24 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h4024")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_25 = eq(_id_ctrl_decoder_T_24, UInt<32>("h20")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_26 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h38")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_27 = eq(_id_ctrl_decoder_T_26, UInt<32>("h20")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_28 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_29 = eq(_id_ctrl_decoder_T_28, UInt<32>("h2000")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_30 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h90000034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_31 = eq(_id_ctrl_decoder_T_30, UInt<32>("h90000010")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_33 = or(_id_ctrl_decoder_T_23, _id_ctrl_decoder_T_25) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_34 = or(_id_ctrl_decoder_T_33, _id_ctrl_decoder_T_27) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_35 = or(_id_ctrl_decoder_T_34, _id_ctrl_decoder_T_29) @[Decode.scala 15:30]
    node id_ctrl_decoder_7 = or(_id_ctrl_decoder_T_35, _id_ctrl_decoder_T_31) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_36 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h58")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_37 = eq(_id_ctrl_decoder_T_36, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_38 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h20")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_39 = eq(_id_ctrl_decoder_T_38, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_40 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hc")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_41 = eq(_id_ctrl_decoder_T_40, UInt<32>("h4")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_42 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h48")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_43 = eq(_id_ctrl_decoder_T_42, UInt<32>("h48")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_44 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h4050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_45 = eq(_id_ctrl_decoder_T_44, UInt<32>("h4050")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_47 = or(_id_ctrl_decoder_T_37, _id_ctrl_decoder_T_39) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_48 = or(_id_ctrl_decoder_T_47, _id_ctrl_decoder_T_41) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_49 = or(_id_ctrl_decoder_T_48, _id_ctrl_decoder_T_43) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo = or(_id_ctrl_decoder_T_49, _id_ctrl_decoder_T_45) @[Decode.scala 15:30]
    skip
    node _id_ctrl_decoder_T_51 = eq(_id_ctrl_decoder_T_42, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_52 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h18")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_53 = eq(_id_ctrl_decoder_T_52, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_54 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h4008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_55 = eq(_id_ctrl_decoder_T_54, UInt<32>("h4000")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_57 = or(_id_ctrl_decoder_T_51, _id_ctrl_decoder_T_23) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_58 = or(_id_ctrl_decoder_T_57, _id_ctrl_decoder_T_53) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi = or(_id_ctrl_decoder_T_58, _id_ctrl_decoder_T_55) @[Decode.scala 15:30]
    node id_ctrl_decoder_9 = cat(id_ctrl_decoder_hi, id_ctrl_decoder_lo) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_59 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h4004")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_60 = eq(_id_ctrl_decoder_T_59, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_61 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h50")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_62 = eq(_id_ctrl_decoder_T_61, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_63 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h24")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_64 = eq(_id_ctrl_decoder_T_63, UInt<32>("h0")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_66 = or(_id_ctrl_decoder_T_60, _id_ctrl_decoder_T_62) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_67 = or(_id_ctrl_decoder_T_66, _id_ctrl_decoder_T_23) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_68 = or(_id_ctrl_decoder_T_67, _id_ctrl_decoder_T_64) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_1 = or(_id_ctrl_decoder_T_68, _id_ctrl_decoder_T_53) @[Decode.scala 15:30]
    skip
    node _id_ctrl_decoder_T_70 = eq(_id_ctrl_decoder_T_13, UInt<32>("h14")) @[Decode.scala 14:121]
    skip
    node id_ctrl_decoder_hi_1 = or(_id_ctrl_decoder_T_70, _id_ctrl_decoder_T_43) @[Decode.scala 15:30]
    node id_ctrl_decoder_10 = cat(id_ctrl_decoder_hi_1, id_ctrl_decoder_lo_1) @[Cat.scala 30:58]
    skip
    node _id_ctrl_decoder_T_73 = eq(_id_ctrl_decoder_T_52, UInt<32>("h8")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_75 = eq(_id_ctrl_decoder_T_22, UInt<32>("h40")) @[Decode.scala 14:121]
    skip
    node id_ctrl_decoder_lo_2 = or(_id_ctrl_decoder_T_73, _id_ctrl_decoder_T_75) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_77 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h14")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_78 = eq(_id_ctrl_decoder_T_77, UInt<32>("h14")) @[Decode.scala 14:121]
    skip
    node id_ctrl_decoder_hi_lo = or(_id_ctrl_decoder_T_73, _id_ctrl_decoder_T_78) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_80 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h30")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_81 = eq(_id_ctrl_decoder_T_80, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_82 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h201c")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_83 = eq(_id_ctrl_decoder_T_82, UInt<32>("h4")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_85 = eq(_id_ctrl_decoder_T_77, UInt<32>("h10")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_87 = or(_id_ctrl_decoder_T_81, _id_ctrl_decoder_T_83) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_hi = or(_id_ctrl_decoder_T_87, _id_ctrl_decoder_T_85) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_2 = cat(id_ctrl_decoder_hi_hi, id_ctrl_decoder_hi_lo) @[Cat.scala 30:58]
    node id_ctrl_decoder_11 = cat(id_ctrl_decoder_hi_2, id_ctrl_decoder_lo_2) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_88 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h10")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_89 = eq(_id_ctrl_decoder_T_88, UInt<32>("h0")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_90 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h8")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_91 = eq(_id_ctrl_decoder_T_90, UInt<32>("h0")) @[Decode.scala 14:121]
    skip
    node id_ctrl_decoder_12 = or(_id_ctrl_decoder_T_89, _id_ctrl_decoder_T_91) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_93 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h3054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_94 = eq(_id_ctrl_decoder_T_93, UInt<32>("h1010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_95 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h1058")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_96 = eq(_id_ctrl_decoder_T_95, UInt<32>("h1040")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_97 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h7044")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_98 = eq(_id_ctrl_decoder_T_97, UInt<32>("h7000")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_99 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2001074")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_100 = eq(_id_ctrl_decoder_T_99, UInt<32>("h2001030")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_102 = or(_id_ctrl_decoder_T_94, _id_ctrl_decoder_T_96) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_103 = or(_id_ctrl_decoder_T_102, _id_ctrl_decoder_T_98) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_lo = or(_id_ctrl_decoder_T_103, _id_ctrl_decoder_T_100) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_104 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h4054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_105 = eq(_id_ctrl_decoder_T_104, UInt<32>("h40")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_106 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2058")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_107 = eq(_id_ctrl_decoder_T_106, UInt<32>("h2040")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_109 = eq(_id_ctrl_decoder_T_93, UInt<32>("h3010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_110 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h6054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_111 = eq(_id_ctrl_decoder_T_110, UInt<32>("h6010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_112 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2002074")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_113 = eq(_id_ctrl_decoder_T_112, UInt<32>("h2002030")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_114 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h40003034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_115 = eq(_id_ctrl_decoder_T_114, UInt<32>("h40000030")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_116 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h40001054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_117 = eq(_id_ctrl_decoder_T_116, UInt<32>("h40001010")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_119 = or(_id_ctrl_decoder_T_105, _id_ctrl_decoder_T_107) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_120 = or(_id_ctrl_decoder_T_119, _id_ctrl_decoder_T_109) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_121 = or(_id_ctrl_decoder_T_120, _id_ctrl_decoder_T_111) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_122 = or(_id_ctrl_decoder_T_121, _id_ctrl_decoder_T_113) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_123 = or(_id_ctrl_decoder_T_122, _id_ctrl_decoder_T_115) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_hi = or(_id_ctrl_decoder_T_123, _id_ctrl_decoder_T_117) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_124 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2002054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_125 = eq(_id_ctrl_decoder_T_124, UInt<32>("h2010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_126 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_127 = eq(_id_ctrl_decoder_T_126, UInt<32>("h2010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_128 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h40004054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_129 = eq(_id_ctrl_decoder_T_128, UInt<32>("h4010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_130 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h5054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_131 = eq(_id_ctrl_decoder_T_130, UInt<32>("h4010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_132 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h4058")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_133 = eq(_id_ctrl_decoder_T_132, UInt<32>("h4040")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_135 = or(_id_ctrl_decoder_T_125, _id_ctrl_decoder_T_127) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_136 = or(_id_ctrl_decoder_T_135, _id_ctrl_decoder_T_129) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_137 = or(_id_ctrl_decoder_T_136, _id_ctrl_decoder_T_131) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_lo_1 = or(_id_ctrl_decoder_T_137, _id_ctrl_decoder_T_133) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_138 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2006054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_139 = eq(_id_ctrl_decoder_T_138, UInt<32>("h2010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_140 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h6034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_141 = eq(_id_ctrl_decoder_T_140, UInt<32>("h2010")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_142 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h40003054")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_143 = eq(_id_ctrl_decoder_T_142, UInt<32>("h40001010")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_145 = or(_id_ctrl_decoder_T_139, _id_ctrl_decoder_T_141) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_146 = or(_id_ctrl_decoder_T_145, _id_ctrl_decoder_T_133) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_147 = or(_id_ctrl_decoder_T_146, _id_ctrl_decoder_T_115) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_hi_1 = or(_id_ctrl_decoder_T_147, _id_ctrl_decoder_T_143) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_3 = cat(id_ctrl_decoder_lo_hi, id_ctrl_decoder_lo_lo) @[Cat.scala 30:58]
    node id_ctrl_decoder_hi_3 = cat(id_ctrl_decoder_hi_hi_1, id_ctrl_decoder_hi_lo_1) @[Cat.scala 30:58]
    node id_ctrl_decoder_13 = cat(id_ctrl_decoder_hi_3, id_ctrl_decoder_lo_3) @[Cat.scala 30:58]
    skip
    node _id_ctrl_decoder_bit_T_479 = or(_id_ctrl_decoder_bit_T_27, _id_ctrl_decoder_bit_T_29) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_480 = or(_id_ctrl_decoder_bit_T_479, _id_ctrl_decoder_bit_T_31) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_481 = or(_id_ctrl_decoder_bit_T_480, _id_ctrl_decoder_bit_T_33) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_482 = or(_id_ctrl_decoder_bit_T_481, _id_ctrl_decoder_bit_T_35) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_483 = or(_id_ctrl_decoder_bit_T_482, _id_ctrl_decoder_bit_T_37) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_484 = or(_id_ctrl_decoder_bit_T_483, _id_ctrl_decoder_bit_T_39) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_485 = or(_id_ctrl_decoder_bit_T_484, _id_ctrl_decoder_bit_T_41) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_486 = or(_id_ctrl_decoder_bit_T_485, _id_ctrl_decoder_bit_T_43) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_487 = or(_id_ctrl_decoder_bit_T_486, _id_ctrl_decoder_bit_T_45) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_488 = or(_id_ctrl_decoder_bit_T_487, _id_ctrl_decoder_bit_T_47) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_489 = or(_id_ctrl_decoder_bit_T_488, _id_ctrl_decoder_bit_T_49) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_490 = or(_id_ctrl_decoder_bit_T_489, _id_ctrl_decoder_bit_T_51) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_491 = or(_id_ctrl_decoder_bit_T_490, _id_ctrl_decoder_bit_T_53) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_492 = or(_id_ctrl_decoder_bit_T_491, _id_ctrl_decoder_bit_T_55) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_493 = or(_id_ctrl_decoder_bit_T_492, _id_ctrl_decoder_bit_T_57) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_494 = or(_id_ctrl_decoder_bit_T_493, _id_ctrl_decoder_bit_T_59) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_495 = or(_id_ctrl_decoder_bit_T_494, _id_ctrl_decoder_bit_T_61) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_496 = or(_id_ctrl_decoder_bit_T_495, _id_ctrl_decoder_bit_T_63) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_497 = or(_id_ctrl_decoder_bit_T_496, _id_ctrl_decoder_bit_T_65) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_498 = or(_id_ctrl_decoder_bit_T_497, _id_ctrl_decoder_bit_T_67) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_499 = or(_id_ctrl_decoder_bit_T_498, _id_ctrl_decoder_bit_T_69) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_500 = or(_id_ctrl_decoder_bit_T_499, _id_ctrl_decoder_bit_T_115) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_501 = or(_id_ctrl_decoder_bit_T_500, _id_ctrl_decoder_bit_T_117) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_502 = or(_id_ctrl_decoder_bit_T_501, _id_ctrl_decoder_bit_T_175) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_503 = or(_id_ctrl_decoder_bit_T_502, _id_ctrl_decoder_bit_T_177) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_504 = or(_id_ctrl_decoder_bit_T_503, _id_ctrl_decoder_bit_T_195) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_505 = or(_id_ctrl_decoder_bit_T_504, _id_ctrl_decoder_bit_T_197) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_506 = or(_id_ctrl_decoder_bit_T_505, _id_ctrl_decoder_bit_T_199) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_507 = or(_id_ctrl_decoder_bit_T_506, _id_ctrl_decoder_bit_T_225) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_508 = or(_id_ctrl_decoder_bit_T_507, _id_ctrl_decoder_bit_T_249) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_509 = or(_id_ctrl_decoder_bit_T_508, _id_ctrl_decoder_bit_T_251) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_510 = or(_id_ctrl_decoder_bit_T_509, _id_ctrl_decoder_bit_T_253) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_511 = or(_id_ctrl_decoder_bit_T_510, _id_ctrl_decoder_bit_T_255) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_512 = or(_id_ctrl_decoder_bit_T_511, _id_ctrl_decoder_bit_T_257) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_513 = or(_id_ctrl_decoder_bit_T_512, _id_ctrl_decoder_bit_T_259) @[Decode.scala 15:30]
    node _id_ctrl_decoder_bit_T_514 = or(_id_ctrl_decoder_bit_T_513, _id_ctrl_decoder_bit_T_261) @[Decode.scala 15:30]
    node id_ctrl_decoder_14 = or(_id_ctrl_decoder_bit_T_514, _id_ctrl_decoder_bit_T_263) @[Decode.scala 15:30]
    skip
    node _id_ctrl_decoder_T_149 = eq(_id_ctrl_decoder_T_7, UInt<32>("h20")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_150 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h18000020")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_151 = eq(_id_ctrl_decoder_T_150, UInt<32>("h18000020")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_152 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h20000020")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_153 = eq(_id_ctrl_decoder_T_152, UInt<32>("h20000020")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_155 = or(_id_ctrl_decoder_T_149, _id_ctrl_decoder_T_151) @[Decode.scala 15:30]
    node id_ctrl_decoder_lo_lo_1 = or(_id_ctrl_decoder_T_155, _id_ctrl_decoder_T_153) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_156 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h10000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_157 = eq(_id_ctrl_decoder_T_156, UInt<32>("h10000008")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_158 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h40000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_159 = eq(_id_ctrl_decoder_T_158, UInt<32>("h40000008")) @[Decode.scala 14:121]
    skip
    node id_ctrl_decoder_lo_hi_1 = or(_id_ctrl_decoder_T_157, _id_ctrl_decoder_T_159) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_161 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h40")) @[Decode.scala 14:65]
    node id_ctrl_decoder_hi_hi_hi = eq(_id_ctrl_decoder_T_161, UInt<32>("h40")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_163 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h8000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_164 = eq(_id_ctrl_decoder_T_163, UInt<32>("h8000008")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_165 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h80000008")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_166 = eq(_id_ctrl_decoder_T_165, UInt<32>("h80000008")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_168 = or(id_ctrl_decoder_hi_hi_hi, _id_ctrl_decoder_T_164) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_169 = or(_id_ctrl_decoder_T_168, _id_ctrl_decoder_T_157) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_lo_2 = or(_id_ctrl_decoder_T_169, _id_ctrl_decoder_T_166) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_170 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h18000008")) @[Decode.scala 14:65]
    node id_ctrl_decoder_hi_hi_lo = eq(_id_ctrl_decoder_T_170, UInt<32>("h8")) @[Decode.scala 14:121]
    skip
    skip
    node id_ctrl_decoder_lo_4 = cat(id_ctrl_decoder_lo_hi_1, id_ctrl_decoder_lo_lo_1) @[Cat.scala 30:58]
    node id_ctrl_decoder_hi_hi_2 = cat(id_ctrl_decoder_hi_hi_hi, id_ctrl_decoder_hi_hi_lo) @[Cat.scala 30:58]
    node id_ctrl_decoder_hi_4 = cat(id_ctrl_decoder_hi_hi_2, id_ctrl_decoder_hi_lo_2) @[Cat.scala 30:58]
    node id_ctrl_decoder_15 = cat(id_ctrl_decoder_hi_4, id_ctrl_decoder_lo_4) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_172 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h80000060")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_173 = eq(_id_ctrl_decoder_T_172, UInt<32>("h40")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_174 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h10000060")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_175 = eq(_id_ctrl_decoder_T_174, UInt<32>("h40")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_176 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h70")) @[Decode.scala 14:65]
    node id_ctrl_decoder_18 = eq(_id_ctrl_decoder_T_176, UInt<32>("h40")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_179 = or(_id_ctrl_decoder_T_173, _id_ctrl_decoder_T_175) @[Decode.scala 15:30]
    node id_ctrl_decoder_16 = or(_id_ctrl_decoder_T_179, id_ctrl_decoder_18) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_180 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h7c")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_181 = eq(_id_ctrl_decoder_T_180, UInt<32>("h24")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_182 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h40000060")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_183 = eq(_id_ctrl_decoder_T_182, UInt<32>("h40")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_184 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h90000060")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_185 = eq(_id_ctrl_decoder_T_184, UInt<32>("h10000040")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_187 = or(_id_ctrl_decoder_T_181, _id_ctrl_decoder_T_183) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_188 = or(_id_ctrl_decoder_T_187, id_ctrl_decoder_18) @[Decode.scala 15:30]
    node id_ctrl_decoder_17 = or(_id_ctrl_decoder_T_188, _id_ctrl_decoder_T_185) @[Decode.scala 15:30]
    skip
    node _id_ctrl_decoder_T_189 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h3c")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_190 = eq(_id_ctrl_decoder_T_189, UInt<32>("h4")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_192 = eq(_id_ctrl_decoder_T_174, UInt<32>("h10000040")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_194 = or(_id_ctrl_decoder_T_190, _id_ctrl_decoder_T_173) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_195 = or(_id_ctrl_decoder_T_194, id_ctrl_decoder_18) @[Decode.scala 15:30]
    node id_ctrl_decoder_19 = or(_id_ctrl_decoder_T_195, _id_ctrl_decoder_T_192) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_196 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2000074")) @[Decode.scala 14:65]
    node id_ctrl_decoder_21 = eq(_id_ctrl_decoder_T_196, UInt<32>("h2000030")) @[Decode.scala 14:121]
    skip
    skip
    node _id_ctrl_decoder_T_199 = eq(_id_ctrl_decoder_T_11, UInt<32>("h0")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_201 = eq(_id_ctrl_decoder_T_61, UInt<32>("h10")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_202 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2024")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_203 = eq(_id_ctrl_decoder_T_202, UInt<32>("h24")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_204 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h28")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_205 = eq(_id_ctrl_decoder_T_204, UInt<32>("h28")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_206 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h1030")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_207 = eq(_id_ctrl_decoder_T_206, UInt<32>("h1030")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_208 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2030")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_209 = eq(_id_ctrl_decoder_T_208, UInt<32>("h2030")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_210 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h90000010")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_211 = eq(_id_ctrl_decoder_T_210, UInt<32>("h80000010")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_213 = or(_id_ctrl_decoder_T_199, _id_ctrl_decoder_T_201) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_214 = or(_id_ctrl_decoder_T_213, _id_ctrl_decoder_T_203) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_215 = or(_id_ctrl_decoder_T_214, _id_ctrl_decoder_T_205) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_216 = or(_id_ctrl_decoder_T_215, _id_ctrl_decoder_T_207) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_217 = or(_id_ctrl_decoder_T_216, _id_ctrl_decoder_T_209) @[Decode.scala 15:30]
    node id_ctrl_decoder_22 = or(_id_ctrl_decoder_T_217, _id_ctrl_decoder_T_211) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_218 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h1070")) @[Decode.scala 14:65]
    node id_ctrl_decoder_lo_5 = eq(_id_ctrl_decoder_T_218, UInt<32>("h1070")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_220 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2070")) @[Decode.scala 14:65]
    node id_ctrl_decoder_hi_lo_3 = eq(_id_ctrl_decoder_T_220, UInt<32>("h2070")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_222 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h10000070")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_223 = eq(_id_ctrl_decoder_T_222, UInt<32>("h70")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_224 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h12000034")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_225 = eq(_id_ctrl_decoder_T_224, UInt<32>("h10000030")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_226 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("he0000050")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_227 = eq(_id_ctrl_decoder_T_226, UInt<32>("h60000050")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_229 = or(_id_ctrl_decoder_T_223, id_ctrl_decoder_lo_5) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_230 = or(_id_ctrl_decoder_T_229, id_ctrl_decoder_hi_lo_3) @[Decode.scala 15:30]
    node _id_ctrl_decoder_T_231 = or(_id_ctrl_decoder_T_230, _id_ctrl_decoder_T_225) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_hi_3 = or(_id_ctrl_decoder_T_231, _id_ctrl_decoder_T_227) @[Decode.scala 15:30]
    node id_ctrl_decoder_hi_5 = cat(id_ctrl_decoder_hi_hi_3, id_ctrl_decoder_hi_lo_3) @[Cat.scala 30:58]
    node id_ctrl_decoder_23 = cat(id_ctrl_decoder_hi_5, id_ctrl_decoder_lo_5) @[Cat.scala 30:58]
    node _id_ctrl_decoder_T_232 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h3058")) @[Decode.scala 14:65]
    node id_ctrl_decoder_24 = eq(_id_ctrl_decoder_T_232, UInt<32>("h1008")) @[Decode.scala 14:121]
    skip
    skip
    node id_ctrl_decoder_25 = eq(_id_ctrl_decoder_T_106, UInt<32>("h8")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_236 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h6048")) @[Decode.scala 14:65]
    node id_ctrl_decoder_26 = eq(_id_ctrl_decoder_T_236, UInt<32>("h2008")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_238 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h105c")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_239 = eq(_id_ctrl_decoder_T_238, UInt<32>("h1004")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_240 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("h2000060")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_241 = eq(_id_ctrl_decoder_T_240, UInt<32>("h2000040")) @[Decode.scala 14:121]
    node _id_ctrl_decoder_T_242 = and(ibuf.io_inst_0_bits_inst_bits, UInt<32>("hd0000070")) @[Decode.scala 14:65]
    node _id_ctrl_decoder_T_243 = eq(_id_ctrl_decoder_T_242, UInt<32>("h40000050")) @[Decode.scala 14:121]
    skip
    node _id_ctrl_decoder_T_245 = or(_id_ctrl_decoder_T_239, _id_ctrl_decoder_T_241) @[Decode.scala 15:30]
    node id_ctrl_decoder_27 = or(_id_ctrl_decoder_T_245, _id_ctrl_decoder_T_243) @[Decode.scala 15:30]
    node id_raddr3 = ibuf.io_inst_0_bits_inst_rs3 @[RocketCore.scala 267:72]
    node id_raddr2 = ibuf.io_inst_0_bits_inst_rs2 @[RocketCore.scala 267:72]
    node id_raddr1 = ibuf.io_inst_0_bits_inst_rs1 @[RocketCore.scala 267:72]
    node id_waddr = ibuf.io_inst_0_bits_inst_rd @[RocketCore.scala 267:72]
    reg id_reg_fence : UInt<1>, clock with :
      reset => (UInt<1>("h0"), id_reg_fence) @[RocketCore.scala 274:25]
    node _id_rs_T = eq(id_raddr1, UInt<5>("h0")) @[RocketCore.scala 1022:45]
    skip
    skip
    skip
    node _id_rs_T_4 = rf.id_rs_MPORT.data @[RocketCore.scala 1022:25]
    skip
    skip
    skip
    skip
    node _id_rs_T_9 = rf.id_rs_MPORT_1.data @[RocketCore.scala 1022:25]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _id_csr_en_T = eq(id_ctrl_decoder_23, UInt<3>("h6")) @[package.scala 15:47]
    node _id_csr_en_T_1 = eq(id_ctrl_decoder_23, UInt<3>("h7")) @[package.scala 15:47]
    node _id_csr_en_T_2 = eq(id_ctrl_decoder_23, UInt<3>("h5")) @[package.scala 15:47]
    node _id_csr_en_T_3 = or(_id_csr_en_T, _id_csr_en_T_1) @[package.scala 72:59]
    node id_csr_en = or(_id_csr_en_T_3, _id_csr_en_T_2) @[package.scala 72:59]
    node id_system_insn = eq(id_ctrl_decoder_23, UInt<3>("h4")) @[RocketCore.scala 284:36]
    skip
    skip
    skip
    skip
    node id_csr_ren = and(_id_csr_en_T_3, _id_rs_T) @[RocketCore.scala 285:54]
    node id_csr = mux(id_csr_ren, UInt<3>("h2"), id_ctrl_decoder_23) @[RocketCore.scala 286:19]
    skip
    node _id_sfence_T = eq(id_ctrl_decoder_15, UInt<5>("h14")) @[RocketCore.scala 287:50]
    skip
    node id_sfence = and(id_ctrl_decoder_14, _id_sfence_T) @[RocketCore.scala 287:31]
    node _id_csr_flush_T = or(id_sfence, id_system_insn) @[RocketCore.scala 288:32]
    node _id_csr_flush_T_1 = not(id_csr_ren) @[RocketCore.scala 288:67]
    node _id_csr_flush_T_2 = and(id_csr_en, _id_csr_flush_T_1) @[RocketCore.scala 288:64]
    node _id_csr_flush_T_3 = and(_id_csr_flush_T_2, csr.io_decode_0_write_flush) @[RocketCore.scala 288:79]
    node id_csr_flush = or(_id_csr_flush_T, _id_csr_flush_T_3) @[RocketCore.scala 288:50]
    skip
    node _id_illegal_insn_T = not(id_ctrl_decoder_0) @[RocketCore.scala 296:25]
    skip
    skip
    skip
    node _id_illegal_insn_T_2 = bits(csr.io_status_isa, 12, 12) @[RocketCore.scala 297:55]
    node _id_illegal_insn_T_3 = not(_id_illegal_insn_T_2) @[RocketCore.scala 297:37]
    node _id_illegal_insn_T_4 = and(id_ctrl_decoder_21, _id_illegal_insn_T_3) @[RocketCore.scala 297:34]
    node _id_illegal_insn_T_5 = or(_id_illegal_insn_T, _id_illegal_insn_T_4) @[RocketCore.scala 296:40]
    node _id_illegal_insn_T_6 = bits(csr.io_status_isa, 0, 0) @[RocketCore.scala 298:38]
    node _id_illegal_insn_T_7 = not(_id_illegal_insn_T_6) @[RocketCore.scala 298:20]
    skip
    node _id_illegal_insn_T_8 = and(id_ctrl_decoder_26, _id_illegal_insn_T_7) @[RocketCore.scala 298:17]
    node _id_illegal_insn_T_9 = or(_id_illegal_insn_T_5, _id_illegal_insn_T_8) @[RocketCore.scala 297:65]
    node _id_illegal_insn_T_10 = or(csr.io_decode_0_fp_illegal, io_fpu_illegal_rm) @[RocketCore.scala 299:48]
    skip
    node _id_illegal_insn_T_11 = and(id_ctrl_decoder_1, _id_illegal_insn_T_10) @[RocketCore.scala 299:16]
    node _id_illegal_insn_T_12 = or(_id_illegal_insn_T_9, _id_illegal_insn_T_11) @[RocketCore.scala 298:48]
    node _id_illegal_insn_T_13 = bits(csr.io_status_isa, 3, 3) @[RocketCore.scala 300:37]
    node _id_illegal_insn_T_14 = not(_id_illegal_insn_T_13) @[RocketCore.scala 300:19]
    skip
    node _id_illegal_insn_T_15 = and(id_ctrl_decoder_27, _id_illegal_insn_T_14) @[RocketCore.scala 300:16]
    node _id_illegal_insn_T_16 = or(_id_illegal_insn_T_12, _id_illegal_insn_T_15) @[RocketCore.scala 299:70]
    node _id_illegal_insn_T_17 = bits(csr.io_status_isa, 2, 2) @[RocketCore.scala 301:51]
    node _id_illegal_insn_T_18 = not(_id_illegal_insn_T_17) @[RocketCore.scala 301:33]
    node _id_illegal_insn_T_19 = and(ibuf.io_inst_0_bits_rvc, _id_illegal_insn_T_18) @[RocketCore.scala 301:30]
    node _id_illegal_insn_T_20 = or(_id_illegal_insn_T_16, _id_illegal_insn_T_19) @[RocketCore.scala 300:47]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _id_illegal_insn_T_40 = and(_id_csr_flush_T_1, csr.io_decode_0_write_illegal) @[RocketCore.scala 307:64]
    node _id_illegal_insn_T_41 = or(csr.io_decode_0_read_illegal, _id_illegal_insn_T_40) @[RocketCore.scala 307:49]
    node _id_illegal_insn_T_42 = and(id_csr_en, _id_illegal_insn_T_41) @[RocketCore.scala 307:15]
    node _id_illegal_insn_T_43 = or(_id_illegal_insn_T_20, _id_illegal_insn_T_42) @[RocketCore.scala 306:81]
    node _id_illegal_insn_T_44 = not(ibuf.io_inst_0_bits_rvc) @[RocketCore.scala 308:5]
    skip
    node _id_illegal_insn_T_46 = and(_id_csr_flush_T, csr.io_decode_0_system_illegal) @[RocketCore.scala 308:65]
    node _id_illegal_insn_T_47 = and(_id_illegal_insn_T_44, _id_illegal_insn_T_46) @[RocketCore.scala 308:31]
    node id_illegal_insn = or(_id_illegal_insn_T_43, _id_illegal_insn_T_47) @[RocketCore.scala 307:99]
    node id_amo_aq = bits(ibuf.io_inst_0_bits_inst_bits, 26, 26) @[RocketCore.scala 310:29]
    node id_amo_rl = bits(ibuf.io_inst_0_bits_inst_bits, 25, 25) @[RocketCore.scala 311:29]
    skip
    node id_fence_succ = bits(ibuf.io_inst_0_bits_inst_bits, 23, 20) @[RocketCore.scala 313:33]
    node _id_fence_next_T = and(id_ctrl_decoder_26, id_amo_aq) @[RocketCore.scala 314:52]
    skip
    node id_fence_next = or(id_ctrl_decoder_25, _id_fence_next_T) @[RocketCore.scala 314:37]
    node _id_mem_busy_T = not(io_dmem_ordered) @[RocketCore.scala 315:21]
    node id_mem_busy = or(_id_mem_busy_T, io_dmem_req_valid) @[RocketCore.scala 315:38]
    node _T = not(id_mem_busy) @[RocketCore.scala 316:9]
    node _GEN_0 = mux(_T, UInt<1>("h0"), id_reg_fence) @[RocketCore.scala 316:23 274:25 316:38]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _id_do_fence_x8_T_1 = and(id_ctrl_decoder_26, id_amo_rl) @[RocketCore.scala 321:33]
    skip
    node _id_do_fence_x8_T_2 = or(_id_do_fence_x8_T_1, id_ctrl_decoder_24) @[RocketCore.scala 321:46]
    skip
    node _id_do_fence_x8_T_4 = and(id_reg_fence, id_ctrl_decoder_14) @[RocketCore.scala 321:81]
    node _id_do_fence_x8_T_5 = or(_id_do_fence_x8_T_2, _id_do_fence_x8_T_4) @[RocketCore.scala 321:65]
    node id_do_fence_x8 = and(id_mem_busy, _id_do_fence_x8_T_5) @[RocketCore.scala 321:17]
    skip
    node _T_1 = or(csr.io_interrupt, bpu.io_debug_if) @[RocketCore.scala 975:26]
    node _T_2 = or(_T_1, bpu.io_xcpt_if) @[RocketCore.scala 975:26]
    node _T_3 = or(_T_2, ibuf.io_inst_0_bits_xcpt0_pf_inst) @[RocketCore.scala 975:26]
    node _T_4 = or(_T_3, ibuf.io_inst_0_bits_xcpt0_ae_inst) @[RocketCore.scala 975:26]
    node _T_5 = or(_T_4, ibuf.io_inst_0_bits_xcpt1_pf_inst) @[RocketCore.scala 975:26]
    node _T_6 = or(_T_5, ibuf.io_inst_0_bits_xcpt1_ae_inst) @[RocketCore.scala 975:26]
    node id_xcpt = or(_T_6, id_illegal_insn) @[RocketCore.scala 975:26]
    node _T_7 = mux(ibuf.io_inst_0_bits_xcpt1_ae_inst, UInt<2>("h1"), UInt<2>("h2")) @[Mux.scala 47:69]
    node _T_8 = mux(ibuf.io_inst_0_bits_xcpt1_pf_inst, UInt<4>("hc"), pad(_T_7, 4)) @[Mux.scala 47:69]
    node _T_9 = mux(ibuf.io_inst_0_bits_xcpt0_ae_inst, UInt<4>("h1"), _T_8) @[Mux.scala 47:69]
    node _T_10 = mux(ibuf.io_inst_0_bits_xcpt0_pf_inst, UInt<4>("hc"), _T_9) @[Mux.scala 47:69]
    node _T_11 = mux(bpu.io_xcpt_if, UInt<4>("h3"), _T_10) @[Mux.scala 47:69]
    node _T_12 = mux(bpu.io_debug_if, UInt<4>("he"), _T_11) @[Mux.scala 47:69]
    node id_cause = mux(csr.io_interrupt, csr.io_interrupt_cause, pad(_T_12, 64)) @[Mux.scala 47:69]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node ex_waddr = bits(ex_reg_inst, 11, 7) @[RocketCore.scala 359:29]
    skip
    node mem_waddr = bits(mem_reg_inst, 11, 7) @[RocketCore.scala 360:31]
    skip
    node wb_waddr = bits(wb_reg_inst, 11, 7) @[RocketCore.scala 361:29]
    skip
    node _T_23 = and(ex_reg_valid, ex_ctrl_wxd) @[RocketCore.scala 364:19]
    node _T_24 = and(mem_reg_valid, mem_ctrl_wxd) @[RocketCore.scala 365:20]
    node _T_25 = not(mem_ctrl_mem) @[RocketCore.scala 365:39]
    node _T_26 = and(_T_24, _T_25) @[RocketCore.scala 365:36]
    skip
    node id_bypass_src_0_0 = eq(UInt<5>("h0"), id_raddr1) @[RocketCore.scala 367:82]
    skip
    node _id_bypass_src_T_1 = eq(ex_waddr, id_raddr1) @[RocketCore.scala 367:82]
    node id_bypass_src_0_1 = and(_T_23, _id_bypass_src_T_1) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_2 = eq(mem_waddr, id_raddr1) @[RocketCore.scala 367:82]
    node id_bypass_src_0_2 = and(_T_26, _id_bypass_src_T_2) @[RocketCore.scala 367:74]
    skip
    node id_bypass_src_0_3 = and(_T_24, _id_bypass_src_T_2) @[RocketCore.scala 367:74]
    node id_bypass_src_1_0 = eq(UInt<5>("h0"), id_raddr2) @[RocketCore.scala 367:82]
    skip
    node _id_bypass_src_T_5 = eq(ex_waddr, id_raddr2) @[RocketCore.scala 367:82]
    node id_bypass_src_1_1 = and(_T_23, _id_bypass_src_T_5) @[RocketCore.scala 367:74]
    node _id_bypass_src_T_6 = eq(mem_waddr, id_raddr2) @[RocketCore.scala 367:82]
    node id_bypass_src_1_2 = and(_T_26, _id_bypass_src_T_6) @[RocketCore.scala 367:74]
    skip
    node id_bypass_src_1_3 = and(_T_24, _id_bypass_src_T_6) @[RocketCore.scala 367:74]
    reg ex_reg_rs_bypass_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_rs_bypass_0) @[RocketCore.scala 371:29]
    reg ex_reg_rs_bypass_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), ex_reg_rs_bypass_1) @[RocketCore.scala 371:29]
    reg ex_reg_rs_lsb_0 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), ex_reg_rs_lsb_0) @[RocketCore.scala 372:26]
    reg ex_reg_rs_lsb_1 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), ex_reg_rs_lsb_1) @[RocketCore.scala 372:26]
    reg ex_reg_rs_msb_0 : UInt<62>, clock with :
      reset => (UInt<1>("h0"), ex_reg_rs_msb_0) @[RocketCore.scala 373:26]
    reg ex_reg_rs_msb_1 : UInt<62>, clock with :
      reset => (UInt<1>("h0"), ex_reg_rs_msb_1) @[RocketCore.scala 373:26]
    node _ex_rs_T = eq(ex_reg_rs_lsb_0, UInt<2>("h1")) @[package.scala 32:86]
    node _ex_rs_T_1 = mux(_ex_rs_T, mem_reg_wdata, UInt<64>("h0")) @[package.scala 32:76]
    node _ex_rs_T_2 = eq(ex_reg_rs_lsb_0, UInt<2>("h2")) @[package.scala 32:86]
    node _ex_rs_T_3 = mux(_ex_rs_T_2, wb_reg_wdata, _ex_rs_T_1) @[package.scala 32:76]
    node _ex_rs_T_4 = eq(ex_reg_rs_lsb_0, UInt<2>("h3")) @[package.scala 32:86]
    node _ex_rs_T_5 = mux(_ex_rs_T_4, io_dmem_resp_bits_data_word_bypass, _ex_rs_T_3) @[package.scala 32:76]
    node _ex_rs_T_6 = cat(ex_reg_rs_msb_0, ex_reg_rs_lsb_0) @[Cat.scala 30:58]
    node ex_rs_0 = mux(ex_reg_rs_bypass_0, _ex_rs_T_5, _ex_rs_T_6) @[RocketCore.scala 375:14]
    node _ex_rs_T_7 = eq(ex_reg_rs_lsb_1, UInt<2>("h1")) @[package.scala 32:86]
    node _ex_rs_T_8 = mux(_ex_rs_T_7, mem_reg_wdata, UInt<64>("h0")) @[package.scala 32:76]
    node _ex_rs_T_9 = eq(ex_reg_rs_lsb_1, UInt<2>("h2")) @[package.scala 32:86]
    node _ex_rs_T_10 = mux(_ex_rs_T_9, wb_reg_wdata, _ex_rs_T_8) @[package.scala 32:76]
    node _ex_rs_T_11 = eq(ex_reg_rs_lsb_1, UInt<2>("h3")) @[package.scala 32:86]
    node _ex_rs_T_12 = mux(_ex_rs_T_11, io_dmem_resp_bits_data_word_bypass, _ex_rs_T_10) @[package.scala 32:76]
    node _ex_rs_T_13 = cat(ex_reg_rs_msb_1, ex_reg_rs_lsb_1) @[Cat.scala 30:58]
    node ex_rs_1 = mux(ex_reg_rs_bypass_1, _ex_rs_T_12, _ex_rs_T_13) @[RocketCore.scala 375:14]
    node _ex_imm_sign_T = eq(ex_ctrl_sel_imm, UInt<3>("h5")) @[RocketCore.scala 1037:24]
    node _ex_imm_sign_T_1 = bits(ex_reg_inst, 31, 31) @[RocketCore.scala 1037:48]
    node _ex_imm_sign_T_2 = asSInt(_ex_imm_sign_T_1) @[RocketCore.scala 1037:53]
    node ex_imm_sign = mux(_ex_imm_sign_T, SInt<1>("h0"), _ex_imm_sign_T_2) @[RocketCore.scala 1037:19]
    node _ex_imm_b30_20_T = eq(ex_ctrl_sel_imm, UInt<3>("h2")) @[RocketCore.scala 1038:26]
    node _ex_imm_b30_20_T_1 = bits(ex_reg_inst, 30, 20) @[RocketCore.scala 1038:41]
    node _ex_imm_b30_20_T_2 = asSInt(_ex_imm_b30_20_T_1) @[RocketCore.scala 1038:49]
    node ex_imm_b30_20 = mux(_ex_imm_b30_20_T, _ex_imm_b30_20_T_2, pad(ex_imm_sign, 11)) @[RocketCore.scala 1038:21]
    node _ex_imm_b19_12_T = neq(ex_ctrl_sel_imm, UInt<3>("h2")) @[RocketCore.scala 1039:26]
    node _ex_imm_b19_12_T_1 = neq(ex_ctrl_sel_imm, UInt<3>("h3")) @[RocketCore.scala 1039:43]
    node _ex_imm_b19_12_T_2 = and(_ex_imm_b19_12_T, _ex_imm_b19_12_T_1) @[RocketCore.scala 1039:36]
    node _ex_imm_b19_12_T_3 = bits(ex_reg_inst, 19, 12) @[RocketCore.scala 1039:65]
    node _ex_imm_b19_12_T_4 = asSInt(_ex_imm_b19_12_T_3) @[RocketCore.scala 1039:73]
    node ex_imm_b19_12 = mux(_ex_imm_b19_12_T_2, pad(ex_imm_sign, 8), _ex_imm_b19_12_T_4) @[RocketCore.scala 1039:21]
    skip
    skip
    node _ex_imm_b11_T_2 = or(_ex_imm_b30_20_T, _ex_imm_sign_T) @[RocketCore.scala 1040:33]
    node _ex_imm_b11_T_3 = eq(ex_ctrl_sel_imm, UInt<3>("h3")) @[RocketCore.scala 1041:23]
    node _ex_imm_b11_T_4 = bits(ex_reg_inst, 20, 20) @[RocketCore.scala 1041:39]
    node _ex_imm_b11_T_5 = asSInt(_ex_imm_b11_T_4) @[RocketCore.scala 1041:44]
    node _ex_imm_b11_T_6 = eq(ex_ctrl_sel_imm, UInt<3>("h1")) @[RocketCore.scala 1042:23]
    node _ex_imm_b11_T_7 = bits(ex_reg_inst, 7, 7) @[RocketCore.scala 1042:39]
    node _ex_imm_b11_T_8 = asSInt(_ex_imm_b11_T_7) @[RocketCore.scala 1042:43]
    node _ex_imm_b11_T_9 = mux(_ex_imm_b11_T_6, _ex_imm_b11_T_8, ex_imm_sign) @[RocketCore.scala 1042:18]
    node _ex_imm_b11_T_10 = mux(_ex_imm_b11_T_3, _ex_imm_b11_T_5, _ex_imm_b11_T_9) @[RocketCore.scala 1041:18]
    node ex_imm_b11 = mux(_ex_imm_b11_T_2, SInt<1>("h0"), _ex_imm_b11_T_10) @[RocketCore.scala 1040:18]
    skip
    skip
    skip
    node _ex_imm_b10_5_T_3 = bits(ex_reg_inst, 30, 25) @[RocketCore.scala 1043:66]
    node ex_imm_lo_hi_hi = mux(_ex_imm_b11_T_2, UInt<6>("h0"), _ex_imm_b10_5_T_3) @[RocketCore.scala 1043:20]
    skip
    node _ex_imm_b4_1_T_1 = eq(ex_ctrl_sel_imm, UInt<3>("h0")) @[RocketCore.scala 1045:24]
    skip
    node _ex_imm_b4_1_T_3 = or(_ex_imm_b4_1_T_1, _ex_imm_b11_T_6) @[RocketCore.scala 1045:34]
    node _ex_imm_b4_1_T_4 = bits(ex_reg_inst, 11, 8) @[RocketCore.scala 1045:57]
    skip
    node _ex_imm_b4_1_T_6 = bits(ex_reg_inst, 19, 16) @[RocketCore.scala 1046:39]
    node _ex_imm_b4_1_T_7 = bits(ex_reg_inst, 24, 21) @[RocketCore.scala 1046:52]
    node _ex_imm_b4_1_T_8 = mux(_ex_imm_sign_T, _ex_imm_b4_1_T_6, _ex_imm_b4_1_T_7) @[RocketCore.scala 1046:19]
    node _ex_imm_b4_1_T_9 = mux(_ex_imm_b4_1_T_3, _ex_imm_b4_1_T_4, _ex_imm_b4_1_T_8) @[RocketCore.scala 1045:19]
    node ex_imm_lo_hi_lo = mux(_ex_imm_b30_20_T, UInt<4>("h0"), _ex_imm_b4_1_T_9) @[RocketCore.scala 1044:19]
    skip
    skip
    node _ex_imm_b0_T_2 = eq(ex_ctrl_sel_imm, UInt<3>("h4")) @[RocketCore.scala 1048:22]
    skip
    skip
    node _ex_imm_b0_T_5 = bits(ex_reg_inst, 15, 15) @[RocketCore.scala 1049:37]
    node _ex_imm_b0_T_6 = and(_ex_imm_sign_T, _ex_imm_b0_T_5) @[RocketCore.scala 1049:17]
    node _ex_imm_b0_T_7 = mux(_ex_imm_b0_T_2, _ex_imm_b11_T_4, _ex_imm_b0_T_6) @[RocketCore.scala 1048:17]
    node ex_imm_lo_lo = mux(_ex_imm_b4_1_T_1, _ex_imm_b11_T_7, _ex_imm_b0_T_7) @[RocketCore.scala 1047:17]
    node ex_imm_lo_hi = cat(ex_imm_lo_hi_hi, ex_imm_lo_hi_lo) @[Cat.scala 30:58]
    node ex_imm_lo = cat(ex_imm_lo_hi, ex_imm_lo_lo) @[Cat.scala 30:58]
    node ex_imm_hi_lo_lo = asUInt(ex_imm_b11) @[Cat.scala 30:58]
    node ex_imm_hi_lo_hi = asUInt(ex_imm_b19_12) @[Cat.scala 30:58]
    node ex_imm_hi_lo = cat(ex_imm_hi_lo_hi, ex_imm_hi_lo_lo) @[Cat.scala 30:58]
    node ex_imm_hi_hi_lo = asUInt(ex_imm_b30_20) @[Cat.scala 30:58]
    node ex_imm_hi_hi_hi = asUInt(ex_imm_sign) @[Cat.scala 30:58]
    node ex_imm_hi_hi = cat(ex_imm_hi_hi_hi, ex_imm_hi_hi_lo) @[Cat.scala 30:58]
    node ex_imm_hi = cat(ex_imm_hi_hi, ex_imm_hi_lo) @[Cat.scala 30:58]
    node _ex_imm_T = cat(ex_imm_hi, ex_imm_lo) @[Cat.scala 30:58]
    node ex_imm = asSInt(_ex_imm_T) @[RocketCore.scala 1051:53]
    node _ex_op1_T = asSInt(ex_rs_0) @[RocketCore.scala 378:24]
    node _ex_op1_T_1 = asSInt(ex_reg_pc) @[RocketCore.scala 379:24]
    node _ex_op1_T_2 = eq(UInt<2>("h1"), ex_ctrl_sel_alu1) @[Mux.scala 80:60]
    node _ex_op1_T_3 = mux(_ex_op1_T_2, _ex_op1_T, SInt<64>("h0")) @[Mux.scala 80:57]
    node _ex_op1_T_4 = eq(UInt<2>("h2"), ex_ctrl_sel_alu1) @[Mux.scala 80:60]
    node ex_op1 = mux(_ex_op1_T_4, pad(_ex_op1_T_1, 64), _ex_op1_T_3) @[Mux.scala 80:57]
    node _ex_op2_T = asSInt(ex_rs_1) @[RocketCore.scala 381:24]
    node _ex_op2_T_1 = mux(ex_reg_rvc, SInt<4>("h2"), SInt<4>("h4")) @[RocketCore.scala 383:19]
    node _ex_op2_T_2 = eq(UInt<2>("h2"), ex_ctrl_sel_alu2) @[Mux.scala 80:60]
    node _ex_op2_T_3 = mux(_ex_op2_T_2, _ex_op2_T, SInt<64>("h0")) @[Mux.scala 80:57]
    node _ex_op2_T_4 = eq(UInt<2>("h3"), ex_ctrl_sel_alu2) @[Mux.scala 80:60]
    node _ex_op2_T_5 = mux(_ex_op2_T_4, pad(ex_imm, 64), _ex_op2_T_3) @[Mux.scala 80:57]
    node _ex_op2_T_6 = eq(UInt<2>("h1"), ex_ctrl_sel_alu2) @[Mux.scala 80:60]
    node ex_op2 = mux(_ex_op2_T_6, pad(_ex_op2_T_1, 64), _ex_op2_T_5) @[Mux.scala 80:57]
    skip
    skip
    skip
    node _ctrl_killd_T = not(ibuf.io_inst_0_valid) @[RocketCore.scala 784:17]
    node _ctrl_killd_T_1 = or(_ctrl_killd_T, ibuf.io_inst_0_bits_replay) @[RocketCore.scala 784:40]
    node _ctrl_killd_T_2 = or(_ctrl_killd_T_1, take_pc_mem_wb) @[RocketCore.scala 784:71]
    node _T_123 = neq(id_raddr1, UInt<5>("h0")) @[RocketCore.scala 714:55]
    node _T_124 = and(id_ctrl_decoder_7, _T_123) @[RocketCore.scala 714:42]
    node _data_hazard_ex_T = eq(id_raddr1, ex_waddr) @[RocketCore.scala 734:70]
    node _data_hazard_ex_T_1 = and(_T_124, _data_hazard_ex_T) @[RocketCore.scala 984:27]
    node _T_125 = neq(id_raddr2, UInt<5>("h0")) @[RocketCore.scala 715:55]
    node _T_126 = and(id_ctrl_decoder_6, _T_125) @[RocketCore.scala 715:42]
    node _data_hazard_ex_T_2 = eq(id_raddr2, ex_waddr) @[RocketCore.scala 734:70]
    node _data_hazard_ex_T_3 = and(_T_126, _data_hazard_ex_T_2) @[RocketCore.scala 984:27]
    node _data_hazard_ex_T_6 = or(_data_hazard_ex_T_1, _data_hazard_ex_T_3) @[RocketCore.scala 984:50]
    node _T_127 = neq(id_waddr, UInt<5>("h0")) @[RocketCore.scala 716:55]
    node _T_128 = and(id_ctrl_decoder_22, _T_127) @[RocketCore.scala 716:42]
    node _data_hazard_ex_T_4 = eq(id_waddr, ex_waddr) @[RocketCore.scala 734:70]
    node _data_hazard_ex_T_5 = and(_T_128, _data_hazard_ex_T_4) @[RocketCore.scala 984:27]
    node _data_hazard_ex_T_7 = or(_data_hazard_ex_T_6, _data_hazard_ex_T_5) @[RocketCore.scala 984:50]
    node data_hazard_ex = and(ex_ctrl_wxd, _data_hazard_ex_T_7) @[RocketCore.scala 734:36]
    node _ex_cannot_bypass_T = neq(ex_ctrl_csr, UInt<3>("h0")) @[RocketCore.scala 733:38]
    node _ex_cannot_bypass_T_1 = or(_ex_cannot_bypass_T, ex_ctrl_jalr) @[RocketCore.scala 733:48]
    node _ex_cannot_bypass_T_2 = or(_ex_cannot_bypass_T_1, ex_ctrl_mem) @[RocketCore.scala 733:64]
    skip
    node _ex_cannot_bypass_T_4 = or(_ex_cannot_bypass_T_2, ex_ctrl_div) @[RocketCore.scala 733:94]
    node ex_cannot_bypass = or(_ex_cannot_bypass_T_4, ex_ctrl_fp) @[RocketCore.scala 733:109]
    skip
    skip
    node _id_ex_hazard_T = and(data_hazard_ex, ex_cannot_bypass) @[RocketCore.scala 736:54]
    skip
    node _fp_data_hazard_ex_T_1 = and(io_fpu_dec_ren1, _data_hazard_ex_T) @[RocketCore.scala 984:27]
    skip
    node _fp_data_hazard_ex_T_3 = and(io_fpu_dec_ren2, _data_hazard_ex_T_2) @[RocketCore.scala 984:27]
    node _fp_data_hazard_ex_T_8 = or(_fp_data_hazard_ex_T_1, _fp_data_hazard_ex_T_3) @[RocketCore.scala 984:50]
    node _fp_data_hazard_ex_T_4 = eq(id_raddr3, ex_waddr) @[RocketCore.scala 735:76]
    node _fp_data_hazard_ex_T_5 = and(io_fpu_dec_ren3, _fp_data_hazard_ex_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_ex_T_9 = or(_fp_data_hazard_ex_T_8, _fp_data_hazard_ex_T_5) @[RocketCore.scala 984:50]
    skip
    node _fp_data_hazard_ex_T_7 = and(io_fpu_dec_wen, _data_hazard_ex_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_ex_T_10 = or(_fp_data_hazard_ex_T_9, _fp_data_hazard_ex_T_7) @[RocketCore.scala 984:50]
    node fp_data_hazard_ex = and(ex_ctrl_wfd, _fp_data_hazard_ex_T_10) @[RocketCore.scala 735:39]
    node _id_ex_hazard_T_1 = or(_id_ex_hazard_T, fp_data_hazard_ex) @[RocketCore.scala 736:74]
    node id_ex_hazard = and(ex_reg_valid, _id_ex_hazard_T_1) @[RocketCore.scala 736:35]
    node _data_hazard_mem_T = eq(id_raddr1, mem_waddr) @[RocketCore.scala 743:72]
    node _data_hazard_mem_T_1 = and(_T_124, _data_hazard_mem_T) @[RocketCore.scala 984:27]
    node _data_hazard_mem_T_2 = eq(id_raddr2, mem_waddr) @[RocketCore.scala 743:72]
    node _data_hazard_mem_T_3 = and(_T_126, _data_hazard_mem_T_2) @[RocketCore.scala 984:27]
    node _data_hazard_mem_T_6 = or(_data_hazard_mem_T_1, _data_hazard_mem_T_3) @[RocketCore.scala 984:50]
    node _data_hazard_mem_T_4 = eq(id_waddr, mem_waddr) @[RocketCore.scala 743:72]
    node _data_hazard_mem_T_5 = and(_T_128, _data_hazard_mem_T_4) @[RocketCore.scala 984:27]
    node _data_hazard_mem_T_7 = or(_data_hazard_mem_T_6, _data_hazard_mem_T_5) @[RocketCore.scala 984:50]
    node data_hazard_mem = and(mem_ctrl_wxd, _data_hazard_mem_T_7) @[RocketCore.scala 743:38]
    node _mem_cannot_bypass_T = neq(mem_ctrl_csr, UInt<3>("h0")) @[RocketCore.scala 742:40]
    skip
    node _mem_cannot_bypass_T_1 = and(mem_ctrl_mem, mem_reg_slow_bypass) @[RocketCore.scala 742:66]
    node _mem_cannot_bypass_T_2 = or(_mem_cannot_bypass_T, _mem_cannot_bypass_T_1) @[RocketCore.scala 742:50]
    skip
    node _mem_cannot_bypass_T_4 = or(_mem_cannot_bypass_T_2, mem_ctrl_div) @[RocketCore.scala 742:100]
    node mem_cannot_bypass = or(_mem_cannot_bypass_T_4, mem_ctrl_fp) @[RocketCore.scala 742:116]
    skip
    node _id_mem_hazard_T = and(data_hazard_mem, mem_cannot_bypass) @[RocketCore.scala 745:57]
    skip
    node _fp_data_hazard_mem_T_1 = and(io_fpu_dec_ren1, _data_hazard_mem_T) @[RocketCore.scala 984:27]
    skip
    node _fp_data_hazard_mem_T_3 = and(io_fpu_dec_ren2, _data_hazard_mem_T_2) @[RocketCore.scala 984:27]
    node _fp_data_hazard_mem_T_8 = or(_fp_data_hazard_mem_T_1, _fp_data_hazard_mem_T_3) @[RocketCore.scala 984:50]
    node _fp_data_hazard_mem_T_4 = eq(id_raddr3, mem_waddr) @[RocketCore.scala 744:78]
    node _fp_data_hazard_mem_T_5 = and(io_fpu_dec_ren3, _fp_data_hazard_mem_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_mem_T_9 = or(_fp_data_hazard_mem_T_8, _fp_data_hazard_mem_T_5) @[RocketCore.scala 984:50]
    skip
    node _fp_data_hazard_mem_T_7 = and(io_fpu_dec_wen, _data_hazard_mem_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_mem_T_10 = or(_fp_data_hazard_mem_T_9, _fp_data_hazard_mem_T_7) @[RocketCore.scala 984:50]
    node fp_data_hazard_mem = and(mem_ctrl_wfd, _fp_data_hazard_mem_T_10) @[RocketCore.scala 744:41]
    node _id_mem_hazard_T_1 = or(_id_mem_hazard_T, fp_data_hazard_mem) @[RocketCore.scala 745:78]
    node id_mem_hazard = and(mem_reg_valid, _id_mem_hazard_T_1) @[RocketCore.scala 745:37]
    node _ctrl_stalld_T = or(id_ex_hazard, id_mem_hazard) @[RocketCore.scala 772:18]
    node _data_hazard_wb_T = eq(id_raddr1, wb_waddr) @[RocketCore.scala 749:70]
    node _data_hazard_wb_T_1 = and(_T_124, _data_hazard_wb_T) @[RocketCore.scala 984:27]
    node _data_hazard_wb_T_2 = eq(id_raddr2, wb_waddr) @[RocketCore.scala 749:70]
    node _data_hazard_wb_T_3 = and(_T_126, _data_hazard_wb_T_2) @[RocketCore.scala 984:27]
    node _data_hazard_wb_T_6 = or(_data_hazard_wb_T_1, _data_hazard_wb_T_3) @[RocketCore.scala 984:50]
    node _data_hazard_wb_T_4 = eq(id_waddr, wb_waddr) @[RocketCore.scala 749:70]
    node _data_hazard_wb_T_5 = and(_T_128, _data_hazard_wb_T_4) @[RocketCore.scala 984:27]
    node _data_hazard_wb_T_7 = or(_data_hazard_wb_T_6, _data_hazard_wb_T_5) @[RocketCore.scala 984:50]
    node data_hazard_wb = and(wb_ctrl_wxd, _data_hazard_wb_T_7) @[RocketCore.scala 749:36]
    node _wb_dcache_miss_T = not(io_dmem_resp_valid) @[RocketCore.scala 491:39]
    node wb_dcache_miss = and(wb_ctrl_mem, _wb_dcache_miss_T) @[RocketCore.scala 491:36]
    node wb_set_sboard = or(wb_ctrl_div, wb_dcache_miss) @[RocketCore.scala 636:35]
    skip
    node _id_wb_hazard_T = and(data_hazard_wb, wb_set_sboard) @[RocketCore.scala 751:54]
    skip
    node _fp_data_hazard_wb_T_1 = and(io_fpu_dec_ren1, _data_hazard_wb_T) @[RocketCore.scala 984:27]
    skip
    node _fp_data_hazard_wb_T_3 = and(io_fpu_dec_ren2, _data_hazard_wb_T_2) @[RocketCore.scala 984:27]
    node _fp_data_hazard_wb_T_8 = or(_fp_data_hazard_wb_T_1, _fp_data_hazard_wb_T_3) @[RocketCore.scala 984:50]
    node _fp_data_hazard_wb_T_4 = eq(id_raddr3, wb_waddr) @[RocketCore.scala 750:76]
    node _fp_data_hazard_wb_T_5 = and(io_fpu_dec_ren3, _fp_data_hazard_wb_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_wb_T_9 = or(_fp_data_hazard_wb_T_8, _fp_data_hazard_wb_T_5) @[RocketCore.scala 984:50]
    skip
    node _fp_data_hazard_wb_T_7 = and(io_fpu_dec_wen, _data_hazard_wb_T_4) @[RocketCore.scala 984:27]
    node _fp_data_hazard_wb_T_10 = or(_fp_data_hazard_wb_T_9, _fp_data_hazard_wb_T_7) @[RocketCore.scala 984:50]
    node fp_data_hazard_wb = and(wb_ctrl_wfd, _fp_data_hazard_wb_T_10) @[RocketCore.scala 750:39]
    node _id_wb_hazard_T_1 = or(_id_wb_hazard_T, fp_data_hazard_wb) @[RocketCore.scala 751:71]
    node id_wb_hazard = and(wb_reg_valid, _id_wb_hazard_T_1) @[RocketCore.scala 751:35]
    node _ctrl_stalld_T_1 = or(_ctrl_stalld_T, id_wb_hazard) @[RocketCore.scala 772:35]
    reg _r : UInt<32>, clock with :
      reset => (UInt<1>("h0"), _r) @[RocketCore.scala 1001:25]
    node _r_T = shr(_r, 1) @[RocketCore.scala 1002:35]
    node r = shl(_r_T, 1) @[RocketCore.scala 1002:40]
    node _id_sboard_hazard_T = dshr(r, id_raddr1) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_1 = bits(_id_sboard_hazard_T, 0, 0) @[RocketCore.scala 998:35]
    node dmem_resp_valid = and(io_dmem_resp_valid, io_dmem_resp_bits_has_data) @[RocketCore.scala 646:44]
    node dmem_resp_replay = and(dmem_resp_valid, io_dmem_resp_bits_replay) @[RocketCore.scala 647:42]
    node _dmem_resp_xpu_T = bits(io_dmem_resp_bits_tag, 0, 0) @[RocketCore.scala 643:45]
    skip
    node dmem_resp_xpu = not(_dmem_resp_xpu_T) @[RocketCore.scala 643:23]
    node _T_117 = and(dmem_resp_replay, dmem_resp_xpu) @[RocketCore.scala 662:26]
    node ll_wen_x1 = and(div.io_resp_ready, div.io_resp_valid) @[Decoupled.scala 40:37]
    node ll_wen = or(_T_117, ll_wen_x1) @[RocketCore.scala 662:44 667:12]
    skip
    node dmem_resp_waddr = bits(io_dmem_resp_bits_tag, 5, 1) @[RocketCore.scala 645:46]
    node ll_waddr = mux(_T_117, dmem_resp_waddr, div.io_resp_bits_tag) @[RocketCore.scala 662:44 666:14]
    skip
    node _id_sboard_hazard_T_2 = eq(ll_waddr, id_raddr1) @[RocketCore.scala 726:70]
    node _id_sboard_hazard_T_3 = and(ll_wen, _id_sboard_hazard_T_2) @[RocketCore.scala 726:58]
    node _id_sboard_hazard_T_4 = not(_id_sboard_hazard_T_3) @[RocketCore.scala 729:80]
    node _id_sboard_hazard_T_5 = and(_id_sboard_hazard_T_1, _id_sboard_hazard_T_4) @[RocketCore.scala 729:77]
    node _id_sboard_hazard_T_6 = and(_T_124, _id_sboard_hazard_T_5) @[RocketCore.scala 984:27]
    node _id_sboard_hazard_T_7 = dshr(r, id_raddr2) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_8 = bits(_id_sboard_hazard_T_7, 0, 0) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_9 = eq(ll_waddr, id_raddr2) @[RocketCore.scala 726:70]
    node _id_sboard_hazard_T_10 = and(ll_wen, _id_sboard_hazard_T_9) @[RocketCore.scala 726:58]
    node _id_sboard_hazard_T_11 = not(_id_sboard_hazard_T_10) @[RocketCore.scala 729:80]
    node _id_sboard_hazard_T_12 = and(_id_sboard_hazard_T_8, _id_sboard_hazard_T_11) @[RocketCore.scala 729:77]
    node _id_sboard_hazard_T_13 = and(_T_126, _id_sboard_hazard_T_12) @[RocketCore.scala 984:27]
    node _id_sboard_hazard_T_21 = or(_id_sboard_hazard_T_6, _id_sboard_hazard_T_13) @[RocketCore.scala 984:50]
    node _id_sboard_hazard_T_14 = dshr(r, id_waddr) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_15 = bits(_id_sboard_hazard_T_14, 0, 0) @[RocketCore.scala 998:35]
    node _id_sboard_hazard_T_16 = eq(ll_waddr, id_waddr) @[RocketCore.scala 726:70]
    node _id_sboard_hazard_T_17 = and(ll_wen, _id_sboard_hazard_T_16) @[RocketCore.scala 726:58]
    node _id_sboard_hazard_T_18 = not(_id_sboard_hazard_T_17) @[RocketCore.scala 729:80]
    node _id_sboard_hazard_T_19 = and(_id_sboard_hazard_T_15, _id_sboard_hazard_T_18) @[RocketCore.scala 729:77]
    node _id_sboard_hazard_T_20 = and(_T_128, _id_sboard_hazard_T_19) @[RocketCore.scala 984:27]
    node id_sboard_hazard = or(_id_sboard_hazard_T_21, _id_sboard_hazard_T_20) @[RocketCore.scala 984:50]
    node _ctrl_stalld_T_2 = or(_ctrl_stalld_T_1, id_sboard_hazard) @[RocketCore.scala 772:51]
    node _ctrl_stalld_T_3 = or(ex_reg_valid, mem_reg_valid) @[RocketCore.scala 773:40]
    node _ctrl_stalld_T_4 = or(_ctrl_stalld_T_3, wb_reg_valid) @[RocketCore.scala 773:57]
    node _ctrl_stalld_T_5 = and(csr.io_singleStep, _ctrl_stalld_T_4) @[RocketCore.scala 773:23]
    node _ctrl_stalld_T_6 = or(_ctrl_stalld_T_2, _ctrl_stalld_T_5) @[RocketCore.scala 772:71]
    node _ctrl_stalld_T_7 = and(id_csr_en, csr.io_decode_0_fp_csr) @[RocketCore.scala 774:15]
    node _ctrl_stalld_T_8 = not(io_fpu_fcsr_rdy) @[RocketCore.scala 774:45]
    node _ctrl_stalld_T_9 = and(_ctrl_stalld_T_7, _ctrl_stalld_T_8) @[RocketCore.scala 774:42]
    node _ctrl_stalld_T_10 = or(_ctrl_stalld_T_6, _ctrl_stalld_T_9) @[RocketCore.scala 773:74]
    reg id_stall_fpu__r : UInt<32>, clock with :
      reset => (UInt<1>("h0"), id_stall_fpu__r) @[RocketCore.scala 1001:25]
    node _id_stall_fpu_T_18 = dshr(id_stall_fpu__r, id_raddr1) @[RocketCore.scala 998:35]
    node _id_stall_fpu_T_19 = bits(_id_stall_fpu_T_18, 0, 0) @[RocketCore.scala 998:35]
    node _id_stall_fpu_T_20 = and(io_fpu_dec_ren1, _id_stall_fpu_T_19) @[RocketCore.scala 984:27]
    node _id_stall_fpu_T_21 = dshr(id_stall_fpu__r, id_raddr2) @[RocketCore.scala 998:35]
    node _id_stall_fpu_T_22 = bits(_id_stall_fpu_T_21, 0, 0) @[RocketCore.scala 998:35]
    node _id_stall_fpu_T_23 = and(io_fpu_dec_ren2, _id_stall_fpu_T_22) @[RocketCore.scala 984:27]
    node _id_stall_fpu_T_30 = or(_id_stall_fpu_T_20, _id_stall_fpu_T_23) @[RocketCore.scala 984:50]
    node _id_stall_fpu_T_24 = dshr(id_stall_fpu__r, id_raddr3) @[RocketCore.scala 998:35]
    node _id_stall_fpu_T_25 = bits(_id_stall_fpu_T_24, 0, 0) @[RocketCore.scala 998:35]
    node _id_stall_fpu_T_26 = and(io_fpu_dec_ren3, _id_stall_fpu_T_25) @[RocketCore.scala 984:27]
    node _id_stall_fpu_T_31 = or(_id_stall_fpu_T_30, _id_stall_fpu_T_26) @[RocketCore.scala 984:50]
    node _id_stall_fpu_T_27 = dshr(id_stall_fpu__r, id_waddr) @[RocketCore.scala 998:35]
    node _id_stall_fpu_T_28 = bits(_id_stall_fpu_T_27, 0, 0) @[RocketCore.scala 998:35]
    node _id_stall_fpu_T_29 = and(io_fpu_dec_wen, _id_stall_fpu_T_28) @[RocketCore.scala 984:27]
    node id_stall_fpu = or(_id_stall_fpu_T_31, _id_stall_fpu_T_29) @[RocketCore.scala 984:50]
    node _ctrl_stalld_T_11 = and(id_ctrl_decoder_1, id_stall_fpu) @[RocketCore.scala 775:16]
    node _ctrl_stalld_T_12 = or(_ctrl_stalld_T_10, _ctrl_stalld_T_11) @[RocketCore.scala 774:62]
    reg blocked : UInt<1>, clock with :
      reset => (UInt<1>("h0"), blocked) @[RocketCore.scala 764:22]
    node _dcache_blocked_T = not(io_dmem_perf_grant) @[RocketCore.scala 766:16]
    node dcache_blocked = and(blocked, _dcache_blocked_T) @[RocketCore.scala 766:13]
    node _ctrl_stalld_T_13 = and(id_ctrl_decoder_14, dcache_blocked) @[RocketCore.scala 776:17]
    node _ctrl_stalld_T_14 = or(_ctrl_stalld_T_12, _ctrl_stalld_T_13) @[RocketCore.scala 775:32]
    skip
    skip
    skip
    node wb_wxd = and(wb_reg_valid, wb_ctrl_wxd) @[RocketCore.scala 635:29]
    node _ctrl_stalld_T_17 = not(wb_wxd) @[RocketCore.scala 778:65]
    node _ctrl_stalld_T_18 = and(div.io_resp_valid, _ctrl_stalld_T_17) @[RocketCore.scala 778:62]
    node _ctrl_stalld_T_19 = or(div.io_req_ready, _ctrl_stalld_T_18) @[RocketCore.scala 778:40]
    node _ctrl_stalld_T_20 = not(_ctrl_stalld_T_19) @[RocketCore.scala 778:21]
    node _ctrl_stalld_T_21 = or(_ctrl_stalld_T_20, div.io_req_valid) @[RocketCore.scala 778:75]
    node _ctrl_stalld_T_22 = and(id_ctrl_decoder_21, _ctrl_stalld_T_21) @[RocketCore.scala 778:17]
    node _ctrl_stalld_T_23 = or(_ctrl_stalld_T_14, _ctrl_stalld_T_22) @[RocketCore.scala 777:34]
    skip
    skip
    skip
    skip
    node _ctrl_stalld_T_26 = or(_ctrl_stalld_T_23, id_do_fence_x8) @[RocketCore.scala 779:15]
    node _ctrl_stalld_T_27 = or(_ctrl_stalld_T_26, csr.io_csr_stall) @[RocketCore.scala 780:17]
    node ctrl_stalld = or(_ctrl_stalld_T_27, id_reg_pause) @[RocketCore.scala 781:22]
    skip
    node _ctrl_killd_T_3 = or(_ctrl_killd_T_2, ctrl_stalld) @[RocketCore.scala 784:89]
    node ctrl_killd = or(_ctrl_killd_T_3, csr.io_interrupt) @[RocketCore.scala 784:104]
    skip
    node _ex_reg_valid_T = not(ctrl_killd) @[RocketCore.scala 423:19]
    node _ex_reg_replay_T = not(take_pc_mem_wb) @[RocketCore.scala 424:20]
    node _ex_reg_replay_T_1 = and(_ex_reg_replay_T, ibuf.io_inst_0_valid) @[RocketCore.scala 424:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_29 = eq(id_fence_succ, UInt<4>("h0")) @[RocketCore.scala 434:42]
    node _T_30 = and(id_ctrl_decoder_25, _T_29) @[RocketCore.scala 434:25]
    node _GEN_1 = or(_T_30, id_reg_pause) @[RocketCore.scala 114:25 434:{49,64}]
    node _GEN_2 = or(id_fence_next, _GEN_0) @[RocketCore.scala 435:{26,41}]
    node _T_31 = cat(ibuf.io_inst_0_bits_xcpt1_pf_inst, ibuf.io_inst_0_bits_xcpt1_ae_inst) @[RocketCore.scala 441:22]
    node _T_32 = orr(_T_31) @[RocketCore.scala 441:29]
    node _GEN_3 = mux(_T_32, UInt<2>("h2"), UInt<2>("h1")) @[RocketCore.scala 439:24 441:34 442:26]
    node _GEN_4 = mux(_T_32, UInt<2>("h1"), UInt<2>("h0")) @[RocketCore.scala 440:24 441:34 443:26]
    node _GEN_5 = or(_T_32, ibuf.io_inst_0_bits_rvc) @[RocketCore.scala 430:16 441:34 444:20]
    node _T_33 = cat(ibuf.io_inst_0_bits_xcpt0_pf_inst, ibuf.io_inst_0_bits_xcpt0_ae_inst) @[RocketCore.scala 446:40]
    node _T_34 = orr(_T_33) @[RocketCore.scala 446:47]
    node _T_35 = or(bpu.io_xcpt_if, _T_34) @[RocketCore.scala 446:28]
    node _GEN_6 = mux(_T_35, UInt<2>("h2"), _GEN_3) @[RocketCore.scala 446:52 447:26]
    node _GEN_7 = mux(_T_35, UInt<2>("h0"), _GEN_4) @[RocketCore.scala 446:52 448:26]
    skip
    node _GEN_8 = mux(id_xcpt, UInt<4>("h0"), id_ctrl_decoder_13) @[RocketCore.scala 429:13 436:20 437:22]
    skip
    node _GEN_9 = or(id_xcpt, id_ctrl_decoder_12) @[RocketCore.scala 429:13 436:20 438:22]
    skip
    node _GEN_10 = mux(id_xcpt, _GEN_6, id_ctrl_decoder_10) @[RocketCore.scala 429:13 436:20]
    skip
    node _GEN_11 = mux(id_xcpt, _GEN_7, id_ctrl_decoder_9) @[RocketCore.scala 429:13 436:20]
    node _GEN_12 = mux(id_xcpt, _GEN_5, ibuf.io_inst_0_bits_rvc) @[RocketCore.scala 430:16 436:20]
    node _ex_reg_flush_pipe_T = or(id_ctrl_decoder_24, id_csr_flush) @[RocketCore.scala 451:42]
    node _ex_reg_mem_size_T = bits(ibuf.io_inst_0_bits_inst_bits, 13, 12) @[RocketCore.scala 453:34]
    skip
    node _T_37 = eq(id_ctrl_decoder_15, UInt<5>("h5")) @[package.scala 15:47]
    node _T_38 = or(_id_sfence_T, _T_37) @[package.scala 72:59]
    skip
    skip
    node _ex_reg_mem_size_T_1 = cat(_T_125, _T_123) @[Cat.scala 30:58]
    node _GEN_13 = mux(_T_38, _ex_reg_mem_size_T_1, _ex_reg_mem_size_T) @[RocketCore.scala 453:21 454:59 455:23]
    node _do_bypass_T = or(id_bypass_src_0_0, id_bypass_src_0_1) @[RocketCore.scala 464:48]
    node _do_bypass_T_1 = or(_do_bypass_T, id_bypass_src_0_2) @[RocketCore.scala 464:48]
    node do_bypass = or(_do_bypass_T_1, id_bypass_src_0_3) @[RocketCore.scala 464:48]
    node _bypass_src_T = mux(id_bypass_src_0_2, UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:69]
    node _bypass_src_T_1 = mux(id_bypass_src_0_1, UInt<2>("h1"), _bypass_src_T) @[Mux.scala 47:69]
    node bypass_src = mux(id_bypass_src_0_0, UInt<2>("h0"), _bypass_src_T_1) @[Mux.scala 47:69]
    node _T_39 = not(do_bypass) @[RocketCore.scala 468:26]
    node _T_40 = and(id_ctrl_decoder_7, _T_39) @[RocketCore.scala 468:23]
    node _wb_valid_T = not(replay_wb_common) @[RocketCore.scala 670:34]
    node _wb_valid_T_1 = and(wb_reg_valid, _wb_valid_T) @[RocketCore.scala 670:31]
    node _wb_valid_T_2 = not(wb_xcpt) @[RocketCore.scala 670:48]
    node wb_valid = and(_wb_valid_T_1, _wb_valid_T_2) @[RocketCore.scala 670:45]
    node wb_wen = and(wb_valid, wb_ctrl_wxd) @[RocketCore.scala 671:25]
    node rf_wen = or(wb_wen, ll_wen) @[RocketCore.scala 672:23]
    node rf_waddr = mux(ll_wen, ll_waddr, wb_waddr) @[RocketCore.scala 673:21]
    node _T_118 = neq(rf_waddr, UInt<5>("h0")) @[RocketCore.scala 1027:16]
    node _T_121 = eq(rf_waddr, id_raddr1) @[RocketCore.scala 1030:20]
    node _rf_wdata_T = and(dmem_resp_valid, dmem_resp_xpu) @[RocketCore.scala 674:38]
    skip
    node ll_wdata = div.io_resp_bits_data
    node _rf_wdata_T_2 = neq(wb_ctrl_csr, UInt<3>("h0")) @[RocketCore.scala 676:34]
    skip
    node _rf_wdata_T_4 = mux(_rf_wdata_T_2, csr.io_rw_rdata, wb_reg_wdata) @[RocketCore.scala 676:21]
    node _rf_wdata_T_5 = mux(ll_wen, ll_wdata, _rf_wdata_T_4) @[RocketCore.scala 675:21]
    node rf_wdata = mux(_rf_wdata_T, io_dmem_resp_bits_data, _rf_wdata_T_5) @[RocketCore.scala 674:21]
    node _GEN_226 = mux(_T_121, rf_wdata, _id_rs_T_4) @[RocketCore.scala 1022:19 1030:{31,39}]
    node _GEN_233 = mux(_T_118, _GEN_226, _id_rs_T_4) @[RocketCore.scala 1022:19 1027:29]
    node id_rs_0 = mux(rf_wen, _GEN_233, _id_rs_T_4) @[RocketCore.scala 679:17 1022:19]
    skip
    node _ex_reg_rs_lsb_0_T = bits(id_rs_0, 1, 0) @[RocketCore.scala 469:37]
    node _ex_reg_rs_msb_0_T = shr(id_rs_0, 2) @[RocketCore.scala 470:38]
    node _GEN_14 = mux(_T_40, _ex_reg_rs_lsb_0_T, bypass_src) @[RocketCore.scala 467:24 468:38 469:26]
    node _GEN_15 = mux(_T_40, _ex_reg_rs_msb_0_T, ex_reg_rs_msb_0) @[RocketCore.scala 373:26 468:38 470:26]
    node _do_bypass_T_2 = or(id_bypass_src_1_0, id_bypass_src_1_1) @[RocketCore.scala 464:48]
    node _do_bypass_T_3 = or(_do_bypass_T_2, id_bypass_src_1_2) @[RocketCore.scala 464:48]
    node do_bypass_1 = or(_do_bypass_T_3, id_bypass_src_1_3) @[RocketCore.scala 464:48]
    node _bypass_src_T_2 = mux(id_bypass_src_1_2, UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:69]
    node _bypass_src_T_3 = mux(id_bypass_src_1_1, UInt<2>("h1"), _bypass_src_T_2) @[Mux.scala 47:69]
    node bypass_src_1 = mux(id_bypass_src_1_0, UInt<2>("h0"), _bypass_src_T_3) @[Mux.scala 47:69]
    node _T_41 = not(do_bypass_1) @[RocketCore.scala 468:26]
    node _T_42 = and(id_ctrl_decoder_6, _T_41) @[RocketCore.scala 468:23]
    node _T_122 = eq(rf_waddr, id_raddr2) @[RocketCore.scala 1030:20]
    node _GEN_227 = mux(_T_122, rf_wdata, _id_rs_T_9) @[RocketCore.scala 1022:19 1030:{31,39}]
    node _GEN_234 = mux(_T_118, _GEN_227, _id_rs_T_9) @[RocketCore.scala 1022:19 1027:29]
    node id_rs_1 = mux(rf_wen, _GEN_234, _id_rs_T_9) @[RocketCore.scala 679:17 1022:19]
    skip
    node _ex_reg_rs_lsb_1_T = bits(id_rs_1, 1, 0) @[RocketCore.scala 469:37]
    node _ex_reg_rs_msb_1_T = shr(id_rs_1, 2) @[RocketCore.scala 470:38]
    node _GEN_16 = mux(_T_42, _ex_reg_rs_lsb_1_T, bypass_src_1) @[RocketCore.scala 467:24 468:38 469:26]
    node _GEN_17 = mux(_T_42, _ex_reg_rs_msb_1_T, ex_reg_rs_msb_1) @[RocketCore.scala 373:26 468:38 470:26]
    node _inst_T = bits(ibuf.io_inst_0_bits_raw, 15, 0) @[RocketCore.scala 474:62]
    node inst = mux(ibuf.io_inst_0_bits_rvc, pad(_inst_T, 32), ibuf.io_inst_0_bits_raw) @[RocketCore.scala 474:21]
    node _ex_reg_rs_lsb_0_T_1 = bits(inst, 1, 0) @[RocketCore.scala 476:31]
    node _ex_reg_rs_msb_0_T_1 = shr(inst, 2) @[RocketCore.scala 477:32]
    node _GEN_18 = mux(id_illegal_insn, UInt<1>("h0"), do_bypass) @[RocketCore.scala 466:27 473:28 475:27]
    node _GEN_19 = mux(id_illegal_insn, _ex_reg_rs_lsb_0_T_1, _GEN_14) @[RocketCore.scala 473:28 476:24]
    node _GEN_20 = mux(id_illegal_insn, pad(_ex_reg_rs_msb_0_T_1, 62), _GEN_15) @[RocketCore.scala 473:28 477:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_52 = mux(_ex_reg_valid_T, _GEN_1, id_reg_pause) @[RocketCore.scala 428:22 114:25]
    node _GEN_53 = mux(_ex_reg_valid_T, _GEN_2, _GEN_0) @[RocketCore.scala 428:22]
    skip
    node _id_load_use_T = and(mem_reg_valid, data_hazard_mem) @[RocketCore.scala 746:32]
    node id_load_use = and(_id_load_use_T, mem_ctrl_mem) @[RocketCore.scala 746:51]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_44 = or(_ex_reg_valid_T, csr.io_interrupt) @[RocketCore.scala 480:21]
    node _T_45 = or(_T_44, ibuf.io_inst_0_bits_replay) @[RocketCore.scala 480:41]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _replay_ex_structural_T = not(io_dmem_req_ready) @[RocketCore.scala 492:45]
    node _replay_ex_structural_T_1 = and(ex_ctrl_mem, _replay_ex_structural_T) @[RocketCore.scala 492:42]
    node _replay_ex_structural_T_2 = not(div.io_req_ready) @[RocketCore.scala 493:45]
    node _replay_ex_structural_T_3 = and(ex_ctrl_div, _replay_ex_structural_T_2) @[RocketCore.scala 493:42]
    node replay_ex_structural = or(_replay_ex_structural_T_1, _replay_ex_structural_T_3) @[RocketCore.scala 492:64]
    node replay_ex_load_use = and(wb_dcache_miss, ex_reg_load_use) @[RocketCore.scala 494:43]
    node _replay_ex_T = or(replay_ex_structural, replay_ex_load_use) @[RocketCore.scala 495:75]
    node _replay_ex_T_1 = and(ex_reg_valid, _replay_ex_T) @[RocketCore.scala 495:50]
    node replay_ex = or(ex_reg_replay, _replay_ex_T_1) @[RocketCore.scala 495:33]
    node _ctrl_killx_T = or(take_pc_mem_wb, replay_ex) @[RocketCore.scala 496:35]
    node _ctrl_killx_T_1 = not(ex_reg_valid) @[RocketCore.scala 496:51]
    node ctrl_killx = or(_ctrl_killx_T, _ctrl_killx_T_1) @[RocketCore.scala 496:48]
    node _ex_slow_bypass_T = eq(ex_ctrl_mem_cmd, UInt<5>("h7")) @[RocketCore.scala 498:40]
    node _ex_slow_bypass_T_1 = lt(ex_reg_mem_size, UInt<2>("h2")) @[RocketCore.scala 498:69]
    node ex_slow_bypass = or(_ex_slow_bypass_T, _ex_slow_bypass_T_1) @[RocketCore.scala 498:50]
    skip
    node _ex_sfence_T_1 = eq(ex_ctrl_mem_cmd, UInt<5>("h14")) @[RocketCore.scala 499:67]
    node ex_sfence = and(ex_ctrl_mem, _ex_sfence_T_1) @[RocketCore.scala 499:48]
    node ex_xcpt = or(ex_reg_xcpt_interrupt, ex_reg_xcpt) @[RocketCore.scala 502:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _mem_pc_valid_T = or(mem_reg_valid, mem_reg_replay) @[RocketCore.scala 508:36]
    node mem_pc_valid = or(_mem_pc_valid_T, mem_reg_xcpt_interrupt) @[RocketCore.scala 508:54]
    skip
    skip
    node _mem_npc_misaligned_T_2 = bits(mem_npc, 1, 1) @[RocketCore.scala 517:66]
    node _mem_npc_misaligned_T_3 = and(_id_illegal_insn_T_18, _mem_npc_misaligned_T_2) @[RocketCore.scala 517:56]
    node _mem_npc_misaligned_T_4 = not(mem_reg_sfence) @[RocketCore.scala 517:73]
    node mem_npc_misaligned = and(_mem_npc_misaligned_T_3, _mem_npc_misaligned_T_4) @[RocketCore.scala 517:70]
    node _mem_int_wdata_T = not(mem_reg_xcpt) @[RocketCore.scala 518:27]
    node _mem_int_wdata_T_1 = xor(mem_ctrl_jalr, mem_npc_misaligned) @[RocketCore.scala 518:59]
    node _mem_int_wdata_T_2 = and(_mem_int_wdata_T, _mem_int_wdata_T_1) @[RocketCore.scala 518:41]
    skip
    node _mem_int_wdata_T_4 = mux(_mem_int_wdata_T_2, pad(mem_br_target, 64), _mem_npc_a_T) @[RocketCore.scala 518:26]
    node mem_int_wdata = asUInt(_mem_int_wdata_T_4) @[RocketCore.scala 518:119]
    node _mem_cfi_T = or(mem_ctrl_branch, mem_ctrl_jalr) @[RocketCore.scala 519:33]
    node mem_cfi = or(_mem_cfi_T, mem_ctrl_jal) @[RocketCore.scala 519:50]
    skip
    node _mem_cfi_taken_T_1 = or(_mem_br_target_T_1, mem_ctrl_jalr) @[RocketCore.scala 520:57]
    node mem_cfi_taken = or(_mem_cfi_taken_T_1, mem_ctrl_jal) @[RocketCore.scala 520:74]
    skip
    skip
    skip
    node _mem_reg_valid_T = not(ctrl_killx) @[RocketCore.scala 525:20]
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_56 = and(mem_reg_valid, mem_reg_flush_pipe) @[RocketCore.scala 532:23]
    node _mem_reg_load_T = eq(ex_ctrl_mem_cmd, UInt<5>("h0")) @[Consts.scala 81:31]
    node _mem_reg_load_T_1 = eq(ex_ctrl_mem_cmd, UInt<5>("h6")) @[Consts.scala 81:48]
    node _mem_reg_load_T_2 = or(_mem_reg_load_T, _mem_reg_load_T_1) @[Consts.scala 81:41]
    skip
    node _mem_reg_load_T_4 = or(_mem_reg_load_T_2, _ex_slow_bypass_T) @[Consts.scala 81:58]
    node _mem_reg_load_T_5 = eq(ex_ctrl_mem_cmd, UInt<5>("h4")) @[package.scala 15:47]
    node _mem_reg_load_T_6 = eq(ex_ctrl_mem_cmd, UInt<5>("h9")) @[package.scala 15:47]
    node _mem_reg_load_T_7 = eq(ex_ctrl_mem_cmd, UInt<5>("ha")) @[package.scala 15:47]
    node _mem_reg_load_T_8 = eq(ex_ctrl_mem_cmd, UInt<5>("hb")) @[package.scala 15:47]
    node _mem_reg_load_T_9 = or(_mem_reg_load_T_5, _mem_reg_load_T_6) @[package.scala 72:59]
    node _mem_reg_load_T_10 = or(_mem_reg_load_T_9, _mem_reg_load_T_7) @[package.scala 72:59]
    node _mem_reg_load_T_11 = or(_mem_reg_load_T_10, _mem_reg_load_T_8) @[package.scala 72:59]
    node _mem_reg_load_T_12 = eq(ex_ctrl_mem_cmd, UInt<5>("h8")) @[package.scala 15:47]
    node _mem_reg_load_T_13 = eq(ex_ctrl_mem_cmd, UInt<5>("hc")) @[package.scala 15:47]
    node _mem_reg_load_T_14 = eq(ex_ctrl_mem_cmd, UInt<5>("hd")) @[package.scala 15:47]
    node _mem_reg_load_T_15 = eq(ex_ctrl_mem_cmd, UInt<5>("he")) @[package.scala 15:47]
    node _mem_reg_load_T_16 = eq(ex_ctrl_mem_cmd, UInt<5>("hf")) @[package.scala 15:47]
    node _mem_reg_load_T_17 = or(_mem_reg_load_T_12, _mem_reg_load_T_13) @[package.scala 72:59]
    node _mem_reg_load_T_18 = or(_mem_reg_load_T_17, _mem_reg_load_T_14) @[package.scala 72:59]
    node _mem_reg_load_T_19 = or(_mem_reg_load_T_18, _mem_reg_load_T_15) @[package.scala 72:59]
    node _mem_reg_load_T_20 = or(_mem_reg_load_T_19, _mem_reg_load_T_16) @[package.scala 72:59]
    node _mem_reg_load_T_21 = or(_mem_reg_load_T_11, _mem_reg_load_T_20) @[Consts.scala 79:44]
    node _mem_reg_load_T_22 = or(_mem_reg_load_T_4, _mem_reg_load_T_21) @[Consts.scala 81:75]
    node _mem_reg_load_T_23 = and(ex_ctrl_mem, _mem_reg_load_T_22) @[RocketCore.scala 539:33]
    node _mem_reg_store_T = eq(ex_ctrl_mem_cmd, UInt<5>("h1")) @[Consts.scala 82:32]
    node _mem_reg_store_T_1 = eq(ex_ctrl_mem_cmd, UInt<5>("h11")) @[Consts.scala 82:49]
    node _mem_reg_store_T_2 = or(_mem_reg_store_T, _mem_reg_store_T_1) @[Consts.scala 82:42]
    skip
    node _mem_reg_store_T_4 = or(_mem_reg_store_T_2, _ex_slow_bypass_T) @[Consts.scala 82:59]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _mem_reg_store_T_22 = or(_mem_reg_store_T_4, _mem_reg_load_T_21) @[Consts.scala 82:76]
    node _mem_reg_store_T_23 = and(ex_ctrl_mem, _mem_reg_store_T_22) @[RocketCore.scala 540:34]
    node _mem_reg_wdata_T = alu.io_out @[RocketCore.scala 552:25]
    skip
    node _T_58 = or(ex_ctrl_mem, ex_sfence) @[RocketCore.scala 555:56]
    node _T_59 = and(ex_ctrl_rxs2, _T_58) @[RocketCore.scala 555:24]
    skip
    skip
    node _mem_reg_rs2_T = eq(ex_reg_mem_size, UInt<2>("h0")) @[AMOALU.scala 26:19]
    node mem_reg_rs2_hi = bits(ex_rs_1, 7, 0) @[AMOALU.scala 26:66]
    node mem_reg_rs2_hi_1 = cat(mem_reg_rs2_hi, mem_reg_rs2_hi) @[Cat.scala 30:58]
    node mem_reg_rs2_hi_2 = cat(mem_reg_rs2_hi_1, mem_reg_rs2_hi_1) @[Cat.scala 30:58]
    node _mem_reg_rs2_T_1 = cat(mem_reg_rs2_hi_2, mem_reg_rs2_hi_2) @[Cat.scala 30:58]
    node _mem_reg_rs2_T_2 = eq(ex_reg_mem_size, UInt<2>("h1")) @[AMOALU.scala 26:19]
    node mem_reg_rs2_hi_3 = bits(ex_rs_1, 15, 0) @[AMOALU.scala 26:66]
    node mem_reg_rs2_hi_4 = cat(mem_reg_rs2_hi_3, mem_reg_rs2_hi_3) @[Cat.scala 30:58]
    node _mem_reg_rs2_T_3 = cat(mem_reg_rs2_hi_4, mem_reg_rs2_hi_4) @[Cat.scala 30:58]
    node _mem_reg_rs2_T_4 = eq(ex_reg_mem_size, UInt<2>("h2")) @[AMOALU.scala 26:19]
    node mem_reg_rs2_hi_5 = bits(ex_rs_1, 31, 0) @[AMOALU.scala 26:66]
    node _mem_reg_rs2_T_5 = cat(mem_reg_rs2_hi_5, mem_reg_rs2_hi_5) @[Cat.scala 30:58]
    node _mem_reg_rs2_T_6 = mux(_mem_reg_rs2_T_4, _mem_reg_rs2_T_5, ex_rs_1) @[AMOALU.scala 26:13]
    node _mem_reg_rs2_T_7 = mux(_mem_reg_rs2_T_2, _mem_reg_rs2_T_3, _mem_reg_rs2_T_6) @[AMOALU.scala 26:13]
    node _mem_reg_rs2_T_8 = mux(_mem_reg_rs2_T, _mem_reg_rs2_T_1, _mem_reg_rs2_T_7) @[AMOALU.scala 26:13]
    node _GEN_76 = mux(_T_59, _mem_reg_rs2_T_8, mem_reg_rs2) @[RocketCore.scala 555:71 557:19 230:24]
    node _T_60 = and(ex_ctrl_jalr, csr.io_status_debug) @[RocketCore.scala 559:24]
    node _GEN_77 = or(_T_60, ex_ctrl_fence_i) @[RocketCore.scala 535:14 559:48 561:24]
    node _GEN_78 = or(_T_60, ex_reg_flush_pipe) @[RocketCore.scala 543:24 559:48 562:26]
    skip
    node _GEN_80 = mux(ex_pc_valid, ex_ctrl_fp, mem_ctrl_fp) @[RocketCore.scala 534:28 535:14 191:21]
    skip
    node _GEN_82 = mux(ex_pc_valid, ex_ctrl_branch, mem_ctrl_branch) @[RocketCore.scala 534:28 535:14 191:21]
    node _GEN_83 = mux(ex_pc_valid, ex_ctrl_jal, mem_ctrl_jal) @[RocketCore.scala 534:28 535:14 191:21]
    node _GEN_84 = mux(ex_pc_valid, ex_ctrl_jalr, mem_ctrl_jalr) @[RocketCore.scala 534:28 535:14 191:21]
    node _GEN_85 = mux(ex_pc_valid, ex_ctrl_rxs2, mem_ctrl_rxs2) @[RocketCore.scala 534:28 535:14 191:21]
    node _GEN_86 = mux(ex_pc_valid, ex_ctrl_rxs1, mem_ctrl_rxs1) @[RocketCore.scala 534:28 535:14 191:21]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_93 = mux(ex_pc_valid, ex_ctrl_mem, mem_ctrl_mem) @[RocketCore.scala 534:28 535:14 191:21]
    skip
    node _GEN_95 = mux(ex_pc_valid, ex_ctrl_rfs1, mem_ctrl_rfs1) @[RocketCore.scala 534:28 535:14 191:21]
    node _GEN_96 = mux(ex_pc_valid, ex_ctrl_rfs2, mem_ctrl_rfs2) @[RocketCore.scala 534:28 535:14 191:21]
    skip
    node _GEN_98 = mux(ex_pc_valid, ex_ctrl_wfd, mem_ctrl_wfd) @[RocketCore.scala 534:28 535:14 191:21]
    skip
    node _GEN_100 = mux(ex_pc_valid, ex_ctrl_div, mem_ctrl_div) @[RocketCore.scala 534:28 535:14 191:21]
    node _GEN_101 = mux(ex_pc_valid, ex_ctrl_wxd, mem_ctrl_wxd) @[RocketCore.scala 534:28 535:14 191:21]
    node _GEN_102 = mux(ex_pc_valid, ex_ctrl_csr, mem_ctrl_csr) @[RocketCore.scala 534:28 535:14 191:21]
    node _GEN_103 = mux(ex_pc_valid, _GEN_77, mem_ctrl_fence_i) @[RocketCore.scala 191:21 534:28]
    skip
    skip
    skip
    skip
    skip
    node _GEN_109 = mux(ex_pc_valid, ex_reg_rvc, mem_reg_rvc) @[RocketCore.scala 534:28 538:17 213:36]
    node _GEN_110 = mux(ex_pc_valid, _mem_reg_load_T_23, mem_reg_load) @[RocketCore.scala 534:28 539:18 220:36]
    node _GEN_111 = mux(ex_pc_valid, _mem_reg_store_T_23, mem_reg_store) @[RocketCore.scala 534:28 540:19 221:36]
    node _GEN_112 = mux(ex_pc_valid, ex_sfence, mem_reg_sfence) @[RocketCore.scala 534:28 541:20 222:27]
    skip
    skip
    skip
    skip
    skip
    node _GEN_118 = mux(ex_pc_valid, ex_reg_btb_resp_entry, mem_reg_btb_resp_entry) @[RocketCore.scala 534:28 542:22 214:36]
    node _GEN_119 = mux(ex_pc_valid, ex_reg_btb_resp_bht_history, mem_reg_btb_resp_bht_history) @[RocketCore.scala 534:28 542:22 214:36]
    skip
    node _GEN_121 = mux(ex_pc_valid, _GEN_78, mem_reg_flush_pipe) @[RocketCore.scala 534:28 217:36]
    node _GEN_122 = mux(ex_pc_valid, ex_slow_bypass, mem_reg_slow_bypass) @[RocketCore.scala 534:28 544:25 219:36]
    skip
    node _GEN_124 = mux(ex_pc_valid, ex_reg_cause, mem_reg_cause) @[RocketCore.scala 534:28 547:19 218:36]
    node _GEN_125 = mux(ex_pc_valid, ex_reg_inst, mem_reg_inst) @[RocketCore.scala 534:28 548:18 224:25]
    node _GEN_126 = mux(ex_pc_valid, ex_reg_raw_inst, mem_reg_raw_inst) @[RocketCore.scala 534:28 549:22 226:29]
    node _GEN_127 = mux(ex_pc_valid, ex_reg_mem_size, mem_reg_mem_size) @[RocketCore.scala 534:28 550:22 225:29]
    node _GEN_128 = mux(ex_pc_valid, ex_reg_pc, mem_reg_pc) @[RocketCore.scala 534:28 551:16 223:23]
    node _GEN_129 = mux(ex_pc_valid, _mem_reg_wdata_T, mem_reg_wdata) @[RocketCore.scala 534:28 552:19 229:26]
    node _GEN_130 = mux(ex_pc_valid, alu.io_cmp_out, mem_br_taken) @[RocketCore.scala 534:28 553:18 231:25]
    node _GEN_131 = mux(ex_pc_valid, _GEN_76, mem_reg_rs2) @[RocketCore.scala 230:24 534:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _mem_breakpoint_T = and(mem_reg_load, bpu.io_xcpt_ld) @[RocketCore.scala 566:38]
    node _mem_breakpoint_T_1 = and(mem_reg_store, bpu.io_xcpt_st) @[RocketCore.scala 566:75]
    node mem_breakpoint = or(_mem_breakpoint_T, _mem_breakpoint_T_1) @[RocketCore.scala 566:57]
    node _mem_debug_breakpoint_T = and(mem_reg_load, bpu.io_debug_ld) @[RocketCore.scala 567:44]
    node _mem_debug_breakpoint_T_1 = and(mem_reg_store, bpu.io_debug_st) @[RocketCore.scala 567:82]
    node mem_debug_breakpoint = or(_mem_debug_breakpoint_T, _mem_debug_breakpoint_T_1) @[RocketCore.scala 567:64]
    node mem_ldst_xcpt = or(mem_debug_breakpoint, mem_breakpoint) @[RocketCore.scala 975:26]
    node mem_ldst_cause = mux(mem_debug_breakpoint, UInt<4>("he"), UInt<4>("h3")) @[Mux.scala 47:69]
    node _T_61 = or(mem_reg_xcpt_interrupt, mem_reg_xcpt) @[RocketCore.scala 573:29]
    node _T_62 = and(mem_reg_valid, mem_npc_misaligned) @[RocketCore.scala 574:20]
    node _T_63 = and(mem_reg_valid, mem_ldst_xcpt) @[RocketCore.scala 575:20]
    node _T_64 = or(_T_61, _T_62) @[RocketCore.scala 975:26]
    node mem_xcpt = or(_T_64, _T_63) @[RocketCore.scala 975:26]
    node _T_65 = mux(_T_62, UInt<4>("h0"), mem_ldst_cause) @[Mux.scala 47:69]
    node mem_cause = mux(_T_61, mem_reg_cause, pad(_T_65, 64)) @[Mux.scala 47:69]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node dcache_kill_mem = and(_T_24, io_dmem_replay_next) @[RocketCore.scala 584:55]
    node _fpu_kill_mem_T = and(mem_reg_valid, mem_ctrl_fp) @[RocketCore.scala 585:36]
    node fpu_kill_mem = and(_fpu_kill_mem_T, io_fpu_nack_mem) @[RocketCore.scala 585:51]
    node _replay_mem_T = or(dcache_kill_mem, mem_reg_replay) @[RocketCore.scala 586:37]
    node replay_mem = or(_replay_mem_T, fpu_kill_mem) @[RocketCore.scala 586:55]
    node _killm_common_T = or(dcache_kill_mem, take_pc_wb) @[RocketCore.scala 587:38]
    node _killm_common_T_1 = or(_killm_common_T, mem_reg_xcpt) @[RocketCore.scala 587:52]
    node _killm_common_T_2 = not(mem_reg_valid) @[RocketCore.scala 587:71]
    node killm_common = or(_killm_common_T_1, _killm_common_T_2) @[RocketCore.scala 587:68]
    skip
    reg div_io_kill_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), div_io_kill_REG) @[RocketCore.scala 588:37]
    skip
    node _ctrl_killm_T = or(killm_common, mem_xcpt) @[RocketCore.scala 589:33]
    node ctrl_killm = or(_ctrl_killm_T, fpu_kill_mem) @[RocketCore.scala 589:45]
    node _wb_reg_valid_T = not(ctrl_killm) @[RocketCore.scala 592:19]
    node _wb_reg_replay_T = not(take_pc_wb) @[RocketCore.scala 593:34]
    skip
    skip
    skip
    skip
    skip
    skip
    node _wb_reg_wdata_T_1 = and(_mem_int_wdata_T, mem_ctrl_fp) @[RocketCore.scala 600:25]
    node _wb_reg_wdata_T_2 = and(_wb_reg_wdata_T_1, mem_ctrl_wxd) @[RocketCore.scala 600:40]
    node _wb_reg_wdata_T_3 = mux(_wb_reg_wdata_T_2, io_fpu_toint_data, mem_int_wdata) @[RocketCore.scala 600:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_100 = mux(_T_92, UInt<3>("h7"), UInt<3>("h5")) @[Mux.scala 47:69]
    node _T_101 = mux(_T_90, UInt<4>("hd"), pad(_T_100, 4)) @[Mux.scala 47:69]
    node _T_102 = mux(_T_88, UInt<4>("hf"), _T_101) @[Mux.scala 47:69]
    node _T_103 = mux(_T_86, UInt<4>("h4"), _T_102) @[Mux.scala 47:69]
    node _T_104 = mux(_T_84, UInt<4>("h6"), _T_103) @[Mux.scala 47:69]
    node wb_cause = mux(wb_reg_xcpt, wb_reg_cause, pad(_T_104, 64)) @[Mux.scala 47:69]
    node _T_105 = eq(wb_cause, UInt<64>("h6")) @[RocketCore.scala 979:38]
    skip
    node _T_107 = eq(wb_cause, UInt<64>("h4")) @[RocketCore.scala 979:38]
    skip
    node _T_109 = eq(wb_cause, UInt<64>("h7")) @[RocketCore.scala 979:38]
    skip
    node _T_111 = eq(wb_cause, UInt<64>("h5")) @[RocketCore.scala 979:38]
    skip
    node _T_113 = eq(wb_cause, UInt<64>("hf")) @[RocketCore.scala 979:38]
    skip
    node _T_115 = eq(wb_cause, UInt<64>("hd")) @[RocketCore.scala 979:38]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _csr_io_inst_0_T = bits(wb_reg_raw_inst, 1, 0) @[RocketCore.scala 687:66]
    node _csr_io_inst_0_T_1 = andr(_csr_io_inst_0_T) @[RocketCore.scala 687:73]
    node _csr_io_inst_0_T_2 = shr(wb_reg_inst, 16) @[RocketCore.scala 687:91]
    node csr_io_inst_0_hi = mux(_csr_io_inst_0_T_1, _csr_io_inst_0_T_2, UInt<16>("h0")) @[RocketCore.scala 687:50]
    node csr_io_inst_0_lo = bits(wb_reg_raw_inst, 15, 0) @[RocketCore.scala 687:119]
    skip
    node _io_fpu_time_T = bits(csr.io_time, 31, 0) @[RocketCore.scala 692:29]
    node _tval_valid_T = eq(wb_cause, UInt<64>("h2")) @[package.scala 15:47]
    node _tval_valid_T_1 = eq(wb_cause, UInt<64>("h3")) @[package.scala 15:47]
    skip
    skip
    skip
    skip
    node _tval_valid_T_6 = eq(wb_cause, UInt<64>("h1")) @[package.scala 15:47]
    skip
    skip
    node _tval_valid_T_9 = eq(wb_cause, UInt<64>("hc")) @[package.scala 15:47]
    node _tval_valid_T_10 = or(_tval_valid_T, _tval_valid_T_1) @[package.scala 72:59]
    node _tval_valid_T_11 = or(_tval_valid_T_10, _T_107) @[package.scala 72:59]
    node _tval_valid_T_12 = or(_tval_valid_T_11, _T_105) @[package.scala 72:59]
    node _tval_valid_T_13 = or(_tval_valid_T_12, _T_111) @[package.scala 72:59]
    node _tval_valid_T_14 = or(_tval_valid_T_13, _T_109) @[package.scala 72:59]
    node _tval_valid_T_15 = or(_tval_valid_T_14, _tval_valid_T_6) @[package.scala 72:59]
    node _tval_valid_T_16 = or(_tval_valid_T_15, _T_115) @[package.scala 72:59]
    node _tval_valid_T_17 = or(_tval_valid_T_16, _T_113) @[package.scala 72:59]
    node _tval_valid_T_18 = or(_tval_valid_T_17, _tval_valid_T_9) @[package.scala 72:59]
    node tval_valid = and(wb_xcpt, _tval_valid_T_18) @[RocketCore.scala 696:28]
    node _csr_io_tval_a_T = asSInt(wb_reg_wdata) @[RocketCore.scala 989:16]
    node a_1 = shr(_csr_io_tval_a_T, 39) @[RocketCore.scala 989:23]
    node _csr_io_tval_msb_T = eq(a_1, SInt<25>("h0")) @[RocketCore.scala 990:21]
    node _csr_io_tval_msb_T_1 = eq(a_1, SInt<25>("h-1")) @[RocketCore.scala 990:34]
    node _csr_io_tval_msb_T_2 = or(_csr_io_tval_msb_T, _csr_io_tval_msb_T_1) @[RocketCore.scala 990:29]
    node _csr_io_tval_msb_T_3 = bits(wb_reg_wdata, 39, 39) @[RocketCore.scala 990:46]
    node _csr_io_tval_msb_T_4 = bits(wb_reg_wdata, 38, 38) @[RocketCore.scala 990:62]
    node _csr_io_tval_msb_T_5 = not(_csr_io_tval_msb_T_4) @[RocketCore.scala 990:59]
    node msb_1 = mux(_csr_io_tval_msb_T_2, _csr_io_tval_msb_T_3, _csr_io_tval_msb_T_5) @[RocketCore.scala 990:18]
    node csr_io_tval_lo = bits(wb_reg_wdata, 38, 0) @[RocketCore.scala 991:16]
    node _csr_io_tval_T = cat(msb_1, csr_io_tval_lo) @[Cat.scala 30:58]
    skip
    skip
    node _csr_io_rw_cmd_T = mux(wb_reg_valid, UInt<3>("h0"), UInt<3>("h4")) @[CSR.scala 132:15]
    node _csr_io_rw_cmd_T_1 = not(_csr_io_rw_cmd_T) @[CSR.scala 132:11]
    skip
    node _T_129 = dshl(UInt<1>("h1"), ll_waddr) @[RocketCore.scala 1005:62]
    node _T_130 = mux(ll_wen, _T_129, UInt<32>("h0")) @[RocketCore.scala 1005:49]
    node _T_131 = not(_T_130) @[RocketCore.scala 997:64]
    node _T_132 = and(r, _T_131) @[RocketCore.scala 997:62]
    skip
    node _GEN_242 = mux(ll_wen, _T_132, _r) @[RocketCore.scala 1009:{18,23} 1001:25]
    node _T_134 = and(wb_set_sboard, wb_wen) @[RocketCore.scala 730:28]
    node _T_135 = dshl(UInt<1>("h1"), wb_waddr) @[RocketCore.scala 1005:62]
    node _T_136 = mux(_T_134, _T_135, UInt<32>("h0")) @[RocketCore.scala 1005:49]
    node _T_137 = or(_T_132, _T_136) @[RocketCore.scala 996:60]
    node _T_138 = or(ll_wen, _T_134) @[RocketCore.scala 1008:17]
    node _GEN_243 = mux(_T_138, _T_137, _GEN_242) @[RocketCore.scala 1009:{18,23}]
    node _id_stall_fpu_T = and(wb_dcache_miss, wb_ctrl_wfd) @[RocketCore.scala 755:35]
    node _id_stall_fpu_T_1 = or(_id_stall_fpu_T, io_fpu_sboard_set) @[RocketCore.scala 755:50]
    node _id_stall_fpu_T_2 = and(_id_stall_fpu_T_1, wb_valid) @[RocketCore.scala 755:72]
    skip
    node _id_stall_fpu_T_4 = mux(_id_stall_fpu_T_2, _T_135, UInt<32>("h0")) @[RocketCore.scala 1005:49]
    node _id_stall_fpu_T_5 = or(id_stall_fpu__r, _id_stall_fpu_T_4) @[RocketCore.scala 996:60]
    skip
    node _GEN_244 = mux(_id_stall_fpu_T_2, _id_stall_fpu_T_5, id_stall_fpu__r) @[RocketCore.scala 1009:{18,23} 1001:25]
    node _id_stall_fpu_T_7 = and(dmem_resp_replay, _dmem_resp_xpu_T) @[RocketCore.scala 756:38]
    node _id_stall_fpu_T_8 = dshl(UInt<1>("h1"), dmem_resp_waddr) @[RocketCore.scala 1005:62]
    node _id_stall_fpu_T_9 = mux(_id_stall_fpu_T_7, _id_stall_fpu_T_8, UInt<32>("h0")) @[RocketCore.scala 1005:49]
    node _id_stall_fpu_T_10 = not(_id_stall_fpu_T_9) @[RocketCore.scala 997:64]
    node _id_stall_fpu_T_11 = and(_id_stall_fpu_T_5, _id_stall_fpu_T_10) @[RocketCore.scala 997:62]
    node _id_stall_fpu_T_12 = or(_id_stall_fpu_T_2, _id_stall_fpu_T_7) @[RocketCore.scala 1008:17]
    node _GEN_245 = mux(_id_stall_fpu_T_12, _id_stall_fpu_T_11, _GEN_244) @[RocketCore.scala 1009:{18,23}]
    node _id_stall_fpu_T_13 = dshl(UInt<1>("h1"), io_fpu_sboard_clra) @[RocketCore.scala 1005:62]
    node _id_stall_fpu_T_14 = mux(io_fpu_sboard_clr, _id_stall_fpu_T_13, UInt<32>("h0")) @[RocketCore.scala 1005:49]
    node _id_stall_fpu_T_15 = not(_id_stall_fpu_T_14) @[RocketCore.scala 997:64]
    node _id_stall_fpu_T_16 = and(_id_stall_fpu_T_11, _id_stall_fpu_T_15) @[RocketCore.scala 997:62]
    node _id_stall_fpu_T_17 = or(_id_stall_fpu_T_12, io_fpu_sboard_clr) @[RocketCore.scala 1008:17]
    node _GEN_246 = mux(_id_stall_fpu_T_17, _id_stall_fpu_T_16, _GEN_245) @[RocketCore.scala 1009:{18,23}]
    skip
    skip
    skip
    node _dcache_blocked_blocked_T_3 = and(_replay_ex_structural_T, _dcache_blocked_T) @[RocketCore.scala 765:60]
    node _dcache_blocked_blocked_T_4 = or(blocked, io_dmem_req_valid) @[RocketCore.scala 765:95]
    node _dcache_blocked_blocked_T_5 = or(_dcache_blocked_blocked_T_4, io_dmem_s2_nack) @[RocketCore.scala 765:116]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_imem_req_bits_pc_T = or(wb_xcpt, csr.io_eret) @[RocketCore.scala 789:17]
    node _io_imem_req_bits_pc_T_1 = mux(replay_wb_common, wb_reg_pc, mem_npc) @[RocketCore.scala 790:8]
    skip
    node _io_imem_flush_icache_T = and(wb_reg_valid, wb_ctrl_fence_i) @[RocketCore.scala 792:40]
    node _io_imem_flush_icache_T_1 = not(io_dmem_s2_nack) @[RocketCore.scala 792:62]
    skip
    node _io_imem_might_request_imem_might_request_reg_T = or(ex_pc_valid, mem_pc_valid) @[RocketCore.scala 794:43]
    node _io_imem_might_request_imem_might_request_reg_T_1 = bits(io_ptw_customCSRs_csrs_0_value, 1, 1) @[CustomCSRs.scala 38:61]
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_imem_btb_update_valid_T_1 = and(mem_reg_valid, _wb_reg_replay_T) @[RocketCore.scala 806:45]
    node _io_imem_btb_update_valid_T_2 = and(_io_imem_btb_update_valid_T_1, mem_wrong_npc) @[RocketCore.scala 806:60]
    node _io_imem_btb_update_valid_T_3 = not(mem_cfi) @[RocketCore.scala 806:81]
    node _io_imem_btb_update_valid_T_4 = or(_io_imem_btb_update_valid_T_3, mem_cfi_taken) @[RocketCore.scala 806:90]
    skip
    node _io_imem_btb_update_bits_cfiType_T = or(mem_ctrl_jal, mem_ctrl_jalr) @[RocketCore.scala 809:23]
    node _io_imem_btb_update_bits_cfiType_T_1 = bits(mem_waddr, 0, 0) @[RocketCore.scala 809:53]
    node _io_imem_btb_update_bits_cfiType_T_2 = and(_io_imem_btb_update_bits_cfiType_T, _io_imem_btb_update_bits_cfiType_T_1) @[RocketCore.scala 809:41]
    node _io_imem_btb_update_bits_cfiType_T_3 = bits(mem_reg_inst, 19, 15) @[RocketCore.scala 810:39]
    skip
    node _io_imem_btb_update_bits_cfiType_T_5 = and(_io_imem_btb_update_bits_cfiType_T_3, UInt<5>("h1b")) @[RocketCore.scala 810:62]
    node _io_imem_btb_update_bits_cfiType_T_6 = eq(UInt<5>("h1"), _io_imem_btb_update_bits_cfiType_T_5) @[RocketCore.scala 810:62]
    node _io_imem_btb_update_bits_cfiType_T_7 = and(mem_ctrl_jalr, _io_imem_btb_update_bits_cfiType_T_6) @[RocketCore.scala 810:23]
    skip
    skip
    node _io_imem_btb_update_bits_cfiType_T_10 = mux(_io_imem_btb_update_bits_cfiType_T_7, UInt<2>("h3"), pad(_io_imem_btb_update_bits_cfiType_T, 2)) @[RocketCore.scala 810:8]
    skip
    node _io_imem_btb_update_bits_br_pc_T = mux(mem_reg_rvc, UInt<2>("h0"), UInt<2>("h2")) @[RocketCore.scala 814:74]
    node _GEN_250 = pad(_io_imem_btb_update_bits_br_pc_T, 40) @[RocketCore.scala 814:69]
    node _io_imem_btb_update_bits_br_pc_T_1 = add(mem_reg_pc, _GEN_250) @[RocketCore.scala 814:69]
    node _io_imem_btb_update_bits_br_pc_T_2 = tail(_io_imem_btb_update_bits_br_pc_T_1, 1) @[RocketCore.scala 814:69]
    node _io_imem_btb_update_bits_pc_T = not(io_imem_btb_update_bits_br_pc) @[RocketCore.scala 815:35]
    node _io_imem_btb_update_bits_pc_T_1 = or(_io_imem_btb_update_bits_pc_T, UInt<39>("h3")) @[RocketCore.scala 815:66]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node ex_dcache_tag = cat(ex_waddr, ex_ctrl_fp) @[Cat.scala 30:58]
    node _io_dmem_req_bits_signed_T = bits(ex_reg_inst, 14, 14) @[RocketCore.scala 842:42]
    skip
    skip
    node a_2 = shr(_ex_op1_T, 39) @[RocketCore.scala 989:23]
    node _io_dmem_req_bits_addr_msb_T = eq(a_2, SInt<25>("h0")) @[RocketCore.scala 990:21]
    node _io_dmem_req_bits_addr_msb_T_1 = eq(a_2, SInt<25>("h-1")) @[RocketCore.scala 990:34]
    node _io_dmem_req_bits_addr_msb_T_2 = or(_io_dmem_req_bits_addr_msb_T, _io_dmem_req_bits_addr_msb_T_1) @[RocketCore.scala 990:29]
    node _io_dmem_req_bits_addr_msb_T_3 = bits(alu.io_adder_out, 39, 39) @[RocketCore.scala 990:46]
    node _io_dmem_req_bits_addr_msb_T_4 = bits(alu.io_adder_out, 38, 38) @[RocketCore.scala 990:62]
    node _io_dmem_req_bits_addr_msb_T_5 = not(_io_dmem_req_bits_addr_msb_T_4) @[RocketCore.scala 990:59]
    node msb_2 = mux(_io_dmem_req_bits_addr_msb_T_2, _io_dmem_req_bits_addr_msb_T_3, _io_dmem_req_bits_addr_msb_T_5) @[RocketCore.scala 990:18]
    node io_dmem_req_bits_addr_lo = bits(alu.io_adder_out, 38, 0) @[RocketCore.scala 991:16]
    skip
    skip
    node _io_dmem_s1_kill_T = or(killm_common, mem_ldst_xcpt) @[RocketCore.scala 848:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_rocc_cmd_bits_inst_T_5 = bits(wb_reg_inst, 19, 15) @[RocketCore.scala 856:58]
    node _io_rocc_cmd_bits_inst_T_6 = bits(wb_reg_inst, 24, 20) @[RocketCore.scala 856:58]
    skip
    node _unpause_T = bits(csr.io_time, 4, 0) @[RocketCore.scala 861:28]
    node _unpause_T_1 = eq(_unpause_T, UInt<5>("h0")) @[RocketCore.scala 861:62]
    node _unpause_T_2 = or(_unpause_T_1, csr.io_inhibit_cycle) @[RocketCore.scala 861:68]
    node _unpause_T_3 = or(_unpause_T_2, io_dmem_perf_release) @[RocketCore.scala 861:92]
    node unpause = or(_unpause_T_3, take_pc_mem_wb) @[RocketCore.scala 861:116]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _coreMonitorBundle_valid_T = not(csr.io_trace_0_exception) @[RocketCore.scala 889:55]
    node coreMonitorBundle_valid = and(csr.io_trace_0_valid, _coreMonitorBundle_valid_T) @[RocketCore.scala 889:52]
    node coreMonitorBundle_pc_lo = csr.io_trace_0_iaddr @[RocketCore.scala 890:48]
    node _coreMonitorBundle_pc_T = bits(coreMonitorBundle_pc_lo, 39, 39) @[package.scala 123:38]
    skip
    node coreMonitorBundle_pc_hi = mux(_coreMonitorBundle_pc_T, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 72:12]
    node coreMonitorBundle_pc = cat(coreMonitorBundle_pc_hi, coreMonitorBundle_pc_lo) @[Cat.scala 30:58]
    node _coreMonitorBundle_wrenx_T = not(wb_set_sboard) @[RocketCore.scala 891:40]
    node coreMonitorBundle_wrenx = and(wb_wen, _coreMonitorBundle_wrenx_T) @[RocketCore.scala 891:37]
    skip
    reg coreMonitorBundle_rd0val_x20 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), coreMonitorBundle_rd0val_x20) @[RocketCore.scala 896:43]
    reg coreMonitorBundle_rd0val_REG : UInt<64>, clock with :
      reset => (UInt<1>("h0"), coreMonitorBundle_rd0val_REG) @[RocketCore.scala 896:34]
    skip
    reg coreMonitorBundle_rd1val_x26 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), coreMonitorBundle_rd1val_x26) @[RocketCore.scala 898:43]
    reg coreMonitorBundle_rd1val_REG : UInt<64>, clock with :
      reset => (UInt<1>("h0"), coreMonitorBundle_rd1val_REG) @[RocketCore.scala 898:34]
    node _T_139 = or(wb_ctrl_wxd, wb_ctrl_wfd) @[RocketCore.scala 934:26]
    skip
    node _T_140 = mux(_T_139, wb_waddr, UInt<5>("h0")) @[RocketCore.scala 934:13]
    skip
    skip
    node _T_141 = mux(coreMonitorBundle_wrenx, rf_wdata, UInt<64>("h0")) @[RocketCore.scala 935:13]
    node _T_142 = or(wb_ctrl_rxs1, wb_ctrl_rfs1) @[RocketCore.scala 937:27]
    skip
    node _T_143 = mux(_T_142, _io_rocc_cmd_bits_inst_T_5, UInt<5>("h0")) @[RocketCore.scala 937:13]
    skip
    skip
    node _T_145 = mux(_T_142, coreMonitorBundle_rd0val_REG, UInt<64>("h0")) @[RocketCore.scala 938:13]
    node _T_146 = or(wb_ctrl_rxs2, wb_ctrl_rfs2) @[RocketCore.scala 939:27]
    skip
    node _T_147 = mux(_T_146, _io_rocc_cmd_bits_inst_T_6, UInt<5>("h0")) @[RocketCore.scala 939:13]
    skip
    skip
    node _T_149 = mux(_T_146, coreMonitorBundle_rd1val_REG, UInt<64>("h0")) @[RocketCore.scala 940:13]
    skip
    node _T_151 = not(reset) @[RocketCore.scala 931:13]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node coreMonitorBundle_inst = csr.io_trace_0_insn @[RocketCore.scala 883:31 899:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_imem_might_request <= imem_might_request_reg @[RocketCore.scala 793:25]
    io_imem_req_valid <= or(take_pc_wb, take_pc_mem) @[RocketCore.scala 250:35]
    io_imem_req_bits_pc <= mux(_io_imem_req_bits_pc_T, csr.io_evec, _io_imem_req_bits_pc_T_1) @[RocketCore.scala 789:8]
    io_imem_req_bits_speculative <= not(take_pc_wb) @[RocketCore.scala 787:35]
    io_imem_sfence_valid <= and(wb_reg_valid, wb_reg_sfence) @[RocketCore.scala 797:40]
    io_imem_sfence_bits_rs1 <= bits(wb_reg_mem_size, 0, 0) @[RocketCore.scala 798:45]
    io_imem_sfence_bits_rs2 <= bits(wb_reg_mem_size, 1, 1) @[RocketCore.scala 799:45]
    io_imem_sfence_bits_addr <= bits(wb_reg_wdata, 38, 0) @[RocketCore.scala 800:28]
    skip
    io_imem_resp_ready <= ibuf.io_imem_ready @[RocketCore.scala 258:16]
    io_imem_btb_update_valid <= and(_io_imem_btb_update_valid_T_2, _io_imem_btb_update_valid_T_4) @[RocketCore.scala 806:77]
    skip
    skip
    skip
    skip
    skip
    io_imem_btb_update_bits_prediction_entry <= mem_reg_btb_resp_entry @[RocketCore.scala 816:38]
    skip
    skip
    io_imem_btb_update_bits_pc <= not(_io_imem_btb_update_bits_pc_T_1) @[RocketCore.scala 815:33]
    skip
    skip
    io_imem_btb_update_bits_isValid <= or(_mem_cfi_T, mem_ctrl_jal) @[RocketCore.scala 519:50]
    io_imem_btb_update_bits_br_pc <= bits(_io_imem_btb_update_bits_br_pc_T_2, 38, 0) @[RocketCore.scala 814:33]
    io_imem_btb_update_bits_cfiType <= mux(_io_imem_btb_update_bits_cfiType_T_2, UInt<2>("h2"), _io_imem_btb_update_bits_cfiType_T_10) @[RocketCore.scala 809:8]
    io_imem_bht_update_valid <= and(mem_reg_valid, _wb_reg_replay_T) @[RocketCore.scala 818:45]
    io_imem_bht_update_bits_prediction_history <= mem_reg_btb_resp_bht_history @[RocketCore.scala 823:38]
    skip
    io_imem_bht_update_bits_pc <= io_imem_btb_update_bits_pc @[RocketCore.scala 819:30]
    io_imem_bht_update_bits_branch <= mem_ctrl_branch @[RocketCore.scala 822:34]
    io_imem_bht_update_bits_taken <= mem_br_taken @[RocketCore.scala 820:33]
    io_imem_bht_update_bits_mispredict <= mux(ex_pc_valid, _mem_wrong_npc_T, _mem_wrong_npc_T_3) @[RocketCore.scala 515:8]
    skip
    skip
    skip
    io_imem_flush_icache <= and(_io_imem_flush_icache_T, _io_imem_flush_icache_T_1) @[RocketCore.scala 792:59]
    io_dmem_req_valid <= and(ex_reg_valid, ex_ctrl_mem) @[RocketCore.scala 836:41]
    io_dmem_req_bits_addr <= cat(msb_2, io_dmem_req_bits_addr_lo) @[Cat.scala 30:58]
    io_dmem_req_bits_tag <= pad(ex_dcache_tag, 7) @[RocketCore.scala 839:25]
    io_dmem_req_bits_cmd <= ex_ctrl_mem_cmd @[RocketCore.scala 840:25]
    io_dmem_req_bits_size <= ex_reg_mem_size @[RocketCore.scala 841:25]
    io_dmem_req_bits_signed <= not(_io_dmem_req_bits_signed_T) @[RocketCore.scala 842:30]
    skip
    skip
    skip
    skip
    skip
    skip
    io_dmem_s1_kill <= or(_io_dmem_s1_kill_T, fpu_kill_mem) @[RocketCore.scala 848:52]
    io_dmem_s1_data_data <= mux(mem_ctrl_fp, io_fpu_store_data, mem_reg_rs2) @[RocketCore.scala 847:63]
    skip
    skip
    skip
    io_ptw_ptbr_mode <= csr.io_ptbr_mode @[RocketCore.scala 701:15]
    skip
    io_ptw_ptbr_ppn <= csr.io_ptbr_ppn @[RocketCore.scala 701:15]
    io_ptw_sfence_valid <= io_imem_sfence_valid @[RocketCore.scala 802:17]
    io_ptw_sfence_bits_rs1 <= io_imem_sfence_bits_rs1 @[RocketCore.scala 802:17]
    io_ptw_sfence_bits_rs2 <= io_imem_sfence_bits_rs2 @[RocketCore.scala 802:17]
    io_ptw_sfence_bits_addr <= io_imem_sfence_bits_addr @[RocketCore.scala 802:17]
    skip
    io_ptw_status_debug <= csr.io_status_debug @[RocketCore.scala 703:17]
    skip
    skip
    skip
    io_ptw_status_dprv <= csr.io_status_dprv @[RocketCore.scala 703:17]
    io_ptw_status_prv <= csr.io_status_prv @[RocketCore.scala 703:17]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_ptw_status_mxr <= csr.io_status_mxr @[RocketCore.scala 703:17]
    io_ptw_status_sum <= csr.io_status_sum @[RocketCore.scala 703:17]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_ptw_pmp_0_cfg_l <= csr.io_pmp_0_cfg_l @[RocketCore.scala 704:14]
    skip
    io_ptw_pmp_0_cfg_a <= csr.io_pmp_0_cfg_a @[RocketCore.scala 704:14]
    io_ptw_pmp_0_cfg_x <= csr.io_pmp_0_cfg_x @[RocketCore.scala 704:14]
    io_ptw_pmp_0_cfg_w <= csr.io_pmp_0_cfg_w @[RocketCore.scala 704:14]
    io_ptw_pmp_0_cfg_r <= csr.io_pmp_0_cfg_r @[RocketCore.scala 704:14]
    io_ptw_pmp_0_addr <= csr.io_pmp_0_addr @[RocketCore.scala 704:14]
    io_ptw_pmp_0_mask <= csr.io_pmp_0_mask @[RocketCore.scala 704:14]
    io_ptw_pmp_1_cfg_l <= csr.io_pmp_1_cfg_l @[RocketCore.scala 704:14]
    skip
    io_ptw_pmp_1_cfg_a <= csr.io_pmp_1_cfg_a @[RocketCore.scala 704:14]
    io_ptw_pmp_1_cfg_x <= csr.io_pmp_1_cfg_x @[RocketCore.scala 704:14]
    io_ptw_pmp_1_cfg_w <= csr.io_pmp_1_cfg_w @[RocketCore.scala 704:14]
    io_ptw_pmp_1_cfg_r <= csr.io_pmp_1_cfg_r @[RocketCore.scala 704:14]
    io_ptw_pmp_1_addr <= csr.io_pmp_1_addr @[RocketCore.scala 704:14]
    io_ptw_pmp_1_mask <= csr.io_pmp_1_mask @[RocketCore.scala 704:14]
    io_ptw_pmp_2_cfg_l <= csr.io_pmp_2_cfg_l @[RocketCore.scala 704:14]
    skip
    io_ptw_pmp_2_cfg_a <= csr.io_pmp_2_cfg_a @[RocketCore.scala 704:14]
    io_ptw_pmp_2_cfg_x <= csr.io_pmp_2_cfg_x @[RocketCore.scala 704:14]
    io_ptw_pmp_2_cfg_w <= csr.io_pmp_2_cfg_w @[RocketCore.scala 704:14]
    io_ptw_pmp_2_cfg_r <= csr.io_pmp_2_cfg_r @[RocketCore.scala 704:14]
    io_ptw_pmp_2_addr <= csr.io_pmp_2_addr @[RocketCore.scala 704:14]
    io_ptw_pmp_2_mask <= csr.io_pmp_2_mask @[RocketCore.scala 704:14]
    io_ptw_pmp_3_cfg_l <= csr.io_pmp_3_cfg_l @[RocketCore.scala 704:14]
    skip
    io_ptw_pmp_3_cfg_a <= csr.io_pmp_3_cfg_a @[RocketCore.scala 704:14]
    io_ptw_pmp_3_cfg_x <= csr.io_pmp_3_cfg_x @[RocketCore.scala 704:14]
    io_ptw_pmp_3_cfg_w <= csr.io_pmp_3_cfg_w @[RocketCore.scala 704:14]
    io_ptw_pmp_3_cfg_r <= csr.io_pmp_3_cfg_r @[RocketCore.scala 704:14]
    io_ptw_pmp_3_addr <= csr.io_pmp_3_addr @[RocketCore.scala 704:14]
    io_ptw_pmp_3_mask <= csr.io_pmp_3_mask @[RocketCore.scala 704:14]
    io_ptw_pmp_4_cfg_l <= csr.io_pmp_4_cfg_l @[RocketCore.scala 704:14]
    skip
    io_ptw_pmp_4_cfg_a <= csr.io_pmp_4_cfg_a @[RocketCore.scala 704:14]
    io_ptw_pmp_4_cfg_x <= csr.io_pmp_4_cfg_x @[RocketCore.scala 704:14]
    io_ptw_pmp_4_cfg_w <= csr.io_pmp_4_cfg_w @[RocketCore.scala 704:14]
    io_ptw_pmp_4_cfg_r <= csr.io_pmp_4_cfg_r @[RocketCore.scala 704:14]
    io_ptw_pmp_4_addr <= csr.io_pmp_4_addr @[RocketCore.scala 704:14]
    io_ptw_pmp_4_mask <= csr.io_pmp_4_mask @[RocketCore.scala 704:14]
    io_ptw_pmp_5_cfg_l <= csr.io_pmp_5_cfg_l @[RocketCore.scala 704:14]
    skip
    io_ptw_pmp_5_cfg_a <= csr.io_pmp_5_cfg_a @[RocketCore.scala 704:14]
    io_ptw_pmp_5_cfg_x <= csr.io_pmp_5_cfg_x @[RocketCore.scala 704:14]
    io_ptw_pmp_5_cfg_w <= csr.io_pmp_5_cfg_w @[RocketCore.scala 704:14]
    io_ptw_pmp_5_cfg_r <= csr.io_pmp_5_cfg_r @[RocketCore.scala 704:14]
    io_ptw_pmp_5_addr <= csr.io_pmp_5_addr @[RocketCore.scala 704:14]
    io_ptw_pmp_5_mask <= csr.io_pmp_5_mask @[RocketCore.scala 704:14]
    io_ptw_pmp_6_cfg_l <= csr.io_pmp_6_cfg_l @[RocketCore.scala 704:14]
    skip
    io_ptw_pmp_6_cfg_a <= csr.io_pmp_6_cfg_a @[RocketCore.scala 704:14]
    io_ptw_pmp_6_cfg_x <= csr.io_pmp_6_cfg_x @[RocketCore.scala 704:14]
    io_ptw_pmp_6_cfg_w <= csr.io_pmp_6_cfg_w @[RocketCore.scala 704:14]
    io_ptw_pmp_6_cfg_r <= csr.io_pmp_6_cfg_r @[RocketCore.scala 704:14]
    io_ptw_pmp_6_addr <= csr.io_pmp_6_addr @[RocketCore.scala 704:14]
    io_ptw_pmp_6_mask <= csr.io_pmp_6_mask @[RocketCore.scala 704:14]
    io_ptw_pmp_7_cfg_l <= csr.io_pmp_7_cfg_l @[RocketCore.scala 704:14]
    skip
    io_ptw_pmp_7_cfg_a <= csr.io_pmp_7_cfg_a @[RocketCore.scala 704:14]
    io_ptw_pmp_7_cfg_x <= csr.io_pmp_7_cfg_x @[RocketCore.scala 704:14]
    io_ptw_pmp_7_cfg_w <= csr.io_pmp_7_cfg_w @[RocketCore.scala 704:14]
    io_ptw_pmp_7_cfg_r <= csr.io_pmp_7_cfg_r @[RocketCore.scala 704:14]
    io_ptw_pmp_7_addr <= csr.io_pmp_7_addr @[RocketCore.scala 704:14]
    io_ptw_pmp_7_mask <= csr.io_pmp_7_mask @[RocketCore.scala 704:14]
    skip
    skip
    io_ptw_customCSRs_csrs_0_value <= csr.io_customCSRs_0_value @[RocketCore.scala 702:79]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_fpu_inst <= ibuf.io_inst_0_bits_inst_bits @[RocketCore.scala 828:15]
    io_fpu_fromint_data <= mux(ex_reg_rs_bypass_0, _ex_rs_T_5, _ex_rs_T_6) @[RocketCore.scala 375:14]
    io_fpu_fcsr_rm <= csr.io_fcsr_rm @[RocketCore.scala 690:18]
    io_fpu_dmem_resp_val <= and(dmem_resp_valid, _dmem_resp_xpu_T) @[RocketCore.scala 830:43]
    io_fpu_dmem_resp_type <= pad(io_dmem_resp_bits_size, 3) @[RocketCore.scala 832:25]
    io_fpu_dmem_resp_tag <= bits(io_dmem_resp_bits_tag, 5, 1) @[RocketCore.scala 645:46]
    io_fpu_dmem_resp_data <= io_dmem_resp_bits_data_word_bypass @[RocketCore.scala 831:25]
    io_fpu_valid <= and(_ex_reg_valid_T, id_ctrl_decoder_1) @[RocketCore.scala 825:31]
    io_fpu_killx <= or(_ctrl_killx_T, _ctrl_killx_T_1) @[RocketCore.scala 496:48]
    io_fpu_killm <= or(_killm_common_T_1, _killm_common_T_2) @[RocketCore.scala 587:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_trace_0_valid <= csr.io_trace_0_valid @[RocketCore.scala 708:12]
    io_trace_0_iaddr <= csr.io_trace_0_iaddr @[RocketCore.scala 708:12]
    io_trace_0_insn <= csr.io_trace_0_insn @[RocketCore.scala 708:12]
    io_trace_0_priv <= csr.io_trace_0_priv @[RocketCore.scala 708:12]
    io_trace_0_exception <= csr.io_trace_0_exception @[RocketCore.scala 708:12]
    io_trace_0_interrupt <= csr.io_trace_0_interrupt @[RocketCore.scala 708:12]
    io_trace_0_cause <= csr.io_trace_0_cause @[RocketCore.scala 708:12]
    io_trace_0_tval <= csr.io_trace_0_tval @[RocketCore.scala 708:12]
    skip
    skip
    skip
    skip
    skip
    skip
    io_wfi <= csr.io_status_wfi @[RocketCore.scala 864:10]
    skip
    skip
    id_reg_pause <= mux(unpause, UInt<1>("h0"), _GEN_52) @[RocketCore.scala 862:{18,33}]
    imem_might_request_reg <= or(_io_imem_might_request_imem_might_request_reg_T, _io_imem_might_request_imem_might_request_reg_T_1) @[RocketCore.scala 794:59]
    skip
    ex_ctrl_fp <= mux(_ex_reg_valid_T, id_ctrl_decoder_1, ex_ctrl_fp) @[RocketCore.scala 428:22 429:13 190:20]
    skip
    ex_ctrl_branch <= mux(_ex_reg_valid_T, id_ctrl_decoder_3, ex_ctrl_branch) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_jal <= mux(_ex_reg_valid_T, id_ctrl_decoder_4, ex_ctrl_jal) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_jalr <= mux(_ex_reg_valid_T, id_ctrl_decoder_5, ex_ctrl_jalr) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_rxs2 <= mux(_ex_reg_valid_T, id_ctrl_decoder_6, ex_ctrl_rxs2) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_rxs1 <= mux(_ex_reg_valid_T, id_ctrl_decoder_7, ex_ctrl_rxs1) @[RocketCore.scala 428:22 429:13 190:20]
    skip
    ex_ctrl_sel_alu2 <= mux(_ex_reg_valid_T, _GEN_11, ex_ctrl_sel_alu2) @[RocketCore.scala 190:20 428:22]
    ex_ctrl_sel_alu1 <= mux(_ex_reg_valid_T, _GEN_10, ex_ctrl_sel_alu1) @[RocketCore.scala 190:20 428:22]
    ex_ctrl_sel_imm <= mux(_ex_reg_valid_T, id_ctrl_decoder_11, ex_ctrl_sel_imm) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_alu_dw <= mux(_ex_reg_valid_T, _GEN_9, ex_ctrl_alu_dw) @[RocketCore.scala 190:20 428:22]
    ex_ctrl_alu_fn <= mux(_ex_reg_valid_T, _GEN_8, ex_ctrl_alu_fn) @[RocketCore.scala 190:20 428:22]
    ex_ctrl_mem <= mux(_ex_reg_valid_T, id_ctrl_decoder_14, ex_ctrl_mem) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_mem_cmd <= mux(_ex_reg_valid_T, id_ctrl_decoder_15, ex_ctrl_mem_cmd) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_rfs1 <= mux(_ex_reg_valid_T, id_ctrl_decoder_16, ex_ctrl_rfs1) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_rfs2 <= mux(_ex_reg_valid_T, id_ctrl_decoder_17, ex_ctrl_rfs2) @[RocketCore.scala 428:22 429:13 190:20]
    skip
    ex_ctrl_wfd <= mux(_ex_reg_valid_T, id_ctrl_decoder_19, ex_ctrl_wfd) @[RocketCore.scala 428:22 429:13 190:20]
    skip
    ex_ctrl_div <= mux(_ex_reg_valid_T, id_ctrl_decoder_21, ex_ctrl_div) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_wxd <= mux(_ex_reg_valid_T, id_ctrl_decoder_22, ex_ctrl_wxd) @[RocketCore.scala 428:22 429:13 190:20]
    ex_ctrl_csr <= mux(_ex_reg_valid_T, id_csr, ex_ctrl_csr) @[RocketCore.scala 428:22 431:17 190:20]
    ex_ctrl_fence_i <= mux(_ex_reg_valid_T, id_ctrl_decoder_24, ex_ctrl_fence_i) @[RocketCore.scala 428:22 429:13 190:20]
    skip
    skip
    skip
    skip
    mem_ctrl_fp <= mux(_T_56, mem_ctrl_fp, _GEN_80) @[RocketCore.scala 191:21 532:46]
    skip
    mem_ctrl_branch <= mux(_T_56, mem_ctrl_branch, _GEN_82) @[RocketCore.scala 191:21 532:46]
    mem_ctrl_jal <= mux(_T_56, mem_ctrl_jal, _GEN_83) @[RocketCore.scala 191:21 532:46]
    mem_ctrl_jalr <= mux(_T_56, mem_ctrl_jalr, _GEN_84) @[RocketCore.scala 191:21 532:46]
    mem_ctrl_rxs2 <= mux(_T_56, mem_ctrl_rxs2, _GEN_85) @[RocketCore.scala 191:21 532:46]
    mem_ctrl_rxs1 <= mux(_T_56, mem_ctrl_rxs1, _GEN_86) @[RocketCore.scala 191:21 532:46]
    skip
    skip
    skip
    skip
    skip
    skip
    mem_ctrl_mem <= mux(_T_56, mem_ctrl_mem, _GEN_93) @[RocketCore.scala 191:21 532:46]
    skip
    mem_ctrl_rfs1 <= mux(_T_56, mem_ctrl_rfs1, _GEN_95) @[RocketCore.scala 191:21 532:46]
    mem_ctrl_rfs2 <= mux(_T_56, mem_ctrl_rfs2, _GEN_96) @[RocketCore.scala 191:21 532:46]
    skip
    mem_ctrl_wfd <= mux(_T_56, mem_ctrl_wfd, _GEN_98) @[RocketCore.scala 191:21 532:46]
    skip
    mem_ctrl_div <= mux(_T_56, mem_ctrl_div, _GEN_100) @[RocketCore.scala 191:21 532:46]
    mem_ctrl_wxd <= mux(_T_56, mem_ctrl_wxd, _GEN_101) @[RocketCore.scala 191:21 532:46]
    mem_ctrl_csr <= mux(_T_56, mem_ctrl_csr, _GEN_102) @[RocketCore.scala 191:21 532:46]
    mem_ctrl_fence_i <= mux(_T_56, mem_ctrl_fence_i, _GEN_103) @[RocketCore.scala 191:21 532:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    wb_ctrl_rxs2 <= mux(mem_pc_valid, mem_ctrl_rxs2, wb_ctrl_rxs2) @[RocketCore.scala 596:23 597:13 192:20]
    wb_ctrl_rxs1 <= mux(mem_pc_valid, mem_ctrl_rxs1, wb_ctrl_rxs1) @[RocketCore.scala 596:23 597:13 192:20]
    skip
    skip
    skip
    skip
    skip
    skip
    wb_ctrl_mem <= mux(mem_pc_valid, mem_ctrl_mem, wb_ctrl_mem) @[RocketCore.scala 596:23 597:13 192:20]
    skip
    wb_ctrl_rfs1 <= mux(mem_pc_valid, mem_ctrl_rfs1, wb_ctrl_rfs1) @[RocketCore.scala 596:23 597:13 192:20]
    wb_ctrl_rfs2 <= mux(mem_pc_valid, mem_ctrl_rfs2, wb_ctrl_rfs2) @[RocketCore.scala 596:23 597:13 192:20]
    skip
    wb_ctrl_wfd <= mux(mem_pc_valid, mem_ctrl_wfd, wb_ctrl_wfd) @[RocketCore.scala 596:23 597:13 192:20]
    skip
    wb_ctrl_div <= mux(mem_pc_valid, mem_ctrl_div, wb_ctrl_div) @[RocketCore.scala 596:23 597:13 192:20]
    wb_ctrl_wxd <= mux(mem_pc_valid, mem_ctrl_wxd, wb_ctrl_wxd) @[RocketCore.scala 596:23 597:13 192:20]
    wb_ctrl_csr <= mux(mem_pc_valid, mem_ctrl_csr, wb_ctrl_csr) @[RocketCore.scala 596:23 597:13 192:20]
    wb_ctrl_fence_i <= mux(mem_pc_valid, mem_ctrl_fence_i, wb_ctrl_fence_i) @[RocketCore.scala 596:23 597:13 192:20]
    skip
    skip
    skip
    ex_reg_xcpt_interrupt <= and(_ex_reg_replay_T_1, csr.io_interrupt) @[RocketCore.scala 426:62]
    ex_reg_valid <= not(ctrl_killd) @[RocketCore.scala 423:19]
    ex_reg_rvc <= mux(_ex_reg_valid_T, _GEN_12, ex_reg_rvc) @[RocketCore.scala 428:22 196:35]
    skip
    skip
    skip
    skip
    skip
    ex_reg_btb_resp_entry <= mux(_T_45, ibuf.io_btb_resp_entry, ex_reg_btb_resp_entry) @[RocketCore.scala 480:73 485:21 197:35]
    ex_reg_btb_resp_bht_history <= mux(_T_45, ibuf.io_btb_resp_bht_history, ex_reg_btb_resp_bht_history) @[RocketCore.scala 480:73 485:21 197:35]
    skip
    ex_reg_xcpt <= and(_ex_reg_valid_T, id_xcpt) @[RocketCore.scala 425:30]
    ex_reg_flush_pipe <= mux(_ex_reg_valid_T, _ex_reg_flush_pipe_T, ex_reg_flush_pipe) @[RocketCore.scala 428:22 451:23 199:35]
    ex_reg_load_use <= mux(_ex_reg_valid_T, id_load_use, ex_reg_load_use) @[RocketCore.scala 428:22 452:21 200:35]
    ex_reg_cause <= mux(_T_45, id_cause, ex_reg_cause) @[RocketCore.scala 480:73 481:18 201:35]
    ex_reg_replay <= and(_ex_reg_replay_T_1, ibuf.io_inst_0_bits_replay) @[RocketCore.scala 424:54]
    ex_reg_pc <= mux(_T_45, ibuf.io_pc, ex_reg_pc) @[RocketCore.scala 480:73 484:15 203:22]
    ex_reg_mem_size <= mux(_ex_reg_valid_T, _GEN_13, ex_reg_mem_size) @[RocketCore.scala 428:22 204:28]
    ex_reg_inst <= mux(_T_45, ibuf.io_inst_0_bits_inst_bits, ex_reg_inst) @[RocketCore.scala 480:73 482:17 205:24]
    ex_reg_raw_inst <= mux(_T_45, ibuf.io_inst_0_bits_raw, ex_reg_raw_inst) @[RocketCore.scala 480:73 483:21 206:28]
    skip
    skip
    skip
    mem_reg_xcpt_interrupt <= and(_ex_reg_replay_T, ex_reg_xcpt_interrupt) @[RocketCore.scala 528:45]
    mem_reg_valid <= not(ctrl_killx) @[RocketCore.scala 525:20]
    mem_reg_rvc <= mux(_T_56, mem_reg_rvc, _GEN_109) @[RocketCore.scala 213:36 532:46]
    skip
    skip
    skip
    skip
    skip
    mem_reg_btb_resp_entry <= mux(_T_56, mem_reg_btb_resp_entry, _GEN_118) @[RocketCore.scala 214:36 532:46]
    mem_reg_btb_resp_bht_history <= mux(_T_56, mem_reg_btb_resp_bht_history, _GEN_119) @[RocketCore.scala 214:36 532:46]
    skip
    mem_reg_xcpt <= and(_mem_reg_valid_T, ex_xcpt) @[RocketCore.scala 527:31]
    mem_reg_replay <= and(_ex_reg_replay_T, replay_ex) @[RocketCore.scala 526:37]
    mem_reg_flush_pipe <= mux(_T_56, mem_reg_flush_pipe, _GEN_121) @[RocketCore.scala 217:36 532:46]
    mem_reg_cause <= mux(_T_56, mem_reg_cause, _GEN_124) @[RocketCore.scala 218:36 532:46]
    mem_reg_slow_bypass <= mux(_T_56, mem_reg_slow_bypass, _GEN_122) @[RocketCore.scala 219:36 532:46]
    mem_reg_load <= mux(_T_56, mem_reg_load, _GEN_110) @[RocketCore.scala 220:36 532:46]
    mem_reg_store <= mux(_T_56, mem_reg_store, _GEN_111) @[RocketCore.scala 221:36 532:46]
    mem_reg_sfence <= mux(_T_56, UInt<1>("h0"), _GEN_112) @[RocketCore.scala 532:46 533:20]
    mem_reg_pc <= mux(_T_56, mem_reg_pc, _GEN_128) @[RocketCore.scala 223:23 532:46]
    mem_reg_inst <= mux(_T_56, mem_reg_inst, _GEN_125) @[RocketCore.scala 224:25 532:46]
    mem_reg_mem_size <= mux(_T_56, mem_reg_mem_size, _GEN_127) @[RocketCore.scala 225:29 532:46]
    mem_reg_raw_inst <= mux(_T_56, mem_reg_raw_inst, _GEN_126) @[RocketCore.scala 226:29 532:46]
    skip
    skip
    mem_reg_wdata <= mux(_T_56, mem_reg_wdata, _GEN_129) @[RocketCore.scala 229:26 532:46]
    mem_reg_rs2 <= mux(_T_56, mem_reg_rs2, _GEN_131) @[RocketCore.scala 230:24 532:46]
    mem_br_taken <= mux(_T_56, mem_br_taken, _GEN_130) @[RocketCore.scala 231:25 532:46]
    skip
    wb_reg_valid <= not(ctrl_killm) @[RocketCore.scala 592:19]
    wb_reg_xcpt <= and(mem_xcpt, _wb_reg_replay_T) @[RocketCore.scala 594:27]
    wb_reg_replay <= and(replay_mem, _wb_reg_replay_T) @[RocketCore.scala 593:31]
    wb_reg_flush_pipe <= and(_wb_reg_valid_T, mem_reg_flush_pipe) @[RocketCore.scala 595:36]
    wb_reg_cause <= mux(mem_pc_valid, mem_cause, wb_reg_cause) @[RocketCore.scala 596:23 604:18 239:35]
    wb_reg_sfence <= mux(mem_pc_valid, mem_reg_sfence, wb_reg_sfence) @[RocketCore.scala 596:23 598:19 240:26]
    wb_reg_pc <= mux(mem_pc_valid, mem_reg_pc, wb_reg_pc) @[RocketCore.scala 596:23 608:15 241:22]
    wb_reg_mem_size <= mux(mem_pc_valid, mem_reg_mem_size, wb_reg_mem_size) @[RocketCore.scala 596:23 607:21 242:28]
    wb_reg_inst <= mux(mem_pc_valid, mem_reg_inst, wb_reg_inst) @[RocketCore.scala 596:23 605:17 243:24]
    wb_reg_raw_inst <= mux(mem_pc_valid, mem_reg_raw_inst, wb_reg_raw_inst) @[RocketCore.scala 596:23 606:21 244:28]
    wb_reg_wdata <= mux(mem_pc_valid, _wb_reg_wdata_T_3, wb_reg_wdata) @[RocketCore.scala 596:23 599:18 245:25]
    skip
    skip
    ibuf.clock <= clock
    ibuf.reset <= reset
    ibuf.io_imem_valid <= io_imem_resp_valid @[RocketCore.scala 258:16]
    skip
    ibuf.io_imem_bits_btb_taken <= io_imem_resp_bits_btb_taken @[RocketCore.scala 258:16]
    skip
    ibuf.io_imem_bits_btb_bridx <= io_imem_resp_bits_btb_bridx @[RocketCore.scala 258:16]
    skip
    ibuf.io_imem_bits_btb_entry <= io_imem_resp_bits_btb_entry @[RocketCore.scala 258:16]
    ibuf.io_imem_bits_btb_bht_history <= io_imem_resp_bits_btb_bht_history @[RocketCore.scala 258:16]
    skip
    ibuf.io_imem_bits_pc <= io_imem_resp_bits_pc @[RocketCore.scala 258:16]
    ibuf.io_imem_bits_data <= io_imem_resp_bits_data @[RocketCore.scala 258:16]
    skip
    ibuf.io_imem_bits_xcpt_pf_inst <= io_imem_resp_bits_xcpt_pf_inst @[RocketCore.scala 258:16]
    ibuf.io_imem_bits_xcpt_ae_inst <= io_imem_resp_bits_xcpt_ae_inst @[RocketCore.scala 258:16]
    ibuf.io_imem_bits_replay <= io_imem_resp_bits_replay @[RocketCore.scala 258:16]
    ibuf.io_kill <= or(take_pc_wb, take_pc_mem) @[RocketCore.scala 250:35]
    ibuf.io_inst_0_ready <= not(ctrl_stalld) @[RocketCore.scala 804:28]
    id_reg_fence <= mux(reset, UInt<1>("h0"), _GEN_53) @[RocketCore.scala 274:{25,25}]
    rf.id_rs_MPORT.addr <= not(id_raddr1) @[RocketCore.scala 1016:39]
    rf.id_rs_MPORT.en <= UInt<1>("h1") @[RocketCore.scala 1016:38]
    rf.id_rs_MPORT.clk <= clock @[RocketCore.scala 1016:38]
    rf.id_rs_MPORT_1.addr <= not(id_raddr2) @[RocketCore.scala 1016:39]
    rf.id_rs_MPORT_1.en <= UInt<1>("h1") @[RocketCore.scala 1016:38]
    rf.id_rs_MPORT_1.clk <= clock @[RocketCore.scala 1016:38]
    rf.MPORT.addr <= not(rf_waddr) @[RocketCore.scala 1016:39]
    rf.MPORT.en <= and(rf_wen, _T_118) @[RocketCore.scala 1015:15 679:17]
    rf.MPORT.clk <= clock @[RocketCore.scala 1027:29 1016:38]
    rf.MPORT.data <= mux(_rf_wdata_T, io_dmem_resp_bits_data, _rf_wdata_T_5) @[RocketCore.scala 674:21]
    rf.MPORT.mask <= UInt<1>("h1") @[RocketCore.scala 1027:29 1028:20]
    csr.clock <= clock
    csr.reset <= reset
    csr.io_ungated_clock <= clock @[RocketCore.scala 682:24]
    csr.io_interrupts_debug <= io_interrupts_debug @[RocketCore.scala 688:21]
    csr.io_interrupts_mtip <= io_interrupts_mtip @[RocketCore.scala 688:21]
    csr.io_interrupts_msip <= io_interrupts_msip @[RocketCore.scala 688:21]
    csr.io_interrupts_meip <= io_interrupts_meip @[RocketCore.scala 688:21]
    csr.io_interrupts_seip <= io_interrupts_seip @[RocketCore.scala 688:21]
    csr.io_hartid <= io_hartid @[RocketCore.scala 689:17]
    csr.io_rw_addr <= bits(wb_reg_inst, 31, 20) @[RocketCore.scala 705:32]
    csr.io_rw_cmd <= and(wb_ctrl_csr, _csr_io_rw_cmd_T_1) @[CSR.scala 132:9]
    csr.io_rw_wdata <= wb_reg_wdata @[RocketCore.scala 707:19]
    csr.io_decode_0_csr <= bits(ibuf.io_inst_0_bits_raw, 31, 20) @[RocketCore.scala 683:41]
    csr.io_exception <= or(_T_99, _T_94) @[RocketCore.scala 975:26]
    csr.io_retire <= and(_wb_valid_T_1, _wb_valid_T_2) @[RocketCore.scala 670:45]
    csr.io_cause <= mux(wb_reg_xcpt, wb_reg_cause, pad(_T_104, 64)) @[Mux.scala 47:69]
    csr.io_pc <= wb_reg_pc @[RocketCore.scala 695:13]
    csr.io_tval <= mux(tval_valid, _csr_io_tval_T, UInt<40>("h0")) @[RocketCore.scala 700:21]
    csr.io_fcsr_flags_valid <= io_fpu_fcsr_flags_valid @[RocketCore.scala 691:21]
    csr.io_fcsr_flags_bits <= io_fpu_fcsr_flags_bits @[RocketCore.scala 691:21]
    skip
    csr.io_inst_0 <= cat(csr_io_inst_0_hi, csr_io_inst_0_lo) @[Cat.scala 30:58]
    skip
    skip
    bpu.io_status_debug <= csr.io_status_debug @[RocketCore.scala 324:17]
    skip
    skip
    skip
    skip
    bpu.io_status_prv <= csr.io_status_prv @[RocketCore.scala 324:17]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    bpu.io_bp_0_control_action <= csr.io_bp_0_control_action @[RocketCore.scala 325:13]
    skip
    skip
    bpu.io_bp_0_control_tmatch <= csr.io_bp_0_control_tmatch @[RocketCore.scala 325:13]
    bpu.io_bp_0_control_m <= csr.io_bp_0_control_m @[RocketCore.scala 325:13]
    skip
    bpu.io_bp_0_control_s <= csr.io_bp_0_control_s @[RocketCore.scala 325:13]
    bpu.io_bp_0_control_u <= csr.io_bp_0_control_u @[RocketCore.scala 325:13]
    bpu.io_bp_0_control_x <= csr.io_bp_0_control_x @[RocketCore.scala 325:13]
    bpu.io_bp_0_control_w <= csr.io_bp_0_control_w @[RocketCore.scala 325:13]
    bpu.io_bp_0_control_r <= csr.io_bp_0_control_r @[RocketCore.scala 325:13]
    bpu.io_bp_0_address <= csr.io_bp_0_address @[RocketCore.scala 325:13]
    skip
    skip
    skip
    skip
    bpu.io_pc <= bits(ibuf.io_pc, 38, 0) @[RocketCore.scala 326:13]
    bpu.io_ea <= bits(mem_reg_wdata, 38, 0) @[RocketCore.scala 327:13]
    ex_reg_rs_bypass_0 <= mux(_ex_reg_valid_T, _GEN_18, ex_reg_rs_bypass_0) @[RocketCore.scala 428:22 371:29]
    ex_reg_rs_bypass_1 <= mux(_ex_reg_valid_T, do_bypass_1, ex_reg_rs_bypass_1) @[RocketCore.scala 428:22 466:27 371:29]
    ex_reg_rs_lsb_0 <= mux(_ex_reg_valid_T, _GEN_19, ex_reg_rs_lsb_0) @[RocketCore.scala 428:22 372:26]
    ex_reg_rs_lsb_1 <= mux(_ex_reg_valid_T, _GEN_16, ex_reg_rs_lsb_1) @[RocketCore.scala 428:22 372:26]
    ex_reg_rs_msb_0 <= mux(_ex_reg_valid_T, _GEN_20, ex_reg_rs_msb_0) @[RocketCore.scala 428:22 373:26]
    ex_reg_rs_msb_1 <= mux(_ex_reg_valid_T, _GEN_17, ex_reg_rs_msb_1) @[RocketCore.scala 428:22 373:26]
    skip
    skip
    alu.io_dw <= ex_ctrl_alu_dw @[RocketCore.scala 386:13]
    alu.io_fn <= ex_ctrl_alu_fn @[RocketCore.scala 387:13]
    alu.io_in2 <= asUInt(ex_op2) @[RocketCore.scala 388:24]
    alu.io_in1 <= asUInt(ex_op1) @[RocketCore.scala 389:24]
    div.clock <= clock
    div.reset <= reset
    div.io_req_valid <= and(ex_reg_valid, ex_ctrl_div) @[RocketCore.scala 410:36]
    div.io_req_bits_fn <= ex_ctrl_alu_fn @[RocketCore.scala 412:22]
    div.io_req_bits_dw <= ex_ctrl_alu_dw @[RocketCore.scala 411:22]
    div.io_req_bits_in1 <= mux(ex_reg_rs_bypass_0, _ex_rs_T_5, _ex_rs_T_6) @[RocketCore.scala 375:14]
    div.io_req_bits_in2 <= mux(ex_reg_rs_bypass_1, _ex_rs_T_12, _ex_rs_T_13) @[RocketCore.scala 375:14]
    div.io_req_bits_tag <= bits(ex_reg_inst, 11, 7) @[RocketCore.scala 359:29]
    div.io_kill <= and(killm_common, div_io_kill_REG) @[RocketCore.scala 588:31]
    div.io_resp_ready <= mux(_T_117, UInt<1>("h0"), _ctrl_stalld_T_17) @[RocketCore.scala 649:21 662:44 663:23]
    div_io_kill_REG <= and(div.io_req_ready, div.io_req_valid) @[Decoupled.scala 40:37]
    _r <= mux(reset, UInt<32>("h0"), _GEN_243) @[RocketCore.scala 1001:{25,25}]
    id_stall_fpu__r <= mux(reset, UInt<32>("h0"), _GEN_246) @[RocketCore.scala 1001:{25,25}]
    blocked <= and(_dcache_blocked_blocked_T_3, _dcache_blocked_blocked_T_5) @[RocketCore.scala 765:83]
    skip
    skip
    coreMonitorBundle_rd0val_x20 <= mux(ex_reg_rs_bypass_0, _ex_rs_T_5, _ex_rs_T_6) @[RocketCore.scala 375:14]
    coreMonitorBundle_rd0val_REG <= coreMonitorBundle_rd0val_x20 @[RocketCore.scala 896:34]
    coreMonitorBundle_rd1val_x26 <= mux(ex_reg_rs_bypass_1, _ex_rs_T_12, _ex_rs_T_13) @[RocketCore.scala 375:14]
    coreMonitorBundle_rd1val_REG <= coreMonitorBundle_rd1val_x26 @[RocketCore.scala 898:34]
    PlusArgTimeout.clock <= clock
    PlusArgTimeout.reset <= reset
    PlusArgTimeout.io_count <= bits(csr.io_time, 31, 0) @[PlusArg.scala 89:82]
    printf(clock, and(csr.io_trace_0_valid, _T_151), "C%d: %d [%d] pc=[%x] W[r%d=%x][%d] R[r%d=%x] R[r%d=%x] inst=[%x] DASM(%x)\n", io_hartid, _io_fpu_time_T, coreMonitorBundle_valid, coreMonitorBundle_pc, _T_140, _T_141, coreMonitorBundle_wrenx, _T_143, _T_145, _T_147, _T_149, coreMonitorBundle_inst, coreMonitorBundle_inst) @[RocketCore.scala 931:13]

  module TLB :
    input clock : Clock
    input reset : UInt<1>
    output io_req_ready : UInt<1>
    input io_req_valid : UInt<1>
    input io_req_bits_vaddr : UInt<40>
    input io_req_bits_passthrough : UInt<1>
    input io_req_bits_size : UInt<2>
    input io_req_bits_cmd : UInt<5>
    output io_resp_miss : UInt<1>
    output io_resp_paddr : UInt<32>
    output io_resp_pf_ld : UInt<1>
    output io_resp_pf_st : UInt<1>
    output io_resp_ae_ld : UInt<1>
    output io_resp_ae_st : UInt<1>
    output io_resp_ma_ld : UInt<1>
    output io_resp_ma_st : UInt<1>
    output io_resp_cacheable : UInt<1>
    input io_sfence_valid : UInt<1>
    input io_sfence_bits_rs1 : UInt<1>
    input io_sfence_bits_rs2 : UInt<1>
    input io_sfence_bits_addr : UInt<39>
    input io_ptw_req_ready : UInt<1>
    output io_ptw_req_valid : UInt<1>
    output io_ptw_req_bits_bits_addr : UInt<27>
    input io_ptw_resp_valid : UInt<1>
    input io_ptw_resp_bits_ae : UInt<1>
    input io_ptw_resp_bits_pte_ppn : UInt<54>
    input io_ptw_resp_bits_pte_d : UInt<1>
    input io_ptw_resp_bits_pte_a : UInt<1>
    input io_ptw_resp_bits_pte_g : UInt<1>
    input io_ptw_resp_bits_pte_u : UInt<1>
    input io_ptw_resp_bits_pte_x : UInt<1>
    input io_ptw_resp_bits_pte_w : UInt<1>
    input io_ptw_resp_bits_pte_r : UInt<1>
    input io_ptw_resp_bits_pte_v : UInt<1>
    input io_ptw_resp_bits_level : UInt<2>
    input io_ptw_resp_bits_homogeneous : UInt<1>
    input io_ptw_ptbr_mode : UInt<4>
    input io_ptw_status_debug : UInt<1>
    input io_ptw_status_dprv : UInt<2>
    input io_ptw_status_mxr : UInt<1>
    input io_ptw_status_sum : UInt<1>
    input io_ptw_pmp_0_cfg_l : UInt<1>
    input io_ptw_pmp_0_cfg_a : UInt<2>
    input io_ptw_pmp_0_cfg_x : UInt<1>
    input io_ptw_pmp_0_cfg_w : UInt<1>
    input io_ptw_pmp_0_cfg_r : UInt<1>
    input io_ptw_pmp_0_addr : UInt<30>
    input io_ptw_pmp_0_mask : UInt<32>
    input io_ptw_pmp_1_cfg_l : UInt<1>
    input io_ptw_pmp_1_cfg_a : UInt<2>
    input io_ptw_pmp_1_cfg_x : UInt<1>
    input io_ptw_pmp_1_cfg_w : UInt<1>
    input io_ptw_pmp_1_cfg_r : UInt<1>
    input io_ptw_pmp_1_addr : UInt<30>
    input io_ptw_pmp_1_mask : UInt<32>
    input io_ptw_pmp_2_cfg_l : UInt<1>
    input io_ptw_pmp_2_cfg_a : UInt<2>
    input io_ptw_pmp_2_cfg_x : UInt<1>
    input io_ptw_pmp_2_cfg_w : UInt<1>
    input io_ptw_pmp_2_cfg_r : UInt<1>
    input io_ptw_pmp_2_addr : UInt<30>
    input io_ptw_pmp_2_mask : UInt<32>
    input io_ptw_pmp_3_cfg_l : UInt<1>
    input io_ptw_pmp_3_cfg_a : UInt<2>
    input io_ptw_pmp_3_cfg_x : UInt<1>
    input io_ptw_pmp_3_cfg_w : UInt<1>
    input io_ptw_pmp_3_cfg_r : UInt<1>
    input io_ptw_pmp_3_addr : UInt<30>
    input io_ptw_pmp_3_mask : UInt<32>
    input io_ptw_pmp_4_cfg_l : UInt<1>
    input io_ptw_pmp_4_cfg_a : UInt<2>
    input io_ptw_pmp_4_cfg_x : UInt<1>
    input io_ptw_pmp_4_cfg_w : UInt<1>
    input io_ptw_pmp_4_cfg_r : UInt<1>
    input io_ptw_pmp_4_addr : UInt<30>
    input io_ptw_pmp_4_mask : UInt<32>
    input io_ptw_pmp_5_cfg_l : UInt<1>
    input io_ptw_pmp_5_cfg_a : UInt<2>
    input io_ptw_pmp_5_cfg_x : UInt<1>
    input io_ptw_pmp_5_cfg_w : UInt<1>
    input io_ptw_pmp_5_cfg_r : UInt<1>
    input io_ptw_pmp_5_addr : UInt<30>
    input io_ptw_pmp_5_mask : UInt<32>
    input io_ptw_pmp_6_cfg_l : UInt<1>
    input io_ptw_pmp_6_cfg_a : UInt<2>
    input io_ptw_pmp_6_cfg_x : UInt<1>
    input io_ptw_pmp_6_cfg_w : UInt<1>
    input io_ptw_pmp_6_cfg_r : UInt<1>
    input io_ptw_pmp_6_addr : UInt<30>
    input io_ptw_pmp_6_mask : UInt<32>
    input io_ptw_pmp_7_cfg_l : UInt<1>
    input io_ptw_pmp_7_cfg_a : UInt<2>
    input io_ptw_pmp_7_cfg_x : UInt<1>
    input io_ptw_pmp_7_cfg_w : UInt<1>
    input io_ptw_pmp_7_cfg_r : UInt<1>
    input io_ptw_pmp_7_addr : UInt<30>
    input io_ptw_pmp_7_mask : UInt<32>

    inst mpu_ppn_data_barrier of OptimizationBarrier @[package.scala 258:25]
    inst pmp of PMPChecker @[TLB.scala 193:19]
    inst ppn_data_barrier of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_1 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_2 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_3 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_4 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_5 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_6 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_7 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_8 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_9 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_10 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_11 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_12 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_1 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_2 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_3 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_4 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_5 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_6 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_7 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_8 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_9 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_10 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_11 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_12 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_1 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_2 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_3 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_4 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_5 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_6 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_7 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_8 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_9 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_10 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_11 of OptimizationBarrier @[package.scala 258:25]
    node vpn = bits(io_req_bits_vaddr, 38, 12) @[TLB.scala 163:30]
    skip
    reg sectored_entries_0_0_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_0_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_0_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_0_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_0_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_0_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_0_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_0_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_0_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_1_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_1_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_1_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_1_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_1_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_1_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_1_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_1_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_1_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_2_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_2_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_2_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_2_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_2_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_2_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_2_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_2_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_2_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_3_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_3_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_3_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_3_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_3_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_3_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_3_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_3_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_3_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_4_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_4_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_4_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_4_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_4_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_4_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_4_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_4_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_4_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_5_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_5_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_5_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_5_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_5_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_5_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_5_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_5_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_5_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_6_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_6_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_6_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_6_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_6_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_6_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_6_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_6_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_6_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_7_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_7_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_7_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_7_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_7_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_7_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_7_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_7_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_7_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_valid_3) @[TLB.scala 165:29]
    reg superpage_entries_0_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_0_level) @[TLB.scala 166:30]
    reg superpage_entries_0_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_0_tag) @[TLB.scala 166:30]
    reg superpage_entries_0_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_0_data_0) @[TLB.scala 166:30]
    reg superpage_entries_0_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_0_valid_0) @[TLB.scala 166:30]
    reg superpage_entries_1_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_1_level) @[TLB.scala 166:30]
    reg superpage_entries_1_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_1_tag) @[TLB.scala 166:30]
    reg superpage_entries_1_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_1_data_0) @[TLB.scala 166:30]
    reg superpage_entries_1_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_1_valid_0) @[TLB.scala 166:30]
    reg superpage_entries_2_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_2_level) @[TLB.scala 166:30]
    reg superpage_entries_2_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_2_tag) @[TLB.scala 166:30]
    reg superpage_entries_2_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_2_data_0) @[TLB.scala 166:30]
    reg superpage_entries_2_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_2_valid_0) @[TLB.scala 166:30]
    reg superpage_entries_3_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_3_level) @[TLB.scala 166:30]
    reg superpage_entries_3_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_3_tag) @[TLB.scala 166:30]
    reg superpage_entries_3_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_3_data_0) @[TLB.scala 166:30]
    reg superpage_entries_3_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_3_valid_0) @[TLB.scala 166:30]
    reg special_entry_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), special_entry_level) @[TLB.scala 167:56]
    reg special_entry_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), special_entry_tag) @[TLB.scala 167:56]
    reg special_entry_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), special_entry_data_0) @[TLB.scala 167:56]
    reg special_entry_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), special_entry_valid_0) @[TLB.scala 167:56]
    reg state : UInt<2>, clock with :
      reset => (UInt<1>("h0"), state) @[TLB.scala 173:18]
    reg r_refill_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), r_refill_tag) @[TLB.scala 174:25]
    reg r_superpage_repl_addr : UInt<2>, clock with :
      reset => (UInt<1>("h0"), r_superpage_repl_addr) @[TLB.scala 175:34]
    reg r_sectored_repl_addr : UInt<3>, clock with :
      reset => (UInt<1>("h0"), r_sectored_repl_addr) @[TLB.scala 176:33]
    reg r_sectored_hit_addr : UInt<3>, clock with :
      reset => (UInt<1>("h0"), r_sectored_hit_addr) @[TLB.scala 177:32]
    reg r_sectored_hit : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_sectored_hit) @[TLB.scala 178:27]
    node priv_s = bits(io_ptw_status_dprv, 0, 0) @[TLB.scala 181:20]
    node priv_uses_vm = leq(io_ptw_status_dprv, UInt<2>("h1")) @[TLB.scala 182:27]
    node _vm_enabled_T = bits(io_ptw_ptbr_mode, 3, 3) @[TLB.scala 183:53]
    skip
    node _vm_enabled_T_2 = and(_vm_enabled_T, priv_uses_vm) @[TLB.scala 183:83]
    node _vm_enabled_T_3 = not(io_req_bits_passthrough) @[TLB.scala 183:102]
    node vm_enabled = and(_vm_enabled_T_2, _vm_enabled_T_3) @[TLB.scala 183:99]
    node refill_ppn = bits(io_ptw_resp_bits_pte_ppn, 19, 0) @[TLB.scala 186:44]
    skip
    node _invalidate_refill_T = eq(state, UInt<2>("h1")) @[package.scala 15:47]
    node _invalidate_refill_T_1 = eq(state, UInt<2>("h3")) @[package.scala 15:47]
    node _invalidate_refill_T_2 = or(_invalidate_refill_T, _invalidate_refill_T_1) @[package.scala 72:59]
    node invalidate_refill = or(_invalidate_refill_T_2, io_sfence_valid) @[TLB.scala 188:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _mpu_ppn_data_T_13 = bits(special_entry_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node mpu_ppn_hi = shr(mpu_ppn_data_barrier.io_y_ppn, 18) @[TLB.scala 106:26]
    node mpu_ppn_ignore = lt(special_entry_level, UInt<2>("h1")) @[TLB.scala 108:28]
    skip
    node _mpu_ppn_T_1 = mux(mpu_ppn_ignore, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_983 = pad(mpu_ppn_data_barrier.io_y_ppn, 27) @[TLB.scala 109:47]
    node _mpu_ppn_T_2 = or(_mpu_ppn_T_1, _GEN_983) @[TLB.scala 109:47]
    node mpu_ppn_lo = bits(_mpu_ppn_T_2, 17, 9) @[TLB.scala 109:58]
    node mpu_ppn_hi_1 = cat(mpu_ppn_hi, mpu_ppn_lo) @[Cat.scala 30:58]
    node mpu_ppn_ignore_1 = lt(special_entry_level, UInt<2>("h2")) @[TLB.scala 108:28]
    skip
    node _mpu_ppn_T_3 = mux(mpu_ppn_ignore_1, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    skip
    node _mpu_ppn_T_4 = or(_mpu_ppn_T_3, _GEN_983) @[TLB.scala 109:47]
    node mpu_ppn_lo_1 = bits(_mpu_ppn_T_4, 8, 0) @[TLB.scala 109:58]
    node _mpu_ppn_T_5 = cat(mpu_ppn_hi_1, mpu_ppn_lo_1) @[Cat.scala 30:58]
    node _mpu_ppn_T_6 = shr(io_req_bits_vaddr, 12) @[TLB.scala 190:123]
    node _mpu_ppn_T_7 = mux(vm_enabled, pad(_mpu_ppn_T_5, 28), _mpu_ppn_T_6) @[TLB.scala 190:20]
    node mpu_ppn = mux(io_ptw_resp_valid, pad(refill_ppn, 28), _mpu_ppn_T_7) @[TLB.scala 189:20]
    node mpu_physaddr_lo = bits(io_req_bits_vaddr, 11, 0) @[TLB.scala 191:52]
    node mpu_physaddr = cat(mpu_ppn, mpu_physaddr_lo) @[Cat.scala 30:58]
    node _mpu_priv_T = or(io_ptw_resp_valid, io_req_bits_passthrough) @[TLB.scala 192:56]
    skip
    node _mpu_priv_T_2 = cat(io_ptw_status_debug, io_ptw_status_dprv) @[Cat.scala 30:58]
    node mpu_priv = mux(_mpu_priv_T, UInt<3>("h1"), _mpu_priv_T_2) @[TLB.scala 192:27]
    node _legal_address_T = xor(mpu_physaddr, UInt<40>("h3000")) @[Parameters.scala 137:31]
    node _legal_address_T_1 = cvt(_legal_address_T) @[Parameters.scala 137:49]
    node _legal_address_T_2 = and(_legal_address_T_1, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_3 = asSInt(_legal_address_T_2) @[Parameters.scala 137:52]
    node _legal_address_T_4 = eq(_legal_address_T_3, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_5 = xor(mpu_physaddr, UInt<40>("h2010000")) @[Parameters.scala 137:31]
    node _legal_address_T_6 = cvt(_legal_address_T_5) @[Parameters.scala 137:49]
    node _legal_address_T_7 = and(_legal_address_T_6, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_8 = asSInt(_legal_address_T_7) @[Parameters.scala 137:52]
    node _legal_address_T_9 = eq(_legal_address_T_8, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_10 = xor(mpu_physaddr, UInt<40>("h4000")) @[Parameters.scala 137:31]
    node _legal_address_T_11 = cvt(_legal_address_T_10) @[Parameters.scala 137:49]
    node _legal_address_T_12 = and(_legal_address_T_11, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_13 = asSInt(_legal_address_T_12) @[Parameters.scala 137:52]
    node _legal_address_T_14 = eq(_legal_address_T_13, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_15 = xor(mpu_physaddr, UInt<40>("h54000000")) @[Parameters.scala 137:31]
    node _legal_address_T_16 = cvt(_legal_address_T_15) @[Parameters.scala 137:49]
    node _legal_address_T_17 = and(_legal_address_T_16, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_18 = asSInt(_legal_address_T_17) @[Parameters.scala 137:52]
    node _legal_address_T_19 = eq(_legal_address_T_18, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_20 = xor(mpu_physaddr, UInt<40>("h100000")) @[Parameters.scala 137:31]
    node _legal_address_T_21 = cvt(_legal_address_T_20) @[Parameters.scala 137:49]
    node _legal_address_T_22 = and(_legal_address_T_21, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_23 = asSInt(_legal_address_T_22) @[Parameters.scala 137:52]
    node _legal_address_T_24 = eq(_legal_address_T_23, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_25 = xor(mpu_physaddr, UInt<40>("hc000000")) @[Parameters.scala 137:31]
    node _legal_address_T_26 = cvt(_legal_address_T_25) @[Parameters.scala 137:49]
    node _legal_address_T_27 = and(_legal_address_T_26, SInt<41>("h-4000000")) @[Parameters.scala 137:52]
    node _legal_address_T_28 = asSInt(_legal_address_T_27) @[Parameters.scala 137:52]
    node _legal_address_T_29 = eq(_legal_address_T_28, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_30 = xor(mpu_physaddr, UInt<40>("h2000000")) @[Parameters.scala 137:31]
    node _legal_address_T_31 = cvt(_legal_address_T_30) @[Parameters.scala 137:49]
    node _legal_address_T_32 = and(_legal_address_T_31, SInt<41>("h-10000")) @[Parameters.scala 137:52]
    node _legal_address_T_33 = asSInt(_legal_address_T_32) @[Parameters.scala 137:52]
    node _legal_address_T_34 = eq(_legal_address_T_33, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    node _legal_address_T_36 = cvt(mpu_physaddr) @[Parameters.scala 137:49]
    node _legal_address_T_37 = and(_legal_address_T_36, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_38 = asSInt(_legal_address_T_37) @[Parameters.scala 137:52]
    node _legal_address_T_39 = eq(_legal_address_T_38, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_40 = xor(mpu_physaddr, UInt<40>("h10000")) @[Parameters.scala 137:31]
    node _legal_address_T_41 = cvt(_legal_address_T_40) @[Parameters.scala 137:49]
    node _legal_address_T_42 = and(_legal_address_T_41, SInt<41>("h-10000")) @[Parameters.scala 137:52]
    node _legal_address_T_43 = asSInt(_legal_address_T_42) @[Parameters.scala 137:52]
    node _legal_address_T_44 = eq(_legal_address_T_43, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_45 = xor(mpu_physaddr, UInt<40>("h80000000")) @[Parameters.scala 137:31]
    node _legal_address_T_46 = cvt(_legal_address_T_45) @[Parameters.scala 137:49]
    node _legal_address_T_47 = and(_legal_address_T_46, SInt<41>("h-10000000")) @[Parameters.scala 137:52]
    node _legal_address_T_48 = asSInt(_legal_address_T_47) @[Parameters.scala 137:52]
    node _legal_address_T_49 = eq(_legal_address_T_48, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_50 = xor(mpu_physaddr, UInt<40>("h10000000")) @[Parameters.scala 137:31]
    node _legal_address_T_51 = cvt(_legal_address_T_50) @[Parameters.scala 137:49]
    node _legal_address_T_52 = and(_legal_address_T_51, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_53 = asSInt(_legal_address_T_52) @[Parameters.scala 137:52]
    node _legal_address_T_54 = eq(_legal_address_T_53, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_55 = xor(mpu_physaddr, UInt<40>("h20000")) @[Parameters.scala 137:31]
    node _legal_address_T_56 = cvt(_legal_address_T_55) @[Parameters.scala 137:49]
    node _legal_address_T_57 = and(_legal_address_T_56, SInt<41>("h-10000")) @[Parameters.scala 137:52]
    node _legal_address_T_58 = asSInt(_legal_address_T_57) @[Parameters.scala 137:52]
    node _legal_address_T_59 = eq(_legal_address_T_58, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _legal_address_T_60 = or(_legal_address_T_4, _legal_address_T_9) @[TLB.scala 198:67]
    skip
    node _legal_address_T_61 = or(_legal_address_T_60, _legal_address_T_14) @[TLB.scala 198:67]
    skip
    node _legal_address_T_62 = or(_legal_address_T_61, _legal_address_T_19) @[TLB.scala 198:67]
    skip
    node _legal_address_T_63 = or(_legal_address_T_62, _legal_address_T_24) @[TLB.scala 198:67]
    skip
    node _legal_address_T_64 = or(_legal_address_T_63, _legal_address_T_29) @[TLB.scala 198:67]
    skip
    node _legal_address_T_65 = or(_legal_address_T_64, _legal_address_T_34) @[TLB.scala 198:67]
    skip
    node _legal_address_T_66 = or(_legal_address_T_65, _legal_address_T_39) @[TLB.scala 198:67]
    skip
    node _legal_address_T_67 = or(_legal_address_T_66, _legal_address_T_44) @[TLB.scala 198:67]
    skip
    node _legal_address_T_68 = or(_legal_address_T_67, _legal_address_T_49) @[TLB.scala 198:67]
    skip
    node _legal_address_T_69 = or(_legal_address_T_68, _legal_address_T_54) @[TLB.scala 198:67]
    skip
    node legal_address = or(_legal_address_T_69, _legal_address_T_59) @[TLB.scala 198:67]
    skip
    skip
    skip
    skip
    skip
    node _cacheable_T_5 = xor(mpu_physaddr, UInt<40>("h14000000")) @[Parameters.scala 137:31]
    node _cacheable_T_6 = cvt(_cacheable_T_5) @[Parameters.scala 137:49]
    skip
    skip
    skip
    skip
    skip
    skip
    node _cacheable_T_13 = and(_legal_address_T_51, SInt<41>("h96000000")) @[Parameters.scala 137:52]
    node _cacheable_T_14 = asSInt(_cacheable_T_13) @[Parameters.scala 137:52]
    node _cacheable_T_15 = eq(_cacheable_T_14, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _cacheable_T_18 = and(_legal_address_T_46, SInt<41>("h90000000")) @[Parameters.scala 137:52]
    node _cacheable_T_19 = asSInt(_cacheable_T_18) @[Parameters.scala 137:52]
    node _cacheable_T_20 = eq(_cacheable_T_19, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _cacheable_T_21 = or(_cacheable_T_15, _cacheable_T_20) @[Parameters.scala 615:89]
    skip
    skip
    skip
    skip
    node cacheable = and(legal_address, _cacheable_T_21) @[TLB.scala 200:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _homogeneous_T_81 = and(_legal_address_T_36, SInt<41>("h86134000")) @[Parameters.scala 137:52]
    node _homogeneous_T_82 = asSInt(_homogeneous_T_81) @[Parameters.scala 137:52]
    node _homogeneous_T_83 = eq(_homogeneous_T_82, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _homogeneous_T_86 = and(_legal_address_T_41, SInt<41>("h96130000")) @[Parameters.scala 137:52]
    node _homogeneous_T_87 = asSInt(_homogeneous_T_86) @[Parameters.scala 137:52]
    node _homogeneous_T_88 = eq(_homogeneous_T_87, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _homogeneous_T_91 = and(_legal_address_T_56, SInt<41>("h96130000")) @[Parameters.scala 137:52]
    node _homogeneous_T_92 = asSInt(_homogeneous_T_91) @[Parameters.scala 137:52]
    node _homogeneous_T_93 = eq(_homogeneous_T_92, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    node _homogeneous_T_100 = or(_homogeneous_T_83, _homogeneous_T_88) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_101 = or(_homogeneous_T_100, _homogeneous_T_93) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_102 = or(_homogeneous_T_101, _cacheable_T_20) @[TLBPermissions.scala 82:66]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _deny_access_to_debug_T = leq(mpu_priv, UInt<3>("h3")) @[TLB.scala 203:39]
    skip
    skip
    skip
    skip
    skip
    node deny_access_to_debug = and(_deny_access_to_debug_T, _legal_address_T_39) @[TLB.scala 203:48]
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_r_T_6 = not(deny_access_to_debug) @[TLB.scala 204:44]
    node _prot_r_T_7 = and(legal_address, _prot_r_T_6) @[TLB.scala 204:41]
    node prot_r = and(_prot_r_T_7, pmp.io_r) @[TLB.scala 204:66]
    skip
    skip
    node _prot_w_T_2 = and(_legal_address_T_36, SInt<41>("h9a030000")) @[Parameters.scala 137:52]
    node _prot_w_T_3 = asSInt(_prot_w_T_2) @[Parameters.scala 137:52]
    node _prot_w_T_4 = eq(_prot_w_T_3, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _prot_w_T_7 = and(_legal_address_T_31, SInt<41>("h9a120000")) @[Parameters.scala 137:52]
    node _prot_w_T_8 = asSInt(_prot_w_T_7) @[Parameters.scala 137:52]
    node _prot_w_T_9 = eq(_prot_w_T_8, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _prot_w_T_10 = xor(mpu_physaddr, UInt<40>("h8000000")) @[Parameters.scala 137:31]
    node _prot_w_T_11 = cvt(_prot_w_T_10) @[Parameters.scala 137:49]
    node _prot_w_T_12 = and(_prot_w_T_11, SInt<41>("h98000000")) @[Parameters.scala 137:52]
    node _prot_w_T_13 = asSInt(_prot_w_T_12) @[Parameters.scala 137:52]
    node _prot_w_T_14 = eq(_prot_w_T_13, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _prot_w_T_17 = and(_legal_address_T_51, SInt<41>("h9a130000")) @[Parameters.scala 137:52]
    node _prot_w_T_18 = asSInt(_prot_w_T_17) @[Parameters.scala 137:52]
    node _prot_w_T_19 = eq(_prot_w_T_18, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    node _prot_w_T_25 = or(_prot_w_T_4, _prot_w_T_9) @[Parameters.scala 615:89]
    node _prot_w_T_26 = or(_prot_w_T_25, _prot_w_T_14) @[Parameters.scala 615:89]
    node _prot_w_T_27 = or(_prot_w_T_26, _prot_w_T_19) @[Parameters.scala 615:89]
    node _prot_w_T_28 = or(_prot_w_T_27, _cacheable_T_20) @[Parameters.scala 615:89]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_w_T_43 = and(legal_address, _prot_w_T_28) @[TLB.scala 200:19]
    skip
    node _prot_w_T_45 = and(_prot_w_T_43, _prot_r_T_6) @[TLB.scala 205:45]
    node prot_w = and(_prot_w_T_45, pmp.io_w) @[TLB.scala 205:70]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_x_T_35 = and(_legal_address_T_31, SInt<41>("h96130000")) @[Parameters.scala 137:52]
    node _prot_x_T_36 = asSInt(_prot_x_T_35) @[Parameters.scala 137:52]
    node _prot_x_T_37 = eq(_prot_x_T_36, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    node _prot_x_T_43 = xor(mpu_physaddr, UInt<40>("h4000000")) @[Parameters.scala 137:31]
    node _prot_x_T_44 = cvt(_prot_x_T_43) @[Parameters.scala 137:49]
    node _prot_x_T_45 = and(_prot_x_T_44, SInt<41>("h94000000")) @[Parameters.scala 137:52]
    node _prot_x_T_46 = asSInt(_prot_x_T_45) @[Parameters.scala 137:52]
    node _prot_x_T_47 = eq(_prot_x_T_46, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_x_T_61 = and(legal_address, _homogeneous_T_102) @[TLB.scala 200:19]
    skip
    node _prot_x_T_63 = and(_prot_x_T_61, _prot_r_T_6) @[TLB.scala 209:40]
    node prot_x = and(_prot_x_T_63, pmp.io_x) @[TLB.scala 209:65]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_eff_T_31 = and(_legal_address_T_36, SInt<41>("h96032000")) @[Parameters.scala 137:52]
    node _prot_eff_T_32 = asSInt(_prot_eff_T_31) @[Parameters.scala 137:52]
    node _prot_eff_T_33 = eq(_prot_eff_T_32, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_eff_T_41 = and(_legal_address_T_6, SInt<41>("h96132000")) @[Parameters.scala 137:52]
    node _prot_eff_T_42 = asSInt(_prot_eff_T_41) @[Parameters.scala 137:52]
    node _prot_eff_T_43 = eq(_prot_eff_T_42, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_eff_T_51 = and(_cacheable_T_6, SInt<41>("h96132000")) @[Parameters.scala 137:52]
    node _prot_eff_T_52 = asSInt(_prot_eff_T_51) @[Parameters.scala 137:52]
    node _prot_eff_T_53 = eq(_prot_eff_T_52, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _prot_eff_T_54 = or(_prot_eff_T_33, _prot_x_T_37) @[Parameters.scala 615:89]
    node _prot_eff_T_55 = or(_prot_eff_T_54, _prot_eff_T_43) @[Parameters.scala 615:89]
    node _prot_eff_T_56 = or(_prot_eff_T_55, _prot_x_T_47) @[Parameters.scala 615:89]
    node _prot_eff_T_57 = or(_prot_eff_T_56, _prot_eff_T_53) @[Parameters.scala 615:89]
    skip
    skip
    skip
    skip
    node prot_eff = and(legal_address, _prot_eff_T_57) @[TLB.scala 200:19]
    node _sector_hits_T = or(sectored_entries_0_0_valid_0, sectored_entries_0_0_valid_1) @[package.scala 72:59]
    node _sector_hits_T_1 = or(_sector_hits_T, sectored_entries_0_0_valid_2) @[package.scala 72:59]
    node _sector_hits_T_2 = or(_sector_hits_T_1, sectored_entries_0_0_valid_3) @[package.scala 72:59]
    node _sector_hits_T_3 = xor(sectored_entries_0_0_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_4 = shr(_sector_hits_T_3, 2) @[TLB.scala 88:48]
    node _sector_hits_T_5 = eq(_sector_hits_T_4, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_0 = and(_sector_hits_T_2, _sector_hits_T_5) @[TLB.scala 87:40]
    node _sector_hits_T_6 = or(sectored_entries_0_1_valid_0, sectored_entries_0_1_valid_1) @[package.scala 72:59]
    node _sector_hits_T_7 = or(_sector_hits_T_6, sectored_entries_0_1_valid_2) @[package.scala 72:59]
    node _sector_hits_T_8 = or(_sector_hits_T_7, sectored_entries_0_1_valid_3) @[package.scala 72:59]
    node _sector_hits_T_9 = xor(sectored_entries_0_1_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_10 = shr(_sector_hits_T_9, 2) @[TLB.scala 88:48]
    node _sector_hits_T_11 = eq(_sector_hits_T_10, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_1 = and(_sector_hits_T_8, _sector_hits_T_11) @[TLB.scala 87:40]
    node _sector_hits_T_12 = or(sectored_entries_0_2_valid_0, sectored_entries_0_2_valid_1) @[package.scala 72:59]
    node _sector_hits_T_13 = or(_sector_hits_T_12, sectored_entries_0_2_valid_2) @[package.scala 72:59]
    node _sector_hits_T_14 = or(_sector_hits_T_13, sectored_entries_0_2_valid_3) @[package.scala 72:59]
    node _sector_hits_T_15 = xor(sectored_entries_0_2_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_16 = shr(_sector_hits_T_15, 2) @[TLB.scala 88:48]
    node _sector_hits_T_17 = eq(_sector_hits_T_16, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_2 = and(_sector_hits_T_14, _sector_hits_T_17) @[TLB.scala 87:40]
    node _sector_hits_T_18 = or(sectored_entries_0_3_valid_0, sectored_entries_0_3_valid_1) @[package.scala 72:59]
    node _sector_hits_T_19 = or(_sector_hits_T_18, sectored_entries_0_3_valid_2) @[package.scala 72:59]
    node _sector_hits_T_20 = or(_sector_hits_T_19, sectored_entries_0_3_valid_3) @[package.scala 72:59]
    node _sector_hits_T_21 = xor(sectored_entries_0_3_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_22 = shr(_sector_hits_T_21, 2) @[TLB.scala 88:48]
    node _sector_hits_T_23 = eq(_sector_hits_T_22, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_3 = and(_sector_hits_T_20, _sector_hits_T_23) @[TLB.scala 87:40]
    node _sector_hits_T_24 = or(sectored_entries_0_4_valid_0, sectored_entries_0_4_valid_1) @[package.scala 72:59]
    node _sector_hits_T_25 = or(_sector_hits_T_24, sectored_entries_0_4_valid_2) @[package.scala 72:59]
    node _sector_hits_T_26 = or(_sector_hits_T_25, sectored_entries_0_4_valid_3) @[package.scala 72:59]
    node _sector_hits_T_27 = xor(sectored_entries_0_4_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_28 = shr(_sector_hits_T_27, 2) @[TLB.scala 88:48]
    node _sector_hits_T_29 = eq(_sector_hits_T_28, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_4 = and(_sector_hits_T_26, _sector_hits_T_29) @[TLB.scala 87:40]
    node _sector_hits_T_30 = or(sectored_entries_0_5_valid_0, sectored_entries_0_5_valid_1) @[package.scala 72:59]
    node _sector_hits_T_31 = or(_sector_hits_T_30, sectored_entries_0_5_valid_2) @[package.scala 72:59]
    node _sector_hits_T_32 = or(_sector_hits_T_31, sectored_entries_0_5_valid_3) @[package.scala 72:59]
    node _sector_hits_T_33 = xor(sectored_entries_0_5_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_34 = shr(_sector_hits_T_33, 2) @[TLB.scala 88:48]
    node _sector_hits_T_35 = eq(_sector_hits_T_34, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_5 = and(_sector_hits_T_32, _sector_hits_T_35) @[TLB.scala 87:40]
    node _sector_hits_T_36 = or(sectored_entries_0_6_valid_0, sectored_entries_0_6_valid_1) @[package.scala 72:59]
    node _sector_hits_T_37 = or(_sector_hits_T_36, sectored_entries_0_6_valid_2) @[package.scala 72:59]
    node _sector_hits_T_38 = or(_sector_hits_T_37, sectored_entries_0_6_valid_3) @[package.scala 72:59]
    node _sector_hits_T_39 = xor(sectored_entries_0_6_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_40 = shr(_sector_hits_T_39, 2) @[TLB.scala 88:48]
    node _sector_hits_T_41 = eq(_sector_hits_T_40, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_6 = and(_sector_hits_T_38, _sector_hits_T_41) @[TLB.scala 87:40]
    node _sector_hits_T_42 = or(sectored_entries_0_7_valid_0, sectored_entries_0_7_valid_1) @[package.scala 72:59]
    node _sector_hits_T_43 = or(_sector_hits_T_42, sectored_entries_0_7_valid_2) @[package.scala 72:59]
    node _sector_hits_T_44 = or(_sector_hits_T_43, sectored_entries_0_7_valid_3) @[package.scala 72:59]
    node _sector_hits_T_45 = xor(sectored_entries_0_7_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_46 = shr(_sector_hits_T_45, 2) @[TLB.scala 88:48]
    node _sector_hits_T_47 = eq(_sector_hits_T_46, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_7 = and(_sector_hits_T_44, _sector_hits_T_47) @[TLB.scala 87:40]
    skip
    skip
    node _superpage_hits_T = bits(superpage_entries_0_tag, 26, 18) @[TLB.scala 95:46]
    node _superpage_hits_T_1 = bits(vpn, 26, 18) @[TLB.scala 95:84]
    node _superpage_hits_T_2 = eq(_superpage_hits_T, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _superpage_hits_T_4 = and(superpage_entries_0_valid_0, _superpage_hits_T_2) @[TLB.scala 95:29]
    node superpage_hits_ignore_1 = lt(superpage_entries_0_level, UInt<2>("h1")) @[TLB.scala 94:28]
    skip
    node _superpage_hits_T_5 = bits(superpage_entries_0_tag, 17, 9) @[TLB.scala 95:46]
    node _superpage_hits_T_6 = bits(vpn, 17, 9) @[TLB.scala 95:84]
    node _superpage_hits_T_7 = eq(_superpage_hits_T_5, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _superpage_hits_T_8 = or(superpage_hits_ignore_1, _superpage_hits_T_7) @[TLB.scala 95:40]
    node superpage_hits_0 = and(_superpage_hits_T_4, _superpage_hits_T_8) @[TLB.scala 95:29]
    skip
    skip
    skip
    node _superpage_hits_T_11 = bits(vpn, 8, 0) @[TLB.scala 95:84]
    skip
    skip
    skip
    skip
    skip
    node _superpage_hits_T_14 = bits(superpage_entries_1_tag, 26, 18) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_16 = eq(_superpage_hits_T_14, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _superpage_hits_T_18 = and(superpage_entries_1_valid_0, _superpage_hits_T_16) @[TLB.scala 95:29]
    node superpage_hits_ignore_4 = lt(superpage_entries_1_level, UInt<2>("h1")) @[TLB.scala 94:28]
    skip
    node _superpage_hits_T_19 = bits(superpage_entries_1_tag, 17, 9) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_21 = eq(_superpage_hits_T_19, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _superpage_hits_T_22 = or(superpage_hits_ignore_4, _superpage_hits_T_21) @[TLB.scala 95:40]
    node superpage_hits_1 = and(_superpage_hits_T_18, _superpage_hits_T_22) @[TLB.scala 95:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _superpage_hits_T_28 = bits(superpage_entries_2_tag, 26, 18) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_30 = eq(_superpage_hits_T_28, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _superpage_hits_T_32 = and(superpage_entries_2_valid_0, _superpage_hits_T_30) @[TLB.scala 95:29]
    node superpage_hits_ignore_7 = lt(superpage_entries_2_level, UInt<2>("h1")) @[TLB.scala 94:28]
    skip
    node _superpage_hits_T_33 = bits(superpage_entries_2_tag, 17, 9) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_35 = eq(_superpage_hits_T_33, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _superpage_hits_T_36 = or(superpage_hits_ignore_7, _superpage_hits_T_35) @[TLB.scala 95:40]
    node superpage_hits_2 = and(_superpage_hits_T_32, _superpage_hits_T_36) @[TLB.scala 95:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _superpage_hits_T_42 = bits(superpage_entries_3_tag, 26, 18) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_44 = eq(_superpage_hits_T_42, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _superpage_hits_T_46 = and(superpage_entries_3_valid_0, _superpage_hits_T_44) @[TLB.scala 95:29]
    node superpage_hits_ignore_10 = lt(superpage_entries_3_level, UInt<2>("h1")) @[TLB.scala 94:28]
    skip
    node _superpage_hits_T_47 = bits(superpage_entries_3_tag, 17, 9) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_49 = eq(_superpage_hits_T_47, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _superpage_hits_T_50 = or(superpage_hits_ignore_10, _superpage_hits_T_49) @[TLB.scala 95:40]
    node superpage_hits_3 = and(_superpage_hits_T_46, _superpage_hits_T_50) @[TLB.scala 95:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_idx = bits(vpn, 1, 0) @[package.scala 154:13]
    skip
    skip
    skip
    skip
    node _GEN_1 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_0_valid_1, sectored_entries_0_0_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_2 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_0_valid_2, _GEN_1) @[TLB.scala 100:{18,18}]
    node _GEN_3 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_0_valid_3, _GEN_2) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_3 = and(_GEN_3, _sector_hits_T_5) @[TLB.scala 100:18]
    node hitsVec_0 = and(vm_enabled, _hitsVec_T_3) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_5 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_1_valid_1, sectored_entries_0_1_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_6 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_1_valid_2, _GEN_5) @[TLB.scala 100:{18,18}]
    node _GEN_7 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_1_valid_3, _GEN_6) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_7 = and(_GEN_7, _sector_hits_T_11) @[TLB.scala 100:18]
    node hitsVec_1 = and(vm_enabled, _hitsVec_T_7) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_9 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_2_valid_1, sectored_entries_0_2_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_10 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_2_valid_2, _GEN_9) @[TLB.scala 100:{18,18}]
    node _GEN_11 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_2_valid_3, _GEN_10) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_11 = and(_GEN_11, _sector_hits_T_17) @[TLB.scala 100:18]
    node hitsVec_2 = and(vm_enabled, _hitsVec_T_11) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_13 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_3_valid_1, sectored_entries_0_3_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_14 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_3_valid_2, _GEN_13) @[TLB.scala 100:{18,18}]
    node _GEN_15 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_3_valid_3, _GEN_14) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_15 = and(_GEN_15, _sector_hits_T_23) @[TLB.scala 100:18]
    node hitsVec_3 = and(vm_enabled, _hitsVec_T_15) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_17 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_4_valid_1, sectored_entries_0_4_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_18 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_4_valid_2, _GEN_17) @[TLB.scala 100:{18,18}]
    node _GEN_19 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_4_valid_3, _GEN_18) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_19 = and(_GEN_19, _sector_hits_T_29) @[TLB.scala 100:18]
    node hitsVec_4 = and(vm_enabled, _hitsVec_T_19) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_21 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_5_valid_1, sectored_entries_0_5_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_22 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_5_valid_2, _GEN_21) @[TLB.scala 100:{18,18}]
    node _GEN_23 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_5_valid_3, _GEN_22) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_23 = and(_GEN_23, _sector_hits_T_35) @[TLB.scala 100:18]
    node hitsVec_5 = and(vm_enabled, _hitsVec_T_23) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_25 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_6_valid_1, sectored_entries_0_6_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_26 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_6_valid_2, _GEN_25) @[TLB.scala 100:{18,18}]
    node _GEN_27 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_6_valid_3, _GEN_26) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_27 = and(_GEN_27, _sector_hits_T_41) @[TLB.scala 100:18]
    node hitsVec_6 = and(vm_enabled, _hitsVec_T_27) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_29 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_7_valid_1, sectored_entries_0_7_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_30 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_7_valid_2, _GEN_29) @[TLB.scala 100:{18,18}]
    node _GEN_31 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_7_valid_3, _GEN_30) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_31 = and(_GEN_31, _sector_hits_T_47) @[TLB.scala 100:18]
    node hitsVec_7 = and(vm_enabled, _hitsVec_T_31) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_8 = and(vm_enabled, superpage_hits_0) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_9 = and(vm_enabled, superpage_hits_1) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_10 = and(vm_enabled, superpage_hits_2) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_11 = and(vm_enabled, superpage_hits_3) @[TLB.scala 214:44]
    skip
    skip
    node _hitsVec_T_92 = bits(special_entry_tag, 26, 18) @[TLB.scala 95:46]
    skip
    node _hitsVec_T_94 = eq(_hitsVec_T_92, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _hitsVec_T_96 = and(special_entry_valid_0, _hitsVec_T_94) @[TLB.scala 95:29]
    skip
    skip
    node _hitsVec_T_97 = bits(special_entry_tag, 17, 9) @[TLB.scala 95:46]
    skip
    node _hitsVec_T_99 = eq(_hitsVec_T_97, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _hitsVec_T_100 = or(mpu_ppn_ignore, _hitsVec_T_99) @[TLB.scala 95:40]
    node _hitsVec_T_101 = and(_hitsVec_T_96, _hitsVec_T_100) @[TLB.scala 95:29]
    skip
    skip
    node _hitsVec_T_102 = bits(special_entry_tag, 8, 0) @[TLB.scala 95:46]
    skip
    node _hitsVec_T_104 = eq(_hitsVec_T_102, _superpage_hits_T_11) @[TLB.scala 95:77]
    node _hitsVec_T_105 = or(mpu_ppn_ignore_1, _hitsVec_T_104) @[TLB.scala 95:40]
    node _hitsVec_T_106 = and(_hitsVec_T_101, _hitsVec_T_105) @[TLB.scala 95:29]
    node hitsVec_12 = and(vm_enabled, _hitsVec_T_106) @[TLB.scala 214:44]
    node real_hits_lo_lo_hi = cat(hitsVec_2, hitsVec_1) @[Cat.scala 30:58]
    node real_hits_lo_lo = cat(real_hits_lo_lo_hi, hitsVec_0) @[Cat.scala 30:58]
    node real_hits_lo_hi_hi = cat(hitsVec_5, hitsVec_4) @[Cat.scala 30:58]
    node real_hits_lo_hi = cat(real_hits_lo_hi_hi, hitsVec_3) @[Cat.scala 30:58]
    node real_hits_lo = cat(real_hits_lo_hi, real_hits_lo_lo) @[Cat.scala 30:58]
    node real_hits_hi_lo_hi = cat(hitsVec_8, hitsVec_7) @[Cat.scala 30:58]
    node real_hits_hi_lo = cat(real_hits_hi_lo_hi, hitsVec_6) @[Cat.scala 30:58]
    node real_hits_hi_hi_lo = cat(hitsVec_10, hitsVec_9) @[Cat.scala 30:58]
    node real_hits_hi_hi_hi = cat(hitsVec_12, hitsVec_11) @[Cat.scala 30:58]
    node real_hits_hi_hi = cat(real_hits_hi_hi_hi, real_hits_hi_hi_lo) @[Cat.scala 30:58]
    node real_hits_hi = cat(real_hits_hi_hi, real_hits_hi_lo) @[Cat.scala 30:58]
    node real_hits = cat(real_hits_hi, real_hits_lo) @[Cat.scala 30:58]
    node hits_hi = not(vm_enabled) @[TLB.scala 216:18]
    node hits = cat(hits_hi, real_hits) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _GEN_33 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_0_data_1, sectored_entries_0_0_data_0)
    node _GEN_34 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_0_data_2, _GEN_33)
    node _GEN_35 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_0_data_3, _GEN_34)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_37 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_1_data_1, sectored_entries_0_1_data_0)
    node _GEN_38 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_1_data_2, _GEN_37)
    node _GEN_39 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_1_data_3, _GEN_38)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_41 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_2_data_1, sectored_entries_0_2_data_0)
    node _GEN_42 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_2_data_2, _GEN_41)
    node _GEN_43 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_2_data_3, _GEN_42)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_45 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_3_data_1, sectored_entries_0_3_data_0)
    node _GEN_46 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_3_data_2, _GEN_45)
    node _GEN_47 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_3_data_3, _GEN_46)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_49 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_4_data_1, sectored_entries_0_4_data_0)
    node _GEN_50 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_4_data_2, _GEN_49)
    node _GEN_51 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_4_data_3, _GEN_50)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_53 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_5_data_1, sectored_entries_0_5_data_0)
    node _GEN_54 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_5_data_2, _GEN_53)
    node _GEN_55 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_5_data_3, _GEN_54)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_57 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_6_data_1, sectored_entries_0_6_data_0)
    node _GEN_58 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_6_data_2, _GEN_57)
    node _GEN_59 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_6_data_3, _GEN_58)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_61 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_7_data_1, sectored_entries_0_7_data_0)
    node _GEN_62 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_7_data_2, _GEN_61)
    node _GEN_63 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_7_data_3, _GEN_62)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ppn_data_T_149 = bits(superpage_entries_0_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node ppn_hi = shr(ppn_data_barrier_8.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    node _ppn_T_1 = mux(superpage_hits_ignore_1, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_985 = pad(ppn_data_barrier_8.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_2 = or(_ppn_T_1, _GEN_985) @[TLB.scala 109:47]
    node ppn_lo = bits(_ppn_T_2, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_1 = cat(ppn_hi, ppn_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_4 = or(vpn, _GEN_985) @[TLB.scala 109:47]
    node ppn_lo_1 = bits(_ppn_T_4, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_5 = cat(ppn_hi_1, ppn_lo_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ppn_data_T_165 = bits(superpage_entries_1_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node ppn_hi_2 = shr(ppn_data_barrier_9.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    node _ppn_T_6 = mux(superpage_hits_ignore_4, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_987 = pad(ppn_data_barrier_9.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_7 = or(_ppn_T_6, _GEN_987) @[TLB.scala 109:47]
    node ppn_lo_2 = bits(_ppn_T_7, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_3 = cat(ppn_hi_2, ppn_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_9 = or(vpn, _GEN_987) @[TLB.scala 109:47]
    node ppn_lo_3 = bits(_ppn_T_9, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_10 = cat(ppn_hi_3, ppn_lo_3) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ppn_data_T_181 = bits(superpage_entries_2_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node ppn_hi_4 = shr(ppn_data_barrier_10.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    node _ppn_T_11 = mux(superpage_hits_ignore_7, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_989 = pad(ppn_data_barrier_10.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_12 = or(_ppn_T_11, _GEN_989) @[TLB.scala 109:47]
    node ppn_lo_4 = bits(_ppn_T_12, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_5 = cat(ppn_hi_4, ppn_lo_4) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_14 = or(vpn, _GEN_989) @[TLB.scala 109:47]
    node ppn_lo_5 = bits(_ppn_T_14, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_15 = cat(ppn_hi_5, ppn_lo_5) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ppn_data_T_197 = bits(superpage_entries_3_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node ppn_hi_6 = shr(ppn_data_barrier_11.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    node _ppn_T_16 = mux(superpage_hits_ignore_10, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_991 = pad(ppn_data_barrier_11.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_17 = or(_ppn_T_16, _GEN_991) @[TLB.scala 109:47]
    node ppn_lo_6 = bits(_ppn_T_17, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_7 = cat(ppn_hi_6, ppn_lo_6) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_19 = or(vpn, _GEN_991) @[TLB.scala 109:47]
    node ppn_lo_7 = bits(_ppn_T_19, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_20 = cat(ppn_hi_7, ppn_lo_7) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node ppn_hi_8 = shr(ppn_data_barrier_12.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    skip
    node _GEN_993 = pad(ppn_data_barrier_12.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_22 = or(_mpu_ppn_T_1, _GEN_993) @[TLB.scala 109:47]
    node ppn_lo_8 = bits(_ppn_T_22, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_9 = cat(ppn_hi_8, ppn_lo_8) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_24 = or(_mpu_ppn_T_3, _GEN_993) @[TLB.scala 109:47]
    node ppn_lo_9 = bits(_ppn_T_24, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_25 = cat(ppn_hi_9, ppn_lo_9) @[Cat.scala 30:58]
    node _ppn_T_26 = bits(vpn, 19, 0) @[TLB.scala 217:77]
    node _ppn_T_27 = mux(hitsVec_0, ppn_data_barrier.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_28 = mux(hitsVec_1, ppn_data_barrier_1.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_29 = mux(hitsVec_2, ppn_data_barrier_2.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_30 = mux(hitsVec_3, ppn_data_barrier_3.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_31 = mux(hitsVec_4, ppn_data_barrier_4.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_32 = mux(hitsVec_5, ppn_data_barrier_5.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_33 = mux(hitsVec_6, ppn_data_barrier_6.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_34 = mux(hitsVec_7, ppn_data_barrier_7.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_35 = mux(hitsVec_8, _ppn_T_5, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_36 = mux(hitsVec_9, _ppn_T_10, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_37 = mux(hitsVec_10, _ppn_T_15, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_38 = mux(hitsVec_11, _ppn_T_20, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_39 = mux(hitsVec_12, _ppn_T_25, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_40 = mux(hits_hi, _ppn_T_26, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_41 = or(_ppn_T_27, _ppn_T_28) @[Mux.scala 27:72]
    node _ppn_T_42 = or(_ppn_T_41, _ppn_T_29) @[Mux.scala 27:72]
    node _ppn_T_43 = or(_ppn_T_42, _ppn_T_30) @[Mux.scala 27:72]
    node _ppn_T_44 = or(_ppn_T_43, _ppn_T_31) @[Mux.scala 27:72]
    node _ppn_T_45 = or(_ppn_T_44, _ppn_T_32) @[Mux.scala 27:72]
    node _ppn_T_46 = or(_ppn_T_45, _ppn_T_33) @[Mux.scala 27:72]
    node _ppn_T_47 = or(_ppn_T_46, _ppn_T_34) @[Mux.scala 27:72]
    node _ppn_T_48 = or(_ppn_T_47, _ppn_T_35) @[Mux.scala 27:72]
    node _ppn_T_49 = or(_ppn_T_48, _ppn_T_36) @[Mux.scala 27:72]
    node _ppn_T_50 = or(_ppn_T_49, _ppn_T_37) @[Mux.scala 27:72]
    node _ppn_T_51 = or(_ppn_T_50, _ppn_T_38) @[Mux.scala 27:72]
    node _ppn_T_52 = or(_ppn_T_51, _ppn_T_39) @[Mux.scala 27:72]
    node ppn = or(_ppn_T_52, _ppn_T_40) @[Mux.scala 27:72]
    node newEntry_g = and(io_ptw_resp_bits_pte_g, io_ptw_resp_bits_pte_v) @[TLB.scala 226:25]
    node _newEntry_sr_T = not(io_ptw_resp_bits_pte_w) @[PTW.scala 73:47]
    node _newEntry_sr_T_1 = and(io_ptw_resp_bits_pte_x, _newEntry_sr_T) @[PTW.scala 73:44]
    node _newEntry_sr_T_2 = or(io_ptw_resp_bits_pte_r, _newEntry_sr_T_1) @[PTW.scala 73:38]
    node _newEntry_sr_T_3 = and(io_ptw_resp_bits_pte_v, _newEntry_sr_T_2) @[PTW.scala 73:32]
    node _newEntry_sr_T_4 = and(_newEntry_sr_T_3, io_ptw_resp_bits_pte_a) @[PTW.scala 73:52]
    node newEntry_sr = and(_newEntry_sr_T_4, io_ptw_resp_bits_pte_r) @[PTW.scala 77:35]
    skip
    skip
    skip
    skip
    skip
    node _newEntry_sw_T_5 = and(_newEntry_sr_T_4, io_ptw_resp_bits_pte_w) @[PTW.scala 78:35]
    node newEntry_sw = and(_newEntry_sw_T_5, io_ptw_resp_bits_pte_d) @[PTW.scala 78:40]
    skip
    skip
    skip
    skip
    skip
    node newEntry_sx = and(_newEntry_sr_T_4, io_ptw_resp_bits_pte_x) @[PTW.scala 79:35]
    node _T = not(io_ptw_resp_bits_homogeneous) @[TLB.scala 240:37]
    skip
    skip
    skip
    skip
    node special_entry_data_0_lo_lo_lo = cat(cacheable, UInt<1>("h0")) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_lo_lo_hi = cat(_prot_w_T_43, prot_eff) @[TLB.scala 123:24]
    node special_entry_data_0_lo_lo = cat(special_entry_data_0_lo_lo_hi, special_entry_data_0_lo_lo_lo) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_lo_hi_lo = cat(_prot_w_T_43, _prot_w_T_43) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_lo_hi_hi = cat(prot_x, prot_r) @[TLB.scala 123:24]
    node special_entry_data_0_lo_hi = cat(special_entry_data_0_lo_hi_hi, special_entry_data_0_lo_hi_lo) @[TLB.scala 123:24]
    node special_entry_data_0_lo = cat(special_entry_data_0_lo_hi, special_entry_data_0_lo_lo) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_hi_lo_lo = cat(newEntry_sr, prot_w) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_hi_lo_hi = cat(newEntry_sw, newEntry_sx) @[TLB.scala 123:24]
    node special_entry_data_0_hi_lo = cat(special_entry_data_0_hi_lo_hi, special_entry_data_0_hi_lo_lo) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_hi_hi_lo = cat(newEntry_g, io_ptw_resp_bits_ae) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_hi_hi_hi = cat(refill_ppn, io_ptw_resp_bits_pte_u) @[TLB.scala 123:24]
    node special_entry_data_0_hi_hi = cat(special_entry_data_0_hi_hi_hi, special_entry_data_0_hi_hi_lo) @[TLB.scala 123:24]
    node special_entry_data_0_hi = cat(special_entry_data_0_hi_hi, special_entry_data_0_hi_lo) @[TLB.scala 123:24]
    node _special_entry_data_0_T = cat(special_entry_data_0_hi, special_entry_data_0_lo) @[TLB.scala 123:24]
    node _GEN_64 = mux(invalidate_refill, UInt<1>("h0"), UInt<1>("h1")) @[TLB.scala 122:16 243:34 126:46]
    node _T_2 = lt(io_ptw_resp_bits_level, UInt<2>("h2")) @[TLB.scala 245:40]
    node _T_3 = eq(r_superpage_repl_addr, UInt<2>("h0")) @[TLB.scala 246:82]
    node _superpage_entries_0_level_T = bits(io_ptw_resp_bits_level, 0, 0) @[package.scala 154:13]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_65 = mux(_T_3, r_refill_tag, superpage_entries_0_tag) @[TLB.scala 118:14 166:30 246:89]
    node _GEN_66 = mux(_T_3, pad(_superpage_entries_0_level_T, 2), superpage_entries_0_level) @[TLB.scala 119:16 166:30 246:89]
    node _GEN_67 = mux(_T_3, _GEN_64, superpage_entries_0_valid_0) @[TLB.scala 166:30 246:89]
    node _GEN_68 = mux(_T_3, _special_entry_data_0_T, superpage_entries_0_data_0) @[TLB.scala 123:15 166:30 246:89]
    node _T_4 = eq(r_superpage_repl_addr, UInt<2>("h1")) @[TLB.scala 246:82]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_69 = mux(_T_4, r_refill_tag, superpage_entries_1_tag) @[TLB.scala 118:14 166:30 246:89]
    node _GEN_70 = mux(_T_4, pad(_superpage_entries_0_level_T, 2), superpage_entries_1_level) @[TLB.scala 119:16 166:30 246:89]
    node _GEN_71 = mux(_T_4, _GEN_64, superpage_entries_1_valid_0) @[TLB.scala 166:30 246:89]
    node _GEN_72 = mux(_T_4, _special_entry_data_0_T, superpage_entries_1_data_0) @[TLB.scala 123:15 166:30 246:89]
    node _T_5 = eq(r_superpage_repl_addr, UInt<2>("h2")) @[TLB.scala 246:82]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_73 = mux(_T_5, r_refill_tag, superpage_entries_2_tag) @[TLB.scala 118:14 166:30 246:89]
    node _GEN_74 = mux(_T_5, pad(_superpage_entries_0_level_T, 2), superpage_entries_2_level) @[TLB.scala 119:16 166:30 246:89]
    node _GEN_75 = mux(_T_5, _GEN_64, superpage_entries_2_valid_0) @[TLB.scala 166:30 246:89]
    node _GEN_76 = mux(_T_5, _special_entry_data_0_T, superpage_entries_2_data_0) @[TLB.scala 123:15 166:30 246:89]
    node _T_6 = eq(r_superpage_repl_addr, UInt<2>("h3")) @[TLB.scala 246:82]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_77 = mux(_T_6, r_refill_tag, superpage_entries_3_tag) @[TLB.scala 118:14 166:30 246:89]
    node _GEN_78 = mux(_T_6, pad(_superpage_entries_0_level_T, 2), superpage_entries_3_level) @[TLB.scala 119:16 166:30 246:89]
    node _GEN_79 = mux(_T_6, _GEN_64, superpage_entries_3_valid_0) @[TLB.scala 166:30 246:89]
    node _GEN_80 = mux(_T_6, _special_entry_data_0_T, superpage_entries_3_data_0) @[TLB.scala 123:15 166:30 246:89]
    node waddr = mux(r_sectored_hit, r_sectored_hit_addr, r_sectored_repl_addr) @[TLB.scala 252:22]
    node _T_7 = eq(waddr, UInt<3>("h0")) @[TLB.scala 253:75]
    node _T_8 = not(r_sectored_hit) @[TLB.scala 254:15]
    node _GEN_81 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_0_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_82 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_0_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_83 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_0_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_84 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_0_valid_3) @[TLB.scala 254:32 126:46 165:29]
    node idx = bits(r_refill_tag, 1, 0) @[package.scala 154:13]
    skip
    node _GEN_995 = eq(UInt<2>("h0"), idx) @[TLB.scala 122:{16,16}]
    node _GEN_85 = or(_GEN_995, _GEN_81) @[TLB.scala 122:{16,16}]
    node _GEN_996 = eq(UInt<2>("h1"), idx) @[TLB.scala 122:{16,16}]
    node _GEN_86 = or(_GEN_996, _GEN_82) @[TLB.scala 122:{16,16}]
    node _GEN_997 = eq(UInt<2>("h2"), idx) @[TLB.scala 122:{16,16}]
    node _GEN_87 = or(_GEN_997, _GEN_83) @[TLB.scala 122:{16,16}]
    node _GEN_998 = eq(UInt<2>("h3"), idx) @[TLB.scala 122:{16,16}]
    node _GEN_88 = or(_GEN_998, _GEN_84) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_89 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_0_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_90 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_0_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_91 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_0_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_92 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_0_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_93 = mux(invalidate_refill, UInt<1>("h0"), _GEN_85) @[TLB.scala 256:34 126:46]
    node _GEN_94 = mux(invalidate_refill, UInt<1>("h0"), _GEN_86) @[TLB.scala 256:34 126:46]
    node _GEN_95 = mux(invalidate_refill, UInt<1>("h0"), _GEN_87) @[TLB.scala 256:34 126:46]
    node _GEN_96 = mux(invalidate_refill, UInt<1>("h0"), _GEN_88) @[TLB.scala 256:34 126:46]
    node _GEN_97 = mux(_T_7, _GEN_93, sectored_entries_0_0_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_98 = mux(_T_7, _GEN_94, sectored_entries_0_0_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_99 = mux(_T_7, _GEN_95, sectored_entries_0_0_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_100 = mux(_T_7, _GEN_96, sectored_entries_0_0_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_101 = mux(_T_7, r_refill_tag, sectored_entries_0_0_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_103 = mux(_T_7, _GEN_89, sectored_entries_0_0_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_104 = mux(_T_7, _GEN_90, sectored_entries_0_0_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_105 = mux(_T_7, _GEN_91, sectored_entries_0_0_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_106 = mux(_T_7, _GEN_92, sectored_entries_0_0_data_3) @[TLB.scala 165:29 253:82]
    node _T_9 = eq(waddr, UInt<3>("h1")) @[TLB.scala 253:75]
    skip
    node _GEN_107 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_1_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_108 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_1_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_109 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_1_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_110 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_1_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_111 = or(_GEN_995, _GEN_107) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_112 = or(_GEN_996, _GEN_108) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_113 = or(_GEN_997, _GEN_109) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_114 = or(_GEN_998, _GEN_110) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_115 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_1_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_116 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_1_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_117 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_1_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_118 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_1_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_119 = mux(invalidate_refill, UInt<1>("h0"), _GEN_111) @[TLB.scala 256:34 126:46]
    node _GEN_120 = mux(invalidate_refill, UInt<1>("h0"), _GEN_112) @[TLB.scala 256:34 126:46]
    node _GEN_121 = mux(invalidate_refill, UInt<1>("h0"), _GEN_113) @[TLB.scala 256:34 126:46]
    node _GEN_122 = mux(invalidate_refill, UInt<1>("h0"), _GEN_114) @[TLB.scala 256:34 126:46]
    node _GEN_123 = mux(_T_9, _GEN_119, sectored_entries_0_1_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_124 = mux(_T_9, _GEN_120, sectored_entries_0_1_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_125 = mux(_T_9, _GEN_121, sectored_entries_0_1_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_126 = mux(_T_9, _GEN_122, sectored_entries_0_1_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_127 = mux(_T_9, r_refill_tag, sectored_entries_0_1_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_129 = mux(_T_9, _GEN_115, sectored_entries_0_1_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_130 = mux(_T_9, _GEN_116, sectored_entries_0_1_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_131 = mux(_T_9, _GEN_117, sectored_entries_0_1_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_132 = mux(_T_9, _GEN_118, sectored_entries_0_1_data_3) @[TLB.scala 165:29 253:82]
    node _T_11 = eq(waddr, UInt<3>("h2")) @[TLB.scala 253:75]
    skip
    node _GEN_133 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_2_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_134 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_2_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_135 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_2_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_136 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_2_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_137 = or(_GEN_995, _GEN_133) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_138 = or(_GEN_996, _GEN_134) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_139 = or(_GEN_997, _GEN_135) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_140 = or(_GEN_998, _GEN_136) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_141 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_2_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_142 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_2_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_143 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_2_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_144 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_2_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_145 = mux(invalidate_refill, UInt<1>("h0"), _GEN_137) @[TLB.scala 256:34 126:46]
    node _GEN_146 = mux(invalidate_refill, UInt<1>("h0"), _GEN_138) @[TLB.scala 256:34 126:46]
    node _GEN_147 = mux(invalidate_refill, UInt<1>("h0"), _GEN_139) @[TLB.scala 256:34 126:46]
    node _GEN_148 = mux(invalidate_refill, UInt<1>("h0"), _GEN_140) @[TLB.scala 256:34 126:46]
    node _GEN_149 = mux(_T_11, _GEN_145, sectored_entries_0_2_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_150 = mux(_T_11, _GEN_146, sectored_entries_0_2_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_151 = mux(_T_11, _GEN_147, sectored_entries_0_2_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_152 = mux(_T_11, _GEN_148, sectored_entries_0_2_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_153 = mux(_T_11, r_refill_tag, sectored_entries_0_2_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_155 = mux(_T_11, _GEN_141, sectored_entries_0_2_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_156 = mux(_T_11, _GEN_142, sectored_entries_0_2_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_157 = mux(_T_11, _GEN_143, sectored_entries_0_2_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_158 = mux(_T_11, _GEN_144, sectored_entries_0_2_data_3) @[TLB.scala 165:29 253:82]
    node _T_13 = eq(waddr, UInt<3>("h3")) @[TLB.scala 253:75]
    skip
    node _GEN_159 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_3_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_160 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_3_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_161 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_3_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_162 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_3_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_163 = or(_GEN_995, _GEN_159) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_164 = or(_GEN_996, _GEN_160) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_165 = or(_GEN_997, _GEN_161) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_166 = or(_GEN_998, _GEN_162) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_167 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_3_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_168 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_3_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_169 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_3_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_170 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_3_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_171 = mux(invalidate_refill, UInt<1>("h0"), _GEN_163) @[TLB.scala 256:34 126:46]
    node _GEN_172 = mux(invalidate_refill, UInt<1>("h0"), _GEN_164) @[TLB.scala 256:34 126:46]
    node _GEN_173 = mux(invalidate_refill, UInt<1>("h0"), _GEN_165) @[TLB.scala 256:34 126:46]
    node _GEN_174 = mux(invalidate_refill, UInt<1>("h0"), _GEN_166) @[TLB.scala 256:34 126:46]
    node _GEN_175 = mux(_T_13, _GEN_171, sectored_entries_0_3_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_176 = mux(_T_13, _GEN_172, sectored_entries_0_3_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_177 = mux(_T_13, _GEN_173, sectored_entries_0_3_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_178 = mux(_T_13, _GEN_174, sectored_entries_0_3_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_179 = mux(_T_13, r_refill_tag, sectored_entries_0_3_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_181 = mux(_T_13, _GEN_167, sectored_entries_0_3_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_182 = mux(_T_13, _GEN_168, sectored_entries_0_3_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_183 = mux(_T_13, _GEN_169, sectored_entries_0_3_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_184 = mux(_T_13, _GEN_170, sectored_entries_0_3_data_3) @[TLB.scala 165:29 253:82]
    node _T_15 = eq(waddr, UInt<3>("h4")) @[TLB.scala 253:75]
    skip
    node _GEN_185 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_4_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_186 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_4_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_187 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_4_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_188 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_4_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_189 = or(_GEN_995, _GEN_185) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_190 = or(_GEN_996, _GEN_186) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_191 = or(_GEN_997, _GEN_187) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_192 = or(_GEN_998, _GEN_188) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_193 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_4_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_194 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_4_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_195 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_4_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_196 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_4_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_197 = mux(invalidate_refill, UInt<1>("h0"), _GEN_189) @[TLB.scala 256:34 126:46]
    node _GEN_198 = mux(invalidate_refill, UInt<1>("h0"), _GEN_190) @[TLB.scala 256:34 126:46]
    node _GEN_199 = mux(invalidate_refill, UInt<1>("h0"), _GEN_191) @[TLB.scala 256:34 126:46]
    node _GEN_200 = mux(invalidate_refill, UInt<1>("h0"), _GEN_192) @[TLB.scala 256:34 126:46]
    node _GEN_201 = mux(_T_15, _GEN_197, sectored_entries_0_4_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_202 = mux(_T_15, _GEN_198, sectored_entries_0_4_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_203 = mux(_T_15, _GEN_199, sectored_entries_0_4_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_204 = mux(_T_15, _GEN_200, sectored_entries_0_4_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_205 = mux(_T_15, r_refill_tag, sectored_entries_0_4_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_207 = mux(_T_15, _GEN_193, sectored_entries_0_4_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_208 = mux(_T_15, _GEN_194, sectored_entries_0_4_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_209 = mux(_T_15, _GEN_195, sectored_entries_0_4_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_210 = mux(_T_15, _GEN_196, sectored_entries_0_4_data_3) @[TLB.scala 165:29 253:82]
    node _T_17 = eq(waddr, UInt<3>("h5")) @[TLB.scala 253:75]
    skip
    node _GEN_211 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_5_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_212 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_5_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_213 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_5_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_214 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_5_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_215 = or(_GEN_995, _GEN_211) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_216 = or(_GEN_996, _GEN_212) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_217 = or(_GEN_997, _GEN_213) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_218 = or(_GEN_998, _GEN_214) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_219 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_5_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_220 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_5_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_221 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_5_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_222 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_5_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_223 = mux(invalidate_refill, UInt<1>("h0"), _GEN_215) @[TLB.scala 256:34 126:46]
    node _GEN_224 = mux(invalidate_refill, UInt<1>("h0"), _GEN_216) @[TLB.scala 256:34 126:46]
    node _GEN_225 = mux(invalidate_refill, UInt<1>("h0"), _GEN_217) @[TLB.scala 256:34 126:46]
    node _GEN_226 = mux(invalidate_refill, UInt<1>("h0"), _GEN_218) @[TLB.scala 256:34 126:46]
    node _GEN_227 = mux(_T_17, _GEN_223, sectored_entries_0_5_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_228 = mux(_T_17, _GEN_224, sectored_entries_0_5_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_229 = mux(_T_17, _GEN_225, sectored_entries_0_5_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_230 = mux(_T_17, _GEN_226, sectored_entries_0_5_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_231 = mux(_T_17, r_refill_tag, sectored_entries_0_5_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_233 = mux(_T_17, _GEN_219, sectored_entries_0_5_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_234 = mux(_T_17, _GEN_220, sectored_entries_0_5_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_235 = mux(_T_17, _GEN_221, sectored_entries_0_5_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_236 = mux(_T_17, _GEN_222, sectored_entries_0_5_data_3) @[TLB.scala 165:29 253:82]
    node _T_19 = eq(waddr, UInt<3>("h6")) @[TLB.scala 253:75]
    skip
    node _GEN_237 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_6_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_238 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_6_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_239 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_6_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_240 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_6_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_241 = or(_GEN_995, _GEN_237) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_242 = or(_GEN_996, _GEN_238) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_243 = or(_GEN_997, _GEN_239) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_244 = or(_GEN_998, _GEN_240) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_245 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_6_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_246 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_6_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_247 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_6_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_248 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_6_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_249 = mux(invalidate_refill, UInt<1>("h0"), _GEN_241) @[TLB.scala 256:34 126:46]
    node _GEN_250 = mux(invalidate_refill, UInt<1>("h0"), _GEN_242) @[TLB.scala 256:34 126:46]
    node _GEN_251 = mux(invalidate_refill, UInt<1>("h0"), _GEN_243) @[TLB.scala 256:34 126:46]
    node _GEN_252 = mux(invalidate_refill, UInt<1>("h0"), _GEN_244) @[TLB.scala 256:34 126:46]
    node _GEN_253 = mux(_T_19, _GEN_249, sectored_entries_0_6_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_254 = mux(_T_19, _GEN_250, sectored_entries_0_6_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_255 = mux(_T_19, _GEN_251, sectored_entries_0_6_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_256 = mux(_T_19, _GEN_252, sectored_entries_0_6_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_257 = mux(_T_19, r_refill_tag, sectored_entries_0_6_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_259 = mux(_T_19, _GEN_245, sectored_entries_0_6_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_260 = mux(_T_19, _GEN_246, sectored_entries_0_6_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_261 = mux(_T_19, _GEN_247, sectored_entries_0_6_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_262 = mux(_T_19, _GEN_248, sectored_entries_0_6_data_3) @[TLB.scala 165:29 253:82]
    node _T_21 = eq(waddr, UInt<3>("h7")) @[TLB.scala 253:75]
    skip
    node _GEN_263 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_7_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_264 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_7_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_265 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_7_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_266 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_7_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_267 = or(_GEN_995, _GEN_263) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_268 = or(_GEN_996, _GEN_264) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_269 = or(_GEN_997, _GEN_265) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_270 = or(_GEN_998, _GEN_266) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_271 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_7_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_272 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_7_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_273 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_7_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_274 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_7_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_275 = mux(invalidate_refill, UInt<1>("h0"), _GEN_267) @[TLB.scala 256:34 126:46]
    node _GEN_276 = mux(invalidate_refill, UInt<1>("h0"), _GEN_268) @[TLB.scala 256:34 126:46]
    node _GEN_277 = mux(invalidate_refill, UInt<1>("h0"), _GEN_269) @[TLB.scala 256:34 126:46]
    node _GEN_278 = mux(invalidate_refill, UInt<1>("h0"), _GEN_270) @[TLB.scala 256:34 126:46]
    node _GEN_279 = mux(_T_21, _GEN_275, sectored_entries_0_7_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_280 = mux(_T_21, _GEN_276, sectored_entries_0_7_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_281 = mux(_T_21, _GEN_277, sectored_entries_0_7_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_282 = mux(_T_21, _GEN_278, sectored_entries_0_7_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_283 = mux(_T_21, r_refill_tag, sectored_entries_0_7_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_285 = mux(_T_21, _GEN_271, sectored_entries_0_7_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_286 = mux(_T_21, _GEN_272, sectored_entries_0_7_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_287 = mux(_T_21, _GEN_273, sectored_entries_0_7_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_288 = mux(_T_21, _GEN_274, sectored_entries_0_7_data_3) @[TLB.scala 165:29 253:82]
    node _GEN_289 = mux(_T_2, _GEN_65, superpage_entries_0_tag) @[TLB.scala 166:30 245:54]
    node _GEN_290 = mux(_T_2, _GEN_66, superpage_entries_0_level) @[TLB.scala 166:30 245:54]
    node _GEN_291 = mux(_T_2, _GEN_67, superpage_entries_0_valid_0) @[TLB.scala 166:30 245:54]
    node _GEN_292 = mux(_T_2, _GEN_68, superpage_entries_0_data_0) @[TLB.scala 166:30 245:54]
    node _GEN_293 = mux(_T_2, _GEN_69, superpage_entries_1_tag) @[TLB.scala 166:30 245:54]
    node _GEN_294 = mux(_T_2, _GEN_70, superpage_entries_1_level) @[TLB.scala 166:30 245:54]
    node _GEN_295 = mux(_T_2, _GEN_71, superpage_entries_1_valid_0) @[TLB.scala 166:30 245:54]
    node _GEN_296 = mux(_T_2, _GEN_72, superpage_entries_1_data_0) @[TLB.scala 166:30 245:54]
    node _GEN_297 = mux(_T_2, _GEN_73, superpage_entries_2_tag) @[TLB.scala 166:30 245:54]
    node _GEN_298 = mux(_T_2, _GEN_74, superpage_entries_2_level) @[TLB.scala 166:30 245:54]
    node _GEN_299 = mux(_T_2, _GEN_75, superpage_entries_2_valid_0) @[TLB.scala 166:30 245:54]
    node _GEN_300 = mux(_T_2, _GEN_76, superpage_entries_2_data_0) @[TLB.scala 166:30 245:54]
    node _GEN_301 = mux(_T_2, _GEN_77, superpage_entries_3_tag) @[TLB.scala 166:30 245:54]
    node _GEN_302 = mux(_T_2, _GEN_78, superpage_entries_3_level) @[TLB.scala 166:30 245:54]
    node _GEN_303 = mux(_T_2, _GEN_79, superpage_entries_3_valid_0) @[TLB.scala 166:30 245:54]
    node _GEN_304 = mux(_T_2, _GEN_80, superpage_entries_3_data_0) @[TLB.scala 166:30 245:54]
    node _GEN_305 = mux(_T_2, sectored_entries_0_0_valid_0, _GEN_97) @[TLB.scala 165:29 245:54]
    node _GEN_306 = mux(_T_2, sectored_entries_0_0_valid_1, _GEN_98) @[TLB.scala 165:29 245:54]
    node _GEN_307 = mux(_T_2, sectored_entries_0_0_valid_2, _GEN_99) @[TLB.scala 165:29 245:54]
    node _GEN_308 = mux(_T_2, sectored_entries_0_0_valid_3, _GEN_100) @[TLB.scala 165:29 245:54]
    node _GEN_309 = mux(_T_2, sectored_entries_0_0_tag, _GEN_101) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_311 = mux(_T_2, sectored_entries_0_0_data_0, _GEN_103) @[TLB.scala 165:29 245:54]
    node _GEN_312 = mux(_T_2, sectored_entries_0_0_data_1, _GEN_104) @[TLB.scala 165:29 245:54]
    node _GEN_313 = mux(_T_2, sectored_entries_0_0_data_2, _GEN_105) @[TLB.scala 165:29 245:54]
    node _GEN_314 = mux(_T_2, sectored_entries_0_0_data_3, _GEN_106) @[TLB.scala 165:29 245:54]
    node _GEN_315 = mux(_T_2, sectored_entries_0_1_valid_0, _GEN_123) @[TLB.scala 165:29 245:54]
    node _GEN_316 = mux(_T_2, sectored_entries_0_1_valid_1, _GEN_124) @[TLB.scala 165:29 245:54]
    node _GEN_317 = mux(_T_2, sectored_entries_0_1_valid_2, _GEN_125) @[TLB.scala 165:29 245:54]
    node _GEN_318 = mux(_T_2, sectored_entries_0_1_valid_3, _GEN_126) @[TLB.scala 165:29 245:54]
    node _GEN_319 = mux(_T_2, sectored_entries_0_1_tag, _GEN_127) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_321 = mux(_T_2, sectored_entries_0_1_data_0, _GEN_129) @[TLB.scala 165:29 245:54]
    node _GEN_322 = mux(_T_2, sectored_entries_0_1_data_1, _GEN_130) @[TLB.scala 165:29 245:54]
    node _GEN_323 = mux(_T_2, sectored_entries_0_1_data_2, _GEN_131) @[TLB.scala 165:29 245:54]
    node _GEN_324 = mux(_T_2, sectored_entries_0_1_data_3, _GEN_132) @[TLB.scala 165:29 245:54]
    node _GEN_325 = mux(_T_2, sectored_entries_0_2_valid_0, _GEN_149) @[TLB.scala 165:29 245:54]
    node _GEN_326 = mux(_T_2, sectored_entries_0_2_valid_1, _GEN_150) @[TLB.scala 165:29 245:54]
    node _GEN_327 = mux(_T_2, sectored_entries_0_2_valid_2, _GEN_151) @[TLB.scala 165:29 245:54]
    node _GEN_328 = mux(_T_2, sectored_entries_0_2_valid_3, _GEN_152) @[TLB.scala 165:29 245:54]
    node _GEN_329 = mux(_T_2, sectored_entries_0_2_tag, _GEN_153) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_331 = mux(_T_2, sectored_entries_0_2_data_0, _GEN_155) @[TLB.scala 165:29 245:54]
    node _GEN_332 = mux(_T_2, sectored_entries_0_2_data_1, _GEN_156) @[TLB.scala 165:29 245:54]
    node _GEN_333 = mux(_T_2, sectored_entries_0_2_data_2, _GEN_157) @[TLB.scala 165:29 245:54]
    node _GEN_334 = mux(_T_2, sectored_entries_0_2_data_3, _GEN_158) @[TLB.scala 165:29 245:54]
    node _GEN_335 = mux(_T_2, sectored_entries_0_3_valid_0, _GEN_175) @[TLB.scala 165:29 245:54]
    node _GEN_336 = mux(_T_2, sectored_entries_0_3_valid_1, _GEN_176) @[TLB.scala 165:29 245:54]
    node _GEN_337 = mux(_T_2, sectored_entries_0_3_valid_2, _GEN_177) @[TLB.scala 165:29 245:54]
    node _GEN_338 = mux(_T_2, sectored_entries_0_3_valid_3, _GEN_178) @[TLB.scala 165:29 245:54]
    node _GEN_339 = mux(_T_2, sectored_entries_0_3_tag, _GEN_179) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_341 = mux(_T_2, sectored_entries_0_3_data_0, _GEN_181) @[TLB.scala 165:29 245:54]
    node _GEN_342 = mux(_T_2, sectored_entries_0_3_data_1, _GEN_182) @[TLB.scala 165:29 245:54]
    node _GEN_343 = mux(_T_2, sectored_entries_0_3_data_2, _GEN_183) @[TLB.scala 165:29 245:54]
    node _GEN_344 = mux(_T_2, sectored_entries_0_3_data_3, _GEN_184) @[TLB.scala 165:29 245:54]
    node _GEN_345 = mux(_T_2, sectored_entries_0_4_valid_0, _GEN_201) @[TLB.scala 165:29 245:54]
    node _GEN_346 = mux(_T_2, sectored_entries_0_4_valid_1, _GEN_202) @[TLB.scala 165:29 245:54]
    node _GEN_347 = mux(_T_2, sectored_entries_0_4_valid_2, _GEN_203) @[TLB.scala 165:29 245:54]
    node _GEN_348 = mux(_T_2, sectored_entries_0_4_valid_3, _GEN_204) @[TLB.scala 165:29 245:54]
    node _GEN_349 = mux(_T_2, sectored_entries_0_4_tag, _GEN_205) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_351 = mux(_T_2, sectored_entries_0_4_data_0, _GEN_207) @[TLB.scala 165:29 245:54]
    node _GEN_352 = mux(_T_2, sectored_entries_0_4_data_1, _GEN_208) @[TLB.scala 165:29 245:54]
    node _GEN_353 = mux(_T_2, sectored_entries_0_4_data_2, _GEN_209) @[TLB.scala 165:29 245:54]
    node _GEN_354 = mux(_T_2, sectored_entries_0_4_data_3, _GEN_210) @[TLB.scala 165:29 245:54]
    node _GEN_355 = mux(_T_2, sectored_entries_0_5_valid_0, _GEN_227) @[TLB.scala 165:29 245:54]
    node _GEN_356 = mux(_T_2, sectored_entries_0_5_valid_1, _GEN_228) @[TLB.scala 165:29 245:54]
    node _GEN_357 = mux(_T_2, sectored_entries_0_5_valid_2, _GEN_229) @[TLB.scala 165:29 245:54]
    node _GEN_358 = mux(_T_2, sectored_entries_0_5_valid_3, _GEN_230) @[TLB.scala 165:29 245:54]
    node _GEN_359 = mux(_T_2, sectored_entries_0_5_tag, _GEN_231) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_361 = mux(_T_2, sectored_entries_0_5_data_0, _GEN_233) @[TLB.scala 165:29 245:54]
    node _GEN_362 = mux(_T_2, sectored_entries_0_5_data_1, _GEN_234) @[TLB.scala 165:29 245:54]
    node _GEN_363 = mux(_T_2, sectored_entries_0_5_data_2, _GEN_235) @[TLB.scala 165:29 245:54]
    node _GEN_364 = mux(_T_2, sectored_entries_0_5_data_3, _GEN_236) @[TLB.scala 165:29 245:54]
    node _GEN_365 = mux(_T_2, sectored_entries_0_6_valid_0, _GEN_253) @[TLB.scala 165:29 245:54]
    node _GEN_366 = mux(_T_2, sectored_entries_0_6_valid_1, _GEN_254) @[TLB.scala 165:29 245:54]
    node _GEN_367 = mux(_T_2, sectored_entries_0_6_valid_2, _GEN_255) @[TLB.scala 165:29 245:54]
    node _GEN_368 = mux(_T_2, sectored_entries_0_6_valid_3, _GEN_256) @[TLB.scala 165:29 245:54]
    node _GEN_369 = mux(_T_2, sectored_entries_0_6_tag, _GEN_257) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_371 = mux(_T_2, sectored_entries_0_6_data_0, _GEN_259) @[TLB.scala 165:29 245:54]
    node _GEN_372 = mux(_T_2, sectored_entries_0_6_data_1, _GEN_260) @[TLB.scala 165:29 245:54]
    node _GEN_373 = mux(_T_2, sectored_entries_0_6_data_2, _GEN_261) @[TLB.scala 165:29 245:54]
    node _GEN_374 = mux(_T_2, sectored_entries_0_6_data_3, _GEN_262) @[TLB.scala 165:29 245:54]
    node _GEN_375 = mux(_T_2, sectored_entries_0_7_valid_0, _GEN_279) @[TLB.scala 165:29 245:54]
    node _GEN_376 = mux(_T_2, sectored_entries_0_7_valid_1, _GEN_280) @[TLB.scala 165:29 245:54]
    node _GEN_377 = mux(_T_2, sectored_entries_0_7_valid_2, _GEN_281) @[TLB.scala 165:29 245:54]
    node _GEN_378 = mux(_T_2, sectored_entries_0_7_valid_3, _GEN_282) @[TLB.scala 165:29 245:54]
    node _GEN_379 = mux(_T_2, sectored_entries_0_7_tag, _GEN_283) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_381 = mux(_T_2, sectored_entries_0_7_data_0, _GEN_285) @[TLB.scala 165:29 245:54]
    node _GEN_382 = mux(_T_2, sectored_entries_0_7_data_1, _GEN_286) @[TLB.scala 165:29 245:54]
    node _GEN_383 = mux(_T_2, sectored_entries_0_7_data_2, _GEN_287) @[TLB.scala 165:29 245:54]
    node _GEN_384 = mux(_T_2, sectored_entries_0_7_data_3, _GEN_288) @[TLB.scala 165:29 245:54]
    node _GEN_385 = mux(_T, r_refill_tag, special_entry_tag) @[TLB.scala 118:14 167:56 240:68]
    node _GEN_386 = mux(_T, io_ptw_resp_bits_level, special_entry_level) @[TLB.scala 119:16 167:56 240:68]
    node _GEN_387 = mux(_T, _GEN_64, special_entry_valid_0) @[TLB.scala 167:56 240:68]
    node _GEN_388 = mux(_T, _special_entry_data_0_T, special_entry_data_0) @[TLB.scala 123:15 167:56 240:68]
    node _GEN_389 = mux(_T, superpage_entries_0_tag, _GEN_289) @[TLB.scala 166:30 240:68]
    node _GEN_390 = mux(_T, superpage_entries_0_level, _GEN_290) @[TLB.scala 166:30 240:68]
    node _GEN_391 = mux(_T, superpage_entries_0_valid_0, _GEN_291) @[TLB.scala 166:30 240:68]
    node _GEN_392 = mux(_T, superpage_entries_0_data_0, _GEN_292) @[TLB.scala 166:30 240:68]
    node _GEN_393 = mux(_T, superpage_entries_1_tag, _GEN_293) @[TLB.scala 166:30 240:68]
    node _GEN_394 = mux(_T, superpage_entries_1_level, _GEN_294) @[TLB.scala 166:30 240:68]
    node _GEN_395 = mux(_T, superpage_entries_1_valid_0, _GEN_295) @[TLB.scala 166:30 240:68]
    node _GEN_396 = mux(_T, superpage_entries_1_data_0, _GEN_296) @[TLB.scala 166:30 240:68]
    node _GEN_397 = mux(_T, superpage_entries_2_tag, _GEN_297) @[TLB.scala 166:30 240:68]
    node _GEN_398 = mux(_T, superpage_entries_2_level, _GEN_298) @[TLB.scala 166:30 240:68]
    node _GEN_399 = mux(_T, superpage_entries_2_valid_0, _GEN_299) @[TLB.scala 166:30 240:68]
    node _GEN_400 = mux(_T, superpage_entries_2_data_0, _GEN_300) @[TLB.scala 166:30 240:68]
    node _GEN_401 = mux(_T, superpage_entries_3_tag, _GEN_301) @[TLB.scala 166:30 240:68]
    node _GEN_402 = mux(_T, superpage_entries_3_level, _GEN_302) @[TLB.scala 166:30 240:68]
    node _GEN_403 = mux(_T, superpage_entries_3_valid_0, _GEN_303) @[TLB.scala 166:30 240:68]
    node _GEN_404 = mux(_T, superpage_entries_3_data_0, _GEN_304) @[TLB.scala 166:30 240:68]
    node _GEN_405 = mux(_T, sectored_entries_0_0_valid_0, _GEN_305) @[TLB.scala 165:29 240:68]
    node _GEN_406 = mux(_T, sectored_entries_0_0_valid_1, _GEN_306) @[TLB.scala 165:29 240:68]
    node _GEN_407 = mux(_T, sectored_entries_0_0_valid_2, _GEN_307) @[TLB.scala 165:29 240:68]
    node _GEN_408 = mux(_T, sectored_entries_0_0_valid_3, _GEN_308) @[TLB.scala 165:29 240:68]
    node _GEN_409 = mux(_T, sectored_entries_0_0_tag, _GEN_309) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_411 = mux(_T, sectored_entries_0_0_data_0, _GEN_311) @[TLB.scala 165:29 240:68]
    node _GEN_412 = mux(_T, sectored_entries_0_0_data_1, _GEN_312) @[TLB.scala 165:29 240:68]
    node _GEN_413 = mux(_T, sectored_entries_0_0_data_2, _GEN_313) @[TLB.scala 165:29 240:68]
    node _GEN_414 = mux(_T, sectored_entries_0_0_data_3, _GEN_314) @[TLB.scala 165:29 240:68]
    node _GEN_415 = mux(_T, sectored_entries_0_1_valid_0, _GEN_315) @[TLB.scala 165:29 240:68]
    node _GEN_416 = mux(_T, sectored_entries_0_1_valid_1, _GEN_316) @[TLB.scala 165:29 240:68]
    node _GEN_417 = mux(_T, sectored_entries_0_1_valid_2, _GEN_317) @[TLB.scala 165:29 240:68]
    node _GEN_418 = mux(_T, sectored_entries_0_1_valid_3, _GEN_318) @[TLB.scala 165:29 240:68]
    node _GEN_419 = mux(_T, sectored_entries_0_1_tag, _GEN_319) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_421 = mux(_T, sectored_entries_0_1_data_0, _GEN_321) @[TLB.scala 165:29 240:68]
    node _GEN_422 = mux(_T, sectored_entries_0_1_data_1, _GEN_322) @[TLB.scala 165:29 240:68]
    node _GEN_423 = mux(_T, sectored_entries_0_1_data_2, _GEN_323) @[TLB.scala 165:29 240:68]
    node _GEN_424 = mux(_T, sectored_entries_0_1_data_3, _GEN_324) @[TLB.scala 165:29 240:68]
    node _GEN_425 = mux(_T, sectored_entries_0_2_valid_0, _GEN_325) @[TLB.scala 165:29 240:68]
    node _GEN_426 = mux(_T, sectored_entries_0_2_valid_1, _GEN_326) @[TLB.scala 165:29 240:68]
    node _GEN_427 = mux(_T, sectored_entries_0_2_valid_2, _GEN_327) @[TLB.scala 165:29 240:68]
    node _GEN_428 = mux(_T, sectored_entries_0_2_valid_3, _GEN_328) @[TLB.scala 165:29 240:68]
    node _GEN_429 = mux(_T, sectored_entries_0_2_tag, _GEN_329) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_431 = mux(_T, sectored_entries_0_2_data_0, _GEN_331) @[TLB.scala 165:29 240:68]
    node _GEN_432 = mux(_T, sectored_entries_0_2_data_1, _GEN_332) @[TLB.scala 165:29 240:68]
    node _GEN_433 = mux(_T, sectored_entries_0_2_data_2, _GEN_333) @[TLB.scala 165:29 240:68]
    node _GEN_434 = mux(_T, sectored_entries_0_2_data_3, _GEN_334) @[TLB.scala 165:29 240:68]
    node _GEN_435 = mux(_T, sectored_entries_0_3_valid_0, _GEN_335) @[TLB.scala 165:29 240:68]
    node _GEN_436 = mux(_T, sectored_entries_0_3_valid_1, _GEN_336) @[TLB.scala 165:29 240:68]
    node _GEN_437 = mux(_T, sectored_entries_0_3_valid_2, _GEN_337) @[TLB.scala 165:29 240:68]
    node _GEN_438 = mux(_T, sectored_entries_0_3_valid_3, _GEN_338) @[TLB.scala 165:29 240:68]
    node _GEN_439 = mux(_T, sectored_entries_0_3_tag, _GEN_339) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_441 = mux(_T, sectored_entries_0_3_data_0, _GEN_341) @[TLB.scala 165:29 240:68]
    node _GEN_442 = mux(_T, sectored_entries_0_3_data_1, _GEN_342) @[TLB.scala 165:29 240:68]
    node _GEN_443 = mux(_T, sectored_entries_0_3_data_2, _GEN_343) @[TLB.scala 165:29 240:68]
    node _GEN_444 = mux(_T, sectored_entries_0_3_data_3, _GEN_344) @[TLB.scala 165:29 240:68]
    node _GEN_445 = mux(_T, sectored_entries_0_4_valid_0, _GEN_345) @[TLB.scala 165:29 240:68]
    node _GEN_446 = mux(_T, sectored_entries_0_4_valid_1, _GEN_346) @[TLB.scala 165:29 240:68]
    node _GEN_447 = mux(_T, sectored_entries_0_4_valid_2, _GEN_347) @[TLB.scala 165:29 240:68]
    node _GEN_448 = mux(_T, sectored_entries_0_4_valid_3, _GEN_348) @[TLB.scala 165:29 240:68]
    node _GEN_449 = mux(_T, sectored_entries_0_4_tag, _GEN_349) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_451 = mux(_T, sectored_entries_0_4_data_0, _GEN_351) @[TLB.scala 165:29 240:68]
    node _GEN_452 = mux(_T, sectored_entries_0_4_data_1, _GEN_352) @[TLB.scala 165:29 240:68]
    node _GEN_453 = mux(_T, sectored_entries_0_4_data_2, _GEN_353) @[TLB.scala 165:29 240:68]
    node _GEN_454 = mux(_T, sectored_entries_0_4_data_3, _GEN_354) @[TLB.scala 165:29 240:68]
    node _GEN_455 = mux(_T, sectored_entries_0_5_valid_0, _GEN_355) @[TLB.scala 165:29 240:68]
    node _GEN_456 = mux(_T, sectored_entries_0_5_valid_1, _GEN_356) @[TLB.scala 165:29 240:68]
    node _GEN_457 = mux(_T, sectored_entries_0_5_valid_2, _GEN_357) @[TLB.scala 165:29 240:68]
    node _GEN_458 = mux(_T, sectored_entries_0_5_valid_3, _GEN_358) @[TLB.scala 165:29 240:68]
    node _GEN_459 = mux(_T, sectored_entries_0_5_tag, _GEN_359) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_461 = mux(_T, sectored_entries_0_5_data_0, _GEN_361) @[TLB.scala 165:29 240:68]
    node _GEN_462 = mux(_T, sectored_entries_0_5_data_1, _GEN_362) @[TLB.scala 165:29 240:68]
    node _GEN_463 = mux(_T, sectored_entries_0_5_data_2, _GEN_363) @[TLB.scala 165:29 240:68]
    node _GEN_464 = mux(_T, sectored_entries_0_5_data_3, _GEN_364) @[TLB.scala 165:29 240:68]
    node _GEN_465 = mux(_T, sectored_entries_0_6_valid_0, _GEN_365) @[TLB.scala 165:29 240:68]
    node _GEN_466 = mux(_T, sectored_entries_0_6_valid_1, _GEN_366) @[TLB.scala 165:29 240:68]
    node _GEN_467 = mux(_T, sectored_entries_0_6_valid_2, _GEN_367) @[TLB.scala 165:29 240:68]
    node _GEN_468 = mux(_T, sectored_entries_0_6_valid_3, _GEN_368) @[TLB.scala 165:29 240:68]
    node _GEN_469 = mux(_T, sectored_entries_0_6_tag, _GEN_369) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_471 = mux(_T, sectored_entries_0_6_data_0, _GEN_371) @[TLB.scala 165:29 240:68]
    node _GEN_472 = mux(_T, sectored_entries_0_6_data_1, _GEN_372) @[TLB.scala 165:29 240:68]
    node _GEN_473 = mux(_T, sectored_entries_0_6_data_2, _GEN_373) @[TLB.scala 165:29 240:68]
    node _GEN_474 = mux(_T, sectored_entries_0_6_data_3, _GEN_374) @[TLB.scala 165:29 240:68]
    node _GEN_475 = mux(_T, sectored_entries_0_7_valid_0, _GEN_375) @[TLB.scala 165:29 240:68]
    node _GEN_476 = mux(_T, sectored_entries_0_7_valid_1, _GEN_376) @[TLB.scala 165:29 240:68]
    node _GEN_477 = mux(_T, sectored_entries_0_7_valid_2, _GEN_377) @[TLB.scala 165:29 240:68]
    node _GEN_478 = mux(_T, sectored_entries_0_7_valid_3, _GEN_378) @[TLB.scala 165:29 240:68]
    node _GEN_479 = mux(_T, sectored_entries_0_7_tag, _GEN_379) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_481 = mux(_T, sectored_entries_0_7_data_0, _GEN_381) @[TLB.scala 165:29 240:68]
    node _GEN_482 = mux(_T, sectored_entries_0_7_data_1, _GEN_382) @[TLB.scala 165:29 240:68]
    node _GEN_483 = mux(_T, sectored_entries_0_7_data_2, _GEN_383) @[TLB.scala 165:29 240:68]
    node _GEN_484 = mux(_T, sectored_entries_0_7_data_3, _GEN_384) @[TLB.scala 165:29 240:68]
    skip
    skip
    node _GEN_487 = mux(io_ptw_resp_valid, _GEN_387, special_entry_valid_0) @[TLB.scala 220:20 167:56]
    skip
    skip
    skip
    node _GEN_491 = mux(io_ptw_resp_valid, _GEN_391, superpage_entries_0_valid_0) @[TLB.scala 220:20 166:30]
    skip
    skip
    skip
    node _GEN_495 = mux(io_ptw_resp_valid, _GEN_395, superpage_entries_1_valid_0) @[TLB.scala 220:20 166:30]
    skip
    skip
    skip
    node _GEN_499 = mux(io_ptw_resp_valid, _GEN_399, superpage_entries_2_valid_0) @[TLB.scala 220:20 166:30]
    skip
    skip
    skip
    node _GEN_503 = mux(io_ptw_resp_valid, _GEN_403, superpage_entries_3_valid_0) @[TLB.scala 220:20 166:30]
    skip
    node _GEN_505 = mux(io_ptw_resp_valid, _GEN_405, sectored_entries_0_0_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_506 = mux(io_ptw_resp_valid, _GEN_406, sectored_entries_0_0_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_507 = mux(io_ptw_resp_valid, _GEN_407, sectored_entries_0_0_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_508 = mux(io_ptw_resp_valid, _GEN_408, sectored_entries_0_0_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_515 = mux(io_ptw_resp_valid, _GEN_415, sectored_entries_0_1_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_516 = mux(io_ptw_resp_valid, _GEN_416, sectored_entries_0_1_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_517 = mux(io_ptw_resp_valid, _GEN_417, sectored_entries_0_1_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_518 = mux(io_ptw_resp_valid, _GEN_418, sectored_entries_0_1_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_525 = mux(io_ptw_resp_valid, _GEN_425, sectored_entries_0_2_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_526 = mux(io_ptw_resp_valid, _GEN_426, sectored_entries_0_2_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_527 = mux(io_ptw_resp_valid, _GEN_427, sectored_entries_0_2_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_528 = mux(io_ptw_resp_valid, _GEN_428, sectored_entries_0_2_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_535 = mux(io_ptw_resp_valid, _GEN_435, sectored_entries_0_3_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_536 = mux(io_ptw_resp_valid, _GEN_436, sectored_entries_0_3_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_537 = mux(io_ptw_resp_valid, _GEN_437, sectored_entries_0_3_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_538 = mux(io_ptw_resp_valid, _GEN_438, sectored_entries_0_3_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_545 = mux(io_ptw_resp_valid, _GEN_445, sectored_entries_0_4_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_546 = mux(io_ptw_resp_valid, _GEN_446, sectored_entries_0_4_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_547 = mux(io_ptw_resp_valid, _GEN_447, sectored_entries_0_4_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_548 = mux(io_ptw_resp_valid, _GEN_448, sectored_entries_0_4_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_555 = mux(io_ptw_resp_valid, _GEN_455, sectored_entries_0_5_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_556 = mux(io_ptw_resp_valid, _GEN_456, sectored_entries_0_5_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_557 = mux(io_ptw_resp_valid, _GEN_457, sectored_entries_0_5_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_558 = mux(io_ptw_resp_valid, _GEN_458, sectored_entries_0_5_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_565 = mux(io_ptw_resp_valid, _GEN_465, sectored_entries_0_6_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_566 = mux(io_ptw_resp_valid, _GEN_466, sectored_entries_0_6_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_567 = mux(io_ptw_resp_valid, _GEN_467, sectored_entries_0_6_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_568 = mux(io_ptw_resp_valid, _GEN_468, sectored_entries_0_6_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_575 = mux(io_ptw_resp_valid, _GEN_475, sectored_entries_0_7_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_576 = mux(io_ptw_resp_valid, _GEN_476, sectored_entries_0_7_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_577 = mux(io_ptw_resp_valid, _GEN_477, sectored_entries_0_7_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_578 = mux(io_ptw_resp_valid, _GEN_478, sectored_entries_0_7_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node ptw_ae_array_lo_lo_hi = cat(entries_barrier_2.io_y_ae, entries_barrier_1.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_lo = cat(ptw_ae_array_lo_lo_hi, entries_barrier.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_hi_hi = cat(entries_barrier_5.io_y_ae, entries_barrier_4.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_hi = cat(ptw_ae_array_lo_hi_hi, entries_barrier_3.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo = cat(ptw_ae_array_lo_hi, ptw_ae_array_lo_lo) @[Cat.scala 30:58]
    node ptw_ae_array_hi_lo_hi = cat(entries_barrier_8.io_y_ae, entries_barrier_7.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_lo = cat(ptw_ae_array_hi_lo_hi, entries_barrier_6.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi_lo = cat(entries_barrier_10.io_y_ae, entries_barrier_9.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi_hi = cat(entries_barrier_12.io_y_ae, entries_barrier_11.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi = cat(ptw_ae_array_hi_hi_hi, ptw_ae_array_hi_hi_lo) @[Cat.scala 30:58]
    node ptw_ae_array_hi = cat(ptw_ae_array_hi_hi, ptw_ae_array_hi_lo) @[Cat.scala 30:58]
    node ptw_ae_array_lo_1 = cat(ptw_ae_array_hi, ptw_ae_array_lo) @[Cat.scala 30:58]
    node ptw_ae_array = cat(UInt<1>("h0"), ptw_ae_array_lo_1) @[Cat.scala 30:58]
    node _priv_rw_ok_T = not(priv_s) @[TLB.scala 265:24]
    node _priv_rw_ok_T_1 = or(_priv_rw_ok_T, io_ptw_status_sum) @[TLB.scala 265:32]
    node priv_rw_ok_lo_lo_hi = cat(entries_barrier_2.io_y_u, entries_barrier_1.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_lo = cat(priv_rw_ok_lo_lo_hi, entries_barrier.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_hi_hi = cat(entries_barrier_5.io_y_u, entries_barrier_4.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_hi = cat(priv_rw_ok_lo_hi_hi, entries_barrier_3.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_lo = cat(priv_rw_ok_lo_hi, priv_rw_ok_lo_lo) @[Cat.scala 30:58]
    node priv_rw_ok_hi_lo_hi = cat(entries_barrier_8.io_y_u, entries_barrier_7.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_lo = cat(priv_rw_ok_hi_lo_hi, entries_barrier_6.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi_lo = cat(entries_barrier_10.io_y_u, entries_barrier_9.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi_hi = cat(entries_barrier_12.io_y_u, entries_barrier_11.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi = cat(priv_rw_ok_hi_hi_hi, priv_rw_ok_hi_hi_lo) @[Cat.scala 30:58]
    node priv_rw_ok_hi = cat(priv_rw_ok_hi_hi, priv_rw_ok_hi_lo) @[Cat.scala 30:58]
    node _priv_rw_ok_T_2 = cat(priv_rw_ok_hi, priv_rw_ok_lo) @[Cat.scala 30:58]
    node _priv_rw_ok_T_3 = mux(_priv_rw_ok_T_1, _priv_rw_ok_T_2, UInt<13>("h0")) @[TLB.scala 265:23]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _priv_rw_ok_T_5 = not(_priv_rw_ok_T_2) @[TLB.scala 265:98]
    node _priv_rw_ok_T_6 = mux(priv_s, _priv_rw_ok_T_5, UInt<13>("h0")) @[TLB.scala 265:89]
    node priv_rw_ok = or(_priv_rw_ok_T_3, _priv_rw_ok_T_6) @[TLB.scala 265:84]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node r_array_lo_lo_hi = cat(entries_barrier_2.io_y_sr, entries_barrier_1.io_y_sr) @[Cat.scala 30:58]
    node r_array_lo_lo = cat(r_array_lo_lo_hi, entries_barrier.io_y_sr) @[Cat.scala 30:58]
    node r_array_lo_hi_hi = cat(entries_barrier_5.io_y_sr, entries_barrier_4.io_y_sr) @[Cat.scala 30:58]
    node r_array_lo_hi = cat(r_array_lo_hi_hi, entries_barrier_3.io_y_sr) @[Cat.scala 30:58]
    node r_array_lo = cat(r_array_lo_hi, r_array_lo_lo) @[Cat.scala 30:58]
    node r_array_hi_lo_hi = cat(entries_barrier_8.io_y_sr, entries_barrier_7.io_y_sr) @[Cat.scala 30:58]
    node r_array_hi_lo = cat(r_array_hi_lo_hi, entries_barrier_6.io_y_sr) @[Cat.scala 30:58]
    node r_array_hi_hi_lo = cat(entries_barrier_10.io_y_sr, entries_barrier_9.io_y_sr) @[Cat.scala 30:58]
    node r_array_hi_hi_hi = cat(entries_barrier_12.io_y_sr, entries_barrier_11.io_y_sr) @[Cat.scala 30:58]
    node r_array_hi_hi = cat(r_array_hi_hi_hi, r_array_hi_hi_lo) @[Cat.scala 30:58]
    node r_array_hi = cat(r_array_hi_hi, r_array_hi_lo) @[Cat.scala 30:58]
    node _r_array_T = cat(r_array_hi, r_array_lo) @[Cat.scala 30:58]
    node r_array_lo_lo_hi_1 = cat(entries_barrier_2.io_y_sx, entries_barrier_1.io_y_sx) @[Cat.scala 30:58]
    node r_array_lo_lo_1 = cat(r_array_lo_lo_hi_1, entries_barrier.io_y_sx) @[Cat.scala 30:58]
    node r_array_lo_hi_hi_1 = cat(entries_barrier_5.io_y_sx, entries_barrier_4.io_y_sx) @[Cat.scala 30:58]
    node r_array_lo_hi_1 = cat(r_array_lo_hi_hi_1, entries_barrier_3.io_y_sx) @[Cat.scala 30:58]
    node r_array_lo_1 = cat(r_array_lo_hi_1, r_array_lo_lo_1) @[Cat.scala 30:58]
    node r_array_hi_lo_hi_1 = cat(entries_barrier_8.io_y_sx, entries_barrier_7.io_y_sx) @[Cat.scala 30:58]
    node r_array_hi_lo_1 = cat(r_array_hi_lo_hi_1, entries_barrier_6.io_y_sx) @[Cat.scala 30:58]
    node r_array_hi_hi_lo_1 = cat(entries_barrier_10.io_y_sx, entries_barrier_9.io_y_sx) @[Cat.scala 30:58]
    node r_array_hi_hi_hi_1 = cat(entries_barrier_12.io_y_sx, entries_barrier_11.io_y_sx) @[Cat.scala 30:58]
    node r_array_hi_hi_1 = cat(r_array_hi_hi_hi_1, r_array_hi_hi_lo_1) @[Cat.scala 30:58]
    node r_array_hi_1 = cat(r_array_hi_hi_1, r_array_hi_lo_1) @[Cat.scala 30:58]
    node _r_array_T_1 = cat(r_array_hi_1, r_array_lo_1) @[Cat.scala 30:58]
    node _r_array_T_2 = mux(io_ptw_status_mxr, _r_array_T_1, UInt<13>("h0")) @[TLB.scala 267:73]
    node _r_array_T_3 = or(_r_array_T, _r_array_T_2) @[TLB.scala 267:68]
    node r_array_lo_2 = and(priv_rw_ok, _r_array_T_3) @[TLB.scala 267:40]
    node r_array = cat(UInt<1>("h1"), r_array_lo_2) @[Cat.scala 30:58]
    node w_array_lo_lo_hi = cat(entries_barrier_2.io_y_sw, entries_barrier_1.io_y_sw) @[Cat.scala 30:58]
    node w_array_lo_lo = cat(w_array_lo_lo_hi, entries_barrier.io_y_sw) @[Cat.scala 30:58]
    node w_array_lo_hi_hi = cat(entries_barrier_5.io_y_sw, entries_barrier_4.io_y_sw) @[Cat.scala 30:58]
    node w_array_lo_hi = cat(w_array_lo_hi_hi, entries_barrier_3.io_y_sw) @[Cat.scala 30:58]
    node w_array_lo = cat(w_array_lo_hi, w_array_lo_lo) @[Cat.scala 30:58]
    node w_array_hi_lo_hi = cat(entries_barrier_8.io_y_sw, entries_barrier_7.io_y_sw) @[Cat.scala 30:58]
    node w_array_hi_lo = cat(w_array_hi_lo_hi, entries_barrier_6.io_y_sw) @[Cat.scala 30:58]
    node w_array_hi_hi_lo = cat(entries_barrier_10.io_y_sw, entries_barrier_9.io_y_sw) @[Cat.scala 30:58]
    node w_array_hi_hi_hi = cat(entries_barrier_12.io_y_sw, entries_barrier_11.io_y_sw) @[Cat.scala 30:58]
    node w_array_hi_hi = cat(w_array_hi_hi_hi, w_array_hi_hi_lo) @[Cat.scala 30:58]
    node w_array_hi = cat(w_array_hi_hi, w_array_hi_lo) @[Cat.scala 30:58]
    node _w_array_T = cat(w_array_hi, w_array_lo) @[Cat.scala 30:58]
    node w_array_lo_1 = and(priv_rw_ok, _w_array_T) @[TLB.scala 268:40]
    node w_array = cat(UInt<1>("h1"), w_array_lo_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node pr_array_hi = mux(prot_r, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 72:12]
    node pr_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_pr, normal_entries_barrier_1.io_y_pr) @[Cat.scala 30:58]
    node pr_array_lo_lo = cat(pr_array_lo_lo_hi, normal_entries_barrier.io_y_pr) @[Cat.scala 30:58]
    node pr_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_pr, normal_entries_barrier_4.io_y_pr) @[Cat.scala 30:58]
    node pr_array_lo_hi = cat(pr_array_lo_hi_hi, normal_entries_barrier_3.io_y_pr) @[Cat.scala 30:58]
    node pr_array_lo = cat(pr_array_lo_hi, pr_array_lo_lo) @[Cat.scala 30:58]
    node pr_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_pr, normal_entries_barrier_7.io_y_pr) @[Cat.scala 30:58]
    node pr_array_hi_lo = cat(pr_array_hi_lo_hi, normal_entries_barrier_6.io_y_pr) @[Cat.scala 30:58]
    node pr_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_pr, normal_entries_barrier_10.io_y_pr) @[Cat.scala 30:58]
    node pr_array_hi_hi = cat(pr_array_hi_hi_hi, normal_entries_barrier_9.io_y_pr) @[Cat.scala 30:58]
    node pr_array_hi_1 = cat(pr_array_hi_hi, pr_array_hi_lo) @[Cat.scala 30:58]
    node pr_array_lo_1 = cat(pr_array_hi_1, pr_array_lo) @[Cat.scala 30:58]
    node _pr_array_T_1 = cat(pr_array_hi, pr_array_lo_1) @[Cat.scala 30:58]
    node _pr_array_T_2 = not(ptw_ae_array) @[TLB.scala 270:89]
    node pr_array = and(_pr_array_T_1, _pr_array_T_2) @[TLB.scala 270:87]
    skip
    node pw_array_hi = mux(prot_w, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 72:12]
    node pw_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_pw, normal_entries_barrier_1.io_y_pw) @[Cat.scala 30:58]
    node pw_array_lo_lo = cat(pw_array_lo_lo_hi, normal_entries_barrier.io_y_pw) @[Cat.scala 30:58]
    node pw_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_pw, normal_entries_barrier_4.io_y_pw) @[Cat.scala 30:58]
    node pw_array_lo_hi = cat(pw_array_lo_hi_hi, normal_entries_barrier_3.io_y_pw) @[Cat.scala 30:58]
    node pw_array_lo = cat(pw_array_lo_hi, pw_array_lo_lo) @[Cat.scala 30:58]
    node pw_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_pw, normal_entries_barrier_7.io_y_pw) @[Cat.scala 30:58]
    node pw_array_hi_lo = cat(pw_array_hi_lo_hi, normal_entries_barrier_6.io_y_pw) @[Cat.scala 30:58]
    node pw_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_pw, normal_entries_barrier_10.io_y_pw) @[Cat.scala 30:58]
    node pw_array_hi_hi = cat(pw_array_hi_hi_hi, normal_entries_barrier_9.io_y_pw) @[Cat.scala 30:58]
    node pw_array_hi_1 = cat(pw_array_hi_hi, pw_array_hi_lo) @[Cat.scala 30:58]
    node pw_array_lo_1 = cat(pw_array_hi_1, pw_array_lo) @[Cat.scala 30:58]
    node _pw_array_T_1 = cat(pw_array_hi, pw_array_lo_1) @[Cat.scala 30:58]
    skip
    node pw_array = and(_pw_array_T_1, _pr_array_T_2) @[TLB.scala 271:87]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node eff_array_hi = mux(prot_eff, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 72:12]
    node eff_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_eff, normal_entries_barrier_1.io_y_eff) @[Cat.scala 30:58]
    node eff_array_lo_lo = cat(eff_array_lo_lo_hi, normal_entries_barrier.io_y_eff) @[Cat.scala 30:58]
    node eff_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_eff, normal_entries_barrier_4.io_y_eff) @[Cat.scala 30:58]
    node eff_array_lo_hi = cat(eff_array_lo_hi_hi, normal_entries_barrier_3.io_y_eff) @[Cat.scala 30:58]
    node eff_array_lo = cat(eff_array_lo_hi, eff_array_lo_lo) @[Cat.scala 30:58]
    node eff_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_eff, normal_entries_barrier_7.io_y_eff) @[Cat.scala 30:58]
    node eff_array_hi_lo = cat(eff_array_hi_lo_hi, normal_entries_barrier_6.io_y_eff) @[Cat.scala 30:58]
    node eff_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_eff, normal_entries_barrier_10.io_y_eff) @[Cat.scala 30:58]
    node eff_array_hi_hi = cat(eff_array_hi_hi_hi, normal_entries_barrier_9.io_y_eff) @[Cat.scala 30:58]
    node eff_array_hi_1 = cat(eff_array_hi_hi, eff_array_hi_lo) @[Cat.scala 30:58]
    node eff_array_lo_1 = cat(eff_array_hi_1, eff_array_lo) @[Cat.scala 30:58]
    node eff_array = cat(eff_array_hi, eff_array_lo_1) @[Cat.scala 30:58]
    skip
    node c_array_hi = mux(cacheable, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 72:12]
    node c_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_c, normal_entries_barrier_1.io_y_c) @[Cat.scala 30:58]
    node c_array_lo_lo = cat(c_array_lo_lo_hi, normal_entries_barrier.io_y_c) @[Cat.scala 30:58]
    node c_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_c, normal_entries_barrier_4.io_y_c) @[Cat.scala 30:58]
    node c_array_lo_hi = cat(c_array_lo_hi_hi, normal_entries_barrier_3.io_y_c) @[Cat.scala 30:58]
    node c_array_lo = cat(c_array_lo_hi, c_array_lo_lo) @[Cat.scala 30:58]
    node c_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_c, normal_entries_barrier_7.io_y_c) @[Cat.scala 30:58]
    node c_array_hi_lo = cat(c_array_hi_lo_hi, normal_entries_barrier_6.io_y_c) @[Cat.scala 30:58]
    node c_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_c, normal_entries_barrier_10.io_y_c) @[Cat.scala 30:58]
    node c_array_hi_hi = cat(c_array_hi_hi_hi, normal_entries_barrier_9.io_y_c) @[Cat.scala 30:58]
    node c_array_hi_1 = cat(c_array_hi_hi, c_array_hi_lo) @[Cat.scala 30:58]
    node c_array_lo_1 = cat(c_array_hi_1, c_array_lo) @[Cat.scala 30:58]
    node c_array = cat(c_array_hi, c_array_lo_1) @[Cat.scala 30:58]
    skip
    node ppp_array_hi = mux(_prot_w_T_43, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 72:12]
    node ppp_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_ppp, normal_entries_barrier_1.io_y_ppp) @[Cat.scala 30:58]
    node ppp_array_lo_lo = cat(ppp_array_lo_lo_hi, normal_entries_barrier.io_y_ppp) @[Cat.scala 30:58]
    node ppp_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_ppp, normal_entries_barrier_4.io_y_ppp) @[Cat.scala 30:58]
    node ppp_array_lo_hi = cat(ppp_array_lo_hi_hi, normal_entries_barrier_3.io_y_ppp) @[Cat.scala 30:58]
    node ppp_array_lo = cat(ppp_array_lo_hi, ppp_array_lo_lo) @[Cat.scala 30:58]
    node ppp_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_ppp, normal_entries_barrier_7.io_y_ppp) @[Cat.scala 30:58]
    node ppp_array_hi_lo = cat(ppp_array_hi_lo_hi, normal_entries_barrier_6.io_y_ppp) @[Cat.scala 30:58]
    node ppp_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_ppp, normal_entries_barrier_10.io_y_ppp) @[Cat.scala 30:58]
    node ppp_array_hi_hi = cat(ppp_array_hi_hi_hi, normal_entries_barrier_9.io_y_ppp) @[Cat.scala 30:58]
    node ppp_array_hi_1 = cat(ppp_array_hi_hi, ppp_array_hi_lo) @[Cat.scala 30:58]
    node ppp_array_lo_1 = cat(ppp_array_hi_1, ppp_array_lo) @[Cat.scala 30:58]
    node ppp_array = cat(ppp_array_hi, ppp_array_lo_1) @[Cat.scala 30:58]
    skip
    skip
    node paa_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_paa, normal_entries_barrier_1.io_y_paa) @[Cat.scala 30:58]
    node paa_array_lo_lo = cat(paa_array_lo_lo_hi, normal_entries_barrier.io_y_paa) @[Cat.scala 30:58]
    node paa_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_paa, normal_entries_barrier_4.io_y_paa) @[Cat.scala 30:58]
    node paa_array_lo_hi = cat(paa_array_lo_hi_hi, normal_entries_barrier_3.io_y_paa) @[Cat.scala 30:58]
    node paa_array_lo = cat(paa_array_lo_hi, paa_array_lo_lo) @[Cat.scala 30:58]
    node paa_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_paa, normal_entries_barrier_7.io_y_paa) @[Cat.scala 30:58]
    node paa_array_hi_lo = cat(paa_array_hi_lo_hi, normal_entries_barrier_6.io_y_paa) @[Cat.scala 30:58]
    node paa_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_paa, normal_entries_barrier_10.io_y_paa) @[Cat.scala 30:58]
    node paa_array_hi_hi = cat(paa_array_hi_hi_hi, normal_entries_barrier_9.io_y_paa) @[Cat.scala 30:58]
    node paa_array_hi_1 = cat(paa_array_hi_hi, paa_array_hi_lo) @[Cat.scala 30:58]
    node paa_array_lo_1 = cat(paa_array_hi_1, paa_array_lo) @[Cat.scala 30:58]
    node paa_array = cat(ppp_array_hi, paa_array_lo_1) @[Cat.scala 30:58]
    skip
    skip
    node pal_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_pal, normal_entries_barrier_1.io_y_pal) @[Cat.scala 30:58]
    node pal_array_lo_lo = cat(pal_array_lo_lo_hi, normal_entries_barrier.io_y_pal) @[Cat.scala 30:58]
    node pal_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_pal, normal_entries_barrier_4.io_y_pal) @[Cat.scala 30:58]
    node pal_array_lo_hi = cat(pal_array_lo_hi_hi, normal_entries_barrier_3.io_y_pal) @[Cat.scala 30:58]
    node pal_array_lo = cat(pal_array_lo_hi, pal_array_lo_lo) @[Cat.scala 30:58]
    node pal_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_pal, normal_entries_barrier_7.io_y_pal) @[Cat.scala 30:58]
    node pal_array_hi_lo = cat(pal_array_hi_lo_hi, normal_entries_barrier_6.io_y_pal) @[Cat.scala 30:58]
    node pal_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_pal, normal_entries_barrier_10.io_y_pal) @[Cat.scala 30:58]
    node pal_array_hi_hi = cat(pal_array_hi_hi_hi, normal_entries_barrier_9.io_y_pal) @[Cat.scala 30:58]
    node pal_array_hi_1 = cat(pal_array_hi_hi, pal_array_hi_lo) @[Cat.scala 30:58]
    node pal_array_lo_1 = cat(pal_array_hi_1, pal_array_lo) @[Cat.scala 30:58]
    node pal_array = cat(ppp_array_hi, pal_array_lo_1) @[Cat.scala 30:58]
    node ppp_array_if_cached = or(ppp_array, c_array) @[TLB.scala 278:39]
    skip
    node paa_array_if_cached = or(paa_array, c_array) @[TLB.scala 279:39]
    skip
    node pal_array_if_cached = or(pal_array, c_array) @[TLB.scala 280:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _misaligned_T = dshl(UInt<1>("h1"), io_req_bits_size) @[OneHot.scala 58:35]
    node _misaligned_T_1 = sub(_misaligned_T, UInt<4>("h1")) @[TLB.scala 283:69]
    node _misaligned_T_2 = tail(_misaligned_T_1, 1) @[TLB.scala 283:69]
    node _GEN_1027 = pad(_misaligned_T_2, 40) @[TLB.scala 283:39]
    node _misaligned_T_3 = and(io_req_bits_vaddr, _GEN_1027) @[TLB.scala 283:39]
    node misaligned = orr(_misaligned_T_3) @[TLB.scala 283:75]
    node bad_va_maskedVAddr = and(io_req_bits_vaddr, UInt<40>("hc000000000")) @[TLB.scala 289:43]
    skip
    node _bad_va_T_1 = eq(bad_va_maskedVAddr, UInt<40>("h0")) @[TLB.scala 290:61]
    node _bad_va_T_2 = eq(bad_va_maskedVAddr, UInt<40>("hc000000000")) @[TLB.scala 290:82]
    node _bad_va_T_3 = or(_bad_va_T_1, _bad_va_T_2) @[TLB.scala 290:67]
    node _bad_va_T_4 = not(_bad_va_T_3) @[TLB.scala 290:47]
    skip
    node bad_va = and(vm_enabled, _bad_va_T_4) @[TLB.scala 284:117]
    node _cmd_lrsc_T = eq(io_req_bits_cmd, UInt<5>("h6")) @[package.scala 15:47]
    node _cmd_lrsc_T_1 = eq(io_req_bits_cmd, UInt<5>("h7")) @[package.scala 15:47]
    node cmd_lrsc = or(_cmd_lrsc_T, _cmd_lrsc_T_1) @[package.scala 72:59]
    skip
    node _cmd_amo_logical_T = eq(io_req_bits_cmd, UInt<5>("h4")) @[package.scala 15:47]
    node _cmd_amo_logical_T_1 = eq(io_req_bits_cmd, UInt<5>("h9")) @[package.scala 15:47]
    node _cmd_amo_logical_T_2 = eq(io_req_bits_cmd, UInt<5>("ha")) @[package.scala 15:47]
    node _cmd_amo_logical_T_3 = eq(io_req_bits_cmd, UInt<5>("hb")) @[package.scala 15:47]
    node _cmd_amo_logical_T_4 = or(_cmd_amo_logical_T, _cmd_amo_logical_T_1) @[package.scala 72:59]
    node _cmd_amo_logical_T_5 = or(_cmd_amo_logical_T_4, _cmd_amo_logical_T_2) @[package.scala 72:59]
    node cmd_amo_logical = or(_cmd_amo_logical_T_5, _cmd_amo_logical_T_3) @[package.scala 72:59]
    skip
    node _cmd_amo_arithmetic_T = eq(io_req_bits_cmd, UInt<5>("h8")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_1 = eq(io_req_bits_cmd, UInt<5>("hc")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_2 = eq(io_req_bits_cmd, UInt<5>("hd")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_3 = eq(io_req_bits_cmd, UInt<5>("he")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_4 = eq(io_req_bits_cmd, UInt<5>("hf")) @[package.scala 15:47]
    node _cmd_amo_arithmetic_T_5 = or(_cmd_amo_arithmetic_T, _cmd_amo_arithmetic_T_1) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_6 = or(_cmd_amo_arithmetic_T_5, _cmd_amo_arithmetic_T_2) @[package.scala 72:59]
    node _cmd_amo_arithmetic_T_7 = or(_cmd_amo_arithmetic_T_6, _cmd_amo_arithmetic_T_3) @[package.scala 72:59]
    node cmd_amo_arithmetic = or(_cmd_amo_arithmetic_T_7, _cmd_amo_arithmetic_T_4) @[package.scala 72:59]
    skip
    node cmd_put_partial = eq(io_req_bits_cmd, UInt<5>("h11")) @[TLB.scala 297:41]
    node _cmd_read_T = eq(io_req_bits_cmd, UInt<5>("h0")) @[Consts.scala 81:31]
    skip
    node _cmd_read_T_2 = or(_cmd_read_T, _cmd_lrsc_T) @[Consts.scala 81:41]
    skip
    node _cmd_read_T_4 = or(_cmd_read_T_2, _cmd_lrsc_T_1) @[Consts.scala 81:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _cmd_read_T_21 = or(cmd_amo_logical, cmd_amo_arithmetic) @[Consts.scala 79:44]
    node cmd_read = or(_cmd_read_T_4, _cmd_read_T_21) @[Consts.scala 81:75]
    node _cmd_write_T = eq(io_req_bits_cmd, UInt<5>("h1")) @[Consts.scala 82:32]
    skip
    node _cmd_write_T_2 = or(_cmd_write_T, cmd_put_partial) @[Consts.scala 82:42]
    skip
    node _cmd_write_T_4 = or(_cmd_write_T_2, _cmd_lrsc_T_1) @[Consts.scala 82:59]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node cmd_write = or(_cmd_write_T_4, _cmd_read_T_21) @[Consts.scala 82:76]
    node _cmd_write_perms_T = eq(io_req_bits_cmd, UInt<5>("h5")) @[package.scala 15:47]
    node _cmd_write_perms_T_1 = eq(io_req_bits_cmd, UInt<5>("h17")) @[package.scala 15:47]
    node _cmd_write_perms_T_2 = or(_cmd_write_perms_T, _cmd_write_perms_T_1) @[package.scala 72:59]
    node cmd_write_perms = or(cmd_write, _cmd_write_perms_T_2) @[TLB.scala 300:35]
    skip
    node _ae_array_T = mux(misaligned, eff_array, UInt<14>("h0")) @[TLB.scala 305:8]
    node _ae_array_T_1 = not(c_array) @[TLB.scala 306:19]
    node _ae_array_T_2 = mux(cmd_lrsc, _ae_array_T_1, UInt<14>("h0")) @[TLB.scala 306:8]
    node ae_array = or(_ae_array_T, _ae_array_T_2) @[TLB.scala 305:37]
    node _ae_ld_array_T = not(pr_array) @[TLB.scala 307:46]
    node _ae_ld_array_T_1 = or(ae_array, _ae_ld_array_T) @[TLB.scala 307:44]
    node ae_ld_array = mux(cmd_read, _ae_ld_array_T_1, UInt<14>("h0")) @[TLB.scala 307:24]
    node _ae_st_array_T = not(pw_array) @[TLB.scala 309:37]
    node _ae_st_array_T_1 = or(ae_array, _ae_st_array_T) @[TLB.scala 309:35]
    node _ae_st_array_T_2 = mux(cmd_write_perms, _ae_st_array_T_1, UInt<14>("h0")) @[TLB.scala 309:8]
    node _ae_st_array_T_3 = not(ppp_array_if_cached) @[TLB.scala 310:26]
    node _ae_st_array_T_4 = mux(cmd_put_partial, _ae_st_array_T_3, UInt<14>("h0")) @[TLB.scala 310:8]
    node _ae_st_array_T_5 = or(_ae_st_array_T_2, _ae_st_array_T_4) @[TLB.scala 309:53]
    node _ae_st_array_T_6 = not(pal_array_if_cached) @[TLB.scala 311:26]
    node _ae_st_array_T_7 = mux(cmd_amo_logical, _ae_st_array_T_6, UInt<14>("h0")) @[TLB.scala 311:8]
    node _ae_st_array_T_8 = or(_ae_st_array_T_5, _ae_st_array_T_7) @[TLB.scala 310:53]
    node _ae_st_array_T_9 = not(paa_array_if_cached) @[TLB.scala 312:29]
    node _ae_st_array_T_10 = mux(cmd_amo_arithmetic, _ae_st_array_T_9, UInt<14>("h0")) @[TLB.scala 312:8]
    node ae_st_array = or(_ae_st_array_T_8, _ae_st_array_T_10) @[TLB.scala 311:53]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ma_ld_array_T = and(misaligned, cmd_read) @[TLB.scala 318:36]
    node _ma_ld_array_T_1 = not(eff_array) @[TLB.scala 318:49]
    node ma_ld_array = mux(_ma_ld_array_T, _ma_ld_array_T_1, UInt<14>("h0")) @[TLB.scala 318:24]
    node _ma_st_array_T = and(misaligned, cmd_write) @[TLB.scala 319:36]
    skip
    node ma_st_array = mux(_ma_st_array_T, _ma_ld_array_T_1, UInt<14>("h0")) @[TLB.scala 319:24]
    node _pf_ld_array_T = or(r_array, ptw_ae_array) @[TLB.scala 320:45]
    node _pf_ld_array_T_1 = not(_pf_ld_array_T) @[TLB.scala 320:35]
    node pf_ld_array = mux(cmd_read, _pf_ld_array_T_1, UInt<14>("h0")) @[TLB.scala 320:24]
    node _pf_st_array_T = or(w_array, ptw_ae_array) @[TLB.scala 321:52]
    node _pf_st_array_T_1 = not(_pf_st_array_T) @[TLB.scala 321:42]
    node pf_st_array = mux(cmd_write_perms, _pf_st_array_T_1, UInt<14>("h0")) @[TLB.scala 321:24]
    skip
    skip
    node tlb_hit = orr(real_hits) @[TLB.scala 324:27]
    node _tlb_miss_T = not(bad_va) @[TLB.scala 325:32]
    node _tlb_miss_T_1 = and(vm_enabled, _tlb_miss_T) @[TLB.scala 325:29]
    node _tlb_miss_T_2 = not(tlb_hit) @[TLB.scala 325:43]
    node tlb_miss = and(_tlb_miss_T_1, _tlb_miss_T_2) @[TLB.scala 325:40]
    skip
    reg state_vec_0 : UInt<7>, clock with :
      reset => (UInt<1>("h0"), state_vec_0) @[Replacement.scala 305:17]
    reg state_reg_1 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), state_reg_1) @[Replacement.scala 168:70]
    node _T_23 = and(io_req_valid, vm_enabled) @[TLB.scala 329:22]
    node _T_24 = or(sector_hits_0, sector_hits_1) @[package.scala 72:59]
    node _T_25 = or(_T_24, sector_hits_2) @[package.scala 72:59]
    node _T_26 = or(_T_25, sector_hits_3) @[package.scala 72:59]
    node _T_27 = or(_T_26, sector_hits_4) @[package.scala 72:59]
    node _T_28 = or(_T_27, sector_hits_5) @[package.scala 72:59]
    node _T_29 = or(_T_28, sector_hits_6) @[package.scala 72:59]
    node _T_30 = or(_T_29, sector_hits_7) @[package.scala 72:59]
    node lo_lo = cat(sector_hits_1, sector_hits_0) @[Cat.scala 30:58]
    node lo_hi = cat(sector_hits_3, sector_hits_2) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(sector_hits_5, sector_hits_4) @[Cat.scala 30:58]
    node hi_hi = cat(sector_hits_7, sector_hits_6) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_31 = cat(hi, lo) @[Cat.scala 30:58]
    node hi_1 = bits(_T_31, 7, 4) @[OneHot.scala 30:18]
    node lo_1 = bits(_T_31, 3, 0) @[OneHot.scala 31:18]
    node hi_2 = orr(hi_1) @[OneHot.scala 32:14]
    node _T_32 = or(hi_1, lo_1) @[OneHot.scala 32:28]
    node hi_3 = bits(_T_32, 3, 2) @[OneHot.scala 30:18]
    node lo_2 = bits(_T_32, 1, 0) @[OneHot.scala 31:18]
    node hi_4 = orr(hi_3) @[OneHot.scala 32:14]
    node _T_33 = or(hi_3, lo_2) @[OneHot.scala 32:28]
    node lo_3 = bits(_T_33, 1, 1) @[CircuitMath.scala 30:8]
    node lo_4 = cat(hi_4, lo_3) @[Cat.scala 30:58]
    node state_vec_0_touch_way_sized = cat(hi_2, lo_4) @[Cat.scala 30:58]
    skip
    node _state_vec_0_set_left_older_T = bits(state_vec_0_touch_way_sized, 2, 2) @[Replacement.scala 196:43]
    node state_vec_0_hi_hi = not(_state_vec_0_set_left_older_T) @[Replacement.scala 196:33]
    node state_vec_0_left_subtree_state = bits(state_vec_0, 5, 3) @[package.scala 154:13]
    node state_vec_0_right_subtree_state = bits(state_vec_0, 2, 0) @[Replacement.scala 198:38]
    node _state_vec_0_T = bits(state_vec_0_touch_way_sized, 1, 0) @[package.scala 154:13]
    node _state_vec_0_set_left_older_T_1 = bits(_state_vec_0_T, 1, 1) @[Replacement.scala 196:43]
    node state_vec_0_hi_hi_1 = not(_state_vec_0_set_left_older_T_1) @[Replacement.scala 196:33]
    node state_vec_0_left_subtree_state_1 = bits(state_vec_0_left_subtree_state, 1, 1) @[package.scala 154:13]
    node state_vec_0_right_subtree_state_1 = bits(state_vec_0_left_subtree_state, 0, 0) @[Replacement.scala 198:38]
    node _state_vec_0_T_1 = bits(_state_vec_0_T, 0, 0) @[package.scala 154:13]
    skip
    node _state_vec_0_T_3 = not(_state_vec_0_T_1) @[Replacement.scala 218:7]
    node state_vec_0_hi_lo = mux(state_vec_0_hi_hi_1, state_vec_0_left_subtree_state_1, _state_vec_0_T_3) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_vec_0_lo = mux(state_vec_0_hi_hi_1, _state_vec_0_T_3, state_vec_0_right_subtree_state_1) @[Replacement.scala 206:16]
    node state_vec_0_hi = cat(state_vec_0_hi_hi_1, state_vec_0_hi_lo) @[Cat.scala 30:58]
    node _state_vec_0_T_7 = cat(state_vec_0_hi, state_vec_0_lo) @[Cat.scala 30:58]
    node state_vec_0_hi_lo_1 = mux(state_vec_0_hi_hi, state_vec_0_left_subtree_state, _state_vec_0_T_7) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_vec_0_left_subtree_state_2 = bits(state_vec_0_right_subtree_state, 1, 1) @[package.scala 154:13]
    node state_vec_0_right_subtree_state_2 = bits(state_vec_0_right_subtree_state, 0, 0) @[Replacement.scala 198:38]
    skip
    skip
    skip
    node state_vec_0_hi_lo_2 = mux(state_vec_0_hi_hi_1, state_vec_0_left_subtree_state_2, _state_vec_0_T_3) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_vec_0_lo_1 = mux(state_vec_0_hi_hi_1, _state_vec_0_T_3, state_vec_0_right_subtree_state_2) @[Replacement.scala 206:16]
    node state_vec_0_hi_1 = cat(state_vec_0_hi_hi_1, state_vec_0_hi_lo_2) @[Cat.scala 30:58]
    node _state_vec_0_T_15 = cat(state_vec_0_hi_1, state_vec_0_lo_1) @[Cat.scala 30:58]
    node state_vec_0_lo_2 = mux(state_vec_0_hi_hi, _state_vec_0_T_15, state_vec_0_right_subtree_state) @[Replacement.scala 206:16]
    node state_vec_0_hi_2 = cat(state_vec_0_hi_hi, state_vec_0_hi_lo_1) @[Cat.scala 30:58]
    node _state_vec_0_T_16 = cat(state_vec_0_hi_2, state_vec_0_lo_2) @[Cat.scala 30:58]
    node _GEN_649 = mux(_T_30, _state_vec_0_T_16, state_vec_0) @[Replacement.scala 305:17 308:20 TLB.scala 330:28]
    node _T_35 = or(superpage_hits_0, superpage_hits_1) @[package.scala 72:59]
    node _T_36 = or(_T_35, superpage_hits_2) @[package.scala 72:59]
    node _T_37 = or(_T_36, superpage_hits_3) @[package.scala 72:59]
    node lo_5 = cat(superpage_hits_1, superpage_hits_0) @[Cat.scala 30:58]
    node hi_5 = cat(superpage_hits_3, superpage_hits_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node hi_6 = bits(_T_38, 3, 2) @[OneHot.scala 30:18]
    node lo_6 = bits(_T_38, 1, 0) @[OneHot.scala 31:18]
    node hi_7 = orr(hi_6) @[OneHot.scala 32:14]
    node _T_39 = or(hi_6, lo_6) @[OneHot.scala 32:28]
    node lo_7 = bits(_T_39, 1, 1) @[CircuitMath.scala 30:8]
    node state_reg_touch_way_sized = cat(hi_7, lo_7) @[Cat.scala 30:58]
    skip
    node _state_reg_set_left_older_T = bits(state_reg_touch_way_sized, 1, 1) @[Replacement.scala 196:43]
    node state_reg_hi_hi = not(_state_reg_set_left_older_T) @[Replacement.scala 196:33]
    node state_reg_left_subtree_state = bits(state_reg_1, 1, 1) @[package.scala 154:13]
    node state_reg_right_subtree_state = bits(state_reg_1, 0, 0) @[Replacement.scala 198:38]
    node _state_reg_T = bits(state_reg_touch_way_sized, 0, 0) @[package.scala 154:13]
    skip
    node _state_reg_T_2 = not(_state_reg_T) @[Replacement.scala 218:7]
    node state_reg_hi_lo = mux(state_reg_hi_hi, state_reg_left_subtree_state, _state_reg_T_2) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo = mux(state_reg_hi_hi, _state_reg_T_2, state_reg_right_subtree_state) @[Replacement.scala 206:16]
    node state_reg_hi = cat(state_reg_hi_hi, state_reg_hi_lo) @[Cat.scala 30:58]
    node _state_reg_T_6 = cat(state_reg_hi, state_reg_lo) @[Cat.scala 30:58]
    node _GEN_650 = mux(_T_37, _state_reg_T_6, state_reg_1) @[Replacement.scala 172:15 TLB.scala 331:31 Replacement.scala 168:70]
    node _GEN_651 = mux(_T_23, _GEN_649, state_vec_0) @[Replacement.scala 305:17 TLB.scala 329:37]
    node _GEN_652 = mux(_T_23, _GEN_650, state_reg_1) @[TLB.scala 329:37 Replacement.scala 168:70]
    node _multipleHits_T = bits(real_hits, 5, 0) @[Misc.scala 180:37]
    node _multipleHits_T_1 = bits(_multipleHits_T, 2, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne = bits(_multipleHits_T_1, 0, 0) @[Misc.scala 180:37]
    skip
    node _multipleHits_T_3 = bits(_multipleHits_T_1, 2, 1) @[Misc.scala 181:39]
    node multipleHits_leftOne_1 = bits(_multipleHits_T_3, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne = bits(_multipleHits_T_3, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_rightOne_1 = or(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:16]
    skip
    node multipleHits_rightTwo = and(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:61]
    skip
    node multipleHits_leftOne_2 = or(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:16]
    skip
    node _multipleHits_T_9 = and(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:61]
    node multipleHits_leftTwo = or(multipleHits_rightTwo, _multipleHits_T_9) @[Misc.scala 182:49]
    node _multipleHits_T_10 = bits(_multipleHits_T, 5, 3) @[Misc.scala 181:39]
    node multipleHits_leftOne_3 = bits(_multipleHits_T_10, 0, 0) @[Misc.scala 180:37]
    skip
    node _multipleHits_T_12 = bits(_multipleHits_T_10, 2, 1) @[Misc.scala 181:39]
    node multipleHits_leftOne_4 = bits(_multipleHits_T_12, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne_2 = bits(_multipleHits_T_12, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_rightOne_3 = or(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:16]
    skip
    node multipleHits_rightTwo_1 = and(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:61]
    skip
    node multipleHits_rightOne_4 = or(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:16]
    skip
    node _multipleHits_T_18 = and(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:61]
    node multipleHits_rightTwo_2 = or(multipleHits_rightTwo_1, _multipleHits_T_18) @[Misc.scala 182:49]
    node multipleHits_leftOne_5 = or(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:16]
    node _multipleHits_T_19 = or(multipleHits_leftTwo, multipleHits_rightTwo_2) @[Misc.scala 182:37]
    node _multipleHits_T_20 = and(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:61]
    node multipleHits_leftTwo_1 = or(_multipleHits_T_19, _multipleHits_T_20) @[Misc.scala 182:49]
    node _multipleHits_T_21 = bits(real_hits, 12, 6) @[Misc.scala 181:39]
    node _multipleHits_T_22 = bits(_multipleHits_T_21, 2, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_6 = bits(_multipleHits_T_22, 0, 0) @[Misc.scala 180:37]
    skip
    node _multipleHits_T_24 = bits(_multipleHits_T_22, 2, 1) @[Misc.scala 181:39]
    node multipleHits_leftOne_7 = bits(_multipleHits_T_24, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne_5 = bits(_multipleHits_T_24, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_rightOne_6 = or(multipleHits_leftOne_7, multipleHits_rightOne_5) @[Misc.scala 182:16]
    skip
    node multipleHits_rightTwo_3 = and(multipleHits_leftOne_7, multipleHits_rightOne_5) @[Misc.scala 182:61]
    skip
    node multipleHits_leftOne_8 = or(multipleHits_leftOne_6, multipleHits_rightOne_6) @[Misc.scala 182:16]
    skip
    node _multipleHits_T_30 = and(multipleHits_leftOne_6, multipleHits_rightOne_6) @[Misc.scala 182:61]
    node multipleHits_leftTwo_2 = or(multipleHits_rightTwo_3, _multipleHits_T_30) @[Misc.scala 182:49]
    node _multipleHits_T_31 = bits(_multipleHits_T_21, 6, 3) @[Misc.scala 181:39]
    node _multipleHits_T_32 = bits(_multipleHits_T_31, 1, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_9 = bits(_multipleHits_T_32, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne_7 = bits(_multipleHits_T_32, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_leftOne_10 = or(multipleHits_leftOne_9, multipleHits_rightOne_7) @[Misc.scala 182:16]
    skip
    node multipleHits_leftTwo_3 = and(multipleHits_leftOne_9, multipleHits_rightOne_7) @[Misc.scala 182:61]
    skip
    node _multipleHits_T_37 = bits(_multipleHits_T_31, 3, 2) @[Misc.scala 181:39]
    node multipleHits_leftOne_11 = bits(_multipleHits_T_37, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne_8 = bits(_multipleHits_T_37, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_rightOne_9 = or(multipleHits_leftOne_11, multipleHits_rightOne_8) @[Misc.scala 182:16]
    skip
    node multipleHits_rightTwo_4 = and(multipleHits_leftOne_11, multipleHits_rightOne_8) @[Misc.scala 182:61]
    skip
    node multipleHits_rightOne_10 = or(multipleHits_leftOne_10, multipleHits_rightOne_9) @[Misc.scala 182:16]
    node _multipleHits_T_42 = or(multipleHits_leftTwo_3, multipleHits_rightTwo_4) @[Misc.scala 182:37]
    node _multipleHits_T_43 = and(multipleHits_leftOne_10, multipleHits_rightOne_9) @[Misc.scala 182:61]
    node multipleHits_rightTwo_5 = or(_multipleHits_T_42, _multipleHits_T_43) @[Misc.scala 182:49]
    node multipleHits_rightOne_11 = or(multipleHits_leftOne_8, multipleHits_rightOne_10) @[Misc.scala 182:16]
    node _multipleHits_T_44 = or(multipleHits_leftTwo_2, multipleHits_rightTwo_5) @[Misc.scala 182:37]
    node _multipleHits_T_45 = and(multipleHits_leftOne_8, multipleHits_rightOne_10) @[Misc.scala 182:61]
    node multipleHits_rightTwo_6 = or(_multipleHits_T_44, _multipleHits_T_45) @[Misc.scala 182:49]
    skip
    node _multipleHits_T_47 = or(multipleHits_leftTwo_1, multipleHits_rightTwo_6) @[Misc.scala 182:37]
    node _multipleHits_T_48 = and(multipleHits_leftOne_5, multipleHits_rightOne_11) @[Misc.scala 182:61]
    node multipleHits = or(_multipleHits_T_47, _multipleHits_T_48) @[Misc.scala 182:49]
    skip
    node _io_resp_pf_ld_T = and(bad_va, cmd_read) @[TLB.scala 342:28]
    node _io_resp_pf_ld_T_1 = and(pf_ld_array, hits) @[TLB.scala 342:57]
    node _io_resp_pf_ld_T_2 = orr(_io_resp_pf_ld_T_1) @[TLB.scala 342:65]
    skip
    node _io_resp_pf_st_T = and(bad_va, cmd_write_perms) @[TLB.scala 343:28]
    node _io_resp_pf_st_T_1 = and(pf_st_array, hits) @[TLB.scala 343:64]
    node _io_resp_pf_st_T_2 = orr(_io_resp_pf_st_T_1) @[TLB.scala 343:72]
    skip
    skip
    skip
    skip
    node _io_resp_ae_ld_T = and(ae_ld_array, hits) @[TLB.scala 345:33]
    skip
    node _io_resp_ae_st_T = and(ae_st_array, hits) @[TLB.scala 346:33]
    skip
    skip
    skip
    skip
    node _io_resp_ma_ld_T = and(ma_ld_array, hits) @[TLB.scala 348:33]
    skip
    node _io_resp_ma_st_T = and(ma_st_array, hits) @[TLB.scala 349:33]
    skip
    node _io_resp_cacheable_T = and(c_array, hits) @[TLB.scala 351:33]
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_resp_miss_T = or(io_ptw_resp_valid, tlb_miss) @[TLB.scala 354:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_41 = and(io_req_ready, io_req_valid) @[Decoupled.scala 40:37]
    node _T_42 = and(_T_41, tlb_miss) @[TLB.scala 363:25]
    node r_superpage_repl_addr_hi = bits(state_reg_1, 2, 2) @[Replacement.scala 243:38]
    skip
    skip
    skip
    skip
    node r_superpage_repl_addr_lo = mux(r_superpage_repl_addr_hi, state_reg_left_subtree_state, state_reg_right_subtree_state) @[Replacement.scala 250:16]
    node _r_superpage_repl_addr_T_2 = cat(r_superpage_repl_addr_hi, r_superpage_repl_addr_lo) @[Cat.scala 30:58]
    node r_superpage_repl_addr_valids_lo = cat(superpage_entries_1_valid_0, superpage_entries_0_valid_0) @[Cat.scala 30:58]
    node r_superpage_repl_addr_valids_hi = cat(superpage_entries_3_valid_0, superpage_entries_2_valid_0) @[Cat.scala 30:58]
    node r_superpage_repl_addr_valids = cat(r_superpage_repl_addr_valids_hi, r_superpage_repl_addr_valids_lo) @[Cat.scala 30:58]
    node _r_superpage_repl_addr_T_3 = andr(r_superpage_repl_addr_valids) @[TLB.scala 411:16]
    node _r_superpage_repl_addr_T_4 = not(r_superpage_repl_addr_valids) @[TLB.scala 411:43]
    node _r_superpage_repl_addr_T_5 = bits(_r_superpage_repl_addr_T_4, 0, 0) @[OneHot.scala 47:40]
    node _r_superpage_repl_addr_T_6 = bits(_r_superpage_repl_addr_T_4, 1, 1) @[OneHot.scala 47:40]
    node _r_superpage_repl_addr_T_7 = bits(_r_superpage_repl_addr_T_4, 2, 2) @[OneHot.scala 47:40]
    skip
    node _r_superpage_repl_addr_T_9 = mux(_r_superpage_repl_addr_T_7, UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:69]
    node _r_superpage_repl_addr_T_10 = mux(_r_superpage_repl_addr_T_6, UInt<2>("h1"), _r_superpage_repl_addr_T_9) @[Mux.scala 47:69]
    node _r_superpage_repl_addr_T_11 = mux(_r_superpage_repl_addr_T_5, UInt<2>("h0"), _r_superpage_repl_addr_T_10) @[Mux.scala 47:69]
    node _r_superpage_repl_addr_T_12 = mux(_r_superpage_repl_addr_T_3, _r_superpage_repl_addr_T_2, _r_superpage_repl_addr_T_11) @[TLB.scala 411:8]
    node r_sectored_repl_addr_hi = bits(state_vec_0, 6, 6) @[Replacement.scala 243:38]
    skip
    skip
    node r_sectored_repl_addr_hi_1 = bits(state_vec_0_left_subtree_state, 2, 2) @[Replacement.scala 243:38]
    skip
    skip
    skip
    skip
    node r_sectored_repl_addr_lo = mux(r_sectored_repl_addr_hi_1, state_vec_0_left_subtree_state_1, state_vec_0_right_subtree_state_1) @[Replacement.scala 250:16]
    node _r_sectored_repl_addr_T_2 = cat(r_sectored_repl_addr_hi_1, r_sectored_repl_addr_lo) @[Cat.scala 30:58]
    node r_sectored_repl_addr_hi_2 = bits(state_vec_0_right_subtree_state, 2, 2) @[Replacement.scala 243:38]
    skip
    skip
    skip
    skip
    node r_sectored_repl_addr_lo_1 = mux(r_sectored_repl_addr_hi_2, state_vec_0_left_subtree_state_2, state_vec_0_right_subtree_state_2) @[Replacement.scala 250:16]
    node _r_sectored_repl_addr_T_5 = cat(r_sectored_repl_addr_hi_2, r_sectored_repl_addr_lo_1) @[Cat.scala 30:58]
    node r_sectored_repl_addr_lo_2 = mux(r_sectored_repl_addr_hi, _r_sectored_repl_addr_T_2, _r_sectored_repl_addr_T_5) @[Replacement.scala 250:16]
    node _r_sectored_repl_addr_T_6 = cat(r_sectored_repl_addr_hi, r_sectored_repl_addr_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node r_sectored_repl_addr_valids_lo_lo = cat(_sector_hits_T_8, _sector_hits_T_2) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_lo_hi = cat(_sector_hits_T_20, _sector_hits_T_14) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_lo = cat(r_sectored_repl_addr_valids_lo_hi, r_sectored_repl_addr_valids_lo_lo) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_hi_lo = cat(_sector_hits_T_32, _sector_hits_T_26) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_hi_hi = cat(_sector_hits_T_44, _sector_hits_T_38) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_hi = cat(r_sectored_repl_addr_valids_hi_hi, r_sectored_repl_addr_valids_hi_lo) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids = cat(r_sectored_repl_addr_valids_hi, r_sectored_repl_addr_valids_lo) @[Cat.scala 30:58]
    node _r_sectored_repl_addr_T_7 = andr(r_sectored_repl_addr_valids) @[TLB.scala 411:16]
    node _r_sectored_repl_addr_T_8 = not(r_sectored_repl_addr_valids) @[TLB.scala 411:43]
    node _r_sectored_repl_addr_T_9 = bits(_r_sectored_repl_addr_T_8, 0, 0) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_10 = bits(_r_sectored_repl_addr_T_8, 1, 1) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_11 = bits(_r_sectored_repl_addr_T_8, 2, 2) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_12 = bits(_r_sectored_repl_addr_T_8, 3, 3) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_13 = bits(_r_sectored_repl_addr_T_8, 4, 4) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_14 = bits(_r_sectored_repl_addr_T_8, 5, 5) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_15 = bits(_r_sectored_repl_addr_T_8, 6, 6) @[OneHot.scala 47:40]
    skip
    node _r_sectored_repl_addr_T_17 = mux(_r_sectored_repl_addr_T_15, UInt<3>("h6"), UInt<3>("h7")) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_18 = mux(_r_sectored_repl_addr_T_14, UInt<3>("h5"), _r_sectored_repl_addr_T_17) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_19 = mux(_r_sectored_repl_addr_T_13, UInt<3>("h4"), _r_sectored_repl_addr_T_18) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_20 = mux(_r_sectored_repl_addr_T_12, UInt<3>("h3"), _r_sectored_repl_addr_T_19) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_21 = mux(_r_sectored_repl_addr_T_11, UInt<3>("h2"), _r_sectored_repl_addr_T_20) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_22 = mux(_r_sectored_repl_addr_T_10, UInt<3>("h1"), _r_sectored_repl_addr_T_21) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_23 = mux(_r_sectored_repl_addr_T_9, UInt<3>("h0"), _r_sectored_repl_addr_T_22) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_24 = mux(_r_sectored_repl_addr_T_7, _r_sectored_repl_addr_T_6, _r_sectored_repl_addr_T_23) @[TLB.scala 411:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_653 = mux(_T_42, UInt<2>("h1"), state) @[TLB.scala 363:38 364:13 173:18]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_659 = mux(io_sfence_valid, UInt<2>("h0"), _GEN_653) @[TLB.scala 373:{21,29}]
    node _state_T = mux(io_sfence_valid, UInt<2>("h3"), UInt<2>("h2")) @[TLB.scala 374:45]
    node _GEN_660 = mux(io_ptw_req_ready, _state_T, _GEN_659) @[TLB.scala 374:{31,39}]
    skip
    node _GEN_662 = mux(_invalidate_refill_T, _GEN_660, _GEN_653) @[TLB.scala 372:32]
    node _T_44 = eq(state, UInt<2>("h2")) @[TLB.scala 377:17]
    node _T_45 = and(_T_44, io_sfence_valid) @[TLB.scala 377:28]
    node _GEN_663 = mux(_T_45, UInt<2>("h3"), _GEN_662) @[TLB.scala 377:39 378:13]
    node _GEN_664 = mux(io_ptw_resp_valid, UInt<2>("h0"), _GEN_663) @[TLB.scala 380:30 381:13]
    node _T_46 = not(io_sfence_bits_rs1) @[TLB.scala 385:14]
    node _T_47 = shr(io_sfence_bits_addr, 12) @[TLB.scala 385:58]
    node _T_48 = eq(_T_47, vpn) @[TLB.scala 385:72]
    node _T_49 = or(_T_46, _T_48) @[TLB.scala 385:34]
    skip
    node _T_51 = or(_T_49, reset) @[TLB.scala 385:13]
    node _T_52 = not(_T_51) @[TLB.scala 385:13]
    skip
    skip
    skip
    skip
    skip
    node _GEN_665 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_505) @[TLB.scala 131:{58,58}]
    node _GEN_666 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_506) @[TLB.scala 131:{58,58}]
    node _GEN_667 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_507) @[TLB.scala 131:{58,58}]
    node _GEN_668 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_508) @[TLB.scala 131:{58,58}]
    node _GEN_669 = mux(_sector_hits_T_5, _GEN_665, _GEN_505) @[TLB.scala 131:34]
    node _GEN_670 = mux(_sector_hits_T_5, _GEN_666, _GEN_506) @[TLB.scala 131:34]
    node _GEN_671 = mux(_sector_hits_T_5, _GEN_667, _GEN_507) @[TLB.scala 131:34]
    node _GEN_672 = mux(_sector_hits_T_5, _GEN_668, _GEN_508) @[TLB.scala 131:34]
    skip
    node _T_58 = shr(_sector_hits_T_3, 18) @[TLB.scala 135:26]
    node _T_59 = eq(_T_58, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_60 = bits(sectored_entries_0_0_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_73 = bits(sectored_entries_0_0_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_76 = bits(sectored_entries_0_0_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_89 = bits(sectored_entries_0_0_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_92 = bits(sectored_entries_0_0_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_105 = bits(sectored_entries_0_0_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_108 = bits(sectored_entries_0_0_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_121 = bits(sectored_entries_0_0_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_673 = mux(_T_60, UInt<1>("h0"), _GEN_669) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_674 = mux(_T_76, UInt<1>("h0"), _GEN_670) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_675 = mux(_T_92, UInt<1>("h0"), _GEN_671) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_676 = mux(_T_108, UInt<1>("h0"), _GEN_672) @[TLB.scala 137:{41,45}]
    node _GEN_677 = mux(_T_59, _GEN_673, _GEN_669) @[TLB.scala 135:68]
    node _GEN_678 = mux(_T_59, _GEN_674, _GEN_670) @[TLB.scala 135:68]
    node _GEN_679 = mux(_T_59, _GEN_675, _GEN_671) @[TLB.scala 135:68]
    node _GEN_680 = mux(_T_59, _GEN_676, _GEN_672) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_188 = not(_T_73) @[TLB.scala 143:13]
    node _GEN_681 = mux(_T_188, UInt<1>("h0"), _GEN_505) @[TLB.scala 143:{19,23}]
    skip
    node _T_189 = not(_T_89) @[TLB.scala 143:13]
    node _GEN_682 = mux(_T_189, UInt<1>("h0"), _GEN_506) @[TLB.scala 143:{19,23}]
    skip
    node _T_190 = not(_T_105) @[TLB.scala 143:13]
    node _GEN_683 = mux(_T_190, UInt<1>("h0"), _GEN_507) @[TLB.scala 143:{19,23}]
    skip
    node _T_191 = not(_T_121) @[TLB.scala 143:13]
    node _GEN_684 = mux(_T_191, UInt<1>("h0"), _GEN_508) @[TLB.scala 143:{19,23}]
    node _GEN_685 = and(io_sfence_bits_rs2, _GEN_681) @[TLB.scala 388:40 126:46]
    node _GEN_686 = and(io_sfence_bits_rs2, _GEN_682) @[TLB.scala 388:40 126:46]
    node _GEN_687 = and(io_sfence_bits_rs2, _GEN_683) @[TLB.scala 388:40 126:46]
    node _GEN_688 = and(io_sfence_bits_rs2, _GEN_684) @[TLB.scala 388:40 126:46]
    node _GEN_689 = mux(io_sfence_bits_rs1, _GEN_677, _GEN_685) @[TLB.scala 387:35]
    node _GEN_690 = mux(io_sfence_bits_rs1, _GEN_678, _GEN_686) @[TLB.scala 387:35]
    node _GEN_691 = mux(io_sfence_bits_rs1, _GEN_679, _GEN_687) @[TLB.scala 387:35]
    node _GEN_692 = mux(io_sfence_bits_rs1, _GEN_680, _GEN_688) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_693 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_515) @[TLB.scala 131:{58,58}]
    node _GEN_694 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_516) @[TLB.scala 131:{58,58}]
    node _GEN_695 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_517) @[TLB.scala 131:{58,58}]
    node _GEN_696 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_518) @[TLB.scala 131:{58,58}]
    node _GEN_697 = mux(_sector_hits_T_11, _GEN_693, _GEN_515) @[TLB.scala 131:34]
    node _GEN_698 = mux(_sector_hits_T_11, _GEN_694, _GEN_516) @[TLB.scala 131:34]
    node _GEN_699 = mux(_sector_hits_T_11, _GEN_695, _GEN_517) @[TLB.scala 131:34]
    node _GEN_700 = mux(_sector_hits_T_11, _GEN_696, _GEN_518) @[TLB.scala 131:34]
    skip
    node _T_197 = shr(_sector_hits_T_9, 18) @[TLB.scala 135:26]
    node _T_198 = eq(_T_197, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_199 = bits(sectored_entries_0_1_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_212 = bits(sectored_entries_0_1_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_215 = bits(sectored_entries_0_1_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_228 = bits(sectored_entries_0_1_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_231 = bits(sectored_entries_0_1_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_244 = bits(sectored_entries_0_1_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_247 = bits(sectored_entries_0_1_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_260 = bits(sectored_entries_0_1_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_701 = mux(_T_199, UInt<1>("h0"), _GEN_697) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_702 = mux(_T_215, UInt<1>("h0"), _GEN_698) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_703 = mux(_T_231, UInt<1>("h0"), _GEN_699) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_704 = mux(_T_247, UInt<1>("h0"), _GEN_700) @[TLB.scala 137:{41,45}]
    node _GEN_705 = mux(_T_198, _GEN_701, _GEN_697) @[TLB.scala 135:68]
    node _GEN_706 = mux(_T_198, _GEN_702, _GEN_698) @[TLB.scala 135:68]
    node _GEN_707 = mux(_T_198, _GEN_703, _GEN_699) @[TLB.scala 135:68]
    node _GEN_708 = mux(_T_198, _GEN_704, _GEN_700) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_327 = not(_T_212) @[TLB.scala 143:13]
    node _GEN_709 = mux(_T_327, UInt<1>("h0"), _GEN_515) @[TLB.scala 143:{19,23}]
    skip
    node _T_328 = not(_T_228) @[TLB.scala 143:13]
    node _GEN_710 = mux(_T_328, UInt<1>("h0"), _GEN_516) @[TLB.scala 143:{19,23}]
    skip
    node _T_329 = not(_T_244) @[TLB.scala 143:13]
    node _GEN_711 = mux(_T_329, UInt<1>("h0"), _GEN_517) @[TLB.scala 143:{19,23}]
    skip
    node _T_330 = not(_T_260) @[TLB.scala 143:13]
    node _GEN_712 = mux(_T_330, UInt<1>("h0"), _GEN_518) @[TLB.scala 143:{19,23}]
    node _GEN_713 = and(io_sfence_bits_rs2, _GEN_709) @[TLB.scala 388:40 126:46]
    node _GEN_714 = and(io_sfence_bits_rs2, _GEN_710) @[TLB.scala 388:40 126:46]
    node _GEN_715 = and(io_sfence_bits_rs2, _GEN_711) @[TLB.scala 388:40 126:46]
    node _GEN_716 = and(io_sfence_bits_rs2, _GEN_712) @[TLB.scala 388:40 126:46]
    node _GEN_717 = mux(io_sfence_bits_rs1, _GEN_705, _GEN_713) @[TLB.scala 387:35]
    node _GEN_718 = mux(io_sfence_bits_rs1, _GEN_706, _GEN_714) @[TLB.scala 387:35]
    node _GEN_719 = mux(io_sfence_bits_rs1, _GEN_707, _GEN_715) @[TLB.scala 387:35]
    node _GEN_720 = mux(io_sfence_bits_rs1, _GEN_708, _GEN_716) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_721 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_525) @[TLB.scala 131:{58,58}]
    node _GEN_722 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_526) @[TLB.scala 131:{58,58}]
    node _GEN_723 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_527) @[TLB.scala 131:{58,58}]
    node _GEN_724 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_528) @[TLB.scala 131:{58,58}]
    node _GEN_725 = mux(_sector_hits_T_17, _GEN_721, _GEN_525) @[TLB.scala 131:34]
    node _GEN_726 = mux(_sector_hits_T_17, _GEN_722, _GEN_526) @[TLB.scala 131:34]
    node _GEN_727 = mux(_sector_hits_T_17, _GEN_723, _GEN_527) @[TLB.scala 131:34]
    node _GEN_728 = mux(_sector_hits_T_17, _GEN_724, _GEN_528) @[TLB.scala 131:34]
    skip
    node _T_336 = shr(_sector_hits_T_15, 18) @[TLB.scala 135:26]
    node _T_337 = eq(_T_336, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_338 = bits(sectored_entries_0_2_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_351 = bits(sectored_entries_0_2_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_354 = bits(sectored_entries_0_2_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_367 = bits(sectored_entries_0_2_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_370 = bits(sectored_entries_0_2_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_383 = bits(sectored_entries_0_2_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_386 = bits(sectored_entries_0_2_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_399 = bits(sectored_entries_0_2_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_729 = mux(_T_338, UInt<1>("h0"), _GEN_725) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_730 = mux(_T_354, UInt<1>("h0"), _GEN_726) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_731 = mux(_T_370, UInt<1>("h0"), _GEN_727) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_732 = mux(_T_386, UInt<1>("h0"), _GEN_728) @[TLB.scala 137:{41,45}]
    node _GEN_733 = mux(_T_337, _GEN_729, _GEN_725) @[TLB.scala 135:68]
    node _GEN_734 = mux(_T_337, _GEN_730, _GEN_726) @[TLB.scala 135:68]
    node _GEN_735 = mux(_T_337, _GEN_731, _GEN_727) @[TLB.scala 135:68]
    node _GEN_736 = mux(_T_337, _GEN_732, _GEN_728) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_466 = not(_T_351) @[TLB.scala 143:13]
    node _GEN_737 = mux(_T_466, UInt<1>("h0"), _GEN_525) @[TLB.scala 143:{19,23}]
    skip
    node _T_467 = not(_T_367) @[TLB.scala 143:13]
    node _GEN_738 = mux(_T_467, UInt<1>("h0"), _GEN_526) @[TLB.scala 143:{19,23}]
    skip
    node _T_468 = not(_T_383) @[TLB.scala 143:13]
    node _GEN_739 = mux(_T_468, UInt<1>("h0"), _GEN_527) @[TLB.scala 143:{19,23}]
    skip
    node _T_469 = not(_T_399) @[TLB.scala 143:13]
    node _GEN_740 = mux(_T_469, UInt<1>("h0"), _GEN_528) @[TLB.scala 143:{19,23}]
    node _GEN_741 = and(io_sfence_bits_rs2, _GEN_737) @[TLB.scala 388:40 126:46]
    node _GEN_742 = and(io_sfence_bits_rs2, _GEN_738) @[TLB.scala 388:40 126:46]
    node _GEN_743 = and(io_sfence_bits_rs2, _GEN_739) @[TLB.scala 388:40 126:46]
    node _GEN_744 = and(io_sfence_bits_rs2, _GEN_740) @[TLB.scala 388:40 126:46]
    node _GEN_745 = mux(io_sfence_bits_rs1, _GEN_733, _GEN_741) @[TLB.scala 387:35]
    node _GEN_746 = mux(io_sfence_bits_rs1, _GEN_734, _GEN_742) @[TLB.scala 387:35]
    node _GEN_747 = mux(io_sfence_bits_rs1, _GEN_735, _GEN_743) @[TLB.scala 387:35]
    node _GEN_748 = mux(io_sfence_bits_rs1, _GEN_736, _GEN_744) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_749 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_535) @[TLB.scala 131:{58,58}]
    node _GEN_750 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_536) @[TLB.scala 131:{58,58}]
    node _GEN_751 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_537) @[TLB.scala 131:{58,58}]
    node _GEN_752 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_538) @[TLB.scala 131:{58,58}]
    node _GEN_753 = mux(_sector_hits_T_23, _GEN_749, _GEN_535) @[TLB.scala 131:34]
    node _GEN_754 = mux(_sector_hits_T_23, _GEN_750, _GEN_536) @[TLB.scala 131:34]
    node _GEN_755 = mux(_sector_hits_T_23, _GEN_751, _GEN_537) @[TLB.scala 131:34]
    node _GEN_756 = mux(_sector_hits_T_23, _GEN_752, _GEN_538) @[TLB.scala 131:34]
    skip
    node _T_475 = shr(_sector_hits_T_21, 18) @[TLB.scala 135:26]
    node _T_476 = eq(_T_475, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_477 = bits(sectored_entries_0_3_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_490 = bits(sectored_entries_0_3_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_493 = bits(sectored_entries_0_3_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_506 = bits(sectored_entries_0_3_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_509 = bits(sectored_entries_0_3_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_522 = bits(sectored_entries_0_3_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_525 = bits(sectored_entries_0_3_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_538 = bits(sectored_entries_0_3_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_757 = mux(_T_477, UInt<1>("h0"), _GEN_753) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_758 = mux(_T_493, UInt<1>("h0"), _GEN_754) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_759 = mux(_T_509, UInt<1>("h0"), _GEN_755) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_760 = mux(_T_525, UInt<1>("h0"), _GEN_756) @[TLB.scala 137:{41,45}]
    node _GEN_761 = mux(_T_476, _GEN_757, _GEN_753) @[TLB.scala 135:68]
    node _GEN_762 = mux(_T_476, _GEN_758, _GEN_754) @[TLB.scala 135:68]
    node _GEN_763 = mux(_T_476, _GEN_759, _GEN_755) @[TLB.scala 135:68]
    node _GEN_764 = mux(_T_476, _GEN_760, _GEN_756) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_605 = not(_T_490) @[TLB.scala 143:13]
    node _GEN_765 = mux(_T_605, UInt<1>("h0"), _GEN_535) @[TLB.scala 143:{19,23}]
    skip
    node _T_606 = not(_T_506) @[TLB.scala 143:13]
    node _GEN_766 = mux(_T_606, UInt<1>("h0"), _GEN_536) @[TLB.scala 143:{19,23}]
    skip
    node _T_607 = not(_T_522) @[TLB.scala 143:13]
    node _GEN_767 = mux(_T_607, UInt<1>("h0"), _GEN_537) @[TLB.scala 143:{19,23}]
    skip
    node _T_608 = not(_T_538) @[TLB.scala 143:13]
    node _GEN_768 = mux(_T_608, UInt<1>("h0"), _GEN_538) @[TLB.scala 143:{19,23}]
    node _GEN_769 = and(io_sfence_bits_rs2, _GEN_765) @[TLB.scala 388:40 126:46]
    node _GEN_770 = and(io_sfence_bits_rs2, _GEN_766) @[TLB.scala 388:40 126:46]
    node _GEN_771 = and(io_sfence_bits_rs2, _GEN_767) @[TLB.scala 388:40 126:46]
    node _GEN_772 = and(io_sfence_bits_rs2, _GEN_768) @[TLB.scala 388:40 126:46]
    node _GEN_773 = mux(io_sfence_bits_rs1, _GEN_761, _GEN_769) @[TLB.scala 387:35]
    node _GEN_774 = mux(io_sfence_bits_rs1, _GEN_762, _GEN_770) @[TLB.scala 387:35]
    node _GEN_775 = mux(io_sfence_bits_rs1, _GEN_763, _GEN_771) @[TLB.scala 387:35]
    node _GEN_776 = mux(io_sfence_bits_rs1, _GEN_764, _GEN_772) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_777 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_545) @[TLB.scala 131:{58,58}]
    node _GEN_778 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_546) @[TLB.scala 131:{58,58}]
    node _GEN_779 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_547) @[TLB.scala 131:{58,58}]
    node _GEN_780 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_548) @[TLB.scala 131:{58,58}]
    node _GEN_781 = mux(_sector_hits_T_29, _GEN_777, _GEN_545) @[TLB.scala 131:34]
    node _GEN_782 = mux(_sector_hits_T_29, _GEN_778, _GEN_546) @[TLB.scala 131:34]
    node _GEN_783 = mux(_sector_hits_T_29, _GEN_779, _GEN_547) @[TLB.scala 131:34]
    node _GEN_784 = mux(_sector_hits_T_29, _GEN_780, _GEN_548) @[TLB.scala 131:34]
    skip
    node _T_614 = shr(_sector_hits_T_27, 18) @[TLB.scala 135:26]
    node _T_615 = eq(_T_614, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_616 = bits(sectored_entries_0_4_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_629 = bits(sectored_entries_0_4_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_632 = bits(sectored_entries_0_4_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_645 = bits(sectored_entries_0_4_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_648 = bits(sectored_entries_0_4_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_661 = bits(sectored_entries_0_4_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_664 = bits(sectored_entries_0_4_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_677 = bits(sectored_entries_0_4_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_785 = mux(_T_616, UInt<1>("h0"), _GEN_781) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_786 = mux(_T_632, UInt<1>("h0"), _GEN_782) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_787 = mux(_T_648, UInt<1>("h0"), _GEN_783) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_788 = mux(_T_664, UInt<1>("h0"), _GEN_784) @[TLB.scala 137:{41,45}]
    node _GEN_789 = mux(_T_615, _GEN_785, _GEN_781) @[TLB.scala 135:68]
    node _GEN_790 = mux(_T_615, _GEN_786, _GEN_782) @[TLB.scala 135:68]
    node _GEN_791 = mux(_T_615, _GEN_787, _GEN_783) @[TLB.scala 135:68]
    node _GEN_792 = mux(_T_615, _GEN_788, _GEN_784) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_744 = not(_T_629) @[TLB.scala 143:13]
    node _GEN_793 = mux(_T_744, UInt<1>("h0"), _GEN_545) @[TLB.scala 143:{19,23}]
    skip
    node _T_745 = not(_T_645) @[TLB.scala 143:13]
    node _GEN_794 = mux(_T_745, UInt<1>("h0"), _GEN_546) @[TLB.scala 143:{19,23}]
    skip
    node _T_746 = not(_T_661) @[TLB.scala 143:13]
    node _GEN_795 = mux(_T_746, UInt<1>("h0"), _GEN_547) @[TLB.scala 143:{19,23}]
    skip
    node _T_747 = not(_T_677) @[TLB.scala 143:13]
    node _GEN_796 = mux(_T_747, UInt<1>("h0"), _GEN_548) @[TLB.scala 143:{19,23}]
    node _GEN_797 = and(io_sfence_bits_rs2, _GEN_793) @[TLB.scala 388:40 126:46]
    node _GEN_798 = and(io_sfence_bits_rs2, _GEN_794) @[TLB.scala 388:40 126:46]
    node _GEN_799 = and(io_sfence_bits_rs2, _GEN_795) @[TLB.scala 388:40 126:46]
    node _GEN_800 = and(io_sfence_bits_rs2, _GEN_796) @[TLB.scala 388:40 126:46]
    node _GEN_801 = mux(io_sfence_bits_rs1, _GEN_789, _GEN_797) @[TLB.scala 387:35]
    node _GEN_802 = mux(io_sfence_bits_rs1, _GEN_790, _GEN_798) @[TLB.scala 387:35]
    node _GEN_803 = mux(io_sfence_bits_rs1, _GEN_791, _GEN_799) @[TLB.scala 387:35]
    node _GEN_804 = mux(io_sfence_bits_rs1, _GEN_792, _GEN_800) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_805 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_555) @[TLB.scala 131:{58,58}]
    node _GEN_806 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_556) @[TLB.scala 131:{58,58}]
    node _GEN_807 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_557) @[TLB.scala 131:{58,58}]
    node _GEN_808 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_558) @[TLB.scala 131:{58,58}]
    node _GEN_809 = mux(_sector_hits_T_35, _GEN_805, _GEN_555) @[TLB.scala 131:34]
    node _GEN_810 = mux(_sector_hits_T_35, _GEN_806, _GEN_556) @[TLB.scala 131:34]
    node _GEN_811 = mux(_sector_hits_T_35, _GEN_807, _GEN_557) @[TLB.scala 131:34]
    node _GEN_812 = mux(_sector_hits_T_35, _GEN_808, _GEN_558) @[TLB.scala 131:34]
    skip
    node _T_753 = shr(_sector_hits_T_33, 18) @[TLB.scala 135:26]
    node _T_754 = eq(_T_753, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_755 = bits(sectored_entries_0_5_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_768 = bits(sectored_entries_0_5_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_771 = bits(sectored_entries_0_5_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_784 = bits(sectored_entries_0_5_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_787 = bits(sectored_entries_0_5_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_800 = bits(sectored_entries_0_5_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_803 = bits(sectored_entries_0_5_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_816 = bits(sectored_entries_0_5_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_813 = mux(_T_755, UInt<1>("h0"), _GEN_809) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_814 = mux(_T_771, UInt<1>("h0"), _GEN_810) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_815 = mux(_T_787, UInt<1>("h0"), _GEN_811) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_816 = mux(_T_803, UInt<1>("h0"), _GEN_812) @[TLB.scala 137:{41,45}]
    node _GEN_817 = mux(_T_754, _GEN_813, _GEN_809) @[TLB.scala 135:68]
    node _GEN_818 = mux(_T_754, _GEN_814, _GEN_810) @[TLB.scala 135:68]
    node _GEN_819 = mux(_T_754, _GEN_815, _GEN_811) @[TLB.scala 135:68]
    node _GEN_820 = mux(_T_754, _GEN_816, _GEN_812) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_883 = not(_T_768) @[TLB.scala 143:13]
    node _GEN_821 = mux(_T_883, UInt<1>("h0"), _GEN_555) @[TLB.scala 143:{19,23}]
    skip
    node _T_884 = not(_T_784) @[TLB.scala 143:13]
    node _GEN_822 = mux(_T_884, UInt<1>("h0"), _GEN_556) @[TLB.scala 143:{19,23}]
    skip
    node _T_885 = not(_T_800) @[TLB.scala 143:13]
    node _GEN_823 = mux(_T_885, UInt<1>("h0"), _GEN_557) @[TLB.scala 143:{19,23}]
    skip
    node _T_886 = not(_T_816) @[TLB.scala 143:13]
    node _GEN_824 = mux(_T_886, UInt<1>("h0"), _GEN_558) @[TLB.scala 143:{19,23}]
    node _GEN_825 = and(io_sfence_bits_rs2, _GEN_821) @[TLB.scala 388:40 126:46]
    node _GEN_826 = and(io_sfence_bits_rs2, _GEN_822) @[TLB.scala 388:40 126:46]
    node _GEN_827 = and(io_sfence_bits_rs2, _GEN_823) @[TLB.scala 388:40 126:46]
    node _GEN_828 = and(io_sfence_bits_rs2, _GEN_824) @[TLB.scala 388:40 126:46]
    node _GEN_829 = mux(io_sfence_bits_rs1, _GEN_817, _GEN_825) @[TLB.scala 387:35]
    node _GEN_830 = mux(io_sfence_bits_rs1, _GEN_818, _GEN_826) @[TLB.scala 387:35]
    node _GEN_831 = mux(io_sfence_bits_rs1, _GEN_819, _GEN_827) @[TLB.scala 387:35]
    node _GEN_832 = mux(io_sfence_bits_rs1, _GEN_820, _GEN_828) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_833 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_565) @[TLB.scala 131:{58,58}]
    node _GEN_834 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_566) @[TLB.scala 131:{58,58}]
    node _GEN_835 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_567) @[TLB.scala 131:{58,58}]
    node _GEN_836 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_568) @[TLB.scala 131:{58,58}]
    node _GEN_837 = mux(_sector_hits_T_41, _GEN_833, _GEN_565) @[TLB.scala 131:34]
    node _GEN_838 = mux(_sector_hits_T_41, _GEN_834, _GEN_566) @[TLB.scala 131:34]
    node _GEN_839 = mux(_sector_hits_T_41, _GEN_835, _GEN_567) @[TLB.scala 131:34]
    node _GEN_840 = mux(_sector_hits_T_41, _GEN_836, _GEN_568) @[TLB.scala 131:34]
    skip
    node _T_892 = shr(_sector_hits_T_39, 18) @[TLB.scala 135:26]
    node _T_893 = eq(_T_892, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_894 = bits(sectored_entries_0_6_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_907 = bits(sectored_entries_0_6_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_910 = bits(sectored_entries_0_6_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_923 = bits(sectored_entries_0_6_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_926 = bits(sectored_entries_0_6_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_939 = bits(sectored_entries_0_6_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_942 = bits(sectored_entries_0_6_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_955 = bits(sectored_entries_0_6_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_841 = mux(_T_894, UInt<1>("h0"), _GEN_837) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_842 = mux(_T_910, UInt<1>("h0"), _GEN_838) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_843 = mux(_T_926, UInt<1>("h0"), _GEN_839) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_844 = mux(_T_942, UInt<1>("h0"), _GEN_840) @[TLB.scala 137:{41,45}]
    node _GEN_845 = mux(_T_893, _GEN_841, _GEN_837) @[TLB.scala 135:68]
    node _GEN_846 = mux(_T_893, _GEN_842, _GEN_838) @[TLB.scala 135:68]
    node _GEN_847 = mux(_T_893, _GEN_843, _GEN_839) @[TLB.scala 135:68]
    node _GEN_848 = mux(_T_893, _GEN_844, _GEN_840) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1022 = not(_T_907) @[TLB.scala 143:13]
    node _GEN_849 = mux(_T_1022, UInt<1>("h0"), _GEN_565) @[TLB.scala 143:{19,23}]
    skip
    node _T_1023 = not(_T_923) @[TLB.scala 143:13]
    node _GEN_850 = mux(_T_1023, UInt<1>("h0"), _GEN_566) @[TLB.scala 143:{19,23}]
    skip
    node _T_1024 = not(_T_939) @[TLB.scala 143:13]
    node _GEN_851 = mux(_T_1024, UInt<1>("h0"), _GEN_567) @[TLB.scala 143:{19,23}]
    skip
    node _T_1025 = not(_T_955) @[TLB.scala 143:13]
    node _GEN_852 = mux(_T_1025, UInt<1>("h0"), _GEN_568) @[TLB.scala 143:{19,23}]
    node _GEN_853 = and(io_sfence_bits_rs2, _GEN_849) @[TLB.scala 388:40 126:46]
    node _GEN_854 = and(io_sfence_bits_rs2, _GEN_850) @[TLB.scala 388:40 126:46]
    node _GEN_855 = and(io_sfence_bits_rs2, _GEN_851) @[TLB.scala 388:40 126:46]
    node _GEN_856 = and(io_sfence_bits_rs2, _GEN_852) @[TLB.scala 388:40 126:46]
    node _GEN_857 = mux(io_sfence_bits_rs1, _GEN_845, _GEN_853) @[TLB.scala 387:35]
    node _GEN_858 = mux(io_sfence_bits_rs1, _GEN_846, _GEN_854) @[TLB.scala 387:35]
    node _GEN_859 = mux(io_sfence_bits_rs1, _GEN_847, _GEN_855) @[TLB.scala 387:35]
    node _GEN_860 = mux(io_sfence_bits_rs1, _GEN_848, _GEN_856) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_861 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_575) @[TLB.scala 131:{58,58}]
    node _GEN_862 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_576) @[TLB.scala 131:{58,58}]
    node _GEN_863 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_577) @[TLB.scala 131:{58,58}]
    node _GEN_864 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_578) @[TLB.scala 131:{58,58}]
    node _GEN_865 = mux(_sector_hits_T_47, _GEN_861, _GEN_575) @[TLB.scala 131:34]
    node _GEN_866 = mux(_sector_hits_T_47, _GEN_862, _GEN_576) @[TLB.scala 131:34]
    node _GEN_867 = mux(_sector_hits_T_47, _GEN_863, _GEN_577) @[TLB.scala 131:34]
    node _GEN_868 = mux(_sector_hits_T_47, _GEN_864, _GEN_578) @[TLB.scala 131:34]
    skip
    node _T_1031 = shr(_sector_hits_T_45, 18) @[TLB.scala 135:26]
    node _T_1032 = eq(_T_1031, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_1033 = bits(sectored_entries_0_7_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1046 = bits(sectored_entries_0_7_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_1049 = bits(sectored_entries_0_7_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1062 = bits(sectored_entries_0_7_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_1065 = bits(sectored_entries_0_7_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1078 = bits(sectored_entries_0_7_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_1081 = bits(sectored_entries_0_7_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1094 = bits(sectored_entries_0_7_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_869 = mux(_T_1033, UInt<1>("h0"), _GEN_865) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_870 = mux(_T_1049, UInt<1>("h0"), _GEN_866) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_871 = mux(_T_1065, UInt<1>("h0"), _GEN_867) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_872 = mux(_T_1081, UInt<1>("h0"), _GEN_868) @[TLB.scala 137:{41,45}]
    node _GEN_873 = mux(_T_1032, _GEN_869, _GEN_865) @[TLB.scala 135:68]
    node _GEN_874 = mux(_T_1032, _GEN_870, _GEN_866) @[TLB.scala 135:68]
    node _GEN_875 = mux(_T_1032, _GEN_871, _GEN_867) @[TLB.scala 135:68]
    node _GEN_876 = mux(_T_1032, _GEN_872, _GEN_868) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1161 = not(_T_1046) @[TLB.scala 143:13]
    node _GEN_877 = mux(_T_1161, UInt<1>("h0"), _GEN_575) @[TLB.scala 143:{19,23}]
    skip
    node _T_1162 = not(_T_1062) @[TLB.scala 143:13]
    node _GEN_878 = mux(_T_1162, UInt<1>("h0"), _GEN_576) @[TLB.scala 143:{19,23}]
    skip
    node _T_1163 = not(_T_1078) @[TLB.scala 143:13]
    node _GEN_879 = mux(_T_1163, UInt<1>("h0"), _GEN_577) @[TLB.scala 143:{19,23}]
    skip
    node _T_1164 = not(_T_1094) @[TLB.scala 143:13]
    node _GEN_880 = mux(_T_1164, UInt<1>("h0"), _GEN_578) @[TLB.scala 143:{19,23}]
    node _GEN_881 = and(io_sfence_bits_rs2, _GEN_877) @[TLB.scala 388:40 126:46]
    node _GEN_882 = and(io_sfence_bits_rs2, _GEN_878) @[TLB.scala 388:40 126:46]
    node _GEN_883 = and(io_sfence_bits_rs2, _GEN_879) @[TLB.scala 388:40 126:46]
    node _GEN_884 = and(io_sfence_bits_rs2, _GEN_880) @[TLB.scala 388:40 126:46]
    node _GEN_885 = mux(io_sfence_bits_rs1, _GEN_873, _GEN_881) @[TLB.scala 387:35]
    node _GEN_886 = mux(io_sfence_bits_rs1, _GEN_874, _GEN_882) @[TLB.scala 387:35]
    node _GEN_887 = mux(io_sfence_bits_rs1, _GEN_875, _GEN_883) @[TLB.scala 387:35]
    node _GEN_888 = mux(io_sfence_bits_rs1, _GEN_876, _GEN_884) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_889 = mux(superpage_hits_0, UInt<1>("h0"), _GEN_491) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1196 = not(_ppn_data_T_149) @[TLB.scala 143:13]
    node _GEN_890 = mux(_T_1196, UInt<1>("h0"), _GEN_491) @[TLB.scala 143:{19,23}]
    node _GEN_891 = and(io_sfence_bits_rs2, _GEN_890) @[TLB.scala 388:40 126:46]
    node _GEN_892 = mux(io_sfence_bits_rs1, _GEN_889, _GEN_891) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_893 = mux(superpage_hits_1, UInt<1>("h0"), _GEN_495) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1228 = not(_ppn_data_T_165) @[TLB.scala 143:13]
    node _GEN_894 = mux(_T_1228, UInt<1>("h0"), _GEN_495) @[TLB.scala 143:{19,23}]
    node _GEN_895 = and(io_sfence_bits_rs2, _GEN_894) @[TLB.scala 388:40 126:46]
    node _GEN_896 = mux(io_sfence_bits_rs1, _GEN_893, _GEN_895) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_897 = mux(superpage_hits_2, UInt<1>("h0"), _GEN_499) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1260 = not(_ppn_data_T_181) @[TLB.scala 143:13]
    node _GEN_898 = mux(_T_1260, UInt<1>("h0"), _GEN_499) @[TLB.scala 143:{19,23}]
    node _GEN_899 = and(io_sfence_bits_rs2, _GEN_898) @[TLB.scala 388:40 126:46]
    node _GEN_900 = mux(io_sfence_bits_rs1, _GEN_897, _GEN_899) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_901 = mux(superpage_hits_3, UInt<1>("h0"), _GEN_503) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1292 = not(_ppn_data_T_197) @[TLB.scala 143:13]
    node _GEN_902 = mux(_T_1292, UInt<1>("h0"), _GEN_503) @[TLB.scala 143:{19,23}]
    node _GEN_903 = and(io_sfence_bits_rs2, _GEN_902) @[TLB.scala 388:40 126:46]
    node _GEN_904 = mux(io_sfence_bits_rs1, _GEN_901, _GEN_903) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_905 = mux(_hitsVec_T_106, UInt<1>("h0"), _GEN_487) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1324 = not(_mpu_ppn_data_T_13) @[TLB.scala 143:13]
    node _GEN_906 = mux(_T_1324, UInt<1>("h0"), _GEN_487) @[TLB.scala 143:{19,23}]
    node _GEN_907 = and(io_sfence_bits_rs2, _GEN_906) @[TLB.scala 388:40 126:46]
    node _GEN_908 = mux(io_sfence_bits_rs1, _GEN_905, _GEN_907) @[TLB.scala 387:35]
    node _GEN_909 = mux(io_sfence_valid, _GEN_689, _GEN_505) @[TLB.scala 384:19]
    node _GEN_910 = mux(io_sfence_valid, _GEN_690, _GEN_506) @[TLB.scala 384:19]
    node _GEN_911 = mux(io_sfence_valid, _GEN_691, _GEN_507) @[TLB.scala 384:19]
    node _GEN_912 = mux(io_sfence_valid, _GEN_692, _GEN_508) @[TLB.scala 384:19]
    node _GEN_913 = mux(io_sfence_valid, _GEN_717, _GEN_515) @[TLB.scala 384:19]
    node _GEN_914 = mux(io_sfence_valid, _GEN_718, _GEN_516) @[TLB.scala 384:19]
    node _GEN_915 = mux(io_sfence_valid, _GEN_719, _GEN_517) @[TLB.scala 384:19]
    node _GEN_916 = mux(io_sfence_valid, _GEN_720, _GEN_518) @[TLB.scala 384:19]
    node _GEN_917 = mux(io_sfence_valid, _GEN_745, _GEN_525) @[TLB.scala 384:19]
    node _GEN_918 = mux(io_sfence_valid, _GEN_746, _GEN_526) @[TLB.scala 384:19]
    node _GEN_919 = mux(io_sfence_valid, _GEN_747, _GEN_527) @[TLB.scala 384:19]
    node _GEN_920 = mux(io_sfence_valid, _GEN_748, _GEN_528) @[TLB.scala 384:19]
    node _GEN_921 = mux(io_sfence_valid, _GEN_773, _GEN_535) @[TLB.scala 384:19]
    node _GEN_922 = mux(io_sfence_valid, _GEN_774, _GEN_536) @[TLB.scala 384:19]
    node _GEN_923 = mux(io_sfence_valid, _GEN_775, _GEN_537) @[TLB.scala 384:19]
    node _GEN_924 = mux(io_sfence_valid, _GEN_776, _GEN_538) @[TLB.scala 384:19]
    node _GEN_925 = mux(io_sfence_valid, _GEN_801, _GEN_545) @[TLB.scala 384:19]
    node _GEN_926 = mux(io_sfence_valid, _GEN_802, _GEN_546) @[TLB.scala 384:19]
    node _GEN_927 = mux(io_sfence_valid, _GEN_803, _GEN_547) @[TLB.scala 384:19]
    node _GEN_928 = mux(io_sfence_valid, _GEN_804, _GEN_548) @[TLB.scala 384:19]
    node _GEN_929 = mux(io_sfence_valid, _GEN_829, _GEN_555) @[TLB.scala 384:19]
    node _GEN_930 = mux(io_sfence_valid, _GEN_830, _GEN_556) @[TLB.scala 384:19]
    node _GEN_931 = mux(io_sfence_valid, _GEN_831, _GEN_557) @[TLB.scala 384:19]
    node _GEN_932 = mux(io_sfence_valid, _GEN_832, _GEN_558) @[TLB.scala 384:19]
    node _GEN_933 = mux(io_sfence_valid, _GEN_857, _GEN_565) @[TLB.scala 384:19]
    node _GEN_934 = mux(io_sfence_valid, _GEN_858, _GEN_566) @[TLB.scala 384:19]
    node _GEN_935 = mux(io_sfence_valid, _GEN_859, _GEN_567) @[TLB.scala 384:19]
    node _GEN_936 = mux(io_sfence_valid, _GEN_860, _GEN_568) @[TLB.scala 384:19]
    node _GEN_937 = mux(io_sfence_valid, _GEN_885, _GEN_575) @[TLB.scala 384:19]
    node _GEN_938 = mux(io_sfence_valid, _GEN_886, _GEN_576) @[TLB.scala 384:19]
    node _GEN_939 = mux(io_sfence_valid, _GEN_887, _GEN_577) @[TLB.scala 384:19]
    node _GEN_940 = mux(io_sfence_valid, _GEN_888, _GEN_578) @[TLB.scala 384:19]
    node _GEN_941 = mux(io_sfence_valid, _GEN_892, _GEN_491) @[TLB.scala 384:19]
    node _GEN_942 = mux(io_sfence_valid, _GEN_896, _GEN_495) @[TLB.scala 384:19]
    node _GEN_943 = mux(io_sfence_valid, _GEN_900, _GEN_499) @[TLB.scala 384:19]
    node _GEN_944 = mux(io_sfence_valid, _GEN_904, _GEN_503) @[TLB.scala 384:19]
    node _GEN_945 = mux(io_sfence_valid, _GEN_908, _GEN_487) @[TLB.scala 384:19]
    skip
    node _T_1326 = or(multipleHits, reset) @[TLB.scala 392:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_req_ready <= eq(state, UInt<2>("h0")) @[TLB.scala 341:25]
    io_resp_miss <= or(_io_resp_miss_T, multipleHits) @[TLB.scala 354:41]
    io_resp_paddr <= cat(ppn, mpu_physaddr_lo) @[Cat.scala 30:58]
    io_resp_pf_ld <= or(_io_resp_pf_ld_T, _io_resp_pf_ld_T_2) @[TLB.scala 342:41]
    io_resp_pf_st <= or(_io_resp_pf_st_T, _io_resp_pf_st_T_2) @[TLB.scala 343:48]
    skip
    io_resp_ae_ld <= orr(_io_resp_ae_ld_T) @[TLB.scala 345:41]
    io_resp_ae_st <= orr(_io_resp_ae_st_T) @[TLB.scala 346:41]
    skip
    io_resp_ma_ld <= orr(_io_resp_ma_ld_T) @[TLB.scala 348:41]
    io_resp_ma_st <= orr(_io_resp_ma_st_T) @[TLB.scala 349:41]
    skip
    io_resp_cacheable <= orr(_io_resp_cacheable_T) @[TLB.scala 351:41]
    skip
    skip
    io_ptw_req_valid <= eq(state, UInt<2>("h1")) @[TLB.scala 357:29]
    skip
    io_ptw_req_bits_bits_addr <= r_refill_tag @[TLB.scala 359:29]
    skip
    sectored_entries_0_0_tag <= mux(io_ptw_resp_valid, _GEN_409, sectored_entries_0_0_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_data_0 <= mux(io_ptw_resp_valid, _GEN_411, sectored_entries_0_0_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_data_1 <= mux(io_ptw_resp_valid, _GEN_412, sectored_entries_0_0_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_data_2 <= mux(io_ptw_resp_valid, _GEN_413, sectored_entries_0_0_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_data_3 <= mux(io_ptw_resp_valid, _GEN_414, sectored_entries_0_0_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_909) @[TLB.scala 392:34 126:46]
    sectored_entries_0_0_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_910) @[TLB.scala 392:34 126:46]
    sectored_entries_0_0_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_911) @[TLB.scala 392:34 126:46]
    sectored_entries_0_0_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_912) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_1_tag <= mux(io_ptw_resp_valid, _GEN_419, sectored_entries_0_1_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_data_0 <= mux(io_ptw_resp_valid, _GEN_421, sectored_entries_0_1_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_data_1 <= mux(io_ptw_resp_valid, _GEN_422, sectored_entries_0_1_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_data_2 <= mux(io_ptw_resp_valid, _GEN_423, sectored_entries_0_1_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_data_3 <= mux(io_ptw_resp_valid, _GEN_424, sectored_entries_0_1_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_913) @[TLB.scala 392:34 126:46]
    sectored_entries_0_1_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_914) @[TLB.scala 392:34 126:46]
    sectored_entries_0_1_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_915) @[TLB.scala 392:34 126:46]
    sectored_entries_0_1_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_916) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_2_tag <= mux(io_ptw_resp_valid, _GEN_429, sectored_entries_0_2_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_data_0 <= mux(io_ptw_resp_valid, _GEN_431, sectored_entries_0_2_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_data_1 <= mux(io_ptw_resp_valid, _GEN_432, sectored_entries_0_2_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_data_2 <= mux(io_ptw_resp_valid, _GEN_433, sectored_entries_0_2_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_data_3 <= mux(io_ptw_resp_valid, _GEN_434, sectored_entries_0_2_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_917) @[TLB.scala 392:34 126:46]
    sectored_entries_0_2_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_918) @[TLB.scala 392:34 126:46]
    sectored_entries_0_2_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_919) @[TLB.scala 392:34 126:46]
    sectored_entries_0_2_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_920) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_3_tag <= mux(io_ptw_resp_valid, _GEN_439, sectored_entries_0_3_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_data_0 <= mux(io_ptw_resp_valid, _GEN_441, sectored_entries_0_3_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_data_1 <= mux(io_ptw_resp_valid, _GEN_442, sectored_entries_0_3_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_data_2 <= mux(io_ptw_resp_valid, _GEN_443, sectored_entries_0_3_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_data_3 <= mux(io_ptw_resp_valid, _GEN_444, sectored_entries_0_3_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_921) @[TLB.scala 392:34 126:46]
    sectored_entries_0_3_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_922) @[TLB.scala 392:34 126:46]
    sectored_entries_0_3_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_923) @[TLB.scala 392:34 126:46]
    sectored_entries_0_3_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_924) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_4_tag <= mux(io_ptw_resp_valid, _GEN_449, sectored_entries_0_4_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_data_0 <= mux(io_ptw_resp_valid, _GEN_451, sectored_entries_0_4_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_data_1 <= mux(io_ptw_resp_valid, _GEN_452, sectored_entries_0_4_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_data_2 <= mux(io_ptw_resp_valid, _GEN_453, sectored_entries_0_4_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_data_3 <= mux(io_ptw_resp_valid, _GEN_454, sectored_entries_0_4_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_925) @[TLB.scala 392:34 126:46]
    sectored_entries_0_4_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_926) @[TLB.scala 392:34 126:46]
    sectored_entries_0_4_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_927) @[TLB.scala 392:34 126:46]
    sectored_entries_0_4_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_928) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_5_tag <= mux(io_ptw_resp_valid, _GEN_459, sectored_entries_0_5_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_data_0 <= mux(io_ptw_resp_valid, _GEN_461, sectored_entries_0_5_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_data_1 <= mux(io_ptw_resp_valid, _GEN_462, sectored_entries_0_5_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_data_2 <= mux(io_ptw_resp_valid, _GEN_463, sectored_entries_0_5_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_data_3 <= mux(io_ptw_resp_valid, _GEN_464, sectored_entries_0_5_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_929) @[TLB.scala 392:34 126:46]
    sectored_entries_0_5_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_930) @[TLB.scala 392:34 126:46]
    sectored_entries_0_5_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_931) @[TLB.scala 392:34 126:46]
    sectored_entries_0_5_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_932) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_6_tag <= mux(io_ptw_resp_valid, _GEN_469, sectored_entries_0_6_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_data_0 <= mux(io_ptw_resp_valid, _GEN_471, sectored_entries_0_6_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_data_1 <= mux(io_ptw_resp_valid, _GEN_472, sectored_entries_0_6_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_data_2 <= mux(io_ptw_resp_valid, _GEN_473, sectored_entries_0_6_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_data_3 <= mux(io_ptw_resp_valid, _GEN_474, sectored_entries_0_6_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_933) @[TLB.scala 392:34 126:46]
    sectored_entries_0_6_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_934) @[TLB.scala 392:34 126:46]
    sectored_entries_0_6_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_935) @[TLB.scala 392:34 126:46]
    sectored_entries_0_6_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_936) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_7_tag <= mux(io_ptw_resp_valid, _GEN_479, sectored_entries_0_7_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_data_0 <= mux(io_ptw_resp_valid, _GEN_481, sectored_entries_0_7_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_data_1 <= mux(io_ptw_resp_valid, _GEN_482, sectored_entries_0_7_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_data_2 <= mux(io_ptw_resp_valid, _GEN_483, sectored_entries_0_7_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_data_3 <= mux(io_ptw_resp_valid, _GEN_484, sectored_entries_0_7_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_937) @[TLB.scala 392:34 126:46]
    sectored_entries_0_7_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_938) @[TLB.scala 392:34 126:46]
    sectored_entries_0_7_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_939) @[TLB.scala 392:34 126:46]
    sectored_entries_0_7_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_940) @[TLB.scala 392:34 126:46]
    superpage_entries_0_level <= mux(io_ptw_resp_valid, _GEN_390, superpage_entries_0_level) @[TLB.scala 220:20 166:30]
    superpage_entries_0_tag <= mux(io_ptw_resp_valid, _GEN_389, superpage_entries_0_tag) @[TLB.scala 220:20 166:30]
    superpage_entries_0_data_0 <= mux(io_ptw_resp_valid, _GEN_392, superpage_entries_0_data_0) @[TLB.scala 220:20 166:30]
    superpage_entries_0_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_941) @[TLB.scala 392:34 126:46]
    superpage_entries_1_level <= mux(io_ptw_resp_valid, _GEN_394, superpage_entries_1_level) @[TLB.scala 220:20 166:30]
    superpage_entries_1_tag <= mux(io_ptw_resp_valid, _GEN_393, superpage_entries_1_tag) @[TLB.scala 220:20 166:30]
    superpage_entries_1_data_0 <= mux(io_ptw_resp_valid, _GEN_396, superpage_entries_1_data_0) @[TLB.scala 220:20 166:30]
    superpage_entries_1_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_942) @[TLB.scala 392:34 126:46]
    superpage_entries_2_level <= mux(io_ptw_resp_valid, _GEN_398, superpage_entries_2_level) @[TLB.scala 220:20 166:30]
    superpage_entries_2_tag <= mux(io_ptw_resp_valid, _GEN_397, superpage_entries_2_tag) @[TLB.scala 220:20 166:30]
    superpage_entries_2_data_0 <= mux(io_ptw_resp_valid, _GEN_400, superpage_entries_2_data_0) @[TLB.scala 220:20 166:30]
    superpage_entries_2_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_943) @[TLB.scala 392:34 126:46]
    superpage_entries_3_level <= mux(io_ptw_resp_valid, _GEN_402, superpage_entries_3_level) @[TLB.scala 220:20 166:30]
    superpage_entries_3_tag <= mux(io_ptw_resp_valid, _GEN_401, superpage_entries_3_tag) @[TLB.scala 220:20 166:30]
    superpage_entries_3_data_0 <= mux(io_ptw_resp_valid, _GEN_404, superpage_entries_3_data_0) @[TLB.scala 220:20 166:30]
    superpage_entries_3_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_944) @[TLB.scala 392:34 126:46]
    special_entry_level <= mux(io_ptw_resp_valid, _GEN_386, special_entry_level) @[TLB.scala 220:20 167:56]
    special_entry_tag <= mux(io_ptw_resp_valid, _GEN_385, special_entry_tag) @[TLB.scala 220:20 167:56]
    special_entry_data_0 <= mux(io_ptw_resp_valid, _GEN_388, special_entry_data_0) @[TLB.scala 220:20 167:56]
    special_entry_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_945) @[TLB.scala 392:34 126:46]
    state <= mux(reset, UInt<2>("h0"), _GEN_664) @[TLB.scala 173:{18,18}]
    r_refill_tag <= mux(_T_42, vpn, r_refill_tag) @[TLB.scala 363:38 365:20 174:25]
    r_superpage_repl_addr <= mux(_T_42, _r_superpage_repl_addr_T_12, r_superpage_repl_addr) @[TLB.scala 363:38 367:29 175:34]
    r_sectored_repl_addr <= mux(_T_42, _r_sectored_repl_addr_T_24, r_sectored_repl_addr) @[TLB.scala 363:38 368:28 176:33]
    r_sectored_hit_addr <= mux(_T_42, state_vec_0_touch_way_sized, r_sectored_hit_addr) @[TLB.scala 363:38 369:27 177:32]
    r_sectored_hit <= mux(_T_42, _T_30, r_sectored_hit) @[TLB.scala 363:38 370:22 178:27]
    skip
    skip
    mpu_ppn_data_barrier.io_x_ppn <= bits(special_entry_data_0, 34, 15) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_u <= bits(special_entry_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    mpu_ppn_data_barrier.io_x_ae <= bits(special_entry_data_0, 12, 12) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_sw <= bits(special_entry_data_0, 11, 11) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_sx <= bits(special_entry_data_0, 10, 10) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_sr <= bits(special_entry_data_0, 9, 9) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_pw <= bits(special_entry_data_0, 8, 8) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_px <= bits(special_entry_data_0, 7, 7) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_pr <= bits(special_entry_data_0, 6, 6) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_ppp <= bits(special_entry_data_0, 5, 5) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_pal <= bits(special_entry_data_0, 4, 4) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_paa <= bits(special_entry_data_0, 3, 3) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_eff <= bits(special_entry_data_0, 2, 2) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_c <= bits(special_entry_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    pmp.io_prv <= bits(mpu_priv, 1, 0) @[TLB.scala 197:14]
    pmp.io_pmp_0_cfg_l <= io_ptw_pmp_0_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_0_cfg_a <= io_ptw_pmp_0_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_0_cfg_x <= io_ptw_pmp_0_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_0_cfg_w <= io_ptw_pmp_0_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_0_cfg_r <= io_ptw_pmp_0_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_0_addr <= io_ptw_pmp_0_addr @[TLB.scala 196:14]
    pmp.io_pmp_0_mask <= io_ptw_pmp_0_mask @[TLB.scala 196:14]
    pmp.io_pmp_1_cfg_l <= io_ptw_pmp_1_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_1_cfg_a <= io_ptw_pmp_1_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_1_cfg_x <= io_ptw_pmp_1_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_1_cfg_w <= io_ptw_pmp_1_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_1_cfg_r <= io_ptw_pmp_1_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_1_addr <= io_ptw_pmp_1_addr @[TLB.scala 196:14]
    pmp.io_pmp_1_mask <= io_ptw_pmp_1_mask @[TLB.scala 196:14]
    pmp.io_pmp_2_cfg_l <= io_ptw_pmp_2_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_2_cfg_a <= io_ptw_pmp_2_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_2_cfg_x <= io_ptw_pmp_2_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_2_cfg_w <= io_ptw_pmp_2_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_2_cfg_r <= io_ptw_pmp_2_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_2_addr <= io_ptw_pmp_2_addr @[TLB.scala 196:14]
    pmp.io_pmp_2_mask <= io_ptw_pmp_2_mask @[TLB.scala 196:14]
    pmp.io_pmp_3_cfg_l <= io_ptw_pmp_3_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_3_cfg_a <= io_ptw_pmp_3_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_3_cfg_x <= io_ptw_pmp_3_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_3_cfg_w <= io_ptw_pmp_3_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_3_cfg_r <= io_ptw_pmp_3_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_3_addr <= io_ptw_pmp_3_addr @[TLB.scala 196:14]
    pmp.io_pmp_3_mask <= io_ptw_pmp_3_mask @[TLB.scala 196:14]
    pmp.io_pmp_4_cfg_l <= io_ptw_pmp_4_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_4_cfg_a <= io_ptw_pmp_4_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_4_cfg_x <= io_ptw_pmp_4_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_4_cfg_w <= io_ptw_pmp_4_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_4_cfg_r <= io_ptw_pmp_4_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_4_addr <= io_ptw_pmp_4_addr @[TLB.scala 196:14]
    pmp.io_pmp_4_mask <= io_ptw_pmp_4_mask @[TLB.scala 196:14]
    pmp.io_pmp_5_cfg_l <= io_ptw_pmp_5_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_5_cfg_a <= io_ptw_pmp_5_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_5_cfg_x <= io_ptw_pmp_5_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_5_cfg_w <= io_ptw_pmp_5_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_5_cfg_r <= io_ptw_pmp_5_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_5_addr <= io_ptw_pmp_5_addr @[TLB.scala 196:14]
    pmp.io_pmp_5_mask <= io_ptw_pmp_5_mask @[TLB.scala 196:14]
    pmp.io_pmp_6_cfg_l <= io_ptw_pmp_6_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_6_cfg_a <= io_ptw_pmp_6_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_6_cfg_x <= io_ptw_pmp_6_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_6_cfg_w <= io_ptw_pmp_6_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_6_cfg_r <= io_ptw_pmp_6_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_6_addr <= io_ptw_pmp_6_addr @[TLB.scala 196:14]
    pmp.io_pmp_6_mask <= io_ptw_pmp_6_mask @[TLB.scala 196:14]
    pmp.io_pmp_7_cfg_l <= io_ptw_pmp_7_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_7_cfg_a <= io_ptw_pmp_7_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_7_cfg_x <= io_ptw_pmp_7_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_7_cfg_w <= io_ptw_pmp_7_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_7_cfg_r <= io_ptw_pmp_7_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_7_addr <= io_ptw_pmp_7_addr @[TLB.scala 196:14]
    pmp.io_pmp_7_mask <= io_ptw_pmp_7_mask @[TLB.scala 196:14]
    pmp.io_addr <= bits(mpu_physaddr, 31, 0) @[TLB.scala 194:15]
    pmp.io_size <= io_req_bits_size @[TLB.scala 195:15]
    skip
    skip
    ppn_data_barrier.io_x_ppn <= bits(_GEN_35, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_u <= bits(_GEN_35, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier.io_x_ae <= bits(_GEN_35, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_sw <= bits(_GEN_35, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_sx <= bits(_GEN_35, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_sr <= bits(_GEN_35, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_pw <= bits(_GEN_35, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_px <= bits(_GEN_35, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_pr <= bits(_GEN_35, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_ppp <= bits(_GEN_35, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_pal <= bits(_GEN_35, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_paa <= bits(_GEN_35, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_eff <= bits(_GEN_35, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_c <= bits(_GEN_35, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_1.io_x_ppn <= bits(_GEN_39, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_u <= bits(_GEN_39, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_1.io_x_ae <= bits(_GEN_39, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_sw <= bits(_GEN_39, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_sx <= bits(_GEN_39, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_sr <= bits(_GEN_39, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_pw <= bits(_GEN_39, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_px <= bits(_GEN_39, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_pr <= bits(_GEN_39, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_ppp <= bits(_GEN_39, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_pal <= bits(_GEN_39, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_paa <= bits(_GEN_39, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_eff <= bits(_GEN_39, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_c <= bits(_GEN_39, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_2.io_x_ppn <= bits(_GEN_43, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_u <= bits(_GEN_43, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_2.io_x_ae <= bits(_GEN_43, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_sw <= bits(_GEN_43, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_sx <= bits(_GEN_43, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_sr <= bits(_GEN_43, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_pw <= bits(_GEN_43, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_px <= bits(_GEN_43, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_pr <= bits(_GEN_43, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_ppp <= bits(_GEN_43, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_pal <= bits(_GEN_43, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_paa <= bits(_GEN_43, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_eff <= bits(_GEN_43, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_c <= bits(_GEN_43, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_3.io_x_ppn <= bits(_GEN_47, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_u <= bits(_GEN_47, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_3.io_x_ae <= bits(_GEN_47, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_sw <= bits(_GEN_47, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_sx <= bits(_GEN_47, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_sr <= bits(_GEN_47, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_pw <= bits(_GEN_47, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_px <= bits(_GEN_47, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_pr <= bits(_GEN_47, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_ppp <= bits(_GEN_47, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_pal <= bits(_GEN_47, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_paa <= bits(_GEN_47, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_eff <= bits(_GEN_47, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_c <= bits(_GEN_47, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_4.io_x_ppn <= bits(_GEN_51, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_u <= bits(_GEN_51, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_4.io_x_ae <= bits(_GEN_51, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_sw <= bits(_GEN_51, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_sx <= bits(_GEN_51, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_sr <= bits(_GEN_51, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_pw <= bits(_GEN_51, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_px <= bits(_GEN_51, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_pr <= bits(_GEN_51, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_ppp <= bits(_GEN_51, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_pal <= bits(_GEN_51, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_paa <= bits(_GEN_51, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_eff <= bits(_GEN_51, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_c <= bits(_GEN_51, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_5.io_x_ppn <= bits(_GEN_55, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_u <= bits(_GEN_55, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_5.io_x_ae <= bits(_GEN_55, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_sw <= bits(_GEN_55, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_sx <= bits(_GEN_55, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_sr <= bits(_GEN_55, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_pw <= bits(_GEN_55, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_px <= bits(_GEN_55, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_pr <= bits(_GEN_55, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_ppp <= bits(_GEN_55, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_pal <= bits(_GEN_55, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_paa <= bits(_GEN_55, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_eff <= bits(_GEN_55, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_c <= bits(_GEN_55, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_6.io_x_ppn <= bits(_GEN_59, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_u <= bits(_GEN_59, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_6.io_x_ae <= bits(_GEN_59, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_sw <= bits(_GEN_59, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_sx <= bits(_GEN_59, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_sr <= bits(_GEN_59, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_pw <= bits(_GEN_59, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_px <= bits(_GEN_59, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_pr <= bits(_GEN_59, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_ppp <= bits(_GEN_59, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_pal <= bits(_GEN_59, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_paa <= bits(_GEN_59, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_eff <= bits(_GEN_59, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_c <= bits(_GEN_59, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_7.io_x_ppn <= bits(_GEN_63, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_u <= bits(_GEN_63, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_7.io_x_ae <= bits(_GEN_63, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_sw <= bits(_GEN_63, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_sx <= bits(_GEN_63, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_sr <= bits(_GEN_63, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_pw <= bits(_GEN_63, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_px <= bits(_GEN_63, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_pr <= bits(_GEN_63, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_ppp <= bits(_GEN_63, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_pal <= bits(_GEN_63, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_paa <= bits(_GEN_63, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_eff <= bits(_GEN_63, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_c <= bits(_GEN_63, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_8.io_x_ppn <= bits(superpage_entries_0_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_u <= bits(superpage_entries_0_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_8.io_x_ae <= bits(superpage_entries_0_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_sw <= bits(superpage_entries_0_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_sx <= bits(superpage_entries_0_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_sr <= bits(superpage_entries_0_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_pw <= bits(superpage_entries_0_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_px <= bits(superpage_entries_0_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_pr <= bits(superpage_entries_0_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_ppp <= bits(superpage_entries_0_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_pal <= bits(superpage_entries_0_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_paa <= bits(superpage_entries_0_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_eff <= bits(superpage_entries_0_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_c <= bits(superpage_entries_0_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_9.io_x_ppn <= bits(superpage_entries_1_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_u <= bits(superpage_entries_1_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_9.io_x_ae <= bits(superpage_entries_1_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_sw <= bits(superpage_entries_1_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_sx <= bits(superpage_entries_1_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_sr <= bits(superpage_entries_1_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_pw <= bits(superpage_entries_1_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_px <= bits(superpage_entries_1_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_pr <= bits(superpage_entries_1_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_ppp <= bits(superpage_entries_1_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_pal <= bits(superpage_entries_1_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_paa <= bits(superpage_entries_1_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_eff <= bits(superpage_entries_1_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_c <= bits(superpage_entries_1_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_10.io_x_ppn <= bits(superpage_entries_2_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_u <= bits(superpage_entries_2_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_10.io_x_ae <= bits(superpage_entries_2_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_sw <= bits(superpage_entries_2_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_sx <= bits(superpage_entries_2_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_sr <= bits(superpage_entries_2_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_pw <= bits(superpage_entries_2_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_px <= bits(superpage_entries_2_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_pr <= bits(superpage_entries_2_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_ppp <= bits(superpage_entries_2_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_pal <= bits(superpage_entries_2_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_paa <= bits(superpage_entries_2_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_eff <= bits(superpage_entries_2_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_c <= bits(superpage_entries_2_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_11.io_x_ppn <= bits(superpage_entries_3_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_u <= bits(superpage_entries_3_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_11.io_x_ae <= bits(superpage_entries_3_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_sw <= bits(superpage_entries_3_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_sx <= bits(superpage_entries_3_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_sr <= bits(superpage_entries_3_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_pw <= bits(superpage_entries_3_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_px <= bits(superpage_entries_3_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_pr <= bits(superpage_entries_3_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_ppp <= bits(superpage_entries_3_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_pal <= bits(superpage_entries_3_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_paa <= bits(superpage_entries_3_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_eff <= bits(superpage_entries_3_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_c <= bits(superpage_entries_3_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_12.io_x_ppn <= bits(special_entry_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_u <= bits(special_entry_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_12.io_x_ae <= bits(special_entry_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_sw <= bits(special_entry_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_sx <= bits(special_entry_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_sr <= bits(special_entry_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_pw <= bits(special_entry_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_px <= bits(special_entry_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_pr <= bits(special_entry_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_ppp <= bits(special_entry_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_pal <= bits(special_entry_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_paa <= bits(special_entry_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_eff <= bits(special_entry_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_c <= bits(special_entry_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier.io_x_ppn <= bits(_GEN_35, 34, 15) @[TLB.scala 86:77]
    entries_barrier.io_x_u <= bits(_GEN_35, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier.io_x_ae <= bits(_GEN_35, 12, 12) @[TLB.scala 86:77]
    entries_barrier.io_x_sw <= bits(_GEN_35, 11, 11) @[TLB.scala 86:77]
    entries_barrier.io_x_sx <= bits(_GEN_35, 10, 10) @[TLB.scala 86:77]
    entries_barrier.io_x_sr <= bits(_GEN_35, 9, 9) @[TLB.scala 86:77]
    entries_barrier.io_x_pw <= bits(_GEN_35, 8, 8) @[TLB.scala 86:77]
    entries_barrier.io_x_px <= bits(_GEN_35, 7, 7) @[TLB.scala 86:77]
    entries_barrier.io_x_pr <= bits(_GEN_35, 6, 6) @[TLB.scala 86:77]
    entries_barrier.io_x_ppp <= bits(_GEN_35, 5, 5) @[TLB.scala 86:77]
    entries_barrier.io_x_pal <= bits(_GEN_35, 4, 4) @[TLB.scala 86:77]
    entries_barrier.io_x_paa <= bits(_GEN_35, 3, 3) @[TLB.scala 86:77]
    entries_barrier.io_x_eff <= bits(_GEN_35, 2, 2) @[TLB.scala 86:77]
    entries_barrier.io_x_c <= bits(_GEN_35, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_1.io_x_ppn <= bits(_GEN_39, 34, 15) @[TLB.scala 86:77]
    entries_barrier_1.io_x_u <= bits(_GEN_39, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_1.io_x_ae <= bits(_GEN_39, 12, 12) @[TLB.scala 86:77]
    entries_barrier_1.io_x_sw <= bits(_GEN_39, 11, 11) @[TLB.scala 86:77]
    entries_barrier_1.io_x_sx <= bits(_GEN_39, 10, 10) @[TLB.scala 86:77]
    entries_barrier_1.io_x_sr <= bits(_GEN_39, 9, 9) @[TLB.scala 86:77]
    entries_barrier_1.io_x_pw <= bits(_GEN_39, 8, 8) @[TLB.scala 86:77]
    entries_barrier_1.io_x_px <= bits(_GEN_39, 7, 7) @[TLB.scala 86:77]
    entries_barrier_1.io_x_pr <= bits(_GEN_39, 6, 6) @[TLB.scala 86:77]
    entries_barrier_1.io_x_ppp <= bits(_GEN_39, 5, 5) @[TLB.scala 86:77]
    entries_barrier_1.io_x_pal <= bits(_GEN_39, 4, 4) @[TLB.scala 86:77]
    entries_barrier_1.io_x_paa <= bits(_GEN_39, 3, 3) @[TLB.scala 86:77]
    entries_barrier_1.io_x_eff <= bits(_GEN_39, 2, 2) @[TLB.scala 86:77]
    entries_barrier_1.io_x_c <= bits(_GEN_39, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_2.io_x_ppn <= bits(_GEN_43, 34, 15) @[TLB.scala 86:77]
    entries_barrier_2.io_x_u <= bits(_GEN_43, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_2.io_x_ae <= bits(_GEN_43, 12, 12) @[TLB.scala 86:77]
    entries_barrier_2.io_x_sw <= bits(_GEN_43, 11, 11) @[TLB.scala 86:77]
    entries_barrier_2.io_x_sx <= bits(_GEN_43, 10, 10) @[TLB.scala 86:77]
    entries_barrier_2.io_x_sr <= bits(_GEN_43, 9, 9) @[TLB.scala 86:77]
    entries_barrier_2.io_x_pw <= bits(_GEN_43, 8, 8) @[TLB.scala 86:77]
    entries_barrier_2.io_x_px <= bits(_GEN_43, 7, 7) @[TLB.scala 86:77]
    entries_barrier_2.io_x_pr <= bits(_GEN_43, 6, 6) @[TLB.scala 86:77]
    entries_barrier_2.io_x_ppp <= bits(_GEN_43, 5, 5) @[TLB.scala 86:77]
    entries_barrier_2.io_x_pal <= bits(_GEN_43, 4, 4) @[TLB.scala 86:77]
    entries_barrier_2.io_x_paa <= bits(_GEN_43, 3, 3) @[TLB.scala 86:77]
    entries_barrier_2.io_x_eff <= bits(_GEN_43, 2, 2) @[TLB.scala 86:77]
    entries_barrier_2.io_x_c <= bits(_GEN_43, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_3.io_x_ppn <= bits(_GEN_47, 34, 15) @[TLB.scala 86:77]
    entries_barrier_3.io_x_u <= bits(_GEN_47, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_3.io_x_ae <= bits(_GEN_47, 12, 12) @[TLB.scala 86:77]
    entries_barrier_3.io_x_sw <= bits(_GEN_47, 11, 11) @[TLB.scala 86:77]
    entries_barrier_3.io_x_sx <= bits(_GEN_47, 10, 10) @[TLB.scala 86:77]
    entries_barrier_3.io_x_sr <= bits(_GEN_47, 9, 9) @[TLB.scala 86:77]
    entries_barrier_3.io_x_pw <= bits(_GEN_47, 8, 8) @[TLB.scala 86:77]
    entries_barrier_3.io_x_px <= bits(_GEN_47, 7, 7) @[TLB.scala 86:77]
    entries_barrier_3.io_x_pr <= bits(_GEN_47, 6, 6) @[TLB.scala 86:77]
    entries_barrier_3.io_x_ppp <= bits(_GEN_47, 5, 5) @[TLB.scala 86:77]
    entries_barrier_3.io_x_pal <= bits(_GEN_47, 4, 4) @[TLB.scala 86:77]
    entries_barrier_3.io_x_paa <= bits(_GEN_47, 3, 3) @[TLB.scala 86:77]
    entries_barrier_3.io_x_eff <= bits(_GEN_47, 2, 2) @[TLB.scala 86:77]
    entries_barrier_3.io_x_c <= bits(_GEN_47, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_4.io_x_ppn <= bits(_GEN_51, 34, 15) @[TLB.scala 86:77]
    entries_barrier_4.io_x_u <= bits(_GEN_51, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_4.io_x_ae <= bits(_GEN_51, 12, 12) @[TLB.scala 86:77]
    entries_barrier_4.io_x_sw <= bits(_GEN_51, 11, 11) @[TLB.scala 86:77]
    entries_barrier_4.io_x_sx <= bits(_GEN_51, 10, 10) @[TLB.scala 86:77]
    entries_barrier_4.io_x_sr <= bits(_GEN_51, 9, 9) @[TLB.scala 86:77]
    entries_barrier_4.io_x_pw <= bits(_GEN_51, 8, 8) @[TLB.scala 86:77]
    entries_barrier_4.io_x_px <= bits(_GEN_51, 7, 7) @[TLB.scala 86:77]
    entries_barrier_4.io_x_pr <= bits(_GEN_51, 6, 6) @[TLB.scala 86:77]
    entries_barrier_4.io_x_ppp <= bits(_GEN_51, 5, 5) @[TLB.scala 86:77]
    entries_barrier_4.io_x_pal <= bits(_GEN_51, 4, 4) @[TLB.scala 86:77]
    entries_barrier_4.io_x_paa <= bits(_GEN_51, 3, 3) @[TLB.scala 86:77]
    entries_barrier_4.io_x_eff <= bits(_GEN_51, 2, 2) @[TLB.scala 86:77]
    entries_barrier_4.io_x_c <= bits(_GEN_51, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_5.io_x_ppn <= bits(_GEN_55, 34, 15) @[TLB.scala 86:77]
    entries_barrier_5.io_x_u <= bits(_GEN_55, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_5.io_x_ae <= bits(_GEN_55, 12, 12) @[TLB.scala 86:77]
    entries_barrier_5.io_x_sw <= bits(_GEN_55, 11, 11) @[TLB.scala 86:77]
    entries_barrier_5.io_x_sx <= bits(_GEN_55, 10, 10) @[TLB.scala 86:77]
    entries_barrier_5.io_x_sr <= bits(_GEN_55, 9, 9) @[TLB.scala 86:77]
    entries_barrier_5.io_x_pw <= bits(_GEN_55, 8, 8) @[TLB.scala 86:77]
    entries_barrier_5.io_x_px <= bits(_GEN_55, 7, 7) @[TLB.scala 86:77]
    entries_barrier_5.io_x_pr <= bits(_GEN_55, 6, 6) @[TLB.scala 86:77]
    entries_barrier_5.io_x_ppp <= bits(_GEN_55, 5, 5) @[TLB.scala 86:77]
    entries_barrier_5.io_x_pal <= bits(_GEN_55, 4, 4) @[TLB.scala 86:77]
    entries_barrier_5.io_x_paa <= bits(_GEN_55, 3, 3) @[TLB.scala 86:77]
    entries_barrier_5.io_x_eff <= bits(_GEN_55, 2, 2) @[TLB.scala 86:77]
    entries_barrier_5.io_x_c <= bits(_GEN_55, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_6.io_x_ppn <= bits(_GEN_59, 34, 15) @[TLB.scala 86:77]
    entries_barrier_6.io_x_u <= bits(_GEN_59, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_6.io_x_ae <= bits(_GEN_59, 12, 12) @[TLB.scala 86:77]
    entries_barrier_6.io_x_sw <= bits(_GEN_59, 11, 11) @[TLB.scala 86:77]
    entries_barrier_6.io_x_sx <= bits(_GEN_59, 10, 10) @[TLB.scala 86:77]
    entries_barrier_6.io_x_sr <= bits(_GEN_59, 9, 9) @[TLB.scala 86:77]
    entries_barrier_6.io_x_pw <= bits(_GEN_59, 8, 8) @[TLB.scala 86:77]
    entries_barrier_6.io_x_px <= bits(_GEN_59, 7, 7) @[TLB.scala 86:77]
    entries_barrier_6.io_x_pr <= bits(_GEN_59, 6, 6) @[TLB.scala 86:77]
    entries_barrier_6.io_x_ppp <= bits(_GEN_59, 5, 5) @[TLB.scala 86:77]
    entries_barrier_6.io_x_pal <= bits(_GEN_59, 4, 4) @[TLB.scala 86:77]
    entries_barrier_6.io_x_paa <= bits(_GEN_59, 3, 3) @[TLB.scala 86:77]
    entries_barrier_6.io_x_eff <= bits(_GEN_59, 2, 2) @[TLB.scala 86:77]
    entries_barrier_6.io_x_c <= bits(_GEN_59, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_7.io_x_ppn <= bits(_GEN_63, 34, 15) @[TLB.scala 86:77]
    entries_barrier_7.io_x_u <= bits(_GEN_63, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_7.io_x_ae <= bits(_GEN_63, 12, 12) @[TLB.scala 86:77]
    entries_barrier_7.io_x_sw <= bits(_GEN_63, 11, 11) @[TLB.scala 86:77]
    entries_barrier_7.io_x_sx <= bits(_GEN_63, 10, 10) @[TLB.scala 86:77]
    entries_barrier_7.io_x_sr <= bits(_GEN_63, 9, 9) @[TLB.scala 86:77]
    entries_barrier_7.io_x_pw <= bits(_GEN_63, 8, 8) @[TLB.scala 86:77]
    entries_barrier_7.io_x_px <= bits(_GEN_63, 7, 7) @[TLB.scala 86:77]
    entries_barrier_7.io_x_pr <= bits(_GEN_63, 6, 6) @[TLB.scala 86:77]
    entries_barrier_7.io_x_ppp <= bits(_GEN_63, 5, 5) @[TLB.scala 86:77]
    entries_barrier_7.io_x_pal <= bits(_GEN_63, 4, 4) @[TLB.scala 86:77]
    entries_barrier_7.io_x_paa <= bits(_GEN_63, 3, 3) @[TLB.scala 86:77]
    entries_barrier_7.io_x_eff <= bits(_GEN_63, 2, 2) @[TLB.scala 86:77]
    entries_barrier_7.io_x_c <= bits(_GEN_63, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_8.io_x_ppn <= bits(superpage_entries_0_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_8.io_x_u <= bits(superpage_entries_0_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_8.io_x_ae <= bits(superpage_entries_0_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_8.io_x_sw <= bits(superpage_entries_0_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_8.io_x_sx <= bits(superpage_entries_0_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_8.io_x_sr <= bits(superpage_entries_0_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_8.io_x_pw <= bits(superpage_entries_0_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_8.io_x_px <= bits(superpage_entries_0_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_8.io_x_pr <= bits(superpage_entries_0_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_8.io_x_ppp <= bits(superpage_entries_0_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_8.io_x_pal <= bits(superpage_entries_0_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_8.io_x_paa <= bits(superpage_entries_0_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_8.io_x_eff <= bits(superpage_entries_0_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_8.io_x_c <= bits(superpage_entries_0_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_9.io_x_ppn <= bits(superpage_entries_1_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_9.io_x_u <= bits(superpage_entries_1_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_9.io_x_ae <= bits(superpage_entries_1_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_9.io_x_sw <= bits(superpage_entries_1_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_9.io_x_sx <= bits(superpage_entries_1_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_9.io_x_sr <= bits(superpage_entries_1_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_9.io_x_pw <= bits(superpage_entries_1_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_9.io_x_px <= bits(superpage_entries_1_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_9.io_x_pr <= bits(superpage_entries_1_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_9.io_x_ppp <= bits(superpage_entries_1_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_9.io_x_pal <= bits(superpage_entries_1_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_9.io_x_paa <= bits(superpage_entries_1_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_9.io_x_eff <= bits(superpage_entries_1_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_9.io_x_c <= bits(superpage_entries_1_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_10.io_x_ppn <= bits(superpage_entries_2_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_10.io_x_u <= bits(superpage_entries_2_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_10.io_x_ae <= bits(superpage_entries_2_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_10.io_x_sw <= bits(superpage_entries_2_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_10.io_x_sx <= bits(superpage_entries_2_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_10.io_x_sr <= bits(superpage_entries_2_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_10.io_x_pw <= bits(superpage_entries_2_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_10.io_x_px <= bits(superpage_entries_2_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_10.io_x_pr <= bits(superpage_entries_2_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_10.io_x_ppp <= bits(superpage_entries_2_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_10.io_x_pal <= bits(superpage_entries_2_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_10.io_x_paa <= bits(superpage_entries_2_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_10.io_x_eff <= bits(superpage_entries_2_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_10.io_x_c <= bits(superpage_entries_2_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_11.io_x_ppn <= bits(superpage_entries_3_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_11.io_x_u <= bits(superpage_entries_3_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_11.io_x_ae <= bits(superpage_entries_3_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_11.io_x_sw <= bits(superpage_entries_3_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_11.io_x_sx <= bits(superpage_entries_3_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_11.io_x_sr <= bits(superpage_entries_3_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_11.io_x_pw <= bits(superpage_entries_3_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_11.io_x_px <= bits(superpage_entries_3_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_11.io_x_pr <= bits(superpage_entries_3_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_11.io_x_ppp <= bits(superpage_entries_3_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_11.io_x_pal <= bits(superpage_entries_3_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_11.io_x_paa <= bits(superpage_entries_3_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_11.io_x_eff <= bits(superpage_entries_3_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_11.io_x_c <= bits(superpage_entries_3_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_12.io_x_ppn <= bits(special_entry_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_12.io_x_u <= bits(special_entry_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_12.io_x_ae <= bits(special_entry_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_12.io_x_sw <= bits(special_entry_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_12.io_x_sx <= bits(special_entry_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_12.io_x_sr <= bits(special_entry_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_12.io_x_pw <= bits(special_entry_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_12.io_x_px <= bits(special_entry_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_12.io_x_pr <= bits(special_entry_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_12.io_x_ppp <= bits(special_entry_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_12.io_x_pal <= bits(special_entry_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_12.io_x_paa <= bits(special_entry_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_12.io_x_eff <= bits(special_entry_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_12.io_x_c <= bits(special_entry_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier.io_x_ppn <= bits(_GEN_35, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_u <= bits(_GEN_35, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier.io_x_ae <= bits(_GEN_35, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_sw <= bits(_GEN_35, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_sx <= bits(_GEN_35, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_sr <= bits(_GEN_35, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_pw <= bits(_GEN_35, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_px <= bits(_GEN_35, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_pr <= bits(_GEN_35, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_ppp <= bits(_GEN_35, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_pal <= bits(_GEN_35, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_paa <= bits(_GEN_35, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_eff <= bits(_GEN_35, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_c <= bits(_GEN_35, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_1.io_x_ppn <= bits(_GEN_39, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_u <= bits(_GEN_39, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_1.io_x_ae <= bits(_GEN_39, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_sw <= bits(_GEN_39, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_sx <= bits(_GEN_39, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_sr <= bits(_GEN_39, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_pw <= bits(_GEN_39, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_px <= bits(_GEN_39, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_pr <= bits(_GEN_39, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_ppp <= bits(_GEN_39, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_pal <= bits(_GEN_39, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_paa <= bits(_GEN_39, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_eff <= bits(_GEN_39, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_c <= bits(_GEN_39, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_2.io_x_ppn <= bits(_GEN_43, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_u <= bits(_GEN_43, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_2.io_x_ae <= bits(_GEN_43, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_sw <= bits(_GEN_43, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_sx <= bits(_GEN_43, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_sr <= bits(_GEN_43, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_pw <= bits(_GEN_43, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_px <= bits(_GEN_43, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_pr <= bits(_GEN_43, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_ppp <= bits(_GEN_43, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_pal <= bits(_GEN_43, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_paa <= bits(_GEN_43, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_eff <= bits(_GEN_43, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_c <= bits(_GEN_43, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_3.io_x_ppn <= bits(_GEN_47, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_u <= bits(_GEN_47, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_3.io_x_ae <= bits(_GEN_47, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_sw <= bits(_GEN_47, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_sx <= bits(_GEN_47, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_sr <= bits(_GEN_47, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_pw <= bits(_GEN_47, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_px <= bits(_GEN_47, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_pr <= bits(_GEN_47, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_ppp <= bits(_GEN_47, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_pal <= bits(_GEN_47, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_paa <= bits(_GEN_47, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_eff <= bits(_GEN_47, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_c <= bits(_GEN_47, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_4.io_x_ppn <= bits(_GEN_51, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_u <= bits(_GEN_51, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_4.io_x_ae <= bits(_GEN_51, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_sw <= bits(_GEN_51, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_sx <= bits(_GEN_51, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_sr <= bits(_GEN_51, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_pw <= bits(_GEN_51, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_px <= bits(_GEN_51, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_pr <= bits(_GEN_51, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_ppp <= bits(_GEN_51, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_pal <= bits(_GEN_51, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_paa <= bits(_GEN_51, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_eff <= bits(_GEN_51, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_c <= bits(_GEN_51, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_5.io_x_ppn <= bits(_GEN_55, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_u <= bits(_GEN_55, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_5.io_x_ae <= bits(_GEN_55, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_sw <= bits(_GEN_55, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_sx <= bits(_GEN_55, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_sr <= bits(_GEN_55, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_pw <= bits(_GEN_55, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_px <= bits(_GEN_55, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_pr <= bits(_GEN_55, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_ppp <= bits(_GEN_55, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_pal <= bits(_GEN_55, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_paa <= bits(_GEN_55, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_eff <= bits(_GEN_55, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_c <= bits(_GEN_55, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_6.io_x_ppn <= bits(_GEN_59, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_u <= bits(_GEN_59, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_6.io_x_ae <= bits(_GEN_59, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_sw <= bits(_GEN_59, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_sx <= bits(_GEN_59, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_sr <= bits(_GEN_59, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_pw <= bits(_GEN_59, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_px <= bits(_GEN_59, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_pr <= bits(_GEN_59, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_ppp <= bits(_GEN_59, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_pal <= bits(_GEN_59, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_paa <= bits(_GEN_59, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_eff <= bits(_GEN_59, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_c <= bits(_GEN_59, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_7.io_x_ppn <= bits(_GEN_63, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_u <= bits(_GEN_63, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_7.io_x_ae <= bits(_GEN_63, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_sw <= bits(_GEN_63, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_sx <= bits(_GEN_63, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_sr <= bits(_GEN_63, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_pw <= bits(_GEN_63, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_px <= bits(_GEN_63, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_pr <= bits(_GEN_63, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_ppp <= bits(_GEN_63, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_pal <= bits(_GEN_63, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_paa <= bits(_GEN_63, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_eff <= bits(_GEN_63, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_c <= bits(_GEN_63, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_8.io_x_ppn <= bits(superpage_entries_0_data_0, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_u <= bits(superpage_entries_0_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_8.io_x_ae <= bits(superpage_entries_0_data_0, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_sw <= bits(superpage_entries_0_data_0, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_sx <= bits(superpage_entries_0_data_0, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_sr <= bits(superpage_entries_0_data_0, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_pw <= bits(superpage_entries_0_data_0, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_px <= bits(superpage_entries_0_data_0, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_pr <= bits(superpage_entries_0_data_0, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_ppp <= bits(superpage_entries_0_data_0, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_pal <= bits(superpage_entries_0_data_0, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_paa <= bits(superpage_entries_0_data_0, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_eff <= bits(superpage_entries_0_data_0, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_c <= bits(superpage_entries_0_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_9.io_x_ppn <= bits(superpage_entries_1_data_0, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_u <= bits(superpage_entries_1_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_9.io_x_ae <= bits(superpage_entries_1_data_0, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_sw <= bits(superpage_entries_1_data_0, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_sx <= bits(superpage_entries_1_data_0, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_sr <= bits(superpage_entries_1_data_0, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_pw <= bits(superpage_entries_1_data_0, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_px <= bits(superpage_entries_1_data_0, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_pr <= bits(superpage_entries_1_data_0, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_ppp <= bits(superpage_entries_1_data_0, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_pal <= bits(superpage_entries_1_data_0, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_paa <= bits(superpage_entries_1_data_0, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_eff <= bits(superpage_entries_1_data_0, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_c <= bits(superpage_entries_1_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_10.io_x_ppn <= bits(superpage_entries_2_data_0, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_u <= bits(superpage_entries_2_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_10.io_x_ae <= bits(superpage_entries_2_data_0, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_sw <= bits(superpage_entries_2_data_0, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_sx <= bits(superpage_entries_2_data_0, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_sr <= bits(superpage_entries_2_data_0, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_pw <= bits(superpage_entries_2_data_0, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_px <= bits(superpage_entries_2_data_0, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_pr <= bits(superpage_entries_2_data_0, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_ppp <= bits(superpage_entries_2_data_0, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_pal <= bits(superpage_entries_2_data_0, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_paa <= bits(superpage_entries_2_data_0, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_eff <= bits(superpage_entries_2_data_0, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_c <= bits(superpage_entries_2_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_11.io_x_ppn <= bits(superpage_entries_3_data_0, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_u <= bits(superpage_entries_3_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_11.io_x_ae <= bits(superpage_entries_3_data_0, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_sw <= bits(superpage_entries_3_data_0, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_sx <= bits(superpage_entries_3_data_0, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_sr <= bits(superpage_entries_3_data_0, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_pw <= bits(superpage_entries_3_data_0, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_px <= bits(superpage_entries_3_data_0, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_pr <= bits(superpage_entries_3_data_0, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_ppp <= bits(superpage_entries_3_data_0, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_pal <= bits(superpage_entries_3_data_0, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_paa <= bits(superpage_entries_3_data_0, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_eff <= bits(superpage_entries_3_data_0, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_c <= bits(superpage_entries_3_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    state_vec_0 <= mux(reset, UInt<7>("h0"), _GEN_651) @[Replacement.scala 305:{17,17}]
    state_reg_1 <= mux(reset, UInt<3>("h0"), _GEN_652) @[Replacement.scala 168:{70,70}]
    printf(clock, and(io_sfence_valid, _T_52), "Assertion failed\n    at TLB.scala:385 assert(!io.sfence.bits.rs1 || (io.sfence.bits.addr >> pgIdxBits) === vpn)\n") @[TLB.scala 385:13]
    stop(clock, and(io_sfence_valid, _T_52), 1) @[TLB.scala 385:13]

  module MaxPeriodFibonacciLFSR_1 :
    input clock : Clock
    input reset : UInt<1>
    input io_increment : UInt<1>
    output io_out_0 : UInt<1>
    output io_out_1 : UInt<1>
    output io_out_2 : UInt<1>
    output io_out_3 : UInt<1>
    output io_out_4 : UInt<1>
    output io_out_5 : UInt<1>
    output io_out_6 : UInt<1>
    output io_out_7 : UInt<1>
    output io_out_8 : UInt<1>
    output io_out_9 : UInt<1>
    output io_out_10 : UInt<1>
    output io_out_11 : UInt<1>
    output io_out_12 : UInt<1>
    output io_out_13 : UInt<1>
    output io_out_14 : UInt<1>
    output io_out_15 : UInt<1>

    reg state_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_0) @[PRNG.scala 47:50]
    reg state_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_1) @[PRNG.scala 47:50]
    reg state_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_2) @[PRNG.scala 47:50]
    reg state_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_3) @[PRNG.scala 47:50]
    reg state_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_4) @[PRNG.scala 47:50]
    reg state_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_5) @[PRNG.scala 47:50]
    reg state_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_6) @[PRNG.scala 47:50]
    reg state_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_7) @[PRNG.scala 47:50]
    reg state_8 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_8) @[PRNG.scala 47:50]
    reg state_9 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_9) @[PRNG.scala 47:50]
    reg state_10 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_10) @[PRNG.scala 47:50]
    reg state_11 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_11) @[PRNG.scala 47:50]
    reg state_12 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_12) @[PRNG.scala 47:50]
    reg state_13 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_13) @[PRNG.scala 47:50]
    reg state_14 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_14) @[PRNG.scala 47:50]
    reg state_15 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), state_15) @[PRNG.scala 47:50]
    node _T = xor(state_15, state_13) @[LFSR.scala 15:41]
    node _T_1 = xor(_T, state_12) @[LFSR.scala 15:41]
    node _T_2 = xor(_T_1, state_10) @[LFSR.scala 15:41]
    node _GEN_0 = mux(io_increment, _T_2, state_0) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_1 = mux(io_increment, state_0, state_1) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_2 = mux(io_increment, state_1, state_2) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_3 = mux(io_increment, state_2, state_3) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_4 = mux(io_increment, state_3, state_4) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_5 = mux(io_increment, state_4, state_5) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_6 = mux(io_increment, state_5, state_6) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_7 = mux(io_increment, state_6, state_7) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_8 = mux(io_increment, state_7, state_8) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_9 = mux(io_increment, state_8, state_9) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_10 = mux(io_increment, state_9, state_10) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_11 = mux(io_increment, state_10, state_11) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_12 = mux(io_increment, state_11, state_12) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_13 = mux(io_increment, state_12, state_13) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_14 = mux(io_increment, state_13, state_14) @[PRNG.scala 61:23 62:11 47:50]
    node _GEN_15 = mux(io_increment, state_14, state_15) @[PRNG.scala 61:23 62:11 47:50]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out_0 <= state_0 @[PRNG.scala 69:10]
    io_out_1 <= state_1 @[PRNG.scala 69:10]
    io_out_2 <= state_2 @[PRNG.scala 69:10]
    io_out_3 <= state_3 @[PRNG.scala 69:10]
    io_out_4 <= state_4 @[PRNG.scala 69:10]
    io_out_5 <= state_5 @[PRNG.scala 69:10]
    io_out_6 <= state_6 @[PRNG.scala 69:10]
    io_out_7 <= state_7 @[PRNG.scala 69:10]
    io_out_8 <= state_8 @[PRNG.scala 69:10]
    io_out_9 <= state_9 @[PRNG.scala 69:10]
    io_out_10 <= state_10 @[PRNG.scala 69:10]
    io_out_11 <= state_11 @[PRNG.scala 69:10]
    io_out_12 <= state_12 @[PRNG.scala 69:10]
    io_out_13 <= state_13 @[PRNG.scala 69:10]
    io_out_14 <= state_14 @[PRNG.scala 69:10]
    io_out_15 <= state_15 @[PRNG.scala 69:10]
    state_0 <= or(reset, _GEN_0) @[PRNG.scala 47:{50,50}]
    state_1 <= mux(reset, UInt<1>("h0"), _GEN_1) @[PRNG.scala 47:{50,50}]
    state_2 <= mux(reset, UInt<1>("h0"), _GEN_2) @[PRNG.scala 47:{50,50}]
    state_3 <= mux(reset, UInt<1>("h0"), _GEN_3) @[PRNG.scala 47:{50,50}]
    state_4 <= mux(reset, UInt<1>("h0"), _GEN_4) @[PRNG.scala 47:{50,50}]
    state_5 <= mux(reset, UInt<1>("h0"), _GEN_5) @[PRNG.scala 47:{50,50}]
    state_6 <= mux(reset, UInt<1>("h0"), _GEN_6) @[PRNG.scala 47:{50,50}]
    state_7 <= mux(reset, UInt<1>("h0"), _GEN_7) @[PRNG.scala 47:{50,50}]
    state_8 <= mux(reset, UInt<1>("h0"), _GEN_8) @[PRNG.scala 47:{50,50}]
    state_9 <= mux(reset, UInt<1>("h0"), _GEN_9) @[PRNG.scala 47:{50,50}]
    state_10 <= mux(reset, UInt<1>("h0"), _GEN_10) @[PRNG.scala 47:{50,50}]
    state_11 <= mux(reset, UInt<1>("h0"), _GEN_11) @[PRNG.scala 47:{50,50}]
    state_12 <= mux(reset, UInt<1>("h0"), _GEN_12) @[PRNG.scala 47:{50,50}]
    state_13 <= mux(reset, UInt<1>("h0"), _GEN_13) @[PRNG.scala 47:{50,50}]
    state_14 <= mux(reset, UInt<1>("h0"), _GEN_14) @[PRNG.scala 47:{50,50}]
    state_15 <= mux(reset, UInt<1>("h0"), _GEN_15) @[PRNG.scala 47:{50,50}]

  module DCacheModuleImpl_Anon_1 :
    input io_in_0_valid : UInt<1>
    input io_in_0_bits_addr : UInt<40>
    input io_in_0_bits_idx : UInt<6>
    input io_in_2_valid : UInt<1>
    input io_in_2_bits_addr : UInt<40>
    input io_in_2_bits_idx : UInt<6>
    input io_in_2_bits_way_en : UInt<4>
    input io_in_2_bits_data : UInt<22>
    input io_in_3_valid : UInt<1>
    input io_in_3_bits_addr : UInt<40>
    input io_in_3_bits_idx : UInt<6>
    input io_in_3_bits_way_en : UInt<4>
    input io_in_3_bits_data : UInt<22>
    output io_in_4_ready : UInt<1>
    input io_in_4_valid : UInt<1>
    input io_in_4_bits_addr : UInt<40>
    input io_in_4_bits_idx : UInt<6>
    input io_in_4_bits_way_en : UInt<4>
    input io_in_4_bits_data : UInt<22>
    output io_in_5_ready : UInt<1>
    input io_in_5_valid : UInt<1>
    input io_in_5_bits_addr : UInt<40>
    input io_in_5_bits_idx : UInt<6>
    output io_in_6_ready : UInt<1>
    input io_in_6_valid : UInt<1>
    input io_in_6_bits_addr : UInt<40>
    input io_in_6_bits_idx : UInt<6>
    input io_in_6_bits_way_en : UInt<4>
    input io_in_6_bits_data : UInt<22>
    output io_in_7_ready : UInt<1>
    input io_in_7_valid : UInt<1>
    input io_in_7_bits_addr : UInt<40>
    input io_in_7_bits_idx : UInt<6>
    input io_in_7_bits_way_en : UInt<4>
    input io_in_7_bits_data : UInt<22>
    output io_out_valid : UInt<1>
    output io_out_bits_write : UInt<1>
    output io_out_bits_addr : UInt<40>
    output io_out_bits_idx : UInt<6>
    output io_out_bits_way_en : UInt<4>
    output io_out_bits_data : UInt<22>

    skip
    node _GEN_1 = mux(io_in_6_valid, io_in_6_bits_data, io_in_7_bits_data) @[Arbiter.scala 124:15 126:27 128:19]
    node _GEN_2 = mux(io_in_6_valid, io_in_6_bits_way_en, io_in_7_bits_way_en) @[Arbiter.scala 124:15 126:27 128:19]
    node _GEN_3 = mux(io_in_6_valid, io_in_6_bits_idx, io_in_7_bits_idx) @[Arbiter.scala 124:15 126:27 128:19]
    node _GEN_4 = mux(io_in_6_valid, io_in_6_bits_addr, io_in_7_bits_addr) @[Arbiter.scala 124:15 126:27 128:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_13 = mux(io_in_4_valid, io_in_4_bits_data, _GEN_1) @[Arbiter.scala 126:27 128:19]
    node _GEN_14 = mux(io_in_4_valid, io_in_4_bits_way_en, _GEN_2) @[Arbiter.scala 126:27 128:19]
    node _GEN_15 = mux(io_in_4_valid, io_in_4_bits_idx, _GEN_3) @[Arbiter.scala 126:27 128:19]
    node _GEN_16 = mux(io_in_4_valid, io_in_4_bits_addr, _GEN_4) @[Arbiter.scala 126:27 128:19]
    skip
    skip
    node _GEN_19 = mux(io_in_3_valid, io_in_3_bits_data, _GEN_13) @[Arbiter.scala 126:27 128:19]
    node _GEN_20 = mux(io_in_3_valid, io_in_3_bits_way_en, _GEN_14) @[Arbiter.scala 126:27 128:19]
    node _GEN_21 = mux(io_in_3_valid, io_in_3_bits_idx, _GEN_15) @[Arbiter.scala 126:27 128:19]
    node _GEN_22 = mux(io_in_3_valid, io_in_3_bits_addr, _GEN_16) @[Arbiter.scala 126:27 128:19]
    node _GEN_23 = or(io_in_3_valid, io_in_4_valid) @[Arbiter.scala 126:27 128:19]
    skip
    node _GEN_25 = mux(io_in_2_valid, io_in_2_bits_data, _GEN_19) @[Arbiter.scala 126:27 128:19]
    node _GEN_26 = mux(io_in_2_valid, io_in_2_bits_way_en, _GEN_20) @[Arbiter.scala 126:27 128:19]
    node _GEN_27 = mux(io_in_2_valid, io_in_2_bits_idx, _GEN_21) @[Arbiter.scala 126:27 128:19]
    node _GEN_28 = mux(io_in_2_valid, io_in_2_bits_addr, _GEN_22) @[Arbiter.scala 126:27 128:19]
    node _GEN_29 = or(io_in_2_valid, _GEN_23) @[Arbiter.scala 126:27 128:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _grant_T_1 = or(io_in_0_valid, io_in_2_valid) @[Arbiter.scala 31:68]
    node _grant_T_2 = or(_grant_T_1, io_in_3_valid) @[Arbiter.scala 31:68]
    node _grant_T_3 = or(_grant_T_2, io_in_4_valid) @[Arbiter.scala 31:68]
    skip
    node _grant_T_5 = or(_grant_T_3, io_in_6_valid) @[Arbiter.scala 31:68]
    skip
    skip
    skip
    skip
    skip
    skip
    node grant_7 = not(_grant_T_5) @[Arbiter.scala 31:78]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_out_valid_T = not(grant_7) @[Arbiter.scala 135:19]
    skip
    skip
    skip
    skip
    skip
    io_in_4_ready <= not(_grant_T_2) @[Arbiter.scala 31:78]
    io_in_5_ready <= not(_grant_T_3) @[Arbiter.scala 31:78]
    io_in_6_ready <= not(_grant_T_3) @[Arbiter.scala 31:78]
    io_in_7_ready <= not(_grant_T_5) @[Arbiter.scala 31:78]
    io_out_valid <= or(_io_out_valid_T, io_in_7_valid) @[Arbiter.scala 135:31]
    io_out_bits_write <= or(io_in_0_valid, _GEN_29) @[Arbiter.scala 126:27 128:19]
    io_out_bits_addr <= mux(io_in_0_valid, io_in_0_bits_addr, _GEN_28) @[Arbiter.scala 126:27 128:19]
    io_out_bits_idx <= mux(io_in_0_valid, io_in_0_bits_idx, _GEN_27) @[Arbiter.scala 126:27 128:19]
    io_out_bits_way_en <= mux(io_in_0_valid, UInt<4>("hf"), _GEN_26) @[Arbiter.scala 126:27 128:19]
    io_out_bits_data <= mux(io_in_0_valid, UInt<22>("h0"), _GEN_25) @[Arbiter.scala 126:27 128:19]
    skip

  module DCacheDataArray :
    input clock : Clock
    input io_req_valid : UInt<1>
    input io_req_bits_addr : UInt<12>
    input io_req_bits_write : UInt<1>
    input io_req_bits_wdata : UInt<64>
    input io_req_bits_eccMask : UInt<8>
    input io_req_bits_way_en : UInt<4>
    output io_resp_0 : UInt<64>
    output io_resp_1 : UInt<64>
    output io_resp_2 : UInt<64>
    output io_resp_3 : UInt<64>

    mem data_arrays_0_0 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_1 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_2 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_3 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_4 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_5 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_6 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_7 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_8 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_9 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_10 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_11 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_12 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_13 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_14 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_15 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_16 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_17 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_18 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_19 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_20 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_21 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_22 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_23 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_24 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_25 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_26 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_27 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_28 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_29 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_30 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    mem data_arrays_0_31 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<8>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_data
      writer => rdata_MPORT
      read-under-write => undefined
    node eccMask_0 = bits(io_req_bits_eccMask, 0, 0) @[DCache.scala 50:82]
    node eccMask_1 = bits(io_req_bits_eccMask, 1, 1) @[DCache.scala 50:82]
    node eccMask_2 = bits(io_req_bits_eccMask, 2, 2) @[DCache.scala 50:82]
    node eccMask_3 = bits(io_req_bits_eccMask, 3, 3) @[DCache.scala 50:82]
    node eccMask_4 = bits(io_req_bits_eccMask, 4, 4) @[DCache.scala 50:82]
    node eccMask_5 = bits(io_req_bits_eccMask, 5, 5) @[DCache.scala 50:82]
    node eccMask_6 = bits(io_req_bits_eccMask, 6, 6) @[DCache.scala 50:82]
    node eccMask_7 = bits(io_req_bits_eccMask, 7, 7) @[DCache.scala 50:82]
    node _wMask_T = bits(io_req_bits_way_en, 0, 0) @[DCache.scala 51:108]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _wMask_T_8 = bits(io_req_bits_way_en, 1, 1) @[DCache.scala 51:108]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _wMask_T_16 = bits(io_req_bits_way_en, 2, 2) @[DCache.scala 51:108]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _wMask_T_24 = bits(io_req_bits_way_en, 3, 3) @[DCache.scala 51:108]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _rdata_data_T = not(io_req_bits_write) @[DCache.scala 71:42]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node rdata_lo_lo = cat(data_arrays_0_1.rdata_data.data, data_arrays_0_0.rdata_data.data) @[Cat.scala 30:58]
    node rdata_lo_hi = cat(data_arrays_0_3.rdata_data.data, data_arrays_0_2.rdata_data.data) @[Cat.scala 30:58]
    node rdata_lo = cat(rdata_lo_hi, rdata_lo_lo) @[Cat.scala 30:58]
    node rdata_hi_lo = cat(data_arrays_0_5.rdata_data.data, data_arrays_0_4.rdata_data.data) @[Cat.scala 30:58]
    node rdata_hi_hi = cat(data_arrays_0_7.rdata_data.data, data_arrays_0_6.rdata_data.data) @[Cat.scala 30:58]
    node rdata_hi = cat(rdata_hi_hi, rdata_hi_lo) @[Cat.scala 30:58]
    skip
    node lo_lo = cat(data_arrays_0_9.rdata_data.data, data_arrays_0_8.rdata_data.data) @[Cat.scala 30:58]
    node lo_hi = cat(data_arrays_0_11.rdata_data.data, data_arrays_0_10.rdata_data.data) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(data_arrays_0_13.rdata_data.data, data_arrays_0_12.rdata_data.data) @[Cat.scala 30:58]
    node hi_hi = cat(data_arrays_0_15.rdata_data.data, data_arrays_0_14.rdata_data.data) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    skip
    node lo_lo_1 = cat(data_arrays_0_17.rdata_data.data, data_arrays_0_16.rdata_data.data) @[Cat.scala 30:58]
    node lo_hi_1 = cat(data_arrays_0_19.rdata_data.data, data_arrays_0_18.rdata_data.data) @[Cat.scala 30:58]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[Cat.scala 30:58]
    node hi_lo_1 = cat(data_arrays_0_21.rdata_data.data, data_arrays_0_20.rdata_data.data) @[Cat.scala 30:58]
    node hi_hi_1 = cat(data_arrays_0_23.rdata_data.data, data_arrays_0_22.rdata_data.data) @[Cat.scala 30:58]
    node hi_1 = cat(hi_hi_1, hi_lo_1) @[Cat.scala 30:58]
    skip
    node lo_lo_2 = cat(data_arrays_0_25.rdata_data.data, data_arrays_0_24.rdata_data.data) @[Cat.scala 30:58]
    node lo_hi_2 = cat(data_arrays_0_27.rdata_data.data, data_arrays_0_26.rdata_data.data) @[Cat.scala 30:58]
    node lo_2 = cat(lo_hi_2, lo_lo_2) @[Cat.scala 30:58]
    node hi_lo_2 = cat(data_arrays_0_29.rdata_data.data, data_arrays_0_28.rdata_data.data) @[Cat.scala 30:58]
    node hi_hi_2 = cat(data_arrays_0_31.rdata_data.data, data_arrays_0_30.rdata_data.data) @[Cat.scala 30:58]
    node hi_2 = cat(hi_hi_2, hi_lo_2) @[Cat.scala 30:58]
    skip
    io_resp_0 <= cat(rdata_hi, rdata_lo) @[Cat.scala 30:58]
    io_resp_1 <= cat(hi, lo) @[Cat.scala 30:58]
    io_resp_2 <= cat(hi_1, lo_1) @[Cat.scala 30:58]
    io_resp_3 <= cat(hi_2, lo_2) @[Cat.scala 30:58]
    data_arrays_0_0.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_1.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_2.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_3.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_4.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_5.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_6.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_7.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_8.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_9.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_10.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_11.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_12.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_13.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_14.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_15.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_16.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_17.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_18.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_19.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_20.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_21.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_22.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_23.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_24.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_25.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_26.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_27.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_28.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_29.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_30.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_31.rdata_data.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_0.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_1.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_2.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_3.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_4.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_5.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_6.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_7.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_8.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_9.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_10.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_11.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_12.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_13.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_14.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_15.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_16.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_17.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_18.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_19.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_20.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_21.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_22.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_23.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_24.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_25.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_26.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_27.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_28.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_29.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_30.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_31.rdata_data.en <= and(io_req_valid, _rdata_data_T) @[DCache.scala 71:39]
    data_arrays_0_0.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_1.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_2.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_3.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_4.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_5.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_6.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_7.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_8.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_9.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_10.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_11.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_12.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_13.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_14.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_15.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_16.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_17.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_18.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_19.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_20.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_21.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_22.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_23.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_24.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_25.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_26.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_27.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_28.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_29.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_30.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_31.rdata_data.clk <= clock @[DCache.scala 71:{26,26}]
    data_arrays_0_0.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_1.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_2.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_3.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_4.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_5.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_6.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_7.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_8.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_9.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_10.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_11.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_12.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_13.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_14.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_15.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_16.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_17.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_18.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_19.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_20.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_21.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_22.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_23.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_24.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_25.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_26.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_27.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_28.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_29.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_30.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_31.rdata_MPORT.addr <= shr(io_req_bits_addr, 3) @[DCache.scala 53:31]
    data_arrays_0_0.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_1.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_2.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_3.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_4.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_5.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_6.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_7.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_8.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_9.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_10.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_11.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_12.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_13.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_14.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_15.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_16.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_17.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_18.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_19.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_20.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_21.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_22.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_23.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_24.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_25.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_26.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_27.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_28.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_29.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_30.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_31.rdata_MPORT.en <= and(io_req_valid, io_req_bits_write) @[DCache.scala 66:17]
    data_arrays_0_0.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_1.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_2.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_3.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_4.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_5.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_6.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_7.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_8.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_9.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_10.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_11.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_12.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_13.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_14.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_15.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_16.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_17.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_18.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_19.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_20.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_21.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_22.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_23.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_24.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_25.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_26.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_27.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_28.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_29.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_30.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_31.rdata_MPORT.clk <= clock @[DCache.scala 66:39]
    data_arrays_0_0.rdata_MPORT.data <= bits(io_req_bits_wdata, 7, 0) @[package.scala 202:50]
    data_arrays_0_1.rdata_MPORT.data <= bits(io_req_bits_wdata, 15, 8) @[package.scala 202:50]
    data_arrays_0_2.rdata_MPORT.data <= bits(io_req_bits_wdata, 23, 16) @[package.scala 202:50]
    data_arrays_0_3.rdata_MPORT.data <= bits(io_req_bits_wdata, 31, 24) @[package.scala 202:50]
    data_arrays_0_4.rdata_MPORT.data <= bits(io_req_bits_wdata, 39, 32) @[package.scala 202:50]
    data_arrays_0_5.rdata_MPORT.data <= bits(io_req_bits_wdata, 47, 40) @[package.scala 202:50]
    data_arrays_0_6.rdata_MPORT.data <= bits(io_req_bits_wdata, 55, 48) @[package.scala 202:50]
    data_arrays_0_7.rdata_MPORT.data <= bits(io_req_bits_wdata, 63, 56) @[package.scala 202:50]
    data_arrays_0_8.rdata_MPORT.data <= bits(io_req_bits_wdata, 7, 0) @[package.scala 202:50]
    data_arrays_0_9.rdata_MPORT.data <= bits(io_req_bits_wdata, 15, 8) @[package.scala 202:50]
    data_arrays_0_10.rdata_MPORT.data <= bits(io_req_bits_wdata, 23, 16) @[package.scala 202:50]
    data_arrays_0_11.rdata_MPORT.data <= bits(io_req_bits_wdata, 31, 24) @[package.scala 202:50]
    data_arrays_0_12.rdata_MPORT.data <= bits(io_req_bits_wdata, 39, 32) @[package.scala 202:50]
    data_arrays_0_13.rdata_MPORT.data <= bits(io_req_bits_wdata, 47, 40) @[package.scala 202:50]
    data_arrays_0_14.rdata_MPORT.data <= bits(io_req_bits_wdata, 55, 48) @[package.scala 202:50]
    data_arrays_0_15.rdata_MPORT.data <= bits(io_req_bits_wdata, 63, 56) @[package.scala 202:50]
    data_arrays_0_16.rdata_MPORT.data <= bits(io_req_bits_wdata, 7, 0) @[package.scala 202:50]
    data_arrays_0_17.rdata_MPORT.data <= bits(io_req_bits_wdata, 15, 8) @[package.scala 202:50]
    data_arrays_0_18.rdata_MPORT.data <= bits(io_req_bits_wdata, 23, 16) @[package.scala 202:50]
    data_arrays_0_19.rdata_MPORT.data <= bits(io_req_bits_wdata, 31, 24) @[package.scala 202:50]
    data_arrays_0_20.rdata_MPORT.data <= bits(io_req_bits_wdata, 39, 32) @[package.scala 202:50]
    data_arrays_0_21.rdata_MPORT.data <= bits(io_req_bits_wdata, 47, 40) @[package.scala 202:50]
    data_arrays_0_22.rdata_MPORT.data <= bits(io_req_bits_wdata, 55, 48) @[package.scala 202:50]
    data_arrays_0_23.rdata_MPORT.data <= bits(io_req_bits_wdata, 63, 56) @[package.scala 202:50]
    data_arrays_0_24.rdata_MPORT.data <= bits(io_req_bits_wdata, 7, 0) @[package.scala 202:50]
    data_arrays_0_25.rdata_MPORT.data <= bits(io_req_bits_wdata, 15, 8) @[package.scala 202:50]
    data_arrays_0_26.rdata_MPORT.data <= bits(io_req_bits_wdata, 23, 16) @[package.scala 202:50]
    data_arrays_0_27.rdata_MPORT.data <= bits(io_req_bits_wdata, 31, 24) @[package.scala 202:50]
    data_arrays_0_28.rdata_MPORT.data <= bits(io_req_bits_wdata, 39, 32) @[package.scala 202:50]
    data_arrays_0_29.rdata_MPORT.data <= bits(io_req_bits_wdata, 47, 40) @[package.scala 202:50]
    data_arrays_0_30.rdata_MPORT.data <= bits(io_req_bits_wdata, 55, 48) @[package.scala 202:50]
    data_arrays_0_31.rdata_MPORT.data <= bits(io_req_bits_wdata, 63, 56) @[package.scala 202:50]
    data_arrays_0_0.rdata_MPORT.mask <= and(eccMask_0, _wMask_T) @[DCache.scala 51:87]
    data_arrays_0_1.rdata_MPORT.mask <= and(eccMask_1, _wMask_T) @[DCache.scala 51:87]
    data_arrays_0_2.rdata_MPORT.mask <= and(eccMask_2, _wMask_T) @[DCache.scala 51:87]
    data_arrays_0_3.rdata_MPORT.mask <= and(eccMask_3, _wMask_T) @[DCache.scala 51:87]
    data_arrays_0_4.rdata_MPORT.mask <= and(eccMask_4, _wMask_T) @[DCache.scala 51:87]
    data_arrays_0_5.rdata_MPORT.mask <= and(eccMask_5, _wMask_T) @[DCache.scala 51:87]
    data_arrays_0_6.rdata_MPORT.mask <= and(eccMask_6, _wMask_T) @[DCache.scala 51:87]
    data_arrays_0_7.rdata_MPORT.mask <= and(eccMask_7, _wMask_T) @[DCache.scala 51:87]
    data_arrays_0_8.rdata_MPORT.mask <= and(eccMask_0, _wMask_T_8) @[DCache.scala 51:87]
    data_arrays_0_9.rdata_MPORT.mask <= and(eccMask_1, _wMask_T_8) @[DCache.scala 51:87]
    data_arrays_0_10.rdata_MPORT.mask <= and(eccMask_2, _wMask_T_8) @[DCache.scala 51:87]
    data_arrays_0_11.rdata_MPORT.mask <= and(eccMask_3, _wMask_T_8) @[DCache.scala 51:87]
    data_arrays_0_12.rdata_MPORT.mask <= and(eccMask_4, _wMask_T_8) @[DCache.scala 51:87]
    data_arrays_0_13.rdata_MPORT.mask <= and(eccMask_5, _wMask_T_8) @[DCache.scala 51:87]
    data_arrays_0_14.rdata_MPORT.mask <= and(eccMask_6, _wMask_T_8) @[DCache.scala 51:87]
    data_arrays_0_15.rdata_MPORT.mask <= and(eccMask_7, _wMask_T_8) @[DCache.scala 51:87]
    data_arrays_0_16.rdata_MPORT.mask <= and(eccMask_0, _wMask_T_16) @[DCache.scala 51:87]
    data_arrays_0_17.rdata_MPORT.mask <= and(eccMask_1, _wMask_T_16) @[DCache.scala 51:87]
    data_arrays_0_18.rdata_MPORT.mask <= and(eccMask_2, _wMask_T_16) @[DCache.scala 51:87]
    data_arrays_0_19.rdata_MPORT.mask <= and(eccMask_3, _wMask_T_16) @[DCache.scala 51:87]
    data_arrays_0_20.rdata_MPORT.mask <= and(eccMask_4, _wMask_T_16) @[DCache.scala 51:87]
    data_arrays_0_21.rdata_MPORT.mask <= and(eccMask_5, _wMask_T_16) @[DCache.scala 51:87]
    data_arrays_0_22.rdata_MPORT.mask <= and(eccMask_6, _wMask_T_16) @[DCache.scala 51:87]
    data_arrays_0_23.rdata_MPORT.mask <= and(eccMask_7, _wMask_T_16) @[DCache.scala 51:87]
    data_arrays_0_24.rdata_MPORT.mask <= and(eccMask_0, _wMask_T_24) @[DCache.scala 51:87]
    data_arrays_0_25.rdata_MPORT.mask <= and(eccMask_1, _wMask_T_24) @[DCache.scala 51:87]
    data_arrays_0_26.rdata_MPORT.mask <= and(eccMask_2, _wMask_T_24) @[DCache.scala 51:87]
    data_arrays_0_27.rdata_MPORT.mask <= and(eccMask_3, _wMask_T_24) @[DCache.scala 51:87]
    data_arrays_0_28.rdata_MPORT.mask <= and(eccMask_4, _wMask_T_24) @[DCache.scala 51:87]
    data_arrays_0_29.rdata_MPORT.mask <= and(eccMask_5, _wMask_T_24) @[DCache.scala 51:87]
    data_arrays_0_30.rdata_MPORT.mask <= and(eccMask_6, _wMask_T_24) @[DCache.scala 51:87]
    data_arrays_0_31.rdata_MPORT.mask <= and(eccMask_7, _wMask_T_24) @[DCache.scala 51:87]

  module DCacheModuleImpl_Anon_2 :
    input io_in_0_valid : UInt<1>
    input io_in_0_bits_addr : UInt<12>
    input io_in_0_bits_write : UInt<1>
    input io_in_0_bits_wdata : UInt<64>
    input io_in_0_bits_eccMask : UInt<8>
    input io_in_0_bits_way_en : UInt<4>
    output io_in_1_ready : UInt<1>
    input io_in_1_valid : UInt<1>
    input io_in_1_bits_addr : UInt<12>
    input io_in_1_bits_write : UInt<1>
    input io_in_1_bits_wdata : UInt<64>
    input io_in_1_bits_way_en : UInt<4>
    output io_in_2_ready : UInt<1>
    input io_in_2_valid : UInt<1>
    input io_in_2_bits_addr : UInt<12>
    input io_in_2_bits_wdata : UInt<64>
    output io_in_3_ready : UInt<1>
    input io_in_3_valid : UInt<1>
    input io_in_3_bits_addr : UInt<12>
    input io_in_3_bits_wdata : UInt<64>
    input io_in_3_bits_wordMask : UInt<1>
    output io_out_valid : UInt<1>
    output io_out_bits_addr : UInt<12>
    output io_out_bits_write : UInt<1>
    output io_out_bits_wdata : UInt<64>
    output io_out_bits_eccMask : UInt<8>
    output io_out_bits_way_en : UInt<4>

    skip
    skip
    skip
    skip
    node _GEN_4 = mux(io_in_2_valid, io_in_2_bits_wdata, io_in_3_bits_wdata) @[Arbiter.scala 124:15 126:27 128:19]
    skip
    node _GEN_6 = mux(io_in_2_valid, io_in_2_bits_addr, io_in_3_bits_addr) @[Arbiter.scala 124:15 126:27 128:19]
    skip
    node _GEN_8 = mux(io_in_1_valid, io_in_1_bits_way_en, UInt<4>("hf")) @[Arbiter.scala 126:27 128:19]
    skip
    skip
    node _GEN_11 = mux(io_in_1_valid, io_in_1_bits_wdata, _GEN_4) @[Arbiter.scala 126:27 128:19]
    node _GEN_12 = and(io_in_1_valid, io_in_1_bits_write) @[Arbiter.scala 126:27 128:19]
    node _GEN_13 = mux(io_in_1_valid, io_in_1_bits_addr, _GEN_6) @[Arbiter.scala 126:27 128:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _grant_T = or(io_in_0_valid, io_in_1_valid) @[Arbiter.scala 31:68]
    node _grant_T_1 = or(_grant_T, io_in_2_valid) @[Arbiter.scala 31:68]
    skip
    skip
    node grant_3 = not(_grant_T_1) @[Arbiter.scala 31:78]
    skip
    skip
    skip
    skip
    node _io_out_valid_T = not(grant_3) @[Arbiter.scala 135:19]
    skip
    skip
    io_in_1_ready <= not(io_in_0_valid) @[Arbiter.scala 31:78]
    io_in_2_ready <= not(_grant_T) @[Arbiter.scala 31:78]
    io_in_3_ready <= not(_grant_T_1) @[Arbiter.scala 31:78]
    io_out_valid <= or(_io_out_valid_T, io_in_3_valid) @[Arbiter.scala 135:31]
    io_out_bits_addr <= mux(io_in_0_valid, io_in_0_bits_addr, _GEN_13) @[Arbiter.scala 126:27 128:19]
    io_out_bits_write <= mux(io_in_0_valid, io_in_0_bits_write, _GEN_12) @[Arbiter.scala 126:27 128:19]
    io_out_bits_wdata <= mux(io_in_0_valid, io_in_0_bits_wdata, _GEN_11) @[Arbiter.scala 126:27 128:19]
    skip
    io_out_bits_eccMask <= mux(io_in_0_valid, io_in_0_bits_eccMask, UInt<8>("hff")) @[Arbiter.scala 126:27 128:19]
    io_out_bits_way_en <= mux(io_in_0_valid, io_in_0_bits_way_en, _GEN_8) @[Arbiter.scala 126:27 128:19]
    skip

  module AMOALU :
    input io_mask : UInt<8>
    input io_cmd : UInt<5>
    input io_lhs : UInt<64>
    input io_rhs : UInt<64>
    output io_out : UInt<64>

    node _max_T = eq(io_cmd, UInt<5>("hd")) @[AMOALU.scala 64:20]
    node _max_T_1 = eq(io_cmd, UInt<5>("hf")) @[AMOALU.scala 64:43]
    node max = or(_max_T, _max_T_1) @[AMOALU.scala 64:33]
    node _min_T = eq(io_cmd, UInt<5>("hc")) @[AMOALU.scala 65:20]
    node _min_T_1 = eq(io_cmd, UInt<5>("he")) @[AMOALU.scala 65:43]
    node min = or(_min_T, _min_T_1) @[AMOALU.scala 65:33]
    node add = eq(io_cmd, UInt<5>("h8")) @[AMOALU.scala 66:20]
    node _logic_and_T = eq(io_cmd, UInt<5>("ha")) @[AMOALU.scala 67:26]
    node _logic_and_T_1 = eq(io_cmd, UInt<5>("hb")) @[AMOALU.scala 67:48]
    node logic_and = or(_logic_and_T, _logic_and_T_1) @[AMOALU.scala 67:38]
    node _logic_xor_T = eq(io_cmd, UInt<5>("h9")) @[AMOALU.scala 68:26]
    skip
    node logic_xor = or(_logic_xor_T, _logic_and_T) @[AMOALU.scala 68:39]
    node _adder_out_mask_T = bits(io_mask, 3, 3) @[AMOALU.scala 72:71]
    node _adder_out_mask_T_1 = not(_adder_out_mask_T) @[AMOALU.scala 72:63]
    node _adder_out_mask_T_2 = shl(_adder_out_mask_T_1, 31) @[AMOALU.scala 72:79]
    node _adder_out_mask_T_3 = pad(_adder_out_mask_T_2, 64) @[AMOALU.scala 72:98]
    node adder_out_mask = not(_adder_out_mask_T_3) @[AMOALU.scala 72:16]
    node _adder_out_T = and(io_lhs, adder_out_mask) @[AMOALU.scala 73:13]
    node _adder_out_T_1 = and(io_rhs, adder_out_mask) @[AMOALU.scala 73:31]
    node _adder_out_T_2 = add(_adder_out_T, _adder_out_T_1) @[AMOALU.scala 73:21]
    node adder_out = tail(_adder_out_T_2, 1) @[AMOALU.scala 73:21]
    node _less_T = bits(io_mask, 4, 4) @[AMOALU.scala 91:49]
    skip
    node _less_signed_T = and(io_cmd, UInt<5>("h2")) @[AMOALU.scala 86:17]
    skip
    node less_signed = eq(_less_signed_T, UInt<5>("h0")) @[AMOALU.scala 86:25]
    node _less_T_1 = bits(io_lhs, 63, 63) @[AMOALU.scala 88:12]
    node _less_T_2 = bits(io_rhs, 63, 63) @[AMOALU.scala 88:23]
    node _less_T_3 = eq(_less_T_1, _less_T_2) @[AMOALU.scala 88:18]
    node _less_T_4 = bits(io_lhs, 63, 32) @[AMOALU.scala 80:13]
    node _less_T_5 = bits(io_rhs, 63, 32) @[AMOALU.scala 80:27]
    node _less_T_6 = lt(_less_T_4, _less_T_5) @[AMOALU.scala 80:24]
    skip
    skip
    node _less_T_9 = eq(_less_T_4, _less_T_5) @[AMOALU.scala 80:53]
    node _less_T_10 = bits(io_lhs, 31, 0) @[AMOALU.scala 79:26]
    node _less_T_11 = bits(io_rhs, 31, 0) @[AMOALU.scala 79:38]
    node _less_T_12 = lt(_less_T_10, _less_T_11) @[AMOALU.scala 79:35]
    node _less_T_13 = and(_less_T_9, _less_T_12) @[AMOALU.scala 80:69]
    node _less_T_14 = or(_less_T_6, _less_T_13) @[AMOALU.scala 80:38]
    skip
    skip
    node _less_T_17 = mux(less_signed, _less_T_1, _less_T_2) @[AMOALU.scala 88:58]
    node _less_T_18 = mux(_less_T_3, _less_T_14, _less_T_17) @[AMOALU.scala 88:10]
    node _less_T_19 = bits(io_mask, 2, 2) @[AMOALU.scala 91:49]
    skip
    skip
    skip
    skip
    node _less_T_20 = bits(io_lhs, 31, 31) @[AMOALU.scala 88:12]
    node _less_T_21 = bits(io_rhs, 31, 31) @[AMOALU.scala 88:23]
    node _less_T_22 = eq(_less_T_20, _less_T_21) @[AMOALU.scala 88:18]
    skip
    skip
    skip
    skip
    skip
    node _less_T_28 = mux(less_signed, _less_T_20, _less_T_21) @[AMOALU.scala 88:58]
    node _less_T_29 = mux(_less_T_22, _less_T_12, _less_T_28) @[AMOALU.scala 88:10]
    node less = mux(_less_T, _less_T_18, _less_T_29) @[Mux.scala 47:69]
    node _minmax_T = mux(less, min, max) @[AMOALU.scala 94:23]
    node minmax = mux(_minmax_T, io_lhs, io_rhs) @[AMOALU.scala 94:19]
    node _logic_T = and(io_lhs, io_rhs) @[AMOALU.scala 96:27]
    node _logic_T_1 = mux(logic_and, _logic_T, UInt<64>("h0")) @[AMOALU.scala 96:8]
    node _logic_T_2 = xor(io_lhs, io_rhs) @[AMOALU.scala 97:27]
    node _logic_T_3 = mux(logic_xor, _logic_T_2, UInt<64>("h0")) @[AMOALU.scala 97:8]
    node logic = or(_logic_T_1, _logic_T_3) @[AMOALU.scala 96:42]
    node _out_T = or(logic_and, logic_xor) @[AMOALU.scala 100:19]
    node _out_T_1 = mux(_out_T, logic, minmax) @[AMOALU.scala 100:8]
    node out = mux(add, adder_out, _out_T_1) @[AMOALU.scala 99:8]
    node _wmask_T = bits(io_mask, 0, 0) @[Bitwise.scala 26:51]
    node _wmask_T_1 = bits(io_mask, 1, 1) @[Bitwise.scala 26:51]
    skip
    skip
    skip
    node _wmask_T_5 = bits(io_mask, 5, 5) @[Bitwise.scala 26:51]
    node _wmask_T_6 = bits(io_mask, 6, 6) @[Bitwise.scala 26:51]
    node _wmask_T_7 = bits(io_mask, 7, 7) @[Bitwise.scala 26:51]
    skip
    node wmask_lo_lo_lo = mux(_wmask_T, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    skip
    node wmask_lo_lo_hi = mux(_wmask_T_1, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    skip
    node wmask_lo_hi_lo = mux(_less_T_19, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    skip
    node wmask_lo_hi_hi = mux(_adder_out_mask_T, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    skip
    node wmask_hi_lo_lo = mux(_less_T, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    skip
    node wmask_hi_lo_hi = mux(_wmask_T_5, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    skip
    node wmask_hi_hi_lo = mux(_wmask_T_6, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    skip
    node wmask_hi_hi_hi = mux(_wmask_T_7, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    node wmask_lo_lo = cat(wmask_lo_lo_hi, wmask_lo_lo_lo) @[Cat.scala 30:58]
    node wmask_lo_hi = cat(wmask_lo_hi_hi, wmask_lo_hi_lo) @[Cat.scala 30:58]
    node wmask_lo = cat(wmask_lo_hi, wmask_lo_lo) @[Cat.scala 30:58]
    node wmask_hi_lo = cat(wmask_hi_lo_hi, wmask_hi_lo_lo) @[Cat.scala 30:58]
    node wmask_hi_hi = cat(wmask_hi_hi_hi, wmask_hi_hi_lo) @[Cat.scala 30:58]
    node wmask_hi = cat(wmask_hi_hi, wmask_hi_lo) @[Cat.scala 30:58]
    node wmask = cat(wmask_hi, wmask_lo) @[Cat.scala 30:58]
    node _io_out_T = and(wmask, out) @[AMOALU.scala 104:19]
    node _io_out_T_1 = not(wmask) @[AMOALU.scala 104:27]
    node _io_out_T_2 = and(_io_out_T_1, io_lhs) @[AMOALU.scala 104:34]
    skip
    io_out <= or(_io_out_T, _io_out_T_2) @[AMOALU.scala 104:25]
    skip

  module ICache :
    input clock : Clock
    input reset : UInt<1>
    input auto_master_out_a_ready : UInt<1>
    output auto_master_out_a_valid : UInt<1>
    output auto_master_out_a_bits_address : UInt<32>
    input auto_master_out_d_valid : UInt<1>
    input auto_master_out_d_bits_opcode : UInt<3>
    input auto_master_out_d_bits_size : UInt<4>
    input auto_master_out_d_bits_data : UInt<64>
    input auto_master_out_d_bits_corrupt : UInt<1>
    output io_req_ready : UInt<1>
    input io_req_valid : UInt<1>
    input io_req_bits_addr : UInt<39>
    input io_s1_paddr : UInt<32>
    input io_s1_kill : UInt<1>
    input io_s2_kill : UInt<1>
    output io_resp_valid : UInt<1>
    output io_resp_bits_data : UInt<32>
    output io_resp_bits_ae : UInt<1>
    input io_invalidate : UInt<1>

    inst repl_way_v0_prng of MaxPeriodFibonacciLFSR_1 @[PRNG.scala 82:22]
    mem tag_array_0 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<21>
      depth => 64
      read-latency => 1
      write-latency => 1
      reader => tag_rdata
      writer => MPORT
      read-under-write => undefined
    mem tag_array_1 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<21>
      depth => 64
      read-latency => 1
      write-latency => 1
      reader => tag_rdata
      writer => MPORT
      read-under-write => undefined
    mem tag_array_2 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<21>
      depth => 64
      read-latency => 1
      write-latency => 1
      reader => tag_rdata
      writer => MPORT
      read-under-write => undefined
    mem tag_array_3 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<21>
      depth => 64
      read-latency => 1
      write-latency => 1
      reader => tag_rdata
      writer => MPORT
      read-under-write => undefined
    mem data_arrays_0_0 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<32>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => dout
      writer => MPORT_1
      read-under-write => undefined
    mem data_arrays_0_1 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<32>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => dout
      writer => MPORT_1
      read-under-write => undefined
    mem data_arrays_0_2 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<32>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => dout
      writer => MPORT_1
      read-under-write => undefined
    mem data_arrays_0_3 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<32>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => dout
      writer => MPORT_1
      read-under-write => undefined
    mem data_arrays_1_0 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<32>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => dout_1
      writer => MPORT_2
      read-under-write => undefined
    mem data_arrays_1_1 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<32>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => dout_1
      writer => MPORT_2
      read-under-write => undefined
    mem data_arrays_1_2 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<32>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => dout_1
      writer => MPORT_2
      read-under-write => undefined
    mem data_arrays_1_3 : @[DescribedSRAM.scala 19:26]
      data-type => UInt<32>
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => dout_1
      writer => MPORT_2
      read-under-write => undefined
    skip
    skip
    skip
    skip
    node s0_valid = and(io_req_ready, io_req_valid) @[Decoupled.scala 40:37]
    reg s1_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s1_valid) @[ICache.scala 169:21]
    skip
    skip
    reg vb_array : UInt<256>, clock with :
      reset => (UInt<1>("h0"), vb_array) @[ICache.scala 231:21]
    node s1_vb_lo = bits(io_s1_paddr, 11, 6) @[ICache.scala 483:21]
    node _s1_vb_T = cat(UInt<1>("h0"), s1_vb_lo) @[Cat.scala 30:58]
    node _s1_vb_T_1 = dshr(vb_array, _s1_vb_T) @[ICache.scala 259:25]
    node s1_vb = bits(_s1_vb_T_1, 0, 0) @[ICache.scala 259:25]
    skip
    skip
    node tag = bits(tag_array_0.tag_rdata.data, 19, 0) @[package.scala 154:13]
    node s1_tag = shr(io_s1_paddr, 12) @[ICache.scala 254:30]
    node _tagMatch_T = eq(tag, s1_tag) @[ICache.scala 262:33]
    node tagMatch = and(s1_vb, _tagMatch_T) @[ICache.scala 262:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s1_vb_T_4 = cat(UInt<1>("h1"), s1_vb_lo) @[Cat.scala 30:58]
    node _s1_vb_T_5 = dshr(vb_array, _s1_vb_T_4) @[ICache.scala 259:25]
    node s1_vb_1 = bits(_s1_vb_T_5, 0, 0) @[ICache.scala 259:25]
    skip
    skip
    node tag_1 = bits(tag_array_1.tag_rdata.data, 19, 0) @[package.scala 154:13]
    skip
    node _tagMatch_T_1 = eq(tag_1, s1_tag) @[ICache.scala 262:33]
    node tagMatch_1 = and(s1_vb_1, _tagMatch_T_1) @[ICache.scala 262:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s1_hit_T = or(tagMatch, tagMatch_1) @[ICache.scala 172:35]
    skip
    node _s1_vb_T_8 = cat(UInt<2>("h2"), s1_vb_lo) @[Cat.scala 30:58]
    node _s1_vb_T_9 = dshr(vb_array, _s1_vb_T_8) @[ICache.scala 259:25]
    node s1_vb_2 = bits(_s1_vb_T_9, 0, 0) @[ICache.scala 259:25]
    skip
    skip
    node tag_2 = bits(tag_array_2.tag_rdata.data, 19, 0) @[package.scala 154:13]
    skip
    node _tagMatch_T_2 = eq(tag_2, s1_tag) @[ICache.scala 262:33]
    node tagMatch_2 = and(s1_vb_2, _tagMatch_T_2) @[ICache.scala 262:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s1_hit_T_1 = or(_s1_hit_T, tagMatch_2) @[ICache.scala 172:35]
    skip
    node _s1_vb_T_12 = cat(UInt<2>("h3"), s1_vb_lo) @[Cat.scala 30:58]
    node _s1_vb_T_13 = dshr(vb_array, _s1_vb_T_12) @[ICache.scala 259:25]
    node s1_vb_3 = bits(_s1_vb_T_13, 0, 0) @[ICache.scala 259:25]
    skip
    skip
    node tag_3 = bits(tag_array_3.tag_rdata.data, 19, 0) @[package.scala 154:13]
    skip
    node _tagMatch_T_3 = eq(tag_3, s1_tag) @[ICache.scala 262:33]
    node tagMatch_3 = and(s1_vb_3, _tagMatch_T_3) @[ICache.scala 262:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s2_valid_T = not(io_s1_kill) @[ICache.scala 174:38]
    node _s2_valid_T_1 = and(s1_valid, _s2_valid_T) @[ICache.scala 174:35]
    reg s2_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_valid) @[ICache.scala 174:25]
    reg s2_hit : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_hit) @[ICache.scala 175:23]
    reg invalidated : UInt<1>, clock with :
      reset => (UInt<1>("h0"), invalidated) @[ICache.scala 177:24]
    reg refill_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), refill_valid) @[ICache.scala 178:29]
    skip
    skip
    node _s2_miss_T = not(s2_hit) @[ICache.scala 182:29]
    node _s2_miss_T_1 = and(s2_valid, _s2_miss_T) @[ICache.scala 182:26]
    node _s2_miss_T_2 = not(io_s2_kill) @[ICache.scala 182:40]
    node s2_miss = and(_s2_miss_T_1, _s2_miss_T_2) @[ICache.scala 182:37]
    reg s2_request_refill_REG : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_request_refill_REG) @[ICache.scala 184:45]
    node s2_request_refill = and(s2_miss, s2_request_refill_REG) @[ICache.scala 184:35]
    skip
    node refill_fire = and(auto_master_out_a_ready, s2_request_refill) @[Decoupled.scala 40:37]
    skip
    skip
    skip
    node _s1_can_request_refill_T = or(s2_miss, refill_valid) @[ICache.scala 183:41]
    node s1_can_request_refill = not(_s1_can_request_refill_T) @[ICache.scala 183:31]
    node _refill_paddr_T = and(s1_valid, s1_can_request_refill) @[ICache.scala 185:54]
    reg refill_paddr : UInt<32>, clock with :
      reset => (UInt<1>("h0"), refill_paddr) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    node refill_tag = shr(refill_paddr, 12) @[ICache.scala 187:33]
    node refill_idx = bits(refill_paddr, 11, 6) @[ICache.scala 483:21]
    skip
    skip
    skip
    skip
    skip
    node refill_one_beat_opdata = bits(auto_master_out_d_bits_opcode, 0, 0) @[Edges.scala 105:36]
    node refill_one_beat = and(auto_master_out_d_valid, refill_one_beat_opdata) @[ICache.scala 189:41]
    skip
    skip
    skip
    skip
    skip
    skip
    node _beats1_decode_T_1 = dshl(UInt<12>("hfff"), auto_master_out_d_bits_size) @[package.scala 234:77]
    node _beats1_decode_T_2 = bits(_beats1_decode_T_1, 11, 0) @[package.scala 234:82]
    node _beats1_decode_T_3 = not(_beats1_decode_T_2) @[package.scala 234:46]
    node beats1_decode = shr(_beats1_decode_T_3, 3) @[Edges.scala 219:59]
    skip
    node beats1 = mux(refill_one_beat_opdata, beats1_decode, UInt<9>("h0")) @[Edges.scala 220:14]
    reg counter : UInt<9>, clock with :
      reset => (UInt<1>("h0"), counter) @[Edges.scala 228:27]
    node _counter1_T = sub(counter, UInt<9>("h1")) @[Edges.scala 229:28]
    node counter1 = tail(_counter1_T, 1) @[Edges.scala 229:28]
    node first = eq(counter, UInt<9>("h0")) @[Edges.scala 230:25]
    node _last_T = eq(counter, UInt<9>("h1")) @[Edges.scala 231:25]
    node _last_T_1 = eq(beats1, UInt<9>("h0")) @[Edges.scala 231:47]
    node last = or(_last_T, _last_T_1) @[Edges.scala 231:37]
    node d_done = and(last, auto_master_out_d_valid) @[Edges.scala 232:22]
    node _count_T = not(counter1) @[Edges.scala 233:27]
    node refill_cnt = and(beats1, _count_T) @[Edges.scala 233:25]
    node _counter_T = mux(first, beats1, counter1) @[Edges.scala 235:21]
    node _GEN_3 = mux(auto_master_out_d_valid, _counter_T, counter) @[Edges.scala 234:17 235:15 228:27]
    node refill_done = and(refill_one_beat, d_done) @[ICache.scala 195:37]
    node repl_way_v0_lo_lo_lo = cat(repl_way_v0_prng.io_out_1, repl_way_v0_prng.io_out_0) @[PRNG.scala 86:17]
    node repl_way_v0_lo_lo_hi = cat(repl_way_v0_prng.io_out_3, repl_way_v0_prng.io_out_2) @[PRNG.scala 86:17]
    node repl_way_v0_lo_lo = cat(repl_way_v0_lo_lo_hi, repl_way_v0_lo_lo_lo) @[PRNG.scala 86:17]
    node repl_way_v0_lo_hi_lo = cat(repl_way_v0_prng.io_out_5, repl_way_v0_prng.io_out_4) @[PRNG.scala 86:17]
    node repl_way_v0_lo_hi_hi = cat(repl_way_v0_prng.io_out_7, repl_way_v0_prng.io_out_6) @[PRNG.scala 86:17]
    node repl_way_v0_lo_hi = cat(repl_way_v0_lo_hi_hi, repl_way_v0_lo_hi_lo) @[PRNG.scala 86:17]
    node repl_way_v0_lo = cat(repl_way_v0_lo_hi, repl_way_v0_lo_lo) @[PRNG.scala 86:17]
    node repl_way_v0_hi_lo_lo = cat(repl_way_v0_prng.io_out_9, repl_way_v0_prng.io_out_8) @[PRNG.scala 86:17]
    node repl_way_v0_hi_lo_hi = cat(repl_way_v0_prng.io_out_11, repl_way_v0_prng.io_out_10) @[PRNG.scala 86:17]
    node repl_way_v0_hi_lo = cat(repl_way_v0_hi_lo_hi, repl_way_v0_hi_lo_lo) @[PRNG.scala 86:17]
    node repl_way_v0_hi_hi_lo = cat(repl_way_v0_prng.io_out_13, repl_way_v0_prng.io_out_12) @[PRNG.scala 86:17]
    node repl_way_v0_hi_hi_hi = cat(repl_way_v0_prng.io_out_15, repl_way_v0_prng.io_out_14) @[PRNG.scala 86:17]
    node repl_way_v0_hi_hi = cat(repl_way_v0_hi_hi_hi, repl_way_v0_hi_hi_lo) @[PRNG.scala 86:17]
    node repl_way_v0_hi = cat(repl_way_v0_hi_hi, repl_way_v0_hi_lo) @[PRNG.scala 86:17]
    node _repl_way_v0_T = cat(repl_way_v0_hi, repl_way_v0_lo) @[PRNG.scala 86:17]
    node repl_way_v0 = bits(_repl_way_v0_T, 1, 0) @[ICache.scala 201:35]
    skip
    node _repl_way_T = cat(repl_way_v0, refill_idx) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _tag_rdata_T_1 = not(refill_done) @[ICache.scala 218:70]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg accruedRefillError : UInt<1>, clock with :
      reset => (UInt<1>("h0"), accruedRefillError) @[ICache.scala 219:31]
    node _refillError_T = gt(refill_cnt, UInt<9>("h0")) @[ICache.scala 220:58]
    node _refillError_T_1 = and(_refillError_T, accruedRefillError) @[ICache.scala 220:62]
    skip
    node refillError = or(auto_master_out_d_bits_corrupt, _refillError_T_1) @[ICache.scala 220:43]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_errors_bus_bits_T = shr(refill_paddr, 6) @[ICache.scala 229:40]
    skip
    skip
    node _vb_array_T_1 = not(invalidated) @[ICache.scala 235:75]
    node _vb_array_T_2 = and(refill_done, _vb_array_T_1) @[ICache.scala 235:72]
    node _vb_array_T_3 = dshl(UInt<1>("h1"), _repl_way_T) @[ICache.scala 235:32]
    node _vb_array_T_4 = or(vb_array, _vb_array_T_3) @[ICache.scala 235:32]
    node _vb_array_T_5 = not(vb_array) @[ICache.scala 235:32]
    node _vb_array_T_6 = or(_vb_array_T_5, _vb_array_T_3) @[ICache.scala 235:32]
    node _vb_array_T_7 = not(_vb_array_T_6) @[ICache.scala 235:32]
    node _vb_array_T_8 = mux(_vb_array_T_2, _vb_array_T_4, _vb_array_T_7) @[ICache.scala 235:32]
    skip
    node _GEN_28 = mux(refill_one_beat, _vb_array_T_8, vb_array) @[ICache.scala 232:26 235:14 231:21]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_29 = mux(io_invalidate, UInt<256>("h0"), _GEN_28) @[ICache.scala 238:21 239:14]
    node _GEN_30 = or(io_invalidate, invalidated) @[ICache.scala 238:21 240:17 177:24]
    skip
    skip
    skip
    node tl_error = bits(tag_array_0.tag_rdata.data, 20, 20) @[package.scala 154:13]
    skip
    skip
    skip
    node s1_tl_error_0 = and(tagMatch, tl_error) @[ICache.scala 264:32]
    skip
    skip
    node tl_error_1 = bits(tag_array_1.tag_rdata.data, 20, 20) @[package.scala 154:13]
    skip
    skip
    skip
    node s1_tl_error_1 = and(tagMatch_1, tl_error_1) @[ICache.scala 264:32]
    skip
    skip
    node tl_error_2 = bits(tag_array_2.tag_rdata.data, 20, 20) @[package.scala 154:13]
    skip
    skip
    skip
    node s1_tl_error_2 = and(tagMatch_2, tl_error_2) @[ICache.scala 264:32]
    skip
    skip
    node tl_error_3 = bits(tag_array_3.tag_rdata.data, 20, 20) @[package.scala 154:13]
    skip
    skip
    skip
    node s1_tl_error_3 = and(tagMatch_3, tl_error_3) @[ICache.scala 264:32]
    skip
    node _T_6 = not(s1_valid) @[ICache.scala 267:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_15 = add(tagMatch, tagMatch_1) @[Bitwise.scala 47:55]
    skip
    node _T_17 = add(tagMatch_2, tagMatch_3) @[Bitwise.scala 47:55]
    skip
    node _T_19 = add(_T_15, _T_17) @[Bitwise.scala 47:55]
    skip
    node _T_21 = leq(_T_19, UInt<3>("h1")) @[ICache.scala 267:115]
    node _T_22 = or(_T_6, _T_21) @[ICache.scala 267:39]
    skip
    node _T_24 = or(_T_22, reset) @[ICache.scala 267:9]
    node _T_25 = not(_T_24) @[ICache.scala 267:9]
    node _s0_ren_T = bits(io_req_bits_addr, 2, 2) @[package.scala 154:13]
    node _s0_ren_T_1 = not(_s0_ren_T) @[ICache.scala 282:111]
    node s0_ren = and(s0_valid, _s0_ren_T_1) @[ICache.scala 284:28]
    skip
    skip
    skip
    skip
    node wen = and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    skip
    skip
    skip
    skip
    node _mem_idx_T = shl(refill_idx, 3) @[ICache.scala 286:52]
    node _mem_idx_T_1 = or(_mem_idx_T, refill_cnt) @[ICache.scala 286:79]
    skip
    node _mem_idx_T_3 = bits(io_req_bits_addr, 11, 3) @[ICache.scala 283:31]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _dout_T = not(wen) @[ICache.scala 295:41]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_31 = bits(io_s1_paddr, 2, 2) @[package.scala 154:13]
    skip
    node _GEN_54 = data_arrays_0_0.dout.data @[ICache.scala 296:71 297:15]
    node _GEN_55 = data_arrays_0_1.dout.data @[ICache.scala 296:71 297:15]
    node _GEN_56 = data_arrays_0_2.dout.data @[ICache.scala 296:71 297:15]
    node _GEN_57 = data_arrays_0_3.dout.data @[ICache.scala 296:71 297:15]
    skip
    skip
    node s0_ren_1 = and(s0_valid, _s0_ren_T) @[ICache.scala 284:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s1_dout_0 = mux(_T_31, data_arrays_1_0.dout_1.data, _GEN_54) @[ICache.scala 296:71 297:15]
    node s1_dout_1 = mux(_T_31, data_arrays_1_1.dout_1.data, _GEN_55) @[ICache.scala 296:71 297:15]
    node s1_dout_2 = mux(_T_31, data_arrays_1_2.dout_1.data, _GEN_56) @[ICache.scala 296:71 297:15]
    node s1_dout_3 = mux(_T_31, data_arrays_1_3.dout_1.data, _GEN_57) @[ICache.scala 296:71 297:15]
    skip
    reg s2_tag_hit_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_tag_hit_0) @[Reg.scala 15:16]
    reg s2_tag_hit_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_tag_hit_1) @[Reg.scala 15:16]
    reg s2_tag_hit_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_tag_hit_2) @[Reg.scala 15:16]
    reg s2_tag_hit_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_tag_hit_3) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg s2_dout_0 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), s2_dout_0) @[Reg.scala 15:16]
    reg s2_dout_1 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), s2_dout_1) @[Reg.scala 15:16]
    reg s2_dout_2 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), s2_dout_2) @[Reg.scala 15:16]
    reg s2_dout_3 : UInt<32>, clock with :
      reset => (UInt<1>("h0"), s2_dout_3) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _s2_way_mux_T = mux(s2_tag_hit_0, s2_dout_0, UInt<32>("h0")) @[Mux.scala 27:72]
    node _s2_way_mux_T_1 = mux(s2_tag_hit_1, s2_dout_1, UInt<32>("h0")) @[Mux.scala 27:72]
    node _s2_way_mux_T_2 = mux(s2_tag_hit_2, s2_dout_2, UInt<32>("h0")) @[Mux.scala 27:72]
    node _s2_way_mux_T_3 = mux(s2_tag_hit_3, s2_dout_3, UInt<32>("h0")) @[Mux.scala 27:72]
    node _s2_way_mux_T_4 = or(_s2_way_mux_T, _s2_way_mux_T_1) @[Mux.scala 27:72]
    node _s2_way_mux_T_5 = or(_s2_way_mux_T_4, _s2_way_mux_T_2) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node s2_tl_error_lo = cat(s1_tl_error_1, s1_tl_error_0) @[ICache.scala 309:43]
    skip
    skip
    node s2_tl_error_hi = cat(s1_tl_error_3, s1_tl_error_2) @[ICache.scala 309:43]
    node _s2_tl_error_T = cat(s2_tl_error_hi, s2_tl_error_lo) @[ICache.scala 309:43]
    node _s2_tl_error_T_1 = orr(_s2_tl_error_T) @[ICache.scala 309:50]
    reg s2_tl_error : UInt<1>, clock with :
      reset => (UInt<1>("h0"), s2_tl_error) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_46 = not(refill_valid) @[ICache.scala 473:9]
    skip
    node _GEN_101 = or(refill_fire, refill_valid) @[ICache.scala 474:22 178:29 474:37]
    node _GEN_102 = mux(refill_done, UInt<1>("h0"), _GEN_101) @[ICache.scala 475:{22,37}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    auto_master_out_a_valid <= and(s2_miss, s2_request_refill_REG) @[ICache.scala 184:35]
    skip
    skip
    skip
    skip
    auto_master_out_a_bits_address <= shl(_io_errors_bus_bits_T, 6) @[ICache.scala 418:64]
    skip
    skip
    skip
    skip
    io_req_ready <= not(refill_one_beat) @[ICache.scala 191:19]
    io_resp_valid <= and(s2_valid, s2_hit) @[ICache.scala 336:33]
    io_resp_bits_data <= or(_s2_way_mux_T_5, _s2_way_mux_T_3) @[Mux.scala 27:72]
    skip
    io_resp_bits_ae <= s2_tl_error @[ICache.scala 334:23]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    s1_valid <= mux(reset, UInt<1>("h0"), s0_valid) @[ICache.scala 169:{21,21} 192:12]
    skip
    s2_valid <= mux(reset, UInt<1>("h0"), _s2_valid_T_1) @[ICache.scala 174:{25,25,25}]
    s2_hit <= or(_s1_hit_T_1, tagMatch_3) @[ICache.scala 172:35]
    invalidated <= mux(_T_46, UInt<1>("h0"), _GEN_30) @[ICache.scala 473:{24,38}]
    refill_valid <= mux(reset, UInt<1>("h0"), _GEN_102) @[ICache.scala 178:{29,29}]
    skip
    skip
    s2_request_refill_REG <= not(_s1_can_request_refill_T) @[ICache.scala 183:31]
    refill_paddr <= mux(_refill_paddr_T, io_s1_paddr, refill_paddr) @[Reg.scala 15:16 16:{19,23}]
    skip
    counter <= mux(reset, UInt<9>("h0"), _GEN_3) @[Edges.scala 228:{27,27}]
    repl_way_v0_prng.clock <= clock
    repl_way_v0_prng.reset <= reset
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    repl_way_v0_prng.io_increment <= and(auto_master_out_a_ready, s2_request_refill) @[Decoupled.scala 40:37]
    tag_array_0.tag_rdata.addr <= bits(io_req_bits_addr, 11, 6) @[ICache.scala 218:42]
    tag_array_1.tag_rdata.addr <= bits(io_req_bits_addr, 11, 6) @[ICache.scala 218:42]
    tag_array_2.tag_rdata.addr <= bits(io_req_bits_addr, 11, 6) @[ICache.scala 218:42]
    tag_array_3.tag_rdata.addr <= bits(io_req_bits_addr, 11, 6) @[ICache.scala 218:42]
    tag_array_0.tag_rdata.en <= and(_tag_rdata_T_1, s0_valid) @[ICache.scala 218:83]
    tag_array_1.tag_rdata.en <= and(_tag_rdata_T_1, s0_valid) @[ICache.scala 218:83]
    tag_array_2.tag_rdata.en <= and(_tag_rdata_T_1, s0_valid) @[ICache.scala 218:83]
    tag_array_3.tag_rdata.en <= and(_tag_rdata_T_1, s0_valid) @[ICache.scala 218:83]
    tag_array_0.tag_rdata.clk <= clock @[ICache.scala 218:{33,33}]
    tag_array_1.tag_rdata.clk <= clock @[ICache.scala 218:{33,33}]
    tag_array_2.tag_rdata.clk <= clock @[ICache.scala 218:{33,33}]
    tag_array_3.tag_rdata.clk <= clock @[ICache.scala 218:{33,33}]
    tag_array_0.MPORT.addr <= bits(refill_paddr, 11, 6) @[ICache.scala 483:21]
    tag_array_1.MPORT.addr <= bits(refill_paddr, 11, 6) @[ICache.scala 483:21]
    tag_array_2.MPORT.addr <= bits(refill_paddr, 11, 6) @[ICache.scala 483:21]
    tag_array_3.MPORT.addr <= bits(refill_paddr, 11, 6) @[ICache.scala 483:21]
    tag_array_0.MPORT.en <= and(refill_one_beat, d_done) @[ICache.scala 195:37]
    tag_array_1.MPORT.en <= and(refill_one_beat, d_done) @[ICache.scala 195:37]
    tag_array_2.MPORT.en <= and(refill_one_beat, d_done) @[ICache.scala 195:37]
    tag_array_3.MPORT.en <= and(refill_one_beat, d_done) @[ICache.scala 195:37]
    tag_array_0.MPORT.clk <= clock @[ICache.scala 221:22]
    tag_array_1.MPORT.clk <= clock @[ICache.scala 221:22]
    tag_array_2.MPORT.clk <= clock @[ICache.scala 221:22]
    tag_array_3.MPORT.clk <= clock @[ICache.scala 221:22]
    tag_array_0.MPORT.data <= cat(refillError, refill_tag) @[Cat.scala 30:58]
    tag_array_1.MPORT.data <= cat(refillError, refill_tag) @[Cat.scala 30:58]
    tag_array_2.MPORT.data <= cat(refillError, refill_tag) @[Cat.scala 30:58]
    tag_array_3.MPORT.data <= cat(refillError, refill_tag) @[Cat.scala 30:58]
    tag_array_0.MPORT.mask <= eq(repl_way_v0, UInt<2>("h0")) @[ICache.scala 224:88]
    tag_array_1.MPORT.mask <= eq(repl_way_v0, UInt<2>("h1")) @[ICache.scala 224:88]
    tag_array_2.MPORT.mask <= eq(repl_way_v0, UInt<2>("h2")) @[ICache.scala 224:88]
    tag_array_3.MPORT.mask <= eq(repl_way_v0, UInt<2>("h3")) @[ICache.scala 224:88]
    accruedRefillError <= mux(refill_one_beat, refillError, accruedRefillError) @[ICache.scala 232:26 233:24 219:31]
    vb_array <= mux(reset, UInt<256>("h0"), _GEN_29) @[ICache.scala 231:{21,21}]
    skip
    skip
    data_arrays_0_0.dout.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_0_1.dout.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_0_2.dout.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_0_3.dout.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_0_0.dout.en <= and(_dout_T, s0_ren) @[ICache.scala 295:46]
    data_arrays_0_1.dout.en <= and(_dout_T, s0_ren) @[ICache.scala 295:46]
    data_arrays_0_2.dout.en <= and(_dout_T, s0_ren) @[ICache.scala 295:46]
    data_arrays_0_3.dout.en <= and(_dout_T, s0_ren) @[ICache.scala 295:46]
    data_arrays_0_0.dout.clk <= clock @[ICache.scala 295:{31,31}]
    data_arrays_0_1.dout.clk <= clock @[ICache.scala 295:{31,31}]
    data_arrays_0_2.dout.clk <= clock @[ICache.scala 295:{31,31}]
    data_arrays_0_3.dout.clk <= clock @[ICache.scala 295:{31,31}]
    data_arrays_0_0.MPORT_1.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_0_1.MPORT_1.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_0_2.MPORT_1.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_0_3.MPORT_1.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_0_0.MPORT_1.en <= and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    data_arrays_0_1.MPORT_1.en <= and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    data_arrays_0_2.MPORT_1.en <= and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    data_arrays_0_3.MPORT_1.en <= and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    data_arrays_0_0.MPORT_1.clk <= clock @[ICache.scala 290:16]
    data_arrays_0_1.MPORT_1.clk <= clock @[ICache.scala 290:16]
    data_arrays_0_2.MPORT_1.clk <= clock @[ICache.scala 290:16]
    data_arrays_0_3.MPORT_1.clk <= clock @[ICache.scala 290:16]
    data_arrays_0_0.MPORT_1.data <= bits(auto_master_out_d_bits_data, 31, 0) @[ICache.scala 291:71]
    data_arrays_0_1.MPORT_1.data <= bits(auto_master_out_d_bits_data, 31, 0) @[ICache.scala 291:71]
    data_arrays_0_2.MPORT_1.data <= bits(auto_master_out_d_bits_data, 31, 0) @[ICache.scala 291:71]
    data_arrays_0_3.MPORT_1.data <= bits(auto_master_out_d_bits_data, 31, 0) @[ICache.scala 291:71]
    data_arrays_0_0.MPORT_1.mask <= eq(repl_way_v0, UInt<2>("h0")) @[ICache.scala 293:93]
    data_arrays_0_1.MPORT_1.mask <= eq(repl_way_v0, UInt<2>("h1")) @[ICache.scala 293:93]
    data_arrays_0_2.MPORT_1.mask <= eq(repl_way_v0, UInt<2>("h2")) @[ICache.scala 293:93]
    data_arrays_0_3.MPORT_1.mask <= eq(repl_way_v0, UInt<2>("h3")) @[ICache.scala 293:93]
    data_arrays_1_0.dout_1.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_1_1.dout_1.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_1_2.dout_1.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_1_3.dout_1.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_1_0.dout_1.en <= and(_dout_T, s0_ren_1) @[ICache.scala 295:46]
    data_arrays_1_1.dout_1.en <= and(_dout_T, s0_ren_1) @[ICache.scala 295:46]
    data_arrays_1_2.dout_1.en <= and(_dout_T, s0_ren_1) @[ICache.scala 295:46]
    data_arrays_1_3.dout_1.en <= and(_dout_T, s0_ren_1) @[ICache.scala 295:46]
    data_arrays_1_0.dout_1.clk <= clock @[ICache.scala 295:{31,31}]
    data_arrays_1_1.dout_1.clk <= clock @[ICache.scala 295:{31,31}]
    data_arrays_1_2.dout_1.clk <= clock @[ICache.scala 295:{31,31}]
    data_arrays_1_3.dout_1.clk <= clock @[ICache.scala 295:{31,31}]
    data_arrays_1_0.MPORT_2.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_1_1.MPORT_2.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_1_2.MPORT_2.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_1_3.MPORT_2.addr <= mux(refill_one_beat, _mem_idx_T_1, _mem_idx_T_3) @[ICache.scala 286:22]
    data_arrays_1_0.MPORT_2.en <= and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    data_arrays_1_1.MPORT_2.en <= and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    data_arrays_1_2.MPORT_2.en <= and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    data_arrays_1_3.MPORT_2.en <= and(refill_one_beat, _vb_array_T_1) @[ICache.scala 285:32]
    data_arrays_1_0.MPORT_2.clk <= clock @[ICache.scala 290:16]
    data_arrays_1_1.MPORT_2.clk <= clock @[ICache.scala 290:16]
    data_arrays_1_2.MPORT_2.clk <= clock @[ICache.scala 290:16]
    data_arrays_1_3.MPORT_2.clk <= clock @[ICache.scala 290:16]
    data_arrays_1_0.MPORT_2.data <= bits(auto_master_out_d_bits_data, 63, 32) @[ICache.scala 291:71]
    data_arrays_1_1.MPORT_2.data <= bits(auto_master_out_d_bits_data, 63, 32) @[ICache.scala 291:71]
    data_arrays_1_2.MPORT_2.data <= bits(auto_master_out_d_bits_data, 63, 32) @[ICache.scala 291:71]
    data_arrays_1_3.MPORT_2.data <= bits(auto_master_out_d_bits_data, 63, 32) @[ICache.scala 291:71]
    data_arrays_1_0.MPORT_2.mask <= eq(repl_way_v0, UInt<2>("h0")) @[ICache.scala 293:93]
    data_arrays_1_1.MPORT_2.mask <= eq(repl_way_v0, UInt<2>("h1")) @[ICache.scala 293:93]
    data_arrays_1_2.MPORT_2.mask <= eq(repl_way_v0, UInt<2>("h2")) @[ICache.scala 293:93]
    data_arrays_1_3.MPORT_2.mask <= eq(repl_way_v0, UInt<2>("h3")) @[ICache.scala 293:93]
    s2_tag_hit_0 <= mux(s1_valid, tagMatch, s2_tag_hit_0) @[Reg.scala 15:16 16:{19,23}]
    s2_tag_hit_1 <= mux(s1_valid, tagMatch_1, s2_tag_hit_1) @[Reg.scala 15:16 16:{19,23}]
    s2_tag_hit_2 <= mux(s1_valid, tagMatch_2, s2_tag_hit_2) @[Reg.scala 15:16 16:{19,23}]
    s2_tag_hit_3 <= mux(s1_valid, tagMatch_3, s2_tag_hit_3) @[Reg.scala 15:16 16:{19,23}]
    s2_dout_0 <= mux(s1_valid, s1_dout_0, s2_dout_0) @[Reg.scala 15:16 16:{19,23}]
    s2_dout_1 <= mux(s1_valid, s1_dout_1, s2_dout_1) @[Reg.scala 15:16 16:{19,23}]
    s2_dout_2 <= mux(s1_valid, s1_dout_2, s2_dout_2) @[Reg.scala 15:16 16:{19,23}]
    s2_dout_3 <= mux(s1_valid, s1_dout_3, s2_dout_3) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    s2_tl_error <= mux(s1_valid, _s2_tl_error_T_1, s2_tl_error) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    printf(clock, _T_25, "Assertion failed\n    at ICache.scala:267 assert(!(s1_valid || s1_slaveValid) || PopCount(s1_tag_hit zip s1_tag_disparity map { case (h, d) => h && !d }) <= 1)\n") @[ICache.scala 267:9]
    stop(clock, _T_25, 1) @[ICache.scala 267:9]
    skip
    skip

  module ShiftQueue :
    input clock : Clock
    input reset : UInt<1>
    output io_enq_ready : UInt<1>
    input io_enq_valid : UInt<1>
    input io_enq_bits_btb_taken : UInt<1>
    input io_enq_bits_btb_bridx : UInt<1>
    input io_enq_bits_btb_entry : UInt<5>
    input io_enq_bits_btb_bht_history : UInt<8>
    input io_enq_bits_pc : UInt<40>
    input io_enq_bits_data : UInt<32>
    input io_enq_bits_mask : UInt<2>
    input io_enq_bits_xcpt_pf_inst : UInt<1>
    input io_enq_bits_xcpt_ae_inst : UInt<1>
    input io_enq_bits_replay : UInt<1>
    input io_deq_ready : UInt<1>
    output io_deq_valid : UInt<1>
    output io_deq_bits_btb_taken : UInt<1>
    output io_deq_bits_btb_bridx : UInt<1>
    output io_deq_bits_btb_entry : UInt<5>
    output io_deq_bits_btb_bht_history : UInt<8>
    output io_deq_bits_pc : UInt<40>
    output io_deq_bits_data : UInt<32>
    output io_deq_bits_xcpt_pf_inst : UInt<1>
    output io_deq_bits_xcpt_ae_inst : UInt<1>
    output io_deq_bits_replay : UInt<1>
    output io_mask : UInt<5>

    reg valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_0) @[ShiftQueue.scala 21:30]
    reg valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_1) @[ShiftQueue.scala 21:30]
    reg valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_2) @[ShiftQueue.scala 21:30]
    reg valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_3) @[ShiftQueue.scala 21:30]
    reg valid_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_4) @[ShiftQueue.scala 21:30]
    skip
    reg elts_0_btb_taken : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_0_btb_taken) @[ShiftQueue.scala 22:25]
    skip
    reg elts_0_btb_bridx : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_0_btb_bridx) @[ShiftQueue.scala 22:25]
    skip
    reg elts_0_btb_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), elts_0_btb_entry) @[ShiftQueue.scala 22:25]
    reg elts_0_btb_bht_history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), elts_0_btb_bht_history) @[ShiftQueue.scala 22:25]
    skip
    reg elts_0_pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), elts_0_pc) @[ShiftQueue.scala 22:25]
    reg elts_0_data : UInt<32>, clock with :
      reset => (UInt<1>("h0"), elts_0_data) @[ShiftQueue.scala 22:25]
    skip
    reg elts_0_xcpt_pf_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_0_xcpt_pf_inst) @[ShiftQueue.scala 22:25]
    reg elts_0_xcpt_ae_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_0_xcpt_ae_inst) @[ShiftQueue.scala 22:25]
    reg elts_0_replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_0_replay) @[ShiftQueue.scala 22:25]
    skip
    reg elts_1_btb_taken : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_1_btb_taken) @[ShiftQueue.scala 22:25]
    skip
    reg elts_1_btb_bridx : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_1_btb_bridx) @[ShiftQueue.scala 22:25]
    skip
    reg elts_1_btb_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), elts_1_btb_entry) @[ShiftQueue.scala 22:25]
    reg elts_1_btb_bht_history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), elts_1_btb_bht_history) @[ShiftQueue.scala 22:25]
    skip
    reg elts_1_pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), elts_1_pc) @[ShiftQueue.scala 22:25]
    reg elts_1_data : UInt<32>, clock with :
      reset => (UInt<1>("h0"), elts_1_data) @[ShiftQueue.scala 22:25]
    skip
    reg elts_1_xcpt_pf_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_1_xcpt_pf_inst) @[ShiftQueue.scala 22:25]
    reg elts_1_xcpt_ae_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_1_xcpt_ae_inst) @[ShiftQueue.scala 22:25]
    reg elts_1_replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_1_replay) @[ShiftQueue.scala 22:25]
    skip
    reg elts_2_btb_taken : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_2_btb_taken) @[ShiftQueue.scala 22:25]
    skip
    reg elts_2_btb_bridx : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_2_btb_bridx) @[ShiftQueue.scala 22:25]
    skip
    reg elts_2_btb_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), elts_2_btb_entry) @[ShiftQueue.scala 22:25]
    reg elts_2_btb_bht_history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), elts_2_btb_bht_history) @[ShiftQueue.scala 22:25]
    skip
    reg elts_2_pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), elts_2_pc) @[ShiftQueue.scala 22:25]
    reg elts_2_data : UInt<32>, clock with :
      reset => (UInt<1>("h0"), elts_2_data) @[ShiftQueue.scala 22:25]
    skip
    reg elts_2_xcpt_pf_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_2_xcpt_pf_inst) @[ShiftQueue.scala 22:25]
    reg elts_2_xcpt_ae_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_2_xcpt_ae_inst) @[ShiftQueue.scala 22:25]
    reg elts_2_replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_2_replay) @[ShiftQueue.scala 22:25]
    skip
    reg elts_3_btb_taken : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_3_btb_taken) @[ShiftQueue.scala 22:25]
    skip
    reg elts_3_btb_bridx : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_3_btb_bridx) @[ShiftQueue.scala 22:25]
    skip
    reg elts_3_btb_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), elts_3_btb_entry) @[ShiftQueue.scala 22:25]
    reg elts_3_btb_bht_history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), elts_3_btb_bht_history) @[ShiftQueue.scala 22:25]
    skip
    reg elts_3_pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), elts_3_pc) @[ShiftQueue.scala 22:25]
    reg elts_3_data : UInt<32>, clock with :
      reset => (UInt<1>("h0"), elts_3_data) @[ShiftQueue.scala 22:25]
    skip
    reg elts_3_xcpt_pf_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_3_xcpt_pf_inst) @[ShiftQueue.scala 22:25]
    reg elts_3_xcpt_ae_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_3_xcpt_ae_inst) @[ShiftQueue.scala 22:25]
    reg elts_3_replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_3_replay) @[ShiftQueue.scala 22:25]
    skip
    reg elts_4_btb_taken : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_4_btb_taken) @[ShiftQueue.scala 22:25]
    skip
    reg elts_4_btb_bridx : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_4_btb_bridx) @[ShiftQueue.scala 22:25]
    skip
    reg elts_4_btb_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), elts_4_btb_entry) @[ShiftQueue.scala 22:25]
    reg elts_4_btb_bht_history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), elts_4_btb_bht_history) @[ShiftQueue.scala 22:25]
    skip
    reg elts_4_pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), elts_4_pc) @[ShiftQueue.scala 22:25]
    reg elts_4_data : UInt<32>, clock with :
      reset => (UInt<1>("h0"), elts_4_data) @[ShiftQueue.scala 22:25]
    skip
    reg elts_4_xcpt_pf_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_4_xcpt_pf_inst) @[ShiftQueue.scala 22:25]
    reg elts_4_xcpt_ae_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_4_xcpt_ae_inst) @[ShiftQueue.scala 22:25]
    reg elts_4_replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), elts_4_replay) @[ShiftQueue.scala 22:25]
    skip
    node wdata_btb_taken = mux(valid_1, elts_1_btb_taken, io_enq_bits_btb_taken) @[ShiftQueue.scala 27:57]
    skip
    node wdata_btb_bridx = mux(valid_1, elts_1_btb_bridx, io_enq_bits_btb_bridx) @[ShiftQueue.scala 27:57]
    skip
    node wdata_btb_entry = mux(valid_1, elts_1_btb_entry, io_enq_bits_btb_entry) @[ShiftQueue.scala 27:57]
    node wdata_btb_bht_history = mux(valid_1, elts_1_btb_bht_history, io_enq_bits_btb_bht_history) @[ShiftQueue.scala 27:57]
    skip
    node wdata_pc = mux(valid_1, elts_1_pc, io_enq_bits_pc) @[ShiftQueue.scala 27:57]
    node wdata_data = mux(valid_1, elts_1_data, io_enq_bits_data) @[ShiftQueue.scala 27:57]
    skip
    node wdata_xcpt_pf_inst = mux(valid_1, elts_1_xcpt_pf_inst, io_enq_bits_xcpt_pf_inst) @[ShiftQueue.scala 27:57]
    node wdata_xcpt_ae_inst = mux(valid_1, elts_1_xcpt_ae_inst, io_enq_bits_xcpt_ae_inst) @[ShiftQueue.scala 27:57]
    node wdata_replay = mux(valid_1, elts_1_replay, io_enq_bits_replay) @[ShiftQueue.scala 27:57]
    node _wen_T = and(io_enq_ready, io_enq_valid) @[Decoupled.scala 40:37]
    skip
    node _wen_T_2 = and(_wen_T, valid_0) @[ShiftQueue.scala 30:45]
    node _wen_T_3 = or(valid_1, _wen_T_2) @[ShiftQueue.scala 30:28]
    skip
    skip
    node _wen_T_6 = not(valid_0) @[ShiftQueue.scala 31:48]
    node _wen_T_7 = and(_wen_T, _wen_T_6) @[ShiftQueue.scala 31:45]
    node wen = mux(io_deq_ready, _wen_T_3, _wen_T_7) @[ShiftQueue.scala 29:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _valid_0_T_6 = or(_wen_T, valid_0) @[ShiftQueue.scala 37:45]
    node _valid_0_T_7 = mux(io_deq_ready, _wen_T_3, _valid_0_T_6) @[ShiftQueue.scala 35:10]
    skip
    node wdata_1_btb_taken = mux(valid_2, elts_2_btb_taken, io_enq_bits_btb_taken) @[ShiftQueue.scala 27:57]
    skip
    node wdata_1_btb_bridx = mux(valid_2, elts_2_btb_bridx, io_enq_bits_btb_bridx) @[ShiftQueue.scala 27:57]
    skip
    node wdata_1_btb_entry = mux(valid_2, elts_2_btb_entry, io_enq_bits_btb_entry) @[ShiftQueue.scala 27:57]
    node wdata_1_btb_bht_history = mux(valid_2, elts_2_btb_bht_history, io_enq_bits_btb_bht_history) @[ShiftQueue.scala 27:57]
    skip
    node wdata_1_pc = mux(valid_2, elts_2_pc, io_enq_bits_pc) @[ShiftQueue.scala 27:57]
    node wdata_1_data = mux(valid_2, elts_2_data, io_enq_bits_data) @[ShiftQueue.scala 27:57]
    skip
    node wdata_1_xcpt_pf_inst = mux(valid_2, elts_2_xcpt_pf_inst, io_enq_bits_xcpt_pf_inst) @[ShiftQueue.scala 27:57]
    node wdata_1_xcpt_ae_inst = mux(valid_2, elts_2_xcpt_ae_inst, io_enq_bits_xcpt_ae_inst) @[ShiftQueue.scala 27:57]
    node wdata_1_replay = mux(valid_2, elts_2_replay, io_enq_bits_replay) @[ShiftQueue.scala 27:57]
    skip
    skip
    node _wen_T_10 = and(_wen_T, valid_1) @[ShiftQueue.scala 30:45]
    node _wen_T_11 = or(valid_2, _wen_T_10) @[ShiftQueue.scala 30:28]
    skip
    skip
    node _wen_T_14 = not(valid_1) @[ShiftQueue.scala 31:48]
    node _wen_T_15 = and(_wen_T_2, _wen_T_14) @[ShiftQueue.scala 31:45]
    node wen_1 = mux(io_deq_ready, _wen_T_11, _wen_T_15) @[ShiftQueue.scala 29:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _valid_1_T_6 = or(_wen_T_2, valid_1) @[ShiftQueue.scala 37:45]
    node _valid_1_T_7 = mux(io_deq_ready, _wen_T_11, _valid_1_T_6) @[ShiftQueue.scala 35:10]
    skip
    node wdata_2_btb_taken = mux(valid_3, elts_3_btb_taken, io_enq_bits_btb_taken) @[ShiftQueue.scala 27:57]
    skip
    node wdata_2_btb_bridx = mux(valid_3, elts_3_btb_bridx, io_enq_bits_btb_bridx) @[ShiftQueue.scala 27:57]
    skip
    node wdata_2_btb_entry = mux(valid_3, elts_3_btb_entry, io_enq_bits_btb_entry) @[ShiftQueue.scala 27:57]
    node wdata_2_btb_bht_history = mux(valid_3, elts_3_btb_bht_history, io_enq_bits_btb_bht_history) @[ShiftQueue.scala 27:57]
    skip
    node wdata_2_pc = mux(valid_3, elts_3_pc, io_enq_bits_pc) @[ShiftQueue.scala 27:57]
    node wdata_2_data = mux(valid_3, elts_3_data, io_enq_bits_data) @[ShiftQueue.scala 27:57]
    skip
    node wdata_2_xcpt_pf_inst = mux(valid_3, elts_3_xcpt_pf_inst, io_enq_bits_xcpt_pf_inst) @[ShiftQueue.scala 27:57]
    node wdata_2_xcpt_ae_inst = mux(valid_3, elts_3_xcpt_ae_inst, io_enq_bits_xcpt_ae_inst) @[ShiftQueue.scala 27:57]
    node wdata_2_replay = mux(valid_3, elts_3_replay, io_enq_bits_replay) @[ShiftQueue.scala 27:57]
    skip
    skip
    node _wen_T_18 = and(_wen_T, valid_2) @[ShiftQueue.scala 30:45]
    node _wen_T_19 = or(valid_3, _wen_T_18) @[ShiftQueue.scala 30:28]
    skip
    skip
    node _wen_T_22 = not(valid_2) @[ShiftQueue.scala 31:48]
    node _wen_T_23 = and(_wen_T_10, _wen_T_22) @[ShiftQueue.scala 31:45]
    node wen_2 = mux(io_deq_ready, _wen_T_19, _wen_T_23) @[ShiftQueue.scala 29:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _valid_2_T_6 = or(_wen_T_10, valid_2) @[ShiftQueue.scala 37:45]
    node _valid_2_T_7 = mux(io_deq_ready, _wen_T_19, _valid_2_T_6) @[ShiftQueue.scala 35:10]
    skip
    node wdata_3_btb_taken = mux(valid_4, elts_4_btb_taken, io_enq_bits_btb_taken) @[ShiftQueue.scala 27:57]
    skip
    node wdata_3_btb_bridx = mux(valid_4, elts_4_btb_bridx, io_enq_bits_btb_bridx) @[ShiftQueue.scala 27:57]
    skip
    node wdata_3_btb_entry = mux(valid_4, elts_4_btb_entry, io_enq_bits_btb_entry) @[ShiftQueue.scala 27:57]
    node wdata_3_btb_bht_history = mux(valid_4, elts_4_btb_bht_history, io_enq_bits_btb_bht_history) @[ShiftQueue.scala 27:57]
    skip
    node wdata_3_pc = mux(valid_4, elts_4_pc, io_enq_bits_pc) @[ShiftQueue.scala 27:57]
    node wdata_3_data = mux(valid_4, elts_4_data, io_enq_bits_data) @[ShiftQueue.scala 27:57]
    skip
    node wdata_3_xcpt_pf_inst = mux(valid_4, elts_4_xcpt_pf_inst, io_enq_bits_xcpt_pf_inst) @[ShiftQueue.scala 27:57]
    node wdata_3_xcpt_ae_inst = mux(valid_4, elts_4_xcpt_ae_inst, io_enq_bits_xcpt_ae_inst) @[ShiftQueue.scala 27:57]
    node wdata_3_replay = mux(valid_4, elts_4_replay, io_enq_bits_replay) @[ShiftQueue.scala 27:57]
    skip
    skip
    node _wen_T_26 = and(_wen_T, valid_3) @[ShiftQueue.scala 30:45]
    node _wen_T_27 = or(valid_4, _wen_T_26) @[ShiftQueue.scala 30:28]
    skip
    skip
    node _wen_T_30 = not(valid_3) @[ShiftQueue.scala 31:48]
    node _wen_T_31 = and(_wen_T_18, _wen_T_30) @[ShiftQueue.scala 31:45]
    node wen_3 = mux(io_deq_ready, _wen_T_27, _wen_T_31) @[ShiftQueue.scala 29:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _valid_3_T_6 = or(_wen_T_18, valid_3) @[ShiftQueue.scala 37:45]
    node _valid_3_T_7 = mux(io_deq_ready, _wen_T_27, _valid_3_T_6) @[ShiftQueue.scala 35:10]
    skip
    skip
    node _wen_T_34 = and(_wen_T, valid_4) @[ShiftQueue.scala 30:45]
    skip
    skip
    skip
    node _wen_T_38 = not(valid_4) @[ShiftQueue.scala 31:48]
    node _wen_T_39 = and(_wen_T_26, _wen_T_38) @[ShiftQueue.scala 31:45]
    node wen_4 = mux(io_deq_ready, _wen_T_34, _wen_T_39) @[ShiftQueue.scala 29:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _valid_4_T_6 = or(_wen_T_26, valid_4) @[ShiftQueue.scala 37:45]
    node _valid_4_T_7 = mux(io_deq_ready, _wen_T_34, _valid_4_T_6) @[ShiftQueue.scala 35:10]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_mask_lo = cat(valid_1, valid_0) @[ShiftQueue.scala 53:20]
    node io_mask_hi_hi = cat(valid_4, valid_3) @[ShiftQueue.scala 53:20]
    node io_mask_hi = cat(io_mask_hi_hi, valid_2) @[ShiftQueue.scala 53:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_enq_ready <= not(valid_4) @[ShiftQueue.scala 40:19]
    io_deq_valid <= or(io_enq_valid, valid_0) @[ShiftQueue.scala 41:16 45:{25,40}]
    skip
    io_deq_bits_btb_taken <= mux(_wen_T_6, io_enq_bits_btb_taken, elts_0_btb_taken) @[ShiftQueue.scala 42:15 46:{22,36}]
    skip
    io_deq_bits_btb_bridx <= mux(_wen_T_6, io_enq_bits_btb_bridx, elts_0_btb_bridx) @[ShiftQueue.scala 42:15 46:{22,36}]
    skip
    io_deq_bits_btb_entry <= mux(_wen_T_6, io_enq_bits_btb_entry, elts_0_btb_entry) @[ShiftQueue.scala 42:15 46:{22,36}]
    io_deq_bits_btb_bht_history <= mux(_wen_T_6, io_enq_bits_btb_bht_history, elts_0_btb_bht_history) @[ShiftQueue.scala 42:15 46:{22,36}]
    skip
    io_deq_bits_pc <= mux(_wen_T_6, io_enq_bits_pc, elts_0_pc) @[ShiftQueue.scala 42:15 46:{22,36}]
    io_deq_bits_data <= mux(_wen_T_6, io_enq_bits_data, elts_0_data) @[ShiftQueue.scala 42:15 46:{22,36}]
    skip
    io_deq_bits_xcpt_pf_inst <= mux(_wen_T_6, io_enq_bits_xcpt_pf_inst, elts_0_xcpt_pf_inst) @[ShiftQueue.scala 42:15 46:{22,36}]
    io_deq_bits_xcpt_ae_inst <= mux(_wen_T_6, io_enq_bits_xcpt_ae_inst, elts_0_xcpt_ae_inst) @[ShiftQueue.scala 42:15 46:{22,36}]
    io_deq_bits_replay <= mux(_wen_T_6, io_enq_bits_replay, elts_0_replay) @[ShiftQueue.scala 42:15 46:{22,36}]
    skip
    io_mask <= cat(io_mask_hi, io_mask_lo) @[ShiftQueue.scala 53:20]
    valid_0 <= mux(reset, UInt<1>("h0"), _valid_0_T_7) @[ShiftQueue.scala 21:{30,30} 34:14]
    valid_1 <= mux(reset, UInt<1>("h0"), _valid_1_T_7) @[ShiftQueue.scala 21:{30,30} 34:14]
    valid_2 <= mux(reset, UInt<1>("h0"), _valid_2_T_7) @[ShiftQueue.scala 21:{30,30} 34:14]
    valid_3 <= mux(reset, UInt<1>("h0"), _valid_3_T_7) @[ShiftQueue.scala 21:{30,30} 34:14]
    valid_4 <= mux(reset, UInt<1>("h0"), _valid_4_T_7) @[ShiftQueue.scala 21:{30,30} 34:14]
    skip
    elts_0_btb_taken <= mux(wen, wdata_btb_taken, elts_0_btb_taken) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_0_btb_bridx <= mux(wen, wdata_btb_bridx, elts_0_btb_bridx) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_0_btb_entry <= mux(wen, wdata_btb_entry, elts_0_btb_entry) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_0_btb_bht_history <= mux(wen, wdata_btb_bht_history, elts_0_btb_bht_history) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_0_pc <= mux(wen, wdata_pc, elts_0_pc) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_0_data <= mux(wen, wdata_data, elts_0_data) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_0_xcpt_pf_inst <= mux(wen, wdata_xcpt_pf_inst, elts_0_xcpt_pf_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_0_xcpt_ae_inst <= mux(wen, wdata_xcpt_ae_inst, elts_0_xcpt_ae_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_0_replay <= mux(wen, wdata_replay, elts_0_replay) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_1_btb_taken <= mux(wen_1, wdata_1_btb_taken, elts_1_btb_taken) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_1_btb_bridx <= mux(wen_1, wdata_1_btb_bridx, elts_1_btb_bridx) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_1_btb_entry <= mux(wen_1, wdata_1_btb_entry, elts_1_btb_entry) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_1_btb_bht_history <= mux(wen_1, wdata_1_btb_bht_history, elts_1_btb_bht_history) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_1_pc <= mux(wen_1, wdata_1_pc, elts_1_pc) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_1_data <= mux(wen_1, wdata_1_data, elts_1_data) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_1_xcpt_pf_inst <= mux(wen_1, wdata_1_xcpt_pf_inst, elts_1_xcpt_pf_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_1_xcpt_ae_inst <= mux(wen_1, wdata_1_xcpt_ae_inst, elts_1_xcpt_ae_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_1_replay <= mux(wen_1, wdata_1_replay, elts_1_replay) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_2_btb_taken <= mux(wen_2, wdata_2_btb_taken, elts_2_btb_taken) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_2_btb_bridx <= mux(wen_2, wdata_2_btb_bridx, elts_2_btb_bridx) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_2_btb_entry <= mux(wen_2, wdata_2_btb_entry, elts_2_btb_entry) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_2_btb_bht_history <= mux(wen_2, wdata_2_btb_bht_history, elts_2_btb_bht_history) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_2_pc <= mux(wen_2, wdata_2_pc, elts_2_pc) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_2_data <= mux(wen_2, wdata_2_data, elts_2_data) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_2_xcpt_pf_inst <= mux(wen_2, wdata_2_xcpt_pf_inst, elts_2_xcpt_pf_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_2_xcpt_ae_inst <= mux(wen_2, wdata_2_xcpt_ae_inst, elts_2_xcpt_ae_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_2_replay <= mux(wen_2, wdata_2_replay, elts_2_replay) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_3_btb_taken <= mux(wen_3, wdata_3_btb_taken, elts_3_btb_taken) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_3_btb_bridx <= mux(wen_3, wdata_3_btb_bridx, elts_3_btb_bridx) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_3_btb_entry <= mux(wen_3, wdata_3_btb_entry, elts_3_btb_entry) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_3_btb_bht_history <= mux(wen_3, wdata_3_btb_bht_history, elts_3_btb_bht_history) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_3_pc <= mux(wen_3, wdata_3_pc, elts_3_pc) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_3_data <= mux(wen_3, wdata_3_data, elts_3_data) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_3_xcpt_pf_inst <= mux(wen_3, wdata_3_xcpt_pf_inst, elts_3_xcpt_pf_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_3_xcpt_ae_inst <= mux(wen_3, wdata_3_xcpt_ae_inst, elts_3_xcpt_ae_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_3_replay <= mux(wen_3, wdata_3_replay, elts_3_replay) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_4_btb_taken <= mux(wen_4, io_enq_bits_btb_taken, elts_4_btb_taken) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_4_btb_bridx <= mux(wen_4, io_enq_bits_btb_bridx, elts_4_btb_bridx) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_4_btb_entry <= mux(wen_4, io_enq_bits_btb_entry, elts_4_btb_entry) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_4_btb_bht_history <= mux(wen_4, io_enq_bits_btb_bht_history, elts_4_btb_bht_history) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_4_pc <= mux(wen_4, io_enq_bits_pc, elts_4_pc) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_4_data <= mux(wen_4, io_enq_bits_data, elts_4_data) @[ShiftQueue.scala 32:16 22:25 32:26]
    skip
    elts_4_xcpt_pf_inst <= mux(wen_4, io_enq_bits_xcpt_pf_inst, elts_4_xcpt_pf_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_4_xcpt_ae_inst <= mux(wen_4, io_enq_bits_xcpt_ae_inst, elts_4_xcpt_ae_inst) @[ShiftQueue.scala 32:16 22:25 32:26]
    elts_4_replay <= mux(wen_4, io_enq_bits_replay, elts_4_replay) @[ShiftQueue.scala 32:16 22:25 32:26]

  module TLB_1 :
    input clock : Clock
    input reset : UInt<1>
    output io_req_ready : UInt<1>
    input io_req_valid : UInt<1>
    input io_req_bits_vaddr : UInt<40>
    output io_resp_miss : UInt<1>
    output io_resp_paddr : UInt<32>
    output io_resp_pf_inst : UInt<1>
    output io_resp_ae_inst : UInt<1>
    output io_resp_cacheable : UInt<1>
    input io_sfence_valid : UInt<1>
    input io_sfence_bits_rs1 : UInt<1>
    input io_sfence_bits_rs2 : UInt<1>
    input io_sfence_bits_addr : UInt<39>
    input io_ptw_req_ready : UInt<1>
    output io_ptw_req_valid : UInt<1>
    output io_ptw_req_bits_valid : UInt<1>
    output io_ptw_req_bits_bits_addr : UInt<27>
    input io_ptw_resp_valid : UInt<1>
    input io_ptw_resp_bits_ae : UInt<1>
    input io_ptw_resp_bits_pte_ppn : UInt<54>
    input io_ptw_resp_bits_pte_d : UInt<1>
    input io_ptw_resp_bits_pte_a : UInt<1>
    input io_ptw_resp_bits_pte_g : UInt<1>
    input io_ptw_resp_bits_pte_u : UInt<1>
    input io_ptw_resp_bits_pte_x : UInt<1>
    input io_ptw_resp_bits_pte_w : UInt<1>
    input io_ptw_resp_bits_pte_r : UInt<1>
    input io_ptw_resp_bits_pte_v : UInt<1>
    input io_ptw_resp_bits_level : UInt<2>
    input io_ptw_resp_bits_homogeneous : UInt<1>
    input io_ptw_ptbr_mode : UInt<4>
    input io_ptw_status_debug : UInt<1>
    input io_ptw_status_prv : UInt<2>
    input io_ptw_pmp_0_cfg_l : UInt<1>
    input io_ptw_pmp_0_cfg_a : UInt<2>
    input io_ptw_pmp_0_cfg_x : UInt<1>
    input io_ptw_pmp_0_cfg_w : UInt<1>
    input io_ptw_pmp_0_cfg_r : UInt<1>
    input io_ptw_pmp_0_addr : UInt<30>
    input io_ptw_pmp_0_mask : UInt<32>
    input io_ptw_pmp_1_cfg_l : UInt<1>
    input io_ptw_pmp_1_cfg_a : UInt<2>
    input io_ptw_pmp_1_cfg_x : UInt<1>
    input io_ptw_pmp_1_cfg_w : UInt<1>
    input io_ptw_pmp_1_cfg_r : UInt<1>
    input io_ptw_pmp_1_addr : UInt<30>
    input io_ptw_pmp_1_mask : UInt<32>
    input io_ptw_pmp_2_cfg_l : UInt<1>
    input io_ptw_pmp_2_cfg_a : UInt<2>
    input io_ptw_pmp_2_cfg_x : UInt<1>
    input io_ptw_pmp_2_cfg_w : UInt<1>
    input io_ptw_pmp_2_cfg_r : UInt<1>
    input io_ptw_pmp_2_addr : UInt<30>
    input io_ptw_pmp_2_mask : UInt<32>
    input io_ptw_pmp_3_cfg_l : UInt<1>
    input io_ptw_pmp_3_cfg_a : UInt<2>
    input io_ptw_pmp_3_cfg_x : UInt<1>
    input io_ptw_pmp_3_cfg_w : UInt<1>
    input io_ptw_pmp_3_cfg_r : UInt<1>
    input io_ptw_pmp_3_addr : UInt<30>
    input io_ptw_pmp_3_mask : UInt<32>
    input io_ptw_pmp_4_cfg_l : UInt<1>
    input io_ptw_pmp_4_cfg_a : UInt<2>
    input io_ptw_pmp_4_cfg_x : UInt<1>
    input io_ptw_pmp_4_cfg_w : UInt<1>
    input io_ptw_pmp_4_cfg_r : UInt<1>
    input io_ptw_pmp_4_addr : UInt<30>
    input io_ptw_pmp_4_mask : UInt<32>
    input io_ptw_pmp_5_cfg_l : UInt<1>
    input io_ptw_pmp_5_cfg_a : UInt<2>
    input io_ptw_pmp_5_cfg_x : UInt<1>
    input io_ptw_pmp_5_cfg_w : UInt<1>
    input io_ptw_pmp_5_cfg_r : UInt<1>
    input io_ptw_pmp_5_addr : UInt<30>
    input io_ptw_pmp_5_mask : UInt<32>
    input io_ptw_pmp_6_cfg_l : UInt<1>
    input io_ptw_pmp_6_cfg_a : UInt<2>
    input io_ptw_pmp_6_cfg_x : UInt<1>
    input io_ptw_pmp_6_cfg_w : UInt<1>
    input io_ptw_pmp_6_cfg_r : UInt<1>
    input io_ptw_pmp_6_addr : UInt<30>
    input io_ptw_pmp_6_mask : UInt<32>
    input io_ptw_pmp_7_cfg_l : UInt<1>
    input io_ptw_pmp_7_cfg_a : UInt<2>
    input io_ptw_pmp_7_cfg_x : UInt<1>
    input io_ptw_pmp_7_cfg_w : UInt<1>
    input io_ptw_pmp_7_cfg_r : UInt<1>
    input io_ptw_pmp_7_addr : UInt<30>
    input io_ptw_pmp_7_mask : UInt<32>
    input io_kill : UInt<1>

    inst mpu_ppn_data_barrier of OptimizationBarrier @[package.scala 258:25]
    inst pmp of PMPChecker_2 @[TLB.scala 193:19]
    inst ppn_data_barrier of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_1 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_2 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_3 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_4 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_5 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_6 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_7 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_8 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_9 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_10 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_11 of OptimizationBarrier @[package.scala 258:25]
    inst ppn_data_barrier_12 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_1 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_2 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_3 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_4 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_5 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_6 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_7 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_8 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_9 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_10 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_11 of OptimizationBarrier @[package.scala 258:25]
    inst entries_barrier_12 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_1 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_2 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_3 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_4 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_5 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_6 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_7 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_8 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_9 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_10 of OptimizationBarrier @[package.scala 258:25]
    inst normal_entries_barrier_11 of OptimizationBarrier @[package.scala 258:25]
    node vpn = bits(io_req_bits_vaddr, 38, 12) @[TLB.scala 163:30]
    skip
    reg sectored_entries_0_0_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_0_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_0_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_0_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_0_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_0_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_0_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_0_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_0_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_0_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_1_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_1_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_1_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_1_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_1_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_1_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_1_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_1_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_1_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_1_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_2_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_2_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_2_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_2_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_2_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_2_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_2_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_2_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_2_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_2_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_3_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_3_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_3_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_3_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_3_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_3_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_3_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_3_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_3_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_3_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_4_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_4_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_4_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_4_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_4_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_4_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_4_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_4_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_4_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_4_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_5_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_5_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_5_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_5_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_5_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_5_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_5_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_5_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_5_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_5_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_6_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_6_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_6_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_6_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_6_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_6_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_6_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_6_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_6_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_6_valid_3) @[TLB.scala 165:29]
    skip
    reg sectored_entries_0_7_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_tag) @[TLB.scala 165:29]
    reg sectored_entries_0_7_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_data_0) @[TLB.scala 165:29]
    reg sectored_entries_0_7_data_1 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_data_1) @[TLB.scala 165:29]
    reg sectored_entries_0_7_data_2 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_data_2) @[TLB.scala 165:29]
    reg sectored_entries_0_7_data_3 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_data_3) @[TLB.scala 165:29]
    reg sectored_entries_0_7_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_valid_0) @[TLB.scala 165:29]
    reg sectored_entries_0_7_valid_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_valid_1) @[TLB.scala 165:29]
    reg sectored_entries_0_7_valid_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_valid_2) @[TLB.scala 165:29]
    reg sectored_entries_0_7_valid_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sectored_entries_0_7_valid_3) @[TLB.scala 165:29]
    reg superpage_entries_0_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_0_level) @[TLB.scala 166:30]
    reg superpage_entries_0_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_0_tag) @[TLB.scala 166:30]
    reg superpage_entries_0_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_0_data_0) @[TLB.scala 166:30]
    reg superpage_entries_0_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_0_valid_0) @[TLB.scala 166:30]
    reg superpage_entries_1_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_1_level) @[TLB.scala 166:30]
    reg superpage_entries_1_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_1_tag) @[TLB.scala 166:30]
    reg superpage_entries_1_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_1_data_0) @[TLB.scala 166:30]
    reg superpage_entries_1_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_1_valid_0) @[TLB.scala 166:30]
    reg superpage_entries_2_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_2_level) @[TLB.scala 166:30]
    reg superpage_entries_2_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_2_tag) @[TLB.scala 166:30]
    reg superpage_entries_2_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_2_data_0) @[TLB.scala 166:30]
    reg superpage_entries_2_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_2_valid_0) @[TLB.scala 166:30]
    reg superpage_entries_3_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_3_level) @[TLB.scala 166:30]
    reg superpage_entries_3_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_3_tag) @[TLB.scala 166:30]
    reg superpage_entries_3_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_3_data_0) @[TLB.scala 166:30]
    reg superpage_entries_3_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), superpage_entries_3_valid_0) @[TLB.scala 166:30]
    reg special_entry_level : UInt<2>, clock with :
      reset => (UInt<1>("h0"), special_entry_level) @[TLB.scala 167:56]
    reg special_entry_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), special_entry_tag) @[TLB.scala 167:56]
    reg special_entry_data_0 : UInt<35>, clock with :
      reset => (UInt<1>("h0"), special_entry_data_0) @[TLB.scala 167:56]
    reg special_entry_valid_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), special_entry_valid_0) @[TLB.scala 167:56]
    reg state : UInt<2>, clock with :
      reset => (UInt<1>("h0"), state) @[TLB.scala 173:18]
    reg r_refill_tag : UInt<27>, clock with :
      reset => (UInt<1>("h0"), r_refill_tag) @[TLB.scala 174:25]
    reg r_superpage_repl_addr : UInt<2>, clock with :
      reset => (UInt<1>("h0"), r_superpage_repl_addr) @[TLB.scala 175:34]
    reg r_sectored_repl_addr : UInt<3>, clock with :
      reset => (UInt<1>("h0"), r_sectored_repl_addr) @[TLB.scala 176:33]
    reg r_sectored_hit_addr : UInt<3>, clock with :
      reset => (UInt<1>("h0"), r_sectored_hit_addr) @[TLB.scala 177:32]
    reg r_sectored_hit : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_sectored_hit) @[TLB.scala 178:27]
    node priv_s = bits(io_ptw_status_prv, 0, 0) @[TLB.scala 181:20]
    node priv_uses_vm = leq(io_ptw_status_prv, UInt<2>("h1")) @[TLB.scala 182:27]
    node _vm_enabled_T = bits(io_ptw_ptbr_mode, 3, 3) @[TLB.scala 183:53]
    skip
    node vm_enabled = and(_vm_enabled_T, priv_uses_vm) @[TLB.scala 183:83]
    skip
    skip
    node refill_ppn = bits(io_ptw_resp_bits_pte_ppn, 19, 0) @[TLB.scala 186:44]
    skip
    node _invalidate_refill_T = eq(state, UInt<2>("h1")) @[package.scala 15:47]
    node _invalidate_refill_T_1 = eq(state, UInt<2>("h3")) @[package.scala 15:47]
    node _invalidate_refill_T_2 = or(_invalidate_refill_T, _invalidate_refill_T_1) @[package.scala 72:59]
    node invalidate_refill = or(_invalidate_refill_T_2, io_sfence_valid) @[TLB.scala 188:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _mpu_ppn_data_T_13 = bits(special_entry_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node mpu_ppn_hi = shr(mpu_ppn_data_barrier.io_y_ppn, 18) @[TLB.scala 106:26]
    node mpu_ppn_ignore = lt(special_entry_level, UInt<2>("h1")) @[TLB.scala 108:28]
    skip
    node _mpu_ppn_T_1 = mux(mpu_ppn_ignore, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_983 = pad(mpu_ppn_data_barrier.io_y_ppn, 27) @[TLB.scala 109:47]
    node _mpu_ppn_T_2 = or(_mpu_ppn_T_1, _GEN_983) @[TLB.scala 109:47]
    node mpu_ppn_lo = bits(_mpu_ppn_T_2, 17, 9) @[TLB.scala 109:58]
    node mpu_ppn_hi_1 = cat(mpu_ppn_hi, mpu_ppn_lo) @[Cat.scala 30:58]
    node mpu_ppn_ignore_1 = lt(special_entry_level, UInt<2>("h2")) @[TLB.scala 108:28]
    skip
    node _mpu_ppn_T_3 = mux(mpu_ppn_ignore_1, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    skip
    node _mpu_ppn_T_4 = or(_mpu_ppn_T_3, _GEN_983) @[TLB.scala 109:47]
    node mpu_ppn_lo_1 = bits(_mpu_ppn_T_4, 8, 0) @[TLB.scala 109:58]
    node _mpu_ppn_T_5 = cat(mpu_ppn_hi_1, mpu_ppn_lo_1) @[Cat.scala 30:58]
    node _mpu_ppn_T_6 = shr(io_req_bits_vaddr, 12) @[TLB.scala 190:123]
    node _mpu_ppn_T_7 = mux(vm_enabled, pad(_mpu_ppn_T_5, 28), _mpu_ppn_T_6) @[TLB.scala 190:20]
    node mpu_ppn = mux(io_ptw_resp_valid, pad(refill_ppn, 28), _mpu_ppn_T_7) @[TLB.scala 189:20]
    node mpu_physaddr_lo = bits(io_req_bits_vaddr, 11, 0) @[TLB.scala 191:52]
    node mpu_physaddr = cat(mpu_ppn, mpu_physaddr_lo) @[Cat.scala 30:58]
    skip
    skip
    node _mpu_priv_T_2 = cat(io_ptw_status_debug, io_ptw_status_prv) @[Cat.scala 30:58]
    node mpu_priv = mux(io_ptw_resp_valid, UInt<3>("h1"), _mpu_priv_T_2) @[TLB.scala 192:27]
    node _legal_address_T = xor(mpu_physaddr, UInt<40>("h3000")) @[Parameters.scala 137:31]
    node _legal_address_T_1 = cvt(_legal_address_T) @[Parameters.scala 137:49]
    node _legal_address_T_2 = and(_legal_address_T_1, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_3 = asSInt(_legal_address_T_2) @[Parameters.scala 137:52]
    node _legal_address_T_4 = eq(_legal_address_T_3, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_5 = xor(mpu_physaddr, UInt<40>("h2010000")) @[Parameters.scala 137:31]
    node _legal_address_T_6 = cvt(_legal_address_T_5) @[Parameters.scala 137:49]
    node _legal_address_T_7 = and(_legal_address_T_6, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_8 = asSInt(_legal_address_T_7) @[Parameters.scala 137:52]
    node _legal_address_T_9 = eq(_legal_address_T_8, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_10 = xor(mpu_physaddr, UInt<40>("h4000")) @[Parameters.scala 137:31]
    node _legal_address_T_11 = cvt(_legal_address_T_10) @[Parameters.scala 137:49]
    node _legal_address_T_12 = and(_legal_address_T_11, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_13 = asSInt(_legal_address_T_12) @[Parameters.scala 137:52]
    node _legal_address_T_14 = eq(_legal_address_T_13, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_15 = xor(mpu_physaddr, UInt<40>("h54000000")) @[Parameters.scala 137:31]
    node _legal_address_T_16 = cvt(_legal_address_T_15) @[Parameters.scala 137:49]
    node _legal_address_T_17 = and(_legal_address_T_16, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_18 = asSInt(_legal_address_T_17) @[Parameters.scala 137:52]
    node _legal_address_T_19 = eq(_legal_address_T_18, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_20 = xor(mpu_physaddr, UInt<40>("h100000")) @[Parameters.scala 137:31]
    node _legal_address_T_21 = cvt(_legal_address_T_20) @[Parameters.scala 137:49]
    node _legal_address_T_22 = and(_legal_address_T_21, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_23 = asSInt(_legal_address_T_22) @[Parameters.scala 137:52]
    node _legal_address_T_24 = eq(_legal_address_T_23, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_25 = xor(mpu_physaddr, UInt<40>("hc000000")) @[Parameters.scala 137:31]
    node _legal_address_T_26 = cvt(_legal_address_T_25) @[Parameters.scala 137:49]
    node _legal_address_T_27 = and(_legal_address_T_26, SInt<41>("h-4000000")) @[Parameters.scala 137:52]
    node _legal_address_T_28 = asSInt(_legal_address_T_27) @[Parameters.scala 137:52]
    node _legal_address_T_29 = eq(_legal_address_T_28, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_30 = xor(mpu_physaddr, UInt<40>("h2000000")) @[Parameters.scala 137:31]
    node _legal_address_T_31 = cvt(_legal_address_T_30) @[Parameters.scala 137:49]
    node _legal_address_T_32 = and(_legal_address_T_31, SInt<41>("h-10000")) @[Parameters.scala 137:52]
    node _legal_address_T_33 = asSInt(_legal_address_T_32) @[Parameters.scala 137:52]
    node _legal_address_T_34 = eq(_legal_address_T_33, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    node _legal_address_T_36 = cvt(mpu_physaddr) @[Parameters.scala 137:49]
    node _legal_address_T_37 = and(_legal_address_T_36, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_38 = asSInt(_legal_address_T_37) @[Parameters.scala 137:52]
    node _legal_address_T_39 = eq(_legal_address_T_38, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_40 = xor(mpu_physaddr, UInt<40>("h10000")) @[Parameters.scala 137:31]
    node _legal_address_T_41 = cvt(_legal_address_T_40) @[Parameters.scala 137:49]
    node _legal_address_T_42 = and(_legal_address_T_41, SInt<41>("h-10000")) @[Parameters.scala 137:52]
    node _legal_address_T_43 = asSInt(_legal_address_T_42) @[Parameters.scala 137:52]
    node _legal_address_T_44 = eq(_legal_address_T_43, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_45 = xor(mpu_physaddr, UInt<40>("h80000000")) @[Parameters.scala 137:31]
    node _legal_address_T_46 = cvt(_legal_address_T_45) @[Parameters.scala 137:49]
    node _legal_address_T_47 = and(_legal_address_T_46, SInt<41>("h-10000000")) @[Parameters.scala 137:52]
    node _legal_address_T_48 = asSInt(_legal_address_T_47) @[Parameters.scala 137:52]
    node _legal_address_T_49 = eq(_legal_address_T_48, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_50 = xor(mpu_physaddr, UInt<40>("h10000000")) @[Parameters.scala 137:31]
    node _legal_address_T_51 = cvt(_legal_address_T_50) @[Parameters.scala 137:49]
    node _legal_address_T_52 = and(_legal_address_T_51, SInt<41>("h-1000")) @[Parameters.scala 137:52]
    node _legal_address_T_53 = asSInt(_legal_address_T_52) @[Parameters.scala 137:52]
    node _legal_address_T_54 = eq(_legal_address_T_53, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _legal_address_T_55 = xor(mpu_physaddr, UInt<40>("h20000")) @[Parameters.scala 137:31]
    node _legal_address_T_56 = cvt(_legal_address_T_55) @[Parameters.scala 137:49]
    node _legal_address_T_57 = and(_legal_address_T_56, SInt<41>("h-10000")) @[Parameters.scala 137:52]
    node _legal_address_T_58 = asSInt(_legal_address_T_57) @[Parameters.scala 137:52]
    node _legal_address_T_59 = eq(_legal_address_T_58, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _legal_address_T_60 = or(_legal_address_T_4, _legal_address_T_9) @[TLB.scala 198:67]
    skip
    node _legal_address_T_61 = or(_legal_address_T_60, _legal_address_T_14) @[TLB.scala 198:67]
    skip
    node _legal_address_T_62 = or(_legal_address_T_61, _legal_address_T_19) @[TLB.scala 198:67]
    skip
    node _legal_address_T_63 = or(_legal_address_T_62, _legal_address_T_24) @[TLB.scala 198:67]
    skip
    node _legal_address_T_64 = or(_legal_address_T_63, _legal_address_T_29) @[TLB.scala 198:67]
    skip
    node _legal_address_T_65 = or(_legal_address_T_64, _legal_address_T_34) @[TLB.scala 198:67]
    skip
    node _legal_address_T_66 = or(_legal_address_T_65, _legal_address_T_39) @[TLB.scala 198:67]
    skip
    node _legal_address_T_67 = or(_legal_address_T_66, _legal_address_T_44) @[TLB.scala 198:67]
    skip
    node _legal_address_T_68 = or(_legal_address_T_67, _legal_address_T_49) @[TLB.scala 198:67]
    skip
    node _legal_address_T_69 = or(_legal_address_T_68, _legal_address_T_54) @[TLB.scala 198:67]
    skip
    node legal_address = or(_legal_address_T_69, _legal_address_T_59) @[TLB.scala 198:67]
    skip
    skip
    skip
    skip
    skip
    node _cacheable_T_5 = xor(mpu_physaddr, UInt<40>("h14000000")) @[Parameters.scala 137:31]
    node _cacheable_T_6 = cvt(_cacheable_T_5) @[Parameters.scala 137:49]
    skip
    skip
    skip
    skip
    skip
    skip
    node _cacheable_T_13 = and(_legal_address_T_51, SInt<41>("h96000000")) @[Parameters.scala 137:52]
    node _cacheable_T_14 = asSInt(_cacheable_T_13) @[Parameters.scala 137:52]
    node _cacheable_T_15 = eq(_cacheable_T_14, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _cacheable_T_18 = and(_legal_address_T_46, SInt<41>("h90000000")) @[Parameters.scala 137:52]
    node _cacheable_T_19 = asSInt(_cacheable_T_18) @[Parameters.scala 137:52]
    node _cacheable_T_20 = eq(_cacheable_T_19, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _cacheable_T_21 = or(_cacheable_T_15, _cacheable_T_20) @[Parameters.scala 615:89]
    skip
    skip
    skip
    skip
    node cacheable = and(legal_address, _cacheable_T_21) @[TLB.scala 200:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _homogeneous_T_81 = and(_legal_address_T_36, SInt<41>("h86134000")) @[Parameters.scala 137:52]
    node _homogeneous_T_82 = asSInt(_homogeneous_T_81) @[Parameters.scala 137:52]
    node _homogeneous_T_83 = eq(_homogeneous_T_82, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _homogeneous_T_86 = and(_legal_address_T_41, SInt<41>("h96130000")) @[Parameters.scala 137:52]
    node _homogeneous_T_87 = asSInt(_homogeneous_T_86) @[Parameters.scala 137:52]
    node _homogeneous_T_88 = eq(_homogeneous_T_87, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _homogeneous_T_91 = and(_legal_address_T_56, SInt<41>("h96130000")) @[Parameters.scala 137:52]
    node _homogeneous_T_92 = asSInt(_homogeneous_T_91) @[Parameters.scala 137:52]
    node _homogeneous_T_93 = eq(_homogeneous_T_92, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    node _homogeneous_T_100 = or(_homogeneous_T_83, _homogeneous_T_88) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_101 = or(_homogeneous_T_100, _homogeneous_T_93) @[TLBPermissions.scala 82:66]
    node _homogeneous_T_102 = or(_homogeneous_T_101, _cacheable_T_20) @[TLBPermissions.scala 82:66]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _deny_access_to_debug_T = leq(mpu_priv, UInt<3>("h3")) @[TLB.scala 203:39]
    skip
    skip
    skip
    skip
    skip
    node deny_access_to_debug = and(_deny_access_to_debug_T, _legal_address_T_39) @[TLB.scala 203:48]
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_r_T_6 = not(deny_access_to_debug) @[TLB.scala 204:44]
    node _prot_r_T_7 = and(legal_address, _prot_r_T_6) @[TLB.scala 204:41]
    node prot_r = and(_prot_r_T_7, pmp.io_r) @[TLB.scala 204:66]
    skip
    skip
    node _prot_w_T_2 = and(_legal_address_T_36, SInt<41>("h9a030000")) @[Parameters.scala 137:52]
    node _prot_w_T_3 = asSInt(_prot_w_T_2) @[Parameters.scala 137:52]
    node _prot_w_T_4 = eq(_prot_w_T_3, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _prot_w_T_7 = and(_legal_address_T_31, SInt<41>("h9a120000")) @[Parameters.scala 137:52]
    node _prot_w_T_8 = asSInt(_prot_w_T_7) @[Parameters.scala 137:52]
    node _prot_w_T_9 = eq(_prot_w_T_8, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _prot_w_T_10 = xor(mpu_physaddr, UInt<40>("h8000000")) @[Parameters.scala 137:31]
    node _prot_w_T_11 = cvt(_prot_w_T_10) @[Parameters.scala 137:49]
    node _prot_w_T_12 = and(_prot_w_T_11, SInt<41>("h98000000")) @[Parameters.scala 137:52]
    node _prot_w_T_13 = asSInt(_prot_w_T_12) @[Parameters.scala 137:52]
    node _prot_w_T_14 = eq(_prot_w_T_13, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    node _prot_w_T_17 = and(_legal_address_T_51, SInt<41>("h9a130000")) @[Parameters.scala 137:52]
    node _prot_w_T_18 = asSInt(_prot_w_T_17) @[Parameters.scala 137:52]
    node _prot_w_T_19 = eq(_prot_w_T_18, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    node _prot_w_T_25 = or(_prot_w_T_4, _prot_w_T_9) @[Parameters.scala 615:89]
    node _prot_w_T_26 = or(_prot_w_T_25, _prot_w_T_14) @[Parameters.scala 615:89]
    node _prot_w_T_27 = or(_prot_w_T_26, _prot_w_T_19) @[Parameters.scala 615:89]
    node _prot_w_T_28 = or(_prot_w_T_27, _cacheable_T_20) @[Parameters.scala 615:89]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_w_T_43 = and(legal_address, _prot_w_T_28) @[TLB.scala 200:19]
    skip
    node _prot_w_T_45 = and(_prot_w_T_43, _prot_r_T_6) @[TLB.scala 205:45]
    node prot_w = and(_prot_w_T_45, pmp.io_w) @[TLB.scala 205:70]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_x_T_35 = and(_legal_address_T_31, SInt<41>("h96130000")) @[Parameters.scala 137:52]
    node _prot_x_T_36 = asSInt(_prot_x_T_35) @[Parameters.scala 137:52]
    node _prot_x_T_37 = eq(_prot_x_T_36, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    node _prot_x_T_43 = xor(mpu_physaddr, UInt<40>("h4000000")) @[Parameters.scala 137:31]
    node _prot_x_T_44 = cvt(_prot_x_T_43) @[Parameters.scala 137:49]
    node _prot_x_T_45 = and(_prot_x_T_44, SInt<41>("h94000000")) @[Parameters.scala 137:52]
    node _prot_x_T_46 = asSInt(_prot_x_T_45) @[Parameters.scala 137:52]
    node _prot_x_T_47 = eq(_prot_x_T_46, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_x_T_61 = and(legal_address, _homogeneous_T_102) @[TLB.scala 200:19]
    skip
    node _prot_x_T_63 = and(_prot_x_T_61, _prot_r_T_6) @[TLB.scala 209:40]
    node prot_x = and(_prot_x_T_63, pmp.io_x) @[TLB.scala 209:65]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_eff_T_31 = and(_legal_address_T_36, SInt<41>("h96032000")) @[Parameters.scala 137:52]
    node _prot_eff_T_32 = asSInt(_prot_eff_T_31) @[Parameters.scala 137:52]
    node _prot_eff_T_33 = eq(_prot_eff_T_32, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_eff_T_41 = and(_legal_address_T_6, SInt<41>("h96132000")) @[Parameters.scala 137:52]
    node _prot_eff_T_42 = asSInt(_prot_eff_T_41) @[Parameters.scala 137:52]
    node _prot_eff_T_43 = eq(_prot_eff_T_42, SInt<41>("h0")) @[Parameters.scala 137:67]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _prot_eff_T_51 = and(_cacheable_T_6, SInt<41>("h96132000")) @[Parameters.scala 137:52]
    node _prot_eff_T_52 = asSInt(_prot_eff_T_51) @[Parameters.scala 137:52]
    node _prot_eff_T_53 = eq(_prot_eff_T_52, SInt<41>("h0")) @[Parameters.scala 137:67]
    node _prot_eff_T_54 = or(_prot_eff_T_33, _prot_x_T_37) @[Parameters.scala 615:89]
    node _prot_eff_T_55 = or(_prot_eff_T_54, _prot_eff_T_43) @[Parameters.scala 615:89]
    node _prot_eff_T_56 = or(_prot_eff_T_55, _prot_x_T_47) @[Parameters.scala 615:89]
    node _prot_eff_T_57 = or(_prot_eff_T_56, _prot_eff_T_53) @[Parameters.scala 615:89]
    skip
    skip
    skip
    skip
    node prot_eff = and(legal_address, _prot_eff_T_57) @[TLB.scala 200:19]
    node _sector_hits_T = or(sectored_entries_0_0_valid_0, sectored_entries_0_0_valid_1) @[package.scala 72:59]
    node _sector_hits_T_1 = or(_sector_hits_T, sectored_entries_0_0_valid_2) @[package.scala 72:59]
    node _sector_hits_T_2 = or(_sector_hits_T_1, sectored_entries_0_0_valid_3) @[package.scala 72:59]
    node _sector_hits_T_3 = xor(sectored_entries_0_0_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_4 = shr(_sector_hits_T_3, 2) @[TLB.scala 88:48]
    node _sector_hits_T_5 = eq(_sector_hits_T_4, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_0 = and(_sector_hits_T_2, _sector_hits_T_5) @[TLB.scala 87:40]
    node _sector_hits_T_6 = or(sectored_entries_0_1_valid_0, sectored_entries_0_1_valid_1) @[package.scala 72:59]
    node _sector_hits_T_7 = or(_sector_hits_T_6, sectored_entries_0_1_valid_2) @[package.scala 72:59]
    node _sector_hits_T_8 = or(_sector_hits_T_7, sectored_entries_0_1_valid_3) @[package.scala 72:59]
    node _sector_hits_T_9 = xor(sectored_entries_0_1_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_10 = shr(_sector_hits_T_9, 2) @[TLB.scala 88:48]
    node _sector_hits_T_11 = eq(_sector_hits_T_10, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_1 = and(_sector_hits_T_8, _sector_hits_T_11) @[TLB.scala 87:40]
    node _sector_hits_T_12 = or(sectored_entries_0_2_valid_0, sectored_entries_0_2_valid_1) @[package.scala 72:59]
    node _sector_hits_T_13 = or(_sector_hits_T_12, sectored_entries_0_2_valid_2) @[package.scala 72:59]
    node _sector_hits_T_14 = or(_sector_hits_T_13, sectored_entries_0_2_valid_3) @[package.scala 72:59]
    node _sector_hits_T_15 = xor(sectored_entries_0_2_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_16 = shr(_sector_hits_T_15, 2) @[TLB.scala 88:48]
    node _sector_hits_T_17 = eq(_sector_hits_T_16, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_2 = and(_sector_hits_T_14, _sector_hits_T_17) @[TLB.scala 87:40]
    node _sector_hits_T_18 = or(sectored_entries_0_3_valid_0, sectored_entries_0_3_valid_1) @[package.scala 72:59]
    node _sector_hits_T_19 = or(_sector_hits_T_18, sectored_entries_0_3_valid_2) @[package.scala 72:59]
    node _sector_hits_T_20 = or(_sector_hits_T_19, sectored_entries_0_3_valid_3) @[package.scala 72:59]
    node _sector_hits_T_21 = xor(sectored_entries_0_3_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_22 = shr(_sector_hits_T_21, 2) @[TLB.scala 88:48]
    node _sector_hits_T_23 = eq(_sector_hits_T_22, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_3 = and(_sector_hits_T_20, _sector_hits_T_23) @[TLB.scala 87:40]
    node _sector_hits_T_24 = or(sectored_entries_0_4_valid_0, sectored_entries_0_4_valid_1) @[package.scala 72:59]
    node _sector_hits_T_25 = or(_sector_hits_T_24, sectored_entries_0_4_valid_2) @[package.scala 72:59]
    node _sector_hits_T_26 = or(_sector_hits_T_25, sectored_entries_0_4_valid_3) @[package.scala 72:59]
    node _sector_hits_T_27 = xor(sectored_entries_0_4_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_28 = shr(_sector_hits_T_27, 2) @[TLB.scala 88:48]
    node _sector_hits_T_29 = eq(_sector_hits_T_28, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_4 = and(_sector_hits_T_26, _sector_hits_T_29) @[TLB.scala 87:40]
    node _sector_hits_T_30 = or(sectored_entries_0_5_valid_0, sectored_entries_0_5_valid_1) @[package.scala 72:59]
    node _sector_hits_T_31 = or(_sector_hits_T_30, sectored_entries_0_5_valid_2) @[package.scala 72:59]
    node _sector_hits_T_32 = or(_sector_hits_T_31, sectored_entries_0_5_valid_3) @[package.scala 72:59]
    node _sector_hits_T_33 = xor(sectored_entries_0_5_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_34 = shr(_sector_hits_T_33, 2) @[TLB.scala 88:48]
    node _sector_hits_T_35 = eq(_sector_hits_T_34, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_5 = and(_sector_hits_T_32, _sector_hits_T_35) @[TLB.scala 87:40]
    node _sector_hits_T_36 = or(sectored_entries_0_6_valid_0, sectored_entries_0_6_valid_1) @[package.scala 72:59]
    node _sector_hits_T_37 = or(_sector_hits_T_36, sectored_entries_0_6_valid_2) @[package.scala 72:59]
    node _sector_hits_T_38 = or(_sector_hits_T_37, sectored_entries_0_6_valid_3) @[package.scala 72:59]
    node _sector_hits_T_39 = xor(sectored_entries_0_6_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_40 = shr(_sector_hits_T_39, 2) @[TLB.scala 88:48]
    node _sector_hits_T_41 = eq(_sector_hits_T_40, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_6 = and(_sector_hits_T_38, _sector_hits_T_41) @[TLB.scala 87:40]
    node _sector_hits_T_42 = or(sectored_entries_0_7_valid_0, sectored_entries_0_7_valid_1) @[package.scala 72:59]
    node _sector_hits_T_43 = or(_sector_hits_T_42, sectored_entries_0_7_valid_2) @[package.scala 72:59]
    node _sector_hits_T_44 = or(_sector_hits_T_43, sectored_entries_0_7_valid_3) @[package.scala 72:59]
    node _sector_hits_T_45 = xor(sectored_entries_0_7_tag, vpn) @[TLB.scala 88:41]
    node _sector_hits_T_46 = shr(_sector_hits_T_45, 2) @[TLB.scala 88:48]
    node _sector_hits_T_47 = eq(_sector_hits_T_46, UInt<25>("h0")) @[TLB.scala 88:66]
    node sector_hits_7 = and(_sector_hits_T_44, _sector_hits_T_47) @[TLB.scala 87:40]
    skip
    skip
    node _superpage_hits_T = bits(superpage_entries_0_tag, 26, 18) @[TLB.scala 95:46]
    node _superpage_hits_T_1 = bits(vpn, 26, 18) @[TLB.scala 95:84]
    node _superpage_hits_T_2 = eq(_superpage_hits_T, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _superpage_hits_T_4 = and(superpage_entries_0_valid_0, _superpage_hits_T_2) @[TLB.scala 95:29]
    node superpage_hits_ignore_1 = lt(superpage_entries_0_level, UInt<2>("h1")) @[TLB.scala 94:28]
    skip
    node _superpage_hits_T_5 = bits(superpage_entries_0_tag, 17, 9) @[TLB.scala 95:46]
    node _superpage_hits_T_6 = bits(vpn, 17, 9) @[TLB.scala 95:84]
    node _superpage_hits_T_7 = eq(_superpage_hits_T_5, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _superpage_hits_T_8 = or(superpage_hits_ignore_1, _superpage_hits_T_7) @[TLB.scala 95:40]
    node superpage_hits_0 = and(_superpage_hits_T_4, _superpage_hits_T_8) @[TLB.scala 95:29]
    skip
    skip
    skip
    node _superpage_hits_T_11 = bits(vpn, 8, 0) @[TLB.scala 95:84]
    skip
    skip
    skip
    skip
    skip
    node _superpage_hits_T_14 = bits(superpage_entries_1_tag, 26, 18) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_16 = eq(_superpage_hits_T_14, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _superpage_hits_T_18 = and(superpage_entries_1_valid_0, _superpage_hits_T_16) @[TLB.scala 95:29]
    node superpage_hits_ignore_4 = lt(superpage_entries_1_level, UInt<2>("h1")) @[TLB.scala 94:28]
    skip
    node _superpage_hits_T_19 = bits(superpage_entries_1_tag, 17, 9) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_21 = eq(_superpage_hits_T_19, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _superpage_hits_T_22 = or(superpage_hits_ignore_4, _superpage_hits_T_21) @[TLB.scala 95:40]
    node superpage_hits_1 = and(_superpage_hits_T_18, _superpage_hits_T_22) @[TLB.scala 95:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _superpage_hits_T_28 = bits(superpage_entries_2_tag, 26, 18) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_30 = eq(_superpage_hits_T_28, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _superpage_hits_T_32 = and(superpage_entries_2_valid_0, _superpage_hits_T_30) @[TLB.scala 95:29]
    node superpage_hits_ignore_7 = lt(superpage_entries_2_level, UInt<2>("h1")) @[TLB.scala 94:28]
    skip
    node _superpage_hits_T_33 = bits(superpage_entries_2_tag, 17, 9) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_35 = eq(_superpage_hits_T_33, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _superpage_hits_T_36 = or(superpage_hits_ignore_7, _superpage_hits_T_35) @[TLB.scala 95:40]
    node superpage_hits_2 = and(_superpage_hits_T_32, _superpage_hits_T_36) @[TLB.scala 95:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _superpage_hits_T_42 = bits(superpage_entries_3_tag, 26, 18) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_44 = eq(_superpage_hits_T_42, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _superpage_hits_T_46 = and(superpage_entries_3_valid_0, _superpage_hits_T_44) @[TLB.scala 95:29]
    node superpage_hits_ignore_10 = lt(superpage_entries_3_level, UInt<2>("h1")) @[TLB.scala 94:28]
    skip
    node _superpage_hits_T_47 = bits(superpage_entries_3_tag, 17, 9) @[TLB.scala 95:46]
    skip
    node _superpage_hits_T_49 = eq(_superpage_hits_T_47, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _superpage_hits_T_50 = or(superpage_hits_ignore_10, _superpage_hits_T_49) @[TLB.scala 95:40]
    node superpage_hits_3 = and(_superpage_hits_T_46, _superpage_hits_T_50) @[TLB.scala 95:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_idx = bits(vpn, 1, 0) @[package.scala 154:13]
    skip
    skip
    skip
    skip
    node _GEN_1 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_0_valid_1, sectored_entries_0_0_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_2 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_0_valid_2, _GEN_1) @[TLB.scala 100:{18,18}]
    node _GEN_3 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_0_valid_3, _GEN_2) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_3 = and(_GEN_3, _sector_hits_T_5) @[TLB.scala 100:18]
    node hitsVec_0 = and(vm_enabled, _hitsVec_T_3) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_5 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_1_valid_1, sectored_entries_0_1_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_6 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_1_valid_2, _GEN_5) @[TLB.scala 100:{18,18}]
    node _GEN_7 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_1_valid_3, _GEN_6) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_7 = and(_GEN_7, _sector_hits_T_11) @[TLB.scala 100:18]
    node hitsVec_1 = and(vm_enabled, _hitsVec_T_7) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_9 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_2_valid_1, sectored_entries_0_2_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_10 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_2_valid_2, _GEN_9) @[TLB.scala 100:{18,18}]
    node _GEN_11 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_2_valid_3, _GEN_10) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_11 = and(_GEN_11, _sector_hits_T_17) @[TLB.scala 100:18]
    node hitsVec_2 = and(vm_enabled, _hitsVec_T_11) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_13 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_3_valid_1, sectored_entries_0_3_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_14 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_3_valid_2, _GEN_13) @[TLB.scala 100:{18,18}]
    node _GEN_15 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_3_valid_3, _GEN_14) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_15 = and(_GEN_15, _sector_hits_T_23) @[TLB.scala 100:18]
    node hitsVec_3 = and(vm_enabled, _hitsVec_T_15) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_17 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_4_valid_1, sectored_entries_0_4_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_18 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_4_valid_2, _GEN_17) @[TLB.scala 100:{18,18}]
    node _GEN_19 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_4_valid_3, _GEN_18) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_19 = and(_GEN_19, _sector_hits_T_29) @[TLB.scala 100:18]
    node hitsVec_4 = and(vm_enabled, _hitsVec_T_19) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_21 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_5_valid_1, sectored_entries_0_5_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_22 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_5_valid_2, _GEN_21) @[TLB.scala 100:{18,18}]
    node _GEN_23 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_5_valid_3, _GEN_22) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_23 = and(_GEN_23, _sector_hits_T_35) @[TLB.scala 100:18]
    node hitsVec_5 = and(vm_enabled, _hitsVec_T_23) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_25 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_6_valid_1, sectored_entries_0_6_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_26 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_6_valid_2, _GEN_25) @[TLB.scala 100:{18,18}]
    node _GEN_27 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_6_valid_3, _GEN_26) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_27 = and(_GEN_27, _sector_hits_T_41) @[TLB.scala 100:18]
    node hitsVec_6 = and(vm_enabled, _hitsVec_T_27) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    node _GEN_29 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_7_valid_1, sectored_entries_0_7_valid_0) @[TLB.scala 100:{18,18}]
    node _GEN_30 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_7_valid_2, _GEN_29) @[TLB.scala 100:{18,18}]
    node _GEN_31 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_7_valid_3, _GEN_30) @[TLB.scala 100:{18,18}]
    skip
    node _hitsVec_T_31 = and(_GEN_31, _sector_hits_T_47) @[TLB.scala 100:18]
    node hitsVec_7 = and(vm_enabled, _hitsVec_T_31) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_8 = and(vm_enabled, superpage_hits_0) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_9 = and(vm_enabled, superpage_hits_1) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_10 = and(vm_enabled, superpage_hits_2) @[TLB.scala 214:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hitsVec_11 = and(vm_enabled, superpage_hits_3) @[TLB.scala 214:44]
    skip
    skip
    node _hitsVec_T_92 = bits(special_entry_tag, 26, 18) @[TLB.scala 95:46]
    skip
    node _hitsVec_T_94 = eq(_hitsVec_T_92, _superpage_hits_T_1) @[TLB.scala 95:77]
    skip
    node _hitsVec_T_96 = and(special_entry_valid_0, _hitsVec_T_94) @[TLB.scala 95:29]
    skip
    skip
    node _hitsVec_T_97 = bits(special_entry_tag, 17, 9) @[TLB.scala 95:46]
    skip
    node _hitsVec_T_99 = eq(_hitsVec_T_97, _superpage_hits_T_6) @[TLB.scala 95:77]
    node _hitsVec_T_100 = or(mpu_ppn_ignore, _hitsVec_T_99) @[TLB.scala 95:40]
    node _hitsVec_T_101 = and(_hitsVec_T_96, _hitsVec_T_100) @[TLB.scala 95:29]
    skip
    skip
    node _hitsVec_T_102 = bits(special_entry_tag, 8, 0) @[TLB.scala 95:46]
    skip
    node _hitsVec_T_104 = eq(_hitsVec_T_102, _superpage_hits_T_11) @[TLB.scala 95:77]
    node _hitsVec_T_105 = or(mpu_ppn_ignore_1, _hitsVec_T_104) @[TLB.scala 95:40]
    node _hitsVec_T_106 = and(_hitsVec_T_101, _hitsVec_T_105) @[TLB.scala 95:29]
    node hitsVec_12 = and(vm_enabled, _hitsVec_T_106) @[TLB.scala 214:44]
    node real_hits_lo_lo_hi = cat(hitsVec_2, hitsVec_1) @[Cat.scala 30:58]
    node real_hits_lo_lo = cat(real_hits_lo_lo_hi, hitsVec_0) @[Cat.scala 30:58]
    node real_hits_lo_hi_hi = cat(hitsVec_5, hitsVec_4) @[Cat.scala 30:58]
    node real_hits_lo_hi = cat(real_hits_lo_hi_hi, hitsVec_3) @[Cat.scala 30:58]
    node real_hits_lo = cat(real_hits_lo_hi, real_hits_lo_lo) @[Cat.scala 30:58]
    node real_hits_hi_lo_hi = cat(hitsVec_8, hitsVec_7) @[Cat.scala 30:58]
    node real_hits_hi_lo = cat(real_hits_hi_lo_hi, hitsVec_6) @[Cat.scala 30:58]
    node real_hits_hi_hi_lo = cat(hitsVec_10, hitsVec_9) @[Cat.scala 30:58]
    node real_hits_hi_hi_hi = cat(hitsVec_12, hitsVec_11) @[Cat.scala 30:58]
    node real_hits_hi_hi = cat(real_hits_hi_hi_hi, real_hits_hi_hi_lo) @[Cat.scala 30:58]
    node real_hits_hi = cat(real_hits_hi_hi, real_hits_hi_lo) @[Cat.scala 30:58]
    node real_hits = cat(real_hits_hi, real_hits_lo) @[Cat.scala 30:58]
    node hits_hi = not(vm_enabled) @[TLB.scala 216:18]
    node hits = cat(hits_hi, real_hits) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _GEN_33 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_0_data_1, sectored_entries_0_0_data_0)
    node _GEN_34 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_0_data_2, _GEN_33)
    node _GEN_35 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_0_data_3, _GEN_34)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_37 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_1_data_1, sectored_entries_0_1_data_0)
    node _GEN_38 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_1_data_2, _GEN_37)
    node _GEN_39 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_1_data_3, _GEN_38)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_41 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_2_data_1, sectored_entries_0_2_data_0)
    node _GEN_42 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_2_data_2, _GEN_41)
    node _GEN_43 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_2_data_3, _GEN_42)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_45 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_3_data_1, sectored_entries_0_3_data_0)
    node _GEN_46 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_3_data_2, _GEN_45)
    node _GEN_47 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_3_data_3, _GEN_46)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_49 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_4_data_1, sectored_entries_0_4_data_0)
    node _GEN_50 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_4_data_2, _GEN_49)
    node _GEN_51 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_4_data_3, _GEN_50)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_53 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_5_data_1, sectored_entries_0_5_data_0)
    node _GEN_54 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_5_data_2, _GEN_53)
    node _GEN_55 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_5_data_3, _GEN_54)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_57 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_6_data_1, sectored_entries_0_6_data_0)
    node _GEN_58 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_6_data_2, _GEN_57)
    node _GEN_59 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_6_data_3, _GEN_58)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_61 = mux(eq(UInt<2>("h1"), hitsVec_idx), sectored_entries_0_7_data_1, sectored_entries_0_7_data_0)
    node _GEN_62 = mux(eq(UInt<2>("h2"), hitsVec_idx), sectored_entries_0_7_data_2, _GEN_61)
    node _GEN_63 = mux(eq(UInt<2>("h3"), hitsVec_idx), sectored_entries_0_7_data_3, _GEN_62)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ppn_data_T_149 = bits(superpage_entries_0_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node ppn_hi = shr(ppn_data_barrier_8.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    node _ppn_T_1 = mux(superpage_hits_ignore_1, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_985 = pad(ppn_data_barrier_8.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_2 = or(_ppn_T_1, _GEN_985) @[TLB.scala 109:47]
    node ppn_lo = bits(_ppn_T_2, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_1 = cat(ppn_hi, ppn_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_4 = or(vpn, _GEN_985) @[TLB.scala 109:47]
    node ppn_lo_1 = bits(_ppn_T_4, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_5 = cat(ppn_hi_1, ppn_lo_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ppn_data_T_165 = bits(superpage_entries_1_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node ppn_hi_2 = shr(ppn_data_barrier_9.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    node _ppn_T_6 = mux(superpage_hits_ignore_4, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_987 = pad(ppn_data_barrier_9.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_7 = or(_ppn_T_6, _GEN_987) @[TLB.scala 109:47]
    node ppn_lo_2 = bits(_ppn_T_7, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_3 = cat(ppn_hi_2, ppn_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_9 = or(vpn, _GEN_987) @[TLB.scala 109:47]
    node ppn_lo_3 = bits(_ppn_T_9, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_10 = cat(ppn_hi_3, ppn_lo_3) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ppn_data_T_181 = bits(superpage_entries_2_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node ppn_hi_4 = shr(ppn_data_barrier_10.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    node _ppn_T_11 = mux(superpage_hits_ignore_7, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_989 = pad(ppn_data_barrier_10.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_12 = or(_ppn_T_11, _GEN_989) @[TLB.scala 109:47]
    node ppn_lo_4 = bits(_ppn_T_12, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_5 = cat(ppn_hi_4, ppn_lo_4) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_14 = or(vpn, _GEN_989) @[TLB.scala 109:47]
    node ppn_lo_5 = bits(_ppn_T_14, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_15 = cat(ppn_hi_5, ppn_lo_5) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _ppn_data_T_197 = bits(superpage_entries_3_data_0, 13, 13) @[TLB.scala 86:77]
    skip
    skip
    node ppn_hi_6 = shr(ppn_data_barrier_11.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    node _ppn_T_16 = mux(superpage_hits_ignore_10, vpn, UInt<27>("h0")) @[TLB.scala 109:28]
    node _GEN_991 = pad(ppn_data_barrier_11.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_17 = or(_ppn_T_16, _GEN_991) @[TLB.scala 109:47]
    node ppn_lo_6 = bits(_ppn_T_17, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_7 = cat(ppn_hi_6, ppn_lo_6) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_19 = or(vpn, _GEN_991) @[TLB.scala 109:47]
    node ppn_lo_7 = bits(_ppn_T_19, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_20 = cat(ppn_hi_7, ppn_lo_7) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node ppn_hi_8 = shr(ppn_data_barrier_12.io_y_ppn, 18) @[TLB.scala 106:26]
    skip
    skip
    skip
    node _GEN_993 = pad(ppn_data_barrier_12.io_y_ppn, 27) @[TLB.scala 109:47]
    node _ppn_T_22 = or(_mpu_ppn_T_1, _GEN_993) @[TLB.scala 109:47]
    node ppn_lo_8 = bits(_ppn_T_22, 17, 9) @[TLB.scala 109:58]
    node ppn_hi_9 = cat(ppn_hi_8, ppn_lo_8) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _ppn_T_24 = or(_mpu_ppn_T_3, _GEN_993) @[TLB.scala 109:47]
    node ppn_lo_9 = bits(_ppn_T_24, 8, 0) @[TLB.scala 109:58]
    node _ppn_T_25 = cat(ppn_hi_9, ppn_lo_9) @[Cat.scala 30:58]
    node _ppn_T_26 = bits(vpn, 19, 0) @[TLB.scala 217:77]
    node _ppn_T_27 = mux(hitsVec_0, ppn_data_barrier.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_28 = mux(hitsVec_1, ppn_data_barrier_1.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_29 = mux(hitsVec_2, ppn_data_barrier_2.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_30 = mux(hitsVec_3, ppn_data_barrier_3.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_31 = mux(hitsVec_4, ppn_data_barrier_4.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_32 = mux(hitsVec_5, ppn_data_barrier_5.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_33 = mux(hitsVec_6, ppn_data_barrier_6.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_34 = mux(hitsVec_7, ppn_data_barrier_7.io_y_ppn, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_35 = mux(hitsVec_8, _ppn_T_5, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_36 = mux(hitsVec_9, _ppn_T_10, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_37 = mux(hitsVec_10, _ppn_T_15, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_38 = mux(hitsVec_11, _ppn_T_20, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_39 = mux(hitsVec_12, _ppn_T_25, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_40 = mux(hits_hi, _ppn_T_26, UInt<20>("h0")) @[Mux.scala 27:72]
    node _ppn_T_41 = or(_ppn_T_27, _ppn_T_28) @[Mux.scala 27:72]
    node _ppn_T_42 = or(_ppn_T_41, _ppn_T_29) @[Mux.scala 27:72]
    node _ppn_T_43 = or(_ppn_T_42, _ppn_T_30) @[Mux.scala 27:72]
    node _ppn_T_44 = or(_ppn_T_43, _ppn_T_31) @[Mux.scala 27:72]
    node _ppn_T_45 = or(_ppn_T_44, _ppn_T_32) @[Mux.scala 27:72]
    node _ppn_T_46 = or(_ppn_T_45, _ppn_T_33) @[Mux.scala 27:72]
    node _ppn_T_47 = or(_ppn_T_46, _ppn_T_34) @[Mux.scala 27:72]
    node _ppn_T_48 = or(_ppn_T_47, _ppn_T_35) @[Mux.scala 27:72]
    node _ppn_T_49 = or(_ppn_T_48, _ppn_T_36) @[Mux.scala 27:72]
    node _ppn_T_50 = or(_ppn_T_49, _ppn_T_37) @[Mux.scala 27:72]
    node _ppn_T_51 = or(_ppn_T_50, _ppn_T_38) @[Mux.scala 27:72]
    node _ppn_T_52 = or(_ppn_T_51, _ppn_T_39) @[Mux.scala 27:72]
    node ppn = or(_ppn_T_52, _ppn_T_40) @[Mux.scala 27:72]
    node newEntry_g = and(io_ptw_resp_bits_pte_g, io_ptw_resp_bits_pte_v) @[TLB.scala 226:25]
    node _newEntry_sr_T = not(io_ptw_resp_bits_pte_w) @[PTW.scala 73:47]
    node _newEntry_sr_T_1 = and(io_ptw_resp_bits_pte_x, _newEntry_sr_T) @[PTW.scala 73:44]
    node _newEntry_sr_T_2 = or(io_ptw_resp_bits_pte_r, _newEntry_sr_T_1) @[PTW.scala 73:38]
    node _newEntry_sr_T_3 = and(io_ptw_resp_bits_pte_v, _newEntry_sr_T_2) @[PTW.scala 73:32]
    node _newEntry_sr_T_4 = and(_newEntry_sr_T_3, io_ptw_resp_bits_pte_a) @[PTW.scala 73:52]
    node newEntry_sr = and(_newEntry_sr_T_4, io_ptw_resp_bits_pte_r) @[PTW.scala 77:35]
    skip
    skip
    skip
    skip
    skip
    node _newEntry_sw_T_5 = and(_newEntry_sr_T_4, io_ptw_resp_bits_pte_w) @[PTW.scala 78:35]
    node newEntry_sw = and(_newEntry_sw_T_5, io_ptw_resp_bits_pte_d) @[PTW.scala 78:40]
    skip
    skip
    skip
    skip
    skip
    node newEntry_sx = and(_newEntry_sr_T_4, io_ptw_resp_bits_pte_x) @[PTW.scala 79:35]
    node _T = not(io_ptw_resp_bits_homogeneous) @[TLB.scala 240:37]
    skip
    skip
    skip
    skip
    node special_entry_data_0_lo_lo_lo = cat(cacheable, UInt<1>("h0")) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_lo_lo_hi = cat(_prot_w_T_43, prot_eff) @[TLB.scala 123:24]
    node special_entry_data_0_lo_lo = cat(special_entry_data_0_lo_lo_hi, special_entry_data_0_lo_lo_lo) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_lo_hi_lo = cat(_prot_w_T_43, _prot_w_T_43) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_lo_hi_hi = cat(prot_x, prot_r) @[TLB.scala 123:24]
    node special_entry_data_0_lo_hi = cat(special_entry_data_0_lo_hi_hi, special_entry_data_0_lo_hi_lo) @[TLB.scala 123:24]
    node special_entry_data_0_lo = cat(special_entry_data_0_lo_hi, special_entry_data_0_lo_lo) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_hi_lo_lo = cat(newEntry_sr, prot_w) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_hi_lo_hi = cat(newEntry_sw, newEntry_sx) @[TLB.scala 123:24]
    node special_entry_data_0_hi_lo = cat(special_entry_data_0_hi_lo_hi, special_entry_data_0_hi_lo_lo) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_hi_hi_lo = cat(newEntry_g, io_ptw_resp_bits_ae) @[TLB.scala 123:24]
    skip
    skip
    node special_entry_data_0_hi_hi_hi = cat(refill_ppn, io_ptw_resp_bits_pte_u) @[TLB.scala 123:24]
    node special_entry_data_0_hi_hi = cat(special_entry_data_0_hi_hi_hi, special_entry_data_0_hi_hi_lo) @[TLB.scala 123:24]
    node special_entry_data_0_hi = cat(special_entry_data_0_hi_hi, special_entry_data_0_hi_lo) @[TLB.scala 123:24]
    node _special_entry_data_0_T = cat(special_entry_data_0_hi, special_entry_data_0_lo) @[TLB.scala 123:24]
    node _GEN_64 = mux(invalidate_refill, UInt<1>("h0"), UInt<1>("h1")) @[TLB.scala 122:16 243:34 126:46]
    node _T_2 = lt(io_ptw_resp_bits_level, UInt<2>("h2")) @[TLB.scala 245:40]
    node _T_3 = eq(r_superpage_repl_addr, UInt<2>("h0")) @[TLB.scala 246:82]
    node _superpage_entries_0_level_T = bits(io_ptw_resp_bits_level, 0, 0) @[package.scala 154:13]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_65 = mux(_T_3, r_refill_tag, superpage_entries_0_tag) @[TLB.scala 118:14 166:30 246:89]
    node _GEN_66 = mux(_T_3, pad(_superpage_entries_0_level_T, 2), superpage_entries_0_level) @[TLB.scala 119:16 166:30 246:89]
    node _GEN_67 = mux(_T_3, _GEN_64, superpage_entries_0_valid_0) @[TLB.scala 166:30 246:89]
    node _GEN_68 = mux(_T_3, _special_entry_data_0_T, superpage_entries_0_data_0) @[TLB.scala 123:15 166:30 246:89]
    node _T_4 = eq(r_superpage_repl_addr, UInt<2>("h1")) @[TLB.scala 246:82]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_69 = mux(_T_4, r_refill_tag, superpage_entries_1_tag) @[TLB.scala 118:14 166:30 246:89]
    node _GEN_70 = mux(_T_4, pad(_superpage_entries_0_level_T, 2), superpage_entries_1_level) @[TLB.scala 119:16 166:30 246:89]
    node _GEN_71 = mux(_T_4, _GEN_64, superpage_entries_1_valid_0) @[TLB.scala 166:30 246:89]
    node _GEN_72 = mux(_T_4, _special_entry_data_0_T, superpage_entries_1_data_0) @[TLB.scala 123:15 166:30 246:89]
    node _T_5 = eq(r_superpage_repl_addr, UInt<2>("h2")) @[TLB.scala 246:82]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_73 = mux(_T_5, r_refill_tag, superpage_entries_2_tag) @[TLB.scala 118:14 166:30 246:89]
    node _GEN_74 = mux(_T_5, pad(_superpage_entries_0_level_T, 2), superpage_entries_2_level) @[TLB.scala 119:16 166:30 246:89]
    node _GEN_75 = mux(_T_5, _GEN_64, superpage_entries_2_valid_0) @[TLB.scala 166:30 246:89]
    node _GEN_76 = mux(_T_5, _special_entry_data_0_T, superpage_entries_2_data_0) @[TLB.scala 123:15 166:30 246:89]
    node _T_6 = eq(r_superpage_repl_addr, UInt<2>("h3")) @[TLB.scala 246:82]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_77 = mux(_T_6, r_refill_tag, superpage_entries_3_tag) @[TLB.scala 118:14 166:30 246:89]
    node _GEN_78 = mux(_T_6, pad(_superpage_entries_0_level_T, 2), superpage_entries_3_level) @[TLB.scala 119:16 166:30 246:89]
    node _GEN_79 = mux(_T_6, _GEN_64, superpage_entries_3_valid_0) @[TLB.scala 166:30 246:89]
    node _GEN_80 = mux(_T_6, _special_entry_data_0_T, superpage_entries_3_data_0) @[TLB.scala 123:15 166:30 246:89]
    node waddr = mux(r_sectored_hit, r_sectored_hit_addr, r_sectored_repl_addr) @[TLB.scala 252:22]
    node _T_7 = eq(waddr, UInt<3>("h0")) @[TLB.scala 253:75]
    node _T_8 = not(r_sectored_hit) @[TLB.scala 254:15]
    node _GEN_81 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_0_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_82 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_0_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_83 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_0_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_84 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_0_valid_3) @[TLB.scala 254:32 126:46 165:29]
    node idx = bits(r_refill_tag, 1, 0) @[package.scala 154:13]
    skip
    node _GEN_995 = eq(UInt<2>("h0"), idx) @[TLB.scala 122:{16,16}]
    node _GEN_85 = or(_GEN_995, _GEN_81) @[TLB.scala 122:{16,16}]
    node _GEN_996 = eq(UInt<2>("h1"), idx) @[TLB.scala 122:{16,16}]
    node _GEN_86 = or(_GEN_996, _GEN_82) @[TLB.scala 122:{16,16}]
    node _GEN_997 = eq(UInt<2>("h2"), idx) @[TLB.scala 122:{16,16}]
    node _GEN_87 = or(_GEN_997, _GEN_83) @[TLB.scala 122:{16,16}]
    node _GEN_998 = eq(UInt<2>("h3"), idx) @[TLB.scala 122:{16,16}]
    node _GEN_88 = or(_GEN_998, _GEN_84) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_89 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_0_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_90 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_0_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_91 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_0_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_92 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_0_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_93 = mux(invalidate_refill, UInt<1>("h0"), _GEN_85) @[TLB.scala 256:34 126:46]
    node _GEN_94 = mux(invalidate_refill, UInt<1>("h0"), _GEN_86) @[TLB.scala 256:34 126:46]
    node _GEN_95 = mux(invalidate_refill, UInt<1>("h0"), _GEN_87) @[TLB.scala 256:34 126:46]
    node _GEN_96 = mux(invalidate_refill, UInt<1>("h0"), _GEN_88) @[TLB.scala 256:34 126:46]
    node _GEN_97 = mux(_T_7, _GEN_93, sectored_entries_0_0_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_98 = mux(_T_7, _GEN_94, sectored_entries_0_0_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_99 = mux(_T_7, _GEN_95, sectored_entries_0_0_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_100 = mux(_T_7, _GEN_96, sectored_entries_0_0_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_101 = mux(_T_7, r_refill_tag, sectored_entries_0_0_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_103 = mux(_T_7, _GEN_89, sectored_entries_0_0_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_104 = mux(_T_7, _GEN_90, sectored_entries_0_0_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_105 = mux(_T_7, _GEN_91, sectored_entries_0_0_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_106 = mux(_T_7, _GEN_92, sectored_entries_0_0_data_3) @[TLB.scala 165:29 253:82]
    node _T_9 = eq(waddr, UInt<3>("h1")) @[TLB.scala 253:75]
    skip
    node _GEN_107 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_1_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_108 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_1_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_109 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_1_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_110 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_1_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_111 = or(_GEN_995, _GEN_107) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_112 = or(_GEN_996, _GEN_108) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_113 = or(_GEN_997, _GEN_109) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_114 = or(_GEN_998, _GEN_110) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_115 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_1_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_116 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_1_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_117 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_1_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_118 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_1_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_119 = mux(invalidate_refill, UInt<1>("h0"), _GEN_111) @[TLB.scala 256:34 126:46]
    node _GEN_120 = mux(invalidate_refill, UInt<1>("h0"), _GEN_112) @[TLB.scala 256:34 126:46]
    node _GEN_121 = mux(invalidate_refill, UInt<1>("h0"), _GEN_113) @[TLB.scala 256:34 126:46]
    node _GEN_122 = mux(invalidate_refill, UInt<1>("h0"), _GEN_114) @[TLB.scala 256:34 126:46]
    node _GEN_123 = mux(_T_9, _GEN_119, sectored_entries_0_1_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_124 = mux(_T_9, _GEN_120, sectored_entries_0_1_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_125 = mux(_T_9, _GEN_121, sectored_entries_0_1_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_126 = mux(_T_9, _GEN_122, sectored_entries_0_1_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_127 = mux(_T_9, r_refill_tag, sectored_entries_0_1_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_129 = mux(_T_9, _GEN_115, sectored_entries_0_1_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_130 = mux(_T_9, _GEN_116, sectored_entries_0_1_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_131 = mux(_T_9, _GEN_117, sectored_entries_0_1_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_132 = mux(_T_9, _GEN_118, sectored_entries_0_1_data_3) @[TLB.scala 165:29 253:82]
    node _T_11 = eq(waddr, UInt<3>("h2")) @[TLB.scala 253:75]
    skip
    node _GEN_133 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_2_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_134 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_2_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_135 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_2_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_136 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_2_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_137 = or(_GEN_995, _GEN_133) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_138 = or(_GEN_996, _GEN_134) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_139 = or(_GEN_997, _GEN_135) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_140 = or(_GEN_998, _GEN_136) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_141 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_2_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_142 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_2_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_143 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_2_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_144 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_2_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_145 = mux(invalidate_refill, UInt<1>("h0"), _GEN_137) @[TLB.scala 256:34 126:46]
    node _GEN_146 = mux(invalidate_refill, UInt<1>("h0"), _GEN_138) @[TLB.scala 256:34 126:46]
    node _GEN_147 = mux(invalidate_refill, UInt<1>("h0"), _GEN_139) @[TLB.scala 256:34 126:46]
    node _GEN_148 = mux(invalidate_refill, UInt<1>("h0"), _GEN_140) @[TLB.scala 256:34 126:46]
    node _GEN_149 = mux(_T_11, _GEN_145, sectored_entries_0_2_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_150 = mux(_T_11, _GEN_146, sectored_entries_0_2_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_151 = mux(_T_11, _GEN_147, sectored_entries_0_2_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_152 = mux(_T_11, _GEN_148, sectored_entries_0_2_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_153 = mux(_T_11, r_refill_tag, sectored_entries_0_2_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_155 = mux(_T_11, _GEN_141, sectored_entries_0_2_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_156 = mux(_T_11, _GEN_142, sectored_entries_0_2_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_157 = mux(_T_11, _GEN_143, sectored_entries_0_2_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_158 = mux(_T_11, _GEN_144, sectored_entries_0_2_data_3) @[TLB.scala 165:29 253:82]
    node _T_13 = eq(waddr, UInt<3>("h3")) @[TLB.scala 253:75]
    skip
    node _GEN_159 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_3_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_160 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_3_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_161 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_3_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_162 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_3_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_163 = or(_GEN_995, _GEN_159) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_164 = or(_GEN_996, _GEN_160) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_165 = or(_GEN_997, _GEN_161) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_166 = or(_GEN_998, _GEN_162) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_167 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_3_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_168 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_3_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_169 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_3_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_170 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_3_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_171 = mux(invalidate_refill, UInt<1>("h0"), _GEN_163) @[TLB.scala 256:34 126:46]
    node _GEN_172 = mux(invalidate_refill, UInt<1>("h0"), _GEN_164) @[TLB.scala 256:34 126:46]
    node _GEN_173 = mux(invalidate_refill, UInt<1>("h0"), _GEN_165) @[TLB.scala 256:34 126:46]
    node _GEN_174 = mux(invalidate_refill, UInt<1>("h0"), _GEN_166) @[TLB.scala 256:34 126:46]
    node _GEN_175 = mux(_T_13, _GEN_171, sectored_entries_0_3_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_176 = mux(_T_13, _GEN_172, sectored_entries_0_3_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_177 = mux(_T_13, _GEN_173, sectored_entries_0_3_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_178 = mux(_T_13, _GEN_174, sectored_entries_0_3_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_179 = mux(_T_13, r_refill_tag, sectored_entries_0_3_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_181 = mux(_T_13, _GEN_167, sectored_entries_0_3_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_182 = mux(_T_13, _GEN_168, sectored_entries_0_3_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_183 = mux(_T_13, _GEN_169, sectored_entries_0_3_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_184 = mux(_T_13, _GEN_170, sectored_entries_0_3_data_3) @[TLB.scala 165:29 253:82]
    node _T_15 = eq(waddr, UInt<3>("h4")) @[TLB.scala 253:75]
    skip
    node _GEN_185 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_4_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_186 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_4_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_187 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_4_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_188 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_4_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_189 = or(_GEN_995, _GEN_185) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_190 = or(_GEN_996, _GEN_186) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_191 = or(_GEN_997, _GEN_187) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_192 = or(_GEN_998, _GEN_188) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_193 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_4_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_194 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_4_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_195 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_4_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_196 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_4_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_197 = mux(invalidate_refill, UInt<1>("h0"), _GEN_189) @[TLB.scala 256:34 126:46]
    node _GEN_198 = mux(invalidate_refill, UInt<1>("h0"), _GEN_190) @[TLB.scala 256:34 126:46]
    node _GEN_199 = mux(invalidate_refill, UInt<1>("h0"), _GEN_191) @[TLB.scala 256:34 126:46]
    node _GEN_200 = mux(invalidate_refill, UInt<1>("h0"), _GEN_192) @[TLB.scala 256:34 126:46]
    node _GEN_201 = mux(_T_15, _GEN_197, sectored_entries_0_4_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_202 = mux(_T_15, _GEN_198, sectored_entries_0_4_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_203 = mux(_T_15, _GEN_199, sectored_entries_0_4_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_204 = mux(_T_15, _GEN_200, sectored_entries_0_4_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_205 = mux(_T_15, r_refill_tag, sectored_entries_0_4_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_207 = mux(_T_15, _GEN_193, sectored_entries_0_4_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_208 = mux(_T_15, _GEN_194, sectored_entries_0_4_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_209 = mux(_T_15, _GEN_195, sectored_entries_0_4_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_210 = mux(_T_15, _GEN_196, sectored_entries_0_4_data_3) @[TLB.scala 165:29 253:82]
    node _T_17 = eq(waddr, UInt<3>("h5")) @[TLB.scala 253:75]
    skip
    node _GEN_211 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_5_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_212 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_5_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_213 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_5_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_214 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_5_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_215 = or(_GEN_995, _GEN_211) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_216 = or(_GEN_996, _GEN_212) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_217 = or(_GEN_997, _GEN_213) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_218 = or(_GEN_998, _GEN_214) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_219 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_5_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_220 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_5_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_221 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_5_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_222 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_5_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_223 = mux(invalidate_refill, UInt<1>("h0"), _GEN_215) @[TLB.scala 256:34 126:46]
    node _GEN_224 = mux(invalidate_refill, UInt<1>("h0"), _GEN_216) @[TLB.scala 256:34 126:46]
    node _GEN_225 = mux(invalidate_refill, UInt<1>("h0"), _GEN_217) @[TLB.scala 256:34 126:46]
    node _GEN_226 = mux(invalidate_refill, UInt<1>("h0"), _GEN_218) @[TLB.scala 256:34 126:46]
    node _GEN_227 = mux(_T_17, _GEN_223, sectored_entries_0_5_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_228 = mux(_T_17, _GEN_224, sectored_entries_0_5_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_229 = mux(_T_17, _GEN_225, sectored_entries_0_5_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_230 = mux(_T_17, _GEN_226, sectored_entries_0_5_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_231 = mux(_T_17, r_refill_tag, sectored_entries_0_5_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_233 = mux(_T_17, _GEN_219, sectored_entries_0_5_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_234 = mux(_T_17, _GEN_220, sectored_entries_0_5_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_235 = mux(_T_17, _GEN_221, sectored_entries_0_5_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_236 = mux(_T_17, _GEN_222, sectored_entries_0_5_data_3) @[TLB.scala 165:29 253:82]
    node _T_19 = eq(waddr, UInt<3>("h6")) @[TLB.scala 253:75]
    skip
    node _GEN_237 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_6_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_238 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_6_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_239 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_6_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_240 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_6_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_241 = or(_GEN_995, _GEN_237) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_242 = or(_GEN_996, _GEN_238) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_243 = or(_GEN_997, _GEN_239) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_244 = or(_GEN_998, _GEN_240) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_245 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_6_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_246 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_6_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_247 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_6_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_248 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_6_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_249 = mux(invalidate_refill, UInt<1>("h0"), _GEN_241) @[TLB.scala 256:34 126:46]
    node _GEN_250 = mux(invalidate_refill, UInt<1>("h0"), _GEN_242) @[TLB.scala 256:34 126:46]
    node _GEN_251 = mux(invalidate_refill, UInt<1>("h0"), _GEN_243) @[TLB.scala 256:34 126:46]
    node _GEN_252 = mux(invalidate_refill, UInt<1>("h0"), _GEN_244) @[TLB.scala 256:34 126:46]
    node _GEN_253 = mux(_T_19, _GEN_249, sectored_entries_0_6_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_254 = mux(_T_19, _GEN_250, sectored_entries_0_6_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_255 = mux(_T_19, _GEN_251, sectored_entries_0_6_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_256 = mux(_T_19, _GEN_252, sectored_entries_0_6_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_257 = mux(_T_19, r_refill_tag, sectored_entries_0_6_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_259 = mux(_T_19, _GEN_245, sectored_entries_0_6_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_260 = mux(_T_19, _GEN_246, sectored_entries_0_6_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_261 = mux(_T_19, _GEN_247, sectored_entries_0_6_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_262 = mux(_T_19, _GEN_248, sectored_entries_0_6_data_3) @[TLB.scala 165:29 253:82]
    node _T_21 = eq(waddr, UInt<3>("h7")) @[TLB.scala 253:75]
    skip
    node _GEN_263 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_7_valid_0) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_264 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_7_valid_1) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_265 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_7_valid_2) @[TLB.scala 254:32 126:46 165:29]
    node _GEN_266 = mux(_T_8, UInt<1>("h0"), sectored_entries_0_7_valid_3) @[TLB.scala 254:32 126:46 165:29]
    skip
    skip
    skip
    node _GEN_267 = or(_GEN_995, _GEN_263) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_268 = or(_GEN_996, _GEN_264) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_269 = or(_GEN_997, _GEN_265) @[TLB.scala 122:{16,16}]
    skip
    node _GEN_270 = or(_GEN_998, _GEN_266) @[TLB.scala 122:{16,16}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_271 = mux(eq(UInt<2>("h0"), idx), _special_entry_data_0_T, sectored_entries_0_7_data_0) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_272 = mux(eq(UInt<2>("h1"), idx), _special_entry_data_0_T, sectored_entries_0_7_data_1) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_273 = mux(eq(UInt<2>("h2"), idx), _special_entry_data_0_T, sectored_entries_0_7_data_2) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_274 = mux(eq(UInt<2>("h3"), idx), _special_entry_data_0_T, sectored_entries_0_7_data_3) @[TLB.scala 123:{15,15} 165:29]
    node _GEN_275 = mux(invalidate_refill, UInt<1>("h0"), _GEN_267) @[TLB.scala 256:34 126:46]
    node _GEN_276 = mux(invalidate_refill, UInt<1>("h0"), _GEN_268) @[TLB.scala 256:34 126:46]
    node _GEN_277 = mux(invalidate_refill, UInt<1>("h0"), _GEN_269) @[TLB.scala 256:34 126:46]
    node _GEN_278 = mux(invalidate_refill, UInt<1>("h0"), _GEN_270) @[TLB.scala 256:34 126:46]
    node _GEN_279 = mux(_T_21, _GEN_275, sectored_entries_0_7_valid_0) @[TLB.scala 165:29 253:82]
    node _GEN_280 = mux(_T_21, _GEN_276, sectored_entries_0_7_valid_1) @[TLB.scala 165:29 253:82]
    node _GEN_281 = mux(_T_21, _GEN_277, sectored_entries_0_7_valid_2) @[TLB.scala 165:29 253:82]
    node _GEN_282 = mux(_T_21, _GEN_278, sectored_entries_0_7_valid_3) @[TLB.scala 165:29 253:82]
    node _GEN_283 = mux(_T_21, r_refill_tag, sectored_entries_0_7_tag) @[TLB.scala 118:14 165:29 253:82]
    skip
    node _GEN_285 = mux(_T_21, _GEN_271, sectored_entries_0_7_data_0) @[TLB.scala 165:29 253:82]
    node _GEN_286 = mux(_T_21, _GEN_272, sectored_entries_0_7_data_1) @[TLB.scala 165:29 253:82]
    node _GEN_287 = mux(_T_21, _GEN_273, sectored_entries_0_7_data_2) @[TLB.scala 165:29 253:82]
    node _GEN_288 = mux(_T_21, _GEN_274, sectored_entries_0_7_data_3) @[TLB.scala 165:29 253:82]
    node _GEN_289 = mux(_T_2, _GEN_65, superpage_entries_0_tag) @[TLB.scala 166:30 245:54]
    node _GEN_290 = mux(_T_2, _GEN_66, superpage_entries_0_level) @[TLB.scala 166:30 245:54]
    node _GEN_291 = mux(_T_2, _GEN_67, superpage_entries_0_valid_0) @[TLB.scala 166:30 245:54]
    node _GEN_292 = mux(_T_2, _GEN_68, superpage_entries_0_data_0) @[TLB.scala 166:30 245:54]
    node _GEN_293 = mux(_T_2, _GEN_69, superpage_entries_1_tag) @[TLB.scala 166:30 245:54]
    node _GEN_294 = mux(_T_2, _GEN_70, superpage_entries_1_level) @[TLB.scala 166:30 245:54]
    node _GEN_295 = mux(_T_2, _GEN_71, superpage_entries_1_valid_0) @[TLB.scala 166:30 245:54]
    node _GEN_296 = mux(_T_2, _GEN_72, superpage_entries_1_data_0) @[TLB.scala 166:30 245:54]
    node _GEN_297 = mux(_T_2, _GEN_73, superpage_entries_2_tag) @[TLB.scala 166:30 245:54]
    node _GEN_298 = mux(_T_2, _GEN_74, superpage_entries_2_level) @[TLB.scala 166:30 245:54]
    node _GEN_299 = mux(_T_2, _GEN_75, superpage_entries_2_valid_0) @[TLB.scala 166:30 245:54]
    node _GEN_300 = mux(_T_2, _GEN_76, superpage_entries_2_data_0) @[TLB.scala 166:30 245:54]
    node _GEN_301 = mux(_T_2, _GEN_77, superpage_entries_3_tag) @[TLB.scala 166:30 245:54]
    node _GEN_302 = mux(_T_2, _GEN_78, superpage_entries_3_level) @[TLB.scala 166:30 245:54]
    node _GEN_303 = mux(_T_2, _GEN_79, superpage_entries_3_valid_0) @[TLB.scala 166:30 245:54]
    node _GEN_304 = mux(_T_2, _GEN_80, superpage_entries_3_data_0) @[TLB.scala 166:30 245:54]
    node _GEN_305 = mux(_T_2, sectored_entries_0_0_valid_0, _GEN_97) @[TLB.scala 165:29 245:54]
    node _GEN_306 = mux(_T_2, sectored_entries_0_0_valid_1, _GEN_98) @[TLB.scala 165:29 245:54]
    node _GEN_307 = mux(_T_2, sectored_entries_0_0_valid_2, _GEN_99) @[TLB.scala 165:29 245:54]
    node _GEN_308 = mux(_T_2, sectored_entries_0_0_valid_3, _GEN_100) @[TLB.scala 165:29 245:54]
    node _GEN_309 = mux(_T_2, sectored_entries_0_0_tag, _GEN_101) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_311 = mux(_T_2, sectored_entries_0_0_data_0, _GEN_103) @[TLB.scala 165:29 245:54]
    node _GEN_312 = mux(_T_2, sectored_entries_0_0_data_1, _GEN_104) @[TLB.scala 165:29 245:54]
    node _GEN_313 = mux(_T_2, sectored_entries_0_0_data_2, _GEN_105) @[TLB.scala 165:29 245:54]
    node _GEN_314 = mux(_T_2, sectored_entries_0_0_data_3, _GEN_106) @[TLB.scala 165:29 245:54]
    node _GEN_315 = mux(_T_2, sectored_entries_0_1_valid_0, _GEN_123) @[TLB.scala 165:29 245:54]
    node _GEN_316 = mux(_T_2, sectored_entries_0_1_valid_1, _GEN_124) @[TLB.scala 165:29 245:54]
    node _GEN_317 = mux(_T_2, sectored_entries_0_1_valid_2, _GEN_125) @[TLB.scala 165:29 245:54]
    node _GEN_318 = mux(_T_2, sectored_entries_0_1_valid_3, _GEN_126) @[TLB.scala 165:29 245:54]
    node _GEN_319 = mux(_T_2, sectored_entries_0_1_tag, _GEN_127) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_321 = mux(_T_2, sectored_entries_0_1_data_0, _GEN_129) @[TLB.scala 165:29 245:54]
    node _GEN_322 = mux(_T_2, sectored_entries_0_1_data_1, _GEN_130) @[TLB.scala 165:29 245:54]
    node _GEN_323 = mux(_T_2, sectored_entries_0_1_data_2, _GEN_131) @[TLB.scala 165:29 245:54]
    node _GEN_324 = mux(_T_2, sectored_entries_0_1_data_3, _GEN_132) @[TLB.scala 165:29 245:54]
    node _GEN_325 = mux(_T_2, sectored_entries_0_2_valid_0, _GEN_149) @[TLB.scala 165:29 245:54]
    node _GEN_326 = mux(_T_2, sectored_entries_0_2_valid_1, _GEN_150) @[TLB.scala 165:29 245:54]
    node _GEN_327 = mux(_T_2, sectored_entries_0_2_valid_2, _GEN_151) @[TLB.scala 165:29 245:54]
    node _GEN_328 = mux(_T_2, sectored_entries_0_2_valid_3, _GEN_152) @[TLB.scala 165:29 245:54]
    node _GEN_329 = mux(_T_2, sectored_entries_0_2_tag, _GEN_153) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_331 = mux(_T_2, sectored_entries_0_2_data_0, _GEN_155) @[TLB.scala 165:29 245:54]
    node _GEN_332 = mux(_T_2, sectored_entries_0_2_data_1, _GEN_156) @[TLB.scala 165:29 245:54]
    node _GEN_333 = mux(_T_2, sectored_entries_0_2_data_2, _GEN_157) @[TLB.scala 165:29 245:54]
    node _GEN_334 = mux(_T_2, sectored_entries_0_2_data_3, _GEN_158) @[TLB.scala 165:29 245:54]
    node _GEN_335 = mux(_T_2, sectored_entries_0_3_valid_0, _GEN_175) @[TLB.scala 165:29 245:54]
    node _GEN_336 = mux(_T_2, sectored_entries_0_3_valid_1, _GEN_176) @[TLB.scala 165:29 245:54]
    node _GEN_337 = mux(_T_2, sectored_entries_0_3_valid_2, _GEN_177) @[TLB.scala 165:29 245:54]
    node _GEN_338 = mux(_T_2, sectored_entries_0_3_valid_3, _GEN_178) @[TLB.scala 165:29 245:54]
    node _GEN_339 = mux(_T_2, sectored_entries_0_3_tag, _GEN_179) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_341 = mux(_T_2, sectored_entries_0_3_data_0, _GEN_181) @[TLB.scala 165:29 245:54]
    node _GEN_342 = mux(_T_2, sectored_entries_0_3_data_1, _GEN_182) @[TLB.scala 165:29 245:54]
    node _GEN_343 = mux(_T_2, sectored_entries_0_3_data_2, _GEN_183) @[TLB.scala 165:29 245:54]
    node _GEN_344 = mux(_T_2, sectored_entries_0_3_data_3, _GEN_184) @[TLB.scala 165:29 245:54]
    node _GEN_345 = mux(_T_2, sectored_entries_0_4_valid_0, _GEN_201) @[TLB.scala 165:29 245:54]
    node _GEN_346 = mux(_T_2, sectored_entries_0_4_valid_1, _GEN_202) @[TLB.scala 165:29 245:54]
    node _GEN_347 = mux(_T_2, sectored_entries_0_4_valid_2, _GEN_203) @[TLB.scala 165:29 245:54]
    node _GEN_348 = mux(_T_2, sectored_entries_0_4_valid_3, _GEN_204) @[TLB.scala 165:29 245:54]
    node _GEN_349 = mux(_T_2, sectored_entries_0_4_tag, _GEN_205) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_351 = mux(_T_2, sectored_entries_0_4_data_0, _GEN_207) @[TLB.scala 165:29 245:54]
    node _GEN_352 = mux(_T_2, sectored_entries_0_4_data_1, _GEN_208) @[TLB.scala 165:29 245:54]
    node _GEN_353 = mux(_T_2, sectored_entries_0_4_data_2, _GEN_209) @[TLB.scala 165:29 245:54]
    node _GEN_354 = mux(_T_2, sectored_entries_0_4_data_3, _GEN_210) @[TLB.scala 165:29 245:54]
    node _GEN_355 = mux(_T_2, sectored_entries_0_5_valid_0, _GEN_227) @[TLB.scala 165:29 245:54]
    node _GEN_356 = mux(_T_2, sectored_entries_0_5_valid_1, _GEN_228) @[TLB.scala 165:29 245:54]
    node _GEN_357 = mux(_T_2, sectored_entries_0_5_valid_2, _GEN_229) @[TLB.scala 165:29 245:54]
    node _GEN_358 = mux(_T_2, sectored_entries_0_5_valid_3, _GEN_230) @[TLB.scala 165:29 245:54]
    node _GEN_359 = mux(_T_2, sectored_entries_0_5_tag, _GEN_231) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_361 = mux(_T_2, sectored_entries_0_5_data_0, _GEN_233) @[TLB.scala 165:29 245:54]
    node _GEN_362 = mux(_T_2, sectored_entries_0_5_data_1, _GEN_234) @[TLB.scala 165:29 245:54]
    node _GEN_363 = mux(_T_2, sectored_entries_0_5_data_2, _GEN_235) @[TLB.scala 165:29 245:54]
    node _GEN_364 = mux(_T_2, sectored_entries_0_5_data_3, _GEN_236) @[TLB.scala 165:29 245:54]
    node _GEN_365 = mux(_T_2, sectored_entries_0_6_valid_0, _GEN_253) @[TLB.scala 165:29 245:54]
    node _GEN_366 = mux(_T_2, sectored_entries_0_6_valid_1, _GEN_254) @[TLB.scala 165:29 245:54]
    node _GEN_367 = mux(_T_2, sectored_entries_0_6_valid_2, _GEN_255) @[TLB.scala 165:29 245:54]
    node _GEN_368 = mux(_T_2, sectored_entries_0_6_valid_3, _GEN_256) @[TLB.scala 165:29 245:54]
    node _GEN_369 = mux(_T_2, sectored_entries_0_6_tag, _GEN_257) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_371 = mux(_T_2, sectored_entries_0_6_data_0, _GEN_259) @[TLB.scala 165:29 245:54]
    node _GEN_372 = mux(_T_2, sectored_entries_0_6_data_1, _GEN_260) @[TLB.scala 165:29 245:54]
    node _GEN_373 = mux(_T_2, sectored_entries_0_6_data_2, _GEN_261) @[TLB.scala 165:29 245:54]
    node _GEN_374 = mux(_T_2, sectored_entries_0_6_data_3, _GEN_262) @[TLB.scala 165:29 245:54]
    node _GEN_375 = mux(_T_2, sectored_entries_0_7_valid_0, _GEN_279) @[TLB.scala 165:29 245:54]
    node _GEN_376 = mux(_T_2, sectored_entries_0_7_valid_1, _GEN_280) @[TLB.scala 165:29 245:54]
    node _GEN_377 = mux(_T_2, sectored_entries_0_7_valid_2, _GEN_281) @[TLB.scala 165:29 245:54]
    node _GEN_378 = mux(_T_2, sectored_entries_0_7_valid_3, _GEN_282) @[TLB.scala 165:29 245:54]
    node _GEN_379 = mux(_T_2, sectored_entries_0_7_tag, _GEN_283) @[TLB.scala 165:29 245:54]
    skip
    node _GEN_381 = mux(_T_2, sectored_entries_0_7_data_0, _GEN_285) @[TLB.scala 165:29 245:54]
    node _GEN_382 = mux(_T_2, sectored_entries_0_7_data_1, _GEN_286) @[TLB.scala 165:29 245:54]
    node _GEN_383 = mux(_T_2, sectored_entries_0_7_data_2, _GEN_287) @[TLB.scala 165:29 245:54]
    node _GEN_384 = mux(_T_2, sectored_entries_0_7_data_3, _GEN_288) @[TLB.scala 165:29 245:54]
    node _GEN_385 = mux(_T, r_refill_tag, special_entry_tag) @[TLB.scala 118:14 167:56 240:68]
    node _GEN_386 = mux(_T, io_ptw_resp_bits_level, special_entry_level) @[TLB.scala 119:16 167:56 240:68]
    node _GEN_387 = mux(_T, _GEN_64, special_entry_valid_0) @[TLB.scala 167:56 240:68]
    node _GEN_388 = mux(_T, _special_entry_data_0_T, special_entry_data_0) @[TLB.scala 123:15 167:56 240:68]
    node _GEN_389 = mux(_T, superpage_entries_0_tag, _GEN_289) @[TLB.scala 166:30 240:68]
    node _GEN_390 = mux(_T, superpage_entries_0_level, _GEN_290) @[TLB.scala 166:30 240:68]
    node _GEN_391 = mux(_T, superpage_entries_0_valid_0, _GEN_291) @[TLB.scala 166:30 240:68]
    node _GEN_392 = mux(_T, superpage_entries_0_data_0, _GEN_292) @[TLB.scala 166:30 240:68]
    node _GEN_393 = mux(_T, superpage_entries_1_tag, _GEN_293) @[TLB.scala 166:30 240:68]
    node _GEN_394 = mux(_T, superpage_entries_1_level, _GEN_294) @[TLB.scala 166:30 240:68]
    node _GEN_395 = mux(_T, superpage_entries_1_valid_0, _GEN_295) @[TLB.scala 166:30 240:68]
    node _GEN_396 = mux(_T, superpage_entries_1_data_0, _GEN_296) @[TLB.scala 166:30 240:68]
    node _GEN_397 = mux(_T, superpage_entries_2_tag, _GEN_297) @[TLB.scala 166:30 240:68]
    node _GEN_398 = mux(_T, superpage_entries_2_level, _GEN_298) @[TLB.scala 166:30 240:68]
    node _GEN_399 = mux(_T, superpage_entries_2_valid_0, _GEN_299) @[TLB.scala 166:30 240:68]
    node _GEN_400 = mux(_T, superpage_entries_2_data_0, _GEN_300) @[TLB.scala 166:30 240:68]
    node _GEN_401 = mux(_T, superpage_entries_3_tag, _GEN_301) @[TLB.scala 166:30 240:68]
    node _GEN_402 = mux(_T, superpage_entries_3_level, _GEN_302) @[TLB.scala 166:30 240:68]
    node _GEN_403 = mux(_T, superpage_entries_3_valid_0, _GEN_303) @[TLB.scala 166:30 240:68]
    node _GEN_404 = mux(_T, superpage_entries_3_data_0, _GEN_304) @[TLB.scala 166:30 240:68]
    node _GEN_405 = mux(_T, sectored_entries_0_0_valid_0, _GEN_305) @[TLB.scala 165:29 240:68]
    node _GEN_406 = mux(_T, sectored_entries_0_0_valid_1, _GEN_306) @[TLB.scala 165:29 240:68]
    node _GEN_407 = mux(_T, sectored_entries_0_0_valid_2, _GEN_307) @[TLB.scala 165:29 240:68]
    node _GEN_408 = mux(_T, sectored_entries_0_0_valid_3, _GEN_308) @[TLB.scala 165:29 240:68]
    node _GEN_409 = mux(_T, sectored_entries_0_0_tag, _GEN_309) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_411 = mux(_T, sectored_entries_0_0_data_0, _GEN_311) @[TLB.scala 165:29 240:68]
    node _GEN_412 = mux(_T, sectored_entries_0_0_data_1, _GEN_312) @[TLB.scala 165:29 240:68]
    node _GEN_413 = mux(_T, sectored_entries_0_0_data_2, _GEN_313) @[TLB.scala 165:29 240:68]
    node _GEN_414 = mux(_T, sectored_entries_0_0_data_3, _GEN_314) @[TLB.scala 165:29 240:68]
    node _GEN_415 = mux(_T, sectored_entries_0_1_valid_0, _GEN_315) @[TLB.scala 165:29 240:68]
    node _GEN_416 = mux(_T, sectored_entries_0_1_valid_1, _GEN_316) @[TLB.scala 165:29 240:68]
    node _GEN_417 = mux(_T, sectored_entries_0_1_valid_2, _GEN_317) @[TLB.scala 165:29 240:68]
    node _GEN_418 = mux(_T, sectored_entries_0_1_valid_3, _GEN_318) @[TLB.scala 165:29 240:68]
    node _GEN_419 = mux(_T, sectored_entries_0_1_tag, _GEN_319) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_421 = mux(_T, sectored_entries_0_1_data_0, _GEN_321) @[TLB.scala 165:29 240:68]
    node _GEN_422 = mux(_T, sectored_entries_0_1_data_1, _GEN_322) @[TLB.scala 165:29 240:68]
    node _GEN_423 = mux(_T, sectored_entries_0_1_data_2, _GEN_323) @[TLB.scala 165:29 240:68]
    node _GEN_424 = mux(_T, sectored_entries_0_1_data_3, _GEN_324) @[TLB.scala 165:29 240:68]
    node _GEN_425 = mux(_T, sectored_entries_0_2_valid_0, _GEN_325) @[TLB.scala 165:29 240:68]
    node _GEN_426 = mux(_T, sectored_entries_0_2_valid_1, _GEN_326) @[TLB.scala 165:29 240:68]
    node _GEN_427 = mux(_T, sectored_entries_0_2_valid_2, _GEN_327) @[TLB.scala 165:29 240:68]
    node _GEN_428 = mux(_T, sectored_entries_0_2_valid_3, _GEN_328) @[TLB.scala 165:29 240:68]
    node _GEN_429 = mux(_T, sectored_entries_0_2_tag, _GEN_329) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_431 = mux(_T, sectored_entries_0_2_data_0, _GEN_331) @[TLB.scala 165:29 240:68]
    node _GEN_432 = mux(_T, sectored_entries_0_2_data_1, _GEN_332) @[TLB.scala 165:29 240:68]
    node _GEN_433 = mux(_T, sectored_entries_0_2_data_2, _GEN_333) @[TLB.scala 165:29 240:68]
    node _GEN_434 = mux(_T, sectored_entries_0_2_data_3, _GEN_334) @[TLB.scala 165:29 240:68]
    node _GEN_435 = mux(_T, sectored_entries_0_3_valid_0, _GEN_335) @[TLB.scala 165:29 240:68]
    node _GEN_436 = mux(_T, sectored_entries_0_3_valid_1, _GEN_336) @[TLB.scala 165:29 240:68]
    node _GEN_437 = mux(_T, sectored_entries_0_3_valid_2, _GEN_337) @[TLB.scala 165:29 240:68]
    node _GEN_438 = mux(_T, sectored_entries_0_3_valid_3, _GEN_338) @[TLB.scala 165:29 240:68]
    node _GEN_439 = mux(_T, sectored_entries_0_3_tag, _GEN_339) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_441 = mux(_T, sectored_entries_0_3_data_0, _GEN_341) @[TLB.scala 165:29 240:68]
    node _GEN_442 = mux(_T, sectored_entries_0_3_data_1, _GEN_342) @[TLB.scala 165:29 240:68]
    node _GEN_443 = mux(_T, sectored_entries_0_3_data_2, _GEN_343) @[TLB.scala 165:29 240:68]
    node _GEN_444 = mux(_T, sectored_entries_0_3_data_3, _GEN_344) @[TLB.scala 165:29 240:68]
    node _GEN_445 = mux(_T, sectored_entries_0_4_valid_0, _GEN_345) @[TLB.scala 165:29 240:68]
    node _GEN_446 = mux(_T, sectored_entries_0_4_valid_1, _GEN_346) @[TLB.scala 165:29 240:68]
    node _GEN_447 = mux(_T, sectored_entries_0_4_valid_2, _GEN_347) @[TLB.scala 165:29 240:68]
    node _GEN_448 = mux(_T, sectored_entries_0_4_valid_3, _GEN_348) @[TLB.scala 165:29 240:68]
    node _GEN_449 = mux(_T, sectored_entries_0_4_tag, _GEN_349) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_451 = mux(_T, sectored_entries_0_4_data_0, _GEN_351) @[TLB.scala 165:29 240:68]
    node _GEN_452 = mux(_T, sectored_entries_0_4_data_1, _GEN_352) @[TLB.scala 165:29 240:68]
    node _GEN_453 = mux(_T, sectored_entries_0_4_data_2, _GEN_353) @[TLB.scala 165:29 240:68]
    node _GEN_454 = mux(_T, sectored_entries_0_4_data_3, _GEN_354) @[TLB.scala 165:29 240:68]
    node _GEN_455 = mux(_T, sectored_entries_0_5_valid_0, _GEN_355) @[TLB.scala 165:29 240:68]
    node _GEN_456 = mux(_T, sectored_entries_0_5_valid_1, _GEN_356) @[TLB.scala 165:29 240:68]
    node _GEN_457 = mux(_T, sectored_entries_0_5_valid_2, _GEN_357) @[TLB.scala 165:29 240:68]
    node _GEN_458 = mux(_T, sectored_entries_0_5_valid_3, _GEN_358) @[TLB.scala 165:29 240:68]
    node _GEN_459 = mux(_T, sectored_entries_0_5_tag, _GEN_359) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_461 = mux(_T, sectored_entries_0_5_data_0, _GEN_361) @[TLB.scala 165:29 240:68]
    node _GEN_462 = mux(_T, sectored_entries_0_5_data_1, _GEN_362) @[TLB.scala 165:29 240:68]
    node _GEN_463 = mux(_T, sectored_entries_0_5_data_2, _GEN_363) @[TLB.scala 165:29 240:68]
    node _GEN_464 = mux(_T, sectored_entries_0_5_data_3, _GEN_364) @[TLB.scala 165:29 240:68]
    node _GEN_465 = mux(_T, sectored_entries_0_6_valid_0, _GEN_365) @[TLB.scala 165:29 240:68]
    node _GEN_466 = mux(_T, sectored_entries_0_6_valid_1, _GEN_366) @[TLB.scala 165:29 240:68]
    node _GEN_467 = mux(_T, sectored_entries_0_6_valid_2, _GEN_367) @[TLB.scala 165:29 240:68]
    node _GEN_468 = mux(_T, sectored_entries_0_6_valid_3, _GEN_368) @[TLB.scala 165:29 240:68]
    node _GEN_469 = mux(_T, sectored_entries_0_6_tag, _GEN_369) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_471 = mux(_T, sectored_entries_0_6_data_0, _GEN_371) @[TLB.scala 165:29 240:68]
    node _GEN_472 = mux(_T, sectored_entries_0_6_data_1, _GEN_372) @[TLB.scala 165:29 240:68]
    node _GEN_473 = mux(_T, sectored_entries_0_6_data_2, _GEN_373) @[TLB.scala 165:29 240:68]
    node _GEN_474 = mux(_T, sectored_entries_0_6_data_3, _GEN_374) @[TLB.scala 165:29 240:68]
    node _GEN_475 = mux(_T, sectored_entries_0_7_valid_0, _GEN_375) @[TLB.scala 165:29 240:68]
    node _GEN_476 = mux(_T, sectored_entries_0_7_valid_1, _GEN_376) @[TLB.scala 165:29 240:68]
    node _GEN_477 = mux(_T, sectored_entries_0_7_valid_2, _GEN_377) @[TLB.scala 165:29 240:68]
    node _GEN_478 = mux(_T, sectored_entries_0_7_valid_3, _GEN_378) @[TLB.scala 165:29 240:68]
    node _GEN_479 = mux(_T, sectored_entries_0_7_tag, _GEN_379) @[TLB.scala 165:29 240:68]
    skip
    node _GEN_481 = mux(_T, sectored_entries_0_7_data_0, _GEN_381) @[TLB.scala 165:29 240:68]
    node _GEN_482 = mux(_T, sectored_entries_0_7_data_1, _GEN_382) @[TLB.scala 165:29 240:68]
    node _GEN_483 = mux(_T, sectored_entries_0_7_data_2, _GEN_383) @[TLB.scala 165:29 240:68]
    node _GEN_484 = mux(_T, sectored_entries_0_7_data_3, _GEN_384) @[TLB.scala 165:29 240:68]
    skip
    skip
    node _GEN_487 = mux(io_ptw_resp_valid, _GEN_387, special_entry_valid_0) @[TLB.scala 220:20 167:56]
    skip
    skip
    skip
    node _GEN_491 = mux(io_ptw_resp_valid, _GEN_391, superpage_entries_0_valid_0) @[TLB.scala 220:20 166:30]
    skip
    skip
    skip
    node _GEN_495 = mux(io_ptw_resp_valid, _GEN_395, superpage_entries_1_valid_0) @[TLB.scala 220:20 166:30]
    skip
    skip
    skip
    node _GEN_499 = mux(io_ptw_resp_valid, _GEN_399, superpage_entries_2_valid_0) @[TLB.scala 220:20 166:30]
    skip
    skip
    skip
    node _GEN_503 = mux(io_ptw_resp_valid, _GEN_403, superpage_entries_3_valid_0) @[TLB.scala 220:20 166:30]
    skip
    node _GEN_505 = mux(io_ptw_resp_valid, _GEN_405, sectored_entries_0_0_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_506 = mux(io_ptw_resp_valid, _GEN_406, sectored_entries_0_0_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_507 = mux(io_ptw_resp_valid, _GEN_407, sectored_entries_0_0_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_508 = mux(io_ptw_resp_valid, _GEN_408, sectored_entries_0_0_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_515 = mux(io_ptw_resp_valid, _GEN_415, sectored_entries_0_1_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_516 = mux(io_ptw_resp_valid, _GEN_416, sectored_entries_0_1_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_517 = mux(io_ptw_resp_valid, _GEN_417, sectored_entries_0_1_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_518 = mux(io_ptw_resp_valid, _GEN_418, sectored_entries_0_1_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_525 = mux(io_ptw_resp_valid, _GEN_425, sectored_entries_0_2_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_526 = mux(io_ptw_resp_valid, _GEN_426, sectored_entries_0_2_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_527 = mux(io_ptw_resp_valid, _GEN_427, sectored_entries_0_2_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_528 = mux(io_ptw_resp_valid, _GEN_428, sectored_entries_0_2_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_535 = mux(io_ptw_resp_valid, _GEN_435, sectored_entries_0_3_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_536 = mux(io_ptw_resp_valid, _GEN_436, sectored_entries_0_3_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_537 = mux(io_ptw_resp_valid, _GEN_437, sectored_entries_0_3_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_538 = mux(io_ptw_resp_valid, _GEN_438, sectored_entries_0_3_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_545 = mux(io_ptw_resp_valid, _GEN_445, sectored_entries_0_4_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_546 = mux(io_ptw_resp_valid, _GEN_446, sectored_entries_0_4_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_547 = mux(io_ptw_resp_valid, _GEN_447, sectored_entries_0_4_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_548 = mux(io_ptw_resp_valid, _GEN_448, sectored_entries_0_4_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_555 = mux(io_ptw_resp_valid, _GEN_455, sectored_entries_0_5_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_556 = mux(io_ptw_resp_valid, _GEN_456, sectored_entries_0_5_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_557 = mux(io_ptw_resp_valid, _GEN_457, sectored_entries_0_5_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_558 = mux(io_ptw_resp_valid, _GEN_458, sectored_entries_0_5_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_565 = mux(io_ptw_resp_valid, _GEN_465, sectored_entries_0_6_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_566 = mux(io_ptw_resp_valid, _GEN_466, sectored_entries_0_6_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_567 = mux(io_ptw_resp_valid, _GEN_467, sectored_entries_0_6_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_568 = mux(io_ptw_resp_valid, _GEN_468, sectored_entries_0_6_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_575 = mux(io_ptw_resp_valid, _GEN_475, sectored_entries_0_7_valid_0) @[TLB.scala 220:20 165:29]
    node _GEN_576 = mux(io_ptw_resp_valid, _GEN_476, sectored_entries_0_7_valid_1) @[TLB.scala 220:20 165:29]
    node _GEN_577 = mux(io_ptw_resp_valid, _GEN_477, sectored_entries_0_7_valid_2) @[TLB.scala 220:20 165:29]
    node _GEN_578 = mux(io_ptw_resp_valid, _GEN_478, sectored_entries_0_7_valid_3) @[TLB.scala 220:20 165:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node ptw_ae_array_lo_lo_hi = cat(entries_barrier_2.io_y_ae, entries_barrier_1.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_lo = cat(ptw_ae_array_lo_lo_hi, entries_barrier.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_hi_hi = cat(entries_barrier_5.io_y_ae, entries_barrier_4.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo_hi = cat(ptw_ae_array_lo_hi_hi, entries_barrier_3.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_lo = cat(ptw_ae_array_lo_hi, ptw_ae_array_lo_lo) @[Cat.scala 30:58]
    node ptw_ae_array_hi_lo_hi = cat(entries_barrier_8.io_y_ae, entries_barrier_7.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_lo = cat(ptw_ae_array_hi_lo_hi, entries_barrier_6.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi_lo = cat(entries_barrier_10.io_y_ae, entries_barrier_9.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi_hi = cat(entries_barrier_12.io_y_ae, entries_barrier_11.io_y_ae) @[Cat.scala 30:58]
    node ptw_ae_array_hi_hi = cat(ptw_ae_array_hi_hi_hi, ptw_ae_array_hi_hi_lo) @[Cat.scala 30:58]
    node ptw_ae_array_hi = cat(ptw_ae_array_hi_hi, ptw_ae_array_hi_lo) @[Cat.scala 30:58]
    node ptw_ae_array_lo_1 = cat(ptw_ae_array_hi, ptw_ae_array_lo) @[Cat.scala 30:58]
    node ptw_ae_array = cat(UInt<1>("h0"), ptw_ae_array_lo_1) @[Cat.scala 30:58]
    skip
    skip
    node priv_rw_ok_lo_lo_hi = cat(entries_barrier_2.io_y_u, entries_barrier_1.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_lo = cat(priv_rw_ok_lo_lo_hi, entries_barrier.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_hi_hi = cat(entries_barrier_5.io_y_u, entries_barrier_4.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_lo_hi = cat(priv_rw_ok_lo_hi_hi, entries_barrier_3.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_lo = cat(priv_rw_ok_lo_hi, priv_rw_ok_lo_lo) @[Cat.scala 30:58]
    node priv_rw_ok_hi_lo_hi = cat(entries_barrier_8.io_y_u, entries_barrier_7.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_lo = cat(priv_rw_ok_hi_lo_hi, entries_barrier_6.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi_lo = cat(entries_barrier_10.io_y_u, entries_barrier_9.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi_hi = cat(entries_barrier_12.io_y_u, entries_barrier_11.io_y_u) @[Cat.scala 30:58]
    node priv_rw_ok_hi_hi = cat(priv_rw_ok_hi_hi_hi, priv_rw_ok_hi_hi_lo) @[Cat.scala 30:58]
    node priv_rw_ok_hi = cat(priv_rw_ok_hi_hi, priv_rw_ok_hi_lo) @[Cat.scala 30:58]
    node _priv_rw_ok_T_2 = cat(priv_rw_ok_hi, priv_rw_ok_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _priv_rw_ok_T_5 = not(_priv_rw_ok_T_2) @[TLB.scala 265:98]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node priv_x_ok = mux(priv_s, _priv_rw_ok_T_5, _priv_rw_ok_T_2) @[TLB.scala 266:22]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node r_array_lo_lo_hi_1 = cat(entries_barrier_2.io_y_sx, entries_barrier_1.io_y_sx) @[Cat.scala 30:58]
    node r_array_lo_lo_1 = cat(r_array_lo_lo_hi_1, entries_barrier.io_y_sx) @[Cat.scala 30:58]
    node r_array_lo_hi_hi_1 = cat(entries_barrier_5.io_y_sx, entries_barrier_4.io_y_sx) @[Cat.scala 30:58]
    node r_array_lo_hi_1 = cat(r_array_lo_hi_hi_1, entries_barrier_3.io_y_sx) @[Cat.scala 30:58]
    node r_array_lo_1 = cat(r_array_lo_hi_1, r_array_lo_lo_1) @[Cat.scala 30:58]
    node r_array_hi_lo_hi_1 = cat(entries_barrier_8.io_y_sx, entries_barrier_7.io_y_sx) @[Cat.scala 30:58]
    node r_array_hi_lo_1 = cat(r_array_hi_lo_hi_1, entries_barrier_6.io_y_sx) @[Cat.scala 30:58]
    node r_array_hi_hi_lo_1 = cat(entries_barrier_10.io_y_sx, entries_barrier_9.io_y_sx) @[Cat.scala 30:58]
    node r_array_hi_hi_hi_1 = cat(entries_barrier_12.io_y_sx, entries_barrier_11.io_y_sx) @[Cat.scala 30:58]
    node r_array_hi_hi_1 = cat(r_array_hi_hi_hi_1, r_array_hi_hi_lo_1) @[Cat.scala 30:58]
    node r_array_hi_1 = cat(r_array_hi_hi_1, r_array_hi_lo_1) @[Cat.scala 30:58]
    node _r_array_T_1 = cat(r_array_hi_1, r_array_lo_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node x_array_lo_1 = and(priv_x_ok, _r_array_T_1) @[TLB.scala 269:39]
    node x_array = cat(UInt<1>("h1"), x_array_lo_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pr_array_T_2 = not(ptw_ae_array) @[TLB.scala 270:89]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node px_array_hi = mux(prot_x, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 72:12]
    node px_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_px, normal_entries_barrier_1.io_y_px) @[Cat.scala 30:58]
    node px_array_lo_lo = cat(px_array_lo_lo_hi, normal_entries_barrier.io_y_px) @[Cat.scala 30:58]
    node px_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_px, normal_entries_barrier_4.io_y_px) @[Cat.scala 30:58]
    node px_array_lo_hi = cat(px_array_lo_hi_hi, normal_entries_barrier_3.io_y_px) @[Cat.scala 30:58]
    node px_array_lo = cat(px_array_lo_hi, px_array_lo_lo) @[Cat.scala 30:58]
    node px_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_px, normal_entries_barrier_7.io_y_px) @[Cat.scala 30:58]
    node px_array_hi_lo = cat(px_array_hi_lo_hi, normal_entries_barrier_6.io_y_px) @[Cat.scala 30:58]
    node px_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_px, normal_entries_barrier_10.io_y_px) @[Cat.scala 30:58]
    node px_array_hi_hi = cat(px_array_hi_hi_hi, normal_entries_barrier_9.io_y_px) @[Cat.scala 30:58]
    node px_array_hi_1 = cat(px_array_hi_hi, px_array_hi_lo) @[Cat.scala 30:58]
    node px_array_lo_1 = cat(px_array_hi_1, px_array_lo) @[Cat.scala 30:58]
    node _px_array_T_1 = cat(px_array_hi, px_array_lo_1) @[Cat.scala 30:58]
    skip
    node px_array = and(_px_array_T_1, _pr_array_T_2) @[TLB.scala 272:87]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node c_array_hi = mux(cacheable, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 72:12]
    node c_array_lo_lo_hi = cat(normal_entries_barrier_2.io_y_c, normal_entries_barrier_1.io_y_c) @[Cat.scala 30:58]
    node c_array_lo_lo = cat(c_array_lo_lo_hi, normal_entries_barrier.io_y_c) @[Cat.scala 30:58]
    node c_array_lo_hi_hi = cat(normal_entries_barrier_5.io_y_c, normal_entries_barrier_4.io_y_c) @[Cat.scala 30:58]
    node c_array_lo_hi = cat(c_array_lo_hi_hi, normal_entries_barrier_3.io_y_c) @[Cat.scala 30:58]
    node c_array_lo = cat(c_array_lo_hi, c_array_lo_lo) @[Cat.scala 30:58]
    node c_array_hi_lo_hi = cat(normal_entries_barrier_8.io_y_c, normal_entries_barrier_7.io_y_c) @[Cat.scala 30:58]
    node c_array_hi_lo = cat(c_array_hi_lo_hi, normal_entries_barrier_6.io_y_c) @[Cat.scala 30:58]
    node c_array_hi_hi_hi = cat(normal_entries_barrier_11.io_y_c, normal_entries_barrier_10.io_y_c) @[Cat.scala 30:58]
    node c_array_hi_hi = cat(c_array_hi_hi_hi, normal_entries_barrier_9.io_y_c) @[Cat.scala 30:58]
    node c_array_hi_1 = cat(c_array_hi_hi, c_array_hi_lo) @[Cat.scala 30:58]
    node c_array_lo_1 = cat(c_array_hi_1, c_array_lo) @[Cat.scala 30:58]
    node c_array = cat(c_array_hi, c_array_lo_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node bad_va_maskedVAddr = and(io_req_bits_vaddr, UInt<40>("hc000000000")) @[TLB.scala 289:43]
    skip
    node _bad_va_T_1 = eq(bad_va_maskedVAddr, UInt<40>("h0")) @[TLB.scala 290:61]
    node _bad_va_T_2 = eq(bad_va_maskedVAddr, UInt<40>("hc000000000")) @[TLB.scala 290:82]
    node _bad_va_T_3 = or(_bad_va_T_1, _bad_va_T_2) @[TLB.scala 290:67]
    node _bad_va_T_4 = not(_bad_va_T_3) @[TLB.scala 290:47]
    skip
    node bad_va = and(vm_enabled, _bad_va_T_4) @[TLB.scala 284:117]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _pf_inst_array_T = or(x_array, ptw_ae_array) @[TLB.scala 322:33]
    node pf_inst_array = not(_pf_inst_array_T) @[TLB.scala 322:23]
    node tlb_hit = orr(real_hits) @[TLB.scala 324:27]
    node _tlb_miss_T = not(bad_va) @[TLB.scala 325:32]
    node _tlb_miss_T_1 = and(vm_enabled, _tlb_miss_T) @[TLB.scala 325:29]
    node _tlb_miss_T_2 = not(tlb_hit) @[TLB.scala 325:43]
    node tlb_miss = and(_tlb_miss_T_1, _tlb_miss_T_2) @[TLB.scala 325:40]
    skip
    reg state_vec_0 : UInt<7>, clock with :
      reset => (UInt<1>("h0"), state_vec_0) @[Replacement.scala 305:17]
    reg state_reg_1 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), state_reg_1) @[Replacement.scala 168:70]
    node _T_23 = and(io_req_valid, vm_enabled) @[TLB.scala 329:22]
    node _T_24 = or(sector_hits_0, sector_hits_1) @[package.scala 72:59]
    node _T_25 = or(_T_24, sector_hits_2) @[package.scala 72:59]
    node _T_26 = or(_T_25, sector_hits_3) @[package.scala 72:59]
    node _T_27 = or(_T_26, sector_hits_4) @[package.scala 72:59]
    node _T_28 = or(_T_27, sector_hits_5) @[package.scala 72:59]
    node _T_29 = or(_T_28, sector_hits_6) @[package.scala 72:59]
    node _T_30 = or(_T_29, sector_hits_7) @[package.scala 72:59]
    node lo_lo = cat(sector_hits_1, sector_hits_0) @[Cat.scala 30:58]
    node lo_hi = cat(sector_hits_3, sector_hits_2) @[Cat.scala 30:58]
    node lo = cat(lo_hi, lo_lo) @[Cat.scala 30:58]
    node hi_lo = cat(sector_hits_5, sector_hits_4) @[Cat.scala 30:58]
    node hi_hi = cat(sector_hits_7, sector_hits_6) @[Cat.scala 30:58]
    node hi = cat(hi_hi, hi_lo) @[Cat.scala 30:58]
    node _T_31 = cat(hi, lo) @[Cat.scala 30:58]
    node hi_1 = bits(_T_31, 7, 4) @[OneHot.scala 30:18]
    node lo_1 = bits(_T_31, 3, 0) @[OneHot.scala 31:18]
    node hi_2 = orr(hi_1) @[OneHot.scala 32:14]
    node _T_32 = or(hi_1, lo_1) @[OneHot.scala 32:28]
    node hi_3 = bits(_T_32, 3, 2) @[OneHot.scala 30:18]
    node lo_2 = bits(_T_32, 1, 0) @[OneHot.scala 31:18]
    node hi_4 = orr(hi_3) @[OneHot.scala 32:14]
    node _T_33 = or(hi_3, lo_2) @[OneHot.scala 32:28]
    node lo_3 = bits(_T_33, 1, 1) @[CircuitMath.scala 30:8]
    node lo_4 = cat(hi_4, lo_3) @[Cat.scala 30:58]
    node state_vec_0_touch_way_sized = cat(hi_2, lo_4) @[Cat.scala 30:58]
    skip
    node _state_vec_0_set_left_older_T = bits(state_vec_0_touch_way_sized, 2, 2) @[Replacement.scala 196:43]
    node state_vec_0_hi_hi = not(_state_vec_0_set_left_older_T) @[Replacement.scala 196:33]
    node state_vec_0_left_subtree_state = bits(state_vec_0, 5, 3) @[package.scala 154:13]
    node state_vec_0_right_subtree_state = bits(state_vec_0, 2, 0) @[Replacement.scala 198:38]
    node _state_vec_0_T = bits(state_vec_0_touch_way_sized, 1, 0) @[package.scala 154:13]
    node _state_vec_0_set_left_older_T_1 = bits(_state_vec_0_T, 1, 1) @[Replacement.scala 196:43]
    node state_vec_0_hi_hi_1 = not(_state_vec_0_set_left_older_T_1) @[Replacement.scala 196:33]
    node state_vec_0_left_subtree_state_1 = bits(state_vec_0_left_subtree_state, 1, 1) @[package.scala 154:13]
    node state_vec_0_right_subtree_state_1 = bits(state_vec_0_left_subtree_state, 0, 0) @[Replacement.scala 198:38]
    node _state_vec_0_T_1 = bits(_state_vec_0_T, 0, 0) @[package.scala 154:13]
    skip
    node _state_vec_0_T_3 = not(_state_vec_0_T_1) @[Replacement.scala 218:7]
    node state_vec_0_hi_lo = mux(state_vec_0_hi_hi_1, state_vec_0_left_subtree_state_1, _state_vec_0_T_3) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_vec_0_lo = mux(state_vec_0_hi_hi_1, _state_vec_0_T_3, state_vec_0_right_subtree_state_1) @[Replacement.scala 206:16]
    node state_vec_0_hi = cat(state_vec_0_hi_hi_1, state_vec_0_hi_lo) @[Cat.scala 30:58]
    node _state_vec_0_T_7 = cat(state_vec_0_hi, state_vec_0_lo) @[Cat.scala 30:58]
    node state_vec_0_hi_lo_1 = mux(state_vec_0_hi_hi, state_vec_0_left_subtree_state, _state_vec_0_T_7) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_vec_0_left_subtree_state_2 = bits(state_vec_0_right_subtree_state, 1, 1) @[package.scala 154:13]
    node state_vec_0_right_subtree_state_2 = bits(state_vec_0_right_subtree_state, 0, 0) @[Replacement.scala 198:38]
    skip
    skip
    skip
    node state_vec_0_hi_lo_2 = mux(state_vec_0_hi_hi_1, state_vec_0_left_subtree_state_2, _state_vec_0_T_3) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_vec_0_lo_1 = mux(state_vec_0_hi_hi_1, _state_vec_0_T_3, state_vec_0_right_subtree_state_2) @[Replacement.scala 206:16]
    node state_vec_0_hi_1 = cat(state_vec_0_hi_hi_1, state_vec_0_hi_lo_2) @[Cat.scala 30:58]
    node _state_vec_0_T_15 = cat(state_vec_0_hi_1, state_vec_0_lo_1) @[Cat.scala 30:58]
    node state_vec_0_lo_2 = mux(state_vec_0_hi_hi, _state_vec_0_T_15, state_vec_0_right_subtree_state) @[Replacement.scala 206:16]
    node state_vec_0_hi_2 = cat(state_vec_0_hi_hi, state_vec_0_hi_lo_1) @[Cat.scala 30:58]
    node _state_vec_0_T_16 = cat(state_vec_0_hi_2, state_vec_0_lo_2) @[Cat.scala 30:58]
    node _GEN_649 = mux(_T_30, _state_vec_0_T_16, state_vec_0) @[Replacement.scala 305:17 308:20 TLB.scala 330:28]
    node _T_35 = or(superpage_hits_0, superpage_hits_1) @[package.scala 72:59]
    node _T_36 = or(_T_35, superpage_hits_2) @[package.scala 72:59]
    node _T_37 = or(_T_36, superpage_hits_3) @[package.scala 72:59]
    node lo_5 = cat(superpage_hits_1, superpage_hits_0) @[Cat.scala 30:58]
    node hi_5 = cat(superpage_hits_3, superpage_hits_2) @[Cat.scala 30:58]
    node _T_38 = cat(hi_5, lo_5) @[Cat.scala 30:58]
    node hi_6 = bits(_T_38, 3, 2) @[OneHot.scala 30:18]
    node lo_6 = bits(_T_38, 1, 0) @[OneHot.scala 31:18]
    node hi_7 = orr(hi_6) @[OneHot.scala 32:14]
    node _T_39 = or(hi_6, lo_6) @[OneHot.scala 32:28]
    node lo_7 = bits(_T_39, 1, 1) @[CircuitMath.scala 30:8]
    node state_reg_touch_way_sized = cat(hi_7, lo_7) @[Cat.scala 30:58]
    skip
    node _state_reg_set_left_older_T = bits(state_reg_touch_way_sized, 1, 1) @[Replacement.scala 196:43]
    node state_reg_hi_hi = not(_state_reg_set_left_older_T) @[Replacement.scala 196:33]
    node state_reg_left_subtree_state = bits(state_reg_1, 1, 1) @[package.scala 154:13]
    node state_reg_right_subtree_state = bits(state_reg_1, 0, 0) @[Replacement.scala 198:38]
    node _state_reg_T = bits(state_reg_touch_way_sized, 0, 0) @[package.scala 154:13]
    skip
    node _state_reg_T_2 = not(_state_reg_T) @[Replacement.scala 218:7]
    node state_reg_hi_lo = mux(state_reg_hi_hi, state_reg_left_subtree_state, _state_reg_T_2) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo = mux(state_reg_hi_hi, _state_reg_T_2, state_reg_right_subtree_state) @[Replacement.scala 206:16]
    node state_reg_hi = cat(state_reg_hi_hi, state_reg_hi_lo) @[Cat.scala 30:58]
    node _state_reg_T_6 = cat(state_reg_hi, state_reg_lo) @[Cat.scala 30:58]
    node _GEN_650 = mux(_T_37, _state_reg_T_6, state_reg_1) @[Replacement.scala 172:15 TLB.scala 331:31 Replacement.scala 168:70]
    node _GEN_651 = mux(_T_23, _GEN_649, state_vec_0) @[Replacement.scala 305:17 TLB.scala 329:37]
    node _GEN_652 = mux(_T_23, _GEN_650, state_reg_1) @[TLB.scala 329:37 Replacement.scala 168:70]
    node _multipleHits_T = bits(real_hits, 5, 0) @[Misc.scala 180:37]
    node _multipleHits_T_1 = bits(_multipleHits_T, 2, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne = bits(_multipleHits_T_1, 0, 0) @[Misc.scala 180:37]
    skip
    node _multipleHits_T_3 = bits(_multipleHits_T_1, 2, 1) @[Misc.scala 181:39]
    node multipleHits_leftOne_1 = bits(_multipleHits_T_3, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne = bits(_multipleHits_T_3, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_rightOne_1 = or(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:16]
    skip
    node multipleHits_rightTwo = and(multipleHits_leftOne_1, multipleHits_rightOne) @[Misc.scala 182:61]
    skip
    node multipleHits_leftOne_2 = or(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:16]
    skip
    node _multipleHits_T_9 = and(multipleHits_leftOne, multipleHits_rightOne_1) @[Misc.scala 182:61]
    node multipleHits_leftTwo = or(multipleHits_rightTwo, _multipleHits_T_9) @[Misc.scala 182:49]
    node _multipleHits_T_10 = bits(_multipleHits_T, 5, 3) @[Misc.scala 181:39]
    node multipleHits_leftOne_3 = bits(_multipleHits_T_10, 0, 0) @[Misc.scala 180:37]
    skip
    node _multipleHits_T_12 = bits(_multipleHits_T_10, 2, 1) @[Misc.scala 181:39]
    node multipleHits_leftOne_4 = bits(_multipleHits_T_12, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne_2 = bits(_multipleHits_T_12, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_rightOne_3 = or(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:16]
    skip
    node multipleHits_rightTwo_1 = and(multipleHits_leftOne_4, multipleHits_rightOne_2) @[Misc.scala 182:61]
    skip
    node multipleHits_rightOne_4 = or(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:16]
    skip
    node _multipleHits_T_18 = and(multipleHits_leftOne_3, multipleHits_rightOne_3) @[Misc.scala 182:61]
    node multipleHits_rightTwo_2 = or(multipleHits_rightTwo_1, _multipleHits_T_18) @[Misc.scala 182:49]
    node multipleHits_leftOne_5 = or(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:16]
    node _multipleHits_T_19 = or(multipleHits_leftTwo, multipleHits_rightTwo_2) @[Misc.scala 182:37]
    node _multipleHits_T_20 = and(multipleHits_leftOne_2, multipleHits_rightOne_4) @[Misc.scala 182:61]
    node multipleHits_leftTwo_1 = or(_multipleHits_T_19, _multipleHits_T_20) @[Misc.scala 182:49]
    node _multipleHits_T_21 = bits(real_hits, 12, 6) @[Misc.scala 181:39]
    node _multipleHits_T_22 = bits(_multipleHits_T_21, 2, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_6 = bits(_multipleHits_T_22, 0, 0) @[Misc.scala 180:37]
    skip
    node _multipleHits_T_24 = bits(_multipleHits_T_22, 2, 1) @[Misc.scala 181:39]
    node multipleHits_leftOne_7 = bits(_multipleHits_T_24, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne_5 = bits(_multipleHits_T_24, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_rightOne_6 = or(multipleHits_leftOne_7, multipleHits_rightOne_5) @[Misc.scala 182:16]
    skip
    node multipleHits_rightTwo_3 = and(multipleHits_leftOne_7, multipleHits_rightOne_5) @[Misc.scala 182:61]
    skip
    node multipleHits_leftOne_8 = or(multipleHits_leftOne_6, multipleHits_rightOne_6) @[Misc.scala 182:16]
    skip
    node _multipleHits_T_30 = and(multipleHits_leftOne_6, multipleHits_rightOne_6) @[Misc.scala 182:61]
    node multipleHits_leftTwo_2 = or(multipleHits_rightTwo_3, _multipleHits_T_30) @[Misc.scala 182:49]
    node _multipleHits_T_31 = bits(_multipleHits_T_21, 6, 3) @[Misc.scala 181:39]
    node _multipleHits_T_32 = bits(_multipleHits_T_31, 1, 0) @[Misc.scala 180:37]
    node multipleHits_leftOne_9 = bits(_multipleHits_T_32, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne_7 = bits(_multipleHits_T_32, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_leftOne_10 = or(multipleHits_leftOne_9, multipleHits_rightOne_7) @[Misc.scala 182:16]
    skip
    node multipleHits_leftTwo_3 = and(multipleHits_leftOne_9, multipleHits_rightOne_7) @[Misc.scala 182:61]
    skip
    node _multipleHits_T_37 = bits(_multipleHits_T_31, 3, 2) @[Misc.scala 181:39]
    node multipleHits_leftOne_11 = bits(_multipleHits_T_37, 0, 0) @[Misc.scala 180:37]
    skip
    node multipleHits_rightOne_8 = bits(_multipleHits_T_37, 1, 1) @[Misc.scala 181:39]
    skip
    node multipleHits_rightOne_9 = or(multipleHits_leftOne_11, multipleHits_rightOne_8) @[Misc.scala 182:16]
    skip
    node multipleHits_rightTwo_4 = and(multipleHits_leftOne_11, multipleHits_rightOne_8) @[Misc.scala 182:61]
    skip
    node multipleHits_rightOne_10 = or(multipleHits_leftOne_10, multipleHits_rightOne_9) @[Misc.scala 182:16]
    node _multipleHits_T_42 = or(multipleHits_leftTwo_3, multipleHits_rightTwo_4) @[Misc.scala 182:37]
    node _multipleHits_T_43 = and(multipleHits_leftOne_10, multipleHits_rightOne_9) @[Misc.scala 182:61]
    node multipleHits_rightTwo_5 = or(_multipleHits_T_42, _multipleHits_T_43) @[Misc.scala 182:49]
    node multipleHits_rightOne_11 = or(multipleHits_leftOne_8, multipleHits_rightOne_10) @[Misc.scala 182:16]
    node _multipleHits_T_44 = or(multipleHits_leftTwo_2, multipleHits_rightTwo_5) @[Misc.scala 182:37]
    node _multipleHits_T_45 = and(multipleHits_leftOne_8, multipleHits_rightOne_10) @[Misc.scala 182:61]
    node multipleHits_rightTwo_6 = or(_multipleHits_T_44, _multipleHits_T_45) @[Misc.scala 182:49]
    skip
    node _multipleHits_T_47 = or(multipleHits_leftTwo_1, multipleHits_rightTwo_6) @[Misc.scala 182:37]
    node _multipleHits_T_48 = and(multipleHits_leftOne_5, multipleHits_rightOne_11) @[Misc.scala 182:61]
    node multipleHits = or(_multipleHits_T_47, _multipleHits_T_48) @[Misc.scala 182:49]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_resp_pf_inst_T = and(pf_inst_array, hits) @[TLB.scala 344:47]
    node _io_resp_pf_inst_T_1 = orr(_io_resp_pf_inst_T) @[TLB.scala 344:55]
    skip
    skip
    skip
    skip
    skip
    node _io_resp_ae_inst_T = not(px_array) @[TLB.scala 347:23]
    node _io_resp_ae_inst_T_1 = and(_io_resp_ae_inst_T, hits) @[TLB.scala 347:33]
    skip
    skip
    skip
    skip
    skip
    node _io_resp_cacheable_T = and(c_array, hits) @[TLB.scala 351:33]
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_resp_miss_T = or(io_ptw_resp_valid, tlb_miss) @[TLB.scala 354:29]
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_41 = and(io_req_ready, io_req_valid) @[Decoupled.scala 40:37]
    node _T_42 = and(_T_41, tlb_miss) @[TLB.scala 363:25]
    node r_superpage_repl_addr_hi = bits(state_reg_1, 2, 2) @[Replacement.scala 243:38]
    skip
    skip
    skip
    skip
    node r_superpage_repl_addr_lo = mux(r_superpage_repl_addr_hi, state_reg_left_subtree_state, state_reg_right_subtree_state) @[Replacement.scala 250:16]
    node _r_superpage_repl_addr_T_2 = cat(r_superpage_repl_addr_hi, r_superpage_repl_addr_lo) @[Cat.scala 30:58]
    node r_superpage_repl_addr_valids_lo = cat(superpage_entries_1_valid_0, superpage_entries_0_valid_0) @[Cat.scala 30:58]
    node r_superpage_repl_addr_valids_hi = cat(superpage_entries_3_valid_0, superpage_entries_2_valid_0) @[Cat.scala 30:58]
    node r_superpage_repl_addr_valids = cat(r_superpage_repl_addr_valids_hi, r_superpage_repl_addr_valids_lo) @[Cat.scala 30:58]
    node _r_superpage_repl_addr_T_3 = andr(r_superpage_repl_addr_valids) @[TLB.scala 411:16]
    node _r_superpage_repl_addr_T_4 = not(r_superpage_repl_addr_valids) @[TLB.scala 411:43]
    node _r_superpage_repl_addr_T_5 = bits(_r_superpage_repl_addr_T_4, 0, 0) @[OneHot.scala 47:40]
    node _r_superpage_repl_addr_T_6 = bits(_r_superpage_repl_addr_T_4, 1, 1) @[OneHot.scala 47:40]
    node _r_superpage_repl_addr_T_7 = bits(_r_superpage_repl_addr_T_4, 2, 2) @[OneHot.scala 47:40]
    skip
    node _r_superpage_repl_addr_T_9 = mux(_r_superpage_repl_addr_T_7, UInt<2>("h2"), UInt<2>("h3")) @[Mux.scala 47:69]
    node _r_superpage_repl_addr_T_10 = mux(_r_superpage_repl_addr_T_6, UInt<2>("h1"), _r_superpage_repl_addr_T_9) @[Mux.scala 47:69]
    node _r_superpage_repl_addr_T_11 = mux(_r_superpage_repl_addr_T_5, UInt<2>("h0"), _r_superpage_repl_addr_T_10) @[Mux.scala 47:69]
    node _r_superpage_repl_addr_T_12 = mux(_r_superpage_repl_addr_T_3, _r_superpage_repl_addr_T_2, _r_superpage_repl_addr_T_11) @[TLB.scala 411:8]
    node r_sectored_repl_addr_hi = bits(state_vec_0, 6, 6) @[Replacement.scala 243:38]
    skip
    skip
    node r_sectored_repl_addr_hi_1 = bits(state_vec_0_left_subtree_state, 2, 2) @[Replacement.scala 243:38]
    skip
    skip
    skip
    skip
    node r_sectored_repl_addr_lo = mux(r_sectored_repl_addr_hi_1, state_vec_0_left_subtree_state_1, state_vec_0_right_subtree_state_1) @[Replacement.scala 250:16]
    node _r_sectored_repl_addr_T_2 = cat(r_sectored_repl_addr_hi_1, r_sectored_repl_addr_lo) @[Cat.scala 30:58]
    node r_sectored_repl_addr_hi_2 = bits(state_vec_0_right_subtree_state, 2, 2) @[Replacement.scala 243:38]
    skip
    skip
    skip
    skip
    node r_sectored_repl_addr_lo_1 = mux(r_sectored_repl_addr_hi_2, state_vec_0_left_subtree_state_2, state_vec_0_right_subtree_state_2) @[Replacement.scala 250:16]
    node _r_sectored_repl_addr_T_5 = cat(r_sectored_repl_addr_hi_2, r_sectored_repl_addr_lo_1) @[Cat.scala 30:58]
    node r_sectored_repl_addr_lo_2 = mux(r_sectored_repl_addr_hi, _r_sectored_repl_addr_T_2, _r_sectored_repl_addr_T_5) @[Replacement.scala 250:16]
    node _r_sectored_repl_addr_T_6 = cat(r_sectored_repl_addr_hi, r_sectored_repl_addr_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node r_sectored_repl_addr_valids_lo_lo = cat(_sector_hits_T_8, _sector_hits_T_2) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_lo_hi = cat(_sector_hits_T_20, _sector_hits_T_14) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_lo = cat(r_sectored_repl_addr_valids_lo_hi, r_sectored_repl_addr_valids_lo_lo) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_hi_lo = cat(_sector_hits_T_32, _sector_hits_T_26) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_hi_hi = cat(_sector_hits_T_44, _sector_hits_T_38) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids_hi = cat(r_sectored_repl_addr_valids_hi_hi, r_sectored_repl_addr_valids_hi_lo) @[Cat.scala 30:58]
    node r_sectored_repl_addr_valids = cat(r_sectored_repl_addr_valids_hi, r_sectored_repl_addr_valids_lo) @[Cat.scala 30:58]
    node _r_sectored_repl_addr_T_7 = andr(r_sectored_repl_addr_valids) @[TLB.scala 411:16]
    node _r_sectored_repl_addr_T_8 = not(r_sectored_repl_addr_valids) @[TLB.scala 411:43]
    node _r_sectored_repl_addr_T_9 = bits(_r_sectored_repl_addr_T_8, 0, 0) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_10 = bits(_r_sectored_repl_addr_T_8, 1, 1) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_11 = bits(_r_sectored_repl_addr_T_8, 2, 2) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_12 = bits(_r_sectored_repl_addr_T_8, 3, 3) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_13 = bits(_r_sectored_repl_addr_T_8, 4, 4) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_14 = bits(_r_sectored_repl_addr_T_8, 5, 5) @[OneHot.scala 47:40]
    node _r_sectored_repl_addr_T_15 = bits(_r_sectored_repl_addr_T_8, 6, 6) @[OneHot.scala 47:40]
    skip
    node _r_sectored_repl_addr_T_17 = mux(_r_sectored_repl_addr_T_15, UInt<3>("h6"), UInt<3>("h7")) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_18 = mux(_r_sectored_repl_addr_T_14, UInt<3>("h5"), _r_sectored_repl_addr_T_17) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_19 = mux(_r_sectored_repl_addr_T_13, UInt<3>("h4"), _r_sectored_repl_addr_T_18) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_20 = mux(_r_sectored_repl_addr_T_12, UInt<3>("h3"), _r_sectored_repl_addr_T_19) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_21 = mux(_r_sectored_repl_addr_T_11, UInt<3>("h2"), _r_sectored_repl_addr_T_20) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_22 = mux(_r_sectored_repl_addr_T_10, UInt<3>("h1"), _r_sectored_repl_addr_T_21) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_23 = mux(_r_sectored_repl_addr_T_9, UInt<3>("h0"), _r_sectored_repl_addr_T_22) @[Mux.scala 47:69]
    node _r_sectored_repl_addr_T_24 = mux(_r_sectored_repl_addr_T_7, _r_sectored_repl_addr_T_6, _r_sectored_repl_addr_T_23) @[TLB.scala 411:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_653 = mux(_T_42, UInt<2>("h1"), state) @[TLB.scala 363:38 364:13 173:18]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_659 = mux(io_sfence_valid, UInt<2>("h0"), _GEN_653) @[TLB.scala 373:{21,29}]
    node _state_T = mux(io_sfence_valid, UInt<2>("h3"), UInt<2>("h2")) @[TLB.scala 374:45]
    node _GEN_660 = mux(io_ptw_req_ready, _state_T, _GEN_659) @[TLB.scala 374:{31,39}]
    node _GEN_661 = mux(io_kill, UInt<2>("h0"), _GEN_660) @[TLB.scala 375:{22,30}]
    node _GEN_662 = mux(_invalidate_refill_T, _GEN_661, _GEN_653) @[TLB.scala 372:32]
    node _T_44 = eq(state, UInt<2>("h2")) @[TLB.scala 377:17]
    node _T_45 = and(_T_44, io_sfence_valid) @[TLB.scala 377:28]
    node _GEN_663 = mux(_T_45, UInt<2>("h3"), _GEN_662) @[TLB.scala 377:39 378:13]
    node _GEN_664 = mux(io_ptw_resp_valid, UInt<2>("h0"), _GEN_663) @[TLB.scala 380:30 381:13]
    node _T_46 = not(io_sfence_bits_rs1) @[TLB.scala 385:14]
    node _T_47 = shr(io_sfence_bits_addr, 12) @[TLB.scala 385:58]
    node _T_48 = eq(_T_47, vpn) @[TLB.scala 385:72]
    node _T_49 = or(_T_46, _T_48) @[TLB.scala 385:34]
    skip
    node _T_51 = or(_T_49, reset) @[TLB.scala 385:13]
    node _T_52 = not(_T_51) @[TLB.scala 385:13]
    skip
    skip
    skip
    skip
    skip
    node _GEN_665 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_505) @[TLB.scala 131:{58,58}]
    node _GEN_666 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_506) @[TLB.scala 131:{58,58}]
    node _GEN_667 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_507) @[TLB.scala 131:{58,58}]
    node _GEN_668 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_508) @[TLB.scala 131:{58,58}]
    node _GEN_669 = mux(_sector_hits_T_5, _GEN_665, _GEN_505) @[TLB.scala 131:34]
    node _GEN_670 = mux(_sector_hits_T_5, _GEN_666, _GEN_506) @[TLB.scala 131:34]
    node _GEN_671 = mux(_sector_hits_T_5, _GEN_667, _GEN_507) @[TLB.scala 131:34]
    node _GEN_672 = mux(_sector_hits_T_5, _GEN_668, _GEN_508) @[TLB.scala 131:34]
    skip
    node _T_58 = shr(_sector_hits_T_3, 18) @[TLB.scala 135:26]
    node _T_59 = eq(_T_58, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_60 = bits(sectored_entries_0_0_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_73 = bits(sectored_entries_0_0_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_76 = bits(sectored_entries_0_0_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_89 = bits(sectored_entries_0_0_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_92 = bits(sectored_entries_0_0_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_105 = bits(sectored_entries_0_0_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_108 = bits(sectored_entries_0_0_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_121 = bits(sectored_entries_0_0_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_673 = mux(_T_60, UInt<1>("h0"), _GEN_669) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_674 = mux(_T_76, UInt<1>("h0"), _GEN_670) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_675 = mux(_T_92, UInt<1>("h0"), _GEN_671) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_676 = mux(_T_108, UInt<1>("h0"), _GEN_672) @[TLB.scala 137:{41,45}]
    node _GEN_677 = mux(_T_59, _GEN_673, _GEN_669) @[TLB.scala 135:68]
    node _GEN_678 = mux(_T_59, _GEN_674, _GEN_670) @[TLB.scala 135:68]
    node _GEN_679 = mux(_T_59, _GEN_675, _GEN_671) @[TLB.scala 135:68]
    node _GEN_680 = mux(_T_59, _GEN_676, _GEN_672) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_188 = not(_T_73) @[TLB.scala 143:13]
    node _GEN_681 = mux(_T_188, UInt<1>("h0"), _GEN_505) @[TLB.scala 143:{19,23}]
    skip
    node _T_189 = not(_T_89) @[TLB.scala 143:13]
    node _GEN_682 = mux(_T_189, UInt<1>("h0"), _GEN_506) @[TLB.scala 143:{19,23}]
    skip
    node _T_190 = not(_T_105) @[TLB.scala 143:13]
    node _GEN_683 = mux(_T_190, UInt<1>("h0"), _GEN_507) @[TLB.scala 143:{19,23}]
    skip
    node _T_191 = not(_T_121) @[TLB.scala 143:13]
    node _GEN_684 = mux(_T_191, UInt<1>("h0"), _GEN_508) @[TLB.scala 143:{19,23}]
    node _GEN_685 = and(io_sfence_bits_rs2, _GEN_681) @[TLB.scala 388:40 126:46]
    node _GEN_686 = and(io_sfence_bits_rs2, _GEN_682) @[TLB.scala 388:40 126:46]
    node _GEN_687 = and(io_sfence_bits_rs2, _GEN_683) @[TLB.scala 388:40 126:46]
    node _GEN_688 = and(io_sfence_bits_rs2, _GEN_684) @[TLB.scala 388:40 126:46]
    node _GEN_689 = mux(io_sfence_bits_rs1, _GEN_677, _GEN_685) @[TLB.scala 387:35]
    node _GEN_690 = mux(io_sfence_bits_rs1, _GEN_678, _GEN_686) @[TLB.scala 387:35]
    node _GEN_691 = mux(io_sfence_bits_rs1, _GEN_679, _GEN_687) @[TLB.scala 387:35]
    node _GEN_692 = mux(io_sfence_bits_rs1, _GEN_680, _GEN_688) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_693 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_515) @[TLB.scala 131:{58,58}]
    node _GEN_694 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_516) @[TLB.scala 131:{58,58}]
    node _GEN_695 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_517) @[TLB.scala 131:{58,58}]
    node _GEN_696 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_518) @[TLB.scala 131:{58,58}]
    node _GEN_697 = mux(_sector_hits_T_11, _GEN_693, _GEN_515) @[TLB.scala 131:34]
    node _GEN_698 = mux(_sector_hits_T_11, _GEN_694, _GEN_516) @[TLB.scala 131:34]
    node _GEN_699 = mux(_sector_hits_T_11, _GEN_695, _GEN_517) @[TLB.scala 131:34]
    node _GEN_700 = mux(_sector_hits_T_11, _GEN_696, _GEN_518) @[TLB.scala 131:34]
    skip
    node _T_197 = shr(_sector_hits_T_9, 18) @[TLB.scala 135:26]
    node _T_198 = eq(_T_197, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_199 = bits(sectored_entries_0_1_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_212 = bits(sectored_entries_0_1_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_215 = bits(sectored_entries_0_1_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_228 = bits(sectored_entries_0_1_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_231 = bits(sectored_entries_0_1_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_244 = bits(sectored_entries_0_1_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_247 = bits(sectored_entries_0_1_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_260 = bits(sectored_entries_0_1_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_701 = mux(_T_199, UInt<1>("h0"), _GEN_697) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_702 = mux(_T_215, UInt<1>("h0"), _GEN_698) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_703 = mux(_T_231, UInt<1>("h0"), _GEN_699) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_704 = mux(_T_247, UInt<1>("h0"), _GEN_700) @[TLB.scala 137:{41,45}]
    node _GEN_705 = mux(_T_198, _GEN_701, _GEN_697) @[TLB.scala 135:68]
    node _GEN_706 = mux(_T_198, _GEN_702, _GEN_698) @[TLB.scala 135:68]
    node _GEN_707 = mux(_T_198, _GEN_703, _GEN_699) @[TLB.scala 135:68]
    node _GEN_708 = mux(_T_198, _GEN_704, _GEN_700) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_327 = not(_T_212) @[TLB.scala 143:13]
    node _GEN_709 = mux(_T_327, UInt<1>("h0"), _GEN_515) @[TLB.scala 143:{19,23}]
    skip
    node _T_328 = not(_T_228) @[TLB.scala 143:13]
    node _GEN_710 = mux(_T_328, UInt<1>("h0"), _GEN_516) @[TLB.scala 143:{19,23}]
    skip
    node _T_329 = not(_T_244) @[TLB.scala 143:13]
    node _GEN_711 = mux(_T_329, UInt<1>("h0"), _GEN_517) @[TLB.scala 143:{19,23}]
    skip
    node _T_330 = not(_T_260) @[TLB.scala 143:13]
    node _GEN_712 = mux(_T_330, UInt<1>("h0"), _GEN_518) @[TLB.scala 143:{19,23}]
    node _GEN_713 = and(io_sfence_bits_rs2, _GEN_709) @[TLB.scala 388:40 126:46]
    node _GEN_714 = and(io_sfence_bits_rs2, _GEN_710) @[TLB.scala 388:40 126:46]
    node _GEN_715 = and(io_sfence_bits_rs2, _GEN_711) @[TLB.scala 388:40 126:46]
    node _GEN_716 = and(io_sfence_bits_rs2, _GEN_712) @[TLB.scala 388:40 126:46]
    node _GEN_717 = mux(io_sfence_bits_rs1, _GEN_705, _GEN_713) @[TLB.scala 387:35]
    node _GEN_718 = mux(io_sfence_bits_rs1, _GEN_706, _GEN_714) @[TLB.scala 387:35]
    node _GEN_719 = mux(io_sfence_bits_rs1, _GEN_707, _GEN_715) @[TLB.scala 387:35]
    node _GEN_720 = mux(io_sfence_bits_rs1, _GEN_708, _GEN_716) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_721 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_525) @[TLB.scala 131:{58,58}]
    node _GEN_722 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_526) @[TLB.scala 131:{58,58}]
    node _GEN_723 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_527) @[TLB.scala 131:{58,58}]
    node _GEN_724 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_528) @[TLB.scala 131:{58,58}]
    node _GEN_725 = mux(_sector_hits_T_17, _GEN_721, _GEN_525) @[TLB.scala 131:34]
    node _GEN_726 = mux(_sector_hits_T_17, _GEN_722, _GEN_526) @[TLB.scala 131:34]
    node _GEN_727 = mux(_sector_hits_T_17, _GEN_723, _GEN_527) @[TLB.scala 131:34]
    node _GEN_728 = mux(_sector_hits_T_17, _GEN_724, _GEN_528) @[TLB.scala 131:34]
    skip
    node _T_336 = shr(_sector_hits_T_15, 18) @[TLB.scala 135:26]
    node _T_337 = eq(_T_336, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_338 = bits(sectored_entries_0_2_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_351 = bits(sectored_entries_0_2_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_354 = bits(sectored_entries_0_2_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_367 = bits(sectored_entries_0_2_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_370 = bits(sectored_entries_0_2_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_383 = bits(sectored_entries_0_2_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_386 = bits(sectored_entries_0_2_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_399 = bits(sectored_entries_0_2_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_729 = mux(_T_338, UInt<1>("h0"), _GEN_725) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_730 = mux(_T_354, UInt<1>("h0"), _GEN_726) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_731 = mux(_T_370, UInt<1>("h0"), _GEN_727) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_732 = mux(_T_386, UInt<1>("h0"), _GEN_728) @[TLB.scala 137:{41,45}]
    node _GEN_733 = mux(_T_337, _GEN_729, _GEN_725) @[TLB.scala 135:68]
    node _GEN_734 = mux(_T_337, _GEN_730, _GEN_726) @[TLB.scala 135:68]
    node _GEN_735 = mux(_T_337, _GEN_731, _GEN_727) @[TLB.scala 135:68]
    node _GEN_736 = mux(_T_337, _GEN_732, _GEN_728) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_466 = not(_T_351) @[TLB.scala 143:13]
    node _GEN_737 = mux(_T_466, UInt<1>("h0"), _GEN_525) @[TLB.scala 143:{19,23}]
    skip
    node _T_467 = not(_T_367) @[TLB.scala 143:13]
    node _GEN_738 = mux(_T_467, UInt<1>("h0"), _GEN_526) @[TLB.scala 143:{19,23}]
    skip
    node _T_468 = not(_T_383) @[TLB.scala 143:13]
    node _GEN_739 = mux(_T_468, UInt<1>("h0"), _GEN_527) @[TLB.scala 143:{19,23}]
    skip
    node _T_469 = not(_T_399) @[TLB.scala 143:13]
    node _GEN_740 = mux(_T_469, UInt<1>("h0"), _GEN_528) @[TLB.scala 143:{19,23}]
    node _GEN_741 = and(io_sfence_bits_rs2, _GEN_737) @[TLB.scala 388:40 126:46]
    node _GEN_742 = and(io_sfence_bits_rs2, _GEN_738) @[TLB.scala 388:40 126:46]
    node _GEN_743 = and(io_sfence_bits_rs2, _GEN_739) @[TLB.scala 388:40 126:46]
    node _GEN_744 = and(io_sfence_bits_rs2, _GEN_740) @[TLB.scala 388:40 126:46]
    node _GEN_745 = mux(io_sfence_bits_rs1, _GEN_733, _GEN_741) @[TLB.scala 387:35]
    node _GEN_746 = mux(io_sfence_bits_rs1, _GEN_734, _GEN_742) @[TLB.scala 387:35]
    node _GEN_747 = mux(io_sfence_bits_rs1, _GEN_735, _GEN_743) @[TLB.scala 387:35]
    node _GEN_748 = mux(io_sfence_bits_rs1, _GEN_736, _GEN_744) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_749 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_535) @[TLB.scala 131:{58,58}]
    node _GEN_750 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_536) @[TLB.scala 131:{58,58}]
    node _GEN_751 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_537) @[TLB.scala 131:{58,58}]
    node _GEN_752 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_538) @[TLB.scala 131:{58,58}]
    node _GEN_753 = mux(_sector_hits_T_23, _GEN_749, _GEN_535) @[TLB.scala 131:34]
    node _GEN_754 = mux(_sector_hits_T_23, _GEN_750, _GEN_536) @[TLB.scala 131:34]
    node _GEN_755 = mux(_sector_hits_T_23, _GEN_751, _GEN_537) @[TLB.scala 131:34]
    node _GEN_756 = mux(_sector_hits_T_23, _GEN_752, _GEN_538) @[TLB.scala 131:34]
    skip
    node _T_475 = shr(_sector_hits_T_21, 18) @[TLB.scala 135:26]
    node _T_476 = eq(_T_475, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_477 = bits(sectored_entries_0_3_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_490 = bits(sectored_entries_0_3_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_493 = bits(sectored_entries_0_3_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_506 = bits(sectored_entries_0_3_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_509 = bits(sectored_entries_0_3_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_522 = bits(sectored_entries_0_3_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_525 = bits(sectored_entries_0_3_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_538 = bits(sectored_entries_0_3_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_757 = mux(_T_477, UInt<1>("h0"), _GEN_753) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_758 = mux(_T_493, UInt<1>("h0"), _GEN_754) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_759 = mux(_T_509, UInt<1>("h0"), _GEN_755) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_760 = mux(_T_525, UInt<1>("h0"), _GEN_756) @[TLB.scala 137:{41,45}]
    node _GEN_761 = mux(_T_476, _GEN_757, _GEN_753) @[TLB.scala 135:68]
    node _GEN_762 = mux(_T_476, _GEN_758, _GEN_754) @[TLB.scala 135:68]
    node _GEN_763 = mux(_T_476, _GEN_759, _GEN_755) @[TLB.scala 135:68]
    node _GEN_764 = mux(_T_476, _GEN_760, _GEN_756) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_605 = not(_T_490) @[TLB.scala 143:13]
    node _GEN_765 = mux(_T_605, UInt<1>("h0"), _GEN_535) @[TLB.scala 143:{19,23}]
    skip
    node _T_606 = not(_T_506) @[TLB.scala 143:13]
    node _GEN_766 = mux(_T_606, UInt<1>("h0"), _GEN_536) @[TLB.scala 143:{19,23}]
    skip
    node _T_607 = not(_T_522) @[TLB.scala 143:13]
    node _GEN_767 = mux(_T_607, UInt<1>("h0"), _GEN_537) @[TLB.scala 143:{19,23}]
    skip
    node _T_608 = not(_T_538) @[TLB.scala 143:13]
    node _GEN_768 = mux(_T_608, UInt<1>("h0"), _GEN_538) @[TLB.scala 143:{19,23}]
    node _GEN_769 = and(io_sfence_bits_rs2, _GEN_765) @[TLB.scala 388:40 126:46]
    node _GEN_770 = and(io_sfence_bits_rs2, _GEN_766) @[TLB.scala 388:40 126:46]
    node _GEN_771 = and(io_sfence_bits_rs2, _GEN_767) @[TLB.scala 388:40 126:46]
    node _GEN_772 = and(io_sfence_bits_rs2, _GEN_768) @[TLB.scala 388:40 126:46]
    node _GEN_773 = mux(io_sfence_bits_rs1, _GEN_761, _GEN_769) @[TLB.scala 387:35]
    node _GEN_774 = mux(io_sfence_bits_rs1, _GEN_762, _GEN_770) @[TLB.scala 387:35]
    node _GEN_775 = mux(io_sfence_bits_rs1, _GEN_763, _GEN_771) @[TLB.scala 387:35]
    node _GEN_776 = mux(io_sfence_bits_rs1, _GEN_764, _GEN_772) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_777 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_545) @[TLB.scala 131:{58,58}]
    node _GEN_778 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_546) @[TLB.scala 131:{58,58}]
    node _GEN_779 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_547) @[TLB.scala 131:{58,58}]
    node _GEN_780 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_548) @[TLB.scala 131:{58,58}]
    node _GEN_781 = mux(_sector_hits_T_29, _GEN_777, _GEN_545) @[TLB.scala 131:34]
    node _GEN_782 = mux(_sector_hits_T_29, _GEN_778, _GEN_546) @[TLB.scala 131:34]
    node _GEN_783 = mux(_sector_hits_T_29, _GEN_779, _GEN_547) @[TLB.scala 131:34]
    node _GEN_784 = mux(_sector_hits_T_29, _GEN_780, _GEN_548) @[TLB.scala 131:34]
    skip
    node _T_614 = shr(_sector_hits_T_27, 18) @[TLB.scala 135:26]
    node _T_615 = eq(_T_614, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_616 = bits(sectored_entries_0_4_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_629 = bits(sectored_entries_0_4_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_632 = bits(sectored_entries_0_4_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_645 = bits(sectored_entries_0_4_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_648 = bits(sectored_entries_0_4_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_661 = bits(sectored_entries_0_4_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_664 = bits(sectored_entries_0_4_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_677 = bits(sectored_entries_0_4_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_785 = mux(_T_616, UInt<1>("h0"), _GEN_781) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_786 = mux(_T_632, UInt<1>("h0"), _GEN_782) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_787 = mux(_T_648, UInt<1>("h0"), _GEN_783) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_788 = mux(_T_664, UInt<1>("h0"), _GEN_784) @[TLB.scala 137:{41,45}]
    node _GEN_789 = mux(_T_615, _GEN_785, _GEN_781) @[TLB.scala 135:68]
    node _GEN_790 = mux(_T_615, _GEN_786, _GEN_782) @[TLB.scala 135:68]
    node _GEN_791 = mux(_T_615, _GEN_787, _GEN_783) @[TLB.scala 135:68]
    node _GEN_792 = mux(_T_615, _GEN_788, _GEN_784) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_744 = not(_T_629) @[TLB.scala 143:13]
    node _GEN_793 = mux(_T_744, UInt<1>("h0"), _GEN_545) @[TLB.scala 143:{19,23}]
    skip
    node _T_745 = not(_T_645) @[TLB.scala 143:13]
    node _GEN_794 = mux(_T_745, UInt<1>("h0"), _GEN_546) @[TLB.scala 143:{19,23}]
    skip
    node _T_746 = not(_T_661) @[TLB.scala 143:13]
    node _GEN_795 = mux(_T_746, UInt<1>("h0"), _GEN_547) @[TLB.scala 143:{19,23}]
    skip
    node _T_747 = not(_T_677) @[TLB.scala 143:13]
    node _GEN_796 = mux(_T_747, UInt<1>("h0"), _GEN_548) @[TLB.scala 143:{19,23}]
    node _GEN_797 = and(io_sfence_bits_rs2, _GEN_793) @[TLB.scala 388:40 126:46]
    node _GEN_798 = and(io_sfence_bits_rs2, _GEN_794) @[TLB.scala 388:40 126:46]
    node _GEN_799 = and(io_sfence_bits_rs2, _GEN_795) @[TLB.scala 388:40 126:46]
    node _GEN_800 = and(io_sfence_bits_rs2, _GEN_796) @[TLB.scala 388:40 126:46]
    node _GEN_801 = mux(io_sfence_bits_rs1, _GEN_789, _GEN_797) @[TLB.scala 387:35]
    node _GEN_802 = mux(io_sfence_bits_rs1, _GEN_790, _GEN_798) @[TLB.scala 387:35]
    node _GEN_803 = mux(io_sfence_bits_rs1, _GEN_791, _GEN_799) @[TLB.scala 387:35]
    node _GEN_804 = mux(io_sfence_bits_rs1, _GEN_792, _GEN_800) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_805 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_555) @[TLB.scala 131:{58,58}]
    node _GEN_806 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_556) @[TLB.scala 131:{58,58}]
    node _GEN_807 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_557) @[TLB.scala 131:{58,58}]
    node _GEN_808 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_558) @[TLB.scala 131:{58,58}]
    node _GEN_809 = mux(_sector_hits_T_35, _GEN_805, _GEN_555) @[TLB.scala 131:34]
    node _GEN_810 = mux(_sector_hits_T_35, _GEN_806, _GEN_556) @[TLB.scala 131:34]
    node _GEN_811 = mux(_sector_hits_T_35, _GEN_807, _GEN_557) @[TLB.scala 131:34]
    node _GEN_812 = mux(_sector_hits_T_35, _GEN_808, _GEN_558) @[TLB.scala 131:34]
    skip
    node _T_753 = shr(_sector_hits_T_33, 18) @[TLB.scala 135:26]
    node _T_754 = eq(_T_753, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_755 = bits(sectored_entries_0_5_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_768 = bits(sectored_entries_0_5_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_771 = bits(sectored_entries_0_5_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_784 = bits(sectored_entries_0_5_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_787 = bits(sectored_entries_0_5_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_800 = bits(sectored_entries_0_5_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_803 = bits(sectored_entries_0_5_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_816 = bits(sectored_entries_0_5_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_813 = mux(_T_755, UInt<1>("h0"), _GEN_809) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_814 = mux(_T_771, UInt<1>("h0"), _GEN_810) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_815 = mux(_T_787, UInt<1>("h0"), _GEN_811) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_816 = mux(_T_803, UInt<1>("h0"), _GEN_812) @[TLB.scala 137:{41,45}]
    node _GEN_817 = mux(_T_754, _GEN_813, _GEN_809) @[TLB.scala 135:68]
    node _GEN_818 = mux(_T_754, _GEN_814, _GEN_810) @[TLB.scala 135:68]
    node _GEN_819 = mux(_T_754, _GEN_815, _GEN_811) @[TLB.scala 135:68]
    node _GEN_820 = mux(_T_754, _GEN_816, _GEN_812) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_883 = not(_T_768) @[TLB.scala 143:13]
    node _GEN_821 = mux(_T_883, UInt<1>("h0"), _GEN_555) @[TLB.scala 143:{19,23}]
    skip
    node _T_884 = not(_T_784) @[TLB.scala 143:13]
    node _GEN_822 = mux(_T_884, UInt<1>("h0"), _GEN_556) @[TLB.scala 143:{19,23}]
    skip
    node _T_885 = not(_T_800) @[TLB.scala 143:13]
    node _GEN_823 = mux(_T_885, UInt<1>("h0"), _GEN_557) @[TLB.scala 143:{19,23}]
    skip
    node _T_886 = not(_T_816) @[TLB.scala 143:13]
    node _GEN_824 = mux(_T_886, UInt<1>("h0"), _GEN_558) @[TLB.scala 143:{19,23}]
    node _GEN_825 = and(io_sfence_bits_rs2, _GEN_821) @[TLB.scala 388:40 126:46]
    node _GEN_826 = and(io_sfence_bits_rs2, _GEN_822) @[TLB.scala 388:40 126:46]
    node _GEN_827 = and(io_sfence_bits_rs2, _GEN_823) @[TLB.scala 388:40 126:46]
    node _GEN_828 = and(io_sfence_bits_rs2, _GEN_824) @[TLB.scala 388:40 126:46]
    node _GEN_829 = mux(io_sfence_bits_rs1, _GEN_817, _GEN_825) @[TLB.scala 387:35]
    node _GEN_830 = mux(io_sfence_bits_rs1, _GEN_818, _GEN_826) @[TLB.scala 387:35]
    node _GEN_831 = mux(io_sfence_bits_rs1, _GEN_819, _GEN_827) @[TLB.scala 387:35]
    node _GEN_832 = mux(io_sfence_bits_rs1, _GEN_820, _GEN_828) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_833 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_565) @[TLB.scala 131:{58,58}]
    node _GEN_834 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_566) @[TLB.scala 131:{58,58}]
    node _GEN_835 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_567) @[TLB.scala 131:{58,58}]
    node _GEN_836 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_568) @[TLB.scala 131:{58,58}]
    node _GEN_837 = mux(_sector_hits_T_41, _GEN_833, _GEN_565) @[TLB.scala 131:34]
    node _GEN_838 = mux(_sector_hits_T_41, _GEN_834, _GEN_566) @[TLB.scala 131:34]
    node _GEN_839 = mux(_sector_hits_T_41, _GEN_835, _GEN_567) @[TLB.scala 131:34]
    node _GEN_840 = mux(_sector_hits_T_41, _GEN_836, _GEN_568) @[TLB.scala 131:34]
    skip
    node _T_892 = shr(_sector_hits_T_39, 18) @[TLB.scala 135:26]
    node _T_893 = eq(_T_892, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_894 = bits(sectored_entries_0_6_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_907 = bits(sectored_entries_0_6_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_910 = bits(sectored_entries_0_6_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_923 = bits(sectored_entries_0_6_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_926 = bits(sectored_entries_0_6_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_939 = bits(sectored_entries_0_6_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_942 = bits(sectored_entries_0_6_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_955 = bits(sectored_entries_0_6_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_841 = mux(_T_894, UInt<1>("h0"), _GEN_837) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_842 = mux(_T_910, UInt<1>("h0"), _GEN_838) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_843 = mux(_T_926, UInt<1>("h0"), _GEN_839) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_844 = mux(_T_942, UInt<1>("h0"), _GEN_840) @[TLB.scala 137:{41,45}]
    node _GEN_845 = mux(_T_893, _GEN_841, _GEN_837) @[TLB.scala 135:68]
    node _GEN_846 = mux(_T_893, _GEN_842, _GEN_838) @[TLB.scala 135:68]
    node _GEN_847 = mux(_T_893, _GEN_843, _GEN_839) @[TLB.scala 135:68]
    node _GEN_848 = mux(_T_893, _GEN_844, _GEN_840) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1022 = not(_T_907) @[TLB.scala 143:13]
    node _GEN_849 = mux(_T_1022, UInt<1>("h0"), _GEN_565) @[TLB.scala 143:{19,23}]
    skip
    node _T_1023 = not(_T_923) @[TLB.scala 143:13]
    node _GEN_850 = mux(_T_1023, UInt<1>("h0"), _GEN_566) @[TLB.scala 143:{19,23}]
    skip
    node _T_1024 = not(_T_939) @[TLB.scala 143:13]
    node _GEN_851 = mux(_T_1024, UInt<1>("h0"), _GEN_567) @[TLB.scala 143:{19,23}]
    skip
    node _T_1025 = not(_T_955) @[TLB.scala 143:13]
    node _GEN_852 = mux(_T_1025, UInt<1>("h0"), _GEN_568) @[TLB.scala 143:{19,23}]
    node _GEN_853 = and(io_sfence_bits_rs2, _GEN_849) @[TLB.scala 388:40 126:46]
    node _GEN_854 = and(io_sfence_bits_rs2, _GEN_850) @[TLB.scala 388:40 126:46]
    node _GEN_855 = and(io_sfence_bits_rs2, _GEN_851) @[TLB.scala 388:40 126:46]
    node _GEN_856 = and(io_sfence_bits_rs2, _GEN_852) @[TLB.scala 388:40 126:46]
    node _GEN_857 = mux(io_sfence_bits_rs1, _GEN_845, _GEN_853) @[TLB.scala 387:35]
    node _GEN_858 = mux(io_sfence_bits_rs1, _GEN_846, _GEN_854) @[TLB.scala 387:35]
    node _GEN_859 = mux(io_sfence_bits_rs1, _GEN_847, _GEN_855) @[TLB.scala 387:35]
    node _GEN_860 = mux(io_sfence_bits_rs1, _GEN_848, _GEN_856) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    node _GEN_861 = mux(eq(UInt<2>("h0"), hitsVec_idx), UInt<1>("h0"), _GEN_575) @[TLB.scala 131:{58,58}]
    node _GEN_862 = mux(eq(UInt<2>("h1"), hitsVec_idx), UInt<1>("h0"), _GEN_576) @[TLB.scala 131:{58,58}]
    node _GEN_863 = mux(eq(UInt<2>("h2"), hitsVec_idx), UInt<1>("h0"), _GEN_577) @[TLB.scala 131:{58,58}]
    node _GEN_864 = mux(eq(UInt<2>("h3"), hitsVec_idx), UInt<1>("h0"), _GEN_578) @[TLB.scala 131:{58,58}]
    node _GEN_865 = mux(_sector_hits_T_47, _GEN_861, _GEN_575) @[TLB.scala 131:34]
    node _GEN_866 = mux(_sector_hits_T_47, _GEN_862, _GEN_576) @[TLB.scala 131:34]
    node _GEN_867 = mux(_sector_hits_T_47, _GEN_863, _GEN_577) @[TLB.scala 131:34]
    node _GEN_868 = mux(_sector_hits_T_47, _GEN_864, _GEN_578) @[TLB.scala 131:34]
    skip
    node _T_1031 = shr(_sector_hits_T_45, 18) @[TLB.scala 135:26]
    node _T_1032 = eq(_T_1031, UInt<9>("h0")) @[TLB.scala 135:61]
    skip
    node _T_1033 = bits(sectored_entries_0_7_data_0, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1046 = bits(sectored_entries_0_7_data_0, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_1049 = bits(sectored_entries_0_7_data_1, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1062 = bits(sectored_entries_0_7_data_1, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_1065 = bits(sectored_entries_0_7_data_2, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1078 = bits(sectored_entries_0_7_data_2, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _T_1081 = bits(sectored_entries_0_7_data_3, 0, 0) @[TLB.scala 83:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1094 = bits(sectored_entries_0_7_data_3, 13, 13) @[TLB.scala 83:39]
    skip
    skip
    skip
    node _GEN_869 = mux(_T_1033, UInt<1>("h0"), _GEN_865) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_870 = mux(_T_1049, UInt<1>("h0"), _GEN_866) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_871 = mux(_T_1065, UInt<1>("h0"), _GEN_867) @[TLB.scala 137:{41,45}]
    skip
    node _GEN_872 = mux(_T_1081, UInt<1>("h0"), _GEN_868) @[TLB.scala 137:{41,45}]
    node _GEN_873 = mux(_T_1032, _GEN_869, _GEN_865) @[TLB.scala 135:68]
    node _GEN_874 = mux(_T_1032, _GEN_870, _GEN_866) @[TLB.scala 135:68]
    node _GEN_875 = mux(_T_1032, _GEN_871, _GEN_867) @[TLB.scala 135:68]
    node _GEN_876 = mux(_T_1032, _GEN_872, _GEN_868) @[TLB.scala 135:68]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1161 = not(_T_1046) @[TLB.scala 143:13]
    node _GEN_877 = mux(_T_1161, UInt<1>("h0"), _GEN_575) @[TLB.scala 143:{19,23}]
    skip
    node _T_1162 = not(_T_1062) @[TLB.scala 143:13]
    node _GEN_878 = mux(_T_1162, UInt<1>("h0"), _GEN_576) @[TLB.scala 143:{19,23}]
    skip
    node _T_1163 = not(_T_1078) @[TLB.scala 143:13]
    node _GEN_879 = mux(_T_1163, UInt<1>("h0"), _GEN_577) @[TLB.scala 143:{19,23}]
    skip
    node _T_1164 = not(_T_1094) @[TLB.scala 143:13]
    node _GEN_880 = mux(_T_1164, UInt<1>("h0"), _GEN_578) @[TLB.scala 143:{19,23}]
    node _GEN_881 = and(io_sfence_bits_rs2, _GEN_877) @[TLB.scala 388:40 126:46]
    node _GEN_882 = and(io_sfence_bits_rs2, _GEN_878) @[TLB.scala 388:40 126:46]
    node _GEN_883 = and(io_sfence_bits_rs2, _GEN_879) @[TLB.scala 388:40 126:46]
    node _GEN_884 = and(io_sfence_bits_rs2, _GEN_880) @[TLB.scala 388:40 126:46]
    node _GEN_885 = mux(io_sfence_bits_rs1, _GEN_873, _GEN_881) @[TLB.scala 387:35]
    node _GEN_886 = mux(io_sfence_bits_rs1, _GEN_874, _GEN_882) @[TLB.scala 387:35]
    node _GEN_887 = mux(io_sfence_bits_rs1, _GEN_875, _GEN_883) @[TLB.scala 387:35]
    node _GEN_888 = mux(io_sfence_bits_rs1, _GEN_876, _GEN_884) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_889 = mux(superpage_hits_0, UInt<1>("h0"), _GEN_491) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1196 = not(_ppn_data_T_149) @[TLB.scala 143:13]
    node _GEN_890 = mux(_T_1196, UInt<1>("h0"), _GEN_491) @[TLB.scala 143:{19,23}]
    node _GEN_891 = and(io_sfence_bits_rs2, _GEN_890) @[TLB.scala 388:40 126:46]
    node _GEN_892 = mux(io_sfence_bits_rs1, _GEN_889, _GEN_891) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_893 = mux(superpage_hits_1, UInt<1>("h0"), _GEN_495) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1228 = not(_ppn_data_T_165) @[TLB.scala 143:13]
    node _GEN_894 = mux(_T_1228, UInt<1>("h0"), _GEN_495) @[TLB.scala 143:{19,23}]
    node _GEN_895 = and(io_sfence_bits_rs2, _GEN_894) @[TLB.scala 388:40 126:46]
    node _GEN_896 = mux(io_sfence_bits_rs1, _GEN_893, _GEN_895) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_897 = mux(superpage_hits_2, UInt<1>("h0"), _GEN_499) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1260 = not(_ppn_data_T_181) @[TLB.scala 143:13]
    node _GEN_898 = mux(_T_1260, UInt<1>("h0"), _GEN_499) @[TLB.scala 143:{19,23}]
    node _GEN_899 = and(io_sfence_bits_rs2, _GEN_898) @[TLB.scala 388:40 126:46]
    node _GEN_900 = mux(io_sfence_bits_rs1, _GEN_897, _GEN_899) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_901 = mux(superpage_hits_3, UInt<1>("h0"), _GEN_503) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1292 = not(_ppn_data_T_197) @[TLB.scala 143:13]
    node _GEN_902 = mux(_T_1292, UInt<1>("h0"), _GEN_503) @[TLB.scala 143:{19,23}]
    node _GEN_903 = and(io_sfence_bits_rs2, _GEN_902) @[TLB.scala 388:40 126:46]
    node _GEN_904 = mux(io_sfence_bits_rs1, _GEN_901, _GEN_903) @[TLB.scala 387:35]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_905 = mux(_hitsVec_T_106, UInt<1>("h0"), _GEN_487) @[TLB.scala 129:23 126:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_1324 = not(_mpu_ppn_data_T_13) @[TLB.scala 143:13]
    node _GEN_906 = mux(_T_1324, UInt<1>("h0"), _GEN_487) @[TLB.scala 143:{19,23}]
    node _GEN_907 = and(io_sfence_bits_rs2, _GEN_906) @[TLB.scala 388:40 126:46]
    node _GEN_908 = mux(io_sfence_bits_rs1, _GEN_905, _GEN_907) @[TLB.scala 387:35]
    node _GEN_909 = mux(io_sfence_valid, _GEN_689, _GEN_505) @[TLB.scala 384:19]
    node _GEN_910 = mux(io_sfence_valid, _GEN_690, _GEN_506) @[TLB.scala 384:19]
    node _GEN_911 = mux(io_sfence_valid, _GEN_691, _GEN_507) @[TLB.scala 384:19]
    node _GEN_912 = mux(io_sfence_valid, _GEN_692, _GEN_508) @[TLB.scala 384:19]
    node _GEN_913 = mux(io_sfence_valid, _GEN_717, _GEN_515) @[TLB.scala 384:19]
    node _GEN_914 = mux(io_sfence_valid, _GEN_718, _GEN_516) @[TLB.scala 384:19]
    node _GEN_915 = mux(io_sfence_valid, _GEN_719, _GEN_517) @[TLB.scala 384:19]
    node _GEN_916 = mux(io_sfence_valid, _GEN_720, _GEN_518) @[TLB.scala 384:19]
    node _GEN_917 = mux(io_sfence_valid, _GEN_745, _GEN_525) @[TLB.scala 384:19]
    node _GEN_918 = mux(io_sfence_valid, _GEN_746, _GEN_526) @[TLB.scala 384:19]
    node _GEN_919 = mux(io_sfence_valid, _GEN_747, _GEN_527) @[TLB.scala 384:19]
    node _GEN_920 = mux(io_sfence_valid, _GEN_748, _GEN_528) @[TLB.scala 384:19]
    node _GEN_921 = mux(io_sfence_valid, _GEN_773, _GEN_535) @[TLB.scala 384:19]
    node _GEN_922 = mux(io_sfence_valid, _GEN_774, _GEN_536) @[TLB.scala 384:19]
    node _GEN_923 = mux(io_sfence_valid, _GEN_775, _GEN_537) @[TLB.scala 384:19]
    node _GEN_924 = mux(io_sfence_valid, _GEN_776, _GEN_538) @[TLB.scala 384:19]
    node _GEN_925 = mux(io_sfence_valid, _GEN_801, _GEN_545) @[TLB.scala 384:19]
    node _GEN_926 = mux(io_sfence_valid, _GEN_802, _GEN_546) @[TLB.scala 384:19]
    node _GEN_927 = mux(io_sfence_valid, _GEN_803, _GEN_547) @[TLB.scala 384:19]
    node _GEN_928 = mux(io_sfence_valid, _GEN_804, _GEN_548) @[TLB.scala 384:19]
    node _GEN_929 = mux(io_sfence_valid, _GEN_829, _GEN_555) @[TLB.scala 384:19]
    node _GEN_930 = mux(io_sfence_valid, _GEN_830, _GEN_556) @[TLB.scala 384:19]
    node _GEN_931 = mux(io_sfence_valid, _GEN_831, _GEN_557) @[TLB.scala 384:19]
    node _GEN_932 = mux(io_sfence_valid, _GEN_832, _GEN_558) @[TLB.scala 384:19]
    node _GEN_933 = mux(io_sfence_valid, _GEN_857, _GEN_565) @[TLB.scala 384:19]
    node _GEN_934 = mux(io_sfence_valid, _GEN_858, _GEN_566) @[TLB.scala 384:19]
    node _GEN_935 = mux(io_sfence_valid, _GEN_859, _GEN_567) @[TLB.scala 384:19]
    node _GEN_936 = mux(io_sfence_valid, _GEN_860, _GEN_568) @[TLB.scala 384:19]
    node _GEN_937 = mux(io_sfence_valid, _GEN_885, _GEN_575) @[TLB.scala 384:19]
    node _GEN_938 = mux(io_sfence_valid, _GEN_886, _GEN_576) @[TLB.scala 384:19]
    node _GEN_939 = mux(io_sfence_valid, _GEN_887, _GEN_577) @[TLB.scala 384:19]
    node _GEN_940 = mux(io_sfence_valid, _GEN_888, _GEN_578) @[TLB.scala 384:19]
    node _GEN_941 = mux(io_sfence_valid, _GEN_892, _GEN_491) @[TLB.scala 384:19]
    node _GEN_942 = mux(io_sfence_valid, _GEN_896, _GEN_495) @[TLB.scala 384:19]
    node _GEN_943 = mux(io_sfence_valid, _GEN_900, _GEN_499) @[TLB.scala 384:19]
    node _GEN_944 = mux(io_sfence_valid, _GEN_904, _GEN_503) @[TLB.scala 384:19]
    node _GEN_945 = mux(io_sfence_valid, _GEN_908, _GEN_487) @[TLB.scala 384:19]
    skip
    node _T_1326 = or(multipleHits, reset) @[TLB.scala 392:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_req_ready <= eq(state, UInt<2>("h0")) @[TLB.scala 341:25]
    io_resp_miss <= or(_io_resp_miss_T, multipleHits) @[TLB.scala 354:41]
    io_resp_paddr <= cat(ppn, mpu_physaddr_lo) @[Cat.scala 30:58]
    skip
    skip
    io_resp_pf_inst <= or(bad_va, _io_resp_pf_inst_T_1) @[TLB.scala 344:29]
    skip
    skip
    io_resp_ae_inst <= orr(_io_resp_ae_inst_T_1) @[TLB.scala 347:41]
    skip
    skip
    skip
    io_resp_cacheable <= orr(_io_resp_cacheable_T) @[TLB.scala 351:41]
    skip
    skip
    io_ptw_req_valid <= eq(state, UInt<2>("h1")) @[TLB.scala 357:29]
    io_ptw_req_bits_valid <= not(io_kill) @[TLB.scala 358:28]
    io_ptw_req_bits_bits_addr <= r_refill_tag @[TLB.scala 359:29]
    skip
    sectored_entries_0_0_tag <= mux(io_ptw_resp_valid, _GEN_409, sectored_entries_0_0_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_data_0 <= mux(io_ptw_resp_valid, _GEN_411, sectored_entries_0_0_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_data_1 <= mux(io_ptw_resp_valid, _GEN_412, sectored_entries_0_0_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_data_2 <= mux(io_ptw_resp_valid, _GEN_413, sectored_entries_0_0_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_data_3 <= mux(io_ptw_resp_valid, _GEN_414, sectored_entries_0_0_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_0_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_909) @[TLB.scala 392:34 126:46]
    sectored_entries_0_0_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_910) @[TLB.scala 392:34 126:46]
    sectored_entries_0_0_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_911) @[TLB.scala 392:34 126:46]
    sectored_entries_0_0_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_912) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_1_tag <= mux(io_ptw_resp_valid, _GEN_419, sectored_entries_0_1_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_data_0 <= mux(io_ptw_resp_valid, _GEN_421, sectored_entries_0_1_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_data_1 <= mux(io_ptw_resp_valid, _GEN_422, sectored_entries_0_1_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_data_2 <= mux(io_ptw_resp_valid, _GEN_423, sectored_entries_0_1_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_data_3 <= mux(io_ptw_resp_valid, _GEN_424, sectored_entries_0_1_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_1_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_913) @[TLB.scala 392:34 126:46]
    sectored_entries_0_1_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_914) @[TLB.scala 392:34 126:46]
    sectored_entries_0_1_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_915) @[TLB.scala 392:34 126:46]
    sectored_entries_0_1_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_916) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_2_tag <= mux(io_ptw_resp_valid, _GEN_429, sectored_entries_0_2_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_data_0 <= mux(io_ptw_resp_valid, _GEN_431, sectored_entries_0_2_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_data_1 <= mux(io_ptw_resp_valid, _GEN_432, sectored_entries_0_2_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_data_2 <= mux(io_ptw_resp_valid, _GEN_433, sectored_entries_0_2_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_data_3 <= mux(io_ptw_resp_valid, _GEN_434, sectored_entries_0_2_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_2_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_917) @[TLB.scala 392:34 126:46]
    sectored_entries_0_2_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_918) @[TLB.scala 392:34 126:46]
    sectored_entries_0_2_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_919) @[TLB.scala 392:34 126:46]
    sectored_entries_0_2_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_920) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_3_tag <= mux(io_ptw_resp_valid, _GEN_439, sectored_entries_0_3_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_data_0 <= mux(io_ptw_resp_valid, _GEN_441, sectored_entries_0_3_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_data_1 <= mux(io_ptw_resp_valid, _GEN_442, sectored_entries_0_3_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_data_2 <= mux(io_ptw_resp_valid, _GEN_443, sectored_entries_0_3_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_data_3 <= mux(io_ptw_resp_valid, _GEN_444, sectored_entries_0_3_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_3_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_921) @[TLB.scala 392:34 126:46]
    sectored_entries_0_3_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_922) @[TLB.scala 392:34 126:46]
    sectored_entries_0_3_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_923) @[TLB.scala 392:34 126:46]
    sectored_entries_0_3_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_924) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_4_tag <= mux(io_ptw_resp_valid, _GEN_449, sectored_entries_0_4_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_data_0 <= mux(io_ptw_resp_valid, _GEN_451, sectored_entries_0_4_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_data_1 <= mux(io_ptw_resp_valid, _GEN_452, sectored_entries_0_4_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_data_2 <= mux(io_ptw_resp_valid, _GEN_453, sectored_entries_0_4_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_data_3 <= mux(io_ptw_resp_valid, _GEN_454, sectored_entries_0_4_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_4_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_925) @[TLB.scala 392:34 126:46]
    sectored_entries_0_4_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_926) @[TLB.scala 392:34 126:46]
    sectored_entries_0_4_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_927) @[TLB.scala 392:34 126:46]
    sectored_entries_0_4_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_928) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_5_tag <= mux(io_ptw_resp_valid, _GEN_459, sectored_entries_0_5_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_data_0 <= mux(io_ptw_resp_valid, _GEN_461, sectored_entries_0_5_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_data_1 <= mux(io_ptw_resp_valid, _GEN_462, sectored_entries_0_5_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_data_2 <= mux(io_ptw_resp_valid, _GEN_463, sectored_entries_0_5_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_data_3 <= mux(io_ptw_resp_valid, _GEN_464, sectored_entries_0_5_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_5_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_929) @[TLB.scala 392:34 126:46]
    sectored_entries_0_5_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_930) @[TLB.scala 392:34 126:46]
    sectored_entries_0_5_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_931) @[TLB.scala 392:34 126:46]
    sectored_entries_0_5_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_932) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_6_tag <= mux(io_ptw_resp_valid, _GEN_469, sectored_entries_0_6_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_data_0 <= mux(io_ptw_resp_valid, _GEN_471, sectored_entries_0_6_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_data_1 <= mux(io_ptw_resp_valid, _GEN_472, sectored_entries_0_6_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_data_2 <= mux(io_ptw_resp_valid, _GEN_473, sectored_entries_0_6_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_data_3 <= mux(io_ptw_resp_valid, _GEN_474, sectored_entries_0_6_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_6_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_933) @[TLB.scala 392:34 126:46]
    sectored_entries_0_6_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_934) @[TLB.scala 392:34 126:46]
    sectored_entries_0_6_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_935) @[TLB.scala 392:34 126:46]
    sectored_entries_0_6_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_936) @[TLB.scala 392:34 126:46]
    skip
    sectored_entries_0_7_tag <= mux(io_ptw_resp_valid, _GEN_479, sectored_entries_0_7_tag) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_data_0 <= mux(io_ptw_resp_valid, _GEN_481, sectored_entries_0_7_data_0) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_data_1 <= mux(io_ptw_resp_valid, _GEN_482, sectored_entries_0_7_data_1) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_data_2 <= mux(io_ptw_resp_valid, _GEN_483, sectored_entries_0_7_data_2) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_data_3 <= mux(io_ptw_resp_valid, _GEN_484, sectored_entries_0_7_data_3) @[TLB.scala 220:20 165:29]
    sectored_entries_0_7_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_937) @[TLB.scala 392:34 126:46]
    sectored_entries_0_7_valid_1 <= mux(_T_1326, UInt<1>("h0"), _GEN_938) @[TLB.scala 392:34 126:46]
    sectored_entries_0_7_valid_2 <= mux(_T_1326, UInt<1>("h0"), _GEN_939) @[TLB.scala 392:34 126:46]
    sectored_entries_0_7_valid_3 <= mux(_T_1326, UInt<1>("h0"), _GEN_940) @[TLB.scala 392:34 126:46]
    superpage_entries_0_level <= mux(io_ptw_resp_valid, _GEN_390, superpage_entries_0_level) @[TLB.scala 220:20 166:30]
    superpage_entries_0_tag <= mux(io_ptw_resp_valid, _GEN_389, superpage_entries_0_tag) @[TLB.scala 220:20 166:30]
    superpage_entries_0_data_0 <= mux(io_ptw_resp_valid, _GEN_392, superpage_entries_0_data_0) @[TLB.scala 220:20 166:30]
    superpage_entries_0_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_941) @[TLB.scala 392:34 126:46]
    superpage_entries_1_level <= mux(io_ptw_resp_valid, _GEN_394, superpage_entries_1_level) @[TLB.scala 220:20 166:30]
    superpage_entries_1_tag <= mux(io_ptw_resp_valid, _GEN_393, superpage_entries_1_tag) @[TLB.scala 220:20 166:30]
    superpage_entries_1_data_0 <= mux(io_ptw_resp_valid, _GEN_396, superpage_entries_1_data_0) @[TLB.scala 220:20 166:30]
    superpage_entries_1_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_942) @[TLB.scala 392:34 126:46]
    superpage_entries_2_level <= mux(io_ptw_resp_valid, _GEN_398, superpage_entries_2_level) @[TLB.scala 220:20 166:30]
    superpage_entries_2_tag <= mux(io_ptw_resp_valid, _GEN_397, superpage_entries_2_tag) @[TLB.scala 220:20 166:30]
    superpage_entries_2_data_0 <= mux(io_ptw_resp_valid, _GEN_400, superpage_entries_2_data_0) @[TLB.scala 220:20 166:30]
    superpage_entries_2_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_943) @[TLB.scala 392:34 126:46]
    superpage_entries_3_level <= mux(io_ptw_resp_valid, _GEN_402, superpage_entries_3_level) @[TLB.scala 220:20 166:30]
    superpage_entries_3_tag <= mux(io_ptw_resp_valid, _GEN_401, superpage_entries_3_tag) @[TLB.scala 220:20 166:30]
    superpage_entries_3_data_0 <= mux(io_ptw_resp_valid, _GEN_404, superpage_entries_3_data_0) @[TLB.scala 220:20 166:30]
    superpage_entries_3_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_944) @[TLB.scala 392:34 126:46]
    special_entry_level <= mux(io_ptw_resp_valid, _GEN_386, special_entry_level) @[TLB.scala 220:20 167:56]
    special_entry_tag <= mux(io_ptw_resp_valid, _GEN_385, special_entry_tag) @[TLB.scala 220:20 167:56]
    special_entry_data_0 <= mux(io_ptw_resp_valid, _GEN_388, special_entry_data_0) @[TLB.scala 220:20 167:56]
    special_entry_valid_0 <= mux(_T_1326, UInt<1>("h0"), _GEN_945) @[TLB.scala 392:34 126:46]
    state <= mux(reset, UInt<2>("h0"), _GEN_664) @[TLB.scala 173:{18,18}]
    r_refill_tag <= mux(_T_42, vpn, r_refill_tag) @[TLB.scala 363:38 365:20 174:25]
    r_superpage_repl_addr <= mux(_T_42, _r_superpage_repl_addr_T_12, r_superpage_repl_addr) @[TLB.scala 363:38 367:29 175:34]
    r_sectored_repl_addr <= mux(_T_42, _r_sectored_repl_addr_T_24, r_sectored_repl_addr) @[TLB.scala 363:38 368:28 176:33]
    r_sectored_hit_addr <= mux(_T_42, state_vec_0_touch_way_sized, r_sectored_hit_addr) @[TLB.scala 363:38 369:27 177:32]
    r_sectored_hit <= mux(_T_42, _T_30, r_sectored_hit) @[TLB.scala 363:38 370:22 178:27]
    skip
    skip
    mpu_ppn_data_barrier.io_x_ppn <= bits(special_entry_data_0, 34, 15) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_u <= bits(special_entry_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    mpu_ppn_data_barrier.io_x_ae <= bits(special_entry_data_0, 12, 12) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_sw <= bits(special_entry_data_0, 11, 11) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_sx <= bits(special_entry_data_0, 10, 10) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_sr <= bits(special_entry_data_0, 9, 9) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_pw <= bits(special_entry_data_0, 8, 8) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_px <= bits(special_entry_data_0, 7, 7) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_pr <= bits(special_entry_data_0, 6, 6) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_ppp <= bits(special_entry_data_0, 5, 5) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_pal <= bits(special_entry_data_0, 4, 4) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_paa <= bits(special_entry_data_0, 3, 3) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_eff <= bits(special_entry_data_0, 2, 2) @[TLB.scala 86:77]
    mpu_ppn_data_barrier.io_x_c <= bits(special_entry_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    pmp.io_prv <= bits(mpu_priv, 1, 0) @[TLB.scala 197:14]
    pmp.io_pmp_0_cfg_l <= io_ptw_pmp_0_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_0_cfg_a <= io_ptw_pmp_0_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_0_cfg_x <= io_ptw_pmp_0_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_0_cfg_w <= io_ptw_pmp_0_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_0_cfg_r <= io_ptw_pmp_0_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_0_addr <= io_ptw_pmp_0_addr @[TLB.scala 196:14]
    pmp.io_pmp_0_mask <= io_ptw_pmp_0_mask @[TLB.scala 196:14]
    pmp.io_pmp_1_cfg_l <= io_ptw_pmp_1_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_1_cfg_a <= io_ptw_pmp_1_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_1_cfg_x <= io_ptw_pmp_1_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_1_cfg_w <= io_ptw_pmp_1_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_1_cfg_r <= io_ptw_pmp_1_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_1_addr <= io_ptw_pmp_1_addr @[TLB.scala 196:14]
    pmp.io_pmp_1_mask <= io_ptw_pmp_1_mask @[TLB.scala 196:14]
    pmp.io_pmp_2_cfg_l <= io_ptw_pmp_2_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_2_cfg_a <= io_ptw_pmp_2_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_2_cfg_x <= io_ptw_pmp_2_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_2_cfg_w <= io_ptw_pmp_2_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_2_cfg_r <= io_ptw_pmp_2_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_2_addr <= io_ptw_pmp_2_addr @[TLB.scala 196:14]
    pmp.io_pmp_2_mask <= io_ptw_pmp_2_mask @[TLB.scala 196:14]
    pmp.io_pmp_3_cfg_l <= io_ptw_pmp_3_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_3_cfg_a <= io_ptw_pmp_3_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_3_cfg_x <= io_ptw_pmp_3_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_3_cfg_w <= io_ptw_pmp_3_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_3_cfg_r <= io_ptw_pmp_3_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_3_addr <= io_ptw_pmp_3_addr @[TLB.scala 196:14]
    pmp.io_pmp_3_mask <= io_ptw_pmp_3_mask @[TLB.scala 196:14]
    pmp.io_pmp_4_cfg_l <= io_ptw_pmp_4_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_4_cfg_a <= io_ptw_pmp_4_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_4_cfg_x <= io_ptw_pmp_4_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_4_cfg_w <= io_ptw_pmp_4_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_4_cfg_r <= io_ptw_pmp_4_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_4_addr <= io_ptw_pmp_4_addr @[TLB.scala 196:14]
    pmp.io_pmp_4_mask <= io_ptw_pmp_4_mask @[TLB.scala 196:14]
    pmp.io_pmp_5_cfg_l <= io_ptw_pmp_5_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_5_cfg_a <= io_ptw_pmp_5_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_5_cfg_x <= io_ptw_pmp_5_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_5_cfg_w <= io_ptw_pmp_5_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_5_cfg_r <= io_ptw_pmp_5_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_5_addr <= io_ptw_pmp_5_addr @[TLB.scala 196:14]
    pmp.io_pmp_5_mask <= io_ptw_pmp_5_mask @[TLB.scala 196:14]
    pmp.io_pmp_6_cfg_l <= io_ptw_pmp_6_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_6_cfg_a <= io_ptw_pmp_6_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_6_cfg_x <= io_ptw_pmp_6_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_6_cfg_w <= io_ptw_pmp_6_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_6_cfg_r <= io_ptw_pmp_6_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_6_addr <= io_ptw_pmp_6_addr @[TLB.scala 196:14]
    pmp.io_pmp_6_mask <= io_ptw_pmp_6_mask @[TLB.scala 196:14]
    pmp.io_pmp_7_cfg_l <= io_ptw_pmp_7_cfg_l @[TLB.scala 196:14]
    skip
    pmp.io_pmp_7_cfg_a <= io_ptw_pmp_7_cfg_a @[TLB.scala 196:14]
    pmp.io_pmp_7_cfg_x <= io_ptw_pmp_7_cfg_x @[TLB.scala 196:14]
    pmp.io_pmp_7_cfg_w <= io_ptw_pmp_7_cfg_w @[TLB.scala 196:14]
    pmp.io_pmp_7_cfg_r <= io_ptw_pmp_7_cfg_r @[TLB.scala 196:14]
    pmp.io_pmp_7_addr <= io_ptw_pmp_7_addr @[TLB.scala 196:14]
    pmp.io_pmp_7_mask <= io_ptw_pmp_7_mask @[TLB.scala 196:14]
    pmp.io_addr <= bits(mpu_physaddr, 31, 0) @[TLB.scala 194:15]
    skip
    skip
    skip
    ppn_data_barrier.io_x_ppn <= bits(_GEN_35, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_u <= bits(_GEN_35, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier.io_x_ae <= bits(_GEN_35, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_sw <= bits(_GEN_35, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_sx <= bits(_GEN_35, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_sr <= bits(_GEN_35, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_pw <= bits(_GEN_35, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_px <= bits(_GEN_35, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_pr <= bits(_GEN_35, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_ppp <= bits(_GEN_35, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_pal <= bits(_GEN_35, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_paa <= bits(_GEN_35, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_eff <= bits(_GEN_35, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier.io_x_c <= bits(_GEN_35, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_1.io_x_ppn <= bits(_GEN_39, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_u <= bits(_GEN_39, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_1.io_x_ae <= bits(_GEN_39, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_sw <= bits(_GEN_39, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_sx <= bits(_GEN_39, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_sr <= bits(_GEN_39, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_pw <= bits(_GEN_39, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_px <= bits(_GEN_39, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_pr <= bits(_GEN_39, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_ppp <= bits(_GEN_39, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_pal <= bits(_GEN_39, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_paa <= bits(_GEN_39, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_eff <= bits(_GEN_39, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_1.io_x_c <= bits(_GEN_39, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_2.io_x_ppn <= bits(_GEN_43, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_u <= bits(_GEN_43, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_2.io_x_ae <= bits(_GEN_43, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_sw <= bits(_GEN_43, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_sx <= bits(_GEN_43, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_sr <= bits(_GEN_43, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_pw <= bits(_GEN_43, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_px <= bits(_GEN_43, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_pr <= bits(_GEN_43, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_ppp <= bits(_GEN_43, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_pal <= bits(_GEN_43, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_paa <= bits(_GEN_43, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_eff <= bits(_GEN_43, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_2.io_x_c <= bits(_GEN_43, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_3.io_x_ppn <= bits(_GEN_47, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_u <= bits(_GEN_47, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_3.io_x_ae <= bits(_GEN_47, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_sw <= bits(_GEN_47, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_sx <= bits(_GEN_47, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_sr <= bits(_GEN_47, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_pw <= bits(_GEN_47, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_px <= bits(_GEN_47, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_pr <= bits(_GEN_47, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_ppp <= bits(_GEN_47, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_pal <= bits(_GEN_47, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_paa <= bits(_GEN_47, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_eff <= bits(_GEN_47, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_3.io_x_c <= bits(_GEN_47, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_4.io_x_ppn <= bits(_GEN_51, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_u <= bits(_GEN_51, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_4.io_x_ae <= bits(_GEN_51, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_sw <= bits(_GEN_51, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_sx <= bits(_GEN_51, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_sr <= bits(_GEN_51, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_pw <= bits(_GEN_51, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_px <= bits(_GEN_51, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_pr <= bits(_GEN_51, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_ppp <= bits(_GEN_51, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_pal <= bits(_GEN_51, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_paa <= bits(_GEN_51, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_eff <= bits(_GEN_51, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_4.io_x_c <= bits(_GEN_51, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_5.io_x_ppn <= bits(_GEN_55, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_u <= bits(_GEN_55, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_5.io_x_ae <= bits(_GEN_55, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_sw <= bits(_GEN_55, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_sx <= bits(_GEN_55, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_sr <= bits(_GEN_55, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_pw <= bits(_GEN_55, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_px <= bits(_GEN_55, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_pr <= bits(_GEN_55, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_ppp <= bits(_GEN_55, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_pal <= bits(_GEN_55, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_paa <= bits(_GEN_55, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_eff <= bits(_GEN_55, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_5.io_x_c <= bits(_GEN_55, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_6.io_x_ppn <= bits(_GEN_59, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_u <= bits(_GEN_59, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_6.io_x_ae <= bits(_GEN_59, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_sw <= bits(_GEN_59, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_sx <= bits(_GEN_59, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_sr <= bits(_GEN_59, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_pw <= bits(_GEN_59, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_px <= bits(_GEN_59, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_pr <= bits(_GEN_59, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_ppp <= bits(_GEN_59, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_pal <= bits(_GEN_59, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_paa <= bits(_GEN_59, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_eff <= bits(_GEN_59, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_6.io_x_c <= bits(_GEN_59, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_7.io_x_ppn <= bits(_GEN_63, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_u <= bits(_GEN_63, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_7.io_x_ae <= bits(_GEN_63, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_sw <= bits(_GEN_63, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_sx <= bits(_GEN_63, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_sr <= bits(_GEN_63, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_pw <= bits(_GEN_63, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_px <= bits(_GEN_63, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_pr <= bits(_GEN_63, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_ppp <= bits(_GEN_63, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_pal <= bits(_GEN_63, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_paa <= bits(_GEN_63, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_eff <= bits(_GEN_63, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_7.io_x_c <= bits(_GEN_63, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_8.io_x_ppn <= bits(superpage_entries_0_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_u <= bits(superpage_entries_0_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_8.io_x_ae <= bits(superpage_entries_0_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_sw <= bits(superpage_entries_0_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_sx <= bits(superpage_entries_0_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_sr <= bits(superpage_entries_0_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_pw <= bits(superpage_entries_0_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_px <= bits(superpage_entries_0_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_pr <= bits(superpage_entries_0_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_ppp <= bits(superpage_entries_0_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_pal <= bits(superpage_entries_0_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_paa <= bits(superpage_entries_0_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_eff <= bits(superpage_entries_0_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_8.io_x_c <= bits(superpage_entries_0_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_9.io_x_ppn <= bits(superpage_entries_1_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_u <= bits(superpage_entries_1_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_9.io_x_ae <= bits(superpage_entries_1_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_sw <= bits(superpage_entries_1_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_sx <= bits(superpage_entries_1_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_sr <= bits(superpage_entries_1_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_pw <= bits(superpage_entries_1_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_px <= bits(superpage_entries_1_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_pr <= bits(superpage_entries_1_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_ppp <= bits(superpage_entries_1_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_pal <= bits(superpage_entries_1_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_paa <= bits(superpage_entries_1_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_eff <= bits(superpage_entries_1_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_9.io_x_c <= bits(superpage_entries_1_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_10.io_x_ppn <= bits(superpage_entries_2_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_u <= bits(superpage_entries_2_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_10.io_x_ae <= bits(superpage_entries_2_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_sw <= bits(superpage_entries_2_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_sx <= bits(superpage_entries_2_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_sr <= bits(superpage_entries_2_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_pw <= bits(superpage_entries_2_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_px <= bits(superpage_entries_2_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_pr <= bits(superpage_entries_2_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_ppp <= bits(superpage_entries_2_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_pal <= bits(superpage_entries_2_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_paa <= bits(superpage_entries_2_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_eff <= bits(superpage_entries_2_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_10.io_x_c <= bits(superpage_entries_2_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_11.io_x_ppn <= bits(superpage_entries_3_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_u <= bits(superpage_entries_3_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_11.io_x_ae <= bits(superpage_entries_3_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_sw <= bits(superpage_entries_3_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_sx <= bits(superpage_entries_3_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_sr <= bits(superpage_entries_3_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_pw <= bits(superpage_entries_3_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_px <= bits(superpage_entries_3_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_pr <= bits(superpage_entries_3_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_ppp <= bits(superpage_entries_3_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_pal <= bits(superpage_entries_3_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_paa <= bits(superpage_entries_3_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_eff <= bits(superpage_entries_3_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_11.io_x_c <= bits(superpage_entries_3_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    ppn_data_barrier_12.io_x_ppn <= bits(special_entry_data_0, 34, 15) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_u <= bits(special_entry_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    ppn_data_barrier_12.io_x_ae <= bits(special_entry_data_0, 12, 12) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_sw <= bits(special_entry_data_0, 11, 11) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_sx <= bits(special_entry_data_0, 10, 10) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_sr <= bits(special_entry_data_0, 9, 9) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_pw <= bits(special_entry_data_0, 8, 8) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_px <= bits(special_entry_data_0, 7, 7) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_pr <= bits(special_entry_data_0, 6, 6) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_ppp <= bits(special_entry_data_0, 5, 5) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_pal <= bits(special_entry_data_0, 4, 4) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_paa <= bits(special_entry_data_0, 3, 3) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_eff <= bits(special_entry_data_0, 2, 2) @[TLB.scala 86:77]
    ppn_data_barrier_12.io_x_c <= bits(special_entry_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier.io_x_ppn <= bits(_GEN_35, 34, 15) @[TLB.scala 86:77]
    entries_barrier.io_x_u <= bits(_GEN_35, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier.io_x_ae <= bits(_GEN_35, 12, 12) @[TLB.scala 86:77]
    entries_barrier.io_x_sw <= bits(_GEN_35, 11, 11) @[TLB.scala 86:77]
    entries_barrier.io_x_sx <= bits(_GEN_35, 10, 10) @[TLB.scala 86:77]
    entries_barrier.io_x_sr <= bits(_GEN_35, 9, 9) @[TLB.scala 86:77]
    entries_barrier.io_x_pw <= bits(_GEN_35, 8, 8) @[TLB.scala 86:77]
    entries_barrier.io_x_px <= bits(_GEN_35, 7, 7) @[TLB.scala 86:77]
    entries_barrier.io_x_pr <= bits(_GEN_35, 6, 6) @[TLB.scala 86:77]
    entries_barrier.io_x_ppp <= bits(_GEN_35, 5, 5) @[TLB.scala 86:77]
    entries_barrier.io_x_pal <= bits(_GEN_35, 4, 4) @[TLB.scala 86:77]
    entries_barrier.io_x_paa <= bits(_GEN_35, 3, 3) @[TLB.scala 86:77]
    entries_barrier.io_x_eff <= bits(_GEN_35, 2, 2) @[TLB.scala 86:77]
    entries_barrier.io_x_c <= bits(_GEN_35, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_1.io_x_ppn <= bits(_GEN_39, 34, 15) @[TLB.scala 86:77]
    entries_barrier_1.io_x_u <= bits(_GEN_39, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_1.io_x_ae <= bits(_GEN_39, 12, 12) @[TLB.scala 86:77]
    entries_barrier_1.io_x_sw <= bits(_GEN_39, 11, 11) @[TLB.scala 86:77]
    entries_barrier_1.io_x_sx <= bits(_GEN_39, 10, 10) @[TLB.scala 86:77]
    entries_barrier_1.io_x_sr <= bits(_GEN_39, 9, 9) @[TLB.scala 86:77]
    entries_barrier_1.io_x_pw <= bits(_GEN_39, 8, 8) @[TLB.scala 86:77]
    entries_barrier_1.io_x_px <= bits(_GEN_39, 7, 7) @[TLB.scala 86:77]
    entries_barrier_1.io_x_pr <= bits(_GEN_39, 6, 6) @[TLB.scala 86:77]
    entries_barrier_1.io_x_ppp <= bits(_GEN_39, 5, 5) @[TLB.scala 86:77]
    entries_barrier_1.io_x_pal <= bits(_GEN_39, 4, 4) @[TLB.scala 86:77]
    entries_barrier_1.io_x_paa <= bits(_GEN_39, 3, 3) @[TLB.scala 86:77]
    entries_barrier_1.io_x_eff <= bits(_GEN_39, 2, 2) @[TLB.scala 86:77]
    entries_barrier_1.io_x_c <= bits(_GEN_39, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_2.io_x_ppn <= bits(_GEN_43, 34, 15) @[TLB.scala 86:77]
    entries_barrier_2.io_x_u <= bits(_GEN_43, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_2.io_x_ae <= bits(_GEN_43, 12, 12) @[TLB.scala 86:77]
    entries_barrier_2.io_x_sw <= bits(_GEN_43, 11, 11) @[TLB.scala 86:77]
    entries_barrier_2.io_x_sx <= bits(_GEN_43, 10, 10) @[TLB.scala 86:77]
    entries_barrier_2.io_x_sr <= bits(_GEN_43, 9, 9) @[TLB.scala 86:77]
    entries_barrier_2.io_x_pw <= bits(_GEN_43, 8, 8) @[TLB.scala 86:77]
    entries_barrier_2.io_x_px <= bits(_GEN_43, 7, 7) @[TLB.scala 86:77]
    entries_barrier_2.io_x_pr <= bits(_GEN_43, 6, 6) @[TLB.scala 86:77]
    entries_barrier_2.io_x_ppp <= bits(_GEN_43, 5, 5) @[TLB.scala 86:77]
    entries_barrier_2.io_x_pal <= bits(_GEN_43, 4, 4) @[TLB.scala 86:77]
    entries_barrier_2.io_x_paa <= bits(_GEN_43, 3, 3) @[TLB.scala 86:77]
    entries_barrier_2.io_x_eff <= bits(_GEN_43, 2, 2) @[TLB.scala 86:77]
    entries_barrier_2.io_x_c <= bits(_GEN_43, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_3.io_x_ppn <= bits(_GEN_47, 34, 15) @[TLB.scala 86:77]
    entries_barrier_3.io_x_u <= bits(_GEN_47, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_3.io_x_ae <= bits(_GEN_47, 12, 12) @[TLB.scala 86:77]
    entries_barrier_3.io_x_sw <= bits(_GEN_47, 11, 11) @[TLB.scala 86:77]
    entries_barrier_3.io_x_sx <= bits(_GEN_47, 10, 10) @[TLB.scala 86:77]
    entries_barrier_3.io_x_sr <= bits(_GEN_47, 9, 9) @[TLB.scala 86:77]
    entries_barrier_3.io_x_pw <= bits(_GEN_47, 8, 8) @[TLB.scala 86:77]
    entries_barrier_3.io_x_px <= bits(_GEN_47, 7, 7) @[TLB.scala 86:77]
    entries_barrier_3.io_x_pr <= bits(_GEN_47, 6, 6) @[TLB.scala 86:77]
    entries_barrier_3.io_x_ppp <= bits(_GEN_47, 5, 5) @[TLB.scala 86:77]
    entries_barrier_3.io_x_pal <= bits(_GEN_47, 4, 4) @[TLB.scala 86:77]
    entries_barrier_3.io_x_paa <= bits(_GEN_47, 3, 3) @[TLB.scala 86:77]
    entries_barrier_3.io_x_eff <= bits(_GEN_47, 2, 2) @[TLB.scala 86:77]
    entries_barrier_3.io_x_c <= bits(_GEN_47, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_4.io_x_ppn <= bits(_GEN_51, 34, 15) @[TLB.scala 86:77]
    entries_barrier_4.io_x_u <= bits(_GEN_51, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_4.io_x_ae <= bits(_GEN_51, 12, 12) @[TLB.scala 86:77]
    entries_barrier_4.io_x_sw <= bits(_GEN_51, 11, 11) @[TLB.scala 86:77]
    entries_barrier_4.io_x_sx <= bits(_GEN_51, 10, 10) @[TLB.scala 86:77]
    entries_barrier_4.io_x_sr <= bits(_GEN_51, 9, 9) @[TLB.scala 86:77]
    entries_barrier_4.io_x_pw <= bits(_GEN_51, 8, 8) @[TLB.scala 86:77]
    entries_barrier_4.io_x_px <= bits(_GEN_51, 7, 7) @[TLB.scala 86:77]
    entries_barrier_4.io_x_pr <= bits(_GEN_51, 6, 6) @[TLB.scala 86:77]
    entries_barrier_4.io_x_ppp <= bits(_GEN_51, 5, 5) @[TLB.scala 86:77]
    entries_barrier_4.io_x_pal <= bits(_GEN_51, 4, 4) @[TLB.scala 86:77]
    entries_barrier_4.io_x_paa <= bits(_GEN_51, 3, 3) @[TLB.scala 86:77]
    entries_barrier_4.io_x_eff <= bits(_GEN_51, 2, 2) @[TLB.scala 86:77]
    entries_barrier_4.io_x_c <= bits(_GEN_51, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_5.io_x_ppn <= bits(_GEN_55, 34, 15) @[TLB.scala 86:77]
    entries_barrier_5.io_x_u <= bits(_GEN_55, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_5.io_x_ae <= bits(_GEN_55, 12, 12) @[TLB.scala 86:77]
    entries_barrier_5.io_x_sw <= bits(_GEN_55, 11, 11) @[TLB.scala 86:77]
    entries_barrier_5.io_x_sx <= bits(_GEN_55, 10, 10) @[TLB.scala 86:77]
    entries_barrier_5.io_x_sr <= bits(_GEN_55, 9, 9) @[TLB.scala 86:77]
    entries_barrier_5.io_x_pw <= bits(_GEN_55, 8, 8) @[TLB.scala 86:77]
    entries_barrier_5.io_x_px <= bits(_GEN_55, 7, 7) @[TLB.scala 86:77]
    entries_barrier_5.io_x_pr <= bits(_GEN_55, 6, 6) @[TLB.scala 86:77]
    entries_barrier_5.io_x_ppp <= bits(_GEN_55, 5, 5) @[TLB.scala 86:77]
    entries_barrier_5.io_x_pal <= bits(_GEN_55, 4, 4) @[TLB.scala 86:77]
    entries_barrier_5.io_x_paa <= bits(_GEN_55, 3, 3) @[TLB.scala 86:77]
    entries_barrier_5.io_x_eff <= bits(_GEN_55, 2, 2) @[TLB.scala 86:77]
    entries_barrier_5.io_x_c <= bits(_GEN_55, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_6.io_x_ppn <= bits(_GEN_59, 34, 15) @[TLB.scala 86:77]
    entries_barrier_6.io_x_u <= bits(_GEN_59, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_6.io_x_ae <= bits(_GEN_59, 12, 12) @[TLB.scala 86:77]
    entries_barrier_6.io_x_sw <= bits(_GEN_59, 11, 11) @[TLB.scala 86:77]
    entries_barrier_6.io_x_sx <= bits(_GEN_59, 10, 10) @[TLB.scala 86:77]
    entries_barrier_6.io_x_sr <= bits(_GEN_59, 9, 9) @[TLB.scala 86:77]
    entries_barrier_6.io_x_pw <= bits(_GEN_59, 8, 8) @[TLB.scala 86:77]
    entries_barrier_6.io_x_px <= bits(_GEN_59, 7, 7) @[TLB.scala 86:77]
    entries_barrier_6.io_x_pr <= bits(_GEN_59, 6, 6) @[TLB.scala 86:77]
    entries_barrier_6.io_x_ppp <= bits(_GEN_59, 5, 5) @[TLB.scala 86:77]
    entries_barrier_6.io_x_pal <= bits(_GEN_59, 4, 4) @[TLB.scala 86:77]
    entries_barrier_6.io_x_paa <= bits(_GEN_59, 3, 3) @[TLB.scala 86:77]
    entries_barrier_6.io_x_eff <= bits(_GEN_59, 2, 2) @[TLB.scala 86:77]
    entries_barrier_6.io_x_c <= bits(_GEN_59, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_7.io_x_ppn <= bits(_GEN_63, 34, 15) @[TLB.scala 86:77]
    entries_barrier_7.io_x_u <= bits(_GEN_63, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_7.io_x_ae <= bits(_GEN_63, 12, 12) @[TLB.scala 86:77]
    entries_barrier_7.io_x_sw <= bits(_GEN_63, 11, 11) @[TLB.scala 86:77]
    entries_barrier_7.io_x_sx <= bits(_GEN_63, 10, 10) @[TLB.scala 86:77]
    entries_barrier_7.io_x_sr <= bits(_GEN_63, 9, 9) @[TLB.scala 86:77]
    entries_barrier_7.io_x_pw <= bits(_GEN_63, 8, 8) @[TLB.scala 86:77]
    entries_barrier_7.io_x_px <= bits(_GEN_63, 7, 7) @[TLB.scala 86:77]
    entries_barrier_7.io_x_pr <= bits(_GEN_63, 6, 6) @[TLB.scala 86:77]
    entries_barrier_7.io_x_ppp <= bits(_GEN_63, 5, 5) @[TLB.scala 86:77]
    entries_barrier_7.io_x_pal <= bits(_GEN_63, 4, 4) @[TLB.scala 86:77]
    entries_barrier_7.io_x_paa <= bits(_GEN_63, 3, 3) @[TLB.scala 86:77]
    entries_barrier_7.io_x_eff <= bits(_GEN_63, 2, 2) @[TLB.scala 86:77]
    entries_barrier_7.io_x_c <= bits(_GEN_63, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_8.io_x_ppn <= bits(superpage_entries_0_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_8.io_x_u <= bits(superpage_entries_0_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_8.io_x_ae <= bits(superpage_entries_0_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_8.io_x_sw <= bits(superpage_entries_0_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_8.io_x_sx <= bits(superpage_entries_0_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_8.io_x_sr <= bits(superpage_entries_0_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_8.io_x_pw <= bits(superpage_entries_0_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_8.io_x_px <= bits(superpage_entries_0_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_8.io_x_pr <= bits(superpage_entries_0_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_8.io_x_ppp <= bits(superpage_entries_0_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_8.io_x_pal <= bits(superpage_entries_0_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_8.io_x_paa <= bits(superpage_entries_0_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_8.io_x_eff <= bits(superpage_entries_0_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_8.io_x_c <= bits(superpage_entries_0_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_9.io_x_ppn <= bits(superpage_entries_1_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_9.io_x_u <= bits(superpage_entries_1_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_9.io_x_ae <= bits(superpage_entries_1_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_9.io_x_sw <= bits(superpage_entries_1_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_9.io_x_sx <= bits(superpage_entries_1_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_9.io_x_sr <= bits(superpage_entries_1_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_9.io_x_pw <= bits(superpage_entries_1_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_9.io_x_px <= bits(superpage_entries_1_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_9.io_x_pr <= bits(superpage_entries_1_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_9.io_x_ppp <= bits(superpage_entries_1_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_9.io_x_pal <= bits(superpage_entries_1_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_9.io_x_paa <= bits(superpage_entries_1_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_9.io_x_eff <= bits(superpage_entries_1_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_9.io_x_c <= bits(superpage_entries_1_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_10.io_x_ppn <= bits(superpage_entries_2_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_10.io_x_u <= bits(superpage_entries_2_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_10.io_x_ae <= bits(superpage_entries_2_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_10.io_x_sw <= bits(superpage_entries_2_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_10.io_x_sx <= bits(superpage_entries_2_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_10.io_x_sr <= bits(superpage_entries_2_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_10.io_x_pw <= bits(superpage_entries_2_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_10.io_x_px <= bits(superpage_entries_2_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_10.io_x_pr <= bits(superpage_entries_2_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_10.io_x_ppp <= bits(superpage_entries_2_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_10.io_x_pal <= bits(superpage_entries_2_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_10.io_x_paa <= bits(superpage_entries_2_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_10.io_x_eff <= bits(superpage_entries_2_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_10.io_x_c <= bits(superpage_entries_2_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_11.io_x_ppn <= bits(superpage_entries_3_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_11.io_x_u <= bits(superpage_entries_3_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_11.io_x_ae <= bits(superpage_entries_3_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_11.io_x_sw <= bits(superpage_entries_3_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_11.io_x_sx <= bits(superpage_entries_3_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_11.io_x_sr <= bits(superpage_entries_3_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_11.io_x_pw <= bits(superpage_entries_3_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_11.io_x_px <= bits(superpage_entries_3_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_11.io_x_pr <= bits(superpage_entries_3_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_11.io_x_ppp <= bits(superpage_entries_3_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_11.io_x_pal <= bits(superpage_entries_3_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_11.io_x_paa <= bits(superpage_entries_3_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_11.io_x_eff <= bits(superpage_entries_3_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_11.io_x_c <= bits(superpage_entries_3_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    entries_barrier_12.io_x_ppn <= bits(special_entry_data_0, 34, 15) @[TLB.scala 86:77]
    entries_barrier_12.io_x_u <= bits(special_entry_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    entries_barrier_12.io_x_ae <= bits(special_entry_data_0, 12, 12) @[TLB.scala 86:77]
    entries_barrier_12.io_x_sw <= bits(special_entry_data_0, 11, 11) @[TLB.scala 86:77]
    entries_barrier_12.io_x_sx <= bits(special_entry_data_0, 10, 10) @[TLB.scala 86:77]
    entries_barrier_12.io_x_sr <= bits(special_entry_data_0, 9, 9) @[TLB.scala 86:77]
    entries_barrier_12.io_x_pw <= bits(special_entry_data_0, 8, 8) @[TLB.scala 86:77]
    entries_barrier_12.io_x_px <= bits(special_entry_data_0, 7, 7) @[TLB.scala 86:77]
    entries_barrier_12.io_x_pr <= bits(special_entry_data_0, 6, 6) @[TLB.scala 86:77]
    entries_barrier_12.io_x_ppp <= bits(special_entry_data_0, 5, 5) @[TLB.scala 86:77]
    entries_barrier_12.io_x_pal <= bits(special_entry_data_0, 4, 4) @[TLB.scala 86:77]
    entries_barrier_12.io_x_paa <= bits(special_entry_data_0, 3, 3) @[TLB.scala 86:77]
    entries_barrier_12.io_x_eff <= bits(special_entry_data_0, 2, 2) @[TLB.scala 86:77]
    entries_barrier_12.io_x_c <= bits(special_entry_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier.io_x_ppn <= bits(_GEN_35, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_u <= bits(_GEN_35, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier.io_x_ae <= bits(_GEN_35, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_sw <= bits(_GEN_35, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_sx <= bits(_GEN_35, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_sr <= bits(_GEN_35, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_pw <= bits(_GEN_35, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_px <= bits(_GEN_35, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_pr <= bits(_GEN_35, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_ppp <= bits(_GEN_35, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_pal <= bits(_GEN_35, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_paa <= bits(_GEN_35, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_eff <= bits(_GEN_35, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier.io_x_c <= bits(_GEN_35, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_1.io_x_ppn <= bits(_GEN_39, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_u <= bits(_GEN_39, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_1.io_x_ae <= bits(_GEN_39, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_sw <= bits(_GEN_39, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_sx <= bits(_GEN_39, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_sr <= bits(_GEN_39, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_pw <= bits(_GEN_39, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_px <= bits(_GEN_39, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_pr <= bits(_GEN_39, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_ppp <= bits(_GEN_39, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_pal <= bits(_GEN_39, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_paa <= bits(_GEN_39, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_eff <= bits(_GEN_39, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_1.io_x_c <= bits(_GEN_39, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_2.io_x_ppn <= bits(_GEN_43, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_u <= bits(_GEN_43, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_2.io_x_ae <= bits(_GEN_43, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_sw <= bits(_GEN_43, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_sx <= bits(_GEN_43, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_sr <= bits(_GEN_43, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_pw <= bits(_GEN_43, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_px <= bits(_GEN_43, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_pr <= bits(_GEN_43, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_ppp <= bits(_GEN_43, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_pal <= bits(_GEN_43, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_paa <= bits(_GEN_43, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_eff <= bits(_GEN_43, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_2.io_x_c <= bits(_GEN_43, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_3.io_x_ppn <= bits(_GEN_47, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_u <= bits(_GEN_47, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_3.io_x_ae <= bits(_GEN_47, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_sw <= bits(_GEN_47, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_sx <= bits(_GEN_47, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_sr <= bits(_GEN_47, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_pw <= bits(_GEN_47, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_px <= bits(_GEN_47, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_pr <= bits(_GEN_47, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_ppp <= bits(_GEN_47, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_pal <= bits(_GEN_47, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_paa <= bits(_GEN_47, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_eff <= bits(_GEN_47, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_3.io_x_c <= bits(_GEN_47, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_4.io_x_ppn <= bits(_GEN_51, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_u <= bits(_GEN_51, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_4.io_x_ae <= bits(_GEN_51, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_sw <= bits(_GEN_51, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_sx <= bits(_GEN_51, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_sr <= bits(_GEN_51, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_pw <= bits(_GEN_51, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_px <= bits(_GEN_51, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_pr <= bits(_GEN_51, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_ppp <= bits(_GEN_51, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_pal <= bits(_GEN_51, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_paa <= bits(_GEN_51, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_eff <= bits(_GEN_51, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_4.io_x_c <= bits(_GEN_51, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_5.io_x_ppn <= bits(_GEN_55, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_u <= bits(_GEN_55, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_5.io_x_ae <= bits(_GEN_55, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_sw <= bits(_GEN_55, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_sx <= bits(_GEN_55, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_sr <= bits(_GEN_55, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_pw <= bits(_GEN_55, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_px <= bits(_GEN_55, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_pr <= bits(_GEN_55, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_ppp <= bits(_GEN_55, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_pal <= bits(_GEN_55, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_paa <= bits(_GEN_55, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_eff <= bits(_GEN_55, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_5.io_x_c <= bits(_GEN_55, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_6.io_x_ppn <= bits(_GEN_59, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_u <= bits(_GEN_59, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_6.io_x_ae <= bits(_GEN_59, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_sw <= bits(_GEN_59, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_sx <= bits(_GEN_59, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_sr <= bits(_GEN_59, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_pw <= bits(_GEN_59, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_px <= bits(_GEN_59, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_pr <= bits(_GEN_59, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_ppp <= bits(_GEN_59, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_pal <= bits(_GEN_59, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_paa <= bits(_GEN_59, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_eff <= bits(_GEN_59, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_6.io_x_c <= bits(_GEN_59, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_7.io_x_ppn <= bits(_GEN_63, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_u <= bits(_GEN_63, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_7.io_x_ae <= bits(_GEN_63, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_sw <= bits(_GEN_63, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_sx <= bits(_GEN_63, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_sr <= bits(_GEN_63, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_pw <= bits(_GEN_63, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_px <= bits(_GEN_63, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_pr <= bits(_GEN_63, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_ppp <= bits(_GEN_63, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_pal <= bits(_GEN_63, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_paa <= bits(_GEN_63, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_eff <= bits(_GEN_63, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_7.io_x_c <= bits(_GEN_63, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_8.io_x_ppn <= bits(superpage_entries_0_data_0, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_u <= bits(superpage_entries_0_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_8.io_x_ae <= bits(superpage_entries_0_data_0, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_sw <= bits(superpage_entries_0_data_0, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_sx <= bits(superpage_entries_0_data_0, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_sr <= bits(superpage_entries_0_data_0, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_pw <= bits(superpage_entries_0_data_0, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_px <= bits(superpage_entries_0_data_0, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_pr <= bits(superpage_entries_0_data_0, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_ppp <= bits(superpage_entries_0_data_0, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_pal <= bits(superpage_entries_0_data_0, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_paa <= bits(superpage_entries_0_data_0, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_eff <= bits(superpage_entries_0_data_0, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_8.io_x_c <= bits(superpage_entries_0_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_9.io_x_ppn <= bits(superpage_entries_1_data_0, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_u <= bits(superpage_entries_1_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_9.io_x_ae <= bits(superpage_entries_1_data_0, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_sw <= bits(superpage_entries_1_data_0, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_sx <= bits(superpage_entries_1_data_0, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_sr <= bits(superpage_entries_1_data_0, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_pw <= bits(superpage_entries_1_data_0, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_px <= bits(superpage_entries_1_data_0, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_pr <= bits(superpage_entries_1_data_0, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_ppp <= bits(superpage_entries_1_data_0, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_pal <= bits(superpage_entries_1_data_0, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_paa <= bits(superpage_entries_1_data_0, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_eff <= bits(superpage_entries_1_data_0, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_9.io_x_c <= bits(superpage_entries_1_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_10.io_x_ppn <= bits(superpage_entries_2_data_0, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_u <= bits(superpage_entries_2_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_10.io_x_ae <= bits(superpage_entries_2_data_0, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_sw <= bits(superpage_entries_2_data_0, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_sx <= bits(superpage_entries_2_data_0, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_sr <= bits(superpage_entries_2_data_0, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_pw <= bits(superpage_entries_2_data_0, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_px <= bits(superpage_entries_2_data_0, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_pr <= bits(superpage_entries_2_data_0, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_ppp <= bits(superpage_entries_2_data_0, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_pal <= bits(superpage_entries_2_data_0, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_paa <= bits(superpage_entries_2_data_0, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_eff <= bits(superpage_entries_2_data_0, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_10.io_x_c <= bits(superpage_entries_2_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    skip
    normal_entries_barrier_11.io_x_ppn <= bits(superpage_entries_3_data_0, 34, 15) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_u <= bits(superpage_entries_3_data_0, 14, 14) @[TLB.scala 86:77]
    skip
    normal_entries_barrier_11.io_x_ae <= bits(superpage_entries_3_data_0, 12, 12) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_sw <= bits(superpage_entries_3_data_0, 11, 11) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_sx <= bits(superpage_entries_3_data_0, 10, 10) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_sr <= bits(superpage_entries_3_data_0, 9, 9) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_pw <= bits(superpage_entries_3_data_0, 8, 8) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_px <= bits(superpage_entries_3_data_0, 7, 7) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_pr <= bits(superpage_entries_3_data_0, 6, 6) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_ppp <= bits(superpage_entries_3_data_0, 5, 5) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_pal <= bits(superpage_entries_3_data_0, 4, 4) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_paa <= bits(superpage_entries_3_data_0, 3, 3) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_eff <= bits(superpage_entries_3_data_0, 2, 2) @[TLB.scala 86:77]
    normal_entries_barrier_11.io_x_c <= bits(superpage_entries_3_data_0, 1, 1) @[TLB.scala 86:77]
    skip
    skip
    state_vec_0 <= mux(reset, UInt<7>("h0"), _GEN_651) @[Replacement.scala 305:{17,17}]
    state_reg_1 <= mux(reset, UInt<3>("h0"), _GEN_652) @[Replacement.scala 168:{70,70}]
    printf(clock, and(io_sfence_valid, _T_52), "Assertion failed\n    at TLB.scala:385 assert(!io.sfence.bits.rs1 || (io.sfence.bits.addr >> pgIdxBits) === vpn)\n") @[TLB.scala 385:13]
    stop(clock, and(io_sfence_valid, _T_52), 1) @[TLB.scala 385:13]

  module BTB :
    input clock : Clock
    input reset : UInt<1>
    input io_req_bits_addr : UInt<39>
    output io_resp_valid : UInt<1>
    output io_resp_bits_taken : UInt<1>
    output io_resp_bits_bridx : UInt<1>
    output io_resp_bits_target : UInt<39>
    output io_resp_bits_entry : UInt<5>
    output io_resp_bits_bht_history : UInt<8>
    output io_resp_bits_bht_value : UInt<1>
    input io_btb_update_valid : UInt<1>
    input io_btb_update_bits_prediction_entry : UInt<5>
    input io_btb_update_bits_pc : UInt<39>
    input io_btb_update_bits_isValid : UInt<1>
    input io_btb_update_bits_br_pc : UInt<39>
    input io_btb_update_bits_cfiType : UInt<2>
    input io_bht_update_valid : UInt<1>
    input io_bht_update_bits_prediction_history : UInt<8>
    input io_bht_update_bits_pc : UInt<39>
    input io_bht_update_bits_branch : UInt<1>
    input io_bht_update_bits_taken : UInt<1>
    input io_bht_update_bits_mispredict : UInt<1>
    input io_bht_advance_valid : UInt<1>
    input io_bht_advance_bits_bht_value : UInt<1>
    input io_ras_update_valid : UInt<1>
    input io_ras_update_bits_cfiType : UInt<2>
    input io_ras_update_bits_returnAddr : UInt<39>
    output io_ras_head_valid : UInt<1>
    output io_ras_head_bits : UInt<39>
    input io_flush : UInt<1>

    mem table : @[BTB.scala 118:26]
      data-type => UInt<1>
      depth => 512
      read-latency => 0
      write-latency => 1
      reader => res_res_value_MPORT
      writer => MPORT
      read-under-write => undefined
    reg idxs_0 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_0) @[BTB.scala 201:17]
    reg idxs_1 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_1) @[BTB.scala 201:17]
    reg idxs_2 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_2) @[BTB.scala 201:17]
    reg idxs_3 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_3) @[BTB.scala 201:17]
    reg idxs_4 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_4) @[BTB.scala 201:17]
    reg idxs_5 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_5) @[BTB.scala 201:17]
    reg idxs_6 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_6) @[BTB.scala 201:17]
    reg idxs_7 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_7) @[BTB.scala 201:17]
    reg idxs_8 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_8) @[BTB.scala 201:17]
    reg idxs_9 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_9) @[BTB.scala 201:17]
    reg idxs_10 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_10) @[BTB.scala 201:17]
    reg idxs_11 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_11) @[BTB.scala 201:17]
    reg idxs_12 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_12) @[BTB.scala 201:17]
    reg idxs_13 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_13) @[BTB.scala 201:17]
    reg idxs_14 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_14) @[BTB.scala 201:17]
    reg idxs_15 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_15) @[BTB.scala 201:17]
    reg idxs_16 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_16) @[BTB.scala 201:17]
    reg idxs_17 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_17) @[BTB.scala 201:17]
    reg idxs_18 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_18) @[BTB.scala 201:17]
    reg idxs_19 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_19) @[BTB.scala 201:17]
    reg idxs_20 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_20) @[BTB.scala 201:17]
    reg idxs_21 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_21) @[BTB.scala 201:17]
    reg idxs_22 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_22) @[BTB.scala 201:17]
    reg idxs_23 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_23) @[BTB.scala 201:17]
    reg idxs_24 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_24) @[BTB.scala 201:17]
    reg idxs_25 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_25) @[BTB.scala 201:17]
    reg idxs_26 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_26) @[BTB.scala 201:17]
    reg idxs_27 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), idxs_27) @[BTB.scala 201:17]
    reg idxPages_0 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_0) @[BTB.scala 202:21]
    reg idxPages_1 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_1) @[BTB.scala 202:21]
    reg idxPages_2 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_2) @[BTB.scala 202:21]
    reg idxPages_3 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_3) @[BTB.scala 202:21]
    reg idxPages_4 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_4) @[BTB.scala 202:21]
    reg idxPages_5 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_5) @[BTB.scala 202:21]
    reg idxPages_6 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_6) @[BTB.scala 202:21]
    reg idxPages_7 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_7) @[BTB.scala 202:21]
    reg idxPages_8 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_8) @[BTB.scala 202:21]
    reg idxPages_9 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_9) @[BTB.scala 202:21]
    reg idxPages_10 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_10) @[BTB.scala 202:21]
    reg idxPages_11 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_11) @[BTB.scala 202:21]
    reg idxPages_12 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_12) @[BTB.scala 202:21]
    reg idxPages_13 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_13) @[BTB.scala 202:21]
    reg idxPages_14 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_14) @[BTB.scala 202:21]
    reg idxPages_15 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_15) @[BTB.scala 202:21]
    reg idxPages_16 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_16) @[BTB.scala 202:21]
    reg idxPages_17 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_17) @[BTB.scala 202:21]
    reg idxPages_18 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_18) @[BTB.scala 202:21]
    reg idxPages_19 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_19) @[BTB.scala 202:21]
    reg idxPages_20 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_20) @[BTB.scala 202:21]
    reg idxPages_21 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_21) @[BTB.scala 202:21]
    reg idxPages_22 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_22) @[BTB.scala 202:21]
    reg idxPages_23 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_23) @[BTB.scala 202:21]
    reg idxPages_24 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_24) @[BTB.scala 202:21]
    reg idxPages_25 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_25) @[BTB.scala 202:21]
    reg idxPages_26 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_26) @[BTB.scala 202:21]
    reg idxPages_27 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), idxPages_27) @[BTB.scala 202:21]
    reg tgts_0 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_0) @[BTB.scala 203:17]
    reg tgts_1 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_1) @[BTB.scala 203:17]
    reg tgts_2 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_2) @[BTB.scala 203:17]
    reg tgts_3 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_3) @[BTB.scala 203:17]
    reg tgts_4 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_4) @[BTB.scala 203:17]
    reg tgts_5 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_5) @[BTB.scala 203:17]
    reg tgts_6 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_6) @[BTB.scala 203:17]
    reg tgts_7 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_7) @[BTB.scala 203:17]
    reg tgts_8 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_8) @[BTB.scala 203:17]
    reg tgts_9 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_9) @[BTB.scala 203:17]
    reg tgts_10 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_10) @[BTB.scala 203:17]
    reg tgts_11 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_11) @[BTB.scala 203:17]
    reg tgts_12 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_12) @[BTB.scala 203:17]
    reg tgts_13 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_13) @[BTB.scala 203:17]
    reg tgts_14 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_14) @[BTB.scala 203:17]
    reg tgts_15 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_15) @[BTB.scala 203:17]
    reg tgts_16 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_16) @[BTB.scala 203:17]
    reg tgts_17 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_17) @[BTB.scala 203:17]
    reg tgts_18 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_18) @[BTB.scala 203:17]
    reg tgts_19 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_19) @[BTB.scala 203:17]
    reg tgts_20 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_20) @[BTB.scala 203:17]
    reg tgts_21 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_21) @[BTB.scala 203:17]
    reg tgts_22 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_22) @[BTB.scala 203:17]
    reg tgts_23 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_23) @[BTB.scala 203:17]
    reg tgts_24 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_24) @[BTB.scala 203:17]
    reg tgts_25 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_25) @[BTB.scala 203:17]
    reg tgts_26 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_26) @[BTB.scala 203:17]
    reg tgts_27 : UInt<13>, clock with :
      reset => (UInt<1>("h0"), tgts_27) @[BTB.scala 203:17]
    reg tgtPages_0 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_0) @[BTB.scala 204:21]
    reg tgtPages_1 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_1) @[BTB.scala 204:21]
    reg tgtPages_2 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_2) @[BTB.scala 204:21]
    reg tgtPages_3 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_3) @[BTB.scala 204:21]
    reg tgtPages_4 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_4) @[BTB.scala 204:21]
    reg tgtPages_5 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_5) @[BTB.scala 204:21]
    reg tgtPages_6 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_6) @[BTB.scala 204:21]
    reg tgtPages_7 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_7) @[BTB.scala 204:21]
    reg tgtPages_8 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_8) @[BTB.scala 204:21]
    reg tgtPages_9 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_9) @[BTB.scala 204:21]
    reg tgtPages_10 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_10) @[BTB.scala 204:21]
    reg tgtPages_11 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_11) @[BTB.scala 204:21]
    reg tgtPages_12 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_12) @[BTB.scala 204:21]
    reg tgtPages_13 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_13) @[BTB.scala 204:21]
    reg tgtPages_14 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_14) @[BTB.scala 204:21]
    reg tgtPages_15 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_15) @[BTB.scala 204:21]
    reg tgtPages_16 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_16) @[BTB.scala 204:21]
    reg tgtPages_17 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_17) @[BTB.scala 204:21]
    reg tgtPages_18 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_18) @[BTB.scala 204:21]
    reg tgtPages_19 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_19) @[BTB.scala 204:21]
    reg tgtPages_20 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_20) @[BTB.scala 204:21]
    reg tgtPages_21 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_21) @[BTB.scala 204:21]
    reg tgtPages_22 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_22) @[BTB.scala 204:21]
    reg tgtPages_23 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_23) @[BTB.scala 204:21]
    reg tgtPages_24 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_24) @[BTB.scala 204:21]
    reg tgtPages_25 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_25) @[BTB.scala 204:21]
    reg tgtPages_26 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_26) @[BTB.scala 204:21]
    reg tgtPages_27 : UInt<3>, clock with :
      reset => (UInt<1>("h0"), tgtPages_27) @[BTB.scala 204:21]
    reg pages_0 : UInt<25>, clock with :
      reset => (UInt<1>("h0"), pages_0) @[BTB.scala 205:18]
    reg pages_1 : UInt<25>, clock with :
      reset => (UInt<1>("h0"), pages_1) @[BTB.scala 205:18]
    reg pages_2 : UInt<25>, clock with :
      reset => (UInt<1>("h0"), pages_2) @[BTB.scala 205:18]
    reg pages_3 : UInt<25>, clock with :
      reset => (UInt<1>("h0"), pages_3) @[BTB.scala 205:18]
    reg pages_4 : UInt<25>, clock with :
      reset => (UInt<1>("h0"), pages_4) @[BTB.scala 205:18]
    reg pages_5 : UInt<25>, clock with :
      reset => (UInt<1>("h0"), pages_5) @[BTB.scala 205:18]
    reg pageValid : UInt<6>, clock with :
      reset => (UInt<1>("h0"), pageValid) @[BTB.scala 206:22]
    node _pagesMasked_T = bits(pageValid, 0, 0) @[BTB.scala 207:32]
    node _pagesMasked_T_1 = bits(pageValid, 1, 1) @[BTB.scala 207:32]
    node _pagesMasked_T_2 = bits(pageValid, 2, 2) @[BTB.scala 207:32]
    node _pagesMasked_T_3 = bits(pageValid, 3, 3) @[BTB.scala 207:32]
    node _pagesMasked_T_4 = bits(pageValid, 4, 4) @[BTB.scala 207:32]
    node _pagesMasked_T_5 = bits(pageValid, 5, 5) @[BTB.scala 207:32]
    node pagesMasked_0 = mux(_pagesMasked_T, pages_0, UInt<25>("h0")) @[BTB.scala 207:75]
    node pagesMasked_1 = mux(_pagesMasked_T_1, pages_1, UInt<25>("h0")) @[BTB.scala 207:75]
    node pagesMasked_2 = mux(_pagesMasked_T_2, pages_2, UInt<25>("h0")) @[BTB.scala 207:75]
    node pagesMasked_3 = mux(_pagesMasked_T_3, pages_3, UInt<25>("h0")) @[BTB.scala 207:75]
    node pagesMasked_4 = mux(_pagesMasked_T_4, pages_4, UInt<25>("h0")) @[BTB.scala 207:75]
    node pagesMasked_5 = mux(_pagesMasked_T_5, pages_5, UInt<25>("h0")) @[BTB.scala 207:75]
    reg isValid : UInt<28>, clock with :
      reset => (UInt<1>("h0"), isValid) @[BTB.scala 209:20]
    reg cfiType_0 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_0) @[BTB.scala 210:20]
    reg cfiType_1 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_1) @[BTB.scala 210:20]
    reg cfiType_2 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_2) @[BTB.scala 210:20]
    reg cfiType_3 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_3) @[BTB.scala 210:20]
    reg cfiType_4 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_4) @[BTB.scala 210:20]
    reg cfiType_5 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_5) @[BTB.scala 210:20]
    reg cfiType_6 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_6) @[BTB.scala 210:20]
    reg cfiType_7 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_7) @[BTB.scala 210:20]
    reg cfiType_8 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_8) @[BTB.scala 210:20]
    reg cfiType_9 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_9) @[BTB.scala 210:20]
    reg cfiType_10 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_10) @[BTB.scala 210:20]
    reg cfiType_11 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_11) @[BTB.scala 210:20]
    reg cfiType_12 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_12) @[BTB.scala 210:20]
    reg cfiType_13 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_13) @[BTB.scala 210:20]
    reg cfiType_14 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_14) @[BTB.scala 210:20]
    reg cfiType_15 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_15) @[BTB.scala 210:20]
    reg cfiType_16 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_16) @[BTB.scala 210:20]
    reg cfiType_17 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_17) @[BTB.scala 210:20]
    reg cfiType_18 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_18) @[BTB.scala 210:20]
    reg cfiType_19 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_19) @[BTB.scala 210:20]
    reg cfiType_20 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_20) @[BTB.scala 210:20]
    reg cfiType_21 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_21) @[BTB.scala 210:20]
    reg cfiType_22 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_22) @[BTB.scala 210:20]
    reg cfiType_23 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_23) @[BTB.scala 210:20]
    reg cfiType_24 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_24) @[BTB.scala 210:20]
    reg cfiType_25 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_25) @[BTB.scala 210:20]
    reg cfiType_26 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_26) @[BTB.scala 210:20]
    reg cfiType_27 : UInt<2>, clock with :
      reset => (UInt<1>("h0"), cfiType_27) @[BTB.scala 210:20]
    reg brIdx_0 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_0) @[BTB.scala 211:18]
    reg brIdx_1 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_1) @[BTB.scala 211:18]
    reg brIdx_2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_2) @[BTB.scala 211:18]
    reg brIdx_3 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_3) @[BTB.scala 211:18]
    reg brIdx_4 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_4) @[BTB.scala 211:18]
    reg brIdx_5 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_5) @[BTB.scala 211:18]
    reg brIdx_6 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_6) @[BTB.scala 211:18]
    reg brIdx_7 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_7) @[BTB.scala 211:18]
    reg brIdx_8 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_8) @[BTB.scala 211:18]
    reg brIdx_9 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_9) @[BTB.scala 211:18]
    reg brIdx_10 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_10) @[BTB.scala 211:18]
    reg brIdx_11 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_11) @[BTB.scala 211:18]
    reg brIdx_12 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_12) @[BTB.scala 211:18]
    reg brIdx_13 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_13) @[BTB.scala 211:18]
    reg brIdx_14 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_14) @[BTB.scala 211:18]
    reg brIdx_15 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_15) @[BTB.scala 211:18]
    reg brIdx_16 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_16) @[BTB.scala 211:18]
    reg brIdx_17 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_17) @[BTB.scala 211:18]
    reg brIdx_18 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_18) @[BTB.scala 211:18]
    reg brIdx_19 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_19) @[BTB.scala 211:18]
    reg brIdx_20 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_20) @[BTB.scala 211:18]
    reg brIdx_21 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_21) @[BTB.scala 211:18]
    reg brIdx_22 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_22) @[BTB.scala 211:18]
    reg brIdx_23 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_23) @[BTB.scala 211:18]
    reg brIdx_24 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_24) @[BTB.scala 211:18]
    reg brIdx_25 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_25) @[BTB.scala 211:18]
    reg brIdx_26 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_26) @[BTB.scala 211:18]
    reg brIdx_27 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), brIdx_27) @[BTB.scala 211:18]
    reg r_btb_updatePipe_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_btb_updatePipe_valid) @[Valid.scala 117:22]
    skip
    skip
    skip
    skip
    skip
    reg r_btb_updatePipe_bits_prediction_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), r_btb_updatePipe_bits_prediction_entry) @[Reg.scala 15:16]
    skip
    skip
    reg r_btb_updatePipe_bits_pc : UInt<39>, clock with :
      reset => (UInt<1>("h0"), r_btb_updatePipe_bits_pc) @[Reg.scala 15:16]
    skip
    skip
    reg r_btb_updatePipe_bits_isValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_btb_updatePipe_bits_isValid) @[Reg.scala 15:16]
    reg r_btb_updatePipe_bits_br_pc : UInt<39>, clock with :
      reset => (UInt<1>("h0"), r_btb_updatePipe_bits_br_pc) @[Reg.scala 15:16]
    reg r_btb_updatePipe_bits_cfiType : UInt<2>, clock with :
      reset => (UInt<1>("h0"), r_btb_updatePipe_bits_cfiType) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node pageHit_p = shr(io_req_bits_addr, 14) @[BTB.scala 213:39]
    node pageHit_lo_lo = eq(pages_0, pageHit_p) @[BTB.scala 216:29]
    node pageHit_lo_hi_lo = eq(pages_1, pageHit_p) @[BTB.scala 216:29]
    node pageHit_lo_hi_hi = eq(pages_2, pageHit_p) @[BTB.scala 216:29]
    node pageHit_hi_lo = eq(pages_3, pageHit_p) @[BTB.scala 216:29]
    node pageHit_hi_hi_lo = eq(pages_4, pageHit_p) @[BTB.scala 216:29]
    node pageHit_hi_hi_hi = eq(pages_5, pageHit_p) @[BTB.scala 216:29]
    node pageHit_lo_hi = cat(pageHit_lo_hi_hi, pageHit_lo_hi_lo) @[Cat.scala 30:58]
    node pageHit_lo = cat(pageHit_lo_hi, pageHit_lo_lo) @[Cat.scala 30:58]
    node pageHit_hi_hi = cat(pageHit_hi_hi_hi, pageHit_hi_hi_lo) @[Cat.scala 30:58]
    node pageHit_hi = cat(pageHit_hi_hi, pageHit_hi_lo) @[Cat.scala 30:58]
    node _pageHit_T = cat(pageHit_hi, pageHit_lo) @[Cat.scala 30:58]
    node pageHit = and(pageValid, _pageHit_T) @[BTB.scala 216:15]
    node idxHit_idx = bits(io_req_bits_addr, 13, 1) @[BTB.scala 219:19]
    node idxHit_lo_lo_lo_lo = eq(idxs_0, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_lo_lo_hi_lo = eq(idxs_1, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_lo_lo_hi_hi = eq(idxs_2, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_lo_hi_lo_lo = eq(idxs_3, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_lo_hi_lo_hi = eq(idxs_4, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_lo_hi_hi_lo = eq(idxs_5, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_lo_hi_hi_hi = eq(idxs_6, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_hi_lo_lo = eq(idxs_7, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_hi_lo_hi_lo = eq(idxs_8, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_hi_lo_hi_hi = eq(idxs_9, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_hi_hi_lo_lo = eq(idxs_10, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_hi_hi_lo_hi = eq(idxs_11, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_hi_hi_hi_lo = eq(idxs_12, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_hi_hi_hi_hi = eq(idxs_13, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_lo_lo_lo = eq(idxs_14, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_lo_lo_hi_lo = eq(idxs_15, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_lo_lo_hi_hi = eq(idxs_16, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_lo_hi_lo_lo = eq(idxs_17, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_lo_hi_lo_hi = eq(idxs_18, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_lo_hi_hi_lo = eq(idxs_19, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_lo_hi_hi_hi = eq(idxs_20, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_hi_lo_lo = eq(idxs_21, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_hi_lo_hi_lo = eq(idxs_22, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_hi_lo_hi_hi = eq(idxs_23, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_hi_hi_lo_lo = eq(idxs_24, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_hi_hi_lo_hi = eq(idxs_25, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_hi_hi_hi_lo = eq(idxs_26, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_hi_hi_hi_hi_hi = eq(idxs_27, idxHit_idx) @[BTB.scala 220:16]
    node idxHit_lo_lo_lo_hi = cat(idxHit_lo_lo_lo_hi_hi, idxHit_lo_lo_lo_hi_lo) @[Cat.scala 30:58]
    node idxHit_lo_lo_lo = cat(idxHit_lo_lo_lo_hi, idxHit_lo_lo_lo_lo) @[Cat.scala 30:58]
    node idxHit_lo_lo_hi_lo = cat(idxHit_lo_lo_hi_lo_hi, idxHit_lo_lo_hi_lo_lo) @[Cat.scala 30:58]
    node idxHit_lo_lo_hi_hi = cat(idxHit_lo_lo_hi_hi_hi, idxHit_lo_lo_hi_hi_lo) @[Cat.scala 30:58]
    node idxHit_lo_lo_hi = cat(idxHit_lo_lo_hi_hi, idxHit_lo_lo_hi_lo) @[Cat.scala 30:58]
    node idxHit_lo_lo = cat(idxHit_lo_lo_hi, idxHit_lo_lo_lo) @[Cat.scala 30:58]
    node idxHit_lo_hi_lo_hi = cat(idxHit_lo_hi_lo_hi_hi, idxHit_lo_hi_lo_hi_lo) @[Cat.scala 30:58]
    node idxHit_lo_hi_lo = cat(idxHit_lo_hi_lo_hi, idxHit_lo_hi_lo_lo) @[Cat.scala 30:58]
    node idxHit_lo_hi_hi_lo = cat(idxHit_lo_hi_hi_lo_hi, idxHit_lo_hi_hi_lo_lo) @[Cat.scala 30:58]
    node idxHit_lo_hi_hi_hi = cat(idxHit_lo_hi_hi_hi_hi, idxHit_lo_hi_hi_hi_lo) @[Cat.scala 30:58]
    node idxHit_lo_hi_hi = cat(idxHit_lo_hi_hi_hi, idxHit_lo_hi_hi_lo) @[Cat.scala 30:58]
    node idxHit_lo_hi = cat(idxHit_lo_hi_hi, idxHit_lo_hi_lo) @[Cat.scala 30:58]
    node idxHit_lo = cat(idxHit_lo_hi, idxHit_lo_lo) @[Cat.scala 30:58]
    node idxHit_hi_lo_lo_hi = cat(idxHit_hi_lo_lo_hi_hi, idxHit_hi_lo_lo_hi_lo) @[Cat.scala 30:58]
    node idxHit_hi_lo_lo = cat(idxHit_hi_lo_lo_hi, idxHit_hi_lo_lo_lo) @[Cat.scala 30:58]
    node idxHit_hi_lo_hi_lo = cat(idxHit_hi_lo_hi_lo_hi, idxHit_hi_lo_hi_lo_lo) @[Cat.scala 30:58]
    node idxHit_hi_lo_hi_hi = cat(idxHit_hi_lo_hi_hi_hi, idxHit_hi_lo_hi_hi_lo) @[Cat.scala 30:58]
    node idxHit_hi_lo_hi = cat(idxHit_hi_lo_hi_hi, idxHit_hi_lo_hi_lo) @[Cat.scala 30:58]
    node idxHit_hi_lo = cat(idxHit_hi_lo_hi, idxHit_hi_lo_lo) @[Cat.scala 30:58]
    node idxHit_hi_hi_lo_hi = cat(idxHit_hi_hi_lo_hi_hi, idxHit_hi_hi_lo_hi_lo) @[Cat.scala 30:58]
    node idxHit_hi_hi_lo = cat(idxHit_hi_hi_lo_hi, idxHit_hi_hi_lo_lo) @[Cat.scala 30:58]
    node idxHit_hi_hi_hi_lo = cat(idxHit_hi_hi_hi_lo_hi, idxHit_hi_hi_hi_lo_lo) @[Cat.scala 30:58]
    node idxHit_hi_hi_hi_hi = cat(idxHit_hi_hi_hi_hi_hi, idxHit_hi_hi_hi_hi_lo) @[Cat.scala 30:58]
    node idxHit_hi_hi_hi = cat(idxHit_hi_hi_hi_hi, idxHit_hi_hi_hi_lo) @[Cat.scala 30:58]
    node idxHit_hi_hi = cat(idxHit_hi_hi_hi, idxHit_hi_hi_lo) @[Cat.scala 30:58]
    node idxHit_hi = cat(idxHit_hi_hi, idxHit_hi_lo) @[Cat.scala 30:58]
    node _idxHit_T = cat(idxHit_hi, idxHit_lo) @[Cat.scala 30:58]
    node idxHit = and(_idxHit_T, isValid) @[BTB.scala 220:32]
    skip
    node updatePageHit_p = shr(r_btb_updatePipe_bits_pc, 14) @[BTB.scala 213:39]
    node updatePageHit_lo_lo = eq(pages_0, updatePageHit_p) @[BTB.scala 216:29]
    node updatePageHit_lo_hi_lo = eq(pages_1, updatePageHit_p) @[BTB.scala 216:29]
    node updatePageHit_lo_hi_hi = eq(pages_2, updatePageHit_p) @[BTB.scala 216:29]
    node updatePageHit_hi_lo = eq(pages_3, updatePageHit_p) @[BTB.scala 216:29]
    node updatePageHit_hi_hi_lo = eq(pages_4, updatePageHit_p) @[BTB.scala 216:29]
    node updatePageHit_hi_hi_hi = eq(pages_5, updatePageHit_p) @[BTB.scala 216:29]
    node updatePageHit_lo_hi = cat(updatePageHit_lo_hi_hi, updatePageHit_lo_hi_lo) @[Cat.scala 30:58]
    node updatePageHit_lo = cat(updatePageHit_lo_hi, updatePageHit_lo_lo) @[Cat.scala 30:58]
    node updatePageHit_hi_hi = cat(updatePageHit_hi_hi_hi, updatePageHit_hi_hi_lo) @[Cat.scala 30:58]
    node updatePageHit_hi = cat(updatePageHit_hi_hi, updatePageHit_hi_lo) @[Cat.scala 30:58]
    node _updatePageHit_T = cat(updatePageHit_hi, updatePageHit_lo) @[Cat.scala 30:58]
    node updatePageHit = and(pageValid, _updatePageHit_T) @[BTB.scala 216:15]
    skip
    node updateHit = lt(r_btb_updatePipe_bits_prediction_entry, UInt<5>("h1c")) @[BTB.scala 234:48]
    node useUpdatePageHit = orr(updatePageHit) @[BTB.scala 236:40]
    node usePageHit = orr(pageHit) @[BTB.scala 237:28]
    node doIdxPageRepl = not(useUpdatePageHit) @[BTB.scala 238:23]
    reg nextPageRepl : UInt<3>, clock with :
      reset => (UInt<1>("h0"), nextPageRepl) @[BTB.scala 239:29]
    node idxPageRepl_hi = bits(pageHit, 4, 0) @[BTB.scala 240:32]
    node idxPageRepl_lo = bits(pageHit, 5, 5) @[BTB.scala 240:53]
    node _idxPageRepl_T = cat(idxPageRepl_hi, idxPageRepl_lo) @[Cat.scala 30:58]
    node _idxPageRepl_T_1 = dshl(UInt<1>("h1"), nextPageRepl) @[OneHot.scala 58:35]
    node _idxPageRepl_T_2 = mux(usePageHit, UInt<8>("h0"), _idxPageRepl_T_1) @[BTB.scala 240:70]
    node _GEN_430 = pad(_idxPageRepl_T, 8) @[BTB.scala 240:65]
    node idxPageRepl = or(_GEN_430, _idxPageRepl_T_2) @[BTB.scala 240:65]
    node idxPageUpdateOH = mux(useUpdatePageHit, pad(updatePageHit, 8), idxPageRepl) @[BTB.scala 241:28]
    node idxPageUpdate_hi = bits(idxPageUpdateOH, 7, 4) @[OneHot.scala 30:18]
    node idxPageUpdate_lo = bits(idxPageUpdateOH, 3, 0) @[OneHot.scala 31:18]
    node idxPageUpdate_hi_1 = orr(idxPageUpdate_hi) @[OneHot.scala 32:14]
    node _idxPageUpdate_T = or(idxPageUpdate_hi, idxPageUpdate_lo) @[OneHot.scala 32:28]
    node idxPageUpdate_hi_2 = bits(_idxPageUpdate_T, 3, 2) @[OneHot.scala 30:18]
    node idxPageUpdate_lo_1 = bits(_idxPageUpdate_T, 1, 0) @[OneHot.scala 31:18]
    node idxPageUpdate_hi_3 = orr(idxPageUpdate_hi_2) @[OneHot.scala 32:14]
    node _idxPageUpdate_T_1 = or(idxPageUpdate_hi_2, idxPageUpdate_lo_1) @[OneHot.scala 32:28]
    node idxPageUpdate_lo_2 = bits(_idxPageUpdate_T_1, 1, 1) @[CircuitMath.scala 30:8]
    node idxPageUpdate_lo_3 = cat(idxPageUpdate_hi_3, idxPageUpdate_lo_2) @[Cat.scala 30:58]
    node idxPageUpdate = cat(idxPageUpdate_hi_1, idxPageUpdate_lo_3) @[Cat.scala 30:58]
    node idxPageReplEn = mux(doIdxPageRepl, idxPageRepl, UInt<8>("h0")) @[BTB.scala 243:26]
    skip
    skip
    node samePage = eq(updatePageHit_p, pageHit_p) @[BTB.scala 245:45]
    node _doTgtPageRepl_T = not(samePage) @[BTB.scala 246:23]
    node _doTgtPageRepl_T_1 = not(usePageHit) @[BTB.scala 246:36]
    node doTgtPageRepl = and(_doTgtPageRepl_T, _doTgtPageRepl_T_1) @[BTB.scala 246:33]
    node tgtPageRepl_hi = bits(idxPageUpdateOH, 4, 0) @[BTB.scala 247:71]
    node tgtPageRepl_lo = bits(idxPageUpdateOH, 5, 5) @[BTB.scala 247:100]
    node _tgtPageRepl_T = cat(tgtPageRepl_hi, tgtPageRepl_lo) @[Cat.scala 30:58]
    node tgtPageRepl = mux(samePage, idxPageUpdateOH, pad(_tgtPageRepl_T, 8)) @[BTB.scala 247:24]
    node _tgtPageUpdate_T = mux(usePageHit, UInt<8>("h0"), tgtPageRepl) @[BTB.scala 248:45]
    node _GEN_431 = pad(pageHit, 8) @[BTB.scala 248:40]
    node _tgtPageUpdate_T_1 = or(_GEN_431, _tgtPageUpdate_T) @[BTB.scala 248:40]
    node tgtPageUpdate_hi = bits(_tgtPageUpdate_T_1, 7, 4) @[OneHot.scala 30:18]
    node tgtPageUpdate_lo = bits(_tgtPageUpdate_T_1, 3, 0) @[OneHot.scala 31:18]
    node tgtPageUpdate_hi_1 = orr(tgtPageUpdate_hi) @[OneHot.scala 32:14]
    node _tgtPageUpdate_T_2 = or(tgtPageUpdate_hi, tgtPageUpdate_lo) @[OneHot.scala 32:28]
    node tgtPageUpdate_hi_2 = bits(_tgtPageUpdate_T_2, 3, 2) @[OneHot.scala 30:18]
    node tgtPageUpdate_lo_1 = bits(_tgtPageUpdate_T_2, 1, 0) @[OneHot.scala 31:18]
    node tgtPageUpdate_hi_3 = orr(tgtPageUpdate_hi_2) @[OneHot.scala 32:14]
    node _tgtPageUpdate_T_3 = or(tgtPageUpdate_hi_2, tgtPageUpdate_lo_1) @[OneHot.scala 32:28]
    node tgtPageUpdate_lo_2 = bits(_tgtPageUpdate_T_3, 1, 1) @[CircuitMath.scala 30:8]
    node tgtPageUpdate_lo_3 = cat(tgtPageUpdate_hi_3, tgtPageUpdate_lo_2) @[Cat.scala 30:58]
    node tgtPageUpdate = cat(tgtPageUpdate_hi_1, tgtPageUpdate_lo_3) @[Cat.scala 30:58]
    node tgtPageReplEn = mux(doTgtPageRepl, tgtPageRepl, UInt<8>("h0")) @[BTB.scala 249:26]
    node _T = or(doIdxPageRepl, doTgtPageRepl) @[BTB.scala 251:46]
    skip
    node _T_1 = and(r_btb_updatePipe_valid, _T) @[BTB.scala 251:28]
    node both = and(doIdxPageRepl, doTgtPageRepl) @[BTB.scala 252:30]
    node _next_T = mux(both, UInt<2>("h2"), UInt<2>("h1")) @[BTB.scala 253:40]
    node _GEN_432 = pad(_next_T, 3) @[BTB.scala 253:29]
    node _next_T_1 = add(nextPageRepl, _GEN_432) @[BTB.scala 253:29]
    node next = tail(_next_T_1, 1) @[BTB.scala 253:29]
    node _nextPageRepl_T = geq(next, UInt<3>("h6")) @[BTB.scala 254:30]
    node _nextPageRepl_T_1 = bits(next, 0, 0) @[BTB.scala 254:45]
    node _nextPageRepl_T_2 = mux(_nextPageRepl_T, pad(_nextPageRepl_T_1, 3), next) @[BTB.scala 254:24]
    node _GEN_14 = mux(_T_1, _nextPageRepl_T_2, nextPageRepl) @[BTB.scala 251:65 254:18 239:29]
    reg state_reg : UInt<27>, clock with :
      reset => (UInt<1>("h0"), state_reg) @[Replacement.scala 168:70]
    node waddr_hi = bits(state_reg, 26, 26) @[Replacement.scala 243:38]
    node waddr_left_subtree_state = bits(state_reg, 25, 15) @[package.scala 154:13]
    node waddr_right_subtree_state = bits(state_reg, 14, 0) @[Replacement.scala 245:38]
    node waddr_hi_1 = bits(waddr_left_subtree_state, 10, 10) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_1 = bits(waddr_left_subtree_state, 9, 7) @[package.scala 154:13]
    node waddr_right_subtree_state_1 = bits(waddr_left_subtree_state, 6, 0) @[Replacement.scala 245:38]
    node waddr_hi_2 = bits(waddr_left_subtree_state_1, 2, 2) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_2 = bits(waddr_left_subtree_state_1, 1, 1) @[package.scala 154:13]
    node waddr_right_subtree_state_2 = bits(waddr_left_subtree_state_1, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node waddr_lo = mux(waddr_hi_2, waddr_left_subtree_state_2, waddr_right_subtree_state_2) @[Replacement.scala 250:16]
    node _waddr_T_2 = cat(waddr_hi_2, waddr_lo) @[Cat.scala 30:58]
    node waddr_hi_3 = bits(waddr_right_subtree_state_1, 6, 6) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_3 = bits(waddr_right_subtree_state_1, 5, 3) @[package.scala 154:13]
    node waddr_right_subtree_state_3 = bits(waddr_right_subtree_state_1, 2, 0) @[Replacement.scala 245:38]
    node waddr_hi_4 = bits(waddr_left_subtree_state_3, 2, 2) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_4 = bits(waddr_left_subtree_state_3, 1, 1) @[package.scala 154:13]
    node waddr_right_subtree_state_4 = bits(waddr_left_subtree_state_3, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node waddr_lo_1 = mux(waddr_hi_4, waddr_left_subtree_state_4, waddr_right_subtree_state_4) @[Replacement.scala 250:16]
    node _waddr_T_5 = cat(waddr_hi_4, waddr_lo_1) @[Cat.scala 30:58]
    node waddr_hi_5 = bits(waddr_right_subtree_state_3, 2, 2) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_5 = bits(waddr_right_subtree_state_3, 1, 1) @[package.scala 154:13]
    node waddr_right_subtree_state_5 = bits(waddr_right_subtree_state_3, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node waddr_lo_2 = mux(waddr_hi_5, waddr_left_subtree_state_5, waddr_right_subtree_state_5) @[Replacement.scala 250:16]
    node _waddr_T_8 = cat(waddr_hi_5, waddr_lo_2) @[Cat.scala 30:58]
    node waddr_lo_3 = mux(waddr_hi_3, _waddr_T_5, _waddr_T_8) @[Replacement.scala 250:16]
    node _waddr_T_9 = cat(waddr_hi_3, waddr_lo_3) @[Cat.scala 30:58]
    node waddr_lo_4 = mux(waddr_hi_1, pad(_waddr_T_2, 3), _waddr_T_9) @[Replacement.scala 250:16]
    node _waddr_T_10 = cat(waddr_hi_1, waddr_lo_4) @[Cat.scala 30:58]
    node waddr_hi_6 = bits(waddr_right_subtree_state, 14, 14) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_6 = bits(waddr_right_subtree_state, 13, 7) @[package.scala 154:13]
    node waddr_right_subtree_state_6 = bits(waddr_right_subtree_state, 6, 0) @[Replacement.scala 245:38]
    node waddr_hi_7 = bits(waddr_left_subtree_state_6, 6, 6) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_7 = bits(waddr_left_subtree_state_6, 5, 3) @[package.scala 154:13]
    node waddr_right_subtree_state_7 = bits(waddr_left_subtree_state_6, 2, 0) @[Replacement.scala 245:38]
    node waddr_hi_8 = bits(waddr_left_subtree_state_7, 2, 2) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_8 = bits(waddr_left_subtree_state_7, 1, 1) @[package.scala 154:13]
    node waddr_right_subtree_state_8 = bits(waddr_left_subtree_state_7, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node waddr_lo_5 = mux(waddr_hi_8, waddr_left_subtree_state_8, waddr_right_subtree_state_8) @[Replacement.scala 250:16]
    node _waddr_T_13 = cat(waddr_hi_8, waddr_lo_5) @[Cat.scala 30:58]
    node waddr_hi_9 = bits(waddr_right_subtree_state_7, 2, 2) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_9 = bits(waddr_right_subtree_state_7, 1, 1) @[package.scala 154:13]
    node waddr_right_subtree_state_9 = bits(waddr_right_subtree_state_7, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node waddr_lo_6 = mux(waddr_hi_9, waddr_left_subtree_state_9, waddr_right_subtree_state_9) @[Replacement.scala 250:16]
    node _waddr_T_16 = cat(waddr_hi_9, waddr_lo_6) @[Cat.scala 30:58]
    node waddr_lo_7 = mux(waddr_hi_7, _waddr_T_13, _waddr_T_16) @[Replacement.scala 250:16]
    node _waddr_T_17 = cat(waddr_hi_7, waddr_lo_7) @[Cat.scala 30:58]
    node waddr_hi_10 = bits(waddr_right_subtree_state_6, 6, 6) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_10 = bits(waddr_right_subtree_state_6, 5, 3) @[package.scala 154:13]
    node waddr_right_subtree_state_10 = bits(waddr_right_subtree_state_6, 2, 0) @[Replacement.scala 245:38]
    node waddr_hi_11 = bits(waddr_left_subtree_state_10, 2, 2) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_11 = bits(waddr_left_subtree_state_10, 1, 1) @[package.scala 154:13]
    node waddr_right_subtree_state_11 = bits(waddr_left_subtree_state_10, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node waddr_lo_8 = mux(waddr_hi_11, waddr_left_subtree_state_11, waddr_right_subtree_state_11) @[Replacement.scala 250:16]
    node _waddr_T_20 = cat(waddr_hi_11, waddr_lo_8) @[Cat.scala 30:58]
    node waddr_hi_12 = bits(waddr_right_subtree_state_10, 2, 2) @[Replacement.scala 243:38]
    node waddr_left_subtree_state_12 = bits(waddr_right_subtree_state_10, 1, 1) @[package.scala 154:13]
    node waddr_right_subtree_state_12 = bits(waddr_right_subtree_state_10, 0, 0) @[Replacement.scala 245:38]
    skip
    skip
    node waddr_lo_9 = mux(waddr_hi_12, waddr_left_subtree_state_12, waddr_right_subtree_state_12) @[Replacement.scala 250:16]
    node _waddr_T_23 = cat(waddr_hi_12, waddr_lo_9) @[Cat.scala 30:58]
    node waddr_lo_10 = mux(waddr_hi_10, _waddr_T_20, _waddr_T_23) @[Replacement.scala 250:16]
    node _waddr_T_24 = cat(waddr_hi_10, waddr_lo_10) @[Cat.scala 30:58]
    node waddr_lo_11 = mux(waddr_hi_6, _waddr_T_17, _waddr_T_24) @[Replacement.scala 250:16]
    node _waddr_T_25 = cat(waddr_hi_6, waddr_lo_11) @[Cat.scala 30:58]
    node waddr_lo_12 = mux(waddr_hi, _waddr_T_10, _waddr_T_25) @[Replacement.scala 250:16]
    node _waddr_T_26 = cat(waddr_hi, waddr_lo_12) @[Cat.scala 30:58]
    node waddr = mux(updateHit, r_btb_updatePipe_bits_prediction_entry, _waddr_T_26) @[BTB.scala 258:18]
    reg r_respPipe_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_respPipe_valid) @[Valid.scala 117:22]
    skip
    reg r_respPipe_bits_taken : UInt<1>, clock with :
      reset => (UInt<1>("h0"), r_respPipe_bits_taken) @[Reg.scala 15:16]
    skip
    skip
    skip
    reg r_respPipe_bits_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), r_respPipe_bits_entry) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_2 = and(r_respPipe_valid, r_respPipe_bits_taken) @[BTB.scala 260:22]
    node _T_3 = or(_T_2, r_btb_updatePipe_valid) @[BTB.scala 260:43]
    skip
    node state_reg_touch_way_sized = mux(r_btb_updatePipe_valid, waddr, r_respPipe_bits_entry) @[BTB.scala 261:20]
    skip
    node _state_reg_set_left_older_T = bits(state_reg_touch_way_sized, 4, 4) @[Replacement.scala 196:43]
    node state_reg_hi_hi = not(_state_reg_set_left_older_T) @[Replacement.scala 196:33]
    skip
    skip
    node _state_reg_T = bits(state_reg_touch_way_sized, 3, 0) @[package.scala 154:13]
    node _state_reg_set_left_older_T_1 = bits(_state_reg_T, 3, 3) @[Replacement.scala 196:43]
    node state_reg_hi_hi_1 = not(_state_reg_set_left_older_T_1) @[Replacement.scala 196:33]
    skip
    skip
    node _state_reg_T_1 = bits(_state_reg_T, 1, 0) @[package.scala 154:13]
    node _state_reg_set_left_older_T_2 = bits(_state_reg_T_1, 1, 1) @[Replacement.scala 196:43]
    node state_reg_hi_hi_2 = not(_state_reg_set_left_older_T_2) @[Replacement.scala 196:33]
    skip
    skip
    node _state_reg_T_2 = bits(_state_reg_T_1, 0, 0) @[package.scala 154:13]
    skip
    node _state_reg_T_4 = not(_state_reg_T_2) @[Replacement.scala 218:7]
    node state_reg_hi_lo = mux(state_reg_hi_hi_2, waddr_left_subtree_state_2, _state_reg_T_4) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo = mux(state_reg_hi_hi_2, _state_reg_T_4, waddr_right_subtree_state_2) @[Replacement.scala 206:16]
    node state_reg_hi = cat(state_reg_hi_hi_2, state_reg_hi_lo) @[Cat.scala 30:58]
    node _state_reg_T_8 = cat(state_reg_hi, state_reg_lo) @[Cat.scala 30:58]
    node state_reg_hi_lo_1 = mux(state_reg_hi_hi_1, waddr_left_subtree_state_1, _state_reg_T_8) @[Replacement.scala 203:16]
    node _state_reg_T_9 = bits(_state_reg_T, 2, 0) @[Replacement.scala 207:62]
    node _state_reg_set_left_older_T_3 = bits(_state_reg_T_9, 2, 2) @[Replacement.scala 196:43]
    node state_reg_hi_hi_3 = not(_state_reg_set_left_older_T_3) @[Replacement.scala 196:33]
    skip
    skip
    node _state_reg_T_10 = bits(_state_reg_T_9, 1, 0) @[package.scala 154:13]
    node _state_reg_set_left_older_T_4 = bits(_state_reg_T_10, 1, 1) @[Replacement.scala 196:43]
    node state_reg_hi_hi_4 = not(_state_reg_set_left_older_T_4) @[Replacement.scala 196:33]
    skip
    skip
    node _state_reg_T_11 = bits(_state_reg_T_10, 0, 0) @[package.scala 154:13]
    skip
    node _state_reg_T_13 = not(_state_reg_T_11) @[Replacement.scala 218:7]
    node state_reg_hi_lo_2 = mux(state_reg_hi_hi_4, waddr_left_subtree_state_4, _state_reg_T_13) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo_1 = mux(state_reg_hi_hi_4, _state_reg_T_13, waddr_right_subtree_state_4) @[Replacement.scala 206:16]
    node state_reg_hi_1 = cat(state_reg_hi_hi_4, state_reg_hi_lo_2) @[Cat.scala 30:58]
    node _state_reg_T_17 = cat(state_reg_hi_1, state_reg_lo_1) @[Cat.scala 30:58]
    node state_reg_hi_lo_3 = mux(state_reg_hi_hi_3, waddr_left_subtree_state_3, _state_reg_T_17) @[Replacement.scala 203:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node state_reg_hi_lo_4 = mux(state_reg_hi_hi_4, waddr_left_subtree_state_5, _state_reg_T_13) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo_2 = mux(state_reg_hi_hi_4, _state_reg_T_13, waddr_right_subtree_state_5) @[Replacement.scala 206:16]
    node state_reg_hi_2 = cat(state_reg_hi_hi_4, state_reg_hi_lo_4) @[Cat.scala 30:58]
    node _state_reg_T_25 = cat(state_reg_hi_2, state_reg_lo_2) @[Cat.scala 30:58]
    node state_reg_lo_3 = mux(state_reg_hi_hi_3, _state_reg_T_25, waddr_right_subtree_state_3) @[Replacement.scala 206:16]
    node state_reg_hi_3 = cat(state_reg_hi_hi_3, state_reg_hi_lo_3) @[Cat.scala 30:58]
    node _state_reg_T_26 = cat(state_reg_hi_3, state_reg_lo_3) @[Cat.scala 30:58]
    node state_reg_lo_4 = mux(state_reg_hi_hi_1, _state_reg_T_26, waddr_right_subtree_state_1) @[Replacement.scala 206:16]
    node state_reg_hi_4 = cat(state_reg_hi_hi_1, state_reg_hi_lo_1) @[Cat.scala 30:58]
    node _state_reg_T_27 = cat(state_reg_hi_4, state_reg_lo_4) @[Cat.scala 30:58]
    node state_reg_hi_lo_5 = mux(state_reg_hi_hi, waddr_left_subtree_state, _state_reg_T_27) @[Replacement.scala 203:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node state_reg_hi_lo_6 = mux(state_reg_hi_hi_4, waddr_left_subtree_state_8, _state_reg_T_13) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo_5 = mux(state_reg_hi_hi_4, _state_reg_T_13, waddr_right_subtree_state_8) @[Replacement.scala 206:16]
    node state_reg_hi_5 = cat(state_reg_hi_hi_4, state_reg_hi_lo_6) @[Cat.scala 30:58]
    node _state_reg_T_37 = cat(state_reg_hi_5, state_reg_lo_5) @[Cat.scala 30:58]
    node state_reg_hi_lo_7 = mux(state_reg_hi_hi_3, waddr_left_subtree_state_7, _state_reg_T_37) @[Replacement.scala 203:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node state_reg_hi_lo_8 = mux(state_reg_hi_hi_4, waddr_left_subtree_state_9, _state_reg_T_13) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo_6 = mux(state_reg_hi_hi_4, _state_reg_T_13, waddr_right_subtree_state_9) @[Replacement.scala 206:16]
    node state_reg_hi_6 = cat(state_reg_hi_hi_4, state_reg_hi_lo_8) @[Cat.scala 30:58]
    node _state_reg_T_45 = cat(state_reg_hi_6, state_reg_lo_6) @[Cat.scala 30:58]
    node state_reg_lo_7 = mux(state_reg_hi_hi_3, _state_reg_T_45, waddr_right_subtree_state_7) @[Replacement.scala 206:16]
    node state_reg_hi_7 = cat(state_reg_hi_hi_3, state_reg_hi_lo_7) @[Cat.scala 30:58]
    node _state_reg_T_46 = cat(state_reg_hi_7, state_reg_lo_7) @[Cat.scala 30:58]
    node state_reg_hi_lo_9 = mux(state_reg_hi_hi_1, waddr_left_subtree_state_6, _state_reg_T_46) @[Replacement.scala 203:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node state_reg_hi_lo_10 = mux(state_reg_hi_hi_4, waddr_left_subtree_state_11, _state_reg_T_13) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo_8 = mux(state_reg_hi_hi_4, _state_reg_T_13, waddr_right_subtree_state_11) @[Replacement.scala 206:16]
    node state_reg_hi_8 = cat(state_reg_hi_hi_4, state_reg_hi_lo_10) @[Cat.scala 30:58]
    node _state_reg_T_55 = cat(state_reg_hi_8, state_reg_lo_8) @[Cat.scala 30:58]
    node state_reg_hi_lo_11 = mux(state_reg_hi_hi_3, waddr_left_subtree_state_10, _state_reg_T_55) @[Replacement.scala 203:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node state_reg_hi_lo_12 = mux(state_reg_hi_hi_4, waddr_left_subtree_state_12, _state_reg_T_13) @[Replacement.scala 203:16]
    skip
    skip
    skip
    node state_reg_lo_9 = mux(state_reg_hi_hi_4, _state_reg_T_13, waddr_right_subtree_state_12) @[Replacement.scala 206:16]
    node state_reg_hi_9 = cat(state_reg_hi_hi_4, state_reg_hi_lo_12) @[Cat.scala 30:58]
    node _state_reg_T_63 = cat(state_reg_hi_9, state_reg_lo_9) @[Cat.scala 30:58]
    node state_reg_lo_10 = mux(state_reg_hi_hi_3, _state_reg_T_63, waddr_right_subtree_state_10) @[Replacement.scala 206:16]
    node state_reg_hi_10 = cat(state_reg_hi_hi_3, state_reg_hi_lo_11) @[Cat.scala 30:58]
    node _state_reg_T_64 = cat(state_reg_hi_10, state_reg_lo_10) @[Cat.scala 30:58]
    node state_reg_lo_11 = mux(state_reg_hi_hi_1, _state_reg_T_64, waddr_right_subtree_state_6) @[Replacement.scala 206:16]
    node state_reg_hi_11 = cat(state_reg_hi_hi_1, state_reg_hi_lo_9) @[Cat.scala 30:58]
    node _state_reg_T_65 = cat(state_reg_hi_11, state_reg_lo_11) @[Cat.scala 30:58]
    node state_reg_lo_12 = mux(state_reg_hi_hi, _state_reg_T_65, waddr_right_subtree_state) @[Replacement.scala 206:16]
    node state_reg_hi_12 = cat(state_reg_hi_hi, state_reg_hi_lo_5) @[Cat.scala 30:58]
    node _state_reg_T_66 = cat(state_reg_hi_12, state_reg_lo_12) @[Cat.scala 30:58]
    node _GEN_23 = mux(_T_3, _state_reg_T_66, state_reg) @[BTB.scala 260:66 Replacement.scala 172:15 168:70]
    node mask = dshl(UInt<1>("h1"), waddr) @[OneHot.scala 58:35]
    node _idxs_T = bits(r_btb_updatePipe_bits_pc, 13, 1) @[BTB.scala 266:40]
    skip
    node _GEN_24 = mux(eq(UInt<5>("h0"), waddr), _idxs_T, idxs_0) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_25 = mux(eq(UInt<5>("h1"), waddr), _idxs_T, idxs_1) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_26 = mux(eq(UInt<5>("h2"), waddr), _idxs_T, idxs_2) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_27 = mux(eq(UInt<5>("h3"), waddr), _idxs_T, idxs_3) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_28 = mux(eq(UInt<5>("h4"), waddr), _idxs_T, idxs_4) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_29 = mux(eq(UInt<5>("h5"), waddr), _idxs_T, idxs_5) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_30 = mux(eq(UInt<5>("h6"), waddr), _idxs_T, idxs_6) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_31 = mux(eq(UInt<5>("h7"), waddr), _idxs_T, idxs_7) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_32 = mux(eq(UInt<5>("h8"), waddr), _idxs_T, idxs_8) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_33 = mux(eq(UInt<5>("h9"), waddr), _idxs_T, idxs_9) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_34 = mux(eq(UInt<5>("ha"), waddr), _idxs_T, idxs_10) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_35 = mux(eq(UInt<5>("hb"), waddr), _idxs_T, idxs_11) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_36 = mux(eq(UInt<5>("hc"), waddr), _idxs_T, idxs_12) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_37 = mux(eq(UInt<5>("hd"), waddr), _idxs_T, idxs_13) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_38 = mux(eq(UInt<5>("he"), waddr), _idxs_T, idxs_14) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_39 = mux(eq(UInt<5>("hf"), waddr), _idxs_T, idxs_15) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_40 = mux(eq(UInt<5>("h10"), waddr), _idxs_T, idxs_16) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_41 = mux(eq(UInt<5>("h11"), waddr), _idxs_T, idxs_17) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_42 = mux(eq(UInt<5>("h12"), waddr), _idxs_T, idxs_18) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_43 = mux(eq(UInt<5>("h13"), waddr), _idxs_T, idxs_19) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_44 = mux(eq(UInt<5>("h14"), waddr), _idxs_T, idxs_20) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_45 = mux(eq(UInt<5>("h15"), waddr), _idxs_T, idxs_21) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_46 = mux(eq(UInt<5>("h16"), waddr), _idxs_T, idxs_22) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_47 = mux(eq(UInt<5>("h17"), waddr), _idxs_T, idxs_23) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_48 = mux(eq(UInt<5>("h18"), waddr), _idxs_T, idxs_24) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_49 = mux(eq(UInt<5>("h19"), waddr), _idxs_T, idxs_25) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_50 = mux(eq(UInt<5>("h1a"), waddr), _idxs_T, idxs_26) @[BTB.scala 201:17 266:{17,17}]
    node _GEN_51 = mux(eq(UInt<5>("h1b"), waddr), _idxs_T, idxs_27) @[BTB.scala 201:17 266:{17,17}]
    skip
    skip
    node _GEN_52 = mux(eq(UInt<5>("h0"), waddr), idxHit_idx, tgts_0) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_53 = mux(eq(UInt<5>("h1"), waddr), idxHit_idx, tgts_1) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_54 = mux(eq(UInt<5>("h2"), waddr), idxHit_idx, tgts_2) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_55 = mux(eq(UInt<5>("h3"), waddr), idxHit_idx, tgts_3) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_56 = mux(eq(UInt<5>("h4"), waddr), idxHit_idx, tgts_4) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_57 = mux(eq(UInt<5>("h5"), waddr), idxHit_idx, tgts_5) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_58 = mux(eq(UInt<5>("h6"), waddr), idxHit_idx, tgts_6) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_59 = mux(eq(UInt<5>("h7"), waddr), idxHit_idx, tgts_7) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_60 = mux(eq(UInt<5>("h8"), waddr), idxHit_idx, tgts_8) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_61 = mux(eq(UInt<5>("h9"), waddr), idxHit_idx, tgts_9) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_62 = mux(eq(UInt<5>("ha"), waddr), idxHit_idx, tgts_10) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_63 = mux(eq(UInt<5>("hb"), waddr), idxHit_idx, tgts_11) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_64 = mux(eq(UInt<5>("hc"), waddr), idxHit_idx, tgts_12) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_65 = mux(eq(UInt<5>("hd"), waddr), idxHit_idx, tgts_13) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_66 = mux(eq(UInt<5>("he"), waddr), idxHit_idx, tgts_14) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_67 = mux(eq(UInt<5>("hf"), waddr), idxHit_idx, tgts_15) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_68 = mux(eq(UInt<5>("h10"), waddr), idxHit_idx, tgts_16) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_69 = mux(eq(UInt<5>("h11"), waddr), idxHit_idx, tgts_17) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_70 = mux(eq(UInt<5>("h12"), waddr), idxHit_idx, tgts_18) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_71 = mux(eq(UInt<5>("h13"), waddr), idxHit_idx, tgts_19) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_72 = mux(eq(UInt<5>("h14"), waddr), idxHit_idx, tgts_20) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_73 = mux(eq(UInt<5>("h15"), waddr), idxHit_idx, tgts_21) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_74 = mux(eq(UInt<5>("h16"), waddr), idxHit_idx, tgts_22) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_75 = mux(eq(UInt<5>("h17"), waddr), idxHit_idx, tgts_23) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_76 = mux(eq(UInt<5>("h18"), waddr), idxHit_idx, tgts_24) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_77 = mux(eq(UInt<5>("h19"), waddr), idxHit_idx, tgts_25) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_78 = mux(eq(UInt<5>("h1a"), waddr), idxHit_idx, tgts_26) @[BTB.scala 203:17 267:{17,17}]
    node _GEN_79 = mux(eq(UInt<5>("h1b"), waddr), idxHit_idx, tgts_27) @[BTB.scala 203:17 267:{17,17}]
    node _idxPages_T = add(idxPageUpdate, UInt<3>("h1")) @[BTB.scala 268:38]
    node _idxPages_waddr = bits(_idxPages_T, 2, 0) @[BTB.scala 268:{21,21}]
    node _GEN_80 = mux(eq(UInt<5>("h0"), waddr), _idxPages_waddr, idxPages_0) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_81 = mux(eq(UInt<5>("h1"), waddr), _idxPages_waddr, idxPages_1) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_82 = mux(eq(UInt<5>("h2"), waddr), _idxPages_waddr, idxPages_2) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_83 = mux(eq(UInt<5>("h3"), waddr), _idxPages_waddr, idxPages_3) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_84 = mux(eq(UInt<5>("h4"), waddr), _idxPages_waddr, idxPages_4) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_85 = mux(eq(UInt<5>("h5"), waddr), _idxPages_waddr, idxPages_5) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_86 = mux(eq(UInt<5>("h6"), waddr), _idxPages_waddr, idxPages_6) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_87 = mux(eq(UInt<5>("h7"), waddr), _idxPages_waddr, idxPages_7) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_88 = mux(eq(UInt<5>("h8"), waddr), _idxPages_waddr, idxPages_8) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_89 = mux(eq(UInt<5>("h9"), waddr), _idxPages_waddr, idxPages_9) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_90 = mux(eq(UInt<5>("ha"), waddr), _idxPages_waddr, idxPages_10) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_91 = mux(eq(UInt<5>("hb"), waddr), _idxPages_waddr, idxPages_11) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_92 = mux(eq(UInt<5>("hc"), waddr), _idxPages_waddr, idxPages_12) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_93 = mux(eq(UInt<5>("hd"), waddr), _idxPages_waddr, idxPages_13) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_94 = mux(eq(UInt<5>("he"), waddr), _idxPages_waddr, idxPages_14) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_95 = mux(eq(UInt<5>("hf"), waddr), _idxPages_waddr, idxPages_15) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_96 = mux(eq(UInt<5>("h10"), waddr), _idxPages_waddr, idxPages_16) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_97 = mux(eq(UInt<5>("h11"), waddr), _idxPages_waddr, idxPages_17) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_98 = mux(eq(UInt<5>("h12"), waddr), _idxPages_waddr, idxPages_18) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_99 = mux(eq(UInt<5>("h13"), waddr), _idxPages_waddr, idxPages_19) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_100 = mux(eq(UInt<5>("h14"), waddr), _idxPages_waddr, idxPages_20) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_101 = mux(eq(UInt<5>("h15"), waddr), _idxPages_waddr, idxPages_21) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_102 = mux(eq(UInt<5>("h16"), waddr), _idxPages_waddr, idxPages_22) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_103 = mux(eq(UInt<5>("h17"), waddr), _idxPages_waddr, idxPages_23) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_104 = mux(eq(UInt<5>("h18"), waddr), _idxPages_waddr, idxPages_24) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_105 = mux(eq(UInt<5>("h19"), waddr), _idxPages_waddr, idxPages_25) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_106 = mux(eq(UInt<5>("h1a"), waddr), _idxPages_waddr, idxPages_26) @[BTB.scala 202:21 268:{21,21}]
    node _GEN_107 = mux(eq(UInt<5>("h1b"), waddr), _idxPages_waddr, idxPages_27) @[BTB.scala 202:21 268:{21,21}]
    skip
    node _GEN_108 = mux(eq(UInt<5>("h0"), waddr), tgtPageUpdate, tgtPages_0) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_109 = mux(eq(UInt<5>("h1"), waddr), tgtPageUpdate, tgtPages_1) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_110 = mux(eq(UInt<5>("h2"), waddr), tgtPageUpdate, tgtPages_2) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_111 = mux(eq(UInt<5>("h3"), waddr), tgtPageUpdate, tgtPages_3) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_112 = mux(eq(UInt<5>("h4"), waddr), tgtPageUpdate, tgtPages_4) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_113 = mux(eq(UInt<5>("h5"), waddr), tgtPageUpdate, tgtPages_5) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_114 = mux(eq(UInt<5>("h6"), waddr), tgtPageUpdate, tgtPages_6) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_115 = mux(eq(UInt<5>("h7"), waddr), tgtPageUpdate, tgtPages_7) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_116 = mux(eq(UInt<5>("h8"), waddr), tgtPageUpdate, tgtPages_8) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_117 = mux(eq(UInt<5>("h9"), waddr), tgtPageUpdate, tgtPages_9) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_118 = mux(eq(UInt<5>("ha"), waddr), tgtPageUpdate, tgtPages_10) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_119 = mux(eq(UInt<5>("hb"), waddr), tgtPageUpdate, tgtPages_11) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_120 = mux(eq(UInt<5>("hc"), waddr), tgtPageUpdate, tgtPages_12) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_121 = mux(eq(UInt<5>("hd"), waddr), tgtPageUpdate, tgtPages_13) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_122 = mux(eq(UInt<5>("he"), waddr), tgtPageUpdate, tgtPages_14) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_123 = mux(eq(UInt<5>("hf"), waddr), tgtPageUpdate, tgtPages_15) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_124 = mux(eq(UInt<5>("h10"), waddr), tgtPageUpdate, tgtPages_16) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_125 = mux(eq(UInt<5>("h11"), waddr), tgtPageUpdate, tgtPages_17) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_126 = mux(eq(UInt<5>("h12"), waddr), tgtPageUpdate, tgtPages_18) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_127 = mux(eq(UInt<5>("h13"), waddr), tgtPageUpdate, tgtPages_19) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_128 = mux(eq(UInt<5>("h14"), waddr), tgtPageUpdate, tgtPages_20) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_129 = mux(eq(UInt<5>("h15"), waddr), tgtPageUpdate, tgtPages_21) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_130 = mux(eq(UInt<5>("h16"), waddr), tgtPageUpdate, tgtPages_22) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_131 = mux(eq(UInt<5>("h17"), waddr), tgtPageUpdate, tgtPages_23) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_132 = mux(eq(UInt<5>("h18"), waddr), tgtPageUpdate, tgtPages_24) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_133 = mux(eq(UInt<5>("h19"), waddr), tgtPageUpdate, tgtPages_25) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_134 = mux(eq(UInt<5>("h1a"), waddr), tgtPageUpdate, tgtPages_26) @[BTB.scala 204:21 269:{21,21}]
    node _GEN_135 = mux(eq(UInt<5>("h1b"), waddr), tgtPageUpdate, tgtPages_27) @[BTB.scala 204:21 269:{21,21}]
    skip
    skip
    node _GEN_136 = mux(eq(UInt<5>("h0"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_0) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_137 = mux(eq(UInt<5>("h1"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_1) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_138 = mux(eq(UInt<5>("h2"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_2) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_139 = mux(eq(UInt<5>("h3"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_3) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_140 = mux(eq(UInt<5>("h4"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_4) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_141 = mux(eq(UInt<5>("h5"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_5) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_142 = mux(eq(UInt<5>("h6"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_6) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_143 = mux(eq(UInt<5>("h7"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_7) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_144 = mux(eq(UInt<5>("h8"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_8) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_145 = mux(eq(UInt<5>("h9"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_9) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_146 = mux(eq(UInt<5>("ha"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_10) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_147 = mux(eq(UInt<5>("hb"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_11) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_148 = mux(eq(UInt<5>("hc"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_12) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_149 = mux(eq(UInt<5>("hd"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_13) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_150 = mux(eq(UInt<5>("he"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_14) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_151 = mux(eq(UInt<5>("hf"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_15) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_152 = mux(eq(UInt<5>("h10"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_16) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_153 = mux(eq(UInt<5>("h11"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_17) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_154 = mux(eq(UInt<5>("h12"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_18) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_155 = mux(eq(UInt<5>("h13"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_19) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_156 = mux(eq(UInt<5>("h14"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_20) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_157 = mux(eq(UInt<5>("h15"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_21) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_158 = mux(eq(UInt<5>("h16"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_22) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_159 = mux(eq(UInt<5>("h17"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_23) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_160 = mux(eq(UInt<5>("h18"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_24) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_161 = mux(eq(UInt<5>("h19"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_25) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_162 = mux(eq(UInt<5>("h1a"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_26) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_163 = mux(eq(UInt<5>("h1b"), waddr), r_btb_updatePipe_bits_cfiType, cfiType_27) @[BTB.scala 210:20 270:{20,20}]
    node _GEN_433 = pad(isValid, 32) @[BTB.scala 271:55]
    node _isValid_T = or(_GEN_433, mask) @[BTB.scala 271:55]
    node _isValid_T_1 = not(mask) @[BTB.scala 271:73]
    skip
    node _isValid_T_2 = and(_GEN_433, _isValid_T_1) @[BTB.scala 271:71]
    skip
    node _isValid_T_3 = mux(r_btb_updatePipe_bits_isValid, _isValid_T, _isValid_T_2) @[BTB.scala 271:19]
    skip
    node _brIdx_T = shr(r_btb_updatePipe_bits_br_pc, 1) @[BTB.scala 273:47]
    node _brIdx_waddr = bits(_brIdx_T, 0, 0) @[BTB.scala 273:{20,20}]
    node _GEN_164 = mux(eq(UInt<5>("h0"), waddr), _brIdx_waddr, brIdx_0) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_165 = mux(eq(UInt<5>("h1"), waddr), _brIdx_waddr, brIdx_1) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_166 = mux(eq(UInt<5>("h2"), waddr), _brIdx_waddr, brIdx_2) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_167 = mux(eq(UInt<5>("h3"), waddr), _brIdx_waddr, brIdx_3) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_168 = mux(eq(UInt<5>("h4"), waddr), _brIdx_waddr, brIdx_4) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_169 = mux(eq(UInt<5>("h5"), waddr), _brIdx_waddr, brIdx_5) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_170 = mux(eq(UInt<5>("h6"), waddr), _brIdx_waddr, brIdx_6) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_171 = mux(eq(UInt<5>("h7"), waddr), _brIdx_waddr, brIdx_7) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_172 = mux(eq(UInt<5>("h8"), waddr), _brIdx_waddr, brIdx_8) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_173 = mux(eq(UInt<5>("h9"), waddr), _brIdx_waddr, brIdx_9) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_174 = mux(eq(UInt<5>("ha"), waddr), _brIdx_waddr, brIdx_10) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_175 = mux(eq(UInt<5>("hb"), waddr), _brIdx_waddr, brIdx_11) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_176 = mux(eq(UInt<5>("hc"), waddr), _brIdx_waddr, brIdx_12) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_177 = mux(eq(UInt<5>("hd"), waddr), _brIdx_waddr, brIdx_13) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_178 = mux(eq(UInt<5>("he"), waddr), _brIdx_waddr, brIdx_14) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_179 = mux(eq(UInt<5>("hf"), waddr), _brIdx_waddr, brIdx_15) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_180 = mux(eq(UInt<5>("h10"), waddr), _brIdx_waddr, brIdx_16) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_181 = mux(eq(UInt<5>("h11"), waddr), _brIdx_waddr, brIdx_17) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_182 = mux(eq(UInt<5>("h12"), waddr), _brIdx_waddr, brIdx_18) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_183 = mux(eq(UInt<5>("h13"), waddr), _brIdx_waddr, brIdx_19) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_184 = mux(eq(UInt<5>("h14"), waddr), _brIdx_waddr, brIdx_20) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_185 = mux(eq(UInt<5>("h15"), waddr), _brIdx_waddr, brIdx_21) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_186 = mux(eq(UInt<5>("h16"), waddr), _brIdx_waddr, brIdx_22) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_187 = mux(eq(UInt<5>("h17"), waddr), _brIdx_waddr, brIdx_23) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_188 = mux(eq(UInt<5>("h18"), waddr), _brIdx_waddr, brIdx_24) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_189 = mux(eq(UInt<5>("h19"), waddr), _brIdx_waddr, brIdx_25) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_190 = mux(eq(UInt<5>("h1a"), waddr), _brIdx_waddr, brIdx_26) @[BTB.scala 211:18 273:{20,20}]
    node _GEN_191 = mux(eq(UInt<5>("h1b"), waddr), _brIdx_waddr, brIdx_27) @[BTB.scala 211:18 273:{20,20}]
    node _idxWritesEven_T = bits(idxPageUpdate, 0, 0) @[BTB.scala 276:39]
    node idxWritesEven = not(_idxWritesEven_T) @[BTB.scala 276:25]
    node _T_5 = mux(idxWritesEven, idxPageReplEn, tgtPageReplEn) @[BTB.scala 282:24]
    skip
    skip
    node _T_8 = mux(idxWritesEven, updatePageHit_p, pageHit_p) @[BTB.scala 283:10]
    node _T_9 = bits(_T_5, 0, 0) @[BTB.scala 280:17]
    node _GEN_192 = mux(_T_9, _T_8, pages_0) @[BTB.scala 205:18 280:{22,33}]
    node _T_10 = bits(_T_5, 2, 2) @[BTB.scala 280:17]
    node _GEN_193 = mux(_T_10, _T_8, pages_2) @[BTB.scala 205:18 280:{22,33}]
    node _T_11 = bits(_T_5, 4, 4) @[BTB.scala 280:17]
    node _GEN_194 = mux(_T_11, _T_8, pages_4) @[BTB.scala 205:18 280:{22,33}]
    node _T_12 = mux(idxWritesEven, tgtPageReplEn, idxPageReplEn) @[BTB.scala 284:24]
    skip
    skip
    node _T_15 = mux(idxWritesEven, pageHit_p, updatePageHit_p) @[BTB.scala 285:10]
    node _T_16 = bits(_T_12, 1, 1) @[BTB.scala 280:17]
    node _GEN_195 = mux(_T_16, _T_15, pages_1) @[BTB.scala 205:18 280:{22,33}]
    node _T_17 = bits(_T_12, 3, 3) @[BTB.scala 280:17]
    node _GEN_196 = mux(_T_17, _T_15, pages_3) @[BTB.scala 205:18 280:{22,33}]
    node _T_18 = bits(_T_12, 5, 5) @[BTB.scala 280:17]
    node _GEN_197 = mux(_T_18, _T_15, pages_5) @[BTB.scala 205:18 280:{22,33}]
    node _GEN_435 = pad(pageValid, 8) @[BTB.scala 286:28]
    node _pageValid_T = or(_GEN_435, tgtPageReplEn) @[BTB.scala 286:28]
    node _pageValid_T_1 = or(_pageValid_T, idxPageReplEn) @[BTB.scala 286:44]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_338 = mux(r_btb_updatePipe_valid, _isValid_T_3, pad(isValid, 32)) @[BTB.scala 264:29 271:13 209:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_373 = mux(r_btb_updatePipe_valid, _pageValid_T_1, pad(pageValid, 8)) @[BTB.scala 264:29 286:15 206:22]
    node _io_resp_valid_T = shl(pageHit, 1) @[BTB.scala 289:29]
    node _io_resp_valid_T_1 = bits(idxHit, 0, 0) @[Mux.scala 29:36]
    node _io_resp_valid_T_2 = bits(idxHit, 1, 1) @[Mux.scala 29:36]
    node _io_resp_valid_T_3 = bits(idxHit, 2, 2) @[Mux.scala 29:36]
    node _io_resp_valid_T_4 = bits(idxHit, 3, 3) @[Mux.scala 29:36]
    node _io_resp_valid_T_5 = bits(idxHit, 4, 4) @[Mux.scala 29:36]
    node _io_resp_valid_T_6 = bits(idxHit, 5, 5) @[Mux.scala 29:36]
    node _io_resp_valid_T_7 = bits(idxHit, 6, 6) @[Mux.scala 29:36]
    node _io_resp_valid_T_8 = bits(idxHit, 7, 7) @[Mux.scala 29:36]
    node _io_resp_valid_T_9 = bits(idxHit, 8, 8) @[Mux.scala 29:36]
    node _io_resp_valid_T_10 = bits(idxHit, 9, 9) @[Mux.scala 29:36]
    node _io_resp_valid_T_11 = bits(idxHit, 10, 10) @[Mux.scala 29:36]
    node _io_resp_valid_T_12 = bits(idxHit, 11, 11) @[Mux.scala 29:36]
    node _io_resp_valid_T_13 = bits(idxHit, 12, 12) @[Mux.scala 29:36]
    node _io_resp_valid_T_14 = bits(idxHit, 13, 13) @[Mux.scala 29:36]
    node _io_resp_valid_T_15 = bits(idxHit, 14, 14) @[Mux.scala 29:36]
    node _io_resp_valid_T_16 = bits(idxHit, 15, 15) @[Mux.scala 29:36]
    node _io_resp_valid_T_17 = bits(idxHit, 16, 16) @[Mux.scala 29:36]
    node _io_resp_valid_T_18 = bits(idxHit, 17, 17) @[Mux.scala 29:36]
    node _io_resp_valid_T_19 = bits(idxHit, 18, 18) @[Mux.scala 29:36]
    node _io_resp_valid_T_20 = bits(idxHit, 19, 19) @[Mux.scala 29:36]
    node _io_resp_valid_T_21 = bits(idxHit, 20, 20) @[Mux.scala 29:36]
    node _io_resp_valid_T_22 = bits(idxHit, 21, 21) @[Mux.scala 29:36]
    node _io_resp_valid_T_23 = bits(idxHit, 22, 22) @[Mux.scala 29:36]
    node _io_resp_valid_T_24 = bits(idxHit, 23, 23) @[Mux.scala 29:36]
    node _io_resp_valid_T_25 = bits(idxHit, 24, 24) @[Mux.scala 29:36]
    node _io_resp_valid_T_26 = bits(idxHit, 25, 25) @[Mux.scala 29:36]
    node _io_resp_valid_T_27 = bits(idxHit, 26, 26) @[Mux.scala 29:36]
    node _io_resp_valid_T_28 = bits(idxHit, 27, 27) @[Mux.scala 29:36]
    node _io_resp_valid_T_29 = mux(_io_resp_valid_T_1, idxPages_0, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_30 = mux(_io_resp_valid_T_2, idxPages_1, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_31 = mux(_io_resp_valid_T_3, idxPages_2, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_32 = mux(_io_resp_valid_T_4, idxPages_3, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_33 = mux(_io_resp_valid_T_5, idxPages_4, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_34 = mux(_io_resp_valid_T_6, idxPages_5, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_35 = mux(_io_resp_valid_T_7, idxPages_6, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_36 = mux(_io_resp_valid_T_8, idxPages_7, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_37 = mux(_io_resp_valid_T_9, idxPages_8, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_38 = mux(_io_resp_valid_T_10, idxPages_9, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_39 = mux(_io_resp_valid_T_11, idxPages_10, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_40 = mux(_io_resp_valid_T_12, idxPages_11, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_41 = mux(_io_resp_valid_T_13, idxPages_12, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_42 = mux(_io_resp_valid_T_14, idxPages_13, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_43 = mux(_io_resp_valid_T_15, idxPages_14, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_44 = mux(_io_resp_valid_T_16, idxPages_15, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_45 = mux(_io_resp_valid_T_17, idxPages_16, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_46 = mux(_io_resp_valid_T_18, idxPages_17, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_47 = mux(_io_resp_valid_T_19, idxPages_18, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_48 = mux(_io_resp_valid_T_20, idxPages_19, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_49 = mux(_io_resp_valid_T_21, idxPages_20, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_50 = mux(_io_resp_valid_T_22, idxPages_21, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_51 = mux(_io_resp_valid_T_23, idxPages_22, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_52 = mux(_io_resp_valid_T_24, idxPages_23, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_53 = mux(_io_resp_valid_T_25, idxPages_24, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_54 = mux(_io_resp_valid_T_26, idxPages_25, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_55 = mux(_io_resp_valid_T_27, idxPages_26, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_56 = mux(_io_resp_valid_T_28, idxPages_27, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_valid_T_57 = or(_io_resp_valid_T_29, _io_resp_valid_T_30) @[Mux.scala 27:72]
    node _io_resp_valid_T_58 = or(_io_resp_valid_T_57, _io_resp_valid_T_31) @[Mux.scala 27:72]
    node _io_resp_valid_T_59 = or(_io_resp_valid_T_58, _io_resp_valid_T_32) @[Mux.scala 27:72]
    node _io_resp_valid_T_60 = or(_io_resp_valid_T_59, _io_resp_valid_T_33) @[Mux.scala 27:72]
    node _io_resp_valid_T_61 = or(_io_resp_valid_T_60, _io_resp_valid_T_34) @[Mux.scala 27:72]
    node _io_resp_valid_T_62 = or(_io_resp_valid_T_61, _io_resp_valid_T_35) @[Mux.scala 27:72]
    node _io_resp_valid_T_63 = or(_io_resp_valid_T_62, _io_resp_valid_T_36) @[Mux.scala 27:72]
    node _io_resp_valid_T_64 = or(_io_resp_valid_T_63, _io_resp_valid_T_37) @[Mux.scala 27:72]
    node _io_resp_valid_T_65 = or(_io_resp_valid_T_64, _io_resp_valid_T_38) @[Mux.scala 27:72]
    node _io_resp_valid_T_66 = or(_io_resp_valid_T_65, _io_resp_valid_T_39) @[Mux.scala 27:72]
    node _io_resp_valid_T_67 = or(_io_resp_valid_T_66, _io_resp_valid_T_40) @[Mux.scala 27:72]
    node _io_resp_valid_T_68 = or(_io_resp_valid_T_67, _io_resp_valid_T_41) @[Mux.scala 27:72]
    node _io_resp_valid_T_69 = or(_io_resp_valid_T_68, _io_resp_valid_T_42) @[Mux.scala 27:72]
    node _io_resp_valid_T_70 = or(_io_resp_valid_T_69, _io_resp_valid_T_43) @[Mux.scala 27:72]
    node _io_resp_valid_T_71 = or(_io_resp_valid_T_70, _io_resp_valid_T_44) @[Mux.scala 27:72]
    node _io_resp_valid_T_72 = or(_io_resp_valid_T_71, _io_resp_valid_T_45) @[Mux.scala 27:72]
    node _io_resp_valid_T_73 = or(_io_resp_valid_T_72, _io_resp_valid_T_46) @[Mux.scala 27:72]
    node _io_resp_valid_T_74 = or(_io_resp_valid_T_73, _io_resp_valid_T_47) @[Mux.scala 27:72]
    node _io_resp_valid_T_75 = or(_io_resp_valid_T_74, _io_resp_valid_T_48) @[Mux.scala 27:72]
    node _io_resp_valid_T_76 = or(_io_resp_valid_T_75, _io_resp_valid_T_49) @[Mux.scala 27:72]
    node _io_resp_valid_T_77 = or(_io_resp_valid_T_76, _io_resp_valid_T_50) @[Mux.scala 27:72]
    node _io_resp_valid_T_78 = or(_io_resp_valid_T_77, _io_resp_valid_T_51) @[Mux.scala 27:72]
    node _io_resp_valid_T_79 = or(_io_resp_valid_T_78, _io_resp_valid_T_52) @[Mux.scala 27:72]
    node _io_resp_valid_T_80 = or(_io_resp_valid_T_79, _io_resp_valid_T_53) @[Mux.scala 27:72]
    node _io_resp_valid_T_81 = or(_io_resp_valid_T_80, _io_resp_valid_T_54) @[Mux.scala 27:72]
    node _io_resp_valid_T_82 = or(_io_resp_valid_T_81, _io_resp_valid_T_55) @[Mux.scala 27:72]
    node _io_resp_valid_T_83 = or(_io_resp_valid_T_82, _io_resp_valid_T_56) @[Mux.scala 27:72]
    skip
    node _io_resp_valid_T_84 = dshr(_io_resp_valid_T, _io_resp_valid_T_83) @[BTB.scala 289:34]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_resp_bits_target_T_28 = mux(_io_resp_valid_T_1, tgtPages_0, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_29 = mux(_io_resp_valid_T_2, tgtPages_1, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_30 = mux(_io_resp_valid_T_3, tgtPages_2, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_31 = mux(_io_resp_valid_T_4, tgtPages_3, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_32 = mux(_io_resp_valid_T_5, tgtPages_4, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_33 = mux(_io_resp_valid_T_6, tgtPages_5, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_34 = mux(_io_resp_valid_T_7, tgtPages_6, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_35 = mux(_io_resp_valid_T_8, tgtPages_7, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_36 = mux(_io_resp_valid_T_9, tgtPages_8, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_37 = mux(_io_resp_valid_T_10, tgtPages_9, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_38 = mux(_io_resp_valid_T_11, tgtPages_10, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_39 = mux(_io_resp_valid_T_12, tgtPages_11, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_40 = mux(_io_resp_valid_T_13, tgtPages_12, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_41 = mux(_io_resp_valid_T_14, tgtPages_13, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_42 = mux(_io_resp_valid_T_15, tgtPages_14, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_43 = mux(_io_resp_valid_T_16, tgtPages_15, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_44 = mux(_io_resp_valid_T_17, tgtPages_16, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_45 = mux(_io_resp_valid_T_18, tgtPages_17, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_46 = mux(_io_resp_valid_T_19, tgtPages_18, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_47 = mux(_io_resp_valid_T_20, tgtPages_19, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_48 = mux(_io_resp_valid_T_21, tgtPages_20, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_49 = mux(_io_resp_valid_T_22, tgtPages_21, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_50 = mux(_io_resp_valid_T_23, tgtPages_22, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_51 = mux(_io_resp_valid_T_24, tgtPages_23, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_52 = mux(_io_resp_valid_T_25, tgtPages_24, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_53 = mux(_io_resp_valid_T_26, tgtPages_25, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_54 = mux(_io_resp_valid_T_27, tgtPages_26, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_55 = mux(_io_resp_valid_T_28, tgtPages_27, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_56 = or(_io_resp_bits_target_T_28, _io_resp_bits_target_T_29) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_57 = or(_io_resp_bits_target_T_56, _io_resp_bits_target_T_30) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_58 = or(_io_resp_bits_target_T_57, _io_resp_bits_target_T_31) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_59 = or(_io_resp_bits_target_T_58, _io_resp_bits_target_T_32) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_60 = or(_io_resp_bits_target_T_59, _io_resp_bits_target_T_33) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_61 = or(_io_resp_bits_target_T_60, _io_resp_bits_target_T_34) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_62 = or(_io_resp_bits_target_T_61, _io_resp_bits_target_T_35) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_63 = or(_io_resp_bits_target_T_62, _io_resp_bits_target_T_36) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_64 = or(_io_resp_bits_target_T_63, _io_resp_bits_target_T_37) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_65 = or(_io_resp_bits_target_T_64, _io_resp_bits_target_T_38) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_66 = or(_io_resp_bits_target_T_65, _io_resp_bits_target_T_39) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_67 = or(_io_resp_bits_target_T_66, _io_resp_bits_target_T_40) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_68 = or(_io_resp_bits_target_T_67, _io_resp_bits_target_T_41) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_69 = or(_io_resp_bits_target_T_68, _io_resp_bits_target_T_42) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_70 = or(_io_resp_bits_target_T_69, _io_resp_bits_target_T_43) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_71 = or(_io_resp_bits_target_T_70, _io_resp_bits_target_T_44) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_72 = or(_io_resp_bits_target_T_71, _io_resp_bits_target_T_45) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_73 = or(_io_resp_bits_target_T_72, _io_resp_bits_target_T_46) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_74 = or(_io_resp_bits_target_T_73, _io_resp_bits_target_T_47) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_75 = or(_io_resp_bits_target_T_74, _io_resp_bits_target_T_48) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_76 = or(_io_resp_bits_target_T_75, _io_resp_bits_target_T_49) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_77 = or(_io_resp_bits_target_T_76, _io_resp_bits_target_T_50) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_78 = or(_io_resp_bits_target_T_77, _io_resp_bits_target_T_51) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_79 = or(_io_resp_bits_target_T_78, _io_resp_bits_target_T_52) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_80 = or(_io_resp_bits_target_T_79, _io_resp_bits_target_T_53) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_81 = or(_io_resp_bits_target_T_80, _io_resp_bits_target_T_54) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_82 = or(_io_resp_bits_target_T_81, _io_resp_bits_target_T_55) @[Mux.scala 27:72]
    skip
    node _io_resp_bits_target_T_83 = eq(_io_resp_bits_target_T_82, UInt<3>("h1")) @[package.scala 32:86]
    node _io_resp_bits_target_T_84 = mux(_io_resp_bits_target_T_83, pagesMasked_1, pagesMasked_0) @[package.scala 32:76]
    node _io_resp_bits_target_T_85 = eq(_io_resp_bits_target_T_82, UInt<3>("h2")) @[package.scala 32:86]
    node _io_resp_bits_target_T_86 = mux(_io_resp_bits_target_T_85, pagesMasked_2, _io_resp_bits_target_T_84) @[package.scala 32:76]
    node _io_resp_bits_target_T_87 = eq(_io_resp_bits_target_T_82, UInt<3>("h3")) @[package.scala 32:86]
    node _io_resp_bits_target_T_88 = mux(_io_resp_bits_target_T_87, pagesMasked_3, _io_resp_bits_target_T_86) @[package.scala 32:76]
    node _io_resp_bits_target_T_89 = eq(_io_resp_bits_target_T_82, UInt<3>("h4")) @[package.scala 32:86]
    node _io_resp_bits_target_T_90 = mux(_io_resp_bits_target_T_89, pagesMasked_4, _io_resp_bits_target_T_88) @[package.scala 32:76]
    node _io_resp_bits_target_T_91 = eq(_io_resp_bits_target_T_82, UInt<3>("h5")) @[package.scala 32:86]
    node _io_resp_bits_target_T_92 = mux(_io_resp_bits_target_T_91, pagesMasked_5, _io_resp_bits_target_T_90) @[package.scala 32:76]
    node _io_resp_bits_target_T_93 = eq(_io_resp_bits_target_T_82, UInt<3>("h6")) @[package.scala 32:86]
    node _io_resp_bits_target_T_94 = mux(_io_resp_bits_target_T_93, pagesMasked_4, _io_resp_bits_target_T_92) @[package.scala 32:76]
    node _io_resp_bits_target_T_95 = eq(_io_resp_bits_target_T_82, UInt<3>("h7")) @[package.scala 32:86]
    node io_resp_bits_target_hi = mux(_io_resp_bits_target_T_95, pagesMasked_5, _io_resp_bits_target_T_94) @[package.scala 32:76]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_resp_bits_target_T_124 = mux(_io_resp_valid_T_1, tgts_0, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_125 = mux(_io_resp_valid_T_2, tgts_1, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_126 = mux(_io_resp_valid_T_3, tgts_2, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_127 = mux(_io_resp_valid_T_4, tgts_3, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_128 = mux(_io_resp_valid_T_5, tgts_4, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_129 = mux(_io_resp_valid_T_6, tgts_5, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_130 = mux(_io_resp_valid_T_7, tgts_6, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_131 = mux(_io_resp_valid_T_8, tgts_7, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_132 = mux(_io_resp_valid_T_9, tgts_8, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_133 = mux(_io_resp_valid_T_10, tgts_9, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_134 = mux(_io_resp_valid_T_11, tgts_10, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_135 = mux(_io_resp_valid_T_12, tgts_11, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_136 = mux(_io_resp_valid_T_13, tgts_12, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_137 = mux(_io_resp_valid_T_14, tgts_13, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_138 = mux(_io_resp_valid_T_15, tgts_14, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_139 = mux(_io_resp_valid_T_16, tgts_15, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_140 = mux(_io_resp_valid_T_17, tgts_16, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_141 = mux(_io_resp_valid_T_18, tgts_17, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_142 = mux(_io_resp_valid_T_19, tgts_18, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_143 = mux(_io_resp_valid_T_20, tgts_19, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_144 = mux(_io_resp_valid_T_21, tgts_20, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_145 = mux(_io_resp_valid_T_22, tgts_21, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_146 = mux(_io_resp_valid_T_23, tgts_22, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_147 = mux(_io_resp_valid_T_24, tgts_23, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_148 = mux(_io_resp_valid_T_25, tgts_24, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_149 = mux(_io_resp_valid_T_26, tgts_25, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_150 = mux(_io_resp_valid_T_27, tgts_26, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_151 = mux(_io_resp_valid_T_28, tgts_27, UInt<13>("h0")) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_152 = or(_io_resp_bits_target_T_124, _io_resp_bits_target_T_125) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_153 = or(_io_resp_bits_target_T_152, _io_resp_bits_target_T_126) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_154 = or(_io_resp_bits_target_T_153, _io_resp_bits_target_T_127) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_155 = or(_io_resp_bits_target_T_154, _io_resp_bits_target_T_128) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_156 = or(_io_resp_bits_target_T_155, _io_resp_bits_target_T_129) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_157 = or(_io_resp_bits_target_T_156, _io_resp_bits_target_T_130) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_158 = or(_io_resp_bits_target_T_157, _io_resp_bits_target_T_131) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_159 = or(_io_resp_bits_target_T_158, _io_resp_bits_target_T_132) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_160 = or(_io_resp_bits_target_T_159, _io_resp_bits_target_T_133) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_161 = or(_io_resp_bits_target_T_160, _io_resp_bits_target_T_134) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_162 = or(_io_resp_bits_target_T_161, _io_resp_bits_target_T_135) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_163 = or(_io_resp_bits_target_T_162, _io_resp_bits_target_T_136) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_164 = or(_io_resp_bits_target_T_163, _io_resp_bits_target_T_137) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_165 = or(_io_resp_bits_target_T_164, _io_resp_bits_target_T_138) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_166 = or(_io_resp_bits_target_T_165, _io_resp_bits_target_T_139) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_167 = or(_io_resp_bits_target_T_166, _io_resp_bits_target_T_140) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_168 = or(_io_resp_bits_target_T_167, _io_resp_bits_target_T_141) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_169 = or(_io_resp_bits_target_T_168, _io_resp_bits_target_T_142) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_170 = or(_io_resp_bits_target_T_169, _io_resp_bits_target_T_143) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_171 = or(_io_resp_bits_target_T_170, _io_resp_bits_target_T_144) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_172 = or(_io_resp_bits_target_T_171, _io_resp_bits_target_T_145) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_173 = or(_io_resp_bits_target_T_172, _io_resp_bits_target_T_146) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_174 = or(_io_resp_bits_target_T_173, _io_resp_bits_target_T_147) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_175 = or(_io_resp_bits_target_T_174, _io_resp_bits_target_T_148) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_176 = or(_io_resp_bits_target_T_175, _io_resp_bits_target_T_149) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_177 = or(_io_resp_bits_target_T_176, _io_resp_bits_target_T_150) @[Mux.scala 27:72]
    node _io_resp_bits_target_T_178 = or(_io_resp_bits_target_T_177, _io_resp_bits_target_T_151) @[Mux.scala 27:72]
    skip
    node io_resp_bits_target_lo = shl(_io_resp_bits_target_T_178, 1) @[BTB.scala 291:88]
    node _io_resp_bits_target_T_179 = cat(io_resp_bits_target_hi, io_resp_bits_target_lo) @[Cat.scala 30:58]
    node io_resp_bits_entry_hi = bits(idxHit, 27, 16) @[OneHot.scala 30:18]
    node io_resp_bits_entry_lo = bits(idxHit, 15, 0) @[OneHot.scala 31:18]
    node io_resp_bits_entry_hi_1 = orr(io_resp_bits_entry_hi) @[OneHot.scala 32:14]
    node _GEN_436 = pad(io_resp_bits_entry_hi, 16) @[OneHot.scala 32:28]
    node _io_resp_bits_entry_T = or(_GEN_436, io_resp_bits_entry_lo) @[OneHot.scala 32:28]
    node io_resp_bits_entry_hi_2 = bits(_io_resp_bits_entry_T, 15, 8) @[OneHot.scala 30:18]
    node io_resp_bits_entry_lo_1 = bits(_io_resp_bits_entry_T, 7, 0) @[OneHot.scala 31:18]
    node io_resp_bits_entry_hi_3 = orr(io_resp_bits_entry_hi_2) @[OneHot.scala 32:14]
    node _io_resp_bits_entry_T_1 = or(io_resp_bits_entry_hi_2, io_resp_bits_entry_lo_1) @[OneHot.scala 32:28]
    node io_resp_bits_entry_hi_4 = bits(_io_resp_bits_entry_T_1, 7, 4) @[OneHot.scala 30:18]
    node io_resp_bits_entry_lo_2 = bits(_io_resp_bits_entry_T_1, 3, 0) @[OneHot.scala 31:18]
    node io_resp_bits_entry_hi_5 = orr(io_resp_bits_entry_hi_4) @[OneHot.scala 32:14]
    node _io_resp_bits_entry_T_2 = or(io_resp_bits_entry_hi_4, io_resp_bits_entry_lo_2) @[OneHot.scala 32:28]
    node io_resp_bits_entry_hi_6 = bits(_io_resp_bits_entry_T_2, 3, 2) @[OneHot.scala 30:18]
    node io_resp_bits_entry_lo_3 = bits(_io_resp_bits_entry_T_2, 1, 0) @[OneHot.scala 31:18]
    node io_resp_bits_entry_hi_7 = orr(io_resp_bits_entry_hi_6) @[OneHot.scala 32:14]
    node _io_resp_bits_entry_T_3 = or(io_resp_bits_entry_hi_6, io_resp_bits_entry_lo_3) @[OneHot.scala 32:28]
    node io_resp_bits_entry_lo_4 = bits(_io_resp_bits_entry_T_3, 1, 1) @[CircuitMath.scala 30:8]
    node io_resp_bits_entry_lo_5 = cat(io_resp_bits_entry_hi_7, io_resp_bits_entry_lo_4) @[Cat.scala 30:58]
    node io_resp_bits_entry_lo_6 = cat(io_resp_bits_entry_hi_5, io_resp_bits_entry_lo_5) @[Cat.scala 30:58]
    node io_resp_bits_entry_lo_7 = cat(io_resp_bits_entry_hi_3, io_resp_bits_entry_lo_6) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_resp_bits_bridx_T_28 = and(_io_resp_valid_T_1, brIdx_0) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_29 = and(_io_resp_valid_T_2, brIdx_1) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_30 = and(_io_resp_valid_T_3, brIdx_2) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_31 = and(_io_resp_valid_T_4, brIdx_3) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_32 = and(_io_resp_valid_T_5, brIdx_4) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_33 = and(_io_resp_valid_T_6, brIdx_5) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_34 = and(_io_resp_valid_T_7, brIdx_6) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_35 = and(_io_resp_valid_T_8, brIdx_7) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_36 = and(_io_resp_valid_T_9, brIdx_8) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_37 = and(_io_resp_valid_T_10, brIdx_9) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_38 = and(_io_resp_valid_T_11, brIdx_10) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_39 = and(_io_resp_valid_T_12, brIdx_11) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_40 = and(_io_resp_valid_T_13, brIdx_12) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_41 = and(_io_resp_valid_T_14, brIdx_13) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_42 = and(_io_resp_valid_T_15, brIdx_14) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_43 = and(_io_resp_valid_T_16, brIdx_15) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_44 = and(_io_resp_valid_T_17, brIdx_16) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_45 = and(_io_resp_valid_T_18, brIdx_17) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_46 = and(_io_resp_valid_T_19, brIdx_18) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_47 = and(_io_resp_valid_T_20, brIdx_19) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_48 = and(_io_resp_valid_T_21, brIdx_20) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_49 = and(_io_resp_valid_T_22, brIdx_21) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_50 = and(_io_resp_valid_T_23, brIdx_22) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_51 = and(_io_resp_valid_T_24, brIdx_23) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_52 = and(_io_resp_valid_T_25, brIdx_24) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_53 = and(_io_resp_valid_T_26, brIdx_25) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_54 = and(_io_resp_valid_T_27, brIdx_26) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_55 = and(_io_resp_valid_T_28, brIdx_27) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_56 = or(_io_resp_bits_bridx_T_28, _io_resp_bits_bridx_T_29) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_57 = or(_io_resp_bits_bridx_T_56, _io_resp_bits_bridx_T_30) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_58 = or(_io_resp_bits_bridx_T_57, _io_resp_bits_bridx_T_31) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_59 = or(_io_resp_bits_bridx_T_58, _io_resp_bits_bridx_T_32) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_60 = or(_io_resp_bits_bridx_T_59, _io_resp_bits_bridx_T_33) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_61 = or(_io_resp_bits_bridx_T_60, _io_resp_bits_bridx_T_34) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_62 = or(_io_resp_bits_bridx_T_61, _io_resp_bits_bridx_T_35) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_63 = or(_io_resp_bits_bridx_T_62, _io_resp_bits_bridx_T_36) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_64 = or(_io_resp_bits_bridx_T_63, _io_resp_bits_bridx_T_37) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_65 = or(_io_resp_bits_bridx_T_64, _io_resp_bits_bridx_T_38) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_66 = or(_io_resp_bits_bridx_T_65, _io_resp_bits_bridx_T_39) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_67 = or(_io_resp_bits_bridx_T_66, _io_resp_bits_bridx_T_40) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_68 = or(_io_resp_bits_bridx_T_67, _io_resp_bits_bridx_T_41) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_69 = or(_io_resp_bits_bridx_T_68, _io_resp_bits_bridx_T_42) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_70 = or(_io_resp_bits_bridx_T_69, _io_resp_bits_bridx_T_43) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_71 = or(_io_resp_bits_bridx_T_70, _io_resp_bits_bridx_T_44) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_72 = or(_io_resp_bits_bridx_T_71, _io_resp_bits_bridx_T_45) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_73 = or(_io_resp_bits_bridx_T_72, _io_resp_bits_bridx_T_46) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_74 = or(_io_resp_bits_bridx_T_73, _io_resp_bits_bridx_T_47) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_75 = or(_io_resp_bits_bridx_T_74, _io_resp_bits_bridx_T_48) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_76 = or(_io_resp_bits_bridx_T_75, _io_resp_bits_bridx_T_49) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_77 = or(_io_resp_bits_bridx_T_76, _io_resp_bits_bridx_T_50) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_78 = or(_io_resp_bits_bridx_T_77, _io_resp_bits_bridx_T_51) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_79 = or(_io_resp_bits_bridx_T_78, _io_resp_bits_bridx_T_52) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_80 = or(_io_resp_bits_bridx_T_79, _io_resp_bits_bridx_T_53) @[Mux.scala 27:72]
    node _io_resp_bits_bridx_T_81 = or(_io_resp_bits_bridx_T_80, _io_resp_bits_bridx_T_54) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_19 = bits(idxHit, 13, 0) @[Misc.scala 180:37]
    node _T_20 = bits(_T_19, 6, 0) @[Misc.scala 180:37]
    node _T_21 = bits(_T_20, 2, 0) @[Misc.scala 180:37]
    node leftOne = bits(_T_21, 0, 0) @[Misc.scala 180:37]
    skip
    node _T_23 = bits(_T_21, 2, 1) @[Misc.scala 181:39]
    node leftOne_1 = bits(_T_23, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne = bits(_T_23, 1, 1) @[Misc.scala 181:39]
    skip
    node rightOne_1 = or(leftOne_1, rightOne) @[Misc.scala 182:16]
    skip
    node rightTwo = and(leftOne_1, rightOne) @[Misc.scala 182:61]
    skip
    node leftOne_2 = or(leftOne, rightOne_1) @[Misc.scala 182:16]
    skip
    node _T_29 = and(leftOne, rightOne_1) @[Misc.scala 182:61]
    node leftTwo = or(rightTwo, _T_29) @[Misc.scala 182:49]
    node _T_30 = bits(_T_20, 6, 3) @[Misc.scala 181:39]
    node _T_31 = bits(_T_30, 1, 0) @[Misc.scala 180:37]
    node leftOne_3 = bits(_T_31, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_2 = bits(_T_31, 1, 1) @[Misc.scala 181:39]
    skip
    node leftOne_4 = or(leftOne_3, rightOne_2) @[Misc.scala 182:16]
    skip
    node leftTwo_1 = and(leftOne_3, rightOne_2) @[Misc.scala 182:61]
    skip
    node _T_36 = bits(_T_30, 3, 2) @[Misc.scala 181:39]
    node leftOne_5 = bits(_T_36, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_3 = bits(_T_36, 1, 1) @[Misc.scala 181:39]
    skip
    node rightOne_4 = or(leftOne_5, rightOne_3) @[Misc.scala 182:16]
    skip
    node rightTwo_1 = and(leftOne_5, rightOne_3) @[Misc.scala 182:61]
    skip
    node rightOne_5 = or(leftOne_4, rightOne_4) @[Misc.scala 182:16]
    node _T_41 = or(leftTwo_1, rightTwo_1) @[Misc.scala 182:37]
    node _T_42 = and(leftOne_4, rightOne_4) @[Misc.scala 182:61]
    node rightTwo_2 = or(_T_41, _T_42) @[Misc.scala 182:49]
    node leftOne_6 = or(leftOne_2, rightOne_5) @[Misc.scala 182:16]
    node _T_43 = or(leftTwo, rightTwo_2) @[Misc.scala 182:37]
    node _T_44 = and(leftOne_2, rightOne_5) @[Misc.scala 182:61]
    node leftTwo_2 = or(_T_43, _T_44) @[Misc.scala 182:49]
    node _T_45 = bits(_T_19, 13, 7) @[Misc.scala 181:39]
    node _T_46 = bits(_T_45, 2, 0) @[Misc.scala 180:37]
    node leftOne_7 = bits(_T_46, 0, 0) @[Misc.scala 180:37]
    skip
    node _T_48 = bits(_T_46, 2, 1) @[Misc.scala 181:39]
    node leftOne_8 = bits(_T_48, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_6 = bits(_T_48, 1, 1) @[Misc.scala 181:39]
    skip
    node rightOne_7 = or(leftOne_8, rightOne_6) @[Misc.scala 182:16]
    skip
    node rightTwo_3 = and(leftOne_8, rightOne_6) @[Misc.scala 182:61]
    skip
    node leftOne_9 = or(leftOne_7, rightOne_7) @[Misc.scala 182:16]
    skip
    node _T_54 = and(leftOne_7, rightOne_7) @[Misc.scala 182:61]
    node leftTwo_3 = or(rightTwo_3, _T_54) @[Misc.scala 182:49]
    node _T_55 = bits(_T_45, 6, 3) @[Misc.scala 181:39]
    node _T_56 = bits(_T_55, 1, 0) @[Misc.scala 180:37]
    node leftOne_10 = bits(_T_56, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_8 = bits(_T_56, 1, 1) @[Misc.scala 181:39]
    skip
    node leftOne_11 = or(leftOne_10, rightOne_8) @[Misc.scala 182:16]
    skip
    node leftTwo_4 = and(leftOne_10, rightOne_8) @[Misc.scala 182:61]
    skip
    node _T_61 = bits(_T_55, 3, 2) @[Misc.scala 181:39]
    node leftOne_12 = bits(_T_61, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_9 = bits(_T_61, 1, 1) @[Misc.scala 181:39]
    skip
    node rightOne_10 = or(leftOne_12, rightOne_9) @[Misc.scala 182:16]
    skip
    node rightTwo_4 = and(leftOne_12, rightOne_9) @[Misc.scala 182:61]
    skip
    node rightOne_11 = or(leftOne_11, rightOne_10) @[Misc.scala 182:16]
    node _T_66 = or(leftTwo_4, rightTwo_4) @[Misc.scala 182:37]
    node _T_67 = and(leftOne_11, rightOne_10) @[Misc.scala 182:61]
    node rightTwo_5 = or(_T_66, _T_67) @[Misc.scala 182:49]
    node rightOne_12 = or(leftOne_9, rightOne_11) @[Misc.scala 182:16]
    node _T_68 = or(leftTwo_3, rightTwo_5) @[Misc.scala 182:37]
    node _T_69 = and(leftOne_9, rightOne_11) @[Misc.scala 182:61]
    node rightTwo_6 = or(_T_68, _T_69) @[Misc.scala 182:49]
    node leftOne_13 = or(leftOne_6, rightOne_12) @[Misc.scala 182:16]
    node _T_70 = or(leftTwo_2, rightTwo_6) @[Misc.scala 182:37]
    node _T_71 = and(leftOne_6, rightOne_12) @[Misc.scala 182:61]
    node leftTwo_5 = or(_T_70, _T_71) @[Misc.scala 182:49]
    node _T_72 = bits(idxHit, 27, 14) @[Misc.scala 181:39]
    node _T_73 = bits(_T_72, 6, 0) @[Misc.scala 180:37]
    node _T_74 = bits(_T_73, 2, 0) @[Misc.scala 180:37]
    node leftOne_14 = bits(_T_74, 0, 0) @[Misc.scala 180:37]
    skip
    node _T_76 = bits(_T_74, 2, 1) @[Misc.scala 181:39]
    node leftOne_15 = bits(_T_76, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_13 = bits(_T_76, 1, 1) @[Misc.scala 181:39]
    skip
    node rightOne_14 = or(leftOne_15, rightOne_13) @[Misc.scala 182:16]
    skip
    node rightTwo_7 = and(leftOne_15, rightOne_13) @[Misc.scala 182:61]
    skip
    node leftOne_16 = or(leftOne_14, rightOne_14) @[Misc.scala 182:16]
    skip
    node _T_82 = and(leftOne_14, rightOne_14) @[Misc.scala 182:61]
    node leftTwo_6 = or(rightTwo_7, _T_82) @[Misc.scala 182:49]
    node _T_83 = bits(_T_73, 6, 3) @[Misc.scala 181:39]
    node _T_84 = bits(_T_83, 1, 0) @[Misc.scala 180:37]
    node leftOne_17 = bits(_T_84, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_15 = bits(_T_84, 1, 1) @[Misc.scala 181:39]
    skip
    node leftOne_18 = or(leftOne_17, rightOne_15) @[Misc.scala 182:16]
    skip
    node leftTwo_7 = and(leftOne_17, rightOne_15) @[Misc.scala 182:61]
    skip
    node _T_89 = bits(_T_83, 3, 2) @[Misc.scala 181:39]
    node leftOne_19 = bits(_T_89, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_16 = bits(_T_89, 1, 1) @[Misc.scala 181:39]
    skip
    node rightOne_17 = or(leftOne_19, rightOne_16) @[Misc.scala 182:16]
    skip
    node rightTwo_8 = and(leftOne_19, rightOne_16) @[Misc.scala 182:61]
    skip
    node rightOne_18 = or(leftOne_18, rightOne_17) @[Misc.scala 182:16]
    node _T_94 = or(leftTwo_7, rightTwo_8) @[Misc.scala 182:37]
    node _T_95 = and(leftOne_18, rightOne_17) @[Misc.scala 182:61]
    node rightTwo_9 = or(_T_94, _T_95) @[Misc.scala 182:49]
    node leftOne_20 = or(leftOne_16, rightOne_18) @[Misc.scala 182:16]
    node _T_96 = or(leftTwo_6, rightTwo_9) @[Misc.scala 182:37]
    node _T_97 = and(leftOne_16, rightOne_18) @[Misc.scala 182:61]
    node leftTwo_8 = or(_T_96, _T_97) @[Misc.scala 182:49]
    node _T_98 = bits(_T_72, 13, 7) @[Misc.scala 181:39]
    node _T_99 = bits(_T_98, 2, 0) @[Misc.scala 180:37]
    node leftOne_21 = bits(_T_99, 0, 0) @[Misc.scala 180:37]
    skip
    node _T_101 = bits(_T_99, 2, 1) @[Misc.scala 181:39]
    node leftOne_22 = bits(_T_101, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_19 = bits(_T_101, 1, 1) @[Misc.scala 181:39]
    skip
    node rightOne_20 = or(leftOne_22, rightOne_19) @[Misc.scala 182:16]
    skip
    node rightTwo_10 = and(leftOne_22, rightOne_19) @[Misc.scala 182:61]
    skip
    node leftOne_23 = or(leftOne_21, rightOne_20) @[Misc.scala 182:16]
    skip
    node _T_107 = and(leftOne_21, rightOne_20) @[Misc.scala 182:61]
    node leftTwo_9 = or(rightTwo_10, _T_107) @[Misc.scala 182:49]
    node _T_108 = bits(_T_98, 6, 3) @[Misc.scala 181:39]
    node _T_109 = bits(_T_108, 1, 0) @[Misc.scala 180:37]
    node leftOne_24 = bits(_T_109, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_21 = bits(_T_109, 1, 1) @[Misc.scala 181:39]
    skip
    node leftOne_25 = or(leftOne_24, rightOne_21) @[Misc.scala 182:16]
    skip
    node leftTwo_10 = and(leftOne_24, rightOne_21) @[Misc.scala 182:61]
    skip
    node _T_114 = bits(_T_108, 3, 2) @[Misc.scala 181:39]
    node leftOne_26 = bits(_T_114, 0, 0) @[Misc.scala 180:37]
    skip
    node rightOne_22 = bits(_T_114, 1, 1) @[Misc.scala 181:39]
    skip
    node rightOne_23 = or(leftOne_26, rightOne_22) @[Misc.scala 182:16]
    skip
    node rightTwo_11 = and(leftOne_26, rightOne_22) @[Misc.scala 182:61]
    skip
    node rightOne_24 = or(leftOne_25, rightOne_23) @[Misc.scala 182:16]
    node _T_119 = or(leftTwo_10, rightTwo_11) @[Misc.scala 182:37]
    node _T_120 = and(leftOne_25, rightOne_23) @[Misc.scala 182:61]
    node rightTwo_12 = or(_T_119, _T_120) @[Misc.scala 182:49]
    node rightOne_25 = or(leftOne_23, rightOne_24) @[Misc.scala 182:16]
    node _T_121 = or(leftTwo_9, rightTwo_12) @[Misc.scala 182:37]
    node _T_122 = and(leftOne_23, rightOne_24) @[Misc.scala 182:61]
    node rightTwo_13 = or(_T_121, _T_122) @[Misc.scala 182:49]
    node rightOne_26 = or(leftOne_20, rightOne_25) @[Misc.scala 182:16]
    node _T_123 = or(leftTwo_8, rightTwo_13) @[Misc.scala 182:37]
    node _T_124 = and(leftOne_20, rightOne_25) @[Misc.scala 182:61]
    node rightTwo_14 = or(_T_123, _T_124) @[Misc.scala 182:49]
    skip
    node _T_126 = or(leftTwo_5, rightTwo_14) @[Misc.scala 182:37]
    node _T_127 = and(leftOne_13, rightOne_26) @[Misc.scala 182:61]
    node _T_128 = or(_T_126, _T_127) @[Misc.scala 182:49]
    node _isValid_T_4 = not(idxHit) @[BTB.scala 299:26]
    node _isValid_T_5 = and(isValid, _isValid_T_4) @[BTB.scala 299:24]
    node _GEN_374 = mux(_T_128, pad(_isValid_T_5, 32), _GEN_338) @[BTB.scala 298:37 299:13]
    node _GEN_375 = mux(io_flush, UInt<32>("h0"), _GEN_374) @[BTB.scala 301:19 302:13]
    reg history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), history) @[BTB.scala 119:24]
    reg reset_waddr : UInt<10>, clock with :
      reset => (UInt<1>("h0"), reset_waddr) @[BTB.scala 121:36]
    node _resetting_T = bits(reset_waddr, 9, 9) @[BTB.scala 122:39]
    node resetting = not(_resetting_T) @[BTB.scala 122:27]
    node _reset_waddr_T = add(reset_waddr, UInt<10>("h1")) @[BTB.scala 126:49]
    node _reset_waddr_T_1 = tail(_reset_waddr_T, 1) @[BTB.scala 126:49]
    node _GEN_376 = mux(resetting, _reset_waddr_T_1, reset_waddr) @[BTB.scala 126:{20,34} 121:36]
    node _T_131 = not(resetting) @[BTB.scala 100:11]
    node waddr_hi_13 = shr(io_bht_update_bits_pc, 2) @[BTB.scala 87:21]
    node _waddr_T_27 = bits(waddr_hi_13, 8, 0) @[BTB.scala 88:9]
    node _waddr_T_28 = shr(waddr_hi_13, 9) @[BTB.scala 88:48]
    node _waddr_T_29 = bits(_waddr_T_28, 1, 0) @[BTB.scala 88:77]
    node _GEN_437 = pad(_waddr_T_29, 9) @[BTB.scala 88:42]
    node _waddr_T_30 = xor(_waddr_T_27, _GEN_437) @[BTB.scala 88:42]
    node _waddr_T_31 = mul(UInt<8>("hdd"), io_bht_update_bits_prediction_history) @[BTB.scala 84:12]
    node _waddr_T_32 = bits(_waddr_T_31, 7, 5) @[BTB.scala 84:19]
    node _waddr_T_33 = shl(_waddr_T_32, 6) @[BTB.scala 90:44]
    node _waddr_T_34 = xor(_waddr_T_30, _waddr_T_33) @[BTB.scala 90:20]
    node _GEN_383 = mux(_T_131, pad(_waddr_T_34, 10), reset_waddr) @[BTB.scala 100:23 101:13]
    node _GEN_388 = mux(io_bht_update_bits_branch, _GEN_383, reset_waddr) @[BTB.scala 313:40]
    node waddr_1 = mux(io_bht_update_valid, _GEN_388, reset_waddr) @[BTB.scala 312:32]
    skip
    skip
    skip
    node _GEN_387 = or(io_bht_update_bits_branch, resetting) @[BTB.scala 313:40 99:9]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_384 = and(_T_131, io_bht_update_bits_taken) @[BTB.scala 100:23 102:13]
    node _GEN_389 = and(io_bht_update_bits_branch, _GEN_384) @[BTB.scala 313:40]
    skip
    skip
    skip
    node isBranch_lo_lo_lo_lo = eq(cfiType_0, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_lo_lo_hi_lo = eq(cfiType_1, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_lo_lo_hi_hi = eq(cfiType_2, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_lo_hi_lo_lo = eq(cfiType_3, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_lo_hi_lo_hi = eq(cfiType_4, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_lo_hi_hi_lo = eq(cfiType_5, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_lo_hi_hi_hi = eq(cfiType_6, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_hi_lo_lo = eq(cfiType_7, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_hi_lo_hi_lo = eq(cfiType_8, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_hi_lo_hi_hi = eq(cfiType_9, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_hi_hi_lo_lo = eq(cfiType_10, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_hi_hi_lo_hi = eq(cfiType_11, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_hi_hi_hi_lo = eq(cfiType_12, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_hi_hi_hi_hi = eq(cfiType_13, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_lo_lo_lo = eq(cfiType_14, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_lo_lo_hi_lo = eq(cfiType_15, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_lo_lo_hi_hi = eq(cfiType_16, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_lo_hi_lo_lo = eq(cfiType_17, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_lo_hi_lo_hi = eq(cfiType_18, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_lo_hi_hi_lo = eq(cfiType_19, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_lo_hi_hi_hi = eq(cfiType_20, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_hi_lo_lo = eq(cfiType_21, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_hi_lo_hi_lo = eq(cfiType_22, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_hi_lo_hi_hi = eq(cfiType_23, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_hi_hi_lo_lo = eq(cfiType_24, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_hi_hi_lo_hi = eq(cfiType_25, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_hi_hi_hi_lo = eq(cfiType_26, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_hi_hi_hi_hi_hi = eq(cfiType_27, UInt<2>("h0")) @[BTB.scala 307:44]
    node isBranch_lo_lo_lo_hi = cat(isBranch_lo_lo_lo_hi_hi, isBranch_lo_lo_lo_hi_lo) @[Cat.scala 30:58]
    node isBranch_lo_lo_lo = cat(isBranch_lo_lo_lo_hi, isBranch_lo_lo_lo_lo) @[Cat.scala 30:58]
    node isBranch_lo_lo_hi_lo = cat(isBranch_lo_lo_hi_lo_hi, isBranch_lo_lo_hi_lo_lo) @[Cat.scala 30:58]
    node isBranch_lo_lo_hi_hi = cat(isBranch_lo_lo_hi_hi_hi, isBranch_lo_lo_hi_hi_lo) @[Cat.scala 30:58]
    node isBranch_lo_lo_hi = cat(isBranch_lo_lo_hi_hi, isBranch_lo_lo_hi_lo) @[Cat.scala 30:58]
    node isBranch_lo_lo = cat(isBranch_lo_lo_hi, isBranch_lo_lo_lo) @[Cat.scala 30:58]
    node isBranch_lo_hi_lo_hi = cat(isBranch_lo_hi_lo_hi_hi, isBranch_lo_hi_lo_hi_lo) @[Cat.scala 30:58]
    node isBranch_lo_hi_lo = cat(isBranch_lo_hi_lo_hi, isBranch_lo_hi_lo_lo) @[Cat.scala 30:58]
    node isBranch_lo_hi_hi_lo = cat(isBranch_lo_hi_hi_lo_hi, isBranch_lo_hi_hi_lo_lo) @[Cat.scala 30:58]
    node isBranch_lo_hi_hi_hi = cat(isBranch_lo_hi_hi_hi_hi, isBranch_lo_hi_hi_hi_lo) @[Cat.scala 30:58]
    node isBranch_lo_hi_hi = cat(isBranch_lo_hi_hi_hi, isBranch_lo_hi_hi_lo) @[Cat.scala 30:58]
    node isBranch_lo_hi = cat(isBranch_lo_hi_hi, isBranch_lo_hi_lo) @[Cat.scala 30:58]
    node isBranch_lo = cat(isBranch_lo_hi, isBranch_lo_lo) @[Cat.scala 30:58]
    node isBranch_hi_lo_lo_hi = cat(isBranch_hi_lo_lo_hi_hi, isBranch_hi_lo_lo_hi_lo) @[Cat.scala 30:58]
    node isBranch_hi_lo_lo = cat(isBranch_hi_lo_lo_hi, isBranch_hi_lo_lo_lo) @[Cat.scala 30:58]
    node isBranch_hi_lo_hi_lo = cat(isBranch_hi_lo_hi_lo_hi, isBranch_hi_lo_hi_lo_lo) @[Cat.scala 30:58]
    node isBranch_hi_lo_hi_hi = cat(isBranch_hi_lo_hi_hi_hi, isBranch_hi_lo_hi_hi_lo) @[Cat.scala 30:58]
    node isBranch_hi_lo_hi = cat(isBranch_hi_lo_hi_hi, isBranch_hi_lo_hi_lo) @[Cat.scala 30:58]
    node isBranch_hi_lo = cat(isBranch_hi_lo_hi, isBranch_hi_lo_lo) @[Cat.scala 30:58]
    node isBranch_hi_hi_lo_hi = cat(isBranch_hi_hi_lo_hi_hi, isBranch_hi_hi_lo_hi_lo) @[Cat.scala 30:58]
    node isBranch_hi_hi_lo = cat(isBranch_hi_hi_lo_hi, isBranch_hi_hi_lo_lo) @[Cat.scala 30:58]
    node isBranch_hi_hi_hi_lo = cat(isBranch_hi_hi_hi_lo_hi, isBranch_hi_hi_hi_lo_lo) @[Cat.scala 30:58]
    node isBranch_hi_hi_hi_hi = cat(isBranch_hi_hi_hi_hi_hi, isBranch_hi_hi_hi_hi_lo) @[Cat.scala 30:58]
    node isBranch_hi_hi_hi = cat(isBranch_hi_hi_hi_hi, isBranch_hi_hi_hi_lo) @[Cat.scala 30:58]
    node isBranch_hi_hi = cat(isBranch_hi_hi_hi, isBranch_hi_hi_lo) @[Cat.scala 30:58]
    node isBranch_hi = cat(isBranch_hi_hi, isBranch_hi_lo) @[Cat.scala 30:58]
    node _isBranch_T = cat(isBranch_hi, isBranch_lo) @[Cat.scala 30:58]
    node _isBranch_T_1 = and(idxHit, _isBranch_T) @[BTB.scala 307:28]
    node isBranch = orr(_isBranch_T_1) @[BTB.scala 307:72]
    node res_res_value_hi = shr(io_req_bits_addr, 2) @[BTB.scala 87:21]
    node _res_res_value_T = bits(res_res_value_hi, 8, 0) @[BTB.scala 88:9]
    node _res_res_value_T_1 = shr(res_res_value_hi, 9) @[BTB.scala 88:48]
    node _res_res_value_T_2 = bits(_res_res_value_T_1, 1, 0) @[BTB.scala 88:77]
    node _GEN_438 = pad(_res_res_value_T_2, 9) @[BTB.scala 88:42]
    node _res_res_value_T_3 = xor(_res_res_value_T, _GEN_438) @[BTB.scala 88:42]
    node _res_res_value_T_4 = mul(UInt<8>("hdd"), history) @[BTB.scala 84:12]
    node _res_res_value_T_5 = bits(_res_res_value_T_4, 7, 5) @[BTB.scala 84:19]
    node _res_res_value_T_6 = shl(_res_res_value_T_5, 6) @[BTB.scala 90:44]
    skip
    node res_value = mux(resetting, UInt<1>("h0"), table.res_res_value_MPORT.data) @[BTB.scala 94:21]
    skip
    node history_lo = shr(history, 1) @[BTB.scala 115:35]
    node _history_T = cat(io_bht_advance_bits_bht_value, history_lo) @[Cat.scala 30:58]
    node _GEN_382 = mux(io_bht_advance_valid, _history_T, history) @[BTB.scala 115:13 119:24 309:33]
    node history_lo_1 = shr(io_bht_update_bits_prediction_history, 1) @[BTB.scala 112:37]
    node _history_T_1 = cat(io_bht_update_bits_taken, history_lo_1) @[Cat.scala 30:58]
    node _GEN_385 = mux(io_bht_update_bits_mispredict, _history_T_1, _GEN_382) @[BTB.scala 112:13 315:46]
    node _GEN_386 = mux(io_bht_update_bits_mispredict, io_bht_update_bits_prediction_history, _GEN_382) @[BTB.scala 109:13 318:50]
    node _GEN_390 = mux(io_bht_update_bits_branch, _GEN_385, _GEN_386) @[BTB.scala 313:40]
    node _GEN_394 = mux(io_bht_update_valid, _GEN_390, _GEN_382) @[BTB.scala 312:32]
    skip
    skip
    node _T_133 = not(res_value) @[BTB.scala 322:11]
    node _T_134 = and(_T_133, isBranch) @[BTB.scala 322:22]
    skip
    reg count : UInt<3>, clock with :
      reset => (UInt<1>("h0"), count) @[BTB.scala 58:30]
    reg pos : UInt<3>, clock with :
      reset => (UInt<1>("h0"), pos) @[BTB.scala 59:28]
    reg stack_0 : UInt<39>, clock with :
      reset => (UInt<1>("h0"), stack_0) @[BTB.scala 60:26]
    reg stack_1 : UInt<39>, clock with :
      reset => (UInt<1>("h0"), stack_1) @[BTB.scala 60:26]
    reg stack_2 : UInt<39>, clock with :
      reset => (UInt<1>("h0"), stack_2) @[BTB.scala 60:26]
    reg stack_3 : UInt<39>, clock with :
      reset => (UInt<1>("h0"), stack_3) @[BTB.scala 60:26]
    reg stack_4 : UInt<39>, clock with :
      reset => (UInt<1>("h0"), stack_4) @[BTB.scala 60:26]
    reg stack_5 : UInt<39>, clock with :
      reset => (UInt<1>("h0"), stack_5) @[BTB.scala 60:26]
    node doPeek_lo_lo_lo_lo = eq(cfiType_0, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_lo_lo_hi_lo = eq(cfiType_1, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_lo_lo_hi_hi = eq(cfiType_2, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_lo_hi_lo_lo = eq(cfiType_3, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_lo_hi_lo_hi = eq(cfiType_4, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_lo_hi_hi_lo = eq(cfiType_5, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_lo_hi_hi_hi = eq(cfiType_6, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_hi_lo_lo = eq(cfiType_7, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_hi_lo_hi_lo = eq(cfiType_8, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_hi_lo_hi_hi = eq(cfiType_9, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_hi_hi_lo_lo = eq(cfiType_10, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_hi_hi_lo_hi = eq(cfiType_11, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_hi_hi_hi_lo = eq(cfiType_12, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_hi_hi_hi_hi = eq(cfiType_13, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_lo_lo_lo = eq(cfiType_14, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_lo_lo_hi_lo = eq(cfiType_15, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_lo_lo_hi_hi = eq(cfiType_16, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_lo_hi_lo_lo = eq(cfiType_17, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_lo_hi_lo_hi = eq(cfiType_18, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_lo_hi_hi_lo = eq(cfiType_19, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_lo_hi_hi_hi = eq(cfiType_20, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_hi_lo_lo = eq(cfiType_21, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_hi_lo_hi_lo = eq(cfiType_22, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_hi_lo_hi_hi = eq(cfiType_23, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_hi_hi_lo_lo = eq(cfiType_24, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_hi_hi_lo_hi = eq(cfiType_25, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_hi_hi_hi_lo = eq(cfiType_26, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_hi_hi_hi_hi_hi = eq(cfiType_27, UInt<2>("h3")) @[BTB.scala 328:42]
    node doPeek_lo_lo_lo_hi = cat(doPeek_lo_lo_lo_hi_hi, doPeek_lo_lo_lo_hi_lo) @[Cat.scala 30:58]
    node doPeek_lo_lo_lo = cat(doPeek_lo_lo_lo_hi, doPeek_lo_lo_lo_lo) @[Cat.scala 30:58]
    node doPeek_lo_lo_hi_lo = cat(doPeek_lo_lo_hi_lo_hi, doPeek_lo_lo_hi_lo_lo) @[Cat.scala 30:58]
    node doPeek_lo_lo_hi_hi = cat(doPeek_lo_lo_hi_hi_hi, doPeek_lo_lo_hi_hi_lo) @[Cat.scala 30:58]
    node doPeek_lo_lo_hi = cat(doPeek_lo_lo_hi_hi, doPeek_lo_lo_hi_lo) @[Cat.scala 30:58]
    node doPeek_lo_lo = cat(doPeek_lo_lo_hi, doPeek_lo_lo_lo) @[Cat.scala 30:58]
    node doPeek_lo_hi_lo_hi = cat(doPeek_lo_hi_lo_hi_hi, doPeek_lo_hi_lo_hi_lo) @[Cat.scala 30:58]
    node doPeek_lo_hi_lo = cat(doPeek_lo_hi_lo_hi, doPeek_lo_hi_lo_lo) @[Cat.scala 30:58]
    node doPeek_lo_hi_hi_lo = cat(doPeek_lo_hi_hi_lo_hi, doPeek_lo_hi_hi_lo_lo) @[Cat.scala 30:58]
    node doPeek_lo_hi_hi_hi = cat(doPeek_lo_hi_hi_hi_hi, doPeek_lo_hi_hi_hi_lo) @[Cat.scala 30:58]
    node doPeek_lo_hi_hi = cat(doPeek_lo_hi_hi_hi, doPeek_lo_hi_hi_lo) @[Cat.scala 30:58]
    node doPeek_lo_hi = cat(doPeek_lo_hi_hi, doPeek_lo_hi_lo) @[Cat.scala 30:58]
    node doPeek_lo = cat(doPeek_lo_hi, doPeek_lo_lo) @[Cat.scala 30:58]
    node doPeek_hi_lo_lo_hi = cat(doPeek_hi_lo_lo_hi_hi, doPeek_hi_lo_lo_hi_lo) @[Cat.scala 30:58]
    node doPeek_hi_lo_lo = cat(doPeek_hi_lo_lo_hi, doPeek_hi_lo_lo_lo) @[Cat.scala 30:58]
    node doPeek_hi_lo_hi_lo = cat(doPeek_hi_lo_hi_lo_hi, doPeek_hi_lo_hi_lo_lo) @[Cat.scala 30:58]
    node doPeek_hi_lo_hi_hi = cat(doPeek_hi_lo_hi_hi_hi, doPeek_hi_lo_hi_hi_lo) @[Cat.scala 30:58]
    node doPeek_hi_lo_hi = cat(doPeek_hi_lo_hi_hi, doPeek_hi_lo_hi_lo) @[Cat.scala 30:58]
    node doPeek_hi_lo = cat(doPeek_hi_lo_hi, doPeek_hi_lo_lo) @[Cat.scala 30:58]
    node doPeek_hi_hi_lo_hi = cat(doPeek_hi_hi_lo_hi_hi, doPeek_hi_hi_lo_hi_lo) @[Cat.scala 30:58]
    node doPeek_hi_hi_lo = cat(doPeek_hi_hi_lo_hi, doPeek_hi_hi_lo_lo) @[Cat.scala 30:58]
    node doPeek_hi_hi_hi_lo = cat(doPeek_hi_hi_hi_lo_hi, doPeek_hi_hi_hi_lo_lo) @[Cat.scala 30:58]
    node doPeek_hi_hi_hi_hi = cat(doPeek_hi_hi_hi_hi_hi, doPeek_hi_hi_hi_hi_lo) @[Cat.scala 30:58]
    node doPeek_hi_hi_hi = cat(doPeek_hi_hi_hi_hi, doPeek_hi_hi_hi_lo) @[Cat.scala 30:58]
    node doPeek_hi_hi = cat(doPeek_hi_hi_hi, doPeek_hi_hi_lo) @[Cat.scala 30:58]
    node doPeek_hi = cat(doPeek_hi_hi, doPeek_hi_lo) @[Cat.scala 30:58]
    node _doPeek_T = cat(doPeek_hi, doPeek_lo) @[Cat.scala 30:58]
    node _doPeek_T_1 = and(idxHit, _doPeek_T) @[BTB.scala 328:26]
    node doPeek = orr(_doPeek_T_1) @[BTB.scala 328:67]
    node _io_ras_head_valid_T = eq(count, UInt<3>("h0")) @[BTB.scala 56:29]
    node _io_ras_head_valid_T_1 = not(_io_ras_head_valid_T) @[BTB.scala 329:26]
    skip
    node _GEN_397 = mux(eq(UInt<3>("h1"), pos), stack_1, stack_0) @[BTB.scala 330:{22,22}]
    node _GEN_398 = mux(eq(UInt<3>("h2"), pos), stack_2, _GEN_397) @[BTB.scala 330:{22,22}]
    node _GEN_399 = mux(eq(UInt<3>("h3"), pos), stack_3, _GEN_398) @[BTB.scala 330:{22,22}]
    node _GEN_400 = mux(eq(UInt<3>("h4"), pos), stack_4, _GEN_399) @[BTB.scala 330:{22,22}]
    node _GEN_401 = mux(eq(UInt<3>("h5"), pos), stack_5, _GEN_400) @[BTB.scala 330:{22,22}]
    skip
    skip
    node _T_137 = and(_io_ras_head_valid_T_1, doPeek) @[BTB.scala 331:24]
    skip
    skip
    node _T_138 = eq(io_ras_update_bits_cfiType, UInt<2>("h2")) @[BTB.scala 335:40]
    node _T_139 = lt(count, UInt<3>("h6")) @[BTB.scala 45:17]
    node _count_T = add(count, UInt<3>("h1")) @[BTB.scala 45:42]
    node _count_T_1 = tail(_count_T, 1) @[BTB.scala 45:42]
    node _GEN_403 = mux(_T_139, _count_T_1, count) @[BTB.scala 45:{25,33} 58:30]
    node _nextPos_T = lt(pos, UInt<3>("h5")) @[BTB.scala 46:49]
    skip
    node _nextPos_T_2 = add(pos, UInt<3>("h1")) @[BTB.scala 46:62]
    node _nextPos_T_3 = tail(_nextPos_T_2, 1) @[BTB.scala 46:62]
    node nextPos = mux(_nextPos_T, _nextPos_T_3, UInt<3>("h0")) @[BTB.scala 46:22]
    skip
    node _GEN_404 = mux(eq(UInt<3>("h0"), nextPos), io_ras_update_bits_returnAddr, stack_0) @[BTB.scala 47:{20,20} 60:26]
    node _GEN_405 = mux(eq(UInt<3>("h1"), nextPos), io_ras_update_bits_returnAddr, stack_1) @[BTB.scala 47:{20,20} 60:26]
    node _GEN_406 = mux(eq(UInt<3>("h2"), nextPos), io_ras_update_bits_returnAddr, stack_2) @[BTB.scala 47:{20,20} 60:26]
    node _GEN_407 = mux(eq(UInt<3>("h3"), nextPos), io_ras_update_bits_returnAddr, stack_3) @[BTB.scala 47:{20,20} 60:26]
    node _GEN_408 = mux(eq(UInt<3>("h4"), nextPos), io_ras_update_bits_returnAddr, stack_4) @[BTB.scala 47:{20,20} 60:26]
    node _GEN_409 = mux(eq(UInt<3>("h5"), nextPos), io_ras_update_bits_returnAddr, stack_5) @[BTB.scala 47:{20,20} 60:26]
    node _T_140 = eq(io_ras_update_bits_cfiType, UInt<2>("h3")) @[BTB.scala 337:46]
    skip
    skip
    node _count_T_2 = sub(count, UInt<3>("h1")) @[BTB.scala 52:20]
    node _count_T_3 = tail(_count_T_2, 1) @[BTB.scala 52:20]
    node _pos_T = gt(pos, UInt<3>("h0")) @[BTB.scala 53:42]
    skip
    node _pos_T_2 = sub(pos, UInt<3>("h1")) @[BTB.scala 53:50]
    node _pos_T_3 = tail(_pos_T_2, 1) @[BTB.scala 53:50]
    node _pos_T_4 = mux(_pos_T, _pos_T_3, UInt<3>("h5")) @[BTB.scala 53:15]
    node _GEN_410 = mux(_io_ras_head_valid_T_1, _count_T_3, count) @[BTB.scala 51:37 52:11 58:30]
    node _GEN_411 = mux(_io_ras_head_valid_T_1, _pos_T_4, pos) @[BTB.scala 51:37 53:9 59:28]
    node _GEN_412 = mux(_T_140, _GEN_410, count) @[BTB.scala 337:63 58:30]
    node _GEN_413 = mux(_T_140, _GEN_411, pos) @[BTB.scala 337:63 59:28]
    node _GEN_414 = mux(_T_138, _GEN_403, _GEN_412) @[BTB.scala 335:58]
    node _GEN_415 = mux(_T_138, _GEN_404, stack_0) @[BTB.scala 335:58 60:26]
    node _GEN_416 = mux(_T_138, _GEN_405, stack_1) @[BTB.scala 335:58 60:26]
    node _GEN_417 = mux(_T_138, _GEN_406, stack_2) @[BTB.scala 335:58 60:26]
    node _GEN_418 = mux(_T_138, _GEN_407, stack_3) @[BTB.scala 335:58 60:26]
    node _GEN_419 = mux(_T_138, _GEN_408, stack_4) @[BTB.scala 335:58 60:26]
    node _GEN_420 = mux(_T_138, _GEN_409, stack_5) @[BTB.scala 335:58 60:26]
    node _GEN_421 = mux(_T_138, nextPos, _GEN_413) @[BTB.scala 335:58 48:9]
    node _GEN_422 = mux(io_ras_update_valid, _GEN_414, count) @[BTB.scala 334:32 58:30]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_429 = mux(io_ras_update_valid, _GEN_421, pos) @[BTB.scala 334:32 59:28]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_resp_valid <= bits(_io_resp_valid_T_84, 0, 0) @[BTB.scala 289:34]
    skip
    io_resp_bits_taken <= mux(_T_134, UInt<1>("h0"), UInt<1>("h1")) @[BTB.scala 290:22 322:{35,56}]
    skip
    io_resp_bits_bridx <= or(_io_resp_bits_bridx_T_81, _io_resp_bits_bridx_T_55) @[Mux.scala 27:72]
    io_resp_bits_target <= mux(_T_137, _GEN_401, _io_resp_bits_target_T_179) @[BTB.scala 291:23 331:35 332:27]
    io_resp_bits_entry <= cat(io_resp_bits_entry_hi_1, io_resp_bits_entry_lo_7) @[Cat.scala 30:58]
    io_resp_bits_bht_history <= history @[BTB.scala 93:19 95:17]
    io_resp_bits_bht_value <= mux(resetting, UInt<1>("h0"), table.res_res_value_MPORT.data) @[BTB.scala 94:21]
    io_ras_head_valid <= not(_io_ras_head_valid_T) @[BTB.scala 329:26]
    io_ras_head_bits <= mux(eq(UInt<3>("h5"), pos), stack_5, _GEN_400) @[BTB.scala 330:{22,22}]
    idxs_0 <= mux(r_btb_updatePipe_valid, _GEN_24, idxs_0) @[BTB.scala 201:17 264:29]
    idxs_1 <= mux(r_btb_updatePipe_valid, _GEN_25, idxs_1) @[BTB.scala 201:17 264:29]
    idxs_2 <= mux(r_btb_updatePipe_valid, _GEN_26, idxs_2) @[BTB.scala 201:17 264:29]
    idxs_3 <= mux(r_btb_updatePipe_valid, _GEN_27, idxs_3) @[BTB.scala 201:17 264:29]
    idxs_4 <= mux(r_btb_updatePipe_valid, _GEN_28, idxs_4) @[BTB.scala 201:17 264:29]
    idxs_5 <= mux(r_btb_updatePipe_valid, _GEN_29, idxs_5) @[BTB.scala 201:17 264:29]
    idxs_6 <= mux(r_btb_updatePipe_valid, _GEN_30, idxs_6) @[BTB.scala 201:17 264:29]
    idxs_7 <= mux(r_btb_updatePipe_valid, _GEN_31, idxs_7) @[BTB.scala 201:17 264:29]
    idxs_8 <= mux(r_btb_updatePipe_valid, _GEN_32, idxs_8) @[BTB.scala 201:17 264:29]
    idxs_9 <= mux(r_btb_updatePipe_valid, _GEN_33, idxs_9) @[BTB.scala 201:17 264:29]
    idxs_10 <= mux(r_btb_updatePipe_valid, _GEN_34, idxs_10) @[BTB.scala 201:17 264:29]
    idxs_11 <= mux(r_btb_updatePipe_valid, _GEN_35, idxs_11) @[BTB.scala 201:17 264:29]
    idxs_12 <= mux(r_btb_updatePipe_valid, _GEN_36, idxs_12) @[BTB.scala 201:17 264:29]
    idxs_13 <= mux(r_btb_updatePipe_valid, _GEN_37, idxs_13) @[BTB.scala 201:17 264:29]
    idxs_14 <= mux(r_btb_updatePipe_valid, _GEN_38, idxs_14) @[BTB.scala 201:17 264:29]
    idxs_15 <= mux(r_btb_updatePipe_valid, _GEN_39, idxs_15) @[BTB.scala 201:17 264:29]
    idxs_16 <= mux(r_btb_updatePipe_valid, _GEN_40, idxs_16) @[BTB.scala 201:17 264:29]
    idxs_17 <= mux(r_btb_updatePipe_valid, _GEN_41, idxs_17) @[BTB.scala 201:17 264:29]
    idxs_18 <= mux(r_btb_updatePipe_valid, _GEN_42, idxs_18) @[BTB.scala 201:17 264:29]
    idxs_19 <= mux(r_btb_updatePipe_valid, _GEN_43, idxs_19) @[BTB.scala 201:17 264:29]
    idxs_20 <= mux(r_btb_updatePipe_valid, _GEN_44, idxs_20) @[BTB.scala 201:17 264:29]
    idxs_21 <= mux(r_btb_updatePipe_valid, _GEN_45, idxs_21) @[BTB.scala 201:17 264:29]
    idxs_22 <= mux(r_btb_updatePipe_valid, _GEN_46, idxs_22) @[BTB.scala 201:17 264:29]
    idxs_23 <= mux(r_btb_updatePipe_valid, _GEN_47, idxs_23) @[BTB.scala 201:17 264:29]
    idxs_24 <= mux(r_btb_updatePipe_valid, _GEN_48, idxs_24) @[BTB.scala 201:17 264:29]
    idxs_25 <= mux(r_btb_updatePipe_valid, _GEN_49, idxs_25) @[BTB.scala 201:17 264:29]
    idxs_26 <= mux(r_btb_updatePipe_valid, _GEN_50, idxs_26) @[BTB.scala 201:17 264:29]
    idxs_27 <= mux(r_btb_updatePipe_valid, _GEN_51, idxs_27) @[BTB.scala 201:17 264:29]
    idxPages_0 <= mux(r_btb_updatePipe_valid, _GEN_80, idxPages_0) @[BTB.scala 202:21 264:29]
    idxPages_1 <= mux(r_btb_updatePipe_valid, _GEN_81, idxPages_1) @[BTB.scala 202:21 264:29]
    idxPages_2 <= mux(r_btb_updatePipe_valid, _GEN_82, idxPages_2) @[BTB.scala 202:21 264:29]
    idxPages_3 <= mux(r_btb_updatePipe_valid, _GEN_83, idxPages_3) @[BTB.scala 202:21 264:29]
    idxPages_4 <= mux(r_btb_updatePipe_valid, _GEN_84, idxPages_4) @[BTB.scala 202:21 264:29]
    idxPages_5 <= mux(r_btb_updatePipe_valid, _GEN_85, idxPages_5) @[BTB.scala 202:21 264:29]
    idxPages_6 <= mux(r_btb_updatePipe_valid, _GEN_86, idxPages_6) @[BTB.scala 202:21 264:29]
    idxPages_7 <= mux(r_btb_updatePipe_valid, _GEN_87, idxPages_7) @[BTB.scala 202:21 264:29]
    idxPages_8 <= mux(r_btb_updatePipe_valid, _GEN_88, idxPages_8) @[BTB.scala 202:21 264:29]
    idxPages_9 <= mux(r_btb_updatePipe_valid, _GEN_89, idxPages_9) @[BTB.scala 202:21 264:29]
    idxPages_10 <= mux(r_btb_updatePipe_valid, _GEN_90, idxPages_10) @[BTB.scala 202:21 264:29]
    idxPages_11 <= mux(r_btb_updatePipe_valid, _GEN_91, idxPages_11) @[BTB.scala 202:21 264:29]
    idxPages_12 <= mux(r_btb_updatePipe_valid, _GEN_92, idxPages_12) @[BTB.scala 202:21 264:29]
    idxPages_13 <= mux(r_btb_updatePipe_valid, _GEN_93, idxPages_13) @[BTB.scala 202:21 264:29]
    idxPages_14 <= mux(r_btb_updatePipe_valid, _GEN_94, idxPages_14) @[BTB.scala 202:21 264:29]
    idxPages_15 <= mux(r_btb_updatePipe_valid, _GEN_95, idxPages_15) @[BTB.scala 202:21 264:29]
    idxPages_16 <= mux(r_btb_updatePipe_valid, _GEN_96, idxPages_16) @[BTB.scala 202:21 264:29]
    idxPages_17 <= mux(r_btb_updatePipe_valid, _GEN_97, idxPages_17) @[BTB.scala 202:21 264:29]
    idxPages_18 <= mux(r_btb_updatePipe_valid, _GEN_98, idxPages_18) @[BTB.scala 202:21 264:29]
    idxPages_19 <= mux(r_btb_updatePipe_valid, _GEN_99, idxPages_19) @[BTB.scala 202:21 264:29]
    idxPages_20 <= mux(r_btb_updatePipe_valid, _GEN_100, idxPages_20) @[BTB.scala 202:21 264:29]
    idxPages_21 <= mux(r_btb_updatePipe_valid, _GEN_101, idxPages_21) @[BTB.scala 202:21 264:29]
    idxPages_22 <= mux(r_btb_updatePipe_valid, _GEN_102, idxPages_22) @[BTB.scala 202:21 264:29]
    idxPages_23 <= mux(r_btb_updatePipe_valid, _GEN_103, idxPages_23) @[BTB.scala 202:21 264:29]
    idxPages_24 <= mux(r_btb_updatePipe_valid, _GEN_104, idxPages_24) @[BTB.scala 202:21 264:29]
    idxPages_25 <= mux(r_btb_updatePipe_valid, _GEN_105, idxPages_25) @[BTB.scala 202:21 264:29]
    idxPages_26 <= mux(r_btb_updatePipe_valid, _GEN_106, idxPages_26) @[BTB.scala 202:21 264:29]
    idxPages_27 <= mux(r_btb_updatePipe_valid, _GEN_107, idxPages_27) @[BTB.scala 202:21 264:29]
    tgts_0 <= mux(r_btb_updatePipe_valid, _GEN_52, tgts_0) @[BTB.scala 203:17 264:29]
    tgts_1 <= mux(r_btb_updatePipe_valid, _GEN_53, tgts_1) @[BTB.scala 203:17 264:29]
    tgts_2 <= mux(r_btb_updatePipe_valid, _GEN_54, tgts_2) @[BTB.scala 203:17 264:29]
    tgts_3 <= mux(r_btb_updatePipe_valid, _GEN_55, tgts_3) @[BTB.scala 203:17 264:29]
    tgts_4 <= mux(r_btb_updatePipe_valid, _GEN_56, tgts_4) @[BTB.scala 203:17 264:29]
    tgts_5 <= mux(r_btb_updatePipe_valid, _GEN_57, tgts_5) @[BTB.scala 203:17 264:29]
    tgts_6 <= mux(r_btb_updatePipe_valid, _GEN_58, tgts_6) @[BTB.scala 203:17 264:29]
    tgts_7 <= mux(r_btb_updatePipe_valid, _GEN_59, tgts_7) @[BTB.scala 203:17 264:29]
    tgts_8 <= mux(r_btb_updatePipe_valid, _GEN_60, tgts_8) @[BTB.scala 203:17 264:29]
    tgts_9 <= mux(r_btb_updatePipe_valid, _GEN_61, tgts_9) @[BTB.scala 203:17 264:29]
    tgts_10 <= mux(r_btb_updatePipe_valid, _GEN_62, tgts_10) @[BTB.scala 203:17 264:29]
    tgts_11 <= mux(r_btb_updatePipe_valid, _GEN_63, tgts_11) @[BTB.scala 203:17 264:29]
    tgts_12 <= mux(r_btb_updatePipe_valid, _GEN_64, tgts_12) @[BTB.scala 203:17 264:29]
    tgts_13 <= mux(r_btb_updatePipe_valid, _GEN_65, tgts_13) @[BTB.scala 203:17 264:29]
    tgts_14 <= mux(r_btb_updatePipe_valid, _GEN_66, tgts_14) @[BTB.scala 203:17 264:29]
    tgts_15 <= mux(r_btb_updatePipe_valid, _GEN_67, tgts_15) @[BTB.scala 203:17 264:29]
    tgts_16 <= mux(r_btb_updatePipe_valid, _GEN_68, tgts_16) @[BTB.scala 203:17 264:29]
    tgts_17 <= mux(r_btb_updatePipe_valid, _GEN_69, tgts_17) @[BTB.scala 203:17 264:29]
    tgts_18 <= mux(r_btb_updatePipe_valid, _GEN_70, tgts_18) @[BTB.scala 203:17 264:29]
    tgts_19 <= mux(r_btb_updatePipe_valid, _GEN_71, tgts_19) @[BTB.scala 203:17 264:29]
    tgts_20 <= mux(r_btb_updatePipe_valid, _GEN_72, tgts_20) @[BTB.scala 203:17 264:29]
    tgts_21 <= mux(r_btb_updatePipe_valid, _GEN_73, tgts_21) @[BTB.scala 203:17 264:29]
    tgts_22 <= mux(r_btb_updatePipe_valid, _GEN_74, tgts_22) @[BTB.scala 203:17 264:29]
    tgts_23 <= mux(r_btb_updatePipe_valid, _GEN_75, tgts_23) @[BTB.scala 203:17 264:29]
    tgts_24 <= mux(r_btb_updatePipe_valid, _GEN_76, tgts_24) @[BTB.scala 203:17 264:29]
    tgts_25 <= mux(r_btb_updatePipe_valid, _GEN_77, tgts_25) @[BTB.scala 203:17 264:29]
    tgts_26 <= mux(r_btb_updatePipe_valid, _GEN_78, tgts_26) @[BTB.scala 203:17 264:29]
    tgts_27 <= mux(r_btb_updatePipe_valid, _GEN_79, tgts_27) @[BTB.scala 203:17 264:29]
    tgtPages_0 <= mux(r_btb_updatePipe_valid, _GEN_108, tgtPages_0) @[BTB.scala 204:21 264:29]
    tgtPages_1 <= mux(r_btb_updatePipe_valid, _GEN_109, tgtPages_1) @[BTB.scala 204:21 264:29]
    tgtPages_2 <= mux(r_btb_updatePipe_valid, _GEN_110, tgtPages_2) @[BTB.scala 204:21 264:29]
    tgtPages_3 <= mux(r_btb_updatePipe_valid, _GEN_111, tgtPages_3) @[BTB.scala 204:21 264:29]
    tgtPages_4 <= mux(r_btb_updatePipe_valid, _GEN_112, tgtPages_4) @[BTB.scala 204:21 264:29]
    tgtPages_5 <= mux(r_btb_updatePipe_valid, _GEN_113, tgtPages_5) @[BTB.scala 204:21 264:29]
    tgtPages_6 <= mux(r_btb_updatePipe_valid, _GEN_114, tgtPages_6) @[BTB.scala 204:21 264:29]
    tgtPages_7 <= mux(r_btb_updatePipe_valid, _GEN_115, tgtPages_7) @[BTB.scala 204:21 264:29]
    tgtPages_8 <= mux(r_btb_updatePipe_valid, _GEN_116, tgtPages_8) @[BTB.scala 204:21 264:29]
    tgtPages_9 <= mux(r_btb_updatePipe_valid, _GEN_117, tgtPages_9) @[BTB.scala 204:21 264:29]
    tgtPages_10 <= mux(r_btb_updatePipe_valid, _GEN_118, tgtPages_10) @[BTB.scala 204:21 264:29]
    tgtPages_11 <= mux(r_btb_updatePipe_valid, _GEN_119, tgtPages_11) @[BTB.scala 204:21 264:29]
    tgtPages_12 <= mux(r_btb_updatePipe_valid, _GEN_120, tgtPages_12) @[BTB.scala 204:21 264:29]
    tgtPages_13 <= mux(r_btb_updatePipe_valid, _GEN_121, tgtPages_13) @[BTB.scala 204:21 264:29]
    tgtPages_14 <= mux(r_btb_updatePipe_valid, _GEN_122, tgtPages_14) @[BTB.scala 204:21 264:29]
    tgtPages_15 <= mux(r_btb_updatePipe_valid, _GEN_123, tgtPages_15) @[BTB.scala 204:21 264:29]
    tgtPages_16 <= mux(r_btb_updatePipe_valid, _GEN_124, tgtPages_16) @[BTB.scala 204:21 264:29]
    tgtPages_17 <= mux(r_btb_updatePipe_valid, _GEN_125, tgtPages_17) @[BTB.scala 204:21 264:29]
    tgtPages_18 <= mux(r_btb_updatePipe_valid, _GEN_126, tgtPages_18) @[BTB.scala 204:21 264:29]
    tgtPages_19 <= mux(r_btb_updatePipe_valid, _GEN_127, tgtPages_19) @[BTB.scala 204:21 264:29]
    tgtPages_20 <= mux(r_btb_updatePipe_valid, _GEN_128, tgtPages_20) @[BTB.scala 204:21 264:29]
    tgtPages_21 <= mux(r_btb_updatePipe_valid, _GEN_129, tgtPages_21) @[BTB.scala 204:21 264:29]
    tgtPages_22 <= mux(r_btb_updatePipe_valid, _GEN_130, tgtPages_22) @[BTB.scala 204:21 264:29]
    tgtPages_23 <= mux(r_btb_updatePipe_valid, _GEN_131, tgtPages_23) @[BTB.scala 204:21 264:29]
    tgtPages_24 <= mux(r_btb_updatePipe_valid, _GEN_132, tgtPages_24) @[BTB.scala 204:21 264:29]
    tgtPages_25 <= mux(r_btb_updatePipe_valid, _GEN_133, tgtPages_25) @[BTB.scala 204:21 264:29]
    tgtPages_26 <= mux(r_btb_updatePipe_valid, _GEN_134, tgtPages_26) @[BTB.scala 204:21 264:29]
    tgtPages_27 <= mux(r_btb_updatePipe_valid, _GEN_135, tgtPages_27) @[BTB.scala 204:21 264:29]
    pages_0 <= mux(r_btb_updatePipe_valid, _GEN_192, pages_0) @[BTB.scala 205:18 264:29]
    pages_1 <= mux(r_btb_updatePipe_valid, _GEN_195, pages_1) @[BTB.scala 205:18 264:29]
    pages_2 <= mux(r_btb_updatePipe_valid, _GEN_193, pages_2) @[BTB.scala 205:18 264:29]
    pages_3 <= mux(r_btb_updatePipe_valid, _GEN_196, pages_3) @[BTB.scala 205:18 264:29]
    pages_4 <= mux(r_btb_updatePipe_valid, _GEN_194, pages_4) @[BTB.scala 205:18 264:29]
    pages_5 <= mux(r_btb_updatePipe_valid, _GEN_197, pages_5) @[BTB.scala 205:18 264:29]
    node _GEN_439 = mux(reset, UInt<8>("h0"), _GEN_373) @[BTB.scala 206:{22,22}]
    pageValid <= bits(_GEN_439, 5, 0) @[BTB.scala 206:{22,22}]
    node _GEN_440 = mux(reset, UInt<32>("h0"), _GEN_375) @[BTB.scala 209:{20,20}]
    isValid <= bits(_GEN_440, 27, 0) @[BTB.scala 209:{20,20}]
    cfiType_0 <= mux(r_btb_updatePipe_valid, _GEN_136, cfiType_0) @[BTB.scala 210:20 264:29]
    cfiType_1 <= mux(r_btb_updatePipe_valid, _GEN_137, cfiType_1) @[BTB.scala 210:20 264:29]
    cfiType_2 <= mux(r_btb_updatePipe_valid, _GEN_138, cfiType_2) @[BTB.scala 210:20 264:29]
    cfiType_3 <= mux(r_btb_updatePipe_valid, _GEN_139, cfiType_3) @[BTB.scala 210:20 264:29]
    cfiType_4 <= mux(r_btb_updatePipe_valid, _GEN_140, cfiType_4) @[BTB.scala 210:20 264:29]
    cfiType_5 <= mux(r_btb_updatePipe_valid, _GEN_141, cfiType_5) @[BTB.scala 210:20 264:29]
    cfiType_6 <= mux(r_btb_updatePipe_valid, _GEN_142, cfiType_6) @[BTB.scala 210:20 264:29]
    cfiType_7 <= mux(r_btb_updatePipe_valid, _GEN_143, cfiType_7) @[BTB.scala 210:20 264:29]
    cfiType_8 <= mux(r_btb_updatePipe_valid, _GEN_144, cfiType_8) @[BTB.scala 210:20 264:29]
    cfiType_9 <= mux(r_btb_updatePipe_valid, _GEN_145, cfiType_9) @[BTB.scala 210:20 264:29]
    cfiType_10 <= mux(r_btb_updatePipe_valid, _GEN_146, cfiType_10) @[BTB.scala 210:20 264:29]
    cfiType_11 <= mux(r_btb_updatePipe_valid, _GEN_147, cfiType_11) @[BTB.scala 210:20 264:29]
    cfiType_12 <= mux(r_btb_updatePipe_valid, _GEN_148, cfiType_12) @[BTB.scala 210:20 264:29]
    cfiType_13 <= mux(r_btb_updatePipe_valid, _GEN_149, cfiType_13) @[BTB.scala 210:20 264:29]
    cfiType_14 <= mux(r_btb_updatePipe_valid, _GEN_150, cfiType_14) @[BTB.scala 210:20 264:29]
    cfiType_15 <= mux(r_btb_updatePipe_valid, _GEN_151, cfiType_15) @[BTB.scala 210:20 264:29]
    cfiType_16 <= mux(r_btb_updatePipe_valid, _GEN_152, cfiType_16) @[BTB.scala 210:20 264:29]
    cfiType_17 <= mux(r_btb_updatePipe_valid, _GEN_153, cfiType_17) @[BTB.scala 210:20 264:29]
    cfiType_18 <= mux(r_btb_updatePipe_valid, _GEN_154, cfiType_18) @[BTB.scala 210:20 264:29]
    cfiType_19 <= mux(r_btb_updatePipe_valid, _GEN_155, cfiType_19) @[BTB.scala 210:20 264:29]
    cfiType_20 <= mux(r_btb_updatePipe_valid, _GEN_156, cfiType_20) @[BTB.scala 210:20 264:29]
    cfiType_21 <= mux(r_btb_updatePipe_valid, _GEN_157, cfiType_21) @[BTB.scala 210:20 264:29]
    cfiType_22 <= mux(r_btb_updatePipe_valid, _GEN_158, cfiType_22) @[BTB.scala 210:20 264:29]
    cfiType_23 <= mux(r_btb_updatePipe_valid, _GEN_159, cfiType_23) @[BTB.scala 210:20 264:29]
    cfiType_24 <= mux(r_btb_updatePipe_valid, _GEN_160, cfiType_24) @[BTB.scala 210:20 264:29]
    cfiType_25 <= mux(r_btb_updatePipe_valid, _GEN_161, cfiType_25) @[BTB.scala 210:20 264:29]
    cfiType_26 <= mux(r_btb_updatePipe_valid, _GEN_162, cfiType_26) @[BTB.scala 210:20 264:29]
    cfiType_27 <= mux(r_btb_updatePipe_valid, _GEN_163, cfiType_27) @[BTB.scala 210:20 264:29]
    brIdx_0 <= mux(r_btb_updatePipe_valid, _GEN_164, brIdx_0) @[BTB.scala 211:18 264:29]
    brIdx_1 <= mux(r_btb_updatePipe_valid, _GEN_165, brIdx_1) @[BTB.scala 211:18 264:29]
    brIdx_2 <= mux(r_btb_updatePipe_valid, _GEN_166, brIdx_2) @[BTB.scala 211:18 264:29]
    brIdx_3 <= mux(r_btb_updatePipe_valid, _GEN_167, brIdx_3) @[BTB.scala 211:18 264:29]
    brIdx_4 <= mux(r_btb_updatePipe_valid, _GEN_168, brIdx_4) @[BTB.scala 211:18 264:29]
    brIdx_5 <= mux(r_btb_updatePipe_valid, _GEN_169, brIdx_5) @[BTB.scala 211:18 264:29]
    brIdx_6 <= mux(r_btb_updatePipe_valid, _GEN_170, brIdx_6) @[BTB.scala 211:18 264:29]
    brIdx_7 <= mux(r_btb_updatePipe_valid, _GEN_171, brIdx_7) @[BTB.scala 211:18 264:29]
    brIdx_8 <= mux(r_btb_updatePipe_valid, _GEN_172, brIdx_8) @[BTB.scala 211:18 264:29]
    brIdx_9 <= mux(r_btb_updatePipe_valid, _GEN_173, brIdx_9) @[BTB.scala 211:18 264:29]
    brIdx_10 <= mux(r_btb_updatePipe_valid, _GEN_174, brIdx_10) @[BTB.scala 211:18 264:29]
    brIdx_11 <= mux(r_btb_updatePipe_valid, _GEN_175, brIdx_11) @[BTB.scala 211:18 264:29]
    brIdx_12 <= mux(r_btb_updatePipe_valid, _GEN_176, brIdx_12) @[BTB.scala 211:18 264:29]
    brIdx_13 <= mux(r_btb_updatePipe_valid, _GEN_177, brIdx_13) @[BTB.scala 211:18 264:29]
    brIdx_14 <= mux(r_btb_updatePipe_valid, _GEN_178, brIdx_14) @[BTB.scala 211:18 264:29]
    brIdx_15 <= mux(r_btb_updatePipe_valid, _GEN_179, brIdx_15) @[BTB.scala 211:18 264:29]
    brIdx_16 <= mux(r_btb_updatePipe_valid, _GEN_180, brIdx_16) @[BTB.scala 211:18 264:29]
    brIdx_17 <= mux(r_btb_updatePipe_valid, _GEN_181, brIdx_17) @[BTB.scala 211:18 264:29]
    brIdx_18 <= mux(r_btb_updatePipe_valid, _GEN_182, brIdx_18) @[BTB.scala 211:18 264:29]
    brIdx_19 <= mux(r_btb_updatePipe_valid, _GEN_183, brIdx_19) @[BTB.scala 211:18 264:29]
    brIdx_20 <= mux(r_btb_updatePipe_valid, _GEN_184, brIdx_20) @[BTB.scala 211:18 264:29]
    brIdx_21 <= mux(r_btb_updatePipe_valid, _GEN_185, brIdx_21) @[BTB.scala 211:18 264:29]
    brIdx_22 <= mux(r_btb_updatePipe_valid, _GEN_186, brIdx_22) @[BTB.scala 211:18 264:29]
    brIdx_23 <= mux(r_btb_updatePipe_valid, _GEN_187, brIdx_23) @[BTB.scala 211:18 264:29]
    brIdx_24 <= mux(r_btb_updatePipe_valid, _GEN_188, brIdx_24) @[BTB.scala 211:18 264:29]
    brIdx_25 <= mux(r_btb_updatePipe_valid, _GEN_189, brIdx_25) @[BTB.scala 211:18 264:29]
    brIdx_26 <= mux(r_btb_updatePipe_valid, _GEN_190, brIdx_26) @[BTB.scala 211:18 264:29]
    brIdx_27 <= mux(r_btb_updatePipe_valid, _GEN_191, brIdx_27) @[BTB.scala 211:18 264:29]
    r_btb_updatePipe_valid <= mux(reset, UInt<1>("h0"), io_btb_update_valid) @[Valid.scala 117:{22,22,22}]
    skip
    skip
    skip
    skip
    skip
    r_btb_updatePipe_bits_prediction_entry <= mux(io_btb_update_valid, io_btb_update_bits_prediction_entry, r_btb_updatePipe_bits_prediction_entry) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    r_btb_updatePipe_bits_pc <= mux(io_btb_update_valid, io_btb_update_bits_pc, r_btb_updatePipe_bits_pc) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    r_btb_updatePipe_bits_isValid <= mux(io_btb_update_valid, io_btb_update_bits_isValid, r_btb_updatePipe_bits_isValid) @[Reg.scala 15:16 16:{19,23}]
    r_btb_updatePipe_bits_br_pc <= mux(io_btb_update_valid, io_btb_update_bits_br_pc, r_btb_updatePipe_bits_br_pc) @[Reg.scala 15:16 16:{19,23}]
    r_btb_updatePipe_bits_cfiType <= mux(io_btb_update_valid, io_btb_update_bits_cfiType, r_btb_updatePipe_bits_cfiType) @[Reg.scala 15:16 16:{19,23}]
    nextPageRepl <= mux(reset, UInt<3>("h0"), _GEN_14) @[BTB.scala 239:{29,29}]
    state_reg <= mux(reset, UInt<27>("h0"), _GEN_23) @[Replacement.scala 168:{70,70}]
    r_respPipe_valid <= mux(reset, UInt<1>("h0"), io_resp_valid) @[Valid.scala 117:{22,22,22}]
    skip
    r_respPipe_bits_taken <= mux(io_resp_valid, io_resp_bits_taken, r_respPipe_bits_taken) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    r_respPipe_bits_entry <= mux(io_resp_valid, io_resp_bits_entry, r_respPipe_bits_entry) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    table.res_res_value_MPORT.addr <= xor(_res_res_value_T_3, _res_res_value_T_6) @[BTB.scala 90:20]
    table.res_res_value_MPORT.en <= UInt<1>("h1") @[BTB.scala 94:43]
    table.res_res_value_MPORT.clk <= clock @[BTB.scala 94:43]
    table.MPORT.addr <= bits(waddr_1, 8, 0) @[BTB.scala 127:21]
    table.MPORT.en <= mux(io_bht_update_valid, _GEN_387, resetting) @[BTB.scala 312:32]
    table.MPORT.clk <= clock @[BTB.scala 127:{14,21}]
    table.MPORT.data <= and(io_bht_update_valid, _GEN_389) @[BTB.scala 312:32]
    table.MPORT.mask <= UInt<1>("h1") @[BTB.scala 127:{14,29}]
    history <= mux(reset, UInt<8>("h0"), _GEN_394) @[BTB.scala 119:{24,24}]
    reset_waddr <= mux(reset, UInt<10>("h0"), _GEN_376) @[BTB.scala 121:{36,36}]
    count <= mux(reset, UInt<3>("h0"), _GEN_422) @[BTB.scala 58:{30,30}]
    pos <= mux(reset, UInt<3>("h0"), _GEN_429) @[BTB.scala 59:{28,28}]
    stack_0 <= mux(io_ras_update_valid, _GEN_415, stack_0) @[BTB.scala 334:32 60:26]
    stack_1 <= mux(io_ras_update_valid, _GEN_416, stack_1) @[BTB.scala 334:32 60:26]
    stack_2 <= mux(io_ras_update_valid, _GEN_417, stack_2) @[BTB.scala 334:32 60:26]
    stack_3 <= mux(io_ras_update_valid, _GEN_418, stack_3) @[BTB.scala 334:32 60:26]
    stack_4 <= mux(io_ras_update_valid, _GEN_419, stack_4) @[BTB.scala 334:32 60:26]
    stack_5 <= mux(io_ras_update_valid, _GEN_420, stack_5) @[BTB.scala 334:32 60:26]

  module FPUDecoder :
    input io_inst : UInt<32>
    output io_sigs_wen : UInt<1>
    output io_sigs_ren1 : UInt<1>
    output io_sigs_ren2 : UInt<1>
    output io_sigs_ren3 : UInt<1>
    output io_sigs_swap12 : UInt<1>
    output io_sigs_swap23 : UInt<1>
    output io_sigs_typeTagIn : UInt<2>
    output io_sigs_typeTagOut : UInt<2>
    output io_sigs_fromint : UInt<1>
    output io_sigs_toint : UInt<1>
    output io_sigs_fastpipe : UInt<1>
    output io_sigs_fma : UInt<1>
    output io_sigs_div : UInt<1>
    output io_sigs_sqrt : UInt<1>
    output io_sigs_wflags : UInt<1>

    node _decoder_T = and(io_inst, UInt<32>("h40")) @[Decode.scala 14:65]
    node decoder_0 = eq(_decoder_T, UInt<32>("h0")) @[Decode.scala 14:121]
    skip
    node _decoder_T_2 = and(io_inst, UInt<32>("h80000020")) @[Decode.scala 14:65]
    node _decoder_T_3 = eq(_decoder_T_2, UInt<32>("h0")) @[Decode.scala 14:121]
    node _decoder_T_4 = and(io_inst, UInt<32>("h30")) @[Decode.scala 14:65]
    node _decoder_T_5 = eq(_decoder_T_4, UInt<32>("h0")) @[Decode.scala 14:121]
    node _decoder_T_6 = and(io_inst, UInt<32>("h10000020")) @[Decode.scala 14:65]
    node _decoder_T_7 = eq(_decoder_T_6, UInt<32>("h10000000")) @[Decode.scala 14:121]
    skip
    node _decoder_T_9 = or(_decoder_T_3, _decoder_T_5) @[Decode.scala 15:30]
    skip
    node _decoder_T_10 = and(io_inst, UInt<32>("h80000004")) @[Decode.scala 14:65]
    node _decoder_T_11 = eq(_decoder_T_10, UInt<32>("h0")) @[Decode.scala 14:121]
    node _decoder_T_12 = and(io_inst, UInt<32>("h10000004")) @[Decode.scala 14:65]
    node _decoder_T_13 = eq(_decoder_T_12, UInt<32>("h0")) @[Decode.scala 14:121]
    node _decoder_T_14 = and(io_inst, UInt<32>("h50")) @[Decode.scala 14:65]
    node decoder_4 = eq(_decoder_T_14, UInt<32>("h40")) @[Decode.scala 14:121]
    skip
    node _decoder_T_17 = or(_decoder_T_11, _decoder_T_13) @[Decode.scala 15:30]
    skip
    node _decoder_T_18 = and(io_inst, UInt<32>("h40000004")) @[Decode.scala 14:65]
    node _decoder_T_19 = eq(_decoder_T_18, UInt<32>("h0")) @[Decode.scala 14:121]
    node _decoder_T_20 = and(io_inst, UInt<32>("h20")) @[Decode.scala 14:65]
    node _decoder_T_21 = eq(_decoder_T_20, UInt<32>("h20")) @[Decode.scala 14:121]
    skip
    node _decoder_T_23 = or(_decoder_T_19, _decoder_T_21) @[Decode.scala 15:30]
    skip
    skip
    skip
    node _decoder_T_24 = and(io_inst, UInt<32>("h30000010")) @[Decode.scala 14:65]
    skip
    skip
    node _decoder_T_26 = and(io_inst, UInt<32>("h42000000")) @[Decode.scala 14:65]
    node _decoder_T_27 = eq(_decoder_T_26, UInt<32>("h2000000")) @[Decode.scala 14:121]
    node _decoder_T_28 = and(io_inst, UInt<32>("h2000010")) @[Decode.scala 14:65]
    node _decoder_T_29 = eq(_decoder_T_28, UInt<32>("h2000000")) @[Decode.scala 14:121]
    node _decoder_T_30 = and(io_inst, UInt<32>("h12000000")) @[Decode.scala 14:65]
    node _decoder_T_31 = eq(_decoder_T_30, UInt<32>("h12000000")) @[Decode.scala 14:121]
    node _decoder_T_32 = and(io_inst, UInt<32>("hd2000010")) @[Decode.scala 14:65]
    node _decoder_T_33 = eq(_decoder_T_32, UInt<32>("h40000010")) @[Decode.scala 14:121]
    node _decoder_T_34 = and(io_inst, UInt<32>("h70001010")) @[Decode.scala 14:65]
    node _decoder_T_35 = eq(_decoder_T_34, UInt<32>("h60000010")) @[Decode.scala 14:121]
    node _decoder_T_36 = and(io_inst, UInt<32>("h82000000")) @[Decode.scala 14:65]
    node _decoder_T_37 = eq(_decoder_T_36, UInt<32>("h82000000")) @[Decode.scala 14:121]
    skip
    node _decoder_T_39 = or(decoder_0, _decoder_T_27) @[Decode.scala 15:30]
    node _decoder_T_40 = or(_decoder_T_39, _decoder_T_29) @[Decode.scala 15:30]
    node _decoder_T_41 = or(_decoder_T_40, _decoder_T_31) @[Decode.scala 15:30]
    node _decoder_T_42 = or(_decoder_T_41, _decoder_T_33) @[Decode.scala 15:30]
    node _decoder_T_43 = or(_decoder_T_42, _decoder_T_35) @[Decode.scala 15:30]
    node decoder_7 = or(_decoder_T_43, _decoder_T_37) @[Decode.scala 15:30]
    node _decoder_T_44 = and(io_inst, UInt<32>("h1040")) @[Decode.scala 14:65]
    node _decoder_T_45 = eq(_decoder_T_44, UInt<32>("h1000")) @[Decode.scala 14:121]
    node _decoder_T_46 = and(io_inst, UInt<32>("h2000020")) @[Decode.scala 14:65]
    node _decoder_T_47 = eq(_decoder_T_46, UInt<32>("h2000000")) @[Decode.scala 14:121]
    skip
    node _decoder_T_49 = eq(_decoder_T_24, UInt<32>("h30000010")) @[Decode.scala 14:121]
    skip
    node _decoder_T_51 = or(_decoder_T_45, _decoder_T_47) @[Decode.scala 15:30]
    node decoder_8 = or(_decoder_T_51, _decoder_T_49) @[Decode.scala 15:30]
    node _decoder_T_52 = and(io_inst, UInt<32>("h90000010")) @[Decode.scala 14:65]
    skip
    skip
    skip
    node _decoder_T_55 = eq(_decoder_T_52, UInt<32>("h80000010")) @[Decode.scala 14:121]
    skip
    skip
    node _decoder_T_57 = and(io_inst, UInt<32>("ha0000010")) @[Decode.scala 14:65]
    node _decoder_T_58 = eq(_decoder_T_57, UInt<32>("h20000010")) @[Decode.scala 14:121]
    node _decoder_T_59 = and(io_inst, UInt<32>("hd0000010")) @[Decode.scala 14:65]
    node _decoder_T_60 = eq(_decoder_T_59, UInt<32>("h40000010")) @[Decode.scala 14:121]
    skip
    skip
    node _decoder_T_62 = and(io_inst, UInt<32>("h70000004")) @[Decode.scala 14:65]
    node _decoder_T_63 = eq(_decoder_T_62, UInt<32>("h0")) @[Decode.scala 14:121]
    node _decoder_T_64 = and(io_inst, UInt<32>("h68000004")) @[Decode.scala 14:65]
    node _decoder_T_65 = eq(_decoder_T_64, UInt<32>("h0")) @[Decode.scala 14:121]
    skip
    node _decoder_T_67 = or(_decoder_T_63, _decoder_T_65) @[Decode.scala 15:30]
    skip
    node _decoder_T_68 = and(io_inst, UInt<32>("h58000010")) @[Decode.scala 14:65]
    skip
    skip
    skip
    skip
    skip
    node _decoder_T_72 = and(io_inst, UInt<32>("h20000004")) @[Decode.scala 14:65]
    node _decoder_T_73 = eq(_decoder_T_72, UInt<32>("h0")) @[Decode.scala 14:121]
    node _decoder_T_74 = and(io_inst, UInt<32>("h8002000")) @[Decode.scala 14:65]
    node _decoder_T_75 = eq(_decoder_T_74, UInt<32>("h8000000")) @[Decode.scala 14:121]
    node _decoder_T_76 = and(io_inst, UInt<32>("hc0000004")) @[Decode.scala 14:65]
    node _decoder_T_77 = eq(_decoder_T_76, UInt<32>("h80000000")) @[Decode.scala 14:121]
    skip
    node _decoder_T_79 = or(_decoder_T_73, decoder_4) @[Decode.scala 15:30]
    node _decoder_T_80 = or(_decoder_T_79, _decoder_T_75) @[Decode.scala 15:30]
    skip
    skip
    io_sigs_wen <= or(_decoder_T_9, _decoder_T_7) @[Decode.scala 15:30]
    io_sigs_ren1 <= or(_decoder_T_17, decoder_4) @[Decode.scala 15:30]
    io_sigs_ren2 <= or(_decoder_T_23, decoder_4) @[Decode.scala 15:30]
    io_sigs_ren3 <= eq(_decoder_T_14, UInt<32>("h40")) @[Decode.scala 14:121]
    io_sigs_swap12 <= eq(_decoder_T, UInt<32>("h0")) @[Decode.scala 14:121]
    io_sigs_swap23 <= eq(_decoder_T_24, UInt<32>("h10")) @[Decode.scala 14:121]
    io_sigs_typeTagIn <= pad(decoder_7, 2) @[FPU.scala 174:40]
    io_sigs_typeTagOut <= pad(decoder_8, 2) @[FPU.scala 174:40]
    io_sigs_fromint <= eq(_decoder_T_52, UInt<32>("h90000010")) @[Decode.scala 14:121]
    io_sigs_toint <= or(_decoder_T_21, _decoder_T_55) @[Decode.scala 15:30]
    io_sigs_fastpipe <= or(_decoder_T_58, _decoder_T_60) @[Decode.scala 15:30]
    io_sigs_fma <= or(_decoder_T_67, decoder_4) @[Decode.scala 15:30]
    io_sigs_div <= eq(_decoder_T_68, UInt<32>("h18000010")) @[Decode.scala 14:121]
    io_sigs_sqrt <= eq(_decoder_T_59, UInt<32>("h50000010")) @[Decode.scala 14:121]
    io_sigs_wflags <= or(_decoder_T_80, _decoder_T_77) @[Decode.scala 15:30]

  module FPUFMAPipe :
    input clock : Clock
    input reset : UInt<1>
    input io_in_valid : UInt<1>
    input io_in_bits_ren3 : UInt<1>
    input io_in_bits_swap23 : UInt<1>
    input io_in_bits_rm : UInt<3>
    input io_in_bits_fmaCmd : UInt<2>
    input io_in_bits_in1 : UInt<65>
    input io_in_bits_in2 : UInt<65>
    input io_in_bits_in3 : UInt<65>
    output io_out_bits_data : UInt<65>
    output io_out_bits_exc : UInt<5>

    inst fma of MulAddRecFNPipe @[FPU.scala 712:19]
    reg valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid) @[FPU.scala 700:18]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg in_rm : UInt<3>, clock with :
      reset => (UInt<1>("h0"), in_rm) @[FPU.scala 701:15]
    reg in_fmaCmd : UInt<2>, clock with :
      reset => (UInt<1>("h0"), in_fmaCmd) @[FPU.scala 701:15]
    skip
    skip
    reg in_in1 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), in_in1) @[FPU.scala 701:15]
    reg in_in2 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), in_in2) @[FPU.scala 701:15]
    reg in_in3 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), in_in3) @[FPU.scala 701:15]
    skip
    node _zero_T = xor(io_in_bits_in1, io_in_bits_in2) @[FPU.scala 704:32]
    skip
    node zero = and(_zero_T, UInt<65>("h100000000")) @[FPU.scala 704:50]
    node _GEN_0 = mux(io_in_bits_swap23, UInt<65>("h80000000"), io_in_bits_in2) @[FPU.scala 708:{23,32} 707:8]
    node _T = or(io_in_bits_ren3, io_in_bits_swap23) @[FPU.scala 709:21]
    node _T_1 = not(_T) @[FPU.scala 709:11]
    node _GEN_1 = mux(_T_1, zero, io_in_bits_in3) @[FPU.scala 709:{37,46} 707:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out_bits_data <= pad(fma.io_out, 65) @[FPU.scala 721:17 722:12]
    io_out_bits_exc <= fma.io_exceptionFlags @[FPU.scala 721:17 723:11]
    valid <= io_in_valid @[FPU.scala 700:18]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    in_rm <= mux(io_in_valid, io_in_bits_rm, in_rm) @[FPU.scala 701:15 702:22 707:8]
    in_fmaCmd <= mux(io_in_valid, io_in_bits_fmaCmd, in_fmaCmd) @[FPU.scala 701:15 702:22 707:8]
    skip
    skip
    in_in1 <= mux(io_in_valid, io_in_bits_in1, in_in1) @[FPU.scala 701:15 702:22 707:8]
    in_in2 <= mux(io_in_valid, _GEN_0, in_in2) @[FPU.scala 701:15 702:22]
    in_in3 <= mux(io_in_valid, _GEN_1, in_in3) @[FPU.scala 701:15 702:22]
    fma.clock <= clock
    fma.reset <= reset
    fma.io_validin <= valid @[FPU.scala 713:18]
    fma.io_op <= in_fmaCmd @[FPU.scala 714:13]
    fma.io_a <= bits(in_in1, 32, 0) @[FPU.scala 717:12]
    fma.io_b <= bits(in_in2, 32, 0) @[FPU.scala 718:12]
    fma.io_c <= bits(in_in3, 32, 0) @[FPU.scala 719:12]
    fma.io_roundingMode <= in_rm @[FPU.scala 715:23]
    skip

  module FPToInt :
    input clock : Clock
    input io_in_valid : UInt<1>
    input io_in_bits_ren2 : UInt<1>
    input io_in_bits_typeTagIn : UInt<2>
    input io_in_bits_typeTagOut : UInt<2>
    input io_in_bits_wflags : UInt<1>
    input io_in_bits_rm : UInt<3>
    input io_in_bits_typ : UInt<2>
    input io_in_bits_fmt : UInt<2>
    input io_in_bits_in1 : UInt<65>
    input io_in_bits_in2 : UInt<65>
    output io_out_bits_in_rm : UInt<3>
    output io_out_bits_in_in1 : UInt<65>
    output io_out_bits_in_in2 : UInt<65>
    output io_out_bits_lt : UInt<1>
    output io_out_bits_store : UInt<64>
    output io_out_bits_toint : UInt<64>
    output io_out_bits_exc : UInt<5>

    inst dcmp of CompareRecFN @[FPU.scala 465:20]
    inst conv of RecFNToIN @[FPU.scala 493:24]
    inst narrow of RecFNToIN_1 @[FPU.scala 503:30]
    skip
    skip
    skip
    reg in_ren2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), in_ren2) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    reg in_typeTagOut : UInt<2>, clock with :
      reset => (UInt<1>("h0"), in_typeTagOut) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    reg in_wflags : UInt<1>, clock with :
      reset => (UInt<1>("h0"), in_wflags) @[Reg.scala 15:16]
    reg in_rm : UInt<3>, clock with :
      reset => (UInt<1>("h0"), in_rm) @[Reg.scala 15:16]
    skip
    reg in_typ : UInt<2>, clock with :
      reset => (UInt<1>("h0"), in_typ) @[Reg.scala 15:16]
    reg in_fmt : UInt<2>, clock with :
      reset => (UInt<1>("h0"), in_fmt) @[Reg.scala 15:16]
    reg in_in1 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), in_in1) @[Reg.scala 15:16]
    reg in_in2 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), in_in2) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _dcmp_io_signaling_T = bits(in_rm, 1, 1) @[FPU.scala 468:30]
    skip
    node store_unrecoded_rawIn_exp = bits(in_in1, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _store_unrecoded_rawIn_isZero_T = bits(store_unrecoded_rawIn_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node store_unrecoded_rawIn_isZero = eq(_store_unrecoded_rawIn_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _store_unrecoded_rawIn_isSpecial_T = bits(store_unrecoded_rawIn_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node store_unrecoded_rawIn_isSpecial = eq(_store_unrecoded_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _store_unrecoded_rawIn_out_isNaN_T = bits(store_unrecoded_rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node store_unrecoded_rawIn__isNaN = and(store_unrecoded_rawIn_isSpecial, _store_unrecoded_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _store_unrecoded_rawIn_out_isInf_T_1 = not(_store_unrecoded_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    node store_unrecoded_rawIn__isInf = and(store_unrecoded_rawIn_isSpecial, _store_unrecoded_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    node store_unrecoded_rawIn__sign = bits(in_in1, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    node store_unrecoded_rawIn__sExp = cvt(store_unrecoded_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    node store_unrecoded_rawIn_out_sig_hi_lo = not(store_unrecoded_rawIn_isZero) @[rawFloatFromRecFN.scala 60:39]
    node store_unrecoded_rawIn_out_sig_lo = bits(in_in1, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node store_unrecoded_rawIn_out_sig_hi = cat(UInt<1>("h0"), store_unrecoded_rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node store_unrecoded_rawIn__sig = cat(store_unrecoded_rawIn_out_sig_hi, store_unrecoded_rawIn_out_sig_lo) @[Cat.scala 30:58]
    skip
    node store_unrecoded_isSubnormal = lt(store_unrecoded_rawIn__sExp, SInt<13>("h402")) @[fNFromRecFN.scala 50:39]
    node _store_unrecoded_denormShiftDist_T = bits(store_unrecoded_rawIn__sExp, 5, 0) @[fNFromRecFN.scala 51:51]
    node _store_unrecoded_denormShiftDist_T_1 = sub(UInt<6>("h1"), _store_unrecoded_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node store_unrecoded_denormShiftDist = tail(_store_unrecoded_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    skip
    node _store_unrecoded_denormFract_T = shr(store_unrecoded_rawIn__sig, 1) @[fNFromRecFN.scala 52:38]
    node _store_unrecoded_denormFract_T_1 = dshr(_store_unrecoded_denormFract_T, store_unrecoded_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node store_unrecoded_denormFract = bits(_store_unrecoded_denormFract_T_1, 51, 0) @[fNFromRecFN.scala 52:60]
    node _store_unrecoded_expOut_T = bits(store_unrecoded_rawIn__sExp, 10, 0) @[fNFromRecFN.scala 57:27]
    node _store_unrecoded_expOut_T_1 = sub(_store_unrecoded_expOut_T, UInt<11>("h401")) @[fNFromRecFN.scala 57:45]
    node _store_unrecoded_expOut_T_2 = tail(_store_unrecoded_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _store_unrecoded_expOut_T_3 = mux(store_unrecoded_isSubnormal, UInt<11>("h0"), _store_unrecoded_expOut_T_2) @[fNFromRecFN.scala 55:16]
    skip
    skip
    node _store_unrecoded_expOut_T_4 = or(store_unrecoded_rawIn__isNaN, store_unrecoded_rawIn__isInf) @[fNFromRecFN.scala 59:44]
    skip
    node _store_unrecoded_expOut_T_6 = mux(_store_unrecoded_expOut_T_4, UInt<11>("h7ff"), UInt<11>("h0")) @[Bitwise.scala 72:12]
    node store_unrecoded_hi_lo = or(_store_unrecoded_expOut_T_3, _store_unrecoded_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _store_unrecoded_fractOut_T = bits(store_unrecoded_rawIn__sig, 51, 0) @[fNFromRecFN.scala 63:52]
    node _store_unrecoded_fractOut_T_1 = mux(store_unrecoded_rawIn__isInf, UInt<52>("h0"), _store_unrecoded_fractOut_T) @[fNFromRecFN.scala 63:20]
    node store_unrecoded_lo = mux(store_unrecoded_isSubnormal, store_unrecoded_denormFract, _store_unrecoded_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    skip
    node store_unrecoded_hi = cat(store_unrecoded_rawIn__sign, store_unrecoded_hi_lo) @[Cat.scala 30:58]
    node store_unrecoded = cat(store_unrecoded_hi, store_unrecoded_lo) @[Cat.scala 30:58]
    node store_prevRecoded_hi_hi = bits(in_in1, 31, 31) @[FPU.scala 437:10]
    node store_prevRecoded_hi_lo = bits(in_in1, 52, 52) @[FPU.scala 438:10]
    node store_prevRecoded_lo = bits(in_in1, 30, 0) @[FPU.scala 439:10]
    node store_prevRecoded_hi = cat(store_prevRecoded_hi_hi, store_prevRecoded_hi_lo) @[Cat.scala 30:58]
    node store_prevRecoded = cat(store_prevRecoded_hi, store_prevRecoded_lo) @[Cat.scala 30:58]
    node store_prevUnrecoded_rawIn_exp = bits(store_prevRecoded, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _store_prevUnrecoded_rawIn_isZero_T = bits(store_prevUnrecoded_rawIn_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node store_prevUnrecoded_rawIn_isZero = eq(_store_prevUnrecoded_rawIn_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _store_prevUnrecoded_rawIn_isSpecial_T = bits(store_prevUnrecoded_rawIn_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node store_prevUnrecoded_rawIn_isSpecial = eq(_store_prevUnrecoded_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _store_prevUnrecoded_rawIn_out_isNaN_T = bits(store_prevUnrecoded_rawIn_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node store_prevUnrecoded_rawIn__isNaN = and(store_prevUnrecoded_rawIn_isSpecial, _store_prevUnrecoded_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _store_prevUnrecoded_rawIn_out_isInf_T_1 = not(_store_prevUnrecoded_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    node store_prevUnrecoded_rawIn__isInf = and(store_prevUnrecoded_rawIn_isSpecial, _store_prevUnrecoded_rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    node store_prevUnrecoded_rawIn__sign = bits(store_prevRecoded, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    node store_prevUnrecoded_rawIn__sExp = cvt(store_prevUnrecoded_rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    node store_prevUnrecoded_rawIn_out_sig_hi_lo = not(store_prevUnrecoded_rawIn_isZero) @[rawFloatFromRecFN.scala 60:39]
    node store_prevUnrecoded_rawIn_out_sig_lo = bits(store_prevRecoded, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node store_prevUnrecoded_rawIn_out_sig_hi = cat(UInt<1>("h0"), store_prevUnrecoded_rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node store_prevUnrecoded_rawIn__sig = cat(store_prevUnrecoded_rawIn_out_sig_hi, store_prevUnrecoded_rawIn_out_sig_lo) @[Cat.scala 30:58]
    skip
    node store_prevUnrecoded_isSubnormal = lt(store_prevUnrecoded_rawIn__sExp, SInt<10>("h82")) @[fNFromRecFN.scala 50:39]
    node _store_prevUnrecoded_denormShiftDist_T = bits(store_prevUnrecoded_rawIn__sExp, 4, 0) @[fNFromRecFN.scala 51:51]
    node _store_prevUnrecoded_denormShiftDist_T_1 = sub(UInt<5>("h1"), _store_prevUnrecoded_denormShiftDist_T) @[fNFromRecFN.scala 51:39]
    node store_prevUnrecoded_denormShiftDist = tail(_store_prevUnrecoded_denormShiftDist_T_1, 1) @[fNFromRecFN.scala 51:39]
    skip
    node _store_prevUnrecoded_denormFract_T = shr(store_prevUnrecoded_rawIn__sig, 1) @[fNFromRecFN.scala 52:38]
    node _store_prevUnrecoded_denormFract_T_1 = dshr(_store_prevUnrecoded_denormFract_T, store_prevUnrecoded_denormShiftDist) @[fNFromRecFN.scala 52:42]
    node store_prevUnrecoded_denormFract = bits(_store_prevUnrecoded_denormFract_T_1, 22, 0) @[fNFromRecFN.scala 52:60]
    node _store_prevUnrecoded_expOut_T = bits(store_prevUnrecoded_rawIn__sExp, 7, 0) @[fNFromRecFN.scala 57:27]
    node _store_prevUnrecoded_expOut_T_1 = sub(_store_prevUnrecoded_expOut_T, UInt<8>("h81")) @[fNFromRecFN.scala 57:45]
    node _store_prevUnrecoded_expOut_T_2 = tail(_store_prevUnrecoded_expOut_T_1, 1) @[fNFromRecFN.scala 57:45]
    node _store_prevUnrecoded_expOut_T_3 = mux(store_prevUnrecoded_isSubnormal, UInt<8>("h0"), _store_prevUnrecoded_expOut_T_2) @[fNFromRecFN.scala 55:16]
    skip
    skip
    node _store_prevUnrecoded_expOut_T_4 = or(store_prevUnrecoded_rawIn__isNaN, store_prevUnrecoded_rawIn__isInf) @[fNFromRecFN.scala 59:44]
    skip
    node _store_prevUnrecoded_expOut_T_6 = mux(_store_prevUnrecoded_expOut_T_4, UInt<8>("hff"), UInt<8>("h0")) @[Bitwise.scala 72:12]
    node store_prevUnrecoded_hi_lo = or(_store_prevUnrecoded_expOut_T_3, _store_prevUnrecoded_expOut_T_6) @[fNFromRecFN.scala 59:15]
    node _store_prevUnrecoded_fractOut_T = bits(store_prevUnrecoded_rawIn__sig, 22, 0) @[fNFromRecFN.scala 63:52]
    node _store_prevUnrecoded_fractOut_T_1 = mux(store_prevUnrecoded_rawIn__isInf, UInt<23>("h0"), _store_prevUnrecoded_fractOut_T) @[fNFromRecFN.scala 63:20]
    node store_prevUnrecoded_lo = mux(store_prevUnrecoded_isSubnormal, store_prevUnrecoded_denormFract, _store_prevUnrecoded_fractOut_T_1) @[fNFromRecFN.scala 61:16]
    skip
    node store_prevUnrecoded_hi = cat(store_prevUnrecoded_rawIn__sign, store_prevUnrecoded_hi_lo) @[Cat.scala 30:58]
    node store_prevUnrecoded = cat(store_prevUnrecoded_hi, store_prevUnrecoded_lo) @[Cat.scala 30:58]
    node store_hi = shr(store_unrecoded, 32) @[FPU.scala 441:21]
    node _store_T = bits(in_in1, 63, 61) @[FPU.scala 243:25]
    node _store_T_1 = andr(_store_T) @[FPU.scala 243:56]
    node _store_T_2 = bits(store_unrecoded, 31, 0) @[FPU.scala 441:81]
    node store_lo = mux(_store_T_1, store_prevUnrecoded, _store_T_2) @[FPU.scala 441:44]
    node _store_T_3 = cat(store_hi, store_lo) @[Cat.scala 30:58]
    node store_hi_1 = bits(_store_T_3, 31, 0) @[FPU.scala 472:104]
    node _store_T_4 = cat(store_hi_1, store_hi_1) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node store_truncIdx = bits(in_typeTagOut, 0, 0) @[package.scala 31:49]
    skip
    node store = mux(store_truncIdx, _store_T_3, _store_T_4) @[package.scala 32:76]
    node intType_x6 = bits(in_fmt, 0, 0) @[FPU.scala 474:35]
    node _T_1 = not(in_ren2) @[FPU.scala 490:11]
    node cvtType = bits(in_typ, 1, 1) @[package.scala 154:13]
    node _T_2 = not(cvtType) @[FPU.scala 502:23]
    node _invalid_T = bits(conv.io_intExceptionFlags, 2, 2) @[FPU.scala 510:50]
    node _invalid_T_1 = bits(narrow.io_intExceptionFlags, 1, 1) @[FPU.scala 510:84]
    node io_out_bits_exc_hi_hi_1 = or(_invalid_T, _invalid_T_1) @[FPU.scala 510:54]
    node toint_hi = shr(conv.io_out, 32) @[FPU.scala 511:53]
    skip
    skip
    skip
    node _excSign_T_3 = not(_store_T_1) @[FPU.scala 508:62]
    node excSign = and(store_unrecoded_rawIn__sign, _excSign_T_3) @[FPU.scala 508:59]
    node excOut_hi = eq(conv.io_signedOut, excSign) @[FPU.scala 509:46]
    node _excOut_T = not(excSign) @[FPU.scala 509:69]
    skip
    node excOut_lo = mux(_excOut_T, UInt<31>("h7fffffff"), UInt<31>("h0")) @[Bitwise.scala 72:12]
    node toint_lo = cat(excOut_hi, excOut_lo) @[Cat.scala 30:58]
    node _toint_T_10 = cat(toint_hi, toint_lo) @[Cat.scala 30:58]
    node _GEN_25 = mux(io_out_bits_exc_hi_hi_1, _toint_T_10, conv.io_out) @[FPU.scala 497:13 511:{26,34}]
    node _GEN_26 = mux(_T_2, _GEN_25, conv.io_out) @[FPU.scala 497:13 502:30]
    node _toint_T_3 = not(in_rm) @[FPU.scala 486:15]
    node _toint_T_4 = cat(dcmp.io_lt, dcmp.io_eq) @[Cat.scala 30:58]
    node _GEN_34 = pad(_toint_T_4, 3) @[FPU.scala 486:22]
    node _toint_T_5 = and(_toint_T_3, _GEN_34) @[FPU.scala 486:22]
    node _toint_T_6 = orr(_toint_T_5) @[FPU.scala 486:53]
    node _toint_T_7 = shr(store, 32) @[FPU.scala 486:66]
    node _toint_T_8 = shl(_toint_T_7, 32) @[FPU.scala 486:77]
    node _GEN_35 = pad(_toint_T_6, 64) @[FPU.scala 486:57]
    node _toint_T_9 = or(_GEN_35, _toint_T_8) @[FPU.scala 486:57]
    node _GEN_29 = mux(_T_1, _GEN_26, _toint_T_9) @[FPU.scala 486:11 490:21]
    node _T = bits(in_rm, 0, 0) @[FPU.scala 479:14]
    skip
    skip
    skip
    skip
    skip
    node _classify_out_isQNaN_T_1 = bits(in_in1, 51, 51) @[FPU.scala 259:28]
    node classify_out_hi_hi_hi_hi_1 = and(_store_T_1, _classify_out_isQNaN_T_1) @[FPU.scala 259:24]
    skip
    node _classify_out_isSNaN_T_3 = not(_classify_out_isQNaN_T_1) @[FPU.scala 258:27]
    node classify_out_hi_hi_hi_lo_1 = and(_store_T_1, _classify_out_isSNaN_T_3) @[FPU.scala 258:24]
    node classify_out_hi_hi_hi_1 = cat(classify_out_hi_hi_hi_hi_1, classify_out_hi_hi_hi_lo_1) @[Cat.scala 30:58]
    node classify_out_codeHi_1 = bits(_store_T, 2, 1) @[FPU.scala 249:22]
    node classify_out_isSpecial_1 = eq(classify_out_codeHi_1, UInt<2>("h3")) @[FPU.scala 250:28]
    node _classify_out_isInf_T_2 = bits(_store_T, 0, 0) @[FPU.scala 256:35]
    node _classify_out_isInf_T_3 = not(_classify_out_isInf_T_2) @[FPU.scala 256:30]
    node classify_out_isInf_1 = and(classify_out_isSpecial_1, _classify_out_isInf_T_3) @[FPU.scala 256:27]
    skip
    node _classify_out_T_6 = not(store_unrecoded_rawIn__sign) @[FPU.scala 261:34]
    node classify_out_hi_hi_lo_1 = and(classify_out_isInf_1, _classify_out_T_6) @[FPU.scala 261:31]
    node classify_out_hi_hi_2 = cat(classify_out_hi_hi_hi_1, classify_out_hi_hi_lo_1) @[Cat.scala 30:58]
    node _classify_out_isNormal_T_4 = eq(classify_out_codeHi_1, UInt<2>("h1")) @[FPU.scala 254:27]
    node _classify_out_isHighSubnormalIn_T_1 = bits(in_in1, 61, 52) @[FPU.scala 252:30]
    node classify_out_isHighSubnormalIn_1 = lt(_classify_out_isHighSubnormalIn_T_1, UInt<10>("h2")) @[FPU.scala 252:55]
    node _classify_out_isNormal_T_5 = not(classify_out_isHighSubnormalIn_1) @[FPU.scala 254:42]
    node _classify_out_isNormal_T_6 = and(_classify_out_isNormal_T_4, _classify_out_isNormal_T_5) @[FPU.scala 254:39]
    node _classify_out_isNormal_T_7 = eq(classify_out_codeHi_1, UInt<2>("h2")) @[FPU.scala 254:71]
    node classify_out_isNormal_1 = or(_classify_out_isNormal_T_6, _classify_out_isNormal_T_7) @[FPU.scala 254:61]
    skip
    node classify_out_hi_lo_hi_1 = and(classify_out_isNormal_1, _classify_out_T_6) @[FPU.scala 261:50]
    node _classify_out_isSubnormal_T_3 = eq(_store_T, UInt<3>("h1")) @[FPU.scala 253:28]
    skip
    node _classify_out_isSubnormal_T_5 = and(_classify_out_isNormal_T_4, classify_out_isHighSubnormalIn_1) @[FPU.scala 253:62]
    node classify_out_isSubnormal_1 = or(_classify_out_isSubnormal_T_3, _classify_out_isSubnormal_T_5) @[FPU.scala 253:40]
    skip
    node classify_out_hi_lo_lo_1 = and(classify_out_isSubnormal_1, _classify_out_T_6) @[FPU.scala 262:21]
    node classify_out_hi_lo_2 = cat(classify_out_hi_lo_hi_1, classify_out_hi_lo_lo_1) @[Cat.scala 30:58]
    node classify_out_hi_2 = cat(classify_out_hi_hi_2, classify_out_hi_lo_2) @[Cat.scala 30:58]
    node classify_out_isZero_1 = eq(_store_T, UInt<3>("h0")) @[FPU.scala 255:23]
    skip
    node classify_out_lo_hi_hi_hi_1 = and(classify_out_isZero_1, _classify_out_T_6) @[FPU.scala 262:38]
    node classify_out_lo_hi_hi_lo_1 = and(classify_out_isZero_1, store_unrecoded_rawIn__sign) @[FPU.scala 262:55]
    node classify_out_lo_hi_hi_1 = cat(classify_out_lo_hi_hi_hi_1, classify_out_lo_hi_hi_lo_1) @[Cat.scala 30:58]
    node classify_out_lo_hi_lo_1 = and(classify_out_isSubnormal_1, store_unrecoded_rawIn__sign) @[FPU.scala 263:21]
    node classify_out_lo_hi_1 = cat(classify_out_lo_hi_hi_1, classify_out_lo_hi_lo_1) @[Cat.scala 30:58]
    node classify_out_lo_lo_hi_1 = and(classify_out_isNormal_1, store_unrecoded_rawIn__sign) @[FPU.scala 263:39]
    node classify_out_lo_lo_lo_1 = and(classify_out_isInf_1, store_unrecoded_rawIn__sign) @[FPU.scala 263:54]
    node classify_out_lo_lo_1 = cat(classify_out_lo_lo_hi_1, classify_out_lo_lo_lo_1) @[Cat.scala 30:58]
    node classify_out_lo_2 = cat(classify_out_lo_hi_1, classify_out_lo_lo_1) @[Cat.scala 30:58]
    node _classify_out_T_10 = cat(classify_out_hi_2, classify_out_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node _classify_out_expOut_T_1 = geq(_store_unrecoded_rawIn_isZero_T, UInt<3>("h6")) @[FPU.scala 275:36]
    node _classify_out_expOut_T_2 = or(store_unrecoded_rawIn_isZero, _classify_out_expOut_T_1) @[FPU.scala 275:25]
    node _classify_out_expOut_commonCase_T = add(store_unrecoded_rawIn_exp, UInt<12>("h100")) @[FPU.scala 274:31]
    node _classify_out_expOut_commonCase_T_1 = tail(_classify_out_expOut_commonCase_T, 1) @[FPU.scala 274:31]
    node _classify_out_expOut_commonCase_T_2 = sub(_classify_out_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 274:48]
    node classify_out_expOut_commonCase = tail(_classify_out_expOut_commonCase_T_2, 1) @[FPU.scala 274:48]
    node classify_out_expOut_lo = bits(classify_out_expOut_commonCase, 5, 0) @[FPU.scala 275:65]
    node _classify_out_expOut_T_3 = cat(_store_unrecoded_rawIn_isZero_T, classify_out_expOut_lo) @[Cat.scala 30:58]
    node _classify_out_expOut_T_4 = bits(classify_out_expOut_commonCase, 8, 0) @[FPU.scala 275:93]
    node classify_out_hi_lo = mux(_classify_out_expOut_T_2, _classify_out_expOut_T_3, _classify_out_expOut_T_4) @[FPU.scala 275:10]
    node classify_out_hi = cat(store_unrecoded_rawIn__sign, classify_out_hi_lo) @[Cat.scala 30:58]
    skip
    node _classify_out_fractOut_T = shl(store_unrecoded_rawIn_out_sig_lo, 24) @[FPU.scala 271:28]
    node classify_out_lo = shr(_classify_out_fractOut_T, 53) @[FPU.scala 271:38]
    node _classify_out_T = cat(classify_out_hi, classify_out_lo) @[Cat.scala 30:58]
    node classify_out_code = bits(_classify_out_T, 31, 29) @[FPU.scala 248:17]
    node classify_out_isNaN = andr(classify_out_code) @[FPU.scala 257:22]
    node _classify_out_isQNaN_T = bits(_classify_out_T, 22, 22) @[FPU.scala 259:28]
    node classify_out_hi_hi_hi_hi = and(classify_out_isNaN, _classify_out_isQNaN_T) @[FPU.scala 259:24]
    skip
    node _classify_out_isSNaN_T_1 = not(_classify_out_isQNaN_T) @[FPU.scala 258:27]
    node classify_out_hi_hi_hi_lo = and(classify_out_isNaN, _classify_out_isSNaN_T_1) @[FPU.scala 258:24]
    node classify_out_hi_hi_hi = cat(classify_out_hi_hi_hi_hi, classify_out_hi_hi_hi_lo) @[Cat.scala 30:58]
    node classify_out_codeHi = bits(classify_out_code, 2, 1) @[FPU.scala 249:22]
    node classify_out_isSpecial = eq(classify_out_codeHi, UInt<2>("h3")) @[FPU.scala 250:28]
    node _classify_out_isInf_T = bits(classify_out_code, 0, 0) @[FPU.scala 256:35]
    node _classify_out_isInf_T_1 = not(_classify_out_isInf_T) @[FPU.scala 256:30]
    node classify_out_isInf = and(classify_out_isSpecial, _classify_out_isInf_T_1) @[FPU.scala 256:27]
    node classify_out_sign = bits(_classify_out_T, 32, 32) @[FPU.scala 247:17]
    node _classify_out_T_1 = not(classify_out_sign) @[FPU.scala 261:34]
    node classify_out_hi_hi_lo = and(classify_out_isInf, _classify_out_T_1) @[FPU.scala 261:31]
    node classify_out_hi_hi_1 = cat(classify_out_hi_hi_hi, classify_out_hi_hi_lo) @[Cat.scala 30:58]
    node _classify_out_isNormal_T = eq(classify_out_codeHi, UInt<2>("h1")) @[FPU.scala 254:27]
    node _classify_out_isHighSubnormalIn_T = bits(_classify_out_T, 29, 23) @[FPU.scala 252:30]
    node classify_out_isHighSubnormalIn = lt(_classify_out_isHighSubnormalIn_T, UInt<7>("h2")) @[FPU.scala 252:55]
    node _classify_out_isNormal_T_1 = not(classify_out_isHighSubnormalIn) @[FPU.scala 254:42]
    node _classify_out_isNormal_T_2 = and(_classify_out_isNormal_T, _classify_out_isNormal_T_1) @[FPU.scala 254:39]
    node _classify_out_isNormal_T_3 = eq(classify_out_codeHi, UInt<2>("h2")) @[FPU.scala 254:71]
    node classify_out_isNormal = or(_classify_out_isNormal_T_2, _classify_out_isNormal_T_3) @[FPU.scala 254:61]
    skip
    node classify_out_hi_lo_hi = and(classify_out_isNormal, _classify_out_T_1) @[FPU.scala 261:50]
    node _classify_out_isSubnormal_T = eq(classify_out_code, UInt<3>("h1")) @[FPU.scala 253:28]
    skip
    node _classify_out_isSubnormal_T_2 = and(_classify_out_isNormal_T, classify_out_isHighSubnormalIn) @[FPU.scala 253:62]
    node classify_out_isSubnormal = or(_classify_out_isSubnormal_T, _classify_out_isSubnormal_T_2) @[FPU.scala 253:40]
    skip
    node classify_out_hi_lo_lo = and(classify_out_isSubnormal, _classify_out_T_1) @[FPU.scala 262:21]
    node classify_out_hi_lo_1 = cat(classify_out_hi_lo_hi, classify_out_hi_lo_lo) @[Cat.scala 30:58]
    node classify_out_hi_1 = cat(classify_out_hi_hi_1, classify_out_hi_lo_1) @[Cat.scala 30:58]
    node classify_out_isZero = eq(classify_out_code, UInt<3>("h0")) @[FPU.scala 255:23]
    skip
    node classify_out_lo_hi_hi_hi = and(classify_out_isZero, _classify_out_T_1) @[FPU.scala 262:38]
    node classify_out_lo_hi_hi_lo = and(classify_out_isZero, classify_out_sign) @[FPU.scala 262:55]
    node classify_out_lo_hi_hi = cat(classify_out_lo_hi_hi_hi, classify_out_lo_hi_hi_lo) @[Cat.scala 30:58]
    node classify_out_lo_hi_lo = and(classify_out_isSubnormal, classify_out_sign) @[FPU.scala 263:21]
    node classify_out_lo_hi = cat(classify_out_lo_hi_hi, classify_out_lo_hi_lo) @[Cat.scala 30:58]
    node classify_out_lo_lo_hi = and(classify_out_isNormal, classify_out_sign) @[FPU.scala 263:39]
    node classify_out_lo_lo_lo = and(classify_out_isInf, classify_out_sign) @[FPU.scala 263:54]
    node classify_out_lo_lo = cat(classify_out_lo_lo_hi, classify_out_lo_lo_lo) @[Cat.scala 30:58]
    node classify_out_lo_1 = cat(classify_out_lo_hi, classify_out_lo_lo) @[Cat.scala 30:58]
    node _classify_out_T_5 = cat(classify_out_hi_1, classify_out_lo_1) @[Cat.scala 30:58]
    node classify_out = mux(store_truncIdx, _classify_out_T_10, _classify_out_T_5) @[package.scala 32:76]
    skip
    skip
    node _GEN_36 = pad(classify_out, 64) @[FPU.scala 481:27]
    node _toint_T_2 = or(_GEN_36, _toint_T_8) @[FPU.scala 481:27]
    node _GEN_23 = mux(_T, _toint_T_2, store) @[FPU.scala 479:19 481:11]
    node toint = mux(in_wflags, _GEN_29, _GEN_23) @[FPU.scala 485:20]
    skip
    node io_out_bits_toint_lo = bits(toint, 31, 0) @[FPU.scala 476:59]
    node _io_out_bits_toint_T = bits(io_out_bits_toint_lo, 31, 31) @[package.scala 123:38]
    skip
    node io_out_bits_toint_hi = mux(_io_out_bits_toint_T, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 72:12]
    node _io_out_bits_toint_T_2 = cat(io_out_bits_toint_hi, io_out_bits_toint_lo) @[Cat.scala 30:58]
    skip
    node _GEN_28 = and(_T_1, cvtType) @[FPU.scala 488:13 490:21 492:15]
    node _GEN_24 = mux(_T, UInt<1>("h0"), intType_x6) @[FPU.scala 479:19 482:13]
    node intType = mux(in_wflags, _GEN_28, _GEN_24) @[FPU.scala 485:20]
    skip
    skip
    skip
    node _conv_io_signedOut_T = bits(in_typ, 0, 0) @[FPU.scala 496:35]
    skip
    node _io_out_bits_exc_T = bits(conv.io_intExceptionFlags, 2, 1) @[FPU.scala 498:55]
    node io_out_bits_exc_hi_hi = orr(_io_out_bits_exc_T) @[FPU.scala 498:62]
    node io_out_bits_exc_lo = bits(conv.io_intExceptionFlags, 0, 0) @[FPU.scala 498:104]
    node io_out_bits_exc_hi = cat(io_out_bits_exc_hi_hi, UInt<3>("h0")) @[Cat.scala 30:58]
    node _io_out_bits_exc_T_1 = cat(io_out_bits_exc_hi, io_out_bits_exc_lo) @[Cat.scala 30:58]
    skip
    skip
    node _io_out_bits_exc_T_2 = not(io_out_bits_exc_hi_hi_1) @[FPU.scala 512:55]
    skip
    node io_out_bits_exc_lo_1 = and(_io_out_bits_exc_T_2, io_out_bits_exc_lo) @[FPU.scala 512:64]
    node io_out_bits_exc_hi_1 = cat(io_out_bits_exc_hi_hi_1, UInt<3>("h0")) @[Cat.scala 30:58]
    node _io_out_bits_exc_T_4 = cat(io_out_bits_exc_hi_1, io_out_bits_exc_lo_1) @[Cat.scala 30:58]
    node _GEN_27 = mux(_T_2, _io_out_bits_exc_T_4, _io_out_bits_exc_T_1) @[FPU.scala 498:23 502:30 512:27]
    node _GEN_30 = mux(_T_1, _GEN_27, dcmp.io_exceptionFlags) @[FPU.scala 487:21 490:21]
    skip
    node _io_out_bits_lt_T = asSInt(dcmp.io_a) @[FPU.scala 519:46]
    node _io_out_bits_lt_T_1 = lt(_io_out_bits_lt_T, SInt<65>("h0")) @[FPU.scala 519:53]
    node _io_out_bits_lt_T_2 = asSInt(dcmp.io_b) @[FPU.scala 519:72]
    node _io_out_bits_lt_T_3 = geq(_io_out_bits_lt_T_2, SInt<65>("h0")) @[FPU.scala 519:79]
    node _io_out_bits_lt_T_4 = and(_io_out_bits_lt_T_1, _io_out_bits_lt_T_3) @[FPU.scala 519:59]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out_bits_in_rm <= in_rm @[FPU.scala 520:18]
    skip
    skip
    skip
    io_out_bits_in_in1 <= in_in1 @[FPU.scala 520:18]
    io_out_bits_in_in2 <= in_in2 @[FPU.scala 520:18]
    skip
    io_out_bits_lt <= or(dcmp.io_lt, _io_out_bits_lt_T_4) @[FPU.scala 519:32]
    io_out_bits_store <= mux(store_truncIdx, _store_T_3, _store_T_4) @[package.scala 32:76]
    io_out_bits_toint <= mux(intType, toint, _io_out_bits_toint_T_2) @[package.scala 32:76]
    io_out_bits_exc <= mux(in_wflags, _GEN_30, UInt<5>("h0")) @[FPU.scala 477:19 485:20]
    skip
    skip
    skip
    in_ren2 <= mux(io_in_valid, io_in_bits_ren2, in_ren2) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    in_typeTagOut <= mux(io_in_valid, io_in_bits_typeTagOut, in_typeTagOut) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    skip
    skip
    in_wflags <= mux(io_in_valid, io_in_bits_wflags, in_wflags) @[Reg.scala 15:16 16:{19,23}]
    in_rm <= mux(io_in_valid, io_in_bits_rm, in_rm) @[Reg.scala 15:16 16:{19,23}]
    skip
    in_typ <= mux(io_in_valid, io_in_bits_typ, in_typ) @[Reg.scala 15:16 16:{19,23}]
    in_fmt <= mux(io_in_valid, io_in_bits_fmt, in_fmt) @[Reg.scala 15:16 16:{19,23}]
    in_in1 <= mux(io_in_valid, io_in_bits_in1, in_in1) @[Reg.scala 15:16 16:{19,23}]
    in_in2 <= mux(io_in_valid, io_in_bits_in2, in_in2) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    dcmp.io_a <= in_in1 @[FPU.scala 466:13]
    dcmp.io_b <= in_in2 @[FPU.scala 467:13]
    dcmp.io_signaling <= not(_dcmp_io_signaling_T) @[FPU.scala 468:24]
    conv.io_in <= in_in1 @[FPU.scala 494:18]
    conv.io_roundingMode <= in_rm @[FPU.scala 495:28]
    conv.io_signedOut <= not(_conv_io_signedOut_T) @[FPU.scala 496:28]
    narrow.io_in <= in_in1 @[FPU.scala 504:24]
    narrow.io_roundingMode <= in_rm @[FPU.scala 505:34]
    narrow.io_signedOut <= not(_conv_io_signedOut_T) @[FPU.scala 506:34]

  module IntToFP :
    input clock : Clock
    input reset : UInt<1>
    input io_in_valid : UInt<1>
    input io_in_bits_typeTagIn : UInt<2>
    input io_in_bits_wflags : UInt<1>
    input io_in_bits_rm : UInt<3>
    input io_in_bits_typ : UInt<2>
    input io_in_bits_in1 : UInt<64>
    output io_out_bits_data : UInt<65>
    output io_out_bits_exc : UInt<5>

    inst i2f of INToRecFN @[FPU.scala 551:23]
    inst i2f_1 of INToRecFN_1 @[FPU.scala 551:23]
    reg inPipe_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), inPipe_valid) @[Valid.scala 117:22]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg inPipe_bits_typeTagIn : UInt<2>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_typeTagIn) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg inPipe_bits_wflags : UInt<1>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_wflags) @[Reg.scala 15:16]
    reg inPipe_bits_rm : UInt<3>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_rm) @[Reg.scala 15:16]
    reg inPipe_bits_typ : UInt<2>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_typ) @[Reg.scala 15:16]
    reg inPipe_bits_in1 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_in1) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node mux_data_truncIdx = bits(inPipe_bits_typeTagIn, 0, 0) @[package.scala 31:49]
    skip
    node _mux_data_T_1 = mux(mux_data_truncIdx, UInt<64>("h0"), UInt<64>("hffffffff00000000")) @[package.scala 32:76]
    skip
    node _mux_data_T_2 = or(_mux_data_T_1, inPipe_bits_in1) @[FPU.scala 426:23]
    node mux_data_rawIn_sign = bits(_mux_data_T_2, 63, 63) @[rawFloatFromFN.scala 46:22]
    node mux_data_rawIn_expIn = bits(_mux_data_T_2, 62, 52) @[rawFloatFromFN.scala 47:23]
    node mux_data_rawIn_fractIn = bits(_mux_data_T_2, 51, 0) @[rawFloatFromFN.scala 48:25]
    node mux_data_rawIn_isZeroExpIn = eq(mux_data_rawIn_expIn, UInt<11>("h0")) @[rawFloatFromFN.scala 50:34]
    node mux_data_rawIn_isZeroFractIn = eq(mux_data_rawIn_fractIn, UInt<52>("h0")) @[rawFloatFromFN.scala 51:38]
    skip
    node _mux_data_rawIn_normDist_T_1 = bits(mux_data_rawIn_fractIn, 1, 1) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_2 = bits(mux_data_rawIn_fractIn, 2, 2) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_3 = bits(mux_data_rawIn_fractIn, 3, 3) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_4 = bits(mux_data_rawIn_fractIn, 4, 4) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_5 = bits(mux_data_rawIn_fractIn, 5, 5) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_6 = bits(mux_data_rawIn_fractIn, 6, 6) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_7 = bits(mux_data_rawIn_fractIn, 7, 7) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_8 = bits(mux_data_rawIn_fractIn, 8, 8) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_9 = bits(mux_data_rawIn_fractIn, 9, 9) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_10 = bits(mux_data_rawIn_fractIn, 10, 10) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_11 = bits(mux_data_rawIn_fractIn, 11, 11) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_12 = bits(mux_data_rawIn_fractIn, 12, 12) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_13 = bits(mux_data_rawIn_fractIn, 13, 13) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_14 = bits(mux_data_rawIn_fractIn, 14, 14) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_15 = bits(mux_data_rawIn_fractIn, 15, 15) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_16 = bits(mux_data_rawIn_fractIn, 16, 16) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_17 = bits(mux_data_rawIn_fractIn, 17, 17) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_18 = bits(mux_data_rawIn_fractIn, 18, 18) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_19 = bits(mux_data_rawIn_fractIn, 19, 19) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_20 = bits(mux_data_rawIn_fractIn, 20, 20) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_21 = bits(mux_data_rawIn_fractIn, 21, 21) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_22 = bits(mux_data_rawIn_fractIn, 22, 22) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_23 = bits(mux_data_rawIn_fractIn, 23, 23) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_24 = bits(mux_data_rawIn_fractIn, 24, 24) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_25 = bits(mux_data_rawIn_fractIn, 25, 25) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_26 = bits(mux_data_rawIn_fractIn, 26, 26) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_27 = bits(mux_data_rawIn_fractIn, 27, 27) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_28 = bits(mux_data_rawIn_fractIn, 28, 28) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_29 = bits(mux_data_rawIn_fractIn, 29, 29) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_30 = bits(mux_data_rawIn_fractIn, 30, 30) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_31 = bits(mux_data_rawIn_fractIn, 31, 31) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_32 = bits(mux_data_rawIn_fractIn, 32, 32) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_33 = bits(mux_data_rawIn_fractIn, 33, 33) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_34 = bits(mux_data_rawIn_fractIn, 34, 34) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_35 = bits(mux_data_rawIn_fractIn, 35, 35) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_36 = bits(mux_data_rawIn_fractIn, 36, 36) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_37 = bits(mux_data_rawIn_fractIn, 37, 37) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_38 = bits(mux_data_rawIn_fractIn, 38, 38) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_39 = bits(mux_data_rawIn_fractIn, 39, 39) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_40 = bits(mux_data_rawIn_fractIn, 40, 40) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_41 = bits(mux_data_rawIn_fractIn, 41, 41) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_42 = bits(mux_data_rawIn_fractIn, 42, 42) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_43 = bits(mux_data_rawIn_fractIn, 43, 43) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_44 = bits(mux_data_rawIn_fractIn, 44, 44) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_45 = bits(mux_data_rawIn_fractIn, 45, 45) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_46 = bits(mux_data_rawIn_fractIn, 46, 46) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_47 = bits(mux_data_rawIn_fractIn, 47, 47) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_48 = bits(mux_data_rawIn_fractIn, 48, 48) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_49 = bits(mux_data_rawIn_fractIn, 49, 49) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_50 = bits(mux_data_rawIn_fractIn, 50, 50) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_51 = bits(mux_data_rawIn_fractIn, 51, 51) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_52 = mux(_mux_data_rawIn_normDist_T_1, UInt<6>("h32"), UInt<6>("h33")) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_53 = mux(_mux_data_rawIn_normDist_T_2, UInt<6>("h31"), _mux_data_rawIn_normDist_T_52) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_54 = mux(_mux_data_rawIn_normDist_T_3, UInt<6>("h30"), _mux_data_rawIn_normDist_T_53) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_55 = mux(_mux_data_rawIn_normDist_T_4, UInt<6>("h2f"), _mux_data_rawIn_normDist_T_54) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_56 = mux(_mux_data_rawIn_normDist_T_5, UInt<6>("h2e"), _mux_data_rawIn_normDist_T_55) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_57 = mux(_mux_data_rawIn_normDist_T_6, UInt<6>("h2d"), _mux_data_rawIn_normDist_T_56) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_58 = mux(_mux_data_rawIn_normDist_T_7, UInt<6>("h2c"), _mux_data_rawIn_normDist_T_57) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_59 = mux(_mux_data_rawIn_normDist_T_8, UInt<6>("h2b"), _mux_data_rawIn_normDist_T_58) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_60 = mux(_mux_data_rawIn_normDist_T_9, UInt<6>("h2a"), _mux_data_rawIn_normDist_T_59) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_61 = mux(_mux_data_rawIn_normDist_T_10, UInt<6>("h29"), _mux_data_rawIn_normDist_T_60) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_62 = mux(_mux_data_rawIn_normDist_T_11, UInt<6>("h28"), _mux_data_rawIn_normDist_T_61) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_63 = mux(_mux_data_rawIn_normDist_T_12, UInt<6>("h27"), _mux_data_rawIn_normDist_T_62) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_64 = mux(_mux_data_rawIn_normDist_T_13, UInt<6>("h26"), _mux_data_rawIn_normDist_T_63) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_65 = mux(_mux_data_rawIn_normDist_T_14, UInt<6>("h25"), _mux_data_rawIn_normDist_T_64) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_66 = mux(_mux_data_rawIn_normDist_T_15, UInt<6>("h24"), _mux_data_rawIn_normDist_T_65) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_67 = mux(_mux_data_rawIn_normDist_T_16, UInt<6>("h23"), _mux_data_rawIn_normDist_T_66) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_68 = mux(_mux_data_rawIn_normDist_T_17, UInt<6>("h22"), _mux_data_rawIn_normDist_T_67) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_69 = mux(_mux_data_rawIn_normDist_T_18, UInt<6>("h21"), _mux_data_rawIn_normDist_T_68) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_70 = mux(_mux_data_rawIn_normDist_T_19, UInt<6>("h20"), _mux_data_rawIn_normDist_T_69) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_71 = mux(_mux_data_rawIn_normDist_T_20, UInt<6>("h1f"), _mux_data_rawIn_normDist_T_70) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_72 = mux(_mux_data_rawIn_normDist_T_21, UInt<6>("h1e"), _mux_data_rawIn_normDist_T_71) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_73 = mux(_mux_data_rawIn_normDist_T_22, UInt<6>("h1d"), _mux_data_rawIn_normDist_T_72) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_74 = mux(_mux_data_rawIn_normDist_T_23, UInt<6>("h1c"), _mux_data_rawIn_normDist_T_73) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_75 = mux(_mux_data_rawIn_normDist_T_24, UInt<6>("h1b"), _mux_data_rawIn_normDist_T_74) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_76 = mux(_mux_data_rawIn_normDist_T_25, UInt<6>("h1a"), _mux_data_rawIn_normDist_T_75) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_77 = mux(_mux_data_rawIn_normDist_T_26, UInt<6>("h19"), _mux_data_rawIn_normDist_T_76) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_78 = mux(_mux_data_rawIn_normDist_T_27, UInt<6>("h18"), _mux_data_rawIn_normDist_T_77) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_79 = mux(_mux_data_rawIn_normDist_T_28, UInt<6>("h17"), _mux_data_rawIn_normDist_T_78) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_80 = mux(_mux_data_rawIn_normDist_T_29, UInt<6>("h16"), _mux_data_rawIn_normDist_T_79) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_81 = mux(_mux_data_rawIn_normDist_T_30, UInt<6>("h15"), _mux_data_rawIn_normDist_T_80) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_82 = mux(_mux_data_rawIn_normDist_T_31, UInt<6>("h14"), _mux_data_rawIn_normDist_T_81) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_83 = mux(_mux_data_rawIn_normDist_T_32, UInt<6>("h13"), _mux_data_rawIn_normDist_T_82) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_84 = mux(_mux_data_rawIn_normDist_T_33, UInt<6>("h12"), _mux_data_rawIn_normDist_T_83) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_85 = mux(_mux_data_rawIn_normDist_T_34, UInt<6>("h11"), _mux_data_rawIn_normDist_T_84) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_86 = mux(_mux_data_rawIn_normDist_T_35, UInt<6>("h10"), _mux_data_rawIn_normDist_T_85) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_87 = mux(_mux_data_rawIn_normDist_T_36, UInt<6>("hf"), _mux_data_rawIn_normDist_T_86) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_88 = mux(_mux_data_rawIn_normDist_T_37, UInt<6>("he"), _mux_data_rawIn_normDist_T_87) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_89 = mux(_mux_data_rawIn_normDist_T_38, UInt<6>("hd"), _mux_data_rawIn_normDist_T_88) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_90 = mux(_mux_data_rawIn_normDist_T_39, UInt<6>("hc"), _mux_data_rawIn_normDist_T_89) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_91 = mux(_mux_data_rawIn_normDist_T_40, UInt<6>("hb"), _mux_data_rawIn_normDist_T_90) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_92 = mux(_mux_data_rawIn_normDist_T_41, UInt<6>("ha"), _mux_data_rawIn_normDist_T_91) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_93 = mux(_mux_data_rawIn_normDist_T_42, UInt<6>("h9"), _mux_data_rawIn_normDist_T_92) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_94 = mux(_mux_data_rawIn_normDist_T_43, UInt<6>("h8"), _mux_data_rawIn_normDist_T_93) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_95 = mux(_mux_data_rawIn_normDist_T_44, UInt<6>("h7"), _mux_data_rawIn_normDist_T_94) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_96 = mux(_mux_data_rawIn_normDist_T_45, UInt<6>("h6"), _mux_data_rawIn_normDist_T_95) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_97 = mux(_mux_data_rawIn_normDist_T_46, UInt<6>("h5"), _mux_data_rawIn_normDist_T_96) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_98 = mux(_mux_data_rawIn_normDist_T_47, UInt<6>("h4"), _mux_data_rawIn_normDist_T_97) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_99 = mux(_mux_data_rawIn_normDist_T_48, UInt<6>("h3"), _mux_data_rawIn_normDist_T_98) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_100 = mux(_mux_data_rawIn_normDist_T_49, UInt<6>("h2"), _mux_data_rawIn_normDist_T_99) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_101 = mux(_mux_data_rawIn_normDist_T_50, UInt<6>("h1"), _mux_data_rawIn_normDist_T_100) @[Mux.scala 47:69]
    node mux_data_rawIn_normDist = mux(_mux_data_rawIn_normDist_T_51, UInt<6>("h0"), _mux_data_rawIn_normDist_T_101) @[Mux.scala 47:69]
    node _mux_data_rawIn_subnormFract_T = dshl(mux_data_rawIn_fractIn, mux_data_rawIn_normDist) @[rawFloatFromFN.scala 54:36]
    node _mux_data_rawIn_subnormFract_T_1 = bits(_mux_data_rawIn_subnormFract_T, 50, 0) @[rawFloatFromFN.scala 54:47]
    node mux_data_rawIn_subnormFract = shl(_mux_data_rawIn_subnormFract_T_1, 1) @[rawFloatFromFN.scala 54:64]
    node _GEN_24 = pad(mux_data_rawIn_normDist, 12) @[rawFloatFromFN.scala 57:26]
    node _mux_data_rawIn_adjustedExp_T = xor(_GEN_24, UInt<12>("hfff")) @[rawFloatFromFN.scala 57:26]
    node _mux_data_rawIn_adjustedExp_T_1 = mux(mux_data_rawIn_isZeroExpIn, _mux_data_rawIn_adjustedExp_T, pad(mux_data_rawIn_expIn, 12)) @[rawFloatFromFN.scala 56:16]
    node _mux_data_rawIn_adjustedExp_T_2 = mux(mux_data_rawIn_isZeroExpIn, UInt<2>("h2"), UInt<2>("h1")) @[rawFloatFromFN.scala 60:27]
    node _GEN_25 = pad(_mux_data_rawIn_adjustedExp_T_2, 11) @[rawFloatFromFN.scala 60:22]
    node _mux_data_rawIn_adjustedExp_T_3 = or(UInt<11>("h400"), _GEN_25) @[rawFloatFromFN.scala 60:22]
    node _GEN_26 = pad(_mux_data_rawIn_adjustedExp_T_3, 12) @[rawFloatFromFN.scala 59:15]
    node _mux_data_rawIn_adjustedExp_T_4 = add(_mux_data_rawIn_adjustedExp_T_1, _GEN_26) @[rawFloatFromFN.scala 59:15]
    node mux_data_rawIn_adjustedExp = tail(_mux_data_rawIn_adjustedExp_T_4, 1) @[rawFloatFromFN.scala 59:15]
    node mux_data_rawIn_isZero = and(mux_data_rawIn_isZeroExpIn, mux_data_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 62:34]
    node _mux_data_rawIn_isSpecial_T = bits(mux_data_rawIn_adjustedExp, 11, 10) @[rawFloatFromFN.scala 63:37]
    node mux_data_rawIn_isSpecial = eq(_mux_data_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    node _mux_data_rawIn_out_isNaN_T = not(mux_data_rawIn_isZeroFractIn) @[rawFloatFromFN.scala 66:36]
    node mux_data_rawIn__isNaN = and(mux_data_rawIn_isSpecial, _mux_data_rawIn_out_isNaN_T) @[rawFloatFromFN.scala 66:33]
    skip
    skip
    node mux_data_rawIn__sExp = cvt(mux_data_rawIn_adjustedExp) @[rawFloatFromFN.scala 70:48]
    node mux_data_rawIn_out_sig_hi_lo = not(mux_data_rawIn_isZero) @[rawFloatFromFN.scala 72:29]
    node mux_data_rawIn_out_sig_lo = mux(mux_data_rawIn_isZeroExpIn, mux_data_rawIn_subnormFract, mux_data_rawIn_fractIn) @[rawFloatFromFN.scala 72:42]
    node mux_data_rawIn_out_sig_hi = cat(UInt<1>("h0"), mux_data_rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node mux_data_rawIn__sig = cat(mux_data_rawIn_out_sig_hi, mux_data_rawIn_out_sig_lo) @[Cat.scala 30:58]
    skip
    node _mux_data_T_3 = bits(mux_data_rawIn__sExp, 11, 9) @[recFNFromFN.scala 48:53]
    skip
    node _mux_data_T_4 = mux(mux_data_rawIn_isZero, UInt<3>("h0"), _mux_data_T_3) @[recFNFromFN.scala 48:16]
    skip
    skip
    node _GEN_27 = pad(mux_data_rawIn__isNaN, 3) @[recFNFromFN.scala 48:79]
    node mux_data_hi_lo = or(_mux_data_T_4, _GEN_27) @[recFNFromFN.scala 48:79]
    node mux_data_lo_hi = bits(mux_data_rawIn__sExp, 8, 0) @[recFNFromFN.scala 50:23]
    skip
    node mux_data_lo_lo = bits(mux_data_rawIn__sig, 51, 0) @[recFNFromFN.scala 51:22]
    node mux_data_lo = cat(mux_data_lo_hi, mux_data_lo_lo) @[Cat.scala 30:58]
    skip
    node mux_data_hi = cat(mux_data_rawIn_sign, mux_data_hi_lo) @[Cat.scala 30:58]
    node _mux_data_T_6 = cat(mux_data_hi, mux_data_lo) @[Cat.scala 30:58]
    node mux_data_rawIn_sign_1 = bits(_mux_data_T_2, 31, 31) @[rawFloatFromFN.scala 46:22]
    node mux_data_rawIn_expIn_1 = bits(_mux_data_T_2, 30, 23) @[rawFloatFromFN.scala 47:23]
    node mux_data_rawIn_fractIn_1 = bits(_mux_data_T_2, 22, 0) @[rawFloatFromFN.scala 48:25]
    node mux_data_rawIn_isZeroExpIn_1 = eq(mux_data_rawIn_expIn_1, UInt<8>("h0")) @[rawFloatFromFN.scala 50:34]
    node mux_data_rawIn_isZeroFractIn_1 = eq(mux_data_rawIn_fractIn_1, UInt<23>("h0")) @[rawFloatFromFN.scala 51:38]
    skip
    node _mux_data_rawIn_normDist_T_103 = bits(mux_data_rawIn_fractIn_1, 1, 1) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_104 = bits(mux_data_rawIn_fractIn_1, 2, 2) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_105 = bits(mux_data_rawIn_fractIn_1, 3, 3) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_106 = bits(mux_data_rawIn_fractIn_1, 4, 4) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_107 = bits(mux_data_rawIn_fractIn_1, 5, 5) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_108 = bits(mux_data_rawIn_fractIn_1, 6, 6) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_109 = bits(mux_data_rawIn_fractIn_1, 7, 7) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_110 = bits(mux_data_rawIn_fractIn_1, 8, 8) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_111 = bits(mux_data_rawIn_fractIn_1, 9, 9) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_112 = bits(mux_data_rawIn_fractIn_1, 10, 10) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_113 = bits(mux_data_rawIn_fractIn_1, 11, 11) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_114 = bits(mux_data_rawIn_fractIn_1, 12, 12) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_115 = bits(mux_data_rawIn_fractIn_1, 13, 13) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_116 = bits(mux_data_rawIn_fractIn_1, 14, 14) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_117 = bits(mux_data_rawIn_fractIn_1, 15, 15) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_118 = bits(mux_data_rawIn_fractIn_1, 16, 16) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_119 = bits(mux_data_rawIn_fractIn_1, 17, 17) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_120 = bits(mux_data_rawIn_fractIn_1, 18, 18) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_121 = bits(mux_data_rawIn_fractIn_1, 19, 19) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_122 = bits(mux_data_rawIn_fractIn_1, 20, 20) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_123 = bits(mux_data_rawIn_fractIn_1, 21, 21) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_124 = bits(mux_data_rawIn_fractIn_1, 22, 22) @[primitives.scala 92:52]
    node _mux_data_rawIn_normDist_T_125 = mux(_mux_data_rawIn_normDist_T_103, UInt<5>("h15"), UInt<5>("h16")) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_126 = mux(_mux_data_rawIn_normDist_T_104, UInt<5>("h14"), _mux_data_rawIn_normDist_T_125) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_127 = mux(_mux_data_rawIn_normDist_T_105, UInt<5>("h13"), _mux_data_rawIn_normDist_T_126) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_128 = mux(_mux_data_rawIn_normDist_T_106, UInt<5>("h12"), _mux_data_rawIn_normDist_T_127) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_129 = mux(_mux_data_rawIn_normDist_T_107, UInt<5>("h11"), _mux_data_rawIn_normDist_T_128) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_130 = mux(_mux_data_rawIn_normDist_T_108, UInt<5>("h10"), _mux_data_rawIn_normDist_T_129) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_131 = mux(_mux_data_rawIn_normDist_T_109, UInt<5>("hf"), _mux_data_rawIn_normDist_T_130) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_132 = mux(_mux_data_rawIn_normDist_T_110, UInt<5>("he"), _mux_data_rawIn_normDist_T_131) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_133 = mux(_mux_data_rawIn_normDist_T_111, UInt<5>("hd"), _mux_data_rawIn_normDist_T_132) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_134 = mux(_mux_data_rawIn_normDist_T_112, UInt<5>("hc"), _mux_data_rawIn_normDist_T_133) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_135 = mux(_mux_data_rawIn_normDist_T_113, UInt<5>("hb"), _mux_data_rawIn_normDist_T_134) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_136 = mux(_mux_data_rawIn_normDist_T_114, UInt<5>("ha"), _mux_data_rawIn_normDist_T_135) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_137 = mux(_mux_data_rawIn_normDist_T_115, UInt<5>("h9"), _mux_data_rawIn_normDist_T_136) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_138 = mux(_mux_data_rawIn_normDist_T_116, UInt<5>("h8"), _mux_data_rawIn_normDist_T_137) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_139 = mux(_mux_data_rawIn_normDist_T_117, UInt<5>("h7"), _mux_data_rawIn_normDist_T_138) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_140 = mux(_mux_data_rawIn_normDist_T_118, UInt<5>("h6"), _mux_data_rawIn_normDist_T_139) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_141 = mux(_mux_data_rawIn_normDist_T_119, UInt<5>("h5"), _mux_data_rawIn_normDist_T_140) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_142 = mux(_mux_data_rawIn_normDist_T_120, UInt<5>("h4"), _mux_data_rawIn_normDist_T_141) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_143 = mux(_mux_data_rawIn_normDist_T_121, UInt<5>("h3"), _mux_data_rawIn_normDist_T_142) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_144 = mux(_mux_data_rawIn_normDist_T_122, UInt<5>("h2"), _mux_data_rawIn_normDist_T_143) @[Mux.scala 47:69]
    node _mux_data_rawIn_normDist_T_145 = mux(_mux_data_rawIn_normDist_T_123, UInt<5>("h1"), _mux_data_rawIn_normDist_T_144) @[Mux.scala 47:69]
    node mux_data_rawIn_normDist_1 = mux(_mux_data_rawIn_normDist_T_124, UInt<5>("h0"), _mux_data_rawIn_normDist_T_145) @[Mux.scala 47:69]
    node _mux_data_rawIn_subnormFract_T_2 = dshl(mux_data_rawIn_fractIn_1, mux_data_rawIn_normDist_1) @[rawFloatFromFN.scala 54:36]
    node _mux_data_rawIn_subnormFract_T_3 = bits(_mux_data_rawIn_subnormFract_T_2, 21, 0) @[rawFloatFromFN.scala 54:47]
    node mux_data_rawIn_subnormFract_1 = shl(_mux_data_rawIn_subnormFract_T_3, 1) @[rawFloatFromFN.scala 54:64]
    node _GEN_28 = pad(mux_data_rawIn_normDist_1, 9) @[rawFloatFromFN.scala 57:26]
    node _mux_data_rawIn_adjustedExp_T_5 = xor(_GEN_28, UInt<9>("h1ff")) @[rawFloatFromFN.scala 57:26]
    node _mux_data_rawIn_adjustedExp_T_6 = mux(mux_data_rawIn_isZeroExpIn_1, _mux_data_rawIn_adjustedExp_T_5, pad(mux_data_rawIn_expIn_1, 9)) @[rawFloatFromFN.scala 56:16]
    node _mux_data_rawIn_adjustedExp_T_7 = mux(mux_data_rawIn_isZeroExpIn_1, UInt<2>("h2"), UInt<2>("h1")) @[rawFloatFromFN.scala 60:27]
    node _GEN_29 = pad(_mux_data_rawIn_adjustedExp_T_7, 8) @[rawFloatFromFN.scala 60:22]
    node _mux_data_rawIn_adjustedExp_T_8 = or(UInt<8>("h80"), _GEN_29) @[rawFloatFromFN.scala 60:22]
    node _GEN_30 = pad(_mux_data_rawIn_adjustedExp_T_8, 9) @[rawFloatFromFN.scala 59:15]
    node _mux_data_rawIn_adjustedExp_T_9 = add(_mux_data_rawIn_adjustedExp_T_6, _GEN_30) @[rawFloatFromFN.scala 59:15]
    node mux_data_rawIn_adjustedExp_1 = tail(_mux_data_rawIn_adjustedExp_T_9, 1) @[rawFloatFromFN.scala 59:15]
    node mux_data_rawIn_isZero_1 = and(mux_data_rawIn_isZeroExpIn_1, mux_data_rawIn_isZeroFractIn_1) @[rawFloatFromFN.scala 62:34]
    node _mux_data_rawIn_isSpecial_T_1 = bits(mux_data_rawIn_adjustedExp_1, 8, 7) @[rawFloatFromFN.scala 63:37]
    node mux_data_rawIn_isSpecial_1 = eq(_mux_data_rawIn_isSpecial_T_1, UInt<2>("h3")) @[rawFloatFromFN.scala 63:62]
    node _mux_data_rawIn_out_isNaN_T_2 = not(mux_data_rawIn_isZeroFractIn_1) @[rawFloatFromFN.scala 66:36]
    node mux_data_rawIn_1_isNaN = and(mux_data_rawIn_isSpecial_1, _mux_data_rawIn_out_isNaN_T_2) @[rawFloatFromFN.scala 66:33]
    skip
    skip
    node mux_data_rawIn_1_sExp = cvt(mux_data_rawIn_adjustedExp_1) @[rawFloatFromFN.scala 70:48]
    node mux_data_rawIn_out_sig_hi_lo_1 = not(mux_data_rawIn_isZero_1) @[rawFloatFromFN.scala 72:29]
    node mux_data_rawIn_out_sig_lo_1 = mux(mux_data_rawIn_isZeroExpIn_1, mux_data_rawIn_subnormFract_1, mux_data_rawIn_fractIn_1) @[rawFloatFromFN.scala 72:42]
    node mux_data_rawIn_out_sig_hi_1 = cat(UInt<1>("h0"), mux_data_rawIn_out_sig_hi_lo_1) @[Cat.scala 30:58]
    node mux_data_rawIn_1_sig = cat(mux_data_rawIn_out_sig_hi_1, mux_data_rawIn_out_sig_lo_1) @[Cat.scala 30:58]
    skip
    node _mux_data_T_7 = bits(mux_data_rawIn_1_sExp, 8, 6) @[recFNFromFN.scala 48:53]
    skip
    node _mux_data_T_8 = mux(mux_data_rawIn_isZero_1, UInt<3>("h0"), _mux_data_T_7) @[recFNFromFN.scala 48:16]
    skip
    skip
    node _GEN_31 = pad(mux_data_rawIn_1_isNaN, 3) @[recFNFromFN.scala 48:79]
    node mux_data_hi_lo_1 = or(_mux_data_T_8, _GEN_31) @[recFNFromFN.scala 48:79]
    node mux_data_lo_hi_1 = bits(mux_data_rawIn_1_sExp, 5, 0) @[recFNFromFN.scala 50:23]
    skip
    node mux_data_lo_lo_1 = bits(mux_data_rawIn_1_sig, 22, 0) @[recFNFromFN.scala 51:22]
    node mux_data_lo_1 = cat(mux_data_lo_hi_1, mux_data_lo_lo_1) @[Cat.scala 30:58]
    skip
    node mux_data_hi_1 = cat(mux_data_rawIn_sign_1, mux_data_hi_lo_1) @[Cat.scala 30:58]
    node _mux_data_T_10 = cat(mux_data_hi_1, mux_data_lo_1) @[Cat.scala 30:58]
    node mux_data_swizzledNaN_hi_hi_hi = bits(_mux_data_T_6, 64, 61) @[FPU.scala 332:8]
    node _mux_data_swizzledNaN_T = bits(_mux_data_T_6, 51, 32) @[FPU.scala 333:8]
    node mux_data_swizzledNaN_hi_hi_lo = andr(_mux_data_swizzledNaN_T) @[FPU.scala 333:42]
    node mux_data_swizzledNaN_hi_lo_hi = bits(_mux_data_T_6, 59, 53) @[FPU.scala 334:8]
    node mux_data_swizzledNaN_hi_lo_lo = bits(_mux_data_T_10, 31, 31) @[FPU.scala 335:8]
    skip
    node mux_data_swizzledNaN_lo_hi_lo = bits(_mux_data_T_10, 32, 32) @[FPU.scala 337:8]
    node mux_data_swizzledNaN_lo_lo = bits(_mux_data_T_10, 30, 0) @[FPU.scala 338:8]
    node mux_data_swizzledNaN_lo_hi = cat(_mux_data_swizzledNaN_T, mux_data_swizzledNaN_lo_hi_lo) @[Cat.scala 30:58]
    node mux_data_swizzledNaN_lo = cat(mux_data_swizzledNaN_lo_hi, mux_data_swizzledNaN_lo_lo) @[Cat.scala 30:58]
    node mux_data_swizzledNaN_hi_lo = cat(mux_data_swizzledNaN_hi_lo_hi, mux_data_swizzledNaN_hi_lo_lo) @[Cat.scala 30:58]
    node mux_data_swizzledNaN_hi_hi = cat(mux_data_swizzledNaN_hi_hi_hi, mux_data_swizzledNaN_hi_hi_lo) @[Cat.scala 30:58]
    node mux_data_swizzledNaN_hi = cat(mux_data_swizzledNaN_hi_hi, mux_data_swizzledNaN_hi_lo) @[Cat.scala 30:58]
    node mux_data_swizzledNaN = cat(mux_data_swizzledNaN_hi, mux_data_swizzledNaN_lo) @[Cat.scala 30:58]
    node _mux_data_T_11 = bits(_mux_data_T_6, 63, 61) @[FPU.scala 243:25]
    node _mux_data_T_12 = andr(_mux_data_T_11) @[FPU.scala 243:56]
    node _mux_data_T_13 = mux(_mux_data_T_12, mux_data_swizzledNaN, _mux_data_T_6) @[FPU.scala 339:8]
    node intValue_res_x1 = asSInt(inPipe_bits_in1) @[FPU.scala 537:39]
    node intValue_smallInt = bits(inPipe_bits_in1, 31, 0) @[FPU.scala 539:33]
    skip
    node _intValue_T = bits(inPipe_bits_typ, 1, 1) @[package.scala 154:13]
    node _intValue_T_1 = not(_intValue_T) @[FPU.scala 540:57]
    node _intValue_res_T = bits(inPipe_bits_typ, 0, 0) @[FPU.scala 541:31]
    node _intValue_res_T_1 = cvt(intValue_smallInt) @[FPU.scala 541:45]
    node _intValue_res_T_2 = asSInt(intValue_smallInt) @[FPU.scala 541:60]
    node _intValue_res_T_3 = mux(_intValue_res_T, _intValue_res_T_1, pad(_intValue_res_T_2, 33)) @[FPU.scala 541:19]
    node intValue_res = mux(_intValue_T_1, pad(_intValue_res_T_3, 64), intValue_res_x1) @[FPU.scala 540:64 541:13]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node maskedNaN = and(i2f_1.io_out, UInt<65>("h1efefffffffffffff")) @[FPU.scala 408:25]
    node _T = bits(i2f_1.io_out, 63, 61) @[FPU.scala 243:25]
    node _T_1 = andr(_T) @[FPU.scala 243:56]
    node _T_2 = mux(_T_1, maskedNaN, i2f_1.io_out) @[FPU.scala 409:10]
    node dataPadded_hi = shr(_T_2, 33) @[FPU.scala 560:55]
    node dataPadded_0 = cat(dataPadded_hi, i2f.io_out) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _mux_data_T_15 = mux(mux_data_truncIdx, _T_2, dataPadded_0) @[package.scala 32:76]
    skip
    skip
    skip
    node _mux_exc_T_1 = mux(mux_data_truncIdx, i2f_1.io_exceptionFlags, i2f.io_exceptionFlags) @[package.scala 32:76]
    skip
    node mux_data = mux(inPipe_bits_wflags, _mux_data_T_15, _mux_data_T_13) @[FPU.scala 534:12 547:25 561:14]
    node mux_exc = mux(inPipe_bits_wflags, _mux_exc_T_1, UInt<5>("h0")) @[FPU.scala 533:11 547:25 562:13]
    skip
    reg io_out_b_data : UInt<65>, clock with :
      reset => (UInt<1>("h0"), io_out_b_data) @[Reg.scala 15:16]
    reg io_out_b_exc : UInt<5>, clock with :
      reset => (UInt<1>("h0"), io_out_b_exc) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out_bits_data <= io_out_b_data @[Valid.scala 112:21 114:16]
    io_out_bits_exc <= io_out_b_exc @[Valid.scala 112:21 114:16]
    inPipe_valid <= mux(reset, UInt<1>("h0"), io_in_valid) @[Valid.scala 117:{22,22,22}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    inPipe_bits_typeTagIn <= mux(io_in_valid, io_in_bits_typeTagIn, inPipe_bits_typeTagIn) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    inPipe_bits_wflags <= mux(io_in_valid, io_in_bits_wflags, inPipe_bits_wflags) @[Reg.scala 15:16 16:{19,23}]
    inPipe_bits_rm <= mux(io_in_valid, io_in_bits_rm, inPipe_bits_rm) @[Reg.scala 15:16 16:{19,23}]
    inPipe_bits_typ <= mux(io_in_valid, io_in_bits_typ, inPipe_bits_typ) @[Reg.scala 15:16 16:{19,23}]
    inPipe_bits_in1 <= mux(io_in_valid, io_in_bits_in1, inPipe_bits_in1) @[Reg.scala 15:16 16:{19,23}]
    i2f.io_signedIn <= not(_intValue_res_T) @[FPU.scala 552:26]
    i2f.io_in <= asUInt(intValue_res) @[FPU.scala 544:9]
    i2f.io_roundingMode <= inPipe_bits_rm @[Valid.scala 112:21 114:16]
    skip
    i2f_1.io_signedIn <= not(_intValue_res_T) @[FPU.scala 552:26]
    i2f_1.io_in <= asUInt(intValue_res) @[FPU.scala 544:9]
    i2f_1.io_roundingMode <= inPipe_bits_rm @[Valid.scala 112:21 114:16]
    skip
    skip
    io_out_b_data <= mux(inPipe_valid, mux_data, io_out_b_data) @[Reg.scala 15:16 16:{19,23}]
    io_out_b_exc <= mux(inPipe_valid, mux_exc, io_out_b_exc) @[Reg.scala 15:16 16:{19,23}]

  module FPToFP :
    input clock : Clock
    input reset : UInt<1>
    input io_in_valid : UInt<1>
    input io_in_bits_ren2 : UInt<1>
    input io_in_bits_typeTagOut : UInt<2>
    input io_in_bits_wflags : UInt<1>
    input io_in_bits_rm : UInt<3>
    input io_in_bits_in1 : UInt<65>
    input io_in_bits_in2 : UInt<65>
    output io_out_bits_data : UInt<65>
    output io_out_bits_exc : UInt<5>
    input io_lt : UInt<1>

    inst narrower of RecFNToRecFN @[FPU.scala 614:30]
    reg inPipe_valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), inPipe_valid) @[Valid.scala 117:22]
    skip
    skip
    skip
    reg inPipe_bits_ren2 : UInt<1>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_ren2) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    reg inPipe_bits_typeTagOut : UInt<2>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_typeTagOut) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    reg inPipe_bits_wflags : UInt<1>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_wflags) @[Reg.scala 15:16]
    reg inPipe_bits_rm : UInt<3>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_rm) @[Reg.scala 15:16]
    skip
    skip
    skip
    reg inPipe_bits_in1 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_in1) @[Reg.scala 15:16]
    reg inPipe_bits_in2 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), inPipe_bits_in2) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _signNum_T = bits(inPipe_bits_rm, 1, 1) @[FPU.scala 577:31]
    skip
    skip
    node _signNum_T_1 = xor(inPipe_bits_in1, inPipe_bits_in2) @[FPU.scala 577:48]
    node _signNum_T_2 = bits(inPipe_bits_rm, 0, 0) @[FPU.scala 577:77]
    node _signNum_T_3 = not(inPipe_bits_in2) @[FPU.scala 577:82]
    node _signNum_T_4 = mux(_signNum_T_2, _signNum_T_3, inPipe_bits_in2) @[FPU.scala 577:66]
    node signNum = mux(_signNum_T, _signNum_T_1, _signNum_T_4) @[FPU.scala 577:20]
    node fsgnj_hi = bits(signNum, 64, 64) @[FPU.scala 578:26]
    node fsgnj_lo = bits(inPipe_bits_in1, 63, 0) @[FPU.scala 578:45]
    node fsgnj = cat(fsgnj_hi, fsgnj_lo) @[Cat.scala 30:58]
    node _isnan1_T = bits(inPipe_bits_in1, 63, 61) @[FPU.scala 243:25]
    node isnan1 = andr(_isnan1_T) @[FPU.scala 243:56]
    node _isnan2_T = bits(inPipe_bits_in2, 63, 61) @[FPU.scala 243:25]
    node isnan2 = andr(_isnan2_T) @[FPU.scala 243:56]
    skip
    skip
    node _isInvalid_T_2 = bits(inPipe_bits_in1, 51, 51) @[FPU.scala 244:39]
    node _isInvalid_T_3 = not(_isInvalid_T_2) @[FPU.scala 244:37]
    node _isInvalid_T_4 = and(isnan1, _isInvalid_T_3) @[FPU.scala 244:34]
    skip
    skip
    node _isInvalid_T_7 = bits(inPipe_bits_in2, 51, 51) @[FPU.scala 244:39]
    node _isInvalid_T_8 = not(_isInvalid_T_7) @[FPU.scala 244:37]
    node _isInvalid_T_9 = and(isnan2, _isInvalid_T_8) @[FPU.scala 244:34]
    node isInvalid = or(_isInvalid_T_4, _isInvalid_T_9) @[FPU.scala 587:49]
    node isNaNOut = and(isnan1, isnan2) @[FPU.scala 588:27]
    skip
    node _isLHS_T_1 = neq(_signNum_T_2, io_lt) @[FPU.scala 589:41]
    node _isLHS_T_2 = not(isnan1) @[FPU.scala 589:54]
    node _isLHS_T_3 = and(_isLHS_T_1, _isLHS_T_2) @[FPU.scala 589:51]
    node isLHS = or(isnan2, _isLHS_T_3) @[FPU.scala 589:24]
    node _fsgnjMux_exc_T = shl(isInvalid, 4) @[FPU.scala 590:31]
    node _fsgnjMux_data_T = mux(isLHS, inPipe_bits_in1, inPipe_bits_in2) @[FPU.scala 591:53]
    node _fsgnjMux_data_T_1 = mux(isNaNOut, UInt<65>("he008000000000000"), _fsgnjMux_data_T) @[FPU.scala 591:25]
    skip
    node _GEN_23 = mux(inPipe_bits_wflags, _fsgnjMux_exc_T, UInt<5>("h0")) @[FPU.scala 581:16 584:25 590:18]
    node _GEN_24 = mux(inPipe_bits_wflags, _fsgnjMux_data_T_1, fsgnj) @[FPU.scala 582:17 584:25 591:19]
    skip
    node _T = eq(inPipe_bits_typeTagOut, UInt<2>("h0")) @[FPU.scala 598:18]
    skip
    node _T_1 = not(inPipe_bits_ren2) @[FPU.scala 603:27]
    node _T_2 = and(inPipe_bits_wflags, _T_1) @[FPU.scala 603:24]
    skip
    skip
    node widened = mux(isnan1, UInt<65>("he008000000000000"), inPipe_bits_in1) @[FPU.scala 606:24]
    node fsgnjMux_data = mux(_T_2, widened, _GEN_24) @[FPU.scala 603:42 607:21]
    skip
    node mux_data_hi = shr(fsgnjMux_data, 33) @[FPU.scala 599:37]
    node mux_data_hi_hi = bits(fsgnjMux_data, 64, 64) @[FPU.scala 268:17]
    node mux_data_fractIn = bits(fsgnjMux_data, 51, 0) @[FPU.scala 269:20]
    node mux_data_expIn = bits(fsgnjMux_data, 63, 52) @[FPU.scala 270:18]
    node _mux_data_fractOut_T = shl(mux_data_fractIn, 24) @[FPU.scala 271:28]
    node mux_data_lo = shr(_mux_data_fractOut_T, 53) @[FPU.scala 271:38]
    node mux_data_expOut_hi = bits(mux_data_expIn, 11, 9) @[FPU.scala 273:26]
    node _mux_data_expOut_commonCase_T = add(mux_data_expIn, UInt<12>("h100")) @[FPU.scala 274:31]
    node _mux_data_expOut_commonCase_T_1 = tail(_mux_data_expOut_commonCase_T, 1) @[FPU.scala 274:31]
    node _mux_data_expOut_commonCase_T_2 = sub(_mux_data_expOut_commonCase_T_1, UInt<12>("h800")) @[FPU.scala 274:48]
    node mux_data_expOut_commonCase = tail(_mux_data_expOut_commonCase_T_2, 1) @[FPU.scala 274:48]
    node _mux_data_expOut_T = eq(mux_data_expOut_hi, UInt<3>("h0")) @[FPU.scala 275:19]
    node _mux_data_expOut_T_1 = geq(mux_data_expOut_hi, UInt<3>("h6")) @[FPU.scala 275:36]
    node _mux_data_expOut_T_2 = or(_mux_data_expOut_T, _mux_data_expOut_T_1) @[FPU.scala 275:25]
    node mux_data_expOut_lo = bits(mux_data_expOut_commonCase, 5, 0) @[FPU.scala 275:65]
    node _mux_data_expOut_T_3 = cat(mux_data_expOut_hi, mux_data_expOut_lo) @[Cat.scala 30:58]
    node _mux_data_expOut_T_4 = bits(mux_data_expOut_commonCase, 8, 0) @[FPU.scala 275:93]
    node mux_data_hi_lo = mux(_mux_data_expOut_T_2, _mux_data_expOut_T_3, _mux_data_expOut_T_4) @[FPU.scala 275:10]
    node mux_data_hi_1 = cat(mux_data_hi_hi, mux_data_hi_lo) @[Cat.scala 30:58]
    node mux_data_lo_1 = cat(mux_data_hi_1, mux_data_lo) @[Cat.scala 30:58]
    node _mux_data_T = cat(mux_data_hi, mux_data_lo_1) @[Cat.scala 30:58]
    node _GEN_25 = mux(_T, _mux_data_T, fsgnjMux_data) @[FPU.scala 598:34 599:16]
    skip
    skip
    skip
    skip
    skip
    node _fsgnjMux_exc_T_6 = shl(_isInvalid_T_4, 4) @[FPU.scala 608:51]
    skip
    skip
    skip
    skip
    skip
    skip
    node _mux_data_T_1 = cat(mux_data_hi, narrower.io_out) @[Cat.scala 30:58]
    node _GEN_26 = mux(_T, _mux_data_T_1, _GEN_25) @[FPU.scala 613:120 619:18]
    node fsgnjMux_exc = mux(_T_2, _fsgnjMux_exc_T_6, _GEN_23) @[FPU.scala 603:42 608:20]
    skip
    node _GEN_27 = mux(_T, narrower.io_exceptionFlags, fsgnjMux_exc) @[FPU.scala 613:120 620:17]
    node mux_data = mux(_T_2, _GEN_26, _GEN_25) @[FPU.scala 603:42]
    node mux_exc = mux(_T_2, _GEN_27, fsgnjMux_exc) @[FPU.scala 603:42]
    skip
    reg io_out_b_data : UInt<65>, clock with :
      reset => (UInt<1>("h0"), io_out_b_data) @[Reg.scala 15:16]
    reg io_out_b_exc : UInt<5>, clock with :
      reset => (UInt<1>("h0"), io_out_b_exc) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out_bits_data <= io_out_b_data @[Valid.scala 112:21 114:16]
    io_out_bits_exc <= io_out_b_exc @[Valid.scala 112:21 114:16]
    inPipe_valid <= mux(reset, UInt<1>("h0"), io_in_valid) @[Valid.scala 117:{22,22,22}]
    skip
    skip
    skip
    inPipe_bits_ren2 <= mux(io_in_valid, io_in_bits_ren2, inPipe_bits_ren2) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    inPipe_bits_typeTagOut <= mux(io_in_valid, io_in_bits_typeTagOut, inPipe_bits_typeTagOut) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip
    skip
    skip
    inPipe_bits_wflags <= mux(io_in_valid, io_in_bits_wflags, inPipe_bits_wflags) @[Reg.scala 15:16 16:{19,23}]
    inPipe_bits_rm <= mux(io_in_valid, io_in_bits_rm, inPipe_bits_rm) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    inPipe_bits_in1 <= mux(io_in_valid, io_in_bits_in1, inPipe_bits_in1) @[Reg.scala 15:16 16:{19,23}]
    inPipe_bits_in2 <= mux(io_in_valid, io_in_bits_in2, inPipe_bits_in2) @[Reg.scala 15:16 16:{19,23}]
    skip
    narrower.io_in <= inPipe_bits_in1 @[Valid.scala 112:21 114:16]
    narrower.io_roundingMode <= inPipe_bits_rm @[Valid.scala 112:21 114:16]
    skip
    skip
    io_out_b_data <= mux(inPipe_valid, mux_data, io_out_b_data) @[Reg.scala 15:16 16:{19,23}]
    io_out_b_exc <= mux(inPipe_valid, mux_exc, io_out_b_exc) @[Reg.scala 15:16 16:{19,23}]

  module FPUFMAPipe_1 :
    input clock : Clock
    input reset : UInt<1>
    input io_in_valid : UInt<1>
    input io_in_bits_ren3 : UInt<1>
    input io_in_bits_swap23 : UInt<1>
    input io_in_bits_rm : UInt<3>
    input io_in_bits_fmaCmd : UInt<2>
    input io_in_bits_in1 : UInt<65>
    input io_in_bits_in2 : UInt<65>
    input io_in_bits_in3 : UInt<65>
    output io_out_bits_data : UInt<65>
    output io_out_bits_exc : UInt<5>

    inst fma of MulAddRecFNPipe_1 @[FPU.scala 712:19]
    reg valid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid) @[FPU.scala 700:18]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg in_rm : UInt<3>, clock with :
      reset => (UInt<1>("h0"), in_rm) @[FPU.scala 701:15]
    reg in_fmaCmd : UInt<2>, clock with :
      reset => (UInt<1>("h0"), in_fmaCmd) @[FPU.scala 701:15]
    skip
    skip
    reg in_in1 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), in_in1) @[FPU.scala 701:15]
    reg in_in2 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), in_in2) @[FPU.scala 701:15]
    reg in_in3 : UInt<65>, clock with :
      reset => (UInt<1>("h0"), in_in3) @[FPU.scala 701:15]
    skip
    node _zero_T = xor(io_in_bits_in1, io_in_bits_in2) @[FPU.scala 704:32]
    skip
    node zero = and(_zero_T, UInt<65>("h10000000000000000")) @[FPU.scala 704:50]
    node _GEN_0 = mux(io_in_bits_swap23, UInt<65>("h8000000000000000"), io_in_bits_in2) @[FPU.scala 708:{23,32} 707:8]
    node _T = or(io_in_bits_ren3, io_in_bits_swap23) @[FPU.scala 709:21]
    node _T_1 = not(_T) @[FPU.scala 709:11]
    node _GEN_1 = mux(_T_1, zero, io_in_bits_in3) @[FPU.scala 709:{37,46} 707:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_data_maskedNaN = and(fma.io_out, UInt<65>("h1efefffffffffffff")) @[FPU.scala 408:25]
    node _res_data_T = bits(fma.io_out, 63, 61) @[FPU.scala 243:25]
    node _res_data_T_1 = andr(_res_data_T) @[FPU.scala 243:56]
    node res_data = mux(_res_data_T_1, res_data_maskedNaN, fma.io_out) @[FPU.scala 409:10]
    skip
    reg io_out_b_data : UInt<65>, clock with :
      reset => (UInt<1>("h0"), io_out_b_data) @[Reg.scala 15:16]
    reg io_out_b_exc : UInt<5>, clock with :
      reset => (UInt<1>("h0"), io_out_b_exc) @[Reg.scala 15:16]
    node res_exc = fma.io_exceptionFlags @[FPU.scala 721:17 723:11]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out_bits_data <= io_out_b_data @[Valid.scala 112:21 114:16]
    io_out_bits_exc <= io_out_b_exc @[Valid.scala 112:21 114:16]
    valid <= io_in_valid @[FPU.scala 700:18]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    in_rm <= mux(io_in_valid, io_in_bits_rm, in_rm) @[FPU.scala 701:15 702:22 707:8]
    in_fmaCmd <= mux(io_in_valid, io_in_bits_fmaCmd, in_fmaCmd) @[FPU.scala 701:15 702:22 707:8]
    skip
    skip
    in_in1 <= mux(io_in_valid, io_in_bits_in1, in_in1) @[FPU.scala 701:15 702:22 707:8]
    in_in2 <= mux(io_in_valid, _GEN_0, in_in2) @[FPU.scala 701:15 702:22]
    in_in3 <= mux(io_in_valid, _GEN_1, in_in3) @[FPU.scala 701:15 702:22]
    fma.clock <= clock
    fma.reset <= reset
    fma.io_validin <= valid @[FPU.scala 713:18]
    fma.io_op <= in_fmaCmd @[FPU.scala 714:13]
    fma.io_a <= in_in1 @[FPU.scala 717:12]
    fma.io_b <= in_in2 @[FPU.scala 718:12]
    fma.io_c <= in_in3 @[FPU.scala 719:12]
    fma.io_roundingMode <= in_rm @[FPU.scala 715:23]
    skip
    skip
    io_out_b_data <= mux(fma.io_validout, res_data, io_out_b_data) @[Reg.scala 15:16 16:{19,23}]
    io_out_b_exc <= mux(fma.io_validout, res_exc, io_out_b_exc) @[Reg.scala 15:16 16:{19,23}]

  module DivSqrtRecFN_small :
    input clock : Clock
    input reset : UInt<1>
    output io_inReady : UInt<1>
    input io_inValid : UInt<1>
    input io_sqrtOp : UInt<1>
    input io_a : UInt<33>
    input io_b : UInt<33>
    input io_roundingMode : UInt<3>
    output io_outValid_div : UInt<1>
    output io_outValid_sqrt : UInt<1>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    inst divSqrtRecFNToRaw of DivSqrtRecFNToRaw_small @[DivSqrtRecFN_small.scala 462:15]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_2 @[DivSqrtRecFN_small.scala 477:15]
    io_inReady <= divSqrtRecFNToRaw.io_inReady @[DivSqrtRecFN_small.scala 464:16]
    io_outValid_div <= divSqrtRecFNToRaw.io_rawOutValid_div @[DivSqrtRecFN_small.scala 473:22]
    io_outValid_sqrt <= divSqrtRecFNToRaw.io_rawOutValid_sqrt @[DivSqrtRecFN_small.scala 474:22]
    io_out <= roundRawFNToRecFN.io_out @[DivSqrtRecFN_small.scala 483:23]
    io_exceptionFlags <= roundRawFNToRecFN.io_exceptionFlags @[DivSqrtRecFN_small.scala 484:23]
    divSqrtRecFNToRaw.clock <= clock
    divSqrtRecFNToRaw.reset <= reset
    divSqrtRecFNToRaw.io_inValid <= io_inValid @[DivSqrtRecFN_small.scala 465:39]
    divSqrtRecFNToRaw.io_sqrtOp <= io_sqrtOp @[DivSqrtRecFN_small.scala 466:39]
    divSqrtRecFNToRaw.io_a <= io_a @[DivSqrtRecFN_small.scala 467:39]
    divSqrtRecFNToRaw.io_b <= io_b @[DivSqrtRecFN_small.scala 468:39]
    divSqrtRecFNToRaw.io_roundingMode <= io_roundingMode @[DivSqrtRecFN_small.scala 469:39]
    roundRawFNToRecFN.io_invalidExc <= divSqrtRecFNToRaw.io_invalidExc @[DivSqrtRecFN_small.scala 478:39]
    roundRawFNToRecFN.io_infiniteExc <= divSqrtRecFNToRaw.io_infiniteExc @[DivSqrtRecFN_small.scala 479:39]
    roundRawFNToRecFN.io_in_isNaN <= divSqrtRecFNToRaw.io_rawOut_isNaN @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_isInf <= divSqrtRecFNToRaw.io_rawOut_isInf @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_isZero <= divSqrtRecFNToRaw.io_rawOut_isZero @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_sign <= divSqrtRecFNToRaw.io_rawOut_sign @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_sExp <= divSqrtRecFNToRaw.io_rawOut_sExp @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_sig <= divSqrtRecFNToRaw.io_rawOut_sig @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_roundingMode <= divSqrtRecFNToRaw.io_roundingModeOut @[DivSqrtRecFN_small.scala 481:39]
    skip

  module DivSqrtRecFN_small_1 :
    input clock : Clock
    input reset : UInt<1>
    output io_inReady : UInt<1>
    input io_inValid : UInt<1>
    input io_sqrtOp : UInt<1>
    input io_a : UInt<65>
    input io_b : UInt<65>
    input io_roundingMode : UInt<3>
    output io_outValid_div : UInt<1>
    output io_outValid_sqrt : UInt<1>
    output io_out : UInt<65>
    output io_exceptionFlags : UInt<5>

    inst divSqrtRecFNToRaw of DivSqrtRecFNToRaw_small_1 @[DivSqrtRecFN_small.scala 462:15]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_3 @[DivSqrtRecFN_small.scala 477:15]
    io_inReady <= divSqrtRecFNToRaw.io_inReady @[DivSqrtRecFN_small.scala 464:16]
    io_outValid_div <= divSqrtRecFNToRaw.io_rawOutValid_div @[DivSqrtRecFN_small.scala 473:22]
    io_outValid_sqrt <= divSqrtRecFNToRaw.io_rawOutValid_sqrt @[DivSqrtRecFN_small.scala 474:22]
    io_out <= roundRawFNToRecFN.io_out @[DivSqrtRecFN_small.scala 483:23]
    io_exceptionFlags <= roundRawFNToRecFN.io_exceptionFlags @[DivSqrtRecFN_small.scala 484:23]
    divSqrtRecFNToRaw.clock <= clock
    divSqrtRecFNToRaw.reset <= reset
    divSqrtRecFNToRaw.io_inValid <= io_inValid @[DivSqrtRecFN_small.scala 465:39]
    divSqrtRecFNToRaw.io_sqrtOp <= io_sqrtOp @[DivSqrtRecFN_small.scala 466:39]
    divSqrtRecFNToRaw.io_a <= io_a @[DivSqrtRecFN_small.scala 467:39]
    divSqrtRecFNToRaw.io_b <= io_b @[DivSqrtRecFN_small.scala 468:39]
    divSqrtRecFNToRaw.io_roundingMode <= io_roundingMode @[DivSqrtRecFN_small.scala 469:39]
    roundRawFNToRecFN.io_invalidExc <= divSqrtRecFNToRaw.io_invalidExc @[DivSqrtRecFN_small.scala 478:39]
    roundRawFNToRecFN.io_infiniteExc <= divSqrtRecFNToRaw.io_infiniteExc @[DivSqrtRecFN_small.scala 479:39]
    roundRawFNToRecFN.io_in_isNaN <= divSqrtRecFNToRaw.io_rawOut_isNaN @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_isInf <= divSqrtRecFNToRaw.io_rawOut_isInf @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_isZero <= divSqrtRecFNToRaw.io_rawOut_isZero @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_sign <= divSqrtRecFNToRaw.io_rawOut_sign @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_sExp <= divSqrtRecFNToRaw.io_rawOut_sExp @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_in_sig <= divSqrtRecFNToRaw.io_rawOut_sig @[DivSqrtRecFN_small.scala 480:39]
    roundRawFNToRecFN.io_roundingMode <= divSqrtRecFNToRaw.io_roundingModeOut @[DivSqrtRecFN_small.scala 481:39]
    skip

  module Arbiter :
    output io_in_0_ready : UInt<1>
    input io_in_0_valid : UInt<1>
    input io_in_0_bits_bits_addr : UInt<27>
    output io_in_1_ready : UInt<1>
    input io_in_1_valid : UInt<1>
    input io_in_1_bits_valid : UInt<1>
    input io_in_1_bits_bits_addr : UInt<27>
    input io_out_ready : UInt<1>
    output io_out_valid : UInt<1>
    output io_out_bits_valid : UInt<1>
    output io_out_bits_bits_addr : UInt<27>
    output io_chosen : UInt<1>

    skip
    skip
    skip
    node grant_1 = not(io_in_0_valid) @[Arbiter.scala 31:78]
    skip
    skip
    node _io_out_valid_T = not(grant_1) @[Arbiter.scala 135:19]
    skip
    io_in_0_ready <= io_out_ready @[Arbiter.scala 134:19]
    io_in_1_ready <= and(grant_1, io_out_ready) @[Arbiter.scala 134:19]
    io_out_valid <= or(_io_out_valid_T, io_in_1_valid) @[Arbiter.scala 135:31]
    io_out_bits_valid <= or(io_in_0_valid, io_in_1_bits_valid) @[Arbiter.scala 124:15 126:27 128:19]
    io_out_bits_bits_addr <= mux(io_in_0_valid, io_in_0_bits_bits_addr, io_in_1_bits_bits_addr) @[Arbiter.scala 124:15 126:27 128:19]
    io_chosen <= mux(io_in_0_valid, UInt<1>("h0"), UInt<1>("h1")) @[Arbiter.scala 123:13 126:27 127:17]

  module OptimizationBarrier_117 :
    input io_x : UInt<3>
    output io_y : UInt<3>

    io_y <= io_x @[package.scala 263:12]

  module OptimizationBarrier_118 :
    input io_x_ppn : UInt<54>
    input io_x_d : UInt<1>
    input io_x_a : UInt<1>
    input io_x_g : UInt<1>
    input io_x_u : UInt<1>
    input io_x_x : UInt<1>
    input io_x_w : UInt<1>
    input io_x_r : UInt<1>
    input io_x_v : UInt<1>
    output io_y_ppn : UInt<54>
    output io_y_d : UInt<1>
    output io_y_a : UInt<1>
    output io_y_g : UInt<1>
    output io_y_u : UInt<1>
    output io_y_x : UInt<1>
    output io_y_w : UInt<1>
    output io_y_r : UInt<1>
    output io_y_v : UInt<1>

    io_y_ppn <= io_x_ppn @[package.scala 263:12]
    skip
    io_y_d <= io_x_d @[package.scala 263:12]
    io_y_a <= io_x_a @[package.scala 263:12]
    io_y_g <= io_x_g @[package.scala 263:12]
    io_y_u <= io_x_u @[package.scala 263:12]
    io_y_x <= io_x_x @[package.scala 263:12]
    io_y_w <= io_x_w @[package.scala 263:12]
    io_y_r <= io_x_r @[package.scala 263:12]
    io_y_v <= io_x_v @[package.scala 263:12]

  module IBuf :
    input clock : Clock
    input reset : UInt<1>
    output io_imem_ready : UInt<1>
    input io_imem_valid : UInt<1>
    input io_imem_bits_btb_taken : UInt<1>
    input io_imem_bits_btb_bridx : UInt<1>
    input io_imem_bits_btb_entry : UInt<5>
    input io_imem_bits_btb_bht_history : UInt<8>
    input io_imem_bits_pc : UInt<40>
    input io_imem_bits_data : UInt<32>
    input io_imem_bits_xcpt_pf_inst : UInt<1>
    input io_imem_bits_xcpt_ae_inst : UInt<1>
    input io_imem_bits_replay : UInt<1>
    input io_kill : UInt<1>
    output io_pc : UInt<40>
    output io_btb_resp_entry : UInt<5>
    output io_btb_resp_bht_history : UInt<8>
    input io_inst_0_ready : UInt<1>
    output io_inst_0_valid : UInt<1>
    output io_inst_0_bits_xcpt0_pf_inst : UInt<1>
    output io_inst_0_bits_xcpt0_ae_inst : UInt<1>
    output io_inst_0_bits_xcpt1_pf_inst : UInt<1>
    output io_inst_0_bits_xcpt1_ae_inst : UInt<1>
    output io_inst_0_bits_replay : UInt<1>
    output io_inst_0_bits_rvc : UInt<1>
    output io_inst_0_bits_inst_bits : UInt<32>
    output io_inst_0_bits_inst_rd : UInt<5>
    output io_inst_0_bits_inst_rs1 : UInt<5>
    output io_inst_0_bits_inst_rs2 : UInt<5>
    output io_inst_0_bits_inst_rs3 : UInt<5>
    output io_inst_0_bits_raw : UInt<32>

    inst exp of RVCExpander @[IBuf.scala 86:21]
    reg nBufValid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), nBufValid) @[IBuf.scala 34:47]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg buf__pc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), buf__pc) @[IBuf.scala 35:16]
    reg buf__data : UInt<32>, clock with :
      reset => (UInt<1>("h0"), buf__data) @[IBuf.scala 35:16]
    skip
    reg buf__xcpt_pf_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), buf__xcpt_pf_inst) @[IBuf.scala 35:16]
    reg buf__xcpt_ae_inst : UInt<1>, clock with :
      reset => (UInt<1>("h0"), buf__xcpt_ae_inst) @[IBuf.scala 35:16]
    reg buf__replay : UInt<1>, clock with :
      reset => (UInt<1>("h0"), buf__replay) @[IBuf.scala 35:16]
    skip
    skip
    skip
    skip
    skip
    reg ibufBTBResp_entry : UInt<5>, clock with :
      reset => (UInt<1>("h0"), ibufBTBResp_entry) @[IBuf.scala 36:24]
    reg ibufBTBResp_bht_history : UInt<8>, clock with :
      reset => (UInt<1>("h0"), ibufBTBResp_bht_history) @[IBuf.scala 36:24]
    skip
    node pcWordBits = bits(io_imem_bits_pc, 1, 1) @[package.scala 154:13]
    node _nIC_T = add(io_imem_bits_btb_bridx, UInt<1>("h1")) @[IBuf.scala 41:64]
    node _nIC_T_1 = mux(io_imem_bits_btb_taken, _nIC_T, UInt<2>("h2")) @[IBuf.scala 41:16]
    node _GEN_56 = pad(pcWordBits, 2) @[IBuf.scala 41:88]
    node _nIC_T_2 = sub(_nIC_T_1, _GEN_56) @[IBuf.scala 41:88]
    node nIC = tail(_nIC_T_2, 1) @[IBuf.scala 41:88]
    node _nValid_T = mux(io_imem_valid, nIC, UInt<2>("h0")) @[IBuf.scala 43:19]
    node _GEN_57 = pad(nBufValid, 2) @[IBuf.scala 43:49]
    node _nValid_T_1 = add(_nValid_T, _GEN_57) @[IBuf.scala 43:49]
    node nValid = tail(_nValid_T_1, 1) @[IBuf.scala 43:49]
    node _valid_T = dshl(UInt<1>("h1"), nValid) @[OneHot.scala 58:35]
    node _valid_T_1 = sub(_valid_T, UInt<4>("h1")) @[IBuf.scala 74:33]
    node _valid_T_2 = tail(_valid_T_1, 1) @[IBuf.scala 74:33]
    node valid = bits(_valid_T_2, 1, 0) @[IBuf.scala 74:37]
    skip
    skip
    node _GEN_58 = shr(valid, 1) @[IBuf.scala 93:42]
    node _full_insn_T_2 = pad(_GEN_58, 2) @[IBuf.scala 93:42]
    node _full_insn_T_3 = bits(_full_insn_T_2, 0, 0) @[IBuf.scala 93:42]
    node _full_insn_T_4 = or(exp.io_rvc, _full_insn_T_3) @[IBuf.scala 93:34]
    node _bufMask_T = dshl(UInt<1>("h1"), nBufValid) @[OneHot.scala 58:35]
    node _bufMask_T_1 = sub(_bufMask_T, UInt<2>("h1")) @[IBuf.scala 75:37]
    node bufMask = tail(_bufMask_T_1, 1) @[IBuf.scala 75:37]
    node buf_replay = mux(buf__replay, bufMask, UInt<2>("h0")) @[IBuf.scala 77:23]
    skip
    node _full_insn_T_6 = bits(buf_replay, 0, 0) @[IBuf.scala 93:61]
    node full_insn = or(_full_insn_T_4, _full_insn_T_6) @[IBuf.scala 93:48]
    skip
    skip
    skip
    skip
    skip
    skip
    node _nReady_T_4 = mux(exp.io_rvc, UInt<2>("h1"), UInt<2>("h2")) @[IBuf.scala 102:71]
    node nReady = mux(full_insn, _nReady_T_4, UInt<2>("h0")) @[IBuf.scala 102:{56,65}]
    skip
    skip
    node _nICReady_T = sub(nReady, _GEN_57) @[IBuf.scala 42:25]
    node nICReady = tail(_nICReady_T, 1) @[IBuf.scala 42:25]
    skip
    node _io_imem_ready_T = geq(nReady, _GEN_57) @[IBuf.scala 44:47]
    node _io_imem_ready_T_1 = and(io_inst_0_ready, _io_imem_ready_T) @[IBuf.scala 44:37]
    node _io_imem_ready_T_2 = geq(nICReady, nIC) @[IBuf.scala 44:73]
    node _io_imem_ready_T_3 = sub(nIC, nICReady) @[IBuf.scala 44:92]
    node _io_imem_ready_T_4 = tail(_io_imem_ready_T_3, 1) @[IBuf.scala 44:92]
    node _io_imem_ready_T_5 = geq(UInt<2>("h1"), _io_imem_ready_T_4) @[IBuf.scala 44:85]
    node _io_imem_ready_T_6 = or(_io_imem_ready_T_2, _io_imem_ready_T_5) @[IBuf.scala 44:80]
    skip
    skip
    skip
    node _nBufValid_T_1 = not(nBufValid) @[package.scala 209:43]
    node _nBufValid_T_2 = or(_io_imem_ready_T, _nBufValid_T_1) @[package.scala 209:38]
    skip
    node _nBufValid_T_3 = sub(_GEN_57, nReady) @[IBuf.scala 48:65]
    node _nBufValid_T_4 = tail(_nBufValid_T_3, 1) @[IBuf.scala 48:65]
    node _nBufValid_T_5 = mux(_nBufValid_T_2, UInt<2>("h0"), _nBufValid_T_4) @[IBuf.scala 48:23]
    skip
    skip
    node _T_1 = and(io_imem_valid, _io_imem_ready_T) @[IBuf.scala 54:27]
    node _T_2 = lt(nICReady, nIC) @[IBuf.scala 54:62]
    node _T_3 = and(_T_1, _T_2) @[IBuf.scala 54:50]
    skip
    skip
    skip
    node _T_7 = and(_T_3, _io_imem_ready_T_5) @[IBuf.scala 54:68]
    skip
    node _shamt_T = add(_GEN_56, nICReady) @[IBuf.scala 55:32]
    node shamt = tail(_shamt_T, 1) @[IBuf.scala 55:32]
    skip
    skip
    node buf_data_data_hi = shr(io_imem_bits_data, 16) @[IBuf.scala 127:58]
    node buf_data_data_hi_1 = cat(buf_data_data_hi, buf_data_data_hi) @[Cat.scala 30:58]
    node buf_data_data = cat(buf_data_data_hi_1, io_imem_bits_data) @[Cat.scala 30:58]
    node _buf_data_T = shl(shamt, 4) @[IBuf.scala 128:19]
    node _buf_data_T_1 = dshr(buf_data_data, _buf_data_T) @[IBuf.scala 128:10]
    node _buf_data_T_2 = bits(_buf_data_T_1, 15, 0) @[IBuf.scala 58:61]
    skip
    node _buf_pc_T_1 = and(io_imem_bits_pc, UInt<40>("hfffffffffc")) @[IBuf.scala 59:35]
    node _buf_pc_T_2 = shl(nICReady, 1) @[IBuf.scala 59:80]
    node _GEN_65 = pad(_buf_pc_T_2, 40) @[IBuf.scala 59:68]
    node _buf_pc_T_3 = add(io_imem_bits_pc, _GEN_65) @[IBuf.scala 59:68]
    node _buf_pc_T_4 = tail(_buf_pc_T_3, 1) @[IBuf.scala 59:68]
    node _buf_pc_T_5 = and(_buf_pc_T_4, UInt<40>("h3")) @[IBuf.scala 59:109]
    node _buf_pc_T_6 = or(_buf_pc_T_1, _buf_pc_T_5) @[IBuf.scala 59:49]
    node _GEN_0 = mux(_T_7, _io_imem_ready_T_4, _nBufValid_T_5) @[IBuf.scala 48:17 54:92 56:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_9 = mux(_T_7, _buf_pc_T_6, buf__pc) @[IBuf.scala 35:16 54:92 59:16]
    node _GEN_10 = mux(_T_7, pad(_buf_data_T_2, 32), buf__data) @[IBuf.scala 35:16 54:92 58:18]
    skip
    node _GEN_12 = mux(_T_7, io_imem_bits_xcpt_pf_inst, buf__xcpt_pf_inst) @[IBuf.scala 54:92 57:13 35:16]
    node _GEN_13 = mux(_T_7, io_imem_bits_xcpt_ae_inst, buf__xcpt_ae_inst) @[IBuf.scala 54:92 57:13 35:16]
    node _GEN_14 = mux(_T_7, io_imem_bits_replay, buf__replay) @[IBuf.scala 54:92 57:13 35:16]
    skip
    skip
    skip
    skip
    skip
    node _GEN_20 = mux(_T_7, io_imem_bits_btb_entry, ibufBTBResp_entry) @[IBuf.scala 54:92 60:21 36:24]
    node _GEN_21 = mux(_T_7, io_imem_bits_btb_bht_history, ibufBTBResp_bht_history) @[IBuf.scala 54:92 60:21 36:24]
    skip
    node _GEN_23 = mux(io_inst_0_ready, _GEN_0, pad(nBufValid, 2)) @[IBuf.scala 47:29 34:47]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_46 = mux(io_kill, UInt<2>("h0"), _GEN_23) @[IBuf.scala 63:20 64:17]
    skip
    node _icShiftAmt_T = add(UInt<2>("h2"), _GEN_57) @[IBuf.scala 68:32]
    node _icShiftAmt_T_1 = tail(_icShiftAmt_T, 1) @[IBuf.scala 68:32]
    skip
    node _icShiftAmt_T_2 = sub(_icShiftAmt_T_1, _GEN_56) @[IBuf.scala 68:44]
    node icShiftAmt = tail(_icShiftAmt_T_2, 1) @[IBuf.scala 68:44]
    skip
    node icData_hi = bits(io_imem_bits_data, 15, 0) @[IBuf.scala 69:87]
    node icData_lo = cat(icData_hi, icData_hi) @[Cat.scala 30:58]
    node icData_data_lo = cat(io_imem_bits_data, icData_lo) @[Cat.scala 30:58]
    node icData_data_hi = shr(icData_data_lo, 48) @[IBuf.scala 120:58]
    node icData_data_hi_1 = cat(icData_data_hi, icData_data_hi) @[Cat.scala 30:58]
    node icData_data_hi_2 = cat(icData_data_hi_1, icData_data_hi_1) @[Cat.scala 30:58]
    node icData_data = cat(icData_data_hi_2, icData_data_lo) @[Cat.scala 30:58]
    node _icData_T = shl(icShiftAmt, 4) @[IBuf.scala 121:19]
    node _icData_T_1 = dshl(icData_data, _icData_T) @[IBuf.scala 121:10]
    node icData = bits(_icData_T_1, 95, 64) @[package.scala 154:13]
    skip
    node _icMask_T_1 = shl(nBufValid, 4) @[IBuf.scala 71:65]
    node _icMask_T_2 = dshl(UInt<32>("hffffffff"), _icMask_T_1) @[IBuf.scala 71:51]
    node icMask = bits(_icMask_T_2, 31, 0) @[IBuf.scala 71:92]
    node _inst_T = and(icData, icMask) @[IBuf.scala 72:21]
    node _inst_T_1 = not(icMask) @[IBuf.scala 72:43]
    node _inst_T_2 = and(buf__data, _inst_T_1) @[IBuf.scala 72:41]
    skip
    node _xcpt_T = bits(bufMask, 0, 0) @[IBuf.scala 76:61]
    skip
    skip
    node _xcpt_T_1 = bits(bufMask, 1, 1) @[IBuf.scala 76:61]
    node xcpt_1_pf_inst = mux(_xcpt_T_1, buf__xcpt_pf_inst, io_imem_bits_xcpt_pf_inst) @[IBuf.scala 76:53]
    node xcpt_1_ae_inst = mux(_xcpt_T_1, buf__xcpt_ae_inst, io_imem_bits_xcpt_ae_inst) @[IBuf.scala 76:53]
    node _ic_replay_T = not(bufMask) @[IBuf.scala 78:65]
    node _ic_replay_T_1 = and(valid, _ic_replay_T) @[IBuf.scala 78:63]
    node _ic_replay_T_2 = mux(io_imem_bits_replay, _ic_replay_T_1, UInt<2>("h0")) @[IBuf.scala 78:35]
    node ic_replay = or(buf_replay, _ic_replay_T_2) @[IBuf.scala 78:30]
    node _T_8 = not(io_imem_valid) @[IBuf.scala 79:10]
    node _T_9 = not(io_imem_bits_btb_taken) @[IBuf.scala 79:28]
    node _T_10 = or(_T_8, _T_9) @[IBuf.scala 79:25]
    node _T_11 = geq(io_imem_bits_btb_bridx, pcWordBits) @[IBuf.scala 79:78]
    node _T_12 = or(_T_10, _T_11) @[IBuf.scala 79:52]
    skip
    node _T_14 = or(_T_12, reset) @[IBuf.scala 79:9]
    node _T_15 = not(_T_14) @[IBuf.scala 79:9]
    node _io_pc_T = gt(nBufValid, UInt<1>("h0")) @[IBuf.scala 82:26]
    skip
    skip
    node _replay_T_1 = bits(ic_replay, 0, 0) @[IBuf.scala 92:29]
    node _replay_T_2 = not(exp.io_rvc) @[IBuf.scala 92:37]
    skip
    skip
    node _GEN_68 = shr(ic_replay, 1) @[IBuf.scala 92:61]
    node _replay_T_5 = pad(_GEN_68, 2) @[IBuf.scala 92:61]
    node _replay_T_6 = bits(_replay_T_5, 0, 0) @[IBuf.scala 92:61]
    node _replay_T_7 = and(_replay_T_2, _replay_T_6) @[IBuf.scala 92:49]
    skip
    skip
    node _io_inst_0_valid_T_1 = bits(valid, 0, 0) @[IBuf.scala 94:32]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_inst_0_bits_xcpt1_T_4 = cat(xcpt_1_pf_inst, xcpt_1_ae_inst) @[IBuf.scala 96:63]
    node _io_inst_0_bits_xcpt1_T_5 = mux(exp.io_rvc, UInt<2>("h0"), _io_inst_0_bits_xcpt1_T_4) @[IBuf.scala 96:35]
    skip
    skip
    skip
    skip
    skip
    node _T_18 = and(_xcpt_T, exp.io_rvc) @[IBuf.scala 100:25]
    skip
    skip
    node _GEN_69 = shr(bufMask, 1) @[IBuf.scala 100:50]
    node _T_21 = pad(_GEN_69, 2) @[IBuf.scala 100:50]
    node _T_22 = bits(_T_21, 0, 0) @[IBuf.scala 100:50]
    node _T_23 = or(_T_18, _T_22) @[IBuf.scala 100:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_imem_ready <= and(_io_imem_ready_T_1, _io_imem_ready_T_6) @[IBuf.scala 44:60]
    io_pc <= mux(_io_pc_T, buf__pc, io_imem_bits_pc) @[IBuf.scala 82:15]
    skip
    skip
    skip
    skip
    skip
    io_btb_resp_entry <= mux(_T_23, ibufBTBResp_entry, io_imem_bits_btb_entry) @[IBuf.scala 100:{57,71} 81:15]
    io_btb_resp_bht_history <= mux(_T_23, ibufBTBResp_bht_history, io_imem_bits_btb_bht_history) @[IBuf.scala 100:{57,71} 81:15]
    skip
    io_inst_0_valid <= and(_io_inst_0_valid_T_1, full_insn) @[IBuf.scala 94:36]
    io_inst_0_bits_xcpt0_pf_inst <= mux(_xcpt_T, buf__xcpt_pf_inst, io_imem_bits_xcpt_pf_inst) @[IBuf.scala 76:53]
    io_inst_0_bits_xcpt0_ae_inst <= mux(_xcpt_T, buf__xcpt_ae_inst, io_imem_bits_xcpt_ae_inst) @[IBuf.scala 76:53]
    io_inst_0_bits_xcpt1_pf_inst <= bits(_io_inst_0_bits_xcpt1_T_5, 1, 1) @[IBuf.scala 96:79]
    io_inst_0_bits_xcpt1_ae_inst <= bits(_io_inst_0_bits_xcpt1_T_5, 0, 0) @[IBuf.scala 96:79]
    io_inst_0_bits_replay <= or(_replay_T_1, _replay_T_7) @[IBuf.scala 92:33]
    io_inst_0_bits_rvc <= exp.io_rvc @[IBuf.scala 98:27]
    io_inst_0_bits_inst_bits <= exp.io_out_bits @[IBuf.scala 88:26]
    io_inst_0_bits_inst_rd <= exp.io_out_rd @[IBuf.scala 88:26]
    io_inst_0_bits_inst_rs1 <= exp.io_out_rs1 @[IBuf.scala 88:26]
    io_inst_0_bits_inst_rs2 <= exp.io_out_rs2 @[IBuf.scala 88:26]
    io_inst_0_bits_inst_rs3 <= exp.io_out_rs3 @[IBuf.scala 88:26]
    io_inst_0_bits_raw <= or(_inst_T, _inst_T_2) @[IBuf.scala 72:30]
    node _GEN_70 = mux(reset, UInt<2>("h0"), _GEN_46) @[IBuf.scala 34:{47,47}]
    nBufValid <= bits(_GEN_70, 0, 0) @[IBuf.scala 34:{47,47}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    buf__pc <= mux(io_inst_0_ready, _GEN_9, buf__pc) @[IBuf.scala 35:16 47:29]
    buf__data <= mux(io_inst_0_ready, _GEN_10, buf__data) @[IBuf.scala 35:16 47:29]
    skip
    buf__xcpt_pf_inst <= mux(io_inst_0_ready, _GEN_12, buf__xcpt_pf_inst) @[IBuf.scala 35:16 47:29]
    buf__xcpt_ae_inst <= mux(io_inst_0_ready, _GEN_13, buf__xcpt_ae_inst) @[IBuf.scala 35:16 47:29]
    buf__replay <= mux(io_inst_0_ready, _GEN_14, buf__replay) @[IBuf.scala 35:16 47:29]
    skip
    skip
    skip
    skip
    skip
    ibufBTBResp_entry <= mux(io_inst_0_ready, _GEN_20, ibufBTBResp_entry) @[IBuf.scala 36:24 47:29]
    ibufBTBResp_bht_history <= mux(io_inst_0_ready, _GEN_21, ibufBTBResp_bht_history) @[IBuf.scala 36:24 47:29]
    skip
    skip
    skip
    exp.io_in <= or(_inst_T, _inst_T_2) @[IBuf.scala 72:30]
    printf(clock, _T_15, "Assertion failed\n    at IBuf.scala:79 assert(!io.imem.valid || !io.imem.bits.btb.taken || io.imem.bits.btb.bridx >= pcWordBits)\n") @[IBuf.scala 79:9]
    stop(clock, _T_15, 1) @[IBuf.scala 79:9]

  module CSRFile :
    input clock : Clock
    input reset : UInt<1>
    input io_ungated_clock : Clock
    input io_interrupts_debug : UInt<1>
    input io_interrupts_mtip : UInt<1>
    input io_interrupts_msip : UInt<1>
    input io_interrupts_meip : UInt<1>
    input io_interrupts_seip : UInt<1>
    input io_hartid : UInt<1>
    input io_rw_addr : UInt<12>
    input io_rw_cmd : UInt<3>
    output io_rw_rdata : UInt<64>
    input io_rw_wdata : UInt<64>
    input io_decode_0_csr : UInt<12>
    output io_decode_0_fp_illegal : UInt<1>
    output io_decode_0_fp_csr : UInt<1>
    output io_decode_0_read_illegal : UInt<1>
    output io_decode_0_write_illegal : UInt<1>
    output io_decode_0_write_flush : UInt<1>
    output io_decode_0_system_illegal : UInt<1>
    output io_csr_stall : UInt<1>
    output io_eret : UInt<1>
    output io_singleStep : UInt<1>
    output io_status_debug : UInt<1>
    output io_status_cease : UInt<1>
    output io_status_wfi : UInt<1>
    output io_status_isa : UInt<32>
    output io_status_dprv : UInt<2>
    output io_status_prv : UInt<2>
    output io_status_sd : UInt<1>
    output io_status_zero2 : UInt<27>
    output io_status_sxl : UInt<2>
    output io_status_uxl : UInt<2>
    output io_status_sd_rv32 : UInt<1>
    output io_status_zero1 : UInt<8>
    output io_status_tsr : UInt<1>
    output io_status_tw : UInt<1>
    output io_status_tvm : UInt<1>
    output io_status_mxr : UInt<1>
    output io_status_sum : UInt<1>
    output io_status_mprv : UInt<1>
    output io_status_xs : UInt<2>
    output io_status_fs : UInt<2>
    output io_status_mpp : UInt<2>
    output io_status_vs : UInt<2>
    output io_status_spp : UInt<1>
    output io_status_mpie : UInt<1>
    output io_status_hpie : UInt<1>
    output io_status_spie : UInt<1>
    output io_status_upie : UInt<1>
    output io_status_mie : UInt<1>
    output io_status_hie : UInt<1>
    output io_status_sie : UInt<1>
    output io_status_uie : UInt<1>
    output io_ptbr_mode : UInt<4>
    output io_ptbr_ppn : UInt<44>
    output io_evec : UInt<40>
    input io_exception : UInt<1>
    input io_retire : UInt<1>
    input io_cause : UInt<64>
    input io_pc : UInt<40>
    input io_tval : UInt<40>
    output io_time : UInt<64>
    output io_fcsr_rm : UInt<3>
    input io_fcsr_flags_valid : UInt<1>
    input io_fcsr_flags_bits : UInt<5>
    output io_interrupt : UInt<1>
    output io_interrupt_cause : UInt<64>
    output io_bp_0_control_action : UInt<1>
    output io_bp_0_control_tmatch : UInt<2>
    output io_bp_0_control_m : UInt<1>
    output io_bp_0_control_s : UInt<1>
    output io_bp_0_control_u : UInt<1>
    output io_bp_0_control_x : UInt<1>
    output io_bp_0_control_w : UInt<1>
    output io_bp_0_control_r : UInt<1>
    output io_bp_0_address : UInt<39>
    output io_pmp_0_cfg_l : UInt<1>
    output io_pmp_0_cfg_a : UInt<2>
    output io_pmp_0_cfg_x : UInt<1>
    output io_pmp_0_cfg_w : UInt<1>
    output io_pmp_0_cfg_r : UInt<1>
    output io_pmp_0_addr : UInt<30>
    output io_pmp_0_mask : UInt<32>
    output io_pmp_1_cfg_l : UInt<1>
    output io_pmp_1_cfg_a : UInt<2>
    output io_pmp_1_cfg_x : UInt<1>
    output io_pmp_1_cfg_w : UInt<1>
    output io_pmp_1_cfg_r : UInt<1>
    output io_pmp_1_addr : UInt<30>
    output io_pmp_1_mask : UInt<32>
    output io_pmp_2_cfg_l : UInt<1>
    output io_pmp_2_cfg_a : UInt<2>
    output io_pmp_2_cfg_x : UInt<1>
    output io_pmp_2_cfg_w : UInt<1>
    output io_pmp_2_cfg_r : UInt<1>
    output io_pmp_2_addr : UInt<30>
    output io_pmp_2_mask : UInt<32>
    output io_pmp_3_cfg_l : UInt<1>
    output io_pmp_3_cfg_a : UInt<2>
    output io_pmp_3_cfg_x : UInt<1>
    output io_pmp_3_cfg_w : UInt<1>
    output io_pmp_3_cfg_r : UInt<1>
    output io_pmp_3_addr : UInt<30>
    output io_pmp_3_mask : UInt<32>
    output io_pmp_4_cfg_l : UInt<1>
    output io_pmp_4_cfg_a : UInt<2>
    output io_pmp_4_cfg_x : UInt<1>
    output io_pmp_4_cfg_w : UInt<1>
    output io_pmp_4_cfg_r : UInt<1>
    output io_pmp_4_addr : UInt<30>
    output io_pmp_4_mask : UInt<32>
    output io_pmp_5_cfg_l : UInt<1>
    output io_pmp_5_cfg_a : UInt<2>
    output io_pmp_5_cfg_x : UInt<1>
    output io_pmp_5_cfg_w : UInt<1>
    output io_pmp_5_cfg_r : UInt<1>
    output io_pmp_5_addr : UInt<30>
    output io_pmp_5_mask : UInt<32>
    output io_pmp_6_cfg_l : UInt<1>
    output io_pmp_6_cfg_a : UInt<2>
    output io_pmp_6_cfg_x : UInt<1>
    output io_pmp_6_cfg_w : UInt<1>
    output io_pmp_6_cfg_r : UInt<1>
    output io_pmp_6_addr : UInt<30>
    output io_pmp_6_mask : UInt<32>
    output io_pmp_7_cfg_l : UInt<1>
    output io_pmp_7_cfg_a : UInt<2>
    output io_pmp_7_cfg_x : UInt<1>
    output io_pmp_7_cfg_w : UInt<1>
    output io_pmp_7_cfg_r : UInt<1>
    output io_pmp_7_addr : UInt<30>
    output io_pmp_7_mask : UInt<32>
    output io_inhibit_cycle : UInt<1>
    input io_inst_0 : UInt<32>
    output io_trace_0_valid : UInt<1>
    output io_trace_0_iaddr : UInt<40>
    output io_trace_0_insn : UInt<32>
    output io_trace_0_priv : UInt<3>
    output io_trace_0_exception : UInt<1>
    output io_trace_0_interrupt : UInt<1>
    output io_trace_0_cause : UInt<64>
    output io_trace_0_tval : UInt<40>
    output io_customCSRs_0_value : UInt<64>

    skip
    skip
    skip
    skip
    skip
    reg reg_mstatus_prv : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_prv) @[CSR.scala 319:24]
    skip
    skip
    skip
    skip
    skip
    skip
    reg reg_mstatus_tsr : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_tsr) @[CSR.scala 319:24]
    reg reg_mstatus_tw : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_tw) @[CSR.scala 319:24]
    reg reg_mstatus_tvm : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_tvm) @[CSR.scala 319:24]
    reg reg_mstatus_mxr : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_mxr) @[CSR.scala 319:24]
    reg reg_mstatus_sum : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_sum) @[CSR.scala 319:24]
    reg reg_mstatus_mprv : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_mprv) @[CSR.scala 319:24]
    skip
    reg reg_mstatus_fs : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_fs) @[CSR.scala 319:24]
    reg reg_mstatus_mpp : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_mpp) @[CSR.scala 319:24]
    skip
    reg reg_mstatus_spp : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_spp) @[CSR.scala 319:24]
    reg reg_mstatus_mpie : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_mpie) @[CSR.scala 319:24]
    skip
    reg reg_mstatus_spie : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_spie) @[CSR.scala 319:24]
    skip
    reg reg_mstatus_mie : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_mie) @[CSR.scala 319:24]
    skip
    reg reg_mstatus_sie : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mstatus_sie) @[CSR.scala 319:24]
    skip
    node system_insn = eq(io_rw_cmd, UInt<3>("h4")) @[CSR.scala 639:31]
    node _T_192 = shl(io_rw_addr, 20) @[CSR.scala 652:28]
    node _T_199 = and(_T_192, UInt<32>("h12400000")) @[Decode.scala 14:65]
    node _T_200 = eq(_T_199, UInt<32>("h10000000")) @[Decode.scala 14:121]
    skip
    node _T_201 = and(_T_192, UInt<32>("h40000000")) @[Decode.scala 14:65]
    node _T_202 = eq(_T_201, UInt<32>("h40000000")) @[Decode.scala 14:121]
    node _T_204 = or(_T_200, _T_202) @[Decode.scala 15:30]
    skip
    node insn_ret = and(system_insn, _T_204) @[CSR.scala 652:95]
    node _T_400 = bits(io_rw_addr, 9, 9) @[CSR.scala 815:47]
    node _T_401 = not(_T_400) @[CSR.scala 815:36]
    skip
    node _T_403 = bits(io_rw_addr, 10, 10) @[CSR.scala 821:47]
    skip
    node _T_405 = bits(io_rw_addr, 7, 7) @[CSR.scala 821:65]
    node _T_406 = and(_T_403, _T_405) @[CSR.scala 821:52]
    reg reg_dcsr_prv : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_dcsr_prv) @[CSR.scala 327:21]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_149 = mux(_T_406, reg_dcsr_prv, reg_mstatus_mpp) @[CSR.scala 821:70 822:15]
    node ret_prv = mux(_T_401, pad(reg_mstatus_spp, 2), _GEN_149) @[CSR.scala 815:52 819:15]
    skip
    node _T_193 = and(_T_192, UInt<32>("h10100000")) @[Decode.scala 14:65]
    node _T_194 = eq(_T_193, UInt<32>("h0")) @[Decode.scala 14:121]
    skip
    skip
    node insn_call = and(system_insn, _T_194) @[CSR.scala 652:95]
    skip
    node _T_197 = eq(_T_193, UInt<32>("h100000")) @[Decode.scala 14:121]
    skip
    skip
    node insn_break = and(system_insn, _T_197) @[CSR.scala 652:95]
    node _exception_T = or(insn_call, insn_break) @[CSR.scala 738:29]
    node exception = or(_exception_T, io_exception) @[CSR.scala 738:43]
    reg reg_singleStepped : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_singleStepped) @[CSR.scala 372:30]
    node _GEN_36 = pad(reg_mstatus_prv, 4) @[CSR.scala 688:36]
    node _cause_T = add(_GEN_36, UInt<4>("h8")) @[CSR.scala 688:36]
    node _cause_T_1 = tail(_cause_T, 1) @[CSR.scala 688:36]
    node _cause_T_2 = mux(insn_break, UInt<64>("h3"), io_cause) @[CSR.scala 689:14]
    node cause = mux(insn_call, pad(_cause_T_1, 64), _cause_T_2) @[CSR.scala 688:8]
    node _causeIsDebugInt_T = bits(cause, 63, 63) @[CSR.scala 691:30]
    node cause_lsbs = bits(cause, 7, 0) @[CSR.scala 690:25]
    node _causeIsDebugInt_T_1 = eq(cause_lsbs, UInt<8>("he")) @[CSR.scala 691:53]
    node causeIsDebugInt = and(_causeIsDebugInt_T, _causeIsDebugInt_T_1) @[CSR.scala 691:39]
    node _trapToDebug_T = or(reg_singleStepped, causeIsDebugInt) @[CSR.scala 694:60]
    skip
    node _causeIsDebugTrigger_T_1 = not(_causeIsDebugInt_T) @[CSR.scala 692:29]
    skip
    node causeIsDebugTrigger = and(_causeIsDebugTrigger_T_1, _causeIsDebugInt_T_1) @[CSR.scala 692:44]
    node _trapToDebug_T_1 = or(_trapToDebug_T, causeIsDebugTrigger) @[CSR.scala 694:79]
    skip
    skip
    node _causeIsDebugBreak_T_2 = and(_causeIsDebugTrigger_T_1, insn_break) @[CSR.scala 693:42]
    reg reg_dcsr_ebreakm : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_dcsr_ebreakm) @[CSR.scala 327:21]
    skip
    node causeIsDebugBreak_hi = cat(reg_dcsr_ebreakm, UInt<1>("h0")) @[Cat.scala 30:58]
    reg reg_dcsr_ebreaks : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_dcsr_ebreaks) @[CSR.scala 327:21]
    reg reg_dcsr_ebreaku : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_dcsr_ebreaku) @[CSR.scala 327:21]
    node causeIsDebugBreak_lo = cat(reg_dcsr_ebreaks, reg_dcsr_ebreaku) @[Cat.scala 30:58]
    node _causeIsDebugBreak_T_3 = cat(causeIsDebugBreak_hi, causeIsDebugBreak_lo) @[Cat.scala 30:58]
    node _causeIsDebugBreak_T_4 = dshr(_causeIsDebugBreak_T_3, reg_mstatus_prv) @[CSR.scala 693:134]
    node _causeIsDebugBreak_T_5 = bits(_causeIsDebugBreak_T_4, 0, 0) @[CSR.scala 693:134]
    node causeIsDebugBreak = and(_causeIsDebugBreak_T_2, _causeIsDebugBreak_T_5) @[CSR.scala 693:56]
    node _trapToDebug_T_2 = or(_trapToDebug_T_1, causeIsDebugBreak) @[CSR.scala 694:102]
    reg reg_debug : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_debug) @[CSR.scala 368:22]
    node trapToDebug = or(_trapToDebug_T_2, reg_debug) @[CSR.scala 694:123]
    skip
    node _T_276 = not(reg_debug) @[CSR.scala 756:13]
    node _GEN_56 = mux(_T_276, UInt<2>("h3"), reg_mstatus_prv) @[CSR.scala 756:25 761:17]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _delegate_T = leq(reg_mstatus_prv, UInt<2>("h1")) @[CSR.scala 698:59]
    skip
    skip
    reg reg_mideleg : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_mideleg) @[CSR.scala 383:18]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node read_mideleg = and(reg_mideleg, UInt<64>("h222")) @[CSR.scala 384:36]
    skip
    node _delegate_T_3 = dshr(read_mideleg, cause_lsbs) @[CSR.scala 698:102]
    node _delegate_T_4 = bits(_delegate_T_3, 0, 0) @[CSR.scala 698:102]
    reg reg_medeleg : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_medeleg) @[CSR.scala 387:18]
    node read_medeleg = and(reg_medeleg, UInt<64>("hb15d")) @[CSR.scala 388:36]
    skip
    node _delegate_T_5 = dshr(read_medeleg, cause_lsbs) @[CSR.scala 698:128]
    node _delegate_T_6 = bits(_delegate_T_5, 0, 0) @[CSR.scala 698:128]
    node _delegate_T_7 = mux(_causeIsDebugInt_T, _delegate_T_4, _delegate_T_6) @[CSR.scala 698:74]
    node delegate = and(_delegate_T, _delegate_T_7) @[CSR.scala 698:68]
    skip
    skip
    node _GEN_70 = mux(delegate, UInt<2>("h1"), UInt<2>("h3")) @[CSR.scala 772:35 780:15 789:15]
    skip
    node _GEN_100 = mux(trapToDebug, _GEN_56, _GEN_70) @[CSR.scala 755:24]
    node _GEN_123 = mux(exception, _GEN_100, reg_mstatus_prv) @[CSR.scala 754:20]
    node new_prv = mux(insn_ret, ret_prv, _GEN_123) @[CSR.scala 813:19 838:13]
    skip
    node _reg_mstatus_prv_T = eq(new_prv, UInt<2>("h2")) @[CSR.scala 1187:35]
    node _reg_mstatus_prv_T_1 = mux(_reg_mstatus_prv_T, UInt<2>("h0"), new_prv) @[CSR.scala 1187:29]
    skip
    skip
    skip
    skip
    skip
    skip
    reg reg_dcsr_cause : UInt<3>, clock with :
      reset => (UInt<1>("h0"), reg_dcsr_cause) @[CSR.scala 327:21]
    skip
    reg reg_dcsr_step : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_dcsr_step) @[CSR.scala 327:21]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg reg_dpc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), reg_dpc) @[CSR.scala 369:20]
    reg reg_dscratch : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_dscratch) @[CSR.scala 370:25]
    skip
    skip
    reg reg_bp_0_control_dmode : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_dmode) @[CSR.scala 378:19]
    skip
    skip
    reg reg_bp_0_control_action : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_action) @[CSR.scala 378:19]
    skip
    skip
    reg reg_bp_0_control_tmatch : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_tmatch) @[CSR.scala 378:19]
    reg reg_bp_0_control_m : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_m) @[CSR.scala 378:19]
    skip
    reg reg_bp_0_control_s : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_s) @[CSR.scala 378:19]
    reg reg_bp_0_control_u : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_u) @[CSR.scala 378:19]
    reg reg_bp_0_control_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_x) @[CSR.scala 378:19]
    reg reg_bp_0_control_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_w) @[CSR.scala 378:19]
    reg reg_bp_0_control_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_control_r) @[CSR.scala 378:19]
    reg reg_bp_0_address : UInt<39>, clock with :
      reset => (UInt<1>("h0"), reg_bp_0_address) @[CSR.scala 378:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg reg_pmp_0_cfg_l : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_0_cfg_l) @[CSR.scala 379:20]
    skip
    reg reg_pmp_0_cfg_a : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_0_cfg_a) @[CSR.scala 379:20]
    reg reg_pmp_0_cfg_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_0_cfg_x) @[CSR.scala 379:20]
    reg reg_pmp_0_cfg_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_0_cfg_w) @[CSR.scala 379:20]
    reg reg_pmp_0_cfg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_0_cfg_r) @[CSR.scala 379:20]
    reg reg_pmp_0_addr : UInt<30>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_0_addr) @[CSR.scala 379:20]
    reg reg_pmp_1_cfg_l : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_1_cfg_l) @[CSR.scala 379:20]
    skip
    reg reg_pmp_1_cfg_a : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_1_cfg_a) @[CSR.scala 379:20]
    reg reg_pmp_1_cfg_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_1_cfg_x) @[CSR.scala 379:20]
    reg reg_pmp_1_cfg_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_1_cfg_w) @[CSR.scala 379:20]
    reg reg_pmp_1_cfg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_1_cfg_r) @[CSR.scala 379:20]
    reg reg_pmp_1_addr : UInt<30>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_1_addr) @[CSR.scala 379:20]
    reg reg_pmp_2_cfg_l : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_2_cfg_l) @[CSR.scala 379:20]
    skip
    reg reg_pmp_2_cfg_a : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_2_cfg_a) @[CSR.scala 379:20]
    reg reg_pmp_2_cfg_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_2_cfg_x) @[CSR.scala 379:20]
    reg reg_pmp_2_cfg_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_2_cfg_w) @[CSR.scala 379:20]
    reg reg_pmp_2_cfg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_2_cfg_r) @[CSR.scala 379:20]
    reg reg_pmp_2_addr : UInt<30>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_2_addr) @[CSR.scala 379:20]
    reg reg_pmp_3_cfg_l : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_3_cfg_l) @[CSR.scala 379:20]
    skip
    reg reg_pmp_3_cfg_a : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_3_cfg_a) @[CSR.scala 379:20]
    reg reg_pmp_3_cfg_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_3_cfg_x) @[CSR.scala 379:20]
    reg reg_pmp_3_cfg_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_3_cfg_w) @[CSR.scala 379:20]
    reg reg_pmp_3_cfg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_3_cfg_r) @[CSR.scala 379:20]
    reg reg_pmp_3_addr : UInt<30>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_3_addr) @[CSR.scala 379:20]
    reg reg_pmp_4_cfg_l : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_4_cfg_l) @[CSR.scala 379:20]
    skip
    reg reg_pmp_4_cfg_a : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_4_cfg_a) @[CSR.scala 379:20]
    reg reg_pmp_4_cfg_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_4_cfg_x) @[CSR.scala 379:20]
    reg reg_pmp_4_cfg_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_4_cfg_w) @[CSR.scala 379:20]
    reg reg_pmp_4_cfg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_4_cfg_r) @[CSR.scala 379:20]
    reg reg_pmp_4_addr : UInt<30>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_4_addr) @[CSR.scala 379:20]
    reg reg_pmp_5_cfg_l : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_5_cfg_l) @[CSR.scala 379:20]
    skip
    reg reg_pmp_5_cfg_a : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_5_cfg_a) @[CSR.scala 379:20]
    reg reg_pmp_5_cfg_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_5_cfg_x) @[CSR.scala 379:20]
    reg reg_pmp_5_cfg_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_5_cfg_w) @[CSR.scala 379:20]
    reg reg_pmp_5_cfg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_5_cfg_r) @[CSR.scala 379:20]
    reg reg_pmp_5_addr : UInt<30>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_5_addr) @[CSR.scala 379:20]
    reg reg_pmp_6_cfg_l : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_6_cfg_l) @[CSR.scala 379:20]
    skip
    reg reg_pmp_6_cfg_a : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_6_cfg_a) @[CSR.scala 379:20]
    reg reg_pmp_6_cfg_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_6_cfg_x) @[CSR.scala 379:20]
    reg reg_pmp_6_cfg_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_6_cfg_w) @[CSR.scala 379:20]
    reg reg_pmp_6_cfg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_6_cfg_r) @[CSR.scala 379:20]
    reg reg_pmp_6_addr : UInt<30>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_6_addr) @[CSR.scala 379:20]
    reg reg_pmp_7_cfg_l : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_7_cfg_l) @[CSR.scala 379:20]
    skip
    reg reg_pmp_7_cfg_a : UInt<2>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_7_cfg_a) @[CSR.scala 379:20]
    reg reg_pmp_7_cfg_x : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_7_cfg_x) @[CSR.scala 379:20]
    reg reg_pmp_7_cfg_w : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_7_cfg_w) @[CSR.scala 379:20]
    reg reg_pmp_7_cfg_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_7_cfg_r) @[CSR.scala 379:20]
    reg reg_pmp_7_addr : UInt<30>, clock with :
      reset => (UInt<1>("h0"), reg_pmp_7_addr) @[CSR.scala 379:20]
    reg reg_mie : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_mie) @[CSR.scala 381:20]
    skip
    skip
    skip
    skip
    skip
    skip
    reg reg_mip_seip : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mip_seip) @[CSR.scala 390:20]
    skip
    skip
    skip
    reg reg_mip_stip : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mip_stip) @[CSR.scala 390:20]
    skip
    skip
    skip
    reg reg_mip_ssip : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg_mip_ssip) @[CSR.scala 390:20]
    skip
    reg reg_mepc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), reg_mepc) @[CSR.scala 391:21]
    reg reg_mcause : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_mcause) @[CSR.scala 392:27]
    reg reg_mtval : UInt<40>, clock with :
      reset => (UInt<1>("h0"), reg_mtval) @[CSR.scala 393:22]
    reg reg_mscratch : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_mscratch) @[CSR.scala 394:25]
    reg reg_mtvec : UInt<32>, clock with :
      reset => (UInt<1>("h0"), reg_mtvec) @[CSR.scala 397:27]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg reg_mcounteren : UInt<32>, clock with :
      reset => (UInt<1>("h0"), reg_mcounteren) @[CSR.scala 413:18]
    node read_mcounteren = and(reg_mcounteren, UInt<32>("h7")) @[CSR.scala 414:30]
    skip
    reg reg_scounteren : UInt<32>, clock with :
      reset => (UInt<1>("h0"), reg_scounteren) @[CSR.scala 417:18]
    node read_scounteren = and(reg_scounteren, UInt<32>("h7")) @[CSR.scala 418:36]
    skip
    reg reg_sepc : UInt<40>, clock with :
      reset => (UInt<1>("h0"), reg_sepc) @[CSR.scala 421:21]
    reg reg_scause : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_scause) @[CSR.scala 422:23]
    reg reg_stval : UInt<40>, clock with :
      reset => (UInt<1>("h0"), reg_stval) @[CSR.scala 423:22]
    reg reg_sscratch : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_sscratch) @[CSR.scala 424:25]
    reg reg_stvec : UInt<39>, clock with :
      reset => (UInt<1>("h0"), reg_stvec) @[CSR.scala 425:22]
    reg reg_satp_mode : UInt<4>, clock with :
      reset => (UInt<1>("h0"), reg_satp_mode) @[CSR.scala 426:21]
    skip
    reg reg_satp_ppn : UInt<44>, clock with :
      reset => (UInt<1>("h0"), reg_satp_ppn) @[CSR.scala 426:21]
    reg reg_wfi : UInt<1>, io_ungated_clock with :
      reset => (UInt<1>("h0"), reg_wfi) @[CSR.scala 427:50]
    reg reg_fflags : UInt<5>, clock with :
      reset => (UInt<1>("h0"), reg_fflags) @[CSR.scala 429:23]
    reg reg_frm : UInt<3>, clock with :
      reset => (UInt<1>("h0"), reg_frm) @[CSR.scala 430:20]
    reg reg_mcountinhibit : UInt<3>, clock with :
      reset => (UInt<1>("h0"), reg_mcountinhibit) @[CSR.scala 436:34]
    node _io_inhibit_cycle_T = bits(reg_mcountinhibit, 0, 0) @[CSR.scala 437:40]
    node x67 = bits(reg_mcountinhibit, 2, 2) @[CSR.scala 438:75]
    reg value_lo : UInt<6>, clock with :
      reset => (UInt<1>("h0"), value_lo) @[Counters.scala 45:37]
    node _GEN_37 = pad(io_retire, 6) @[Counters.scala 46:33]
    node nextSmall = add(value_lo, _GEN_37) @[Counters.scala 46:33]
    node _T_5 = not(x67) @[Counters.scala 47:9]
    node _GEN_0 = mux(_T_5, nextSmall, pad(value_lo, 7)) @[Counters.scala 47:{19,27} 45:37]
    reg value_hi : UInt<58>, clock with :
      reset => (UInt<1>("h0"), value_hi) @[Counters.scala 50:27]
    node _large_T = bits(nextSmall, 6, 6) @[Counters.scala 51:20]
    skip
    node _large_T_2 = and(_large_T, _T_5) @[Counters.scala 51:33]
    node _large_r_T = add(value_hi, UInt<58>("h1")) @[Counters.scala 51:55]
    node _large_r_T_1 = tail(_large_r_T, 1) @[Counters.scala 51:55]
    node _GEN_1 = mux(_large_T_2, _large_r_T_1, value_hi) @[Counters.scala 50:27 51:{46,50}]
    node value = cat(value_hi, value_lo) @[Cat.scala 30:58]
    node x74 = not(io_csr_stall) @[CSR.scala 440:56]
    skip
    reg value_lo_1 : UInt<6>, io_ungated_clock with :
      reset => (UInt<1>("h0"), value_lo_1) @[Counters.scala 45:37]
    node _GEN_42 = pad(x74, 6) @[Counters.scala 46:33]
    node nextSmall_1 = add(value_lo_1, _GEN_42) @[Counters.scala 46:33]
    node _T_6 = not(_io_inhibit_cycle_T) @[Counters.scala 47:9]
    node _GEN_2 = mux(_T_6, nextSmall_1, pad(value_lo_1, 7)) @[Counters.scala 47:{19,27} 45:37]
    reg value_hi_1 : UInt<58>, io_ungated_clock with :
      reset => (UInt<1>("h0"), value_hi_1) @[Counters.scala 50:27]
    node _large_T_3 = bits(nextSmall_1, 6, 6) @[Counters.scala 51:20]
    skip
    node _large_T_5 = and(_large_T_3, _T_6) @[Counters.scala 51:33]
    node _large_r_T_2 = add(value_hi_1, UInt<58>("h1")) @[Counters.scala 51:55]
    node _large_r_T_3 = tail(_large_r_T_2, 1) @[Counters.scala 51:55]
    node _GEN_3 = mux(_large_T_5, _large_r_T_3, value_hi_1) @[Counters.scala 50:27 51:{46,50}]
    node value_1 = cat(value_hi_1, value_lo_1) @[Cat.scala 30:58]
    node mip_seip = or(reg_mip_seip, io_interrupts_seip) @[CSR.scala 452:57]
    skip
    skip
    node read_mip_lo_lo_lo = cat(reg_mip_ssip, UInt<1>("h0")) @[CSR.scala 454:22]
    skip
    skip
    node read_mip_lo_lo_hi = cat(io_interrupts_msip, UInt<1>("h0")) @[CSR.scala 454:22]
    node read_mip_lo_lo = cat(read_mip_lo_lo_hi, read_mip_lo_lo_lo) @[CSR.scala 454:22]
    skip
    skip
    node read_mip_lo_hi_lo = cat(reg_mip_stip, UInt<1>("h0")) @[CSR.scala 454:22]
    skip
    skip
    node read_mip_lo_hi_hi = cat(io_interrupts_mtip, UInt<1>("h0")) @[CSR.scala 454:22]
    node read_mip_lo_hi = cat(read_mip_lo_hi_hi, read_mip_lo_hi_lo) @[CSR.scala 454:22]
    node read_mip_lo = cat(read_mip_lo_hi, read_mip_lo_lo) @[CSR.scala 454:22]
    skip
    skip
    node read_mip_hi_lo_lo = cat(mip_seip, UInt<1>("h0")) @[CSR.scala 454:22]
    skip
    skip
    node read_mip_hi_lo_hi = cat(io_interrupts_meip, UInt<1>("h0")) @[CSR.scala 454:22]
    node read_mip_hi_lo = cat(read_mip_hi_lo_hi, read_mip_hi_lo_lo) @[CSR.scala 454:22]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node read_mip_hi = cat(UInt<4>("h0"), read_mip_hi_lo) @[CSR.scala 454:22]
    node _read_mip_T = cat(read_mip_hi, read_mip_lo) @[CSR.scala 454:22]
    node read_mip = and(_read_mip_T, UInt<16>("haaa")) @[CSR.scala 454:29]
    node _GEN_43 = pad(read_mip, 64) @[CSR.scala 457:56]
    node pending_interrupts = and(_GEN_43, reg_mie) @[CSR.scala 457:56]
    skip
    node d_interrupts = shl(io_interrupts_debug, 14) @[CSR.scala 458:42]
    skip
    node _m_interrupts_T_1 = or(_delegate_T, reg_mstatus_mie) @[CSR.scala 464:60]
    skip
    node _m_interrupts_T_3 = not(pending_interrupts) @[CSR.scala 464:83]
    node _m_interrupts_T_4 = or(_m_interrupts_T_3, read_mideleg) @[CSR.scala 464:103]
    node _m_interrupts_T_5 = not(_m_interrupts_T_4) @[CSR.scala 464:81]
    node m_interrupts = mux(_m_interrupts_T_1, _m_interrupts_T_5, UInt<64>("h0")) @[CSR.scala 464:25]
    node _s_interrupts_T = lt(reg_mstatus_prv, UInt<2>("h1")) @[CSR.scala 465:51]
    node _s_interrupts_T_1 = eq(reg_mstatus_prv, UInt<2>("h1")) @[CSR.scala 465:79]
    node _s_interrupts_T_2 = and(_s_interrupts_T_1, reg_mstatus_sie) @[CSR.scala 465:89]
    node _s_interrupts_T_3 = or(_s_interrupts_T, _s_interrupts_T_2) @[CSR.scala 465:59]
    skip
    node _s_interrupts_T_5 = and(pending_interrupts, read_mideleg) @[CSR.scala 465:130]
    node s_interrupts = mux(_s_interrupts_T_3, _s_interrupts_T_5, UInt<64>("h0")) @[CSR.scala 465:25]
    node _any_T = bits(d_interrupts, 14, 14) @[CSR.scala 1177:76]
    node _any_T_1 = bits(d_interrupts, 13, 13) @[CSR.scala 1177:76]
    node _any_T_2 = bits(d_interrupts, 12, 12) @[CSR.scala 1177:76]
    node _any_T_3 = bits(d_interrupts, 11, 11) @[CSR.scala 1177:76]
    node _any_T_4 = bits(d_interrupts, 3, 3) @[CSR.scala 1177:76]
    node _any_T_5 = bits(d_interrupts, 7, 7) @[CSR.scala 1177:76]
    node _any_T_6 = bits(d_interrupts, 9, 9) @[CSR.scala 1177:76]
    node _any_T_7 = bits(d_interrupts, 1, 1) @[CSR.scala 1177:76]
    node _any_T_8 = bits(d_interrupts, 5, 5) @[CSR.scala 1177:76]
    node _any_T_9 = bits(d_interrupts, 8, 8) @[CSR.scala 1177:76]
    node _any_T_10 = bits(d_interrupts, 0, 0) @[CSR.scala 1177:76]
    node _any_T_11 = bits(d_interrupts, 4, 4) @[CSR.scala 1177:76]
    node _any_T_12 = bits(m_interrupts, 15, 15) @[CSR.scala 1177:76]
    node _any_T_13 = bits(m_interrupts, 14, 14) @[CSR.scala 1177:76]
    node _any_T_14 = bits(m_interrupts, 13, 13) @[CSR.scala 1177:76]
    node _any_T_15 = bits(m_interrupts, 12, 12) @[CSR.scala 1177:76]
    node _any_T_16 = bits(m_interrupts, 11, 11) @[CSR.scala 1177:76]
    node _any_T_17 = bits(m_interrupts, 3, 3) @[CSR.scala 1177:76]
    node _any_T_18 = bits(m_interrupts, 7, 7) @[CSR.scala 1177:76]
    node _any_T_19 = bits(m_interrupts, 9, 9) @[CSR.scala 1177:76]
    node _any_T_20 = bits(m_interrupts, 1, 1) @[CSR.scala 1177:76]
    node _any_T_21 = bits(m_interrupts, 5, 5) @[CSR.scala 1177:76]
    node _any_T_22 = bits(m_interrupts, 8, 8) @[CSR.scala 1177:76]
    node _any_T_23 = bits(m_interrupts, 0, 0) @[CSR.scala 1177:76]
    node _any_T_24 = bits(m_interrupts, 4, 4) @[CSR.scala 1177:76]
    node _any_T_25 = bits(s_interrupts, 15, 15) @[CSR.scala 1177:76]
    node _any_T_26 = bits(s_interrupts, 14, 14) @[CSR.scala 1177:76]
    node _any_T_27 = bits(s_interrupts, 13, 13) @[CSR.scala 1177:76]
    node _any_T_28 = bits(s_interrupts, 12, 12) @[CSR.scala 1177:76]
    node _any_T_29 = bits(s_interrupts, 11, 11) @[CSR.scala 1177:76]
    node _any_T_30 = bits(s_interrupts, 3, 3) @[CSR.scala 1177:76]
    node _any_T_31 = bits(s_interrupts, 7, 7) @[CSR.scala 1177:76]
    node _any_T_32 = bits(s_interrupts, 9, 9) @[CSR.scala 1177:76]
    node _any_T_33 = bits(s_interrupts, 1, 1) @[CSR.scala 1177:76]
    node _any_T_34 = bits(s_interrupts, 5, 5) @[CSR.scala 1177:76]
    node _any_T_35 = bits(s_interrupts, 8, 8) @[CSR.scala 1177:76]
    node _any_T_36 = bits(s_interrupts, 0, 0) @[CSR.scala 1177:76]
    node _any_T_37 = bits(s_interrupts, 4, 4) @[CSR.scala 1177:76]
    node _any_T_38 = or(_any_T, _any_T_1) @[CSR.scala 1177:90]
    node _any_T_39 = or(_any_T_38, _any_T_2) @[CSR.scala 1177:90]
    node _any_T_40 = or(_any_T_39, _any_T_3) @[CSR.scala 1177:90]
    node _any_T_41 = or(_any_T_40, _any_T_4) @[CSR.scala 1177:90]
    node _any_T_42 = or(_any_T_41, _any_T_5) @[CSR.scala 1177:90]
    node _any_T_43 = or(_any_T_42, _any_T_6) @[CSR.scala 1177:90]
    node _any_T_44 = or(_any_T_43, _any_T_7) @[CSR.scala 1177:90]
    node _any_T_45 = or(_any_T_44, _any_T_8) @[CSR.scala 1177:90]
    node _any_T_46 = or(_any_T_45, _any_T_9) @[CSR.scala 1177:90]
    node _any_T_47 = or(_any_T_46, _any_T_10) @[CSR.scala 1177:90]
    node _any_T_48 = or(_any_T_47, _any_T_11) @[CSR.scala 1177:90]
    skip
    node _any_T_50 = or(_any_T_48, _any_T_12) @[CSR.scala 1177:90]
    node _any_T_51 = or(_any_T_50, _any_T_13) @[CSR.scala 1177:90]
    node _any_T_52 = or(_any_T_51, _any_T_14) @[CSR.scala 1177:90]
    node _any_T_53 = or(_any_T_52, _any_T_15) @[CSR.scala 1177:90]
    node _any_T_54 = or(_any_T_53, _any_T_16) @[CSR.scala 1177:90]
    node _any_T_55 = or(_any_T_54, _any_T_17) @[CSR.scala 1177:90]
    node _any_T_56 = or(_any_T_55, _any_T_18) @[CSR.scala 1177:90]
    node _any_T_57 = or(_any_T_56, _any_T_19) @[CSR.scala 1177:90]
    node _any_T_58 = or(_any_T_57, _any_T_20) @[CSR.scala 1177:90]
    node _any_T_59 = or(_any_T_58, _any_T_21) @[CSR.scala 1177:90]
    node _any_T_60 = or(_any_T_59, _any_T_22) @[CSR.scala 1177:90]
    node _any_T_61 = or(_any_T_60, _any_T_23) @[CSR.scala 1177:90]
    node _any_T_62 = or(_any_T_61, _any_T_24) @[CSR.scala 1177:90]
    node _any_T_63 = or(_any_T_62, _any_T_25) @[CSR.scala 1177:90]
    node _any_T_64 = or(_any_T_63, _any_T_26) @[CSR.scala 1177:90]
    node _any_T_65 = or(_any_T_64, _any_T_27) @[CSR.scala 1177:90]
    node _any_T_66 = or(_any_T_65, _any_T_28) @[CSR.scala 1177:90]
    node _any_T_67 = or(_any_T_66, _any_T_29) @[CSR.scala 1177:90]
    node _any_T_68 = or(_any_T_67, _any_T_30) @[CSR.scala 1177:90]
    node _any_T_69 = or(_any_T_68, _any_T_31) @[CSR.scala 1177:90]
    node _any_T_70 = or(_any_T_69, _any_T_32) @[CSR.scala 1177:90]
    node _any_T_71 = or(_any_T_70, _any_T_33) @[CSR.scala 1177:90]
    node _any_T_72 = or(_any_T_71, _any_T_34) @[CSR.scala 1177:90]
    node _any_T_73 = or(_any_T_72, _any_T_35) @[CSR.scala 1177:90]
    node _any_T_74 = or(_any_T_73, _any_T_36) @[CSR.scala 1177:90]
    node anyInterrupt = or(_any_T_74, _any_T_37) @[CSR.scala 1177:90]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _which_T_38 = mux(_any_T_36, UInt<3>("h0"), UInt<3>("h4")) @[Mux.scala 47:69]
    node _which_T_39 = mux(_any_T_35, UInt<4>("h8"), pad(_which_T_38, 4)) @[Mux.scala 47:69]
    node _which_T_40 = mux(_any_T_34, UInt<4>("h5"), _which_T_39) @[Mux.scala 47:69]
    node _which_T_41 = mux(_any_T_33, UInt<4>("h1"), _which_T_40) @[Mux.scala 47:69]
    node _which_T_42 = mux(_any_T_32, UInt<4>("h9"), _which_T_41) @[Mux.scala 47:69]
    node _which_T_43 = mux(_any_T_31, UInt<4>("h7"), _which_T_42) @[Mux.scala 47:69]
    node _which_T_44 = mux(_any_T_30, UInt<4>("h3"), _which_T_43) @[Mux.scala 47:69]
    node _which_T_45 = mux(_any_T_29, UInt<4>("hb"), _which_T_44) @[Mux.scala 47:69]
    node _which_T_46 = mux(_any_T_28, UInt<4>("hc"), _which_T_45) @[Mux.scala 47:69]
    node _which_T_47 = mux(_any_T_27, UInt<4>("hd"), _which_T_46) @[Mux.scala 47:69]
    node _which_T_48 = mux(_any_T_26, UInt<4>("he"), _which_T_47) @[Mux.scala 47:69]
    node _which_T_49 = mux(_any_T_25, UInt<4>("hf"), _which_T_48) @[Mux.scala 47:69]
    node _which_T_50 = mux(_any_T_24, UInt<4>("h4"), _which_T_49) @[Mux.scala 47:69]
    node _which_T_51 = mux(_any_T_23, UInt<4>("h0"), _which_T_50) @[Mux.scala 47:69]
    node _which_T_52 = mux(_any_T_22, UInt<4>("h8"), _which_T_51) @[Mux.scala 47:69]
    node _which_T_53 = mux(_any_T_21, UInt<4>("h5"), _which_T_52) @[Mux.scala 47:69]
    node _which_T_54 = mux(_any_T_20, UInt<4>("h1"), _which_T_53) @[Mux.scala 47:69]
    node _which_T_55 = mux(_any_T_19, UInt<4>("h9"), _which_T_54) @[Mux.scala 47:69]
    node _which_T_56 = mux(_any_T_18, UInt<4>("h7"), _which_T_55) @[Mux.scala 47:69]
    node _which_T_57 = mux(_any_T_17, UInt<4>("h3"), _which_T_56) @[Mux.scala 47:69]
    node _which_T_58 = mux(_any_T_16, UInt<4>("hb"), _which_T_57) @[Mux.scala 47:69]
    node _which_T_59 = mux(_any_T_15, UInt<4>("hc"), _which_T_58) @[Mux.scala 47:69]
    node _which_T_60 = mux(_any_T_14, UInt<4>("hd"), _which_T_59) @[Mux.scala 47:69]
    node _which_T_61 = mux(_any_T_13, UInt<4>("he"), _which_T_60) @[Mux.scala 47:69]
    node _which_T_62 = mux(_any_T_12, UInt<4>("hf"), _which_T_61) @[Mux.scala 47:69]
    skip
    node _which_T_64 = mux(_any_T_11, UInt<4>("h4"), _which_T_62) @[Mux.scala 47:69]
    node _which_T_65 = mux(_any_T_10, UInt<4>("h0"), _which_T_64) @[Mux.scala 47:69]
    node _which_T_66 = mux(_any_T_9, UInt<4>("h8"), _which_T_65) @[Mux.scala 47:69]
    node _which_T_67 = mux(_any_T_8, UInt<4>("h5"), _which_T_66) @[Mux.scala 47:69]
    node _which_T_68 = mux(_any_T_7, UInt<4>("h1"), _which_T_67) @[Mux.scala 47:69]
    node _which_T_69 = mux(_any_T_6, UInt<4>("h9"), _which_T_68) @[Mux.scala 47:69]
    node _which_T_70 = mux(_any_T_5, UInt<4>("h7"), _which_T_69) @[Mux.scala 47:69]
    node _which_T_71 = mux(_any_T_4, UInt<4>("h3"), _which_T_70) @[Mux.scala 47:69]
    node _which_T_72 = mux(_any_T_3, UInt<4>("hb"), _which_T_71) @[Mux.scala 47:69]
    node _which_T_73 = mux(_any_T_2, UInt<4>("hc"), _which_T_72) @[Mux.scala 47:69]
    node _which_T_74 = mux(_any_T_1, UInt<4>("hd"), _which_T_73) @[Mux.scala 47:69]
    node whichInterrupt = mux(_any_T, UInt<4>("he"), _which_T_74) @[Mux.scala 47:69]
    skip
    skip
    skip
    node _GEN_556 = pad(whichInterrupt, 64) @[CSR.scala 468:67]
    node _interruptCause_T_3 = add(UInt<64>("h8000000000000000"), _GEN_556) @[CSR.scala 468:67]
    skip
    node _io_interrupt_T = not(io_singleStep) @[CSR.scala 469:36]
    node _io_interrupt_T_1 = and(anyInterrupt, _io_interrupt_T) @[CSR.scala 469:33]
    node _io_interrupt_T_2 = or(_io_interrupt_T_1, reg_singleStepped) @[CSR.scala 469:51]
    node _io_interrupt_T_3 = or(reg_debug, io_status_cease) @[CSR.scala 469:88]
    node _io_interrupt_T_4 = not(_io_interrupt_T_3) @[CSR.scala 469:76]
    skip
    skip
    node pmp_mask_base_lo = bits(reg_pmp_0_cfg_a, 0, 0) @[PMP.scala 59:31]
    skip
    node pmp_mask_base = cat(reg_pmp_0_addr, pmp_mask_base_lo) @[Cat.scala 30:58]
    skip
    node _pmp_mask_T = add(pmp_mask_base, UInt<31>("h1")) @[PMP.scala 60:23]
    node _pmp_mask_T_1 = tail(_pmp_mask_T, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_2 = not(_pmp_mask_T_1) @[PMP.scala 60:16]
    node pmp_mask_hi = and(pmp_mask_base, _pmp_mask_T_2) @[PMP.scala 60:14]
    node _pmp_mask_T_3 = cat(pmp_mask_hi, UInt<2>("h3")) @[Cat.scala 30:58]
    skip
    node pmp_mask_base_lo_1 = bits(reg_pmp_1_cfg_a, 0, 0) @[PMP.scala 59:31]
    skip
    node pmp_mask_base_1 = cat(reg_pmp_1_addr, pmp_mask_base_lo_1) @[Cat.scala 30:58]
    skip
    node _pmp_mask_T_4 = add(pmp_mask_base_1, UInt<31>("h1")) @[PMP.scala 60:23]
    node _pmp_mask_T_5 = tail(_pmp_mask_T_4, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_6 = not(_pmp_mask_T_5) @[PMP.scala 60:16]
    node pmp_mask_hi_1 = and(pmp_mask_base_1, _pmp_mask_T_6) @[PMP.scala 60:14]
    node _pmp_mask_T_7 = cat(pmp_mask_hi_1, UInt<2>("h3")) @[Cat.scala 30:58]
    skip
    node pmp_mask_base_lo_2 = bits(reg_pmp_2_cfg_a, 0, 0) @[PMP.scala 59:31]
    skip
    node pmp_mask_base_2 = cat(reg_pmp_2_addr, pmp_mask_base_lo_2) @[Cat.scala 30:58]
    skip
    node _pmp_mask_T_8 = add(pmp_mask_base_2, UInt<31>("h1")) @[PMP.scala 60:23]
    node _pmp_mask_T_9 = tail(_pmp_mask_T_8, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_10 = not(_pmp_mask_T_9) @[PMP.scala 60:16]
    node pmp_mask_hi_2 = and(pmp_mask_base_2, _pmp_mask_T_10) @[PMP.scala 60:14]
    node _pmp_mask_T_11 = cat(pmp_mask_hi_2, UInt<2>("h3")) @[Cat.scala 30:58]
    skip
    node pmp_mask_base_lo_3 = bits(reg_pmp_3_cfg_a, 0, 0) @[PMP.scala 59:31]
    skip
    node pmp_mask_base_3 = cat(reg_pmp_3_addr, pmp_mask_base_lo_3) @[Cat.scala 30:58]
    skip
    node _pmp_mask_T_12 = add(pmp_mask_base_3, UInt<31>("h1")) @[PMP.scala 60:23]
    node _pmp_mask_T_13 = tail(_pmp_mask_T_12, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_14 = not(_pmp_mask_T_13) @[PMP.scala 60:16]
    node pmp_mask_hi_3 = and(pmp_mask_base_3, _pmp_mask_T_14) @[PMP.scala 60:14]
    node _pmp_mask_T_15 = cat(pmp_mask_hi_3, UInt<2>("h3")) @[Cat.scala 30:58]
    skip
    node pmp_mask_base_lo_4 = bits(reg_pmp_4_cfg_a, 0, 0) @[PMP.scala 59:31]
    skip
    node pmp_mask_base_4 = cat(reg_pmp_4_addr, pmp_mask_base_lo_4) @[Cat.scala 30:58]
    skip
    node _pmp_mask_T_16 = add(pmp_mask_base_4, UInt<31>("h1")) @[PMP.scala 60:23]
    node _pmp_mask_T_17 = tail(_pmp_mask_T_16, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_18 = not(_pmp_mask_T_17) @[PMP.scala 60:16]
    node pmp_mask_hi_4 = and(pmp_mask_base_4, _pmp_mask_T_18) @[PMP.scala 60:14]
    node _pmp_mask_T_19 = cat(pmp_mask_hi_4, UInt<2>("h3")) @[Cat.scala 30:58]
    skip
    node pmp_mask_base_lo_5 = bits(reg_pmp_5_cfg_a, 0, 0) @[PMP.scala 59:31]
    skip
    node pmp_mask_base_5 = cat(reg_pmp_5_addr, pmp_mask_base_lo_5) @[Cat.scala 30:58]
    skip
    node _pmp_mask_T_20 = add(pmp_mask_base_5, UInt<31>("h1")) @[PMP.scala 60:23]
    node _pmp_mask_T_21 = tail(_pmp_mask_T_20, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_22 = not(_pmp_mask_T_21) @[PMP.scala 60:16]
    node pmp_mask_hi_5 = and(pmp_mask_base_5, _pmp_mask_T_22) @[PMP.scala 60:14]
    node _pmp_mask_T_23 = cat(pmp_mask_hi_5, UInt<2>("h3")) @[Cat.scala 30:58]
    skip
    node pmp_mask_base_lo_6 = bits(reg_pmp_6_cfg_a, 0, 0) @[PMP.scala 59:31]
    skip
    node pmp_mask_base_6 = cat(reg_pmp_6_addr, pmp_mask_base_lo_6) @[Cat.scala 30:58]
    skip
    node _pmp_mask_T_24 = add(pmp_mask_base_6, UInt<31>("h1")) @[PMP.scala 60:23]
    node _pmp_mask_T_25 = tail(_pmp_mask_T_24, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_26 = not(_pmp_mask_T_25) @[PMP.scala 60:16]
    node pmp_mask_hi_6 = and(pmp_mask_base_6, _pmp_mask_T_26) @[PMP.scala 60:14]
    node _pmp_mask_T_27 = cat(pmp_mask_hi_6, UInt<2>("h3")) @[Cat.scala 30:58]
    skip
    node pmp_mask_base_lo_7 = bits(reg_pmp_7_cfg_a, 0, 0) @[PMP.scala 59:31]
    skip
    node pmp_mask_base_7 = cat(reg_pmp_7_addr, pmp_mask_base_lo_7) @[Cat.scala 30:58]
    skip
    node _pmp_mask_T_28 = add(pmp_mask_base_7, UInt<31>("h1")) @[PMP.scala 60:23]
    node _pmp_mask_T_29 = tail(_pmp_mask_T_28, 1) @[PMP.scala 60:23]
    node _pmp_mask_T_30 = not(_pmp_mask_T_29) @[PMP.scala 60:16]
    node pmp_mask_hi_7 = and(pmp_mask_base_7, _pmp_mask_T_30) @[PMP.scala 60:14]
    node _pmp_mask_T_31 = cat(pmp_mask_hi_7, UInt<2>("h3")) @[Cat.scala 30:58]
    reg reg_misa : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_misa) @[CSR.scala 490:21]
    node read_mstatus_lo_lo_lo_hi = cat(io_status_hie, io_status_sie) @[CSR.scala 491:38]
    node read_mstatus_lo_lo_lo = cat(read_mstatus_lo_lo_lo_hi, io_status_uie) @[CSR.scala 491:38]
    node read_mstatus_lo_lo_hi_lo = cat(io_status_upie, io_status_mie) @[CSR.scala 491:38]
    node read_mstatus_lo_lo_hi_hi = cat(io_status_hpie, io_status_spie) @[CSR.scala 491:38]
    node read_mstatus_lo_lo_hi = cat(read_mstatus_lo_lo_hi_hi, read_mstatus_lo_lo_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_lo_lo = cat(read_mstatus_lo_lo_hi, read_mstatus_lo_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_lo_lo = cat(io_status_spp, io_status_mpie) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_lo_hi = cat(io_status_mpp, io_status_vs) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_lo = cat(read_mstatus_lo_hi_lo_hi, read_mstatus_lo_hi_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_hi_lo = cat(io_status_xs, io_status_fs) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_hi_hi = cat(io_status_sum, io_status_mprv) @[CSR.scala 491:38]
    node read_mstatus_lo_hi_hi = cat(read_mstatus_lo_hi_hi_hi, read_mstatus_lo_hi_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_lo_hi = cat(read_mstatus_lo_hi_hi, read_mstatus_lo_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_lo = cat(read_mstatus_lo_hi, read_mstatus_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_lo_lo = cat(io_status_tvm, io_status_mxr) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_lo_hi = cat(io_status_tsr, io_status_tw) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_lo = cat(read_mstatus_hi_lo_lo_hi, read_mstatus_hi_lo_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_hi_lo = cat(io_status_sd_rv32, io_status_zero1) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_hi_hi = cat(io_status_sxl, io_status_uxl) @[CSR.scala 491:38]
    node read_mstatus_hi_lo_hi = cat(read_mstatus_hi_lo_hi_hi, read_mstatus_hi_lo_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_lo = cat(read_mstatus_hi_lo_hi, read_mstatus_hi_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_lo_lo = cat(io_status_sd, io_status_zero2) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_lo_hi = cat(io_status_dprv, io_status_prv) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_lo = cat(read_mstatus_hi_hi_lo_hi, read_mstatus_hi_hi_lo_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_hi_lo = cat(io_status_wfi, io_status_isa) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_hi_hi = cat(io_status_debug, io_status_cease) @[CSR.scala 491:38]
    node read_mstatus_hi_hi_hi = cat(read_mstatus_hi_hi_hi_hi, read_mstatus_hi_hi_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_hi_hi = cat(read_mstatus_hi_hi_hi, read_mstatus_hi_hi_lo) @[CSR.scala 491:38]
    node read_mstatus_hi = cat(read_mstatus_hi_hi, read_mstatus_hi_lo) @[CSR.scala 491:38]
    node _read_mstatus_T = cat(read_mstatus_hi, read_mstatus_lo) @[CSR.scala 491:38]
    node read_mstatus = bits(_read_mstatus_T, 63, 0) @[CSR.scala 491:40]
    node _read_mtvec_T = bits(reg_mtvec, 0, 0) @[CSR.scala 1206:41]
    node _read_mtvec_T_1 = mux(_read_mtvec_T, UInt<8>("hfe"), UInt<8>("h2")) @[CSR.scala 1206:39]
    skip
    node _read_mtvec_T_3 = pad(_read_mtvec_T_1, 32) @[package.scala 165:41]
    node _read_mtvec_T_4 = not(_read_mtvec_T_3) @[package.scala 165:37]
    node read_mtvec_lo = and(reg_mtvec, _read_mtvec_T_4) @[package.scala 165:35]
    node read_mtvec = cat(UInt<32>("h0"), read_mtvec_lo) @[Cat.scala 30:58]
    node _read_stvec_T = bits(reg_stvec, 0, 0) @[CSR.scala 1206:41]
    node _read_stvec_T_1 = mux(_read_stvec_T, UInt<8>("hfe"), UInt<8>("h2")) @[CSR.scala 1206:39]
    skip
    node _read_stvec_T_3 = pad(_read_stvec_T_1, 39) @[package.scala 165:41]
    node _read_stvec_T_4 = not(_read_stvec_T_3) @[package.scala 165:37]
    node read_stvec_lo = and(reg_stvec, _read_stvec_T_4) @[package.scala 165:35]
    node _read_stvec_T_5 = bits(read_stvec_lo, 38, 38) @[package.scala 123:38]
    skip
    node read_stvec_hi = mux(_read_stvec_T_5, UInt<25>("h1ffffff"), UInt<25>("h0")) @[Bitwise.scala 72:12]
    node read_stvec = cat(read_stvec_hi, read_stvec_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node lo_lo_hi_2 = cat(reg_bp_0_control_x, reg_bp_0_control_w) @[CSR.scala 497:48]
    skip
    skip
    skip
    node lo_lo_2 = cat(lo_lo_hi_2, reg_bp_0_control_r) @[CSR.scala 497:48]
    skip
    skip
    skip
    skip
    skip
    skip
    node lo_hi_lo_2 = cat(reg_bp_0_control_s, reg_bp_0_control_u) @[CSR.scala 497:48]
    skip
    skip
    skip
    skip
    skip
    skip
    node lo_hi_hi_2 = cat(reg_bp_0_control_m, UInt<1>("h0")) @[CSR.scala 497:48]
    node lo_hi_2 = cat(lo_hi_hi_2, lo_hi_lo_2) @[CSR.scala 497:48]
    node lo_2 = cat(lo_hi_2, lo_lo_2) @[CSR.scala 497:48]
    skip
    skip
    skip
    skip
    skip
    skip
    node hi_lo_lo_2 = cat(UInt<2>("h0"), reg_bp_0_control_tmatch) @[CSR.scala 497:48]
    skip
    skip
    skip
    skip
    skip
    skip
    node hi_lo_hi_2 = cat(reg_bp_0_control_action, UInt<1>("h0")) @[CSR.scala 497:48]
    node hi_lo_2 = cat(hi_lo_hi_2, hi_lo_lo_2) @[CSR.scala 497:48]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hi_hi_hi_2 = cat(UInt<4>("h2"), reg_bp_0_control_dmode) @[CSR.scala 497:48]
    node hi_hi_2 = cat(hi_hi_hi_2, UInt<46>("h40000000000")) @[CSR.scala 497:48]
    node hi_2 = cat(hi_hi_2, hi_lo_2) @[CSR.scala 497:48]
    node _T_7 = cat(hi_2, lo_2) @[CSR.scala 497:48]
    skip
    skip
    skip
    node _T_8 = bits(reg_bp_0_address, 38, 38) @[package.scala 123:38]
    skip
    node hi_3 = mux(_T_8, UInt<25>("h1ffffff"), UInt<25>("h0")) @[Bitwise.scala 72:12]
    skip
    node _T_10 = cat(hi_3, reg_bp_0_address) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_12 = not(reg_mepc) @[CSR.scala 1205:28]
    node _T_13 = bits(reg_misa, 2, 2) @[CSR.scala 1205:45]
    node _T_14 = mux(_T_13, UInt<2>("h1"), UInt<2>("h3")) @[CSR.scala 1205:36]
    node _GEN_557 = pad(_T_14, 40) @[CSR.scala 1205:31]
    node _T_15 = or(_T_12, _GEN_557) @[CSR.scala 1205:31]
    node lo_4 = not(_T_15) @[CSR.scala 1205:26]
    node _T_16 = bits(lo_4, 39, 39) @[package.scala 123:38]
    skip
    node hi_5 = mux(_T_16, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 72:12]
    node _T_18 = cat(hi_5, lo_4) @[Cat.scala 30:58]
    node _T_19 = bits(reg_mtval, 39, 39) @[package.scala 123:38]
    skip
    node hi_6 = mux(_T_19, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 72:12]
    node _T_21 = cat(hi_6, reg_mtval) @[Cat.scala 30:58]
    node lo_lo_hi_3 = cat(UInt<3>("h0"), reg_dcsr_step) @[CSR.scala 512:27]
    node lo_lo_3 = cat(lo_lo_hi_3, reg_dcsr_prv) @[CSR.scala 512:27]
    node lo_hi_lo_3 = cat(UInt<1>("h0"), reg_dcsr_cause) @[CSR.scala 512:27]
    skip
    node lo_hi_4 = cat(UInt<2>("h0"), lo_hi_lo_3) @[CSR.scala 512:27]
    node lo_5 = cat(lo_hi_4, lo_lo_3) @[CSR.scala 512:27]
    node hi_lo_hi_3 = cat(UInt<1>("h0"), reg_dcsr_ebreaks) @[CSR.scala 512:27]
    node hi_lo_3 = cat(hi_lo_hi_3, reg_dcsr_ebreaku) @[CSR.scala 512:27]
    node hi_hi_lo_3 = cat(UInt<12>("h0"), reg_dcsr_ebreakm) @[CSR.scala 512:27]
    skip
    node hi_hi_4 = cat(UInt<4>("h4"), hi_hi_lo_3) @[CSR.scala 512:27]
    node hi_7 = cat(hi_hi_4, hi_lo_3) @[CSR.scala 512:27]
    node _T_22 = cat(hi_7, lo_5) @[CSR.scala 512:27]
    node _T_23 = not(reg_dpc) @[CSR.scala 1205:28]
    skip
    skip
    skip
    node _T_26 = or(_T_23, _GEN_557) @[CSR.scala 1205:31]
    node lo_6 = not(_T_26) @[CSR.scala 1205:26]
    node _T_27 = bits(lo_6, 39, 39) @[package.scala 123:38]
    skip
    node hi_8 = mux(_T_27, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 72:12]
    node _T_29 = cat(hi_8, lo_6) @[Cat.scala 30:58]
    node read_fcsr = cat(reg_frm, reg_fflags) @[Cat.scala 30:58]
    skip
    node read_sie = and(reg_mie, read_mideleg) @[CSR.scala 584:28]
    skip
    node read_sip = and(_GEN_43, read_mideleg) @[CSR.scala 585:29]
    skip
    skip
    skip
    node lo_lo_lo_hi = cat(UInt<1>("h0"), io_status_sie) @[CSR.scala 599:57]
    skip
    skip
    node lo_lo_lo_2 = cat(lo_lo_lo_hi, UInt<1>("h0")) @[CSR.scala 599:57]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node lo_lo_hi_hi = cat(UInt<1>("h0"), io_status_spie) @[CSR.scala 599:57]
    node lo_lo_hi_4 = cat(lo_lo_hi_hi, UInt<2>("h0")) @[CSR.scala 599:57]
    node lo_lo_4 = cat(lo_lo_hi_4, lo_lo_lo_2) @[CSR.scala 599:57]
    skip
    skip
    skip
    node lo_hi_lo_lo = cat(io_status_spp, UInt<1>("h0")) @[CSR.scala 599:57]
    skip
    skip
    skip
    node lo_hi_lo_hi = cat(UInt<2>("h0"), io_status_vs) @[CSR.scala 599:57]
    node lo_hi_lo_4 = cat(lo_hi_lo_hi, lo_hi_lo_lo) @[CSR.scala 599:57]
    skip
    skip
    skip
    skip
    skip
    skip
    node lo_hi_hi_hi = cat(io_status_sum, UInt<1>("h0")) @[CSR.scala 599:57]
    node lo_hi_hi_4 = cat(lo_hi_hi_hi, read_mstatus_lo_hi_hi_lo) @[CSR.scala 599:57]
    node lo_hi_5 = cat(lo_hi_hi_4, lo_hi_lo_4) @[CSR.scala 599:57]
    node lo_7 = cat(lo_hi_5, lo_lo_4) @[CSR.scala 599:57]
    skip
    skip
    skip
    node hi_lo_lo_lo = cat(UInt<1>("h0"), io_status_mxr) @[CSR.scala 599:57]
    skip
    skip
    skip
    skip
    skip
    node hi_lo_lo_3 = cat(UInt<2>("h0"), hi_lo_lo_lo) @[CSR.scala 599:57]
    skip
    skip
    skip
    node hi_lo_hi_lo = cat(io_status_sd_rv32, UInt<8>("h0")) @[CSR.scala 599:57]
    skip
    skip
    skip
    node hi_lo_hi_hi = cat(UInt<2>("h0"), io_status_uxl) @[CSR.scala 599:57]
    node hi_lo_hi_4 = cat(hi_lo_hi_hi, hi_lo_hi_lo) @[CSR.scala 599:57]
    node hi_lo_4 = cat(hi_lo_hi_4, hi_lo_lo_3) @[CSR.scala 599:57]
    skip
    skip
    skip
    node hi_hi_lo_lo = cat(io_status_sd, UInt<27>("h0")) @[CSR.scala 599:57]
    skip
    skip
    skip
    skip
    skip
    node hi_hi_lo_4 = cat(UInt<4>("h0"), hi_hi_lo_lo) @[CSR.scala 599:57]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node hi_hi_5 = cat(UInt<35>("h0"), hi_hi_lo_4) @[CSR.scala 599:57]
    node hi_9 = cat(hi_hi_5, hi_lo_4) @[CSR.scala 599:57]
    node _T_30 = cat(hi_9, lo_7) @[CSR.scala 599:57]
    node _T_31 = bits(_T_30, 63, 0) @[CSR.scala 599:60]
    node _T_32 = bits(reg_stval, 39, 39) @[package.scala 123:38]
    skip
    node hi_10 = mux(_T_32, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 72:12]
    node _T_34 = cat(hi_10, reg_stval) @[Cat.scala 30:58]
    node hi_11 = cat(reg_satp_mode, UInt<16>("h0")) @[CSR.scala 605:43]
    node _T_35 = cat(hi_11, reg_satp_ppn) @[CSR.scala 605:43]
    node _T_36 = not(reg_sepc) @[CSR.scala 1205:28]
    skip
    skip
    skip
    node _T_39 = or(_T_36, _GEN_557) @[CSR.scala 1205:31]
    node lo_8 = not(_T_39) @[CSR.scala 1205:26]
    node _T_40 = bits(lo_8, 39, 39) @[package.scala 123:38]
    skip
    node hi_12 = mux(_T_40, UInt<24>("hffffff"), UInt<24>("h0")) @[Bitwise.scala 72:12]
    node _T_42 = cat(hi_12, lo_8) @[Cat.scala 30:58]
    node lo_hi_6 = cat(reg_pmp_0_cfg_x, reg_pmp_0_cfg_w) @[package.scala 36:38]
    node lo_9 = cat(lo_hi_6, reg_pmp_0_cfg_r) @[package.scala 36:38]
    node hi_hi_6 = cat(reg_pmp_0_cfg_l, UInt<2>("h0")) @[package.scala 36:38]
    node hi_13 = cat(hi_hi_6, reg_pmp_0_cfg_a) @[package.scala 36:38]
    node lo_lo_lo_3 = cat(hi_13, lo_9) @[package.scala 36:38]
    node lo_hi_7 = cat(reg_pmp_1_cfg_x, reg_pmp_1_cfg_w) @[package.scala 36:38]
    node lo_10 = cat(lo_hi_7, reg_pmp_1_cfg_r) @[package.scala 36:38]
    node hi_hi_7 = cat(reg_pmp_1_cfg_l, UInt<2>("h0")) @[package.scala 36:38]
    node hi_14 = cat(hi_hi_7, reg_pmp_1_cfg_a) @[package.scala 36:38]
    node lo_lo_hi_5 = cat(hi_14, lo_10) @[package.scala 36:38]
    node lo_hi_8 = cat(reg_pmp_2_cfg_x, reg_pmp_2_cfg_w) @[package.scala 36:38]
    node lo_11 = cat(lo_hi_8, reg_pmp_2_cfg_r) @[package.scala 36:38]
    node hi_hi_8 = cat(reg_pmp_2_cfg_l, UInt<2>("h0")) @[package.scala 36:38]
    node hi_15 = cat(hi_hi_8, reg_pmp_2_cfg_a) @[package.scala 36:38]
    node lo_hi_lo_5 = cat(hi_15, lo_11) @[package.scala 36:38]
    node lo_hi_9 = cat(reg_pmp_3_cfg_x, reg_pmp_3_cfg_w) @[package.scala 36:38]
    node lo_12 = cat(lo_hi_9, reg_pmp_3_cfg_r) @[package.scala 36:38]
    node hi_hi_9 = cat(reg_pmp_3_cfg_l, UInt<2>("h0")) @[package.scala 36:38]
    node hi_16 = cat(hi_hi_9, reg_pmp_3_cfg_a) @[package.scala 36:38]
    node lo_hi_hi_5 = cat(hi_16, lo_12) @[package.scala 36:38]
    node lo_hi_10 = cat(reg_pmp_4_cfg_x, reg_pmp_4_cfg_w) @[package.scala 36:38]
    node lo_13 = cat(lo_hi_10, reg_pmp_4_cfg_r) @[package.scala 36:38]
    node hi_hi_10 = cat(reg_pmp_4_cfg_l, UInt<2>("h0")) @[package.scala 36:38]
    node hi_17 = cat(hi_hi_10, reg_pmp_4_cfg_a) @[package.scala 36:38]
    node hi_lo_lo_4 = cat(hi_17, lo_13) @[package.scala 36:38]
    node lo_hi_11 = cat(reg_pmp_5_cfg_x, reg_pmp_5_cfg_w) @[package.scala 36:38]
    node lo_14 = cat(lo_hi_11, reg_pmp_5_cfg_r) @[package.scala 36:38]
    node hi_hi_11 = cat(reg_pmp_5_cfg_l, UInt<2>("h0")) @[package.scala 36:38]
    node hi_18 = cat(hi_hi_11, reg_pmp_5_cfg_a) @[package.scala 36:38]
    node hi_lo_hi_5 = cat(hi_18, lo_14) @[package.scala 36:38]
    node lo_hi_12 = cat(reg_pmp_6_cfg_x, reg_pmp_6_cfg_w) @[package.scala 36:38]
    node lo_15 = cat(lo_hi_12, reg_pmp_6_cfg_r) @[package.scala 36:38]
    node hi_hi_12 = cat(reg_pmp_6_cfg_l, UInt<2>("h0")) @[package.scala 36:38]
    node hi_19 = cat(hi_hi_12, reg_pmp_6_cfg_a) @[package.scala 36:38]
    node hi_hi_lo_5 = cat(hi_19, lo_15) @[package.scala 36:38]
    node lo_hi_13 = cat(reg_pmp_7_cfg_x, reg_pmp_7_cfg_w) @[package.scala 36:38]
    node lo_16 = cat(lo_hi_13, reg_pmp_7_cfg_r) @[package.scala 36:38]
    node hi_hi_13 = cat(reg_pmp_7_cfg_l, UInt<2>("h0")) @[package.scala 36:38]
    node hi_20 = cat(hi_hi_13, reg_pmp_7_cfg_a) @[package.scala 36:38]
    node hi_hi_hi_5 = cat(hi_20, lo_16) @[package.scala 36:38]
    node lo_lo_5 = cat(lo_lo_hi_5, lo_lo_lo_3) @[Cat.scala 30:58]
    node lo_hi_14 = cat(lo_hi_hi_5, lo_hi_lo_5) @[Cat.scala 30:58]
    node lo_17 = cat(lo_hi_14, lo_lo_5) @[Cat.scala 30:58]
    node hi_lo_5 = cat(hi_lo_hi_5, hi_lo_lo_4) @[Cat.scala 30:58]
    node hi_hi_14 = cat(hi_hi_hi_5, hi_hi_lo_5) @[Cat.scala 30:58]
    node hi_21 = cat(hi_hi_14, hi_lo_5) @[Cat.scala 30:58]
    node _T_43 = cat(hi_21, lo_17) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg reg_custom_0 : UInt<64>, clock with :
      reset => (UInt<1>("h0"), reg_custom_0) @[CSR.scala 628:43]
    skip
    skip
    skip
    skip
    node _T_46 = eq(io_rw_addr, UInt<12>("h7a1")) @[CSR.scala 636:73]
    node _T_47 = eq(io_rw_addr, UInt<12>("h7a2")) @[CSR.scala 636:73]
    skip
    node _T_49 = eq(io_rw_addr, UInt<12>("h301")) @[CSR.scala 636:73]
    node _T_50 = eq(io_rw_addr, UInt<12>("h300")) @[CSR.scala 636:73]
    node _T_51 = eq(io_rw_addr, UInt<12>("h305")) @[CSR.scala 636:73]
    node _T_52 = eq(io_rw_addr, UInt<12>("h344")) @[CSR.scala 636:73]
    node _T_53 = eq(io_rw_addr, UInt<12>("h304")) @[CSR.scala 636:73]
    node _T_54 = eq(io_rw_addr, UInt<12>("h340")) @[CSR.scala 636:73]
    node _T_55 = eq(io_rw_addr, UInt<12>("h341")) @[CSR.scala 636:73]
    node _T_56 = eq(io_rw_addr, UInt<12>("h343")) @[CSR.scala 636:73]
    node _T_57 = eq(io_rw_addr, UInt<12>("h342")) @[CSR.scala 636:73]
    node _T_58 = eq(io_rw_addr, UInt<12>("hf14")) @[CSR.scala 636:73]
    node _T_59 = eq(io_rw_addr, UInt<12>("h7b0")) @[CSR.scala 636:73]
    node _T_60 = eq(io_rw_addr, UInt<12>("h7b1")) @[CSR.scala 636:73]
    node _T_61 = eq(io_rw_addr, UInt<12>("h7b2")) @[CSR.scala 636:73]
    node _T_62 = eq(io_rw_addr, UInt<12>("h1")) @[CSR.scala 636:73]
    node _T_63 = eq(io_rw_addr, UInt<12>("h2")) @[CSR.scala 636:73]
    node _T_64 = eq(io_rw_addr, UInt<12>("h3")) @[CSR.scala 636:73]
    node _T_65 = eq(io_rw_addr, UInt<12>("h320")) @[CSR.scala 636:73]
    node _T_66 = eq(io_rw_addr, UInt<12>("hb00")) @[CSR.scala 636:73]
    node _T_67 = eq(io_rw_addr, UInt<12>("hb02")) @[CSR.scala 636:73]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_155 = eq(io_rw_addr, UInt<12>("h306")) @[CSR.scala 636:73]
    node _T_156 = eq(io_rw_addr, UInt<12>("hc00")) @[CSR.scala 636:73]
    node _T_157 = eq(io_rw_addr, UInt<12>("hc02")) @[CSR.scala 636:73]
    node _T_158 = eq(io_rw_addr, UInt<12>("h100")) @[CSR.scala 636:73]
    node _T_159 = eq(io_rw_addr, UInt<12>("h144")) @[CSR.scala 636:73]
    node _T_160 = eq(io_rw_addr, UInt<12>("h104")) @[CSR.scala 636:73]
    node _T_161 = eq(io_rw_addr, UInt<12>("h140")) @[CSR.scala 636:73]
    node _T_162 = eq(io_rw_addr, UInt<12>("h142")) @[CSR.scala 636:73]
    node _T_163 = eq(io_rw_addr, UInt<12>("h143")) @[CSR.scala 636:73]
    node _T_164 = eq(io_rw_addr, UInt<12>("h180")) @[CSR.scala 636:73]
    node _T_165 = eq(io_rw_addr, UInt<12>("h141")) @[CSR.scala 636:73]
    node _T_166 = eq(io_rw_addr, UInt<12>("h105")) @[CSR.scala 636:73]
    node _T_167 = eq(io_rw_addr, UInt<12>("h106")) @[CSR.scala 636:73]
    node _T_168 = eq(io_rw_addr, UInt<12>("h303")) @[CSR.scala 636:73]
    node _T_169 = eq(io_rw_addr, UInt<12>("h302")) @[CSR.scala 636:73]
    node _T_170 = eq(io_rw_addr, UInt<12>("h3a0")) @[CSR.scala 636:73]
    skip
    node _T_172 = eq(io_rw_addr, UInt<12>("h3b0")) @[CSR.scala 636:73]
    node _T_173 = eq(io_rw_addr, UInt<12>("h3b1")) @[CSR.scala 636:73]
    node _T_174 = eq(io_rw_addr, UInt<12>("h3b2")) @[CSR.scala 636:73]
    node _T_175 = eq(io_rw_addr, UInt<12>("h3b3")) @[CSR.scala 636:73]
    node _T_176 = eq(io_rw_addr, UInt<12>("h3b4")) @[CSR.scala 636:73]
    node _T_177 = eq(io_rw_addr, UInt<12>("h3b5")) @[CSR.scala 636:73]
    node _T_178 = eq(io_rw_addr, UInt<12>("h3b6")) @[CSR.scala 636:73]
    node _T_179 = eq(io_rw_addr, UInt<12>("h3b7")) @[CSR.scala 636:73]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_188 = eq(io_rw_addr, UInt<12>("h7c1")) @[CSR.scala 636:73]
    node _T_189 = eq(io_rw_addr, UInt<12>("hf12")) @[CSR.scala 636:73]
    skip
    node _T_191 = eq(io_rw_addr, UInt<12>("hf13")) @[CSR.scala 636:73]
    node _wdata_T = bits(io_rw_cmd, 1, 1) @[CSR.scala 1183:13]
    node _wdata_T_1 = mux(_wdata_T, io_rw_rdata, UInt<64>("h0")) @[CSR.scala 1183:9]
    node _wdata_T_2 = or(_wdata_T_1, io_rw_wdata) @[CSR.scala 1183:34]
    node _wdata_T_3 = bits(io_rw_cmd, 1, 0) @[CSR.scala 1183:53]
    node _wdata_T_4 = andr(_wdata_T_3) @[CSR.scala 1183:59]
    node _wdata_T_5 = mux(_wdata_T_4, io_rw_wdata, UInt<64>("h0")) @[CSR.scala 1183:49]
    node _wdata_T_6 = not(_wdata_T_5) @[CSR.scala 1183:45]
    node wdata = and(_wdata_T_2, _wdata_T_6) @[CSR.scala 1183:43]
    node _T_205 = and(_T_192, UInt<32>("h20200000")) @[Decode.scala 14:65]
    node _T_206 = eq(_T_205, UInt<32>("h20000000")) @[Decode.scala 14:121]
    skip
    node _T_208 = and(_T_192, UInt<32>("h32200000")) @[Decode.scala 14:65]
    node _T_209 = eq(_T_208, UInt<32>("h10000000")) @[Decode.scala 14:121]
    skip
    skip
    skip
    skip
    skip
    node insn_cease = and(system_insn, _T_206) @[CSR.scala 652:95]
    skip
    node insn_wfi = and(system_insn, _T_209) @[CSR.scala 652:95]
    skip
    skip
    node _T_220 = shl(io_decode_0_csr, 20) @[CSR.scala 659:30]
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_227 = and(_T_220, UInt<32>("h12400000")) @[Decode.scala 14:65]
    node _T_228 = eq(_T_227, UInt<32>("h10000000")) @[Decode.scala 14:121]
    node _T_229 = and(_T_220, UInt<32>("h40000000")) @[Decode.scala 14:65]
    node _T_230 = eq(_T_229, UInt<32>("h40000000")) @[Decode.scala 14:121]
    skip
    node is_ret = or(_T_228, _T_230) @[Decode.scala 15:30]
    skip
    skip
    skip
    node _T_236 = and(_T_220, UInt<32>("h32200000")) @[Decode.scala 14:65]
    node is_wfi = eq(_T_236, UInt<32>("h10000000")) @[Decode.scala 14:121]
    skip
    node _T_239 = and(_T_220, UInt<32>("h42000000")) @[Decode.scala 14:65]
    node is_sfence = eq(_T_239, UInt<32>("h2000000")) @[Decode.scala 14:121]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _allow_wfi_T = gt(reg_mstatus_prv, UInt<2>("h1")) @[CSR.scala 661:63]
    skip
    node _allow_wfi_T_2 = not(reg_mstatus_tw) @[CSR.scala 661:74]
    node allow_wfi = or(_allow_wfi_T, _allow_wfi_T_2) @[CSR.scala 661:71]
    skip
    skip
    node _allow_sfence_vma_T_2 = not(reg_mstatus_tvm) @[CSR.scala 662:73]
    node allow_sfence_vma = or(_allow_wfi_T, _allow_sfence_vma_T_2) @[CSR.scala 662:70]
    skip
    skip
    node _allow_sret_T_2 = not(reg_mstatus_tsr) @[CSR.scala 663:75]
    node allow_sret = or(_allow_wfi_T, _allow_sret_T_2) @[CSR.scala 663:72]
    node counter_addr = bits(io_decode_0_csr, 4, 0) @[CSR.scala 664:34]
    skip
    node _allow_counter_T_1 = dshr(read_mcounteren, counter_addr) @[CSR.scala 665:68]
    node _allow_counter_T_2 = bits(_allow_counter_T_1, 0, 0) @[CSR.scala 665:68]
    node _allow_counter_T_3 = or(_allow_wfi_T, _allow_counter_T_2) @[CSR.scala 665:50]
    node _allow_counter_T_4 = geq(reg_mstatus_prv, UInt<2>("h1")) @[CSR.scala 666:44]
    skip
    node _allow_counter_T_6 = dshr(read_scounteren, counter_addr) @[CSR.scala 666:71]
    node _allow_counter_T_7 = bits(_allow_counter_T_6, 0, 0) @[CSR.scala 666:71]
    node _allow_counter_T_8 = or(_allow_counter_T_4, _allow_counter_T_7) @[CSR.scala 666:53]
    node allow_counter = and(_allow_counter_T_3, _allow_counter_T_8) @[CSR.scala 665:84]
    node _io_decode_0_fp_illegal_T = eq(io_status_fs, UInt<2>("h0")) @[CSR.scala 667:39]
    node _io_decode_0_fp_illegal_T_1 = bits(reg_misa, 5, 5) @[CSR.scala 667:57]
    node _io_decode_0_fp_illegal_T_2 = not(_io_decode_0_fp_illegal_T_1) @[CSR.scala 667:48]
    skip
    skip
    skip
    skip
    skip
    node _io_decode_0_fp_csr_T = and(io_decode_0_csr, UInt<12>("h900")) @[Decode.scala 14:65]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_decode_0_read_illegal_T = bits(io_decode_0_csr, 9, 8) @[CSR.scala 671:56]
    node _io_decode_0_read_illegal_T_1 = lt(reg_mstatus_prv, _io_decode_0_read_illegal_T) @[CSR.scala 671:44]
    node _io_decode_0_read_illegal_T_2 = eq(io_decode_0_csr, UInt<12>("h7a0")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_3 = eq(io_decode_0_csr, UInt<12>("h7a1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_4 = eq(io_decode_0_csr, UInt<12>("h7a2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_5 = eq(io_decode_0_csr, UInt<12>("h7a3")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_6 = eq(io_decode_0_csr, UInt<12>("h301")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_7 = eq(io_decode_0_csr, UInt<12>("h300")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_8 = eq(io_decode_0_csr, UInt<12>("h305")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_9 = eq(io_decode_0_csr, UInt<12>("h344")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_10 = eq(io_decode_0_csr, UInt<12>("h304")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_11 = eq(io_decode_0_csr, UInt<12>("h340")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_12 = eq(io_decode_0_csr, UInt<12>("h341")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_13 = eq(io_decode_0_csr, UInt<12>("h343")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_14 = eq(io_decode_0_csr, UInt<12>("h342")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_15 = eq(io_decode_0_csr, UInt<12>("hf14")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_16 = eq(io_decode_0_csr, UInt<12>("h7b0")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_17 = eq(io_decode_0_csr, UInt<12>("h7b1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_18 = eq(io_decode_0_csr, UInt<12>("h7b2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_19 = eq(io_decode_0_csr, UInt<12>("h1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_20 = eq(io_decode_0_csr, UInt<12>("h2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_21 = eq(io_decode_0_csr, UInt<12>("h3")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_22 = eq(io_decode_0_csr, UInt<12>("h320")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_23 = eq(io_decode_0_csr, UInt<12>("hb00")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_24 = eq(io_decode_0_csr, UInt<12>("hb02")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_25 = eq(io_decode_0_csr, UInt<12>("h323")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_26 = eq(io_decode_0_csr, UInt<12>("hb03")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_27 = eq(io_decode_0_csr, UInt<12>("hc03")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_28 = eq(io_decode_0_csr, UInt<12>("h324")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_29 = eq(io_decode_0_csr, UInt<12>("hb04")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_30 = eq(io_decode_0_csr, UInt<12>("hc04")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_31 = eq(io_decode_0_csr, UInt<12>("h325")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_32 = eq(io_decode_0_csr, UInt<12>("hb05")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_33 = eq(io_decode_0_csr, UInt<12>("hc05")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_34 = eq(io_decode_0_csr, UInt<12>("h326")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_35 = eq(io_decode_0_csr, UInt<12>("hb06")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_36 = eq(io_decode_0_csr, UInt<12>("hc06")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_37 = eq(io_decode_0_csr, UInt<12>("h327")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_38 = eq(io_decode_0_csr, UInt<12>("hb07")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_39 = eq(io_decode_0_csr, UInt<12>("hc07")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_40 = eq(io_decode_0_csr, UInt<12>("h328")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_41 = eq(io_decode_0_csr, UInt<12>("hb08")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_42 = eq(io_decode_0_csr, UInt<12>("hc08")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_43 = eq(io_decode_0_csr, UInt<12>("h329")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_44 = eq(io_decode_0_csr, UInt<12>("hb09")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_45 = eq(io_decode_0_csr, UInt<12>("hc09")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_46 = eq(io_decode_0_csr, UInt<12>("h32a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_47 = eq(io_decode_0_csr, UInt<12>("hb0a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_48 = eq(io_decode_0_csr, UInt<12>("hc0a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_49 = eq(io_decode_0_csr, UInt<12>("h32b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_50 = eq(io_decode_0_csr, UInt<12>("hb0b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_51 = eq(io_decode_0_csr, UInt<12>("hc0b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_52 = eq(io_decode_0_csr, UInt<12>("h32c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_53 = eq(io_decode_0_csr, UInt<12>("hb0c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_54 = eq(io_decode_0_csr, UInt<12>("hc0c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_55 = eq(io_decode_0_csr, UInt<12>("h32d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_56 = eq(io_decode_0_csr, UInt<12>("hb0d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_57 = eq(io_decode_0_csr, UInt<12>("hc0d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_58 = eq(io_decode_0_csr, UInt<12>("h32e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_59 = eq(io_decode_0_csr, UInt<12>("hb0e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_60 = eq(io_decode_0_csr, UInt<12>("hc0e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_61 = eq(io_decode_0_csr, UInt<12>("h32f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_62 = eq(io_decode_0_csr, UInt<12>("hb0f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_63 = eq(io_decode_0_csr, UInt<12>("hc0f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_64 = eq(io_decode_0_csr, UInt<12>("h330")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_65 = eq(io_decode_0_csr, UInt<12>("hb10")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_66 = eq(io_decode_0_csr, UInt<12>("hc10")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_67 = eq(io_decode_0_csr, UInt<12>("h331")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_68 = eq(io_decode_0_csr, UInt<12>("hb11")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_69 = eq(io_decode_0_csr, UInt<12>("hc11")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_70 = eq(io_decode_0_csr, UInt<12>("h332")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_71 = eq(io_decode_0_csr, UInt<12>("hb12")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_72 = eq(io_decode_0_csr, UInt<12>("hc12")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_73 = eq(io_decode_0_csr, UInt<12>("h333")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_74 = eq(io_decode_0_csr, UInt<12>("hb13")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_75 = eq(io_decode_0_csr, UInt<12>("hc13")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_76 = eq(io_decode_0_csr, UInt<12>("h334")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_77 = eq(io_decode_0_csr, UInt<12>("hb14")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_78 = eq(io_decode_0_csr, UInt<12>("hc14")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_79 = eq(io_decode_0_csr, UInt<12>("h335")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_80 = eq(io_decode_0_csr, UInt<12>("hb15")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_81 = eq(io_decode_0_csr, UInt<12>("hc15")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_82 = eq(io_decode_0_csr, UInt<12>("h336")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_83 = eq(io_decode_0_csr, UInt<12>("hb16")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_84 = eq(io_decode_0_csr, UInt<12>("hc16")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_85 = eq(io_decode_0_csr, UInt<12>("h337")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_86 = eq(io_decode_0_csr, UInt<12>("hb17")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_87 = eq(io_decode_0_csr, UInt<12>("hc17")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_88 = eq(io_decode_0_csr, UInt<12>("h338")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_89 = eq(io_decode_0_csr, UInt<12>("hb18")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_90 = eq(io_decode_0_csr, UInt<12>("hc18")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_91 = eq(io_decode_0_csr, UInt<12>("h339")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_92 = eq(io_decode_0_csr, UInt<12>("hb19")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_93 = eq(io_decode_0_csr, UInt<12>("hc19")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_94 = eq(io_decode_0_csr, UInt<12>("h33a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_95 = eq(io_decode_0_csr, UInt<12>("hb1a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_96 = eq(io_decode_0_csr, UInt<12>("hc1a")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_97 = eq(io_decode_0_csr, UInt<12>("h33b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_98 = eq(io_decode_0_csr, UInt<12>("hb1b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_99 = eq(io_decode_0_csr, UInt<12>("hc1b")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_100 = eq(io_decode_0_csr, UInt<12>("h33c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_101 = eq(io_decode_0_csr, UInt<12>("hb1c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_102 = eq(io_decode_0_csr, UInt<12>("hc1c")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_103 = eq(io_decode_0_csr, UInt<12>("h33d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_104 = eq(io_decode_0_csr, UInt<12>("hb1d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_105 = eq(io_decode_0_csr, UInt<12>("hc1d")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_106 = eq(io_decode_0_csr, UInt<12>("h33e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_107 = eq(io_decode_0_csr, UInt<12>("hb1e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_108 = eq(io_decode_0_csr, UInt<12>("hc1e")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_109 = eq(io_decode_0_csr, UInt<12>("h33f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_110 = eq(io_decode_0_csr, UInt<12>("hb1f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_111 = eq(io_decode_0_csr, UInt<12>("hc1f")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_112 = eq(io_decode_0_csr, UInt<12>("h306")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_113 = eq(io_decode_0_csr, UInt<12>("hc00")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_114 = eq(io_decode_0_csr, UInt<12>("hc02")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_115 = eq(io_decode_0_csr, UInt<12>("h100")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_116 = eq(io_decode_0_csr, UInt<12>("h144")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_117 = eq(io_decode_0_csr, UInt<12>("h104")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_118 = eq(io_decode_0_csr, UInt<12>("h140")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_119 = eq(io_decode_0_csr, UInt<12>("h142")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_120 = eq(io_decode_0_csr, UInt<12>("h143")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_121 = eq(io_decode_0_csr, UInt<12>("h180")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_122 = eq(io_decode_0_csr, UInt<12>("h141")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_123 = eq(io_decode_0_csr, UInt<12>("h105")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_124 = eq(io_decode_0_csr, UInt<12>("h106")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_125 = eq(io_decode_0_csr, UInt<12>("h303")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_126 = eq(io_decode_0_csr, UInt<12>("h302")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_127 = eq(io_decode_0_csr, UInt<12>("h3a0")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_128 = eq(io_decode_0_csr, UInt<12>("h3a2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_129 = eq(io_decode_0_csr, UInt<12>("h3b0")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_130 = eq(io_decode_0_csr, UInt<12>("h3b1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_131 = eq(io_decode_0_csr, UInt<12>("h3b2")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_132 = eq(io_decode_0_csr, UInt<12>("h3b3")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_133 = eq(io_decode_0_csr, UInt<12>("h3b4")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_134 = eq(io_decode_0_csr, UInt<12>("h3b5")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_135 = eq(io_decode_0_csr, UInt<12>("h3b6")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_136 = eq(io_decode_0_csr, UInt<12>("h3b7")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_137 = eq(io_decode_0_csr, UInt<12>("h3b8")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_138 = eq(io_decode_0_csr, UInt<12>("h3b9")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_139 = eq(io_decode_0_csr, UInt<12>("h3ba")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_140 = eq(io_decode_0_csr, UInt<12>("h3bb")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_141 = eq(io_decode_0_csr, UInt<12>("h3bc")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_142 = eq(io_decode_0_csr, UInt<12>("h3bd")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_143 = eq(io_decode_0_csr, UInt<12>("h3be")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_144 = eq(io_decode_0_csr, UInt<12>("h3bf")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_145 = eq(io_decode_0_csr, UInt<12>("h7c1")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_146 = eq(io_decode_0_csr, UInt<12>("hf12")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_147 = eq(io_decode_0_csr, UInt<12>("hf11")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_148 = eq(io_decode_0_csr, UInt<12>("hf13")) @[CSR.scala 655:99]
    node _io_decode_0_read_illegal_T_149 = or(_io_decode_0_read_illegal_T_2, _io_decode_0_read_illegal_T_3) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_150 = or(_io_decode_0_read_illegal_T_149, _io_decode_0_read_illegal_T_4) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_151 = or(_io_decode_0_read_illegal_T_150, _io_decode_0_read_illegal_T_5) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_152 = or(_io_decode_0_read_illegal_T_151, _io_decode_0_read_illegal_T_6) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_153 = or(_io_decode_0_read_illegal_T_152, _io_decode_0_read_illegal_T_7) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_154 = or(_io_decode_0_read_illegal_T_153, _io_decode_0_read_illegal_T_8) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_155 = or(_io_decode_0_read_illegal_T_154, _io_decode_0_read_illegal_T_9) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_156 = or(_io_decode_0_read_illegal_T_155, _io_decode_0_read_illegal_T_10) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_157 = or(_io_decode_0_read_illegal_T_156, _io_decode_0_read_illegal_T_11) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_158 = or(_io_decode_0_read_illegal_T_157, _io_decode_0_read_illegal_T_12) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_159 = or(_io_decode_0_read_illegal_T_158, _io_decode_0_read_illegal_T_13) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_160 = or(_io_decode_0_read_illegal_T_159, _io_decode_0_read_illegal_T_14) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_161 = or(_io_decode_0_read_illegal_T_160, _io_decode_0_read_illegal_T_15) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_162 = or(_io_decode_0_read_illegal_T_161, _io_decode_0_read_illegal_T_16) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_163 = or(_io_decode_0_read_illegal_T_162, _io_decode_0_read_illegal_T_17) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_164 = or(_io_decode_0_read_illegal_T_163, _io_decode_0_read_illegal_T_18) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_165 = or(_io_decode_0_read_illegal_T_164, _io_decode_0_read_illegal_T_19) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_166 = or(_io_decode_0_read_illegal_T_165, _io_decode_0_read_illegal_T_20) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_167 = or(_io_decode_0_read_illegal_T_166, _io_decode_0_read_illegal_T_21) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_168 = or(_io_decode_0_read_illegal_T_167, _io_decode_0_read_illegal_T_22) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_169 = or(_io_decode_0_read_illegal_T_168, _io_decode_0_read_illegal_T_23) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_170 = or(_io_decode_0_read_illegal_T_169, _io_decode_0_read_illegal_T_24) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_171 = or(_io_decode_0_read_illegal_T_170, _io_decode_0_read_illegal_T_25) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_172 = or(_io_decode_0_read_illegal_T_171, _io_decode_0_read_illegal_T_26) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_173 = or(_io_decode_0_read_illegal_T_172, _io_decode_0_read_illegal_T_27) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_174 = or(_io_decode_0_read_illegal_T_173, _io_decode_0_read_illegal_T_28) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_175 = or(_io_decode_0_read_illegal_T_174, _io_decode_0_read_illegal_T_29) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_176 = or(_io_decode_0_read_illegal_T_175, _io_decode_0_read_illegal_T_30) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_177 = or(_io_decode_0_read_illegal_T_176, _io_decode_0_read_illegal_T_31) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_178 = or(_io_decode_0_read_illegal_T_177, _io_decode_0_read_illegal_T_32) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_179 = or(_io_decode_0_read_illegal_T_178, _io_decode_0_read_illegal_T_33) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_180 = or(_io_decode_0_read_illegal_T_179, _io_decode_0_read_illegal_T_34) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_181 = or(_io_decode_0_read_illegal_T_180, _io_decode_0_read_illegal_T_35) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_182 = or(_io_decode_0_read_illegal_T_181, _io_decode_0_read_illegal_T_36) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_183 = or(_io_decode_0_read_illegal_T_182, _io_decode_0_read_illegal_T_37) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_184 = or(_io_decode_0_read_illegal_T_183, _io_decode_0_read_illegal_T_38) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_185 = or(_io_decode_0_read_illegal_T_184, _io_decode_0_read_illegal_T_39) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_186 = or(_io_decode_0_read_illegal_T_185, _io_decode_0_read_illegal_T_40) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_187 = or(_io_decode_0_read_illegal_T_186, _io_decode_0_read_illegal_T_41) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_188 = or(_io_decode_0_read_illegal_T_187, _io_decode_0_read_illegal_T_42) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_189 = or(_io_decode_0_read_illegal_T_188, _io_decode_0_read_illegal_T_43) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_190 = or(_io_decode_0_read_illegal_T_189, _io_decode_0_read_illegal_T_44) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_191 = or(_io_decode_0_read_illegal_T_190, _io_decode_0_read_illegal_T_45) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_192 = or(_io_decode_0_read_illegal_T_191, _io_decode_0_read_illegal_T_46) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_193 = or(_io_decode_0_read_illegal_T_192, _io_decode_0_read_illegal_T_47) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_194 = or(_io_decode_0_read_illegal_T_193, _io_decode_0_read_illegal_T_48) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_195 = or(_io_decode_0_read_illegal_T_194, _io_decode_0_read_illegal_T_49) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_196 = or(_io_decode_0_read_illegal_T_195, _io_decode_0_read_illegal_T_50) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_197 = or(_io_decode_0_read_illegal_T_196, _io_decode_0_read_illegal_T_51) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_198 = or(_io_decode_0_read_illegal_T_197, _io_decode_0_read_illegal_T_52) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_199 = or(_io_decode_0_read_illegal_T_198, _io_decode_0_read_illegal_T_53) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_200 = or(_io_decode_0_read_illegal_T_199, _io_decode_0_read_illegal_T_54) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_201 = or(_io_decode_0_read_illegal_T_200, _io_decode_0_read_illegal_T_55) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_202 = or(_io_decode_0_read_illegal_T_201, _io_decode_0_read_illegal_T_56) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_203 = or(_io_decode_0_read_illegal_T_202, _io_decode_0_read_illegal_T_57) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_204 = or(_io_decode_0_read_illegal_T_203, _io_decode_0_read_illegal_T_58) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_205 = or(_io_decode_0_read_illegal_T_204, _io_decode_0_read_illegal_T_59) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_206 = or(_io_decode_0_read_illegal_T_205, _io_decode_0_read_illegal_T_60) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_207 = or(_io_decode_0_read_illegal_T_206, _io_decode_0_read_illegal_T_61) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_208 = or(_io_decode_0_read_illegal_T_207, _io_decode_0_read_illegal_T_62) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_209 = or(_io_decode_0_read_illegal_T_208, _io_decode_0_read_illegal_T_63) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_210 = or(_io_decode_0_read_illegal_T_209, _io_decode_0_read_illegal_T_64) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_211 = or(_io_decode_0_read_illegal_T_210, _io_decode_0_read_illegal_T_65) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_212 = or(_io_decode_0_read_illegal_T_211, _io_decode_0_read_illegal_T_66) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_213 = or(_io_decode_0_read_illegal_T_212, _io_decode_0_read_illegal_T_67) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_214 = or(_io_decode_0_read_illegal_T_213, _io_decode_0_read_illegal_T_68) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_215 = or(_io_decode_0_read_illegal_T_214, _io_decode_0_read_illegal_T_69) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_216 = or(_io_decode_0_read_illegal_T_215, _io_decode_0_read_illegal_T_70) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_217 = or(_io_decode_0_read_illegal_T_216, _io_decode_0_read_illegal_T_71) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_218 = or(_io_decode_0_read_illegal_T_217, _io_decode_0_read_illegal_T_72) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_219 = or(_io_decode_0_read_illegal_T_218, _io_decode_0_read_illegal_T_73) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_220 = or(_io_decode_0_read_illegal_T_219, _io_decode_0_read_illegal_T_74) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_221 = or(_io_decode_0_read_illegal_T_220, _io_decode_0_read_illegal_T_75) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_222 = or(_io_decode_0_read_illegal_T_221, _io_decode_0_read_illegal_T_76) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_223 = or(_io_decode_0_read_illegal_T_222, _io_decode_0_read_illegal_T_77) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_224 = or(_io_decode_0_read_illegal_T_223, _io_decode_0_read_illegal_T_78) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_225 = or(_io_decode_0_read_illegal_T_224, _io_decode_0_read_illegal_T_79) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_226 = or(_io_decode_0_read_illegal_T_225, _io_decode_0_read_illegal_T_80) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_227 = or(_io_decode_0_read_illegal_T_226, _io_decode_0_read_illegal_T_81) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_228 = or(_io_decode_0_read_illegal_T_227, _io_decode_0_read_illegal_T_82) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_229 = or(_io_decode_0_read_illegal_T_228, _io_decode_0_read_illegal_T_83) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_230 = or(_io_decode_0_read_illegal_T_229, _io_decode_0_read_illegal_T_84) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_231 = or(_io_decode_0_read_illegal_T_230, _io_decode_0_read_illegal_T_85) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_232 = or(_io_decode_0_read_illegal_T_231, _io_decode_0_read_illegal_T_86) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_233 = or(_io_decode_0_read_illegal_T_232, _io_decode_0_read_illegal_T_87) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_234 = or(_io_decode_0_read_illegal_T_233, _io_decode_0_read_illegal_T_88) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_235 = or(_io_decode_0_read_illegal_T_234, _io_decode_0_read_illegal_T_89) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_236 = or(_io_decode_0_read_illegal_T_235, _io_decode_0_read_illegal_T_90) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_237 = or(_io_decode_0_read_illegal_T_236, _io_decode_0_read_illegal_T_91) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_238 = or(_io_decode_0_read_illegal_T_237, _io_decode_0_read_illegal_T_92) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_239 = or(_io_decode_0_read_illegal_T_238, _io_decode_0_read_illegal_T_93) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_240 = or(_io_decode_0_read_illegal_T_239, _io_decode_0_read_illegal_T_94) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_241 = or(_io_decode_0_read_illegal_T_240, _io_decode_0_read_illegal_T_95) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_242 = or(_io_decode_0_read_illegal_T_241, _io_decode_0_read_illegal_T_96) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_243 = or(_io_decode_0_read_illegal_T_242, _io_decode_0_read_illegal_T_97) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_244 = or(_io_decode_0_read_illegal_T_243, _io_decode_0_read_illegal_T_98) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_245 = or(_io_decode_0_read_illegal_T_244, _io_decode_0_read_illegal_T_99) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_246 = or(_io_decode_0_read_illegal_T_245, _io_decode_0_read_illegal_T_100) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_247 = or(_io_decode_0_read_illegal_T_246, _io_decode_0_read_illegal_T_101) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_248 = or(_io_decode_0_read_illegal_T_247, _io_decode_0_read_illegal_T_102) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_249 = or(_io_decode_0_read_illegal_T_248, _io_decode_0_read_illegal_T_103) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_250 = or(_io_decode_0_read_illegal_T_249, _io_decode_0_read_illegal_T_104) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_251 = or(_io_decode_0_read_illegal_T_250, _io_decode_0_read_illegal_T_105) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_252 = or(_io_decode_0_read_illegal_T_251, _io_decode_0_read_illegal_T_106) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_253 = or(_io_decode_0_read_illegal_T_252, _io_decode_0_read_illegal_T_107) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_254 = or(_io_decode_0_read_illegal_T_253, _io_decode_0_read_illegal_T_108) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_255 = or(_io_decode_0_read_illegal_T_254, _io_decode_0_read_illegal_T_109) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_256 = or(_io_decode_0_read_illegal_T_255, _io_decode_0_read_illegal_T_110) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_257 = or(_io_decode_0_read_illegal_T_256, _io_decode_0_read_illegal_T_111) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_258 = or(_io_decode_0_read_illegal_T_257, _io_decode_0_read_illegal_T_112) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_259 = or(_io_decode_0_read_illegal_T_258, _io_decode_0_read_illegal_T_113) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_260 = or(_io_decode_0_read_illegal_T_259, _io_decode_0_read_illegal_T_114) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_261 = or(_io_decode_0_read_illegal_T_260, _io_decode_0_read_illegal_T_115) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_262 = or(_io_decode_0_read_illegal_T_261, _io_decode_0_read_illegal_T_116) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_263 = or(_io_decode_0_read_illegal_T_262, _io_decode_0_read_illegal_T_117) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_264 = or(_io_decode_0_read_illegal_T_263, _io_decode_0_read_illegal_T_118) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_265 = or(_io_decode_0_read_illegal_T_264, _io_decode_0_read_illegal_T_119) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_266 = or(_io_decode_0_read_illegal_T_265, _io_decode_0_read_illegal_T_120) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_267 = or(_io_decode_0_read_illegal_T_266, _io_decode_0_read_illegal_T_121) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_268 = or(_io_decode_0_read_illegal_T_267, _io_decode_0_read_illegal_T_122) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_269 = or(_io_decode_0_read_illegal_T_268, _io_decode_0_read_illegal_T_123) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_270 = or(_io_decode_0_read_illegal_T_269, _io_decode_0_read_illegal_T_124) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_271 = or(_io_decode_0_read_illegal_T_270, _io_decode_0_read_illegal_T_125) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_272 = or(_io_decode_0_read_illegal_T_271, _io_decode_0_read_illegal_T_126) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_273 = or(_io_decode_0_read_illegal_T_272, _io_decode_0_read_illegal_T_127) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_274 = or(_io_decode_0_read_illegal_T_273, _io_decode_0_read_illegal_T_128) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_275 = or(_io_decode_0_read_illegal_T_274, _io_decode_0_read_illegal_T_129) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_276 = or(_io_decode_0_read_illegal_T_275, _io_decode_0_read_illegal_T_130) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_277 = or(_io_decode_0_read_illegal_T_276, _io_decode_0_read_illegal_T_131) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_278 = or(_io_decode_0_read_illegal_T_277, _io_decode_0_read_illegal_T_132) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_279 = or(_io_decode_0_read_illegal_T_278, _io_decode_0_read_illegal_T_133) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_280 = or(_io_decode_0_read_illegal_T_279, _io_decode_0_read_illegal_T_134) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_281 = or(_io_decode_0_read_illegal_T_280, _io_decode_0_read_illegal_T_135) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_282 = or(_io_decode_0_read_illegal_T_281, _io_decode_0_read_illegal_T_136) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_283 = or(_io_decode_0_read_illegal_T_282, _io_decode_0_read_illegal_T_137) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_284 = or(_io_decode_0_read_illegal_T_283, _io_decode_0_read_illegal_T_138) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_285 = or(_io_decode_0_read_illegal_T_284, _io_decode_0_read_illegal_T_139) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_286 = or(_io_decode_0_read_illegal_T_285, _io_decode_0_read_illegal_T_140) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_287 = or(_io_decode_0_read_illegal_T_286, _io_decode_0_read_illegal_T_141) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_288 = or(_io_decode_0_read_illegal_T_287, _io_decode_0_read_illegal_T_142) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_289 = or(_io_decode_0_read_illegal_T_288, _io_decode_0_read_illegal_T_143) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_290 = or(_io_decode_0_read_illegal_T_289, _io_decode_0_read_illegal_T_144) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_291 = or(_io_decode_0_read_illegal_T_290, _io_decode_0_read_illegal_T_145) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_292 = or(_io_decode_0_read_illegal_T_291, _io_decode_0_read_illegal_T_146) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_293 = or(_io_decode_0_read_illegal_T_292, _io_decode_0_read_illegal_T_147) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_294 = or(_io_decode_0_read_illegal_T_293, _io_decode_0_read_illegal_T_148) @[CSR.scala 655:115]
    node _io_decode_0_read_illegal_T_295 = not(_io_decode_0_read_illegal_T_294) @[CSR.scala 672:7]
    node _io_decode_0_read_illegal_T_296 = or(_io_decode_0_read_illegal_T_1, _io_decode_0_read_illegal_T_295) @[CSR.scala 671:62]
    skip
    node _io_decode_0_read_illegal_T_298 = not(allow_sfence_vma) @[CSR.scala 673:35]
    node _io_decode_0_read_illegal_T_299 = and(_io_decode_0_read_illegal_T_121, _io_decode_0_read_illegal_T_298) @[CSR.scala 673:32]
    node _io_decode_0_read_illegal_T_300 = or(_io_decode_0_read_illegal_T_296, _io_decode_0_read_illegal_T_299) @[CSR.scala 672:32]
    node _io_decode_0_read_illegal_T_301 = geq(io_decode_0_csr, UInt<12>("hc00")) @[package.scala 204:47]
    node _io_decode_0_read_illegal_T_302 = lt(io_decode_0_csr, UInt<12>("hc20")) @[package.scala 204:60]
    node _io_decode_0_read_illegal_T_303 = and(_io_decode_0_read_illegal_T_301, _io_decode_0_read_illegal_T_302) @[package.scala 204:55]
    node _io_decode_0_read_illegal_T_304 = geq(io_decode_0_csr, UInt<12>("hc80")) @[package.scala 204:47]
    node _io_decode_0_read_illegal_T_305 = lt(io_decode_0_csr, UInt<12>("hca0")) @[package.scala 204:60]
    node _io_decode_0_read_illegal_T_306 = and(_io_decode_0_read_illegal_T_304, _io_decode_0_read_illegal_T_305) @[package.scala 204:55]
    node _io_decode_0_read_illegal_T_307 = or(_io_decode_0_read_illegal_T_303, _io_decode_0_read_illegal_T_306) @[CSR.scala 674:66]
    node _io_decode_0_read_illegal_T_308 = not(allow_counter) @[CSR.scala 674:133]
    node _io_decode_0_read_illegal_T_309 = and(_io_decode_0_read_illegal_T_307, _io_decode_0_read_illegal_T_308) @[CSR.scala 674:130]
    node _io_decode_0_read_illegal_T_310 = or(_io_decode_0_read_illegal_T_300, _io_decode_0_read_illegal_T_309) @[CSR.scala 673:53]
    node _io_decode_0_read_illegal_T_311 = and(io_decode_0_csr, UInt<12>("hc10")) @[Decode.scala 14:65]
    node _io_decode_0_read_illegal_T_312 = eq(_io_decode_0_read_illegal_T_311, UInt<12>("h410")) @[Decode.scala 14:121]
    skip
    skip
    skip
    node _io_decode_0_read_illegal_T_316 = and(_io_decode_0_read_illegal_T_312, _T_276) @[CSR.scala 675:42]
    node _io_decode_0_read_illegal_T_317 = or(_io_decode_0_read_illegal_T_310, _io_decode_0_read_illegal_T_316) @[CSR.scala 674:148]
    skip
    skip
    node _io_decode_0_read_illegal_T_320 = and(io_decode_0_fp_csr, io_decode_0_fp_illegal) @[CSR.scala 677:21]
    skip
    node _io_decode_0_write_illegal_T = bits(io_decode_0_csr, 11, 10) @[CSR.scala 678:39]
    skip
    node _io_decode_0_write_flush_T = geq(io_decode_0_csr, UInt<12>("h340")) @[CSR.scala 679:40]
    node _io_decode_0_write_flush_T_1 = leq(io_decode_0_csr, UInt<12>("h343")) @[CSR.scala 679:71]
    node _io_decode_0_write_flush_T_2 = and(_io_decode_0_write_flush_T, _io_decode_0_write_flush_T_1) @[CSR.scala 679:57]
    node _io_decode_0_write_flush_T_3 = geq(io_decode_0_csr, UInt<12>("h140")) @[CSR.scala 679:99]
    node _io_decode_0_write_flush_T_4 = leq(io_decode_0_csr, UInt<12>("h143")) @[CSR.scala 679:130]
    node _io_decode_0_write_flush_T_5 = and(_io_decode_0_write_flush_T_3, _io_decode_0_write_flush_T_4) @[CSR.scala 679:116]
    node _io_decode_0_write_flush_T_6 = or(_io_decode_0_write_flush_T_2, _io_decode_0_write_flush_T_5) @[CSR.scala 679:85]
    skip
    skip
    skip
    node _io_decode_0_system_illegal_T_2 = not(allow_wfi) @[CSR.scala 681:17]
    node _io_decode_0_system_illegal_T_3 = and(is_wfi, _io_decode_0_system_illegal_T_2) @[CSR.scala 681:14]
    node _io_decode_0_system_illegal_T_4 = or(_io_decode_0_read_illegal_T_1, _io_decode_0_system_illegal_T_3) @[CSR.scala 680:64]
    node _io_decode_0_system_illegal_T_5 = not(allow_sret) @[CSR.scala 682:17]
    node _io_decode_0_system_illegal_T_6 = and(is_ret, _io_decode_0_system_illegal_T_5) @[CSR.scala 682:14]
    node _io_decode_0_system_illegal_T_7 = or(_io_decode_0_system_illegal_T_4, _io_decode_0_system_illegal_T_6) @[CSR.scala 681:28]
    node _io_decode_0_system_illegal_T_8 = bits(io_decode_0_csr, 10, 10) @[CSR.scala 683:27]
    node _io_decode_0_system_illegal_T_9 = and(is_ret, _io_decode_0_system_illegal_T_8) @[CSR.scala 683:14]
    node _io_decode_0_system_illegal_T_10 = bits(io_decode_0_csr, 7, 7) @[CSR.scala 683:45]
    node _io_decode_0_system_illegal_T_11 = and(_io_decode_0_system_illegal_T_9, _io_decode_0_system_illegal_T_10) @[CSR.scala 683:32]
    skip
    node _io_decode_0_system_illegal_T_13 = and(_io_decode_0_system_illegal_T_11, _T_276) @[CSR.scala 683:49]
    node _io_decode_0_system_illegal_T_14 = or(_io_decode_0_system_illegal_T_7, _io_decode_0_system_illegal_T_13) @[CSR.scala 682:29]
    skip
    node _io_decode_0_system_illegal_T_16 = and(is_sfence, _io_decode_0_read_illegal_T_298) @[CSR.scala 684:17]
    skip
    node _debugTVec_T = mux(insn_break, UInt<12>("h800"), UInt<12>("h808")) @[CSR.scala 697:37]
    node debugTVec = mux(reg_debug, _debugTVec_T, UInt<12>("h800")) @[CSR.scala 697:22]
    node notDebugTVec_base = mux(delegate, read_stvec, read_mtvec) @[CSR.scala 705:19]
    node _notDebugTVec_interruptOffset_T = bits(cause, 5, 0) @[CSR.scala 706:32]
    node notDebugTVec_interruptVec_lo = shl(_notDebugTVec_interruptOffset_T, 2) @[CSR.scala 706:59]
    node notDebugTVec_interruptVec_hi = shr(notDebugTVec_base, 8) @[CSR.scala 707:33]
    node notDebugTVec_interruptVec = cat(notDebugTVec_interruptVec_hi, notDebugTVec_interruptVec_lo) @[Cat.scala 30:58]
    node _notDebugTVec_doVector_T = bits(notDebugTVec_base, 0, 0) @[CSR.scala 708:24]
    skip
    node _notDebugTVec_doVector_T_2 = and(_notDebugTVec_doVector_T, _causeIsDebugInt_T) @[CSR.scala 708:28]
    node _notDebugTVec_doVector_T_3 = shr(cause_lsbs, 6) @[CSR.scala 708:70]
    node _notDebugTVec_doVector_T_4 = eq(_notDebugTVec_doVector_T_3, UInt<2>("h0")) @[CSR.scala 708:94]
    node notDebugTVec_doVector = and(_notDebugTVec_doVector_T_2, _notDebugTVec_doVector_T_4) @[CSR.scala 708:55]
    node _notDebugTVec_T = shr(notDebugTVec_base, 2) @[CSR.scala 709:38]
    node _notDebugTVec_T_1 = shl(_notDebugTVec_T, 2) @[CSR.scala 709:56]
    node notDebugTVec = mux(notDebugTVec_doVector, notDebugTVec_interruptVec, _notDebugTVec_T_1) @[CSR.scala 709:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node tvec = mux(trapToDebug, pad(debugTVec, 64), notDebugTVec) @[CSR.scala 723:17]
    skip
    skip
    skip
    skip
    node _io_status_sd_T = andr(io_status_fs) @[CSR.scala 729:32]
    node _io_status_sd_T_1 = andr(io_status_xs) @[CSR.scala 729:53]
    node _io_status_sd_T_2 = or(_io_status_sd_T, _io_status_sd_T_1) @[CSR.scala 729:37]
    node _io_status_sd_T_3 = andr(io_status_vs) @[CSR.scala 729:74]
    skip
    skip
    node _io_status_dprv_x87_T_1 = and(reg_mstatus_mprv, _T_276) @[CSR.scala 734:53]
    skip
    reg io_status_dprv_REG : UInt<2>, clock with :
      reset => (UInt<1>("h0"), io_status_dprv_REG) @[CSR.scala 734:24]
    node _T_244 = add(insn_ret, insn_call) @[Bitwise.scala 47:55]
    skip
    node _T_246 = add(insn_break, io_exception) @[Bitwise.scala 47:55]
    skip
    node _T_248 = add(_T_244, _T_246) @[Bitwise.scala 47:55]
    skip
    node _T_250 = leq(_T_248, UInt<3>("h1")) @[CSR.scala 739:79]
    skip
    node _T_252 = or(_T_250, reset) @[CSR.scala 739:9]
    node _T_253 = not(_T_252) @[CSR.scala 739:9]
    skip
    node _T_255 = and(insn_wfi, _io_interrupt_T) @[CSR.scala 741:18]
    skip
    node _T_257 = and(_T_255, _T_276) @[CSR.scala 741:36]
    node _GEN_48 = or(_T_257, reg_wfi) @[CSR.scala 427:50 741:{51,61}]
    node _T_258 = orr(pending_interrupts) @[CSR.scala 742:28]
    node _T_259 = or(_T_258, io_interrupts_debug) @[CSR.scala 742:32]
    node _T_260 = or(_T_259, exception) @[CSR.scala 742:55]
    node _GEN_49 = mux(_T_260, UInt<1>("h0"), _GEN_48) @[CSR.scala 742:{69,79}]
    skip
    node _T_262 = or(io_retire, exception) @[CSR.scala 745:22]
    node _GEN_50 = or(_T_262, reg_singleStepped) @[CSR.scala 372:30 745:{36,56}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_270 = not(reg_singleStepped) @[CSR.scala 748:10]
    node _T_271 = not(io_retire) @[CSR.scala 748:42]
    node _T_272 = or(_T_270, _T_271) @[CSR.scala 748:29]
    skip
    node _T_274 = or(_T_272, reset) @[CSR.scala 748:9]
    node _T_275 = not(_T_274) @[CSR.scala 748:9]
    node _epc_T = not(io_pc) @[CSR.scala 1204:28]
    node _epc_T_1 = or(_epc_T, UInt<40>("h1")) @[CSR.scala 1204:31]
    node epc = not(_epc_T_1) @[CSR.scala 1204:26]
    node _reg_dcsr_cause_T = mux(causeIsDebugTrigger, UInt<2>("h2"), UInt<2>("h1")) @[CSR.scala 759:86]
    node _reg_dcsr_cause_T_1 = mux(causeIsDebugInt, UInt<2>("h3"), _reg_dcsr_cause_T) @[CSR.scala 759:56]
    node _reg_dcsr_cause_T_2 = mux(reg_singleStepped, UInt<3>("h4"), pad(_reg_dcsr_cause_T_1, 3)) @[CSR.scala 759:30]
    node _GEN_52 = or(_T_276, reg_debug) @[CSR.scala 756:25 757:19 368:22]
    node _GEN_53 = mux(_T_276, epc, reg_dpc) @[CSR.scala 756:25 758:17 369:20]
    node _GEN_54 = mux(_T_276, _reg_dcsr_cause_T_2, reg_dcsr_cause) @[CSR.scala 327:21 756:25 759:24]
    node _GEN_55 = mux(_T_276, reg_mstatus_prv, reg_dcsr_prv) @[CSR.scala 327:21 756:25 760:22]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_63 = mux(delegate, epc, reg_sepc) @[CSR.scala 772:35 773:16 421:21]
    node _GEN_64 = mux(delegate, cause, reg_scause) @[CSR.scala 772:35 774:18 422:23]
    skip
    node _GEN_66 = mux(delegate, io_tval, reg_stval) @[CSR.scala 772:35 776:17 423:22]
    node _GEN_67 = mux(delegate, reg_mstatus_sie, reg_mstatus_spie) @[CSR.scala 319:24 772:35 777:24]
    node _GEN_68 = mux(delegate, reg_mstatus_prv, pad(reg_mstatus_spp, 2)) @[CSR.scala 772:35 778:23 319:24]
    node _GEN_69 = mux(delegate, UInt<1>("h0"), reg_mstatus_sie) @[CSR.scala 772:35 779:23 319:24]
    node _GEN_71 = mux(delegate, reg_mepc, epc) @[CSR.scala 391:21 772:35 782:16]
    node _GEN_72 = mux(delegate, reg_mcause, cause) @[CSR.scala 392:27 772:35 783:18]
    node _GEN_73 = mux(delegate, reg_mtval, io_tval) @[CSR.scala 393:22 772:35 785:17]
    node _GEN_74 = mux(delegate, reg_mstatus_mpie, reg_mstatus_mie) @[CSR.scala 319:24 772:35 786:24]
    node _GEN_75 = mux(delegate, reg_mstatus_mpp, reg_mstatus_prv) @[CSR.scala 319:24 772:35 787:23]
    node _GEN_76 = and(delegate, reg_mstatus_mie) @[CSR.scala 319:24 772:35 788:23]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_96 = mux(trapToDebug, _GEN_52, reg_debug) @[CSR.scala 368:22 755:24]
    node _GEN_97 = mux(trapToDebug, _GEN_53, reg_dpc) @[CSR.scala 369:20 755:24]
    node _GEN_98 = mux(trapToDebug, _GEN_54, reg_dcsr_cause) @[CSR.scala 327:21 755:24]
    node _GEN_99 = mux(trapToDebug, _GEN_55, reg_dcsr_prv) @[CSR.scala 327:21 755:24]
    skip
    skip
    skip
    skip
    skip
    node _GEN_106 = mux(trapToDebug, reg_sepc, _GEN_63) @[CSR.scala 421:21 755:24]
    node _GEN_107 = mux(trapToDebug, reg_scause, _GEN_64) @[CSR.scala 422:23 755:24]
    skip
    node _GEN_109 = mux(trapToDebug, reg_stval, _GEN_66) @[CSR.scala 423:22 755:24]
    node _GEN_110 = mux(trapToDebug, reg_mstatus_spie, _GEN_67) @[CSR.scala 319:24 755:24]
    node _GEN_111 = mux(trapToDebug, pad(reg_mstatus_spp, 2), _GEN_68) @[CSR.scala 319:24 755:24]
    node _GEN_112 = mux(trapToDebug, reg_mstatus_sie, _GEN_69) @[CSR.scala 319:24 755:24]
    node _GEN_113 = mux(trapToDebug, reg_mepc, _GEN_71) @[CSR.scala 391:21 755:24]
    node _GEN_114 = mux(trapToDebug, reg_mcause, _GEN_72) @[CSR.scala 755:24 392:27]
    node _GEN_115 = mux(trapToDebug, reg_mtval, _GEN_73) @[CSR.scala 393:22 755:24]
    node _GEN_116 = mux(trapToDebug, reg_mstatus_mpie, _GEN_74) @[CSR.scala 319:24 755:24]
    node _GEN_117 = mux(trapToDebug, reg_mstatus_mpp, _GEN_75) @[CSR.scala 319:24 755:24]
    node _GEN_118 = mux(trapToDebug, reg_mstatus_mie, _GEN_76) @[CSR.scala 319:24 755:24]
    node _GEN_119 = mux(exception, _GEN_96, reg_debug) @[CSR.scala 754:20 368:22]
    node _GEN_120 = mux(exception, _GEN_97, reg_dpc) @[CSR.scala 369:20 754:20]
    node _GEN_121 = mux(exception, _GEN_98, reg_dcsr_cause) @[CSR.scala 754:20 327:21]
    node _GEN_122 = mux(exception, _GEN_99, reg_dcsr_prv) @[CSR.scala 754:20 327:21]
    skip
    skip
    skip
    skip
    skip
    node _GEN_129 = mux(exception, _GEN_106, reg_sepc) @[CSR.scala 754:20 421:21]
    node _GEN_130 = mux(exception, _GEN_107, reg_scause) @[CSR.scala 754:20 422:23]
    skip
    node _GEN_132 = mux(exception, _GEN_109, reg_stval) @[CSR.scala 754:20 423:22]
    node _GEN_133 = mux(exception, _GEN_110, reg_mstatus_spie) @[CSR.scala 754:20 319:24]
    node _GEN_134 = mux(exception, _GEN_111, pad(reg_mstatus_spp, 2)) @[CSR.scala 754:20 319:24]
    node _GEN_135 = mux(exception, _GEN_112, reg_mstatus_sie) @[CSR.scala 754:20 319:24]
    node _GEN_136 = mux(exception, _GEN_113, reg_mepc) @[CSR.scala 754:20 391:21]
    node _GEN_137 = mux(exception, _GEN_114, reg_mcause) @[CSR.scala 754:20 392:27]
    node _GEN_138 = mux(exception, _GEN_115, reg_mtval) @[CSR.scala 754:20 393:22]
    node _GEN_139 = mux(exception, _GEN_116, reg_mstatus_mpie) @[CSR.scala 754:20 319:24]
    node _GEN_140 = mux(exception, _GEN_117, reg_mstatus_mpp) @[CSR.scala 754:20 319:24]
    node _GEN_141 = mux(exception, _GEN_118, reg_mstatus_mie) @[CSR.scala 754:20 319:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_150 = mux(_T_406, UInt<1>("h0"), _GEN_119) @[CSR.scala 821:70 823:17]
    node _GEN_151 = mux(_T_406, lo_6, lo_4) @[CSR.scala 821:70 824:15]
    skip
    skip
    node _GEN_154 = mux(_T_406, _GEN_141, reg_mstatus_mpie) @[CSR.scala 821:70]
    node _GEN_155 = mux(_T_406, _GEN_139, UInt<1>("h1")) @[CSR.scala 821:70]
    node _GEN_156 = mux(_T_406, _GEN_140, UInt<2>("h0")) @[CSR.scala 821:70]
    node _GEN_157 = mux(_T_401, reg_mstatus_spie, _GEN_135) @[CSR.scala 815:52 816:23]
    node _GEN_158 = or(_T_401, _GEN_133) @[CSR.scala 815:52 817:24]
    node _GEN_159 = mux(_T_401, UInt<2>("h0"), _GEN_134) @[CSR.scala 815:52 818:23]
    node _GEN_161 = mux(_T_401, lo_8, _GEN_151) @[CSR.scala 815:52 820:15]
    node _GEN_162 = mux(_T_401, _GEN_119, _GEN_150) @[CSR.scala 815:52]
    skip
    skip
    node _GEN_165 = mux(_T_401, _GEN_141, _GEN_154) @[CSR.scala 815:52]
    node _GEN_166 = mux(_T_401, _GEN_139, _GEN_155) @[CSR.scala 815:52]
    node _GEN_167 = mux(_T_401, _GEN_140, _GEN_156) @[CSR.scala 815:52]
    node _T_412 = lt(ret_prv, UInt<2>("h3")) @[CSR.scala 839:32]
    skip
    node _GEN_168 = mux(_T_412, UInt<1>("h0"), reg_mstatus_mprv) @[CSR.scala 319:24 839:41 840:24]
    node _GEN_169 = mux(insn_ret, _GEN_157, _GEN_135) @[CSR.scala 813:19]
    node _GEN_170 = mux(insn_ret, _GEN_158, _GEN_133) @[CSR.scala 813:19]
    node _GEN_171 = mux(insn_ret, _GEN_159, _GEN_134) @[CSR.scala 813:19]
    node _GEN_172 = mux(insn_ret, pad(_GEN_161, 64), tvec) @[CSR.scala 724:11 813:19]
    node _GEN_173 = mux(insn_ret, _GEN_162, _GEN_119) @[CSR.scala 813:19]
    skip
    skip
    node _GEN_176 = mux(insn_ret, _GEN_165, _GEN_141) @[CSR.scala 813:19]
    node _GEN_177 = mux(insn_ret, _GEN_166, _GEN_139) @[CSR.scala 813:19]
    node _GEN_178 = mux(insn_ret, _GEN_167, _GEN_140) @[CSR.scala 813:19]
    node _GEN_180 = mux(insn_ret, _GEN_168, reg_mstatus_mprv) @[CSR.scala 813:19 319:24]
    skip
    reg io_status_cease_r : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_status_cease_r) @[Reg.scala 27:20]
    node _GEN_181 = or(insn_cease, io_status_cease_r) @[Reg.scala 28:19 27:20 28:23]
    skip
    node _io_rw_rdata_T_1 = mux(_T_46, _T_7, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_2 = mux(_T_47, _T_10, UInt<64>("h0")) @[Mux.scala 27:72]
    skip
    node _io_rw_rdata_T_4 = mux(_T_49, reg_misa, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_5 = mux(_T_50, read_mstatus, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_6 = mux(_T_51, read_mtvec, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_7 = mux(_T_52, read_mip, UInt<16>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_8 = mux(_T_53, reg_mie, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_9 = mux(_T_54, reg_mscratch, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_10 = mux(_T_55, _T_18, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_11 = mux(_T_56, _T_21, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_12 = mux(_T_57, reg_mcause, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_13 = and(_T_58, io_hartid) @[Mux.scala 27:72]
    node _io_rw_rdata_T_14 = mux(_T_59, _T_22, UInt<32>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_15 = mux(_T_60, _T_29, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_16 = mux(_T_61, reg_dscratch, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_17 = mux(_T_62, reg_fflags, UInt<5>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_18 = mux(_T_63, reg_frm, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_19 = mux(_T_64, read_fcsr, UInt<8>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_20 = mux(_T_65, reg_mcountinhibit, UInt<3>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_21 = mux(_T_66, value_1, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_22 = mux(_T_67, value, UInt<64>("h0")) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_rw_rdata_T_110 = mux(_T_155, read_mcounteren, UInt<32>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_111 = mux(_T_156, value_1, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_112 = mux(_T_157, value, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_113 = mux(_T_158, _T_31, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_114 = mux(_T_159, read_sip, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_115 = mux(_T_160, read_sie, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_116 = mux(_T_161, reg_sscratch, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_117 = mux(_T_162, reg_scause, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_118 = mux(_T_163, _T_34, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_119 = mux(_T_164, _T_35, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_120 = mux(_T_165, _T_42, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_121 = mux(_T_166, read_stvec, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_122 = mux(_T_167, read_scounteren, UInt<32>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_123 = mux(_T_168, read_mideleg, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_124 = mux(_T_169, read_medeleg, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_125 = mux(_T_170, _T_43, UInt<64>("h0")) @[Mux.scala 27:72]
    skip
    node _io_rw_rdata_T_127 = mux(_T_172, reg_pmp_0_addr, UInt<30>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_128 = mux(_T_173, reg_pmp_1_addr, UInt<30>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_129 = mux(_T_174, reg_pmp_2_addr, UInt<30>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_130 = mux(_T_175, reg_pmp_3_addr, UInt<30>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_131 = mux(_T_176, reg_pmp_4_addr, UInt<30>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_132 = mux(_T_177, reg_pmp_5_addr, UInt<30>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_133 = mux(_T_178, reg_pmp_6_addr, UInt<30>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_134 = mux(_T_179, reg_pmp_7_addr, UInt<30>("h0")) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_rw_rdata_T_143 = mux(_T_188, reg_custom_0, UInt<64>("h0")) @[Mux.scala 27:72]
    node _io_rw_rdata_T_144 = mux(_T_189, UInt<64>("h1"), UInt<64>("h0")) @[Mux.scala 27:72]
    skip
    node _io_rw_rdata_T_146 = mux(_T_191, UInt<64>("h20181004"), UInt<64>("h0")) @[Mux.scala 27:72]
    skip
    node _io_rw_rdata_T_148 = or(_io_rw_rdata_T_1, _io_rw_rdata_T_2) @[Mux.scala 27:72]
    skip
    node _io_rw_rdata_T_150 = or(_io_rw_rdata_T_148, _io_rw_rdata_T_4) @[Mux.scala 27:72]
    node _io_rw_rdata_T_151 = or(_io_rw_rdata_T_150, _io_rw_rdata_T_5) @[Mux.scala 27:72]
    node _io_rw_rdata_T_152 = or(_io_rw_rdata_T_151, _io_rw_rdata_T_6) @[Mux.scala 27:72]
    node _GEN_565 = pad(_io_rw_rdata_T_7, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_153 = or(_io_rw_rdata_T_152, _GEN_565) @[Mux.scala 27:72]
    node _io_rw_rdata_T_154 = or(_io_rw_rdata_T_153, _io_rw_rdata_T_8) @[Mux.scala 27:72]
    node _io_rw_rdata_T_155 = or(_io_rw_rdata_T_154, _io_rw_rdata_T_9) @[Mux.scala 27:72]
    node _io_rw_rdata_T_156 = or(_io_rw_rdata_T_155, _io_rw_rdata_T_10) @[Mux.scala 27:72]
    node _io_rw_rdata_T_157 = or(_io_rw_rdata_T_156, _io_rw_rdata_T_11) @[Mux.scala 27:72]
    node _io_rw_rdata_T_158 = or(_io_rw_rdata_T_157, _io_rw_rdata_T_12) @[Mux.scala 27:72]
    node _GEN_566 = pad(_io_rw_rdata_T_13, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_159 = or(_io_rw_rdata_T_158, _GEN_566) @[Mux.scala 27:72]
    node _GEN_567 = pad(_io_rw_rdata_T_14, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_160 = or(_io_rw_rdata_T_159, _GEN_567) @[Mux.scala 27:72]
    node _io_rw_rdata_T_161 = or(_io_rw_rdata_T_160, _io_rw_rdata_T_15) @[Mux.scala 27:72]
    node _io_rw_rdata_T_162 = or(_io_rw_rdata_T_161, _io_rw_rdata_T_16) @[Mux.scala 27:72]
    node _GEN_568 = pad(_io_rw_rdata_T_17, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_163 = or(_io_rw_rdata_T_162, _GEN_568) @[Mux.scala 27:72]
    node _GEN_569 = pad(_io_rw_rdata_T_18, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_164 = or(_io_rw_rdata_T_163, _GEN_569) @[Mux.scala 27:72]
    node _GEN_570 = pad(_io_rw_rdata_T_19, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_165 = or(_io_rw_rdata_T_164, _GEN_570) @[Mux.scala 27:72]
    node _GEN_571 = pad(_io_rw_rdata_T_20, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_166 = or(_io_rw_rdata_T_165, _GEN_571) @[Mux.scala 27:72]
    node _io_rw_rdata_T_167 = or(_io_rw_rdata_T_166, _io_rw_rdata_T_21) @[Mux.scala 27:72]
    node _io_rw_rdata_T_168 = or(_io_rw_rdata_T_167, _io_rw_rdata_T_22) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_572 = pad(_io_rw_rdata_T_110, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_256 = or(_io_rw_rdata_T_168, _GEN_572) @[Mux.scala 27:72]
    node _io_rw_rdata_T_257 = or(_io_rw_rdata_T_256, _io_rw_rdata_T_111) @[Mux.scala 27:72]
    node _io_rw_rdata_T_258 = or(_io_rw_rdata_T_257, _io_rw_rdata_T_112) @[Mux.scala 27:72]
    node _io_rw_rdata_T_259 = or(_io_rw_rdata_T_258, _io_rw_rdata_T_113) @[Mux.scala 27:72]
    node _io_rw_rdata_T_260 = or(_io_rw_rdata_T_259, _io_rw_rdata_T_114) @[Mux.scala 27:72]
    node _io_rw_rdata_T_261 = or(_io_rw_rdata_T_260, _io_rw_rdata_T_115) @[Mux.scala 27:72]
    node _io_rw_rdata_T_262 = or(_io_rw_rdata_T_261, _io_rw_rdata_T_116) @[Mux.scala 27:72]
    node _io_rw_rdata_T_263 = or(_io_rw_rdata_T_262, _io_rw_rdata_T_117) @[Mux.scala 27:72]
    node _io_rw_rdata_T_264 = or(_io_rw_rdata_T_263, _io_rw_rdata_T_118) @[Mux.scala 27:72]
    node _io_rw_rdata_T_265 = or(_io_rw_rdata_T_264, _io_rw_rdata_T_119) @[Mux.scala 27:72]
    node _io_rw_rdata_T_266 = or(_io_rw_rdata_T_265, _io_rw_rdata_T_120) @[Mux.scala 27:72]
    node _io_rw_rdata_T_267 = or(_io_rw_rdata_T_266, _io_rw_rdata_T_121) @[Mux.scala 27:72]
    node _GEN_573 = pad(_io_rw_rdata_T_122, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_268 = or(_io_rw_rdata_T_267, _GEN_573) @[Mux.scala 27:72]
    node _io_rw_rdata_T_269 = or(_io_rw_rdata_T_268, _io_rw_rdata_T_123) @[Mux.scala 27:72]
    node _io_rw_rdata_T_270 = or(_io_rw_rdata_T_269, _io_rw_rdata_T_124) @[Mux.scala 27:72]
    node _io_rw_rdata_T_271 = or(_io_rw_rdata_T_270, _io_rw_rdata_T_125) @[Mux.scala 27:72]
    skip
    node _GEN_574 = pad(_io_rw_rdata_T_127, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_273 = or(_io_rw_rdata_T_271, _GEN_574) @[Mux.scala 27:72]
    node _GEN_575 = pad(_io_rw_rdata_T_128, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_274 = or(_io_rw_rdata_T_273, _GEN_575) @[Mux.scala 27:72]
    node _GEN_576 = pad(_io_rw_rdata_T_129, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_275 = or(_io_rw_rdata_T_274, _GEN_576) @[Mux.scala 27:72]
    node _GEN_577 = pad(_io_rw_rdata_T_130, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_276 = or(_io_rw_rdata_T_275, _GEN_577) @[Mux.scala 27:72]
    node _GEN_578 = pad(_io_rw_rdata_T_131, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_277 = or(_io_rw_rdata_T_276, _GEN_578) @[Mux.scala 27:72]
    node _GEN_579 = pad(_io_rw_rdata_T_132, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_278 = or(_io_rw_rdata_T_277, _GEN_579) @[Mux.scala 27:72]
    node _GEN_580 = pad(_io_rw_rdata_T_133, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_279 = or(_io_rw_rdata_T_278, _GEN_580) @[Mux.scala 27:72]
    node _GEN_581 = pad(_io_rw_rdata_T_134, 64) @[Mux.scala 27:72]
    node _io_rw_rdata_T_280 = or(_io_rw_rdata_T_279, _GEN_581) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_rw_rdata_T_289 = or(_io_rw_rdata_T_280, _io_rw_rdata_T_143) @[Mux.scala 27:72]
    node _io_rw_rdata_T_290 = or(_io_rw_rdata_T_289, _io_rw_rdata_T_144) @[Mux.scala 27:72]
    skip
    skip
    skip
    skip
    node _T_416 = eq(io_rw_cmd, UInt<3>("h5")) @[package.scala 15:47]
    node _T_417 = eq(io_rw_cmd, UInt<3>("h6")) @[package.scala 15:47]
    node _T_418 = eq(io_rw_cmd, UInt<3>("h7")) @[package.scala 15:47]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _lo_T = or(reg_fflags, io_fcsr_flags_bits) @[CSR.scala 884:30]
    node _GEN_182 = mux(io_fcsr_flags_valid, _lo_T, reg_fflags) @[CSR.scala 883:30 884:16 429:23]
    skip
    skip
    skip
    skip
    node _csr_wen_T_3 = or(_T_417, _T_418) @[package.scala 72:59]
    node csr_wen = or(_csr_wen_T_3, _T_416) @[package.scala 72:59]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _new_mstatus_WIRE = pad(wdata, 103)
    skip
    node new_mstatus_sie = bits(_new_mstatus_WIRE, 1, 1) @[CSR.scala 899:47]
    skip
    node new_mstatus_mie = bits(_new_mstatus_WIRE, 3, 3) @[CSR.scala 899:47]
    skip
    node new_mstatus_spie = bits(_new_mstatus_WIRE, 5, 5) @[CSR.scala 899:47]
    skip
    node new_mstatus_mpie = bits(_new_mstatus_WIRE, 7, 7) @[CSR.scala 899:47]
    node new_mstatus_spp = bits(_new_mstatus_WIRE, 8, 8) @[CSR.scala 899:47]
    skip
    node new_mstatus_mpp = bits(_new_mstatus_WIRE, 12, 11) @[CSR.scala 899:47]
    node new_mstatus_fs = bits(_new_mstatus_WIRE, 14, 13) @[CSR.scala 899:47]
    skip
    node new_mstatus_mprv = bits(_new_mstatus_WIRE, 17, 17) @[CSR.scala 899:47]
    node new_mstatus_sum = bits(_new_mstatus_WIRE, 18, 18) @[CSR.scala 899:47]
    node new_mstatus_mxr = bits(_new_mstatus_WIRE, 19, 19) @[CSR.scala 899:47]
    node new_mstatus_tvm = bits(_new_mstatus_WIRE, 20, 20) @[CSR.scala 899:47]
    node new_mstatus_tw = bits(_new_mstatus_WIRE, 21, 21) @[CSR.scala 899:47]
    node new_mstatus_tsr = bits(_new_mstatus_WIRE, 22, 22) @[CSR.scala 899:47]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _reg_mstatus_mpp_T_2 = eq(new_mstatus_mpp, UInt<2>("h2")) @[CSR.scala 1187:35]
    node _reg_mstatus_mpp_T_3 = mux(_reg_mstatus_mpp_T_2, UInt<2>("h0"), new_mstatus_mpp) @[CSR.scala 1187:29]
    skip
    node _reg_mstatus_fs_T = orr(new_mstatus_fs) @[CSR.scala 1208:73]
    skip
    node _reg_mstatus_fs_T_2 = mux(_reg_mstatus_fs_T, UInt<2>("h3"), UInt<2>("h0")) @[Bitwise.scala 72:12]
    skip
    node _GEN_184 = mux(_T_50, new_mstatus_mie, _GEN_176) @[CSR.scala 898:39 900:23]
    skip
    node _GEN_185 = mux(_T_50, new_mstatus_mpie, _GEN_177) @[CSR.scala 898:39 901:24]
    skip
    node _GEN_186 = mux(_T_50, new_mstatus_mprv, _GEN_180) @[CSR.scala 898:39 904:26]
    node _GEN_187 = mux(_T_50, _reg_mstatus_mpp_T_3, _GEN_178) @[CSR.scala 898:39 905:25]
    skip
    node _GEN_188 = mux(_T_50, pad(new_mstatus_spp, 2), _GEN_171) @[CSR.scala 898:39 907:27]
    skip
    node _GEN_189 = mux(_T_50, new_mstatus_spie, _GEN_170) @[CSR.scala 898:39 908:28]
    skip
    node _GEN_190 = mux(_T_50, new_mstatus_sie, _GEN_169) @[CSR.scala 898:39 909:27]
    skip
    node _GEN_191 = mux(_T_50, new_mstatus_tw, reg_mstatus_tw) @[CSR.scala 319:24 898:39 910:26]
    skip
    node _GEN_192 = mux(_T_50, new_mstatus_tsr, reg_mstatus_tsr) @[CSR.scala 319:24 898:39 911:27]
    skip
    node _GEN_193 = mux(_T_50, new_mstatus_mxr, reg_mstatus_mxr) @[CSR.scala 319:24 898:39 914:27]
    skip
    node _GEN_194 = mux(_T_50, new_mstatus_sum, reg_mstatus_sum) @[CSR.scala 319:24 898:39 915:27]
    skip
    node _GEN_195 = mux(_T_50, new_mstatus_tvm, reg_mstatus_tvm) @[CSR.scala 319:24 898:39 916:27]
    node _GEN_196 = mux(_T_50, _reg_mstatus_fs_T_2, reg_mstatus_fs) @[CSR.scala 319:24 898:39 920:55]
    skip
    node f = bits(wdata, 5, 5) @[CSR.scala 925:20]
    node _T_2178 = bits(io_pc, 1, 1) @[CSR.scala 927:39]
    node _T_2179 = not(_T_2178) @[CSR.scala 927:33]
    skip
    node _T_2181 = bits(wdata, 2, 2) @[CSR.scala 927:51]
    node _T_2182 = or(_T_2179, _T_2181) @[CSR.scala 927:43]
    node _reg_misa_T = not(wdata) @[CSR.scala 929:25]
    node _reg_misa_T_1 = not(f) @[CSR.scala 929:35]
    node _reg_misa_T_2 = shl(_reg_misa_T_1, 3) @[CSR.scala 929:38]
    node _GEN_582 = pad(_reg_misa_T_2, 64) @[CSR.scala 929:32]
    node _reg_misa_T_3 = or(_reg_misa_T, _GEN_582) @[CSR.scala 929:32]
    node _reg_misa_T_4 = not(_reg_misa_T_3) @[CSR.scala 929:23]
    node _reg_misa_T_5 = and(_reg_misa_T_4, UInt<64>("h102d")) @[CSR.scala 929:55]
    skip
    node _reg_misa_T_7 = and(reg_misa, UInt<64>("hffffffffffffefd2")) @[CSR.scala 929:73]
    node _reg_misa_T_8 = or(_reg_misa_T_5, _reg_misa_T_7) @[CSR.scala 929:62]
    node _GEN_198 = mux(_T_2182, _reg_misa_T_8, reg_misa) @[CSR.scala 927:64 929:20 490:21]
    node _GEN_199 = mux(_T_49, _GEN_198, reg_misa) @[CSR.scala 490:21 923:36]
    skip
    skip
    node new_mip_lo_lo = cat(UInt<2>("h0"), read_mip_lo_lo_lo) @[CSR.scala 937:59]
    skip
    skip
    node new_mip_lo_hi = cat(UInt<2>("h0"), read_mip_lo_hi_lo) @[CSR.scala 937:59]
    node new_mip_lo = cat(new_mip_lo_hi, new_mip_lo_lo) @[CSR.scala 937:59]
    node new_mip_hi_lo_lo = cat(reg_mip_seip, UInt<1>("h0")) @[CSR.scala 937:59]
    skip
    node new_mip_hi_lo = cat(UInt<2>("h0"), new_mip_hi_lo_lo) @[CSR.scala 937:59]
    skip
    skip
    skip
    node new_mip_hi = cat(UInt<4>("h0"), new_mip_hi_lo) @[CSR.scala 937:59]
    node _new_mip_T = cat(new_mip_hi, new_mip_lo) @[CSR.scala 937:59]
    skip
    node _new_mip_T_2 = mux(_wdata_T, _new_mip_T, UInt<16>("h0")) @[CSR.scala 1183:9]
    node _GEN_583 = pad(_new_mip_T_2, 64) @[CSR.scala 1183:34]
    node _new_mip_T_3 = or(_GEN_583, io_rw_wdata) @[CSR.scala 1183:34]
    skip
    skip
    skip
    skip
    node _new_mip_T_8 = and(_new_mip_T_3, _wdata_T_6) @[CSR.scala 1183:43]
    node _new_mip_WIRE = bits(_new_mip_T_8, 15, 0)
    skip
    node new_mip_ssip = bits(_new_mip_WIRE, 1, 1) @[CSR.scala 937:88]
    skip
    skip
    skip
    node new_mip_stip = bits(_new_mip_WIRE, 5, 5) @[CSR.scala 937:88]
    skip
    skip
    skip
    node new_mip_seip = bits(_new_mip_WIRE, 9, 9) @[CSR.scala 937:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_200 = mux(_T_52, new_mip_ssip, reg_mip_ssip) @[CSR.scala 390:20 932:35 939:22]
    skip
    node _GEN_201 = mux(_T_52, new_mip_stip, reg_mip_stip) @[CSR.scala 390:20 932:35 940:22]
    skip
    node _GEN_202 = mux(_T_52, new_mip_seip, reg_mip_seip) @[CSR.scala 390:20 932:35 941:22]
    node _reg_mie_T = and(wdata, UInt<64>("haaa")) @[CSR.scala 944:59]
    node _GEN_203 = mux(_T_53, _reg_mie_T, reg_mie) @[CSR.scala 381:20 944:{40,50}]
    skip
    node _reg_mepc_T_1 = or(_reg_misa_T, UInt<64>("h1")) @[CSR.scala 1204:31]
    node _reg_mepc_T_2 = not(_reg_mepc_T_1) @[CSR.scala 1204:26]
    node _GEN_204 = mux(_T_55, _reg_mepc_T_2, pad(_GEN_136, 64)) @[CSR.scala 945:{40,51}]
    node _GEN_205 = mux(_T_54, wdata, reg_mscratch) @[CSR.scala 394:25 946:{40,55}]
    node _GEN_206 = mux(_T_51, wdata, pad(reg_mtvec, 64)) @[CSR.scala 397:27 948:{40,52}]
    node _reg_mcause_T = and(wdata, UInt<64>("h800000000000000f")) @[CSR.scala 949:62]
    node _GEN_207 = mux(_T_57, _reg_mcause_T, _GEN_137) @[CSR.scala 949:{40,53}]
    node _lo_T_1 = bits(wdata, 39, 0) @[CSR.scala 950:60]
    node _GEN_208 = mux(_T_56, _lo_T_1, _GEN_138) @[CSR.scala 950:{40,52}]
    skip
    node _reg_mcountinhibit_T_1 = and(wdata, UInt<64>("hfffffffffffffffd")) @[CSR.scala 965:76]
    node _GEN_209 = mux(_T_65, _reg_mcountinhibit_T_1, pad(reg_mcountinhibit, 64)) @[CSR.scala 436:34 965:{47,67}]
    skip
    node _hi_T = shr(wdata, 6) @[Counters.scala 66:28]
    node _GEN_210 = mux(_T_66, wdata, pad(_GEN_2, 64)) @[CSR.scala 1201:31 Counters.scala 65:11]
    node _GEN_211 = mux(_T_66, _hi_T, _GEN_3) @[CSR.scala 1201:31 Counters.scala 66:23]
    skip
    skip
    node _GEN_212 = mux(_T_67, wdata, pad(_GEN_0, 64)) @[CSR.scala 1201:31 Counters.scala 65:11]
    node _GEN_213 = mux(_T_67, _hi_T, _GEN_1) @[CSR.scala 1201:31 Counters.scala 66:23]
    skip
    node _GEN_215 = mux(_T_62, wdata, pad(_GEN_182, 64)) @[CSR.scala 971:{40,75}]
    skip
    node _GEN_217 = mux(_T_63, wdata, pad(reg_frm, 64)) @[CSR.scala 430:20 972:{40,72}]
    node _hi_T_2 = shr(wdata, 5) @[CSR.scala 976:26]
    skip
    node _GEN_219 = mux(_T_64, wdata, _GEN_215) @[CSR.scala 973:38 975:20]
    node _GEN_220 = mux(_T_64, pad(_hi_T_2, 64), _GEN_217) @[CSR.scala 973:38 976:17]
    node _new_dcsr_WIRE = bits(wdata, 31, 0)
    node new_dcsr_prv = bits(_new_dcsr_WIRE, 1, 0) @[CSR.scala 981:43]
    node new_dcsr_step = bits(_new_dcsr_WIRE, 2, 2) @[CSR.scala 981:43]
    skip
    skip
    skip
    skip
    skip
    node new_dcsr_ebreaku = bits(_new_dcsr_WIRE, 12, 12) @[CSR.scala 981:43]
    node new_dcsr_ebreaks = bits(_new_dcsr_WIRE, 13, 13) @[CSR.scala 981:43]
    skip
    node new_dcsr_ebreakm = bits(_new_dcsr_WIRE, 15, 15) @[CSR.scala 981:43]
    skip
    skip
    skip
    skip
    node _reg_dcsr_prv_T = eq(new_dcsr_prv, UInt<2>("h2")) @[CSR.scala 1187:35]
    node _reg_dcsr_prv_T_1 = mux(_reg_dcsr_prv_T, UInt<2>("h0"), new_dcsr_prv) @[CSR.scala 1187:29]
    skip
    node _GEN_221 = mux(_T_59, new_dcsr_step, reg_dcsr_step) @[CSR.scala 327:21 980:38 982:23]
    skip
    node _GEN_222 = mux(_T_59, new_dcsr_ebreakm, reg_dcsr_ebreakm) @[CSR.scala 327:21 980:38 983:26]
    skip
    node _GEN_223 = mux(_T_59, new_dcsr_ebreaks, reg_dcsr_ebreaks) @[CSR.scala 327:21 980:38 984:47]
    skip
    node _GEN_224 = mux(_T_59, new_dcsr_ebreaku, reg_dcsr_ebreaku) @[CSR.scala 327:21 980:38 985:41]
    node _GEN_225 = mux(_T_59, _reg_dcsr_prv_T_1, _GEN_122) @[CSR.scala 980:38 986:37]
    skip
    skip
    skip
    node _GEN_226 = mux(_T_60, _reg_mepc_T_2, pad(_GEN_120, 64)) @[CSR.scala 988:{42,52}]
    node _GEN_227 = mux(_T_61, wdata, reg_dscratch) @[CSR.scala 370:25 989:{42,57}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_228 = mux(_T_158, new_mstatus_sie, _GEN_190) @[CSR.scala 995:41 997:25]
    skip
    node _GEN_229 = mux(_T_158, new_mstatus_spie, _GEN_189) @[CSR.scala 995:41 998:26]
    skip
    node _GEN_230 = mux(_T_158, pad(new_mstatus_spp, 2), _GEN_188) @[CSR.scala 995:41 999:25]
    node _GEN_231 = mux(_T_158, _reg_mstatus_fs_T_2, _GEN_196) @[CSR.scala 1000:24 995:41]
    skip
    skip
    node _GEN_233 = mux(_T_158, new_mstatus_mxr, _GEN_193) @[CSR.scala 1003:27 995:41]
    skip
    node _GEN_234 = mux(_T_158, new_mstatus_sum, _GEN_194) @[CSR.scala 1004:27 995:41]
    node _new_sip_T = not(read_mideleg) @[CSR.scala 1008:54]
    skip
    node _new_sip_T_1 = and(_GEN_43, _new_sip_T) @[CSR.scala 1008:52]
    node _new_sip_T_2 = and(wdata, read_mideleg) @[CSR.scala 1008:78]
    node _new_sip_T_3 = or(_new_sip_T_1, _new_sip_T_2) @[CSR.scala 1008:69]
    node _new_sip_WIRE = bits(_new_sip_T_3, 15, 0)
    skip
    node new_sip_ssip = bits(_new_sip_WIRE, 1, 1) @[CSR.scala 1008:41]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_235 = mux(_T_159, new_sip_ssip, _GEN_200) @[CSR.scala 1007:37 1009:22]
    skip
    node new_satp_ppn = bits(wdata, 43, 0) @[CSR.scala 1013:45]
    skip
    node new_satp_mode = bits(wdata, 63, 60) @[CSR.scala 1013:45]
    skip
    node _T_2185 = eq(new_satp_mode, UInt<4>("h0")) @[package.scala 15:47]
    node _T_2186 = eq(new_satp_mode, UInt<4>("h8")) @[package.scala 15:47]
    node _T_2187 = or(_T_2185, _T_2186) @[package.scala 72:59]
    node _reg_satp_mode_T = and(new_satp_mode, UInt<4>("h8")) @[CSR.scala 1016:44]
    skip
    node _reg_satp_ppn_T = bits(new_satp_ppn, 19, 0) @[CSR.scala 1017:41]
    node _GEN_236 = mux(_T_2187, _reg_satp_mode_T, reg_satp_mode) @[CSR.scala 1015:62 1016:27 426:21]
    node _GEN_237 = mux(_T_2187, pad(_reg_satp_ppn_T, 44), reg_satp_ppn) @[CSR.scala 1015:62 1017:26 426:21]
    node _GEN_238 = mux(_T_164, _GEN_236, reg_satp_mode) @[CSR.scala 1011:38 426:21]
    node _GEN_239 = mux(_T_164, _GEN_237, reg_satp_ppn) @[CSR.scala 1011:38 426:21]
    skip
    node _reg_mie_T_2 = and(reg_mie, _new_sip_T) @[CSR.scala 1022:64]
    skip
    node _reg_mie_T_4 = or(_reg_mie_T_2, _new_sip_T_2) @[CSR.scala 1022:81]
    node _GEN_240 = mux(_T_160, _reg_mie_T_4, _GEN_203) @[CSR.scala 1022:{42,52}]
    node _GEN_241 = mux(_T_161, wdata, reg_sscratch) @[CSR.scala 1023:{42,57} 424:25]
    skip
    skip
    skip
    node _GEN_242 = mux(_T_165, _reg_mepc_T_2, pad(_GEN_129, 64)) @[CSR.scala 1024:{42,53}]
    node _GEN_243 = mux(_T_166, wdata, pad(reg_stvec, 64)) @[CSR.scala 1025:{42,54} 425:22]
    node _reg_scause_T = and(wdata, UInt<64>("h800000000000001f")) @[CSR.scala 1026:64]
    node _GEN_244 = mux(_T_162, _reg_scause_T, _GEN_130) @[CSR.scala 1026:{42,55}]
    skip
    node _GEN_245 = mux(_T_163, _lo_T_1, _GEN_132) @[CSR.scala 1027:{42,54}]
    node _GEN_246 = mux(_T_168, wdata, reg_mideleg) @[CSR.scala 1028:{42,56} 383:18]
    node _GEN_247 = mux(_T_169, wdata, reg_medeleg) @[CSR.scala 1029:{42,56} 387:18]
    node _GEN_248 = mux(_T_167, wdata, pad(reg_scounteren, 64)) @[CSR.scala 1030:{44,61} 417:18]
    node _GEN_249 = mux(_T_155, wdata, pad(reg_mcounteren, 64)) @[CSR.scala 1033:{44,61} 413:18]
    skip
    skip
    node _T_2189 = not(reg_bp_0_control_dmode) @[CSR.scala 1039:37]
    node _T_2190 = or(_T_2189, reg_debug) @[CSR.scala 1039:55]
    skip
    node _GEN_251 = mux(_T_47, wdata, pad(reg_bp_0_address, 64)) @[CSR.scala 1040:{44,57} 378:19]
    skip
    node _reg_bp_0_control_T = bits(wdata, 0, 0) @[CSR.scala 1052:41]
    node _reg_bp_0_control_T_1 = bits(wdata, 1, 1) @[CSR.scala 1052:41]
    skip
    node _reg_bp_0_control_T_3 = bits(wdata, 3, 3) @[CSR.scala 1052:41]
    node _reg_bp_0_control_T_4 = bits(wdata, 4, 4) @[CSR.scala 1052:41]
    skip
    node _reg_bp_0_control_T_6 = bits(wdata, 6, 6) @[CSR.scala 1052:41]
    node _reg_bp_0_control_T_7 = bits(wdata, 8, 7) @[CSR.scala 1052:41]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _newBPC_T_2 = mux(_wdata_T, _T_7, UInt<64>("h0")) @[CSR.scala 1183:9]
    node _newBPC_T_3 = or(_newBPC_T_2, io_rw_wdata) @[CSR.scala 1183:34]
    skip
    skip
    skip
    skip
    node _newBPC_T_8 = and(_newBPC_T_3, _wdata_T_6) @[CSR.scala 1183:43]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node newBPC_action = bits(_newBPC_T_8, 12, 12) @[CSR.scala 1058:96]
    skip
    skip
    node newBPC_dmode = bits(_newBPC_T_8, 59, 59) @[CSR.scala 1058:96]
    skip
    skip
    node dMode = and(newBPC_dmode, reg_debug) @[CSR.scala 1059:38]
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_252 = and(dMode, newBPC_action) @[CSR.scala 1061:{120,51,71}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_254 = mux(_T_46, dMode, reg_bp_0_control_dmode) @[CSR.scala 1051:44 1060:30 378:19]
    skip
    skip
    skip
    skip
    node _GEN_257 = mux(_T_46, _GEN_252, reg_bp_0_control_action) @[CSR.scala 1051:44 378:19]
    skip
    skip
    skip
    skip
    node _GEN_260 = mux(_T_46, _reg_bp_0_control_T_7, reg_bp_0_control_tmatch) @[CSR.scala 1051:44 1052:24 378:19]
    skip
    node _GEN_261 = mux(_T_46, _reg_bp_0_control_T_6, reg_bp_0_control_m) @[CSR.scala 1051:44 1052:24 378:19]
    skip
    skip
    skip
    node _GEN_263 = mux(_T_46, _reg_bp_0_control_T_4, reg_bp_0_control_s) @[CSR.scala 1051:44 1052:24 378:19]
    skip
    node _GEN_264 = mux(_T_46, _reg_bp_0_control_T_3, reg_bp_0_control_u) @[CSR.scala 1051:44 1052:24 378:19]
    skip
    node _GEN_265 = mux(_T_46, _T_2181, reg_bp_0_control_x) @[CSR.scala 1051:44 1052:24 378:19]
    skip
    node _GEN_266 = mux(_T_46, _reg_bp_0_control_T_1, reg_bp_0_control_w) @[CSR.scala 1051:44 1052:24 378:19]
    skip
    node _GEN_267 = mux(_T_46, _reg_bp_0_control_T, reg_bp_0_control_r) @[CSR.scala 1051:44 1052:24 378:19]
    node _GEN_268 = mux(_T_2190, _GEN_251, pad(reg_bp_0_address, 64)) @[CSR.scala 1039:70 378:19]
    skip
    node _GEN_270 = mux(_T_2190, _GEN_254, reg_bp_0_control_dmode) @[CSR.scala 1039:70 378:19]
    skip
    skip
    node _GEN_273 = mux(_T_2190, _GEN_257, reg_bp_0_control_action) @[CSR.scala 1039:70 378:19]
    skip
    skip
    node _GEN_276 = mux(_T_2190, _GEN_260, reg_bp_0_control_tmatch) @[CSR.scala 1039:70 378:19]
    node _GEN_277 = mux(_T_2190, _GEN_261, reg_bp_0_control_m) @[CSR.scala 1039:70 378:19]
    skip
    node _GEN_279 = mux(_T_2190, _GEN_263, reg_bp_0_control_s) @[CSR.scala 1039:70 378:19]
    node _GEN_280 = mux(_T_2190, _GEN_264, reg_bp_0_control_u) @[CSR.scala 1039:70 378:19]
    node _GEN_281 = mux(_T_2190, _GEN_265, reg_bp_0_control_x) @[CSR.scala 1039:70 378:19]
    node _GEN_282 = mux(_T_2190, _GEN_266, reg_bp_0_control_w) @[CSR.scala 1039:70 378:19]
    node _GEN_283 = mux(_T_2190, _GEN_267, reg_bp_0_control_r) @[CSR.scala 1039:70 378:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _T_2200 = not(reg_pmp_0_cfg_l) @[CSR.scala 1071:60]
    node _T_2201 = and(_T_170, _T_2200) @[CSR.scala 1071:57]
    skip
    node _newCfg_WIRE = bits(wdata, 7, 0)
    node newCfg_r = bits(_newCfg_WIRE, 0, 0) @[CSR.scala 1072:46]
    node newCfg_w = bits(_newCfg_WIRE, 1, 1) @[CSR.scala 1072:46]
    node newCfg_x = bits(_newCfg_WIRE, 2, 2) @[CSR.scala 1072:46]
    node newCfg_a = bits(_newCfg_WIRE, 4, 3) @[CSR.scala 1072:46]
    skip
    node newCfg_l = bits(_newCfg_WIRE, 7, 7) @[CSR.scala 1072:46]
    skip
    skip
    node _reg_pmp_0_cfg_w_T = and(newCfg_w, newCfg_r) @[CSR.scala 1075:31]
    skip
    node _GEN_317 = mux(_T_2201, newCfg_l, reg_pmp_0_cfg_l) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    node _GEN_319 = mux(_T_2201, newCfg_a, reg_pmp_0_cfg_a) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    node _GEN_320 = mux(_T_2201, newCfg_x, reg_pmp_0_cfg_x) @[CSR.scala 1071:76 1073:17 379:20]
    node _GEN_321 = mux(_T_2201, _reg_pmp_0_cfg_w_T, reg_pmp_0_cfg_w) @[CSR.scala 1071:76 1075:19 379:20]
    node _GEN_322 = mux(_T_2201, newCfg_r, reg_pmp_0_cfg_r) @[CSR.scala 1071:76 1073:17 379:20]
    node _T_2202 = bits(reg_pmp_1_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _T_2203 = not(_T_2202) @[PMP.scala 49:13]
    skip
    node _T_2205 = and(_T_2203, pmp_mask_base_lo_1) @[PMP.scala 49:20]
    node _T_2206 = and(reg_pmp_1_cfg_l, _T_2205) @[PMP.scala 51:62]
    node _T_2207 = or(reg_pmp_0_cfg_l, _T_2206) @[PMP.scala 51:44]
    node _T_2208 = not(_T_2207) @[CSR.scala 1080:48]
    node _T_2209 = and(_T_172, _T_2208) @[CSR.scala 1080:45]
    node _GEN_323 = mux(_T_2209, wdata, pad(reg_pmp_0_addr, 64)) @[CSR.scala 1080:71 1081:18 379:20]
    node _T_2210 = not(reg_pmp_1_cfg_l) @[CSR.scala 1071:60]
    node _T_2211 = and(_T_170, _T_2210) @[CSR.scala 1071:57]
    node _newCfg_T_7 = shr(wdata, 8) @[CSR.scala 1072:53]
    node _newCfg_WIRE_1 = bits(_newCfg_T_7, 7, 0)
    node newCfg_1_r = bits(_newCfg_WIRE_1, 0, 0) @[CSR.scala 1072:46]
    node newCfg_1_w = bits(_newCfg_WIRE_1, 1, 1) @[CSR.scala 1072:46]
    node newCfg_1_x = bits(_newCfg_WIRE_1, 2, 2) @[CSR.scala 1072:46]
    node newCfg_1_a = bits(_newCfg_WIRE_1, 4, 3) @[CSR.scala 1072:46]
    skip
    node newCfg_1_l = bits(_newCfg_WIRE_1, 7, 7) @[CSR.scala 1072:46]
    skip
    skip
    node _reg_pmp_1_cfg_w_T = and(newCfg_1_w, newCfg_1_r) @[CSR.scala 1075:31]
    skip
    node _GEN_324 = mux(_T_2211, newCfg_1_l, reg_pmp_1_cfg_l) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    node _GEN_326 = mux(_T_2211, newCfg_1_a, reg_pmp_1_cfg_a) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    node _GEN_327 = mux(_T_2211, newCfg_1_x, reg_pmp_1_cfg_x) @[CSR.scala 1071:76 1073:17 379:20]
    node _GEN_328 = mux(_T_2211, _reg_pmp_1_cfg_w_T, reg_pmp_1_cfg_w) @[CSR.scala 1071:76 1075:19 379:20]
    node _GEN_329 = mux(_T_2211, newCfg_1_r, reg_pmp_1_cfg_r) @[CSR.scala 1071:76 1073:17 379:20]
    node _T_2212 = bits(reg_pmp_2_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _T_2213 = not(_T_2212) @[PMP.scala 49:13]
    skip
    node _T_2215 = and(_T_2213, pmp_mask_base_lo_2) @[PMP.scala 49:20]
    node _T_2216 = and(reg_pmp_2_cfg_l, _T_2215) @[PMP.scala 51:62]
    node _T_2217 = or(reg_pmp_1_cfg_l, _T_2216) @[PMP.scala 51:44]
    node _T_2218 = not(_T_2217) @[CSR.scala 1080:48]
    node _T_2219 = and(_T_173, _T_2218) @[CSR.scala 1080:45]
    node _GEN_330 = mux(_T_2219, wdata, pad(reg_pmp_1_addr, 64)) @[CSR.scala 1080:71 1081:18 379:20]
    node _T_2220 = not(reg_pmp_2_cfg_l) @[CSR.scala 1071:60]
    node _T_2221 = and(_T_170, _T_2220) @[CSR.scala 1071:57]
    node _newCfg_T_14 = shr(wdata, 16) @[CSR.scala 1072:53]
    node _newCfg_WIRE_2 = bits(_newCfg_T_14, 7, 0)
    node newCfg_2_r = bits(_newCfg_WIRE_2, 0, 0) @[CSR.scala 1072:46]
    node newCfg_2_w = bits(_newCfg_WIRE_2, 1, 1) @[CSR.scala 1072:46]
    node newCfg_2_x = bits(_newCfg_WIRE_2, 2, 2) @[CSR.scala 1072:46]
    node newCfg_2_a = bits(_newCfg_WIRE_2, 4, 3) @[CSR.scala 1072:46]
    skip
    node newCfg_2_l = bits(_newCfg_WIRE_2, 7, 7) @[CSR.scala 1072:46]
    skip
    skip
    node _reg_pmp_2_cfg_w_T = and(newCfg_2_w, newCfg_2_r) @[CSR.scala 1075:31]
    skip
    node _GEN_331 = mux(_T_2221, newCfg_2_l, reg_pmp_2_cfg_l) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    node _GEN_333 = mux(_T_2221, newCfg_2_a, reg_pmp_2_cfg_a) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    node _GEN_334 = mux(_T_2221, newCfg_2_x, reg_pmp_2_cfg_x) @[CSR.scala 1071:76 1073:17 379:20]
    node _GEN_335 = mux(_T_2221, _reg_pmp_2_cfg_w_T, reg_pmp_2_cfg_w) @[CSR.scala 1071:76 1075:19 379:20]
    node _GEN_336 = mux(_T_2221, newCfg_2_r, reg_pmp_2_cfg_r) @[CSR.scala 1071:76 1073:17 379:20]
    node _T_2222 = bits(reg_pmp_3_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _T_2223 = not(_T_2222) @[PMP.scala 49:13]
    skip
    node _T_2225 = and(_T_2223, pmp_mask_base_lo_3) @[PMP.scala 49:20]
    node _T_2226 = and(reg_pmp_3_cfg_l, _T_2225) @[PMP.scala 51:62]
    node _T_2227 = or(reg_pmp_2_cfg_l, _T_2226) @[PMP.scala 51:44]
    node _T_2228 = not(_T_2227) @[CSR.scala 1080:48]
    node _T_2229 = and(_T_174, _T_2228) @[CSR.scala 1080:45]
    node _GEN_337 = mux(_T_2229, wdata, pad(reg_pmp_2_addr, 64)) @[CSR.scala 1080:71 1081:18 379:20]
    node _T_2230 = not(reg_pmp_3_cfg_l) @[CSR.scala 1071:60]
    node _T_2231 = and(_T_170, _T_2230) @[CSR.scala 1071:57]
    node _newCfg_T_21 = shr(wdata, 24) @[CSR.scala 1072:53]
    node _newCfg_WIRE_3 = bits(_newCfg_T_21, 7, 0)
    node newCfg_3_r = bits(_newCfg_WIRE_3, 0, 0) @[CSR.scala 1072:46]
    node newCfg_3_w = bits(_newCfg_WIRE_3, 1, 1) @[CSR.scala 1072:46]
    node newCfg_3_x = bits(_newCfg_WIRE_3, 2, 2) @[CSR.scala 1072:46]
    node newCfg_3_a = bits(_newCfg_WIRE_3, 4, 3) @[CSR.scala 1072:46]
    skip
    node newCfg_3_l = bits(_newCfg_WIRE_3, 7, 7) @[CSR.scala 1072:46]
    skip
    skip
    node _reg_pmp_3_cfg_w_T = and(newCfg_3_w, newCfg_3_r) @[CSR.scala 1075:31]
    skip
    node _GEN_338 = mux(_T_2231, newCfg_3_l, reg_pmp_3_cfg_l) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    node _GEN_340 = mux(_T_2231, newCfg_3_a, reg_pmp_3_cfg_a) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    node _GEN_341 = mux(_T_2231, newCfg_3_x, reg_pmp_3_cfg_x) @[CSR.scala 1071:76 1073:17 379:20]
    node _GEN_342 = mux(_T_2231, _reg_pmp_3_cfg_w_T, reg_pmp_3_cfg_w) @[CSR.scala 1071:76 1075:19 379:20]
    node _GEN_343 = mux(_T_2231, newCfg_3_r, reg_pmp_3_cfg_r) @[CSR.scala 1071:76 1073:17 379:20]
    node _T_2232 = bits(reg_pmp_4_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _T_2233 = not(_T_2232) @[PMP.scala 49:13]
    skip
    node _T_2235 = and(_T_2233, pmp_mask_base_lo_4) @[PMP.scala 49:20]
    node _T_2236 = and(reg_pmp_4_cfg_l, _T_2235) @[PMP.scala 51:62]
    node _T_2237 = or(reg_pmp_3_cfg_l, _T_2236) @[PMP.scala 51:44]
    node _T_2238 = not(_T_2237) @[CSR.scala 1080:48]
    node _T_2239 = and(_T_175, _T_2238) @[CSR.scala 1080:45]
    node _GEN_344 = mux(_T_2239, wdata, pad(reg_pmp_3_addr, 64)) @[CSR.scala 1080:71 1081:18 379:20]
    node _T_2240 = not(reg_pmp_4_cfg_l) @[CSR.scala 1071:60]
    node _T_2241 = and(_T_170, _T_2240) @[CSR.scala 1071:57]
    node _newCfg_T_28 = shr(wdata, 32) @[CSR.scala 1072:53]
    node _newCfg_WIRE_4 = bits(_newCfg_T_28, 7, 0)
    node newCfg_4_r = bits(_newCfg_WIRE_4, 0, 0) @[CSR.scala 1072:46]
    node newCfg_4_w = bits(_newCfg_WIRE_4, 1, 1) @[CSR.scala 1072:46]
    node newCfg_4_x = bits(_newCfg_WIRE_4, 2, 2) @[CSR.scala 1072:46]
    node newCfg_4_a = bits(_newCfg_WIRE_4, 4, 3) @[CSR.scala 1072:46]
    skip
    node newCfg_4_l = bits(_newCfg_WIRE_4, 7, 7) @[CSR.scala 1072:46]
    skip
    skip
    node _reg_pmp_4_cfg_w_T = and(newCfg_4_w, newCfg_4_r) @[CSR.scala 1075:31]
    skip
    node _GEN_345 = mux(_T_2241, newCfg_4_l, reg_pmp_4_cfg_l) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    node _GEN_347 = mux(_T_2241, newCfg_4_a, reg_pmp_4_cfg_a) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    node _GEN_348 = mux(_T_2241, newCfg_4_x, reg_pmp_4_cfg_x) @[CSR.scala 1071:76 1073:17 379:20]
    node _GEN_349 = mux(_T_2241, _reg_pmp_4_cfg_w_T, reg_pmp_4_cfg_w) @[CSR.scala 1071:76 1075:19 379:20]
    node _GEN_350 = mux(_T_2241, newCfg_4_r, reg_pmp_4_cfg_r) @[CSR.scala 1071:76 1073:17 379:20]
    node _T_2242 = bits(reg_pmp_5_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _T_2243 = not(_T_2242) @[PMP.scala 49:13]
    skip
    node _T_2245 = and(_T_2243, pmp_mask_base_lo_5) @[PMP.scala 49:20]
    node _T_2246 = and(reg_pmp_5_cfg_l, _T_2245) @[PMP.scala 51:62]
    node _T_2247 = or(reg_pmp_4_cfg_l, _T_2246) @[PMP.scala 51:44]
    node _T_2248 = not(_T_2247) @[CSR.scala 1080:48]
    node _T_2249 = and(_T_176, _T_2248) @[CSR.scala 1080:45]
    node _GEN_351 = mux(_T_2249, wdata, pad(reg_pmp_4_addr, 64)) @[CSR.scala 1080:71 1081:18 379:20]
    node _T_2250 = not(reg_pmp_5_cfg_l) @[CSR.scala 1071:60]
    node _T_2251 = and(_T_170, _T_2250) @[CSR.scala 1071:57]
    node _newCfg_T_35 = shr(wdata, 40) @[CSR.scala 1072:53]
    node _newCfg_WIRE_5 = bits(_newCfg_T_35, 7, 0)
    node newCfg_5_r = bits(_newCfg_WIRE_5, 0, 0) @[CSR.scala 1072:46]
    node newCfg_5_w = bits(_newCfg_WIRE_5, 1, 1) @[CSR.scala 1072:46]
    node newCfg_5_x = bits(_newCfg_WIRE_5, 2, 2) @[CSR.scala 1072:46]
    node newCfg_5_a = bits(_newCfg_WIRE_5, 4, 3) @[CSR.scala 1072:46]
    skip
    node newCfg_5_l = bits(_newCfg_WIRE_5, 7, 7) @[CSR.scala 1072:46]
    skip
    skip
    node _reg_pmp_5_cfg_w_T = and(newCfg_5_w, newCfg_5_r) @[CSR.scala 1075:31]
    skip
    node _GEN_352 = mux(_T_2251, newCfg_5_l, reg_pmp_5_cfg_l) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    node _GEN_354 = mux(_T_2251, newCfg_5_a, reg_pmp_5_cfg_a) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    node _GEN_355 = mux(_T_2251, newCfg_5_x, reg_pmp_5_cfg_x) @[CSR.scala 1071:76 1073:17 379:20]
    node _GEN_356 = mux(_T_2251, _reg_pmp_5_cfg_w_T, reg_pmp_5_cfg_w) @[CSR.scala 1071:76 1075:19 379:20]
    node _GEN_357 = mux(_T_2251, newCfg_5_r, reg_pmp_5_cfg_r) @[CSR.scala 1071:76 1073:17 379:20]
    node _T_2252 = bits(reg_pmp_6_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _T_2253 = not(_T_2252) @[PMP.scala 49:13]
    skip
    node _T_2255 = and(_T_2253, pmp_mask_base_lo_6) @[PMP.scala 49:20]
    node _T_2256 = and(reg_pmp_6_cfg_l, _T_2255) @[PMP.scala 51:62]
    node _T_2257 = or(reg_pmp_5_cfg_l, _T_2256) @[PMP.scala 51:44]
    node _T_2258 = not(_T_2257) @[CSR.scala 1080:48]
    node _T_2259 = and(_T_177, _T_2258) @[CSR.scala 1080:45]
    node _GEN_358 = mux(_T_2259, wdata, pad(reg_pmp_5_addr, 64)) @[CSR.scala 1080:71 1081:18 379:20]
    node _T_2260 = not(reg_pmp_6_cfg_l) @[CSR.scala 1071:60]
    node _T_2261 = and(_T_170, _T_2260) @[CSR.scala 1071:57]
    node _newCfg_T_42 = shr(wdata, 48) @[CSR.scala 1072:53]
    node _newCfg_WIRE_6 = bits(_newCfg_T_42, 7, 0)
    node newCfg_6_r = bits(_newCfg_WIRE_6, 0, 0) @[CSR.scala 1072:46]
    node newCfg_6_w = bits(_newCfg_WIRE_6, 1, 1) @[CSR.scala 1072:46]
    node newCfg_6_x = bits(_newCfg_WIRE_6, 2, 2) @[CSR.scala 1072:46]
    node newCfg_6_a = bits(_newCfg_WIRE_6, 4, 3) @[CSR.scala 1072:46]
    skip
    node newCfg_6_l = bits(_newCfg_WIRE_6, 7, 7) @[CSR.scala 1072:46]
    skip
    skip
    node _reg_pmp_6_cfg_w_T = and(newCfg_6_w, newCfg_6_r) @[CSR.scala 1075:31]
    skip
    node _GEN_359 = mux(_T_2261, newCfg_6_l, reg_pmp_6_cfg_l) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    node _GEN_361 = mux(_T_2261, newCfg_6_a, reg_pmp_6_cfg_a) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    node _GEN_362 = mux(_T_2261, newCfg_6_x, reg_pmp_6_cfg_x) @[CSR.scala 1071:76 1073:17 379:20]
    node _GEN_363 = mux(_T_2261, _reg_pmp_6_cfg_w_T, reg_pmp_6_cfg_w) @[CSR.scala 1071:76 1075:19 379:20]
    node _GEN_364 = mux(_T_2261, newCfg_6_r, reg_pmp_6_cfg_r) @[CSR.scala 1071:76 1073:17 379:20]
    node _T_2262 = bits(reg_pmp_7_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _T_2263 = not(_T_2262) @[PMP.scala 49:13]
    skip
    node _T_2265 = and(_T_2263, pmp_mask_base_lo_7) @[PMP.scala 49:20]
    node _T_2266 = and(reg_pmp_7_cfg_l, _T_2265) @[PMP.scala 51:62]
    node _T_2267 = or(reg_pmp_6_cfg_l, _T_2266) @[PMP.scala 51:44]
    node _T_2268 = not(_T_2267) @[CSR.scala 1080:48]
    node _T_2269 = and(_T_178, _T_2268) @[CSR.scala 1080:45]
    node _GEN_365 = mux(_T_2269, wdata, pad(reg_pmp_6_addr, 64)) @[CSR.scala 1080:71 1081:18 379:20]
    node _T_2270 = not(reg_pmp_7_cfg_l) @[CSR.scala 1071:60]
    node _T_2271 = and(_T_170, _T_2270) @[CSR.scala 1071:57]
    node _newCfg_T_49 = shr(wdata, 56) @[CSR.scala 1072:53]
    skip
    node newCfg_7_r = bits(_newCfg_T_49, 0, 0) @[CSR.scala 1072:46]
    node newCfg_7_w = bits(_newCfg_T_49, 1, 1) @[CSR.scala 1072:46]
    node newCfg_7_x = bits(_newCfg_T_49, 2, 2) @[CSR.scala 1072:46]
    node newCfg_7_a = bits(_newCfg_T_49, 4, 3) @[CSR.scala 1072:46]
    skip
    node newCfg_7_l = bits(_newCfg_T_49, 7, 7) @[CSR.scala 1072:46]
    skip
    skip
    node _reg_pmp_7_cfg_w_T = and(newCfg_7_w, newCfg_7_r) @[CSR.scala 1075:31]
    skip
    node _GEN_366 = mux(_T_2271, newCfg_7_l, reg_pmp_7_cfg_l) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    node _GEN_368 = mux(_T_2271, newCfg_7_a, reg_pmp_7_cfg_a) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    node _GEN_369 = mux(_T_2271, newCfg_7_x, reg_pmp_7_cfg_x) @[CSR.scala 1071:76 1073:17 379:20]
    node _GEN_370 = mux(_T_2271, _reg_pmp_7_cfg_w_T, reg_pmp_7_cfg_w) @[CSR.scala 1071:76 1075:19 379:20]
    node _GEN_371 = mux(_T_2271, newCfg_7_r, reg_pmp_7_cfg_r) @[CSR.scala 1071:76 1073:17 379:20]
    skip
    skip
    skip
    skip
    skip
    node _T_2277 = or(reg_pmp_7_cfg_l, _T_2266) @[PMP.scala 51:44]
    node _T_2278 = not(_T_2277) @[CSR.scala 1080:48]
    node _T_2279 = and(_T_179, _T_2278) @[CSR.scala 1080:45]
    node _GEN_372 = mux(_T_2279, wdata, pad(reg_pmp_7_addr, 64)) @[CSR.scala 1080:71 1081:18 379:20]
    node _reg_custom_0_T = and(wdata, UInt<64>("h208")) @[CSR.scala 1087:23]
    skip
    node _reg_custom_0_T_2 = and(reg_custom_0, UInt<64>("hfffffffffffffdf7")) @[CSR.scala 1087:38]
    node _reg_custom_0_T_3 = or(_reg_custom_0_T, _reg_custom_0_T_2) @[CSR.scala 1087:31]
    node _GEN_373 = mux(_T_188, _reg_custom_0_T_3, reg_custom_0) @[CSR.scala 1086:35 1087:13 628:43]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_381 = mux(csr_wen, _GEN_184, _GEN_176) @[CSR.scala 897:18]
    node _GEN_382 = mux(csr_wen, _GEN_185, _GEN_177) @[CSR.scala 897:18]
    node _GEN_383 = mux(csr_wen, _GEN_186, _GEN_180) @[CSR.scala 897:18]
    node _GEN_384 = mux(csr_wen, _GEN_187, _GEN_178) @[CSR.scala 897:18]
    node _GEN_385 = mux(csr_wen, _GEN_230, _GEN_171) @[CSR.scala 897:18]
    node _GEN_386 = mux(csr_wen, _GEN_229, _GEN_170) @[CSR.scala 897:18]
    node _GEN_387 = mux(csr_wen, _GEN_228, _GEN_169) @[CSR.scala 897:18]
    node _GEN_388 = mux(csr_wen, _GEN_191, reg_mstatus_tw) @[CSR.scala 897:18 319:24]
    node _GEN_389 = mux(csr_wen, _GEN_192, reg_mstatus_tsr) @[CSR.scala 897:18 319:24]
    node _GEN_390 = mux(csr_wen, _GEN_233, reg_mstatus_mxr) @[CSR.scala 897:18 319:24]
    node _GEN_391 = mux(csr_wen, _GEN_234, reg_mstatus_sum) @[CSR.scala 897:18 319:24]
    node _GEN_392 = mux(csr_wen, _GEN_195, reg_mstatus_tvm) @[CSR.scala 897:18 319:24]
    node _GEN_393 = mux(csr_wen, _GEN_231, reg_mstatus_fs) @[CSR.scala 897:18 319:24]
    skip
    node _GEN_395 = mux(csr_wen, _GEN_199, reg_misa) @[CSR.scala 897:18 490:21]
    skip
    skip
    skip
    skip
    node _GEN_400 = mux(csr_wen, _GEN_204, pad(_GEN_136, 64)) @[CSR.scala 897:18]
    skip
    node _GEN_402 = mux(csr_wen, _GEN_206, pad(reg_mtvec, 64)) @[CSR.scala 897:18 397:27]
    node _GEN_403 = mux(csr_wen, _GEN_207, _GEN_137) @[CSR.scala 897:18]
    skip
    node _GEN_405 = mux(csr_wen, _GEN_209, pad(reg_mcountinhibit, 64)) @[CSR.scala 897:18 436:34]
    node _GEN_406 = mux(csr_wen, _GEN_210, pad(_GEN_2, 64)) @[CSR.scala 897:18]
    node _GEN_407 = mux(csr_wen, _GEN_211, _GEN_3) @[CSR.scala 897:18]
    node _GEN_408 = mux(csr_wen, _GEN_212, pad(_GEN_0, 64)) @[CSR.scala 897:18]
    node _GEN_409 = mux(csr_wen, _GEN_213, _GEN_1) @[CSR.scala 897:18]
    skip
    node _GEN_411 = mux(csr_wen, _GEN_219, pad(_GEN_182, 64)) @[CSR.scala 897:18]
    node _GEN_412 = mux(csr_wen, _GEN_220, pad(reg_frm, 64)) @[CSR.scala 897:18 430:20]
    node _GEN_413 = mux(csr_wen, _GEN_221, reg_dcsr_step) @[CSR.scala 897:18 327:21]
    node _GEN_414 = mux(csr_wen, _GEN_222, reg_dcsr_ebreakm) @[CSR.scala 897:18 327:21]
    node _GEN_415 = mux(csr_wen, _GEN_223, reg_dcsr_ebreaks) @[CSR.scala 897:18 327:21]
    node _GEN_416 = mux(csr_wen, _GEN_224, reg_dcsr_ebreaku) @[CSR.scala 897:18 327:21]
    node _GEN_417 = mux(csr_wen, _GEN_225, _GEN_122) @[CSR.scala 897:18]
    node _GEN_418 = mux(csr_wen, _GEN_226, pad(_GEN_120, 64)) @[CSR.scala 897:18]
    skip
    skip
    skip
    skip
    node _GEN_423 = mux(csr_wen, _GEN_242, pad(_GEN_129, 64)) @[CSR.scala 897:18]
    node _GEN_424 = mux(csr_wen, _GEN_243, pad(reg_stvec, 64)) @[CSR.scala 897:18 425:22]
    skip
    skip
    skip
    skip
    node _GEN_429 = mux(csr_wen, _GEN_248, pad(reg_scounteren, 64)) @[CSR.scala 417:18 897:18]
    node _GEN_430 = mux(csr_wen, _GEN_249, pad(reg_mcounteren, 64)) @[CSR.scala 413:18 897:18]
    skip
    node _GEN_432 = mux(csr_wen, _GEN_268, pad(reg_bp_0_address, 64)) @[CSR.scala 897:18 378:19]
    skip
    node _GEN_434 = mux(csr_wen, _GEN_270, reg_bp_0_control_dmode) @[CSR.scala 897:18 378:19]
    skip
    skip
    node _GEN_437 = mux(csr_wen, _GEN_273, reg_bp_0_control_action) @[CSR.scala 897:18 378:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_445 = mux(csr_wen, _GEN_281, reg_bp_0_control_x) @[CSR.scala 897:18 378:19]
    node _GEN_446 = mux(csr_wen, _GEN_282, reg_bp_0_control_w) @[CSR.scala 897:18 378:19]
    node _GEN_447 = mux(csr_wen, _GEN_283, reg_bp_0_control_r) @[CSR.scala 897:18 378:19]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_464 = mux(csr_wen, _GEN_317, reg_pmp_0_cfg_l) @[CSR.scala 897:18 379:20]
    skip
    node _GEN_466 = mux(csr_wen, _GEN_319, reg_pmp_0_cfg_a) @[CSR.scala 897:18 379:20]
    skip
    skip
    skip
    node _GEN_470 = mux(csr_wen, _GEN_323, pad(reg_pmp_0_addr, 64)) @[CSR.scala 897:18 379:20]
    node _GEN_471 = mux(csr_wen, _GEN_324, reg_pmp_1_cfg_l) @[CSR.scala 897:18 379:20]
    skip
    node _GEN_473 = mux(csr_wen, _GEN_326, reg_pmp_1_cfg_a) @[CSR.scala 897:18 379:20]
    skip
    skip
    skip
    node _GEN_477 = mux(csr_wen, _GEN_330, pad(reg_pmp_1_addr, 64)) @[CSR.scala 897:18 379:20]
    node _GEN_478 = mux(csr_wen, _GEN_331, reg_pmp_2_cfg_l) @[CSR.scala 897:18 379:20]
    skip
    node _GEN_480 = mux(csr_wen, _GEN_333, reg_pmp_2_cfg_a) @[CSR.scala 897:18 379:20]
    skip
    skip
    skip
    node _GEN_484 = mux(csr_wen, _GEN_337, pad(reg_pmp_2_addr, 64)) @[CSR.scala 897:18 379:20]
    node _GEN_485 = mux(csr_wen, _GEN_338, reg_pmp_3_cfg_l) @[CSR.scala 897:18 379:20]
    skip
    node _GEN_487 = mux(csr_wen, _GEN_340, reg_pmp_3_cfg_a) @[CSR.scala 897:18 379:20]
    skip
    skip
    skip
    node _GEN_491 = mux(csr_wen, _GEN_344, pad(reg_pmp_3_addr, 64)) @[CSR.scala 897:18 379:20]
    node _GEN_492 = mux(csr_wen, _GEN_345, reg_pmp_4_cfg_l) @[CSR.scala 897:18 379:20]
    skip
    node _GEN_494 = mux(csr_wen, _GEN_347, reg_pmp_4_cfg_a) @[CSR.scala 897:18 379:20]
    skip
    skip
    skip
    node _GEN_498 = mux(csr_wen, _GEN_351, pad(reg_pmp_4_addr, 64)) @[CSR.scala 897:18 379:20]
    node _GEN_499 = mux(csr_wen, _GEN_352, reg_pmp_5_cfg_l) @[CSR.scala 897:18 379:20]
    skip
    node _GEN_501 = mux(csr_wen, _GEN_354, reg_pmp_5_cfg_a) @[CSR.scala 897:18 379:20]
    skip
    skip
    skip
    node _GEN_505 = mux(csr_wen, _GEN_358, pad(reg_pmp_5_addr, 64)) @[CSR.scala 897:18 379:20]
    node _GEN_506 = mux(csr_wen, _GEN_359, reg_pmp_6_cfg_l) @[CSR.scala 897:18 379:20]
    skip
    node _GEN_508 = mux(csr_wen, _GEN_361, reg_pmp_6_cfg_a) @[CSR.scala 897:18 379:20]
    skip
    skip
    skip
    node _GEN_512 = mux(csr_wen, _GEN_365, pad(reg_pmp_6_addr, 64)) @[CSR.scala 897:18 379:20]
    node _GEN_513 = mux(csr_wen, _GEN_366, reg_pmp_7_cfg_l) @[CSR.scala 897:18 379:20]
    skip
    node _GEN_515 = mux(csr_wen, _GEN_368, reg_pmp_7_cfg_a) @[CSR.scala 897:18 379:20]
    skip
    skip
    skip
    node _GEN_519 = mux(csr_wen, _GEN_372, pad(reg_pmp_7_addr, 64)) @[CSR.scala 897:18 379:20]
    node _GEN_520 = mux(csr_wen, _GEN_373, reg_custom_0) @[CSR.scala 897:18 628:43]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_trace_0_valid_T = gt(io_retire, UInt<1>("h0")) @[CSR.scala 1162:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_rw_rdata <= or(_io_rw_rdata_T_290, _io_rw_rdata_T_146) @[Mux.scala 27:72]
    io_decode_0_fp_illegal <= or(_io_decode_0_fp_illegal_T, _io_decode_0_fp_illegal_T_2) @[CSR.scala 667:45]
    skip
    io_decode_0_fp_csr <= eq(_io_decode_0_fp_csr_T, UInt<12>("h0")) @[Decode.scala 14:121]
    skip
    io_decode_0_read_illegal <= or(_io_decode_0_read_illegal_T_317, _io_decode_0_read_illegal_T_320) @[CSR.scala 676:68]
    io_decode_0_write_illegal <= andr(_io_decode_0_write_illegal_T) @[CSR.scala 678:47]
    io_decode_0_write_flush <= not(_io_decode_0_write_flush_T_6) @[CSR.scala 679:27]
    io_decode_0_system_illegal <= or(_io_decode_0_system_illegal_T_14, _io_decode_0_system_illegal_T_16) @[CSR.scala 683:63]
    io_csr_stall <= or(reg_wfi, io_status_cease) @[CSR.scala 845:27]
    io_eret <= or(_exception_T, insn_ret) @[CSR.scala 726:38]
    io_singleStep <= and(reg_dcsr_step, _T_276) @[CSR.scala 727:34]
    io_status_debug <= reg_debug @[CSR.scala 730:19]
    io_status_cease <= io_status_cease_r @[CSR.scala 846:19]
    io_status_wfi <= reg_wfi @[CSR.scala 847:17]
    io_status_isa <= bits(reg_misa, 31, 0) @[CSR.scala 731:17]
    io_status_dprv <= io_status_dprv_REG @[CSR.scala 734:18]
    io_status_prv <= reg_mstatus_prv @[CSR.scala 728:13]
    io_status_sd <= or(_io_status_sd_T_2, _io_status_sd_T_3) @[CSR.scala 729:58]
    io_status_zero2 <= UInt<27>("h0") @[CSR.scala 728:13]
    io_status_sxl <= UInt<2>("h2") @[CSR.scala 733:17]
    io_status_uxl <= UInt<2>("h2") @[CSR.scala 732:17]
    io_status_sd_rv32 <= UInt<1>("h0") @[CSR.scala 728:13]
    io_status_zero1 <= UInt<8>("h0") @[CSR.scala 728:13]
    io_status_tsr <= reg_mstatus_tsr @[CSR.scala 728:13]
    io_status_tw <= reg_mstatus_tw @[CSR.scala 728:13]
    io_status_tvm <= reg_mstatus_tvm @[CSR.scala 728:13]
    io_status_mxr <= reg_mstatus_mxr @[CSR.scala 728:13]
    io_status_sum <= reg_mstatus_sum @[CSR.scala 728:13]
    io_status_mprv <= reg_mstatus_mprv @[CSR.scala 728:13]
    io_status_xs <= UInt<2>("h0") @[CSR.scala 728:13]
    io_status_fs <= reg_mstatus_fs @[CSR.scala 728:13]
    io_status_mpp <= reg_mstatus_mpp @[CSR.scala 728:13]
    io_status_vs <= UInt<2>("h0") @[CSR.scala 728:13]
    io_status_spp <= reg_mstatus_spp @[CSR.scala 728:13]
    io_status_mpie <= reg_mstatus_mpie @[CSR.scala 728:13]
    io_status_hpie <= UInt<1>("h0") @[CSR.scala 728:13]
    io_status_spie <= reg_mstatus_spie @[CSR.scala 728:13]
    io_status_upie <= UInt<1>("h0") @[CSR.scala 728:13]
    io_status_mie <= reg_mstatus_mie @[CSR.scala 728:13]
    io_status_hie <= UInt<1>("h0") @[CSR.scala 728:13]
    io_status_sie <= reg_mstatus_sie @[CSR.scala 728:13]
    io_status_uie <= UInt<1>("h0") @[CSR.scala 728:13]
    io_ptbr_mode <= reg_satp_mode @[CSR.scala 725:11]
    skip
    io_ptbr_ppn <= reg_satp_ppn @[CSR.scala 725:11]
    io_evec <= bits(_GEN_172, 39, 0)
    io_time <= cat(value_hi_1, value_lo_1) @[Cat.scala 30:58]
    io_fcsr_rm <= reg_frm @[CSR.scala 882:14]
    io_interrupt <= and(_io_interrupt_T_2, _io_interrupt_T_4) @[CSR.scala 469:73]
    io_interrupt_cause <= tail(_interruptCause_T_3, 1) @[CSR.scala 468:67]
    skip
    skip
    skip
    skip
    io_bp_0_control_action <= reg_bp_0_control_action @[CSR.scala 471:9]
    skip
    skip
    io_bp_0_control_tmatch <= reg_bp_0_control_tmatch @[CSR.scala 471:9]
    io_bp_0_control_m <= reg_bp_0_control_m @[CSR.scala 471:9]
    skip
    io_bp_0_control_s <= reg_bp_0_control_s @[CSR.scala 471:9]
    io_bp_0_control_u <= reg_bp_0_control_u @[CSR.scala 471:9]
    io_bp_0_control_x <= reg_bp_0_control_x @[CSR.scala 471:9]
    io_bp_0_control_w <= reg_bp_0_control_w @[CSR.scala 471:9]
    io_bp_0_control_r <= reg_bp_0_control_r @[CSR.scala 471:9]
    io_bp_0_address <= reg_bp_0_address @[CSR.scala 471:9]
    skip
    skip
    skip
    skip
    io_pmp_0_cfg_l <= reg_pmp_0_cfg_l @[PMP.scala 26:19 27:13]
    skip
    io_pmp_0_cfg_a <= reg_pmp_0_cfg_a @[PMP.scala 26:19 27:13]
    io_pmp_0_cfg_x <= reg_pmp_0_cfg_x @[PMP.scala 26:19 27:13]
    io_pmp_0_cfg_w <= reg_pmp_0_cfg_w @[PMP.scala 26:19 27:13]
    io_pmp_0_cfg_r <= reg_pmp_0_cfg_r @[PMP.scala 26:19 27:13]
    io_pmp_0_addr <= reg_pmp_0_addr @[PMP.scala 26:19 28:14]
    io_pmp_0_mask <= bits(_pmp_mask_T_3, 31, 0) @[PMP.scala 26:19 29:14]
    io_pmp_1_cfg_l <= reg_pmp_1_cfg_l @[PMP.scala 26:19 27:13]
    skip
    io_pmp_1_cfg_a <= reg_pmp_1_cfg_a @[PMP.scala 26:19 27:13]
    io_pmp_1_cfg_x <= reg_pmp_1_cfg_x @[PMP.scala 26:19 27:13]
    io_pmp_1_cfg_w <= reg_pmp_1_cfg_w @[PMP.scala 26:19 27:13]
    io_pmp_1_cfg_r <= reg_pmp_1_cfg_r @[PMP.scala 26:19 27:13]
    io_pmp_1_addr <= reg_pmp_1_addr @[PMP.scala 26:19 28:14]
    io_pmp_1_mask <= bits(_pmp_mask_T_7, 31, 0) @[PMP.scala 26:19 29:14]
    io_pmp_2_cfg_l <= reg_pmp_2_cfg_l @[PMP.scala 26:19 27:13]
    skip
    io_pmp_2_cfg_a <= reg_pmp_2_cfg_a @[PMP.scala 26:19 27:13]
    io_pmp_2_cfg_x <= reg_pmp_2_cfg_x @[PMP.scala 26:19 27:13]
    io_pmp_2_cfg_w <= reg_pmp_2_cfg_w @[PMP.scala 26:19 27:13]
    io_pmp_2_cfg_r <= reg_pmp_2_cfg_r @[PMP.scala 26:19 27:13]
    io_pmp_2_addr <= reg_pmp_2_addr @[PMP.scala 26:19 28:14]
    io_pmp_2_mask <= bits(_pmp_mask_T_11, 31, 0) @[PMP.scala 26:19 29:14]
    io_pmp_3_cfg_l <= reg_pmp_3_cfg_l @[PMP.scala 26:19 27:13]
    skip
    io_pmp_3_cfg_a <= reg_pmp_3_cfg_a @[PMP.scala 26:19 27:13]
    io_pmp_3_cfg_x <= reg_pmp_3_cfg_x @[PMP.scala 26:19 27:13]
    io_pmp_3_cfg_w <= reg_pmp_3_cfg_w @[PMP.scala 26:19 27:13]
    io_pmp_3_cfg_r <= reg_pmp_3_cfg_r @[PMP.scala 26:19 27:13]
    io_pmp_3_addr <= reg_pmp_3_addr @[PMP.scala 26:19 28:14]
    io_pmp_3_mask <= bits(_pmp_mask_T_15, 31, 0) @[PMP.scala 26:19 29:14]
    io_pmp_4_cfg_l <= reg_pmp_4_cfg_l @[PMP.scala 26:19 27:13]
    skip
    io_pmp_4_cfg_a <= reg_pmp_4_cfg_a @[PMP.scala 26:19 27:13]
    io_pmp_4_cfg_x <= reg_pmp_4_cfg_x @[PMP.scala 26:19 27:13]
    io_pmp_4_cfg_w <= reg_pmp_4_cfg_w @[PMP.scala 26:19 27:13]
    io_pmp_4_cfg_r <= reg_pmp_4_cfg_r @[PMP.scala 26:19 27:13]
    io_pmp_4_addr <= reg_pmp_4_addr @[PMP.scala 26:19 28:14]
    io_pmp_4_mask <= bits(_pmp_mask_T_19, 31, 0) @[PMP.scala 26:19 29:14]
    io_pmp_5_cfg_l <= reg_pmp_5_cfg_l @[PMP.scala 26:19 27:13]
    skip
    io_pmp_5_cfg_a <= reg_pmp_5_cfg_a @[PMP.scala 26:19 27:13]
    io_pmp_5_cfg_x <= reg_pmp_5_cfg_x @[PMP.scala 26:19 27:13]
    io_pmp_5_cfg_w <= reg_pmp_5_cfg_w @[PMP.scala 26:19 27:13]
    io_pmp_5_cfg_r <= reg_pmp_5_cfg_r @[PMP.scala 26:19 27:13]
    io_pmp_5_addr <= reg_pmp_5_addr @[PMP.scala 26:19 28:14]
    io_pmp_5_mask <= bits(_pmp_mask_T_23, 31, 0) @[PMP.scala 26:19 29:14]
    io_pmp_6_cfg_l <= reg_pmp_6_cfg_l @[PMP.scala 26:19 27:13]
    skip
    io_pmp_6_cfg_a <= reg_pmp_6_cfg_a @[PMP.scala 26:19 27:13]
    io_pmp_6_cfg_x <= reg_pmp_6_cfg_x @[PMP.scala 26:19 27:13]
    io_pmp_6_cfg_w <= reg_pmp_6_cfg_w @[PMP.scala 26:19 27:13]
    io_pmp_6_cfg_r <= reg_pmp_6_cfg_r @[PMP.scala 26:19 27:13]
    io_pmp_6_addr <= reg_pmp_6_addr @[PMP.scala 26:19 28:14]
    io_pmp_6_mask <= bits(_pmp_mask_T_27, 31, 0) @[PMP.scala 26:19 29:14]
    io_pmp_7_cfg_l <= reg_pmp_7_cfg_l @[PMP.scala 26:19 27:13]
    skip
    io_pmp_7_cfg_a <= reg_pmp_7_cfg_a @[PMP.scala 26:19 27:13]
    io_pmp_7_cfg_x <= reg_pmp_7_cfg_x @[PMP.scala 26:19 27:13]
    io_pmp_7_cfg_w <= reg_pmp_7_cfg_w @[PMP.scala 26:19 27:13]
    io_pmp_7_cfg_r <= reg_pmp_7_cfg_r @[PMP.scala 26:19 27:13]
    io_pmp_7_addr <= reg_pmp_7_addr @[PMP.scala 26:19 28:14]
    io_pmp_7_mask <= bits(_pmp_mask_T_31, 31, 0) @[PMP.scala 26:19 29:14]
    skip
    io_inhibit_cycle <= bits(reg_mcountinhibit, 0, 0) @[CSR.scala 437:40]
    io_trace_0_valid <= or(_io_trace_0_valid_T, io_trace_0_exception) @[CSR.scala 1162:30]
    io_trace_0_iaddr <= io_pc @[CSR.scala 1164:13]
    io_trace_0_insn <= io_inst_0 @[CSR.scala 1163:12]
    io_trace_0_priv <= cat(reg_debug, reg_mstatus_prv) @[Cat.scala 30:58]
    io_trace_0_exception <= or(_exception_T, io_exception) @[CSR.scala 738:43]
    io_trace_0_interrupt <= bits(cause, 63, 63) @[CSR.scala 1167:25]
    io_trace_0_cause <= mux(insn_call, pad(_cause_T_1, 64), _cause_T_2) @[CSR.scala 688:8]
    io_trace_0_tval <= io_tval @[CSR.scala 1168:12]
    skip
    skip
    io_customCSRs_0_value <= reg_custom_0 @[CSR.scala 852:14]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg_mstatus_prv <= mux(reset, UInt<2>("h3"), _reg_mstatus_prv_T_1) @[CSR.scala 319:{24,24} 322:19]
    skip
    skip
    skip
    skip
    skip
    skip
    reg_mstatus_tsr <= mux(reset, UInt<1>("h0"), _GEN_389) @[CSR.scala 319:{24,24}]
    reg_mstatus_tw <= mux(reset, UInt<1>("h0"), _GEN_388) @[CSR.scala 319:{24,24}]
    reg_mstatus_tvm <= mux(reset, UInt<1>("h0"), _GEN_392) @[CSR.scala 319:{24,24}]
    reg_mstatus_mxr <= mux(reset, UInt<1>("h0"), _GEN_390) @[CSR.scala 319:{24,24}]
    reg_mstatus_sum <= mux(reset, UInt<1>("h0"), _GEN_391) @[CSR.scala 319:{24,24}]
    reg_mstatus_mprv <= mux(reset, UInt<1>("h0"), _GEN_383) @[CSR.scala 319:{24,24}]
    skip
    reg_mstatus_fs <= mux(reset, UInt<2>("h0"), _GEN_393) @[CSR.scala 319:{24,24}]
    reg_mstatus_mpp <= mux(reset, UInt<2>("h3"), _GEN_384) @[CSR.scala 319:{24,24}]
    skip
    node _GEN_585 = mux(reset, UInt<2>("h0"), _GEN_385) @[CSR.scala 319:{24,24}]
    reg_mstatus_spp <= bits(_GEN_585, 0, 0) @[CSR.scala 319:{24,24}]
    reg_mstatus_mpie <= mux(reset, UInt<1>("h0"), _GEN_382) @[CSR.scala 319:{24,24}]
    skip
    reg_mstatus_spie <= mux(reset, UInt<1>("h0"), _GEN_386) @[CSR.scala 319:{24,24}]
    skip
    reg_mstatus_mie <= mux(reset, UInt<1>("h0"), _GEN_381) @[CSR.scala 319:{24,24}]
    skip
    reg_mstatus_sie <= mux(reset, UInt<1>("h0"), _GEN_387) @[CSR.scala 319:{24,24}]
    skip
    skip
    skip
    skip
    reg_dcsr_ebreakm <= mux(reset, UInt<1>("h0"), _GEN_414) @[CSR.scala 327:{21,21}]
    skip
    reg_dcsr_ebreaks <= mux(reset, UInt<1>("h0"), _GEN_415) @[CSR.scala 327:{21,21}]
    reg_dcsr_ebreaku <= mux(reset, UInt<1>("h0"), _GEN_416) @[CSR.scala 327:{21,21}]
    skip
    skip
    skip
    reg_dcsr_cause <= mux(reset, UInt<3>("h0"), _GEN_121) @[CSR.scala 327:{21,21}]
    skip
    reg_dcsr_step <= mux(reset, UInt<1>("h0"), _GEN_413) @[CSR.scala 327:{21,21}]
    reg_dcsr_prv <= mux(reset, UInt<2>("h3"), _GEN_417) @[CSR.scala 327:{21,21}]
    reg_debug <= mux(reset, UInt<1>("h0"), _GEN_173) @[CSR.scala 368:{22,22}]
    reg_dpc <= bits(_GEN_418, 39, 0)
    reg_dscratch <= mux(csr_wen, _GEN_227, reg_dscratch) @[CSR.scala 897:18 370:25]
    reg_singleStepped <= mux(_io_interrupt_T, UInt<1>("h0"), _GEN_50) @[CSR.scala 746:{25,45}]
    skip
    skip
    reg_bp_0_control_dmode <= mux(reset, UInt<1>("h0"), _GEN_434) @[CSR.scala 1140:18 1142:17]
    skip
    skip
    reg_bp_0_control_action <= mux(reset, UInt<1>("h0"), _GEN_437) @[CSR.scala 1140:18 1141:18]
    skip
    skip
    reg_bp_0_control_tmatch <= mux(csr_wen, _GEN_276, reg_bp_0_control_tmatch) @[CSR.scala 897:18 378:19]
    reg_bp_0_control_m <= mux(csr_wen, _GEN_277, reg_bp_0_control_m) @[CSR.scala 897:18 378:19]
    skip
    reg_bp_0_control_s <= mux(csr_wen, _GEN_279, reg_bp_0_control_s) @[CSR.scala 897:18 378:19]
    reg_bp_0_control_u <= mux(csr_wen, _GEN_280, reg_bp_0_control_u) @[CSR.scala 897:18 378:19]
    reg_bp_0_control_x <= mux(reset, UInt<1>("h0"), _GEN_445) @[CSR.scala 1140:18 1146:13]
    reg_bp_0_control_w <= mux(reset, UInt<1>("h0"), _GEN_446) @[CSR.scala 1140:18 1145:13]
    reg_bp_0_control_r <= mux(reset, UInt<1>("h0"), _GEN_447) @[CSR.scala 1140:18 1144:13]
    reg_bp_0_address <= bits(_GEN_432, 38, 0)
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg_pmp_0_cfg_l <= mux(reset, UInt<1>("h0"), _GEN_464) @[CSR.scala 1157:18 PMP.scala 40:11]
    skip
    reg_pmp_0_cfg_a <= mux(reset, UInt<2>("h0"), _GEN_466) @[CSR.scala 1157:18 PMP.scala 39:11]
    reg_pmp_0_cfg_x <= mux(csr_wen, _GEN_320, reg_pmp_0_cfg_x) @[CSR.scala 897:18 379:20]
    reg_pmp_0_cfg_w <= mux(csr_wen, _GEN_321, reg_pmp_0_cfg_w) @[CSR.scala 897:18 379:20]
    reg_pmp_0_cfg_r <= mux(csr_wen, _GEN_322, reg_pmp_0_cfg_r) @[CSR.scala 897:18 379:20]
    reg_pmp_0_addr <= bits(_GEN_470, 29, 0)
    reg_pmp_1_cfg_l <= mux(reset, UInt<1>("h0"), _GEN_471) @[CSR.scala 1157:18 PMP.scala 40:11]
    skip
    reg_pmp_1_cfg_a <= mux(reset, UInt<2>("h0"), _GEN_473) @[CSR.scala 1157:18 PMP.scala 39:11]
    reg_pmp_1_cfg_x <= mux(csr_wen, _GEN_327, reg_pmp_1_cfg_x) @[CSR.scala 897:18 379:20]
    reg_pmp_1_cfg_w <= mux(csr_wen, _GEN_328, reg_pmp_1_cfg_w) @[CSR.scala 897:18 379:20]
    reg_pmp_1_cfg_r <= mux(csr_wen, _GEN_329, reg_pmp_1_cfg_r) @[CSR.scala 897:18 379:20]
    reg_pmp_1_addr <= bits(_GEN_477, 29, 0)
    reg_pmp_2_cfg_l <= mux(reset, UInt<1>("h0"), _GEN_478) @[CSR.scala 1157:18 PMP.scala 40:11]
    skip
    reg_pmp_2_cfg_a <= mux(reset, UInt<2>("h0"), _GEN_480) @[CSR.scala 1157:18 PMP.scala 39:11]
    reg_pmp_2_cfg_x <= mux(csr_wen, _GEN_334, reg_pmp_2_cfg_x) @[CSR.scala 897:18 379:20]
    reg_pmp_2_cfg_w <= mux(csr_wen, _GEN_335, reg_pmp_2_cfg_w) @[CSR.scala 897:18 379:20]
    reg_pmp_2_cfg_r <= mux(csr_wen, _GEN_336, reg_pmp_2_cfg_r) @[CSR.scala 897:18 379:20]
    reg_pmp_2_addr <= bits(_GEN_484, 29, 0)
    reg_pmp_3_cfg_l <= mux(reset, UInt<1>("h0"), _GEN_485) @[CSR.scala 1157:18 PMP.scala 40:11]
    skip
    reg_pmp_3_cfg_a <= mux(reset, UInt<2>("h0"), _GEN_487) @[CSR.scala 1157:18 PMP.scala 39:11]
    reg_pmp_3_cfg_x <= mux(csr_wen, _GEN_341, reg_pmp_3_cfg_x) @[CSR.scala 897:18 379:20]
    reg_pmp_3_cfg_w <= mux(csr_wen, _GEN_342, reg_pmp_3_cfg_w) @[CSR.scala 897:18 379:20]
    reg_pmp_3_cfg_r <= mux(csr_wen, _GEN_343, reg_pmp_3_cfg_r) @[CSR.scala 897:18 379:20]
    reg_pmp_3_addr <= bits(_GEN_491, 29, 0)
    reg_pmp_4_cfg_l <= mux(reset, UInt<1>("h0"), _GEN_492) @[CSR.scala 1157:18 PMP.scala 40:11]
    skip
    reg_pmp_4_cfg_a <= mux(reset, UInt<2>("h0"), _GEN_494) @[CSR.scala 1157:18 PMP.scala 39:11]
    reg_pmp_4_cfg_x <= mux(csr_wen, _GEN_348, reg_pmp_4_cfg_x) @[CSR.scala 897:18 379:20]
    reg_pmp_4_cfg_w <= mux(csr_wen, _GEN_349, reg_pmp_4_cfg_w) @[CSR.scala 897:18 379:20]
    reg_pmp_4_cfg_r <= mux(csr_wen, _GEN_350, reg_pmp_4_cfg_r) @[CSR.scala 897:18 379:20]
    reg_pmp_4_addr <= bits(_GEN_498, 29, 0)
    reg_pmp_5_cfg_l <= mux(reset, UInt<1>("h0"), _GEN_499) @[CSR.scala 1157:18 PMP.scala 40:11]
    skip
    reg_pmp_5_cfg_a <= mux(reset, UInt<2>("h0"), _GEN_501) @[CSR.scala 1157:18 PMP.scala 39:11]
    reg_pmp_5_cfg_x <= mux(csr_wen, _GEN_355, reg_pmp_5_cfg_x) @[CSR.scala 897:18 379:20]
    reg_pmp_5_cfg_w <= mux(csr_wen, _GEN_356, reg_pmp_5_cfg_w) @[CSR.scala 897:18 379:20]
    reg_pmp_5_cfg_r <= mux(csr_wen, _GEN_357, reg_pmp_5_cfg_r) @[CSR.scala 897:18 379:20]
    reg_pmp_5_addr <= bits(_GEN_505, 29, 0)
    reg_pmp_6_cfg_l <= mux(reset, UInt<1>("h0"), _GEN_506) @[CSR.scala 1157:18 PMP.scala 40:11]
    skip
    reg_pmp_6_cfg_a <= mux(reset, UInt<2>("h0"), _GEN_508) @[CSR.scala 1157:18 PMP.scala 39:11]
    reg_pmp_6_cfg_x <= mux(csr_wen, _GEN_362, reg_pmp_6_cfg_x) @[CSR.scala 897:18 379:20]
    reg_pmp_6_cfg_w <= mux(csr_wen, _GEN_363, reg_pmp_6_cfg_w) @[CSR.scala 897:18 379:20]
    reg_pmp_6_cfg_r <= mux(csr_wen, _GEN_364, reg_pmp_6_cfg_r) @[CSR.scala 897:18 379:20]
    reg_pmp_6_addr <= bits(_GEN_512, 29, 0)
    reg_pmp_7_cfg_l <= mux(reset, UInt<1>("h0"), _GEN_513) @[CSR.scala 1157:18 PMP.scala 40:11]
    skip
    reg_pmp_7_cfg_a <= mux(reset, UInt<2>("h0"), _GEN_515) @[CSR.scala 1157:18 PMP.scala 39:11]
    reg_pmp_7_cfg_x <= mux(csr_wen, _GEN_369, reg_pmp_7_cfg_x) @[CSR.scala 897:18 379:20]
    reg_pmp_7_cfg_w <= mux(csr_wen, _GEN_370, reg_pmp_7_cfg_w) @[CSR.scala 897:18 379:20]
    reg_pmp_7_cfg_r <= mux(csr_wen, _GEN_371, reg_pmp_7_cfg_r) @[CSR.scala 897:18 379:20]
    reg_pmp_7_addr <= bits(_GEN_519, 29, 0)
    reg_mie <= mux(csr_wen, _GEN_240, reg_mie) @[CSR.scala 897:18 381:20]
    reg_mideleg <= mux(csr_wen, _GEN_246, reg_mideleg) @[CSR.scala 383:18 897:18]
    reg_medeleg <= mux(csr_wen, _GEN_247, reg_medeleg) @[CSR.scala 387:18 897:18]
    skip
    skip
    skip
    skip
    skip
    skip
    reg_mip_seip <= mux(csr_wen, _GEN_202, reg_mip_seip) @[CSR.scala 897:18 390:20]
    skip
    skip
    skip
    reg_mip_stip <= mux(csr_wen, _GEN_201, reg_mip_stip) @[CSR.scala 897:18 390:20]
    skip
    skip
    skip
    reg_mip_ssip <= mux(csr_wen, _GEN_235, reg_mip_ssip) @[CSR.scala 897:18 390:20]
    skip
    reg_mepc <= bits(_GEN_400, 39, 0)
    reg_mcause <= mux(reset, UInt<64>("h0"), _GEN_403) @[CSR.scala 392:{27,27}]
    reg_mtval <= mux(csr_wen, _GEN_208, _GEN_138) @[CSR.scala 897:18]
    reg_mscratch <= mux(csr_wen, _GEN_205, reg_mscratch) @[CSR.scala 897:18 394:25]
    node _GEN_586 = mux(reset, UInt<64>("h0"), _GEN_402) @[CSR.scala 397:{27,27}]
    reg_mtvec <= bits(_GEN_586, 31, 0) @[CSR.scala 397:{27,27}]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg_mcounteren <= bits(_GEN_430, 31, 0)
    reg_scounteren <= bits(_GEN_429, 31, 0)
    reg_sepc <= bits(_GEN_423, 39, 0)
    reg_scause <= mux(csr_wen, _GEN_244, _GEN_130) @[CSR.scala 897:18]
    reg_stval <= mux(csr_wen, _GEN_245, _GEN_132) @[CSR.scala 897:18]
    reg_sscratch <= mux(csr_wen, _GEN_241, reg_sscratch) @[CSR.scala 897:18 424:25]
    reg_stvec <= bits(_GEN_424, 38, 0)
    reg_satp_mode <= mux(csr_wen, _GEN_238, reg_satp_mode) @[CSR.scala 897:18 426:21]
    skip
    reg_satp_ppn <= mux(csr_wen, _GEN_239, reg_satp_ppn) @[CSR.scala 897:18 426:21]
    reg_wfi <= mux(reset, UInt<1>("h0"), _GEN_49) @[CSR.scala 427:{50,50}]
    reg_fflags <= bits(_GEN_411, 4, 0)
    reg_frm <= bits(_GEN_412, 2, 0)
    node _GEN_587 = mux(reset, UInt<64>("h0"), _GEN_405) @[CSR.scala 436:{34,34}]
    reg_mcountinhibit <= bits(_GEN_587, 2, 0) @[CSR.scala 436:{34,34}]
    node _GEN_588 = mux(reset, UInt<64>("h0"), _GEN_408) @[Counters.scala 45:{37,37}]
    value_lo <= bits(_GEN_588, 5, 0) @[Counters.scala 45:{37,37}]
    value_hi <= mux(reset, UInt<58>("h0"), _GEN_409) @[Counters.scala 50:{27,27}]
    node _GEN_589 = mux(reset, UInt<64>("h0"), _GEN_406) @[Counters.scala 45:{37,37}]
    value_lo_1 <= bits(_GEN_589, 5, 0) @[Counters.scala 45:{37,37}]
    value_hi_1 <= mux(reset, UInt<58>("h0"), _GEN_407) @[Counters.scala 50:{27,27}]
    reg_misa <= mux(reset, UInt<64>("h800000000094112d"), _GEN_395) @[CSR.scala 490:{21,21}]
    reg_custom_0 <= mux(reset, UInt<64>("h208"), _GEN_520) @[CSR.scala 628:{43,43}]
    skip
    skip
    skip
    io_status_dprv_REG <= mux(_io_status_dprv_x87_T_1, reg_mstatus_mpp, reg_mstatus_prv) @[CSR.scala 734:35]
    io_status_cease_r <= mux(reset, UInt<1>("h0"), _GEN_181) @[Reg.scala 27:{20,20}]
    printf(clock, _T_253, "Assertion failed: these conditions must be mutually exclusive\n    at CSR.scala:739 assert(PopCount(insn_ret :: insn_call :: insn_break :: io.exception :: Nil) <= 1, \"these conditions must be mutually exclusive\")\n") @[CSR.scala 739:9]
    stop(clock, _T_253, 1) @[CSR.scala 739:9]
    skip
    skip
    printf(clock, _T_275, "Assertion failed\n    at CSR.scala:748 assert(!reg_singleStepped || io.retire === UInt(0))\n") @[CSR.scala 748:9]
    stop(clock, _T_275, 1) @[CSR.scala 748:9]

  module BreakpointUnit :
    input io_status_debug : UInt<1>
    input io_status_prv : UInt<2>
    input io_bp_0_control_action : UInt<1>
    input io_bp_0_control_tmatch : UInt<2>
    input io_bp_0_control_m : UInt<1>
    input io_bp_0_control_s : UInt<1>
    input io_bp_0_control_u : UInt<1>
    input io_bp_0_control_x : UInt<1>
    input io_bp_0_control_w : UInt<1>
    input io_bp_0_control_r : UInt<1>
    input io_bp_0_address : UInt<39>
    input io_pc : UInt<39>
    input io_ea : UInt<39>
    output io_xcpt_if : UInt<1>
    output io_xcpt_ld : UInt<1>
    output io_xcpt_st : UInt<1>
    output io_debug_if : UInt<1>
    output io_debug_ld : UInt<1>
    output io_debug_st : UInt<1>

    node _en_T = not(io_status_debug) @[Breakpoint.scala 31:35]
    node en_lo = cat(io_bp_0_control_s, io_bp_0_control_u) @[Cat.scala 30:58]
    node en_hi = cat(io_bp_0_control_m, UInt<1>("h0")) @[Cat.scala 30:58]
    node _en_T_1 = cat(en_hi, en_lo) @[Cat.scala 30:58]
    node _en_T_2 = dshr(_en_T_1, io_status_prv) @[Breakpoint.scala 31:68]
    node _en_T_3 = bits(_en_T_2, 0, 0) @[Breakpoint.scala 31:68]
    node en = and(_en_T, _en_T_3) @[Breakpoint.scala 31:50]
    skip
    node _r_T = and(en, io_bp_0_control_r) @[Breakpoint.scala 107:16]
    node _r_T_1 = bits(io_bp_0_control_tmatch, 1, 1) @[Breakpoint.scala 69:23]
    node _r_T_2 = geq(io_ea, io_bp_0_address) @[Breakpoint.scala 66:8]
    node _r_T_3 = bits(io_bp_0_control_tmatch, 0, 0) @[Breakpoint.scala 66:36]
    node _r_T_4 = xor(_r_T_2, _r_T_3) @[Breakpoint.scala 66:20]
    node _r_T_5 = not(io_ea) @[Breakpoint.scala 63:6]
    skip
    node _r_T_6 = bits(io_bp_0_address, 0, 0) @[Breakpoint.scala 60:83]
    node r_lo_hi = and(_r_T_3, _r_T_6) @[Breakpoint.scala 60:73]
    node _r_T_7 = bits(io_bp_0_address, 1, 1) @[Breakpoint.scala 60:83]
    node r_hi_lo = and(r_lo_hi, _r_T_7) @[Breakpoint.scala 60:73]
    node _r_T_8 = bits(io_bp_0_address, 2, 2) @[Breakpoint.scala 60:83]
    node r_hi_hi = and(r_hi_lo, _r_T_8) @[Breakpoint.scala 60:73]
    node r_lo = cat(r_lo_hi, _r_T_3) @[Cat.scala 30:58]
    node r_hi = cat(r_hi_hi, r_hi_lo) @[Cat.scala 30:58]
    node _r_T_9 = cat(r_hi, r_lo) @[Cat.scala 30:58]
    node _GEN_11 = pad(_r_T_9, 39) @[Breakpoint.scala 63:9]
    node _r_T_10 = or(_r_T_5, _GEN_11) @[Breakpoint.scala 63:9]
    node _r_T_11 = not(io_bp_0_address) @[Breakpoint.scala 63:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _r_T_16 = or(_r_T_11, _GEN_11) @[Breakpoint.scala 63:33]
    node _r_T_17 = eq(_r_T_10, _r_T_16) @[Breakpoint.scala 63:19]
    node _r_T_18 = mux(_r_T_1, _r_T_4, _r_T_17) @[Breakpoint.scala 69:8]
    node r = and(_r_T, _r_T_18) @[Breakpoint.scala 107:32]
    skip
    node _w_T = and(en, io_bp_0_control_w) @[Breakpoint.scala 108:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node w = and(_w_T, _r_T_18) @[Breakpoint.scala 108:32]
    skip
    node _x_T = and(en, io_bp_0_control_x) @[Breakpoint.scala 109:16]
    skip
    node _x_T_2 = geq(io_pc, io_bp_0_address) @[Breakpoint.scala 66:8]
    skip
    node _x_T_4 = xor(_x_T_2, _r_T_3) @[Breakpoint.scala 66:20]
    node _x_T_5 = not(io_pc) @[Breakpoint.scala 63:6]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _x_T_10 = or(_x_T_5, _GEN_11) @[Breakpoint.scala 63:9]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _x_T_17 = eq(_x_T_10, _r_T_16) @[Breakpoint.scala 63:19]
    node _x_T_18 = mux(_r_T_1, _x_T_4, _x_T_17) @[Breakpoint.scala 69:8]
    node x = and(_x_T, _x_T_18) @[Breakpoint.scala 109:32]
    skip
    skip
    skip
    skip
    node _io_xcpt_ld_T = not(io_bp_0_control_action) @[Breakpoint.scala 119:51]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_xcpt_if <= and(x, _io_xcpt_ld_T) @[Breakpoint.scala 121:{27,40} 97:14]
    io_xcpt_ld <= and(r, _io_xcpt_ld_T) @[Breakpoint.scala 119:{27,40} 98:14]
    io_xcpt_st <= and(w, _io_xcpt_ld_T) @[Breakpoint.scala 120:{27,40} 99:14]
    io_debug_if <= and(x, io_bp_0_control_action) @[Breakpoint.scala 100:15 121:{27,73}]
    io_debug_ld <= and(r, io_bp_0_control_action) @[Breakpoint.scala 101:15 119:{27,73}]
    io_debug_st <= and(w, io_bp_0_control_action) @[Breakpoint.scala 102:15 120:{27,73}]
    skip
    skip
    skip
    skip
    skip

  module ALU :
    input io_dw : UInt<1>
    input io_fn : UInt<4>
    input io_in2 : UInt<64>
    input io_in1 : UInt<64>
    output io_out : UInt<64>
    output io_adder_out : UInt<64>
    output io_cmp_out : UInt<1>

    node _in2_inv_T = bits(io_fn, 3, 3) @[ALU.scala 40:29]
    node _in2_inv_T_1 = not(io_in2) @[ALU.scala 61:35]
    node in2_inv = mux(_in2_inv_T, _in2_inv_T_1, io_in2) @[ALU.scala 61:20]
    node in1_xor_in2 = xor(io_in1, in2_inv) @[ALU.scala 62:28]
    node _io_adder_out_T = add(io_in1, in2_inv) @[ALU.scala 63:26]
    node _io_adder_out_T_1 = tail(_io_adder_out_T, 1) @[ALU.scala 63:26]
    skip
    node _GEN_1 = pad(_in2_inv_T, 64) @[ALU.scala 63:36]
    node _io_adder_out_T_3 = add(_io_adder_out_T_1, _GEN_1) @[ALU.scala 63:36]
    skip
    node _slt_T = bits(io_in1, 63, 63) @[ALU.scala 67:15]
    node _slt_T_1 = bits(io_in2, 63, 63) @[ALU.scala 67:34]
    node _slt_T_2 = eq(_slt_T, _slt_T_1) @[ALU.scala 67:24]
    node _slt_T_3 = bits(io_adder_out, 63, 63) @[ALU.scala 67:56]
    node _slt_T_4 = bits(io_fn, 1, 1) @[ALU.scala 42:35]
    skip
    skip
    node _slt_T_7 = mux(_slt_T_4, _slt_T_1, _slt_T) @[ALU.scala 68:8]
    node slt = mux(_slt_T_2, _slt_T_3, _slt_T_7) @[ALU.scala 67:8]
    node _io_cmp_out_T = bits(io_fn, 0, 0) @[ALU.scala 43:35]
    skip
    node _io_cmp_out_T_2 = not(_in2_inv_T) @[ALU.scala 44:26]
    node _io_cmp_out_T_3 = eq(in1_xor_in2, UInt<64>("h0")) @[ALU.scala 69:68]
    node _io_cmp_out_T_4 = mux(_io_cmp_out_T_2, _io_cmp_out_T_3, slt) @[ALU.scala 69:41]
    skip
    skip
    node _T_1 = bits(io_in1, 31, 31) @[ALU.scala 76:55]
    node _T_2 = and(_in2_inv_T, _T_1) @[ALU.scala 76:46]
    skip
    node _T_4 = mux(_T_2, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 72:12]
    skip
    node _T_6 = bits(io_in1, 63, 32) @[ALU.scala 77:48]
    node hi = mux(io_dw, _T_6, _T_4) @[ALU.scala 77:24]
    node _T_7 = bits(io_in2, 5, 5) @[ALU.scala 78:29]
    skip
    node hi_1 = and(_T_7, io_dw) @[ALU.scala 78:33]
    node lo = bits(io_in2, 4, 0) @[ALU.scala 78:60]
    node shamt = cat(hi_1, lo) @[Cat.scala 30:58]
    node lo_1 = bits(io_in1, 31, 0) @[ALU.scala 79:34]
    node shin_r = cat(hi, lo_1) @[Cat.scala 30:58]
    node _shin_T = eq(io_fn, UInt<4>("h5")) @[ALU.scala 81:24]
    node _shin_T_1 = eq(io_fn, UInt<4>("hb")) @[ALU.scala 81:44]
    node _shin_T_2 = or(_shin_T, _shin_T_1) @[ALU.scala 81:35]
    skip
    skip
    node _shin_T_5 = shr(shin_r, 32) @[Bitwise.scala 103:21]
    node _GEN_2 = pad(_shin_T_5, 64) @[Bitwise.scala 103:31]
    node _shin_T_6 = and(_GEN_2, UInt<64>("hffffffff")) @[Bitwise.scala 103:31]
    node _shin_T_7 = bits(shin_r, 31, 0) @[Bitwise.scala 103:46]
    node _shin_T_8 = shl(_shin_T_7, 32) @[Bitwise.scala 103:65]
    skip
    node _shin_T_10 = and(_shin_T_8, UInt<64>("hffffffff00000000")) @[Bitwise.scala 103:75]
    node _shin_T_11 = or(_shin_T_6, _shin_T_10) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shin_T_15 = shr(_shin_T_11, 16) @[Bitwise.scala 103:21]
    node _GEN_3 = pad(_shin_T_15, 64) @[Bitwise.scala 103:31]
    node _shin_T_16 = and(_GEN_3, UInt<64>("hffff0000ffff")) @[Bitwise.scala 103:31]
    node _shin_T_17 = bits(_shin_T_11, 47, 0) @[Bitwise.scala 103:46]
    node _shin_T_18 = shl(_shin_T_17, 16) @[Bitwise.scala 103:65]
    skip
    node _shin_T_20 = and(_shin_T_18, UInt<64>("hffff0000ffff0000")) @[Bitwise.scala 103:75]
    node _shin_T_21 = or(_shin_T_16, _shin_T_20) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shin_T_25 = shr(_shin_T_21, 8) @[Bitwise.scala 103:21]
    node _GEN_4 = pad(_shin_T_25, 64) @[Bitwise.scala 103:31]
    node _shin_T_26 = and(_GEN_4, UInt<64>("hff00ff00ff00ff")) @[Bitwise.scala 103:31]
    node _shin_T_27 = bits(_shin_T_21, 55, 0) @[Bitwise.scala 103:46]
    node _shin_T_28 = shl(_shin_T_27, 8) @[Bitwise.scala 103:65]
    skip
    node _shin_T_30 = and(_shin_T_28, UInt<64>("hff00ff00ff00ff00")) @[Bitwise.scala 103:75]
    node _shin_T_31 = or(_shin_T_26, _shin_T_30) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shin_T_35 = shr(_shin_T_31, 4) @[Bitwise.scala 103:21]
    node _GEN_5 = pad(_shin_T_35, 64) @[Bitwise.scala 103:31]
    node _shin_T_36 = and(_GEN_5, UInt<64>("hf0f0f0f0f0f0f0f")) @[Bitwise.scala 103:31]
    node _shin_T_37 = bits(_shin_T_31, 59, 0) @[Bitwise.scala 103:46]
    node _shin_T_38 = shl(_shin_T_37, 4) @[Bitwise.scala 103:65]
    skip
    node _shin_T_40 = and(_shin_T_38, UInt<64>("hf0f0f0f0f0f0f0f0")) @[Bitwise.scala 103:75]
    node _shin_T_41 = or(_shin_T_36, _shin_T_40) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shin_T_45 = shr(_shin_T_41, 2) @[Bitwise.scala 103:21]
    node _GEN_6 = pad(_shin_T_45, 64) @[Bitwise.scala 103:31]
    node _shin_T_46 = and(_GEN_6, UInt<64>("h3333333333333333")) @[Bitwise.scala 103:31]
    node _shin_T_47 = bits(_shin_T_41, 61, 0) @[Bitwise.scala 103:46]
    node _shin_T_48 = shl(_shin_T_47, 2) @[Bitwise.scala 103:65]
    skip
    node _shin_T_50 = and(_shin_T_48, UInt<64>("hcccccccccccccccc")) @[Bitwise.scala 103:75]
    node _shin_T_51 = or(_shin_T_46, _shin_T_50) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shin_T_55 = shr(_shin_T_51, 1) @[Bitwise.scala 103:21]
    node _GEN_7 = pad(_shin_T_55, 64) @[Bitwise.scala 103:31]
    node _shin_T_56 = and(_GEN_7, UInt<64>("h5555555555555555")) @[Bitwise.scala 103:31]
    node _shin_T_57 = bits(_shin_T_51, 62, 0) @[Bitwise.scala 103:46]
    node _shin_T_58 = shl(_shin_T_57, 1) @[Bitwise.scala 103:65]
    skip
    node _shin_T_60 = and(_shin_T_58, UInt<64>("haaaaaaaaaaaaaaaa")) @[Bitwise.scala 103:75]
    node _shin_T_61 = or(_shin_T_56, _shin_T_60) @[Bitwise.scala 103:39]
    node shin = mux(_shin_T_2, shin_r, _shin_T_61) @[ALU.scala 81:17]
    skip
    node _shout_r_T_1 = bits(shin, 63, 63) @[ALU.scala 82:41]
    node shout_r_hi = and(_in2_inv_T, _shout_r_T_1) @[ALU.scala 82:35]
    node _shout_r_T_2 = cat(shout_r_hi, shin) @[Cat.scala 30:58]
    node _shout_r_T_3 = asSInt(_shout_r_T_2) @[ALU.scala 82:57]
    node _shout_r_T_4 = dshr(_shout_r_T_3, shamt) @[ALU.scala 82:64]
    node shout_r = bits(_shout_r_T_4, 63, 0) @[ALU.scala 82:73]
    skip
    skip
    node _shout_l_T_2 = shr(shout_r, 32) @[Bitwise.scala 103:21]
    node _GEN_8 = pad(_shout_l_T_2, 64) @[Bitwise.scala 103:31]
    node _shout_l_T_3 = and(_GEN_8, UInt<64>("hffffffff")) @[Bitwise.scala 103:31]
    node _shout_l_T_4 = bits(shout_r, 31, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_5 = shl(_shout_l_T_4, 32) @[Bitwise.scala 103:65]
    skip
    node _shout_l_T_7 = and(_shout_l_T_5, UInt<64>("hffffffff00000000")) @[Bitwise.scala 103:75]
    node _shout_l_T_8 = or(_shout_l_T_3, _shout_l_T_7) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shout_l_T_12 = shr(_shout_l_T_8, 16) @[Bitwise.scala 103:21]
    node _GEN_9 = pad(_shout_l_T_12, 64) @[Bitwise.scala 103:31]
    node _shout_l_T_13 = and(_GEN_9, UInt<64>("hffff0000ffff")) @[Bitwise.scala 103:31]
    node _shout_l_T_14 = bits(_shout_l_T_8, 47, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_15 = shl(_shout_l_T_14, 16) @[Bitwise.scala 103:65]
    skip
    node _shout_l_T_17 = and(_shout_l_T_15, UInt<64>("hffff0000ffff0000")) @[Bitwise.scala 103:75]
    node _shout_l_T_18 = or(_shout_l_T_13, _shout_l_T_17) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shout_l_T_22 = shr(_shout_l_T_18, 8) @[Bitwise.scala 103:21]
    node _GEN_10 = pad(_shout_l_T_22, 64) @[Bitwise.scala 103:31]
    node _shout_l_T_23 = and(_GEN_10, UInt<64>("hff00ff00ff00ff")) @[Bitwise.scala 103:31]
    node _shout_l_T_24 = bits(_shout_l_T_18, 55, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_25 = shl(_shout_l_T_24, 8) @[Bitwise.scala 103:65]
    skip
    node _shout_l_T_27 = and(_shout_l_T_25, UInt<64>("hff00ff00ff00ff00")) @[Bitwise.scala 103:75]
    node _shout_l_T_28 = or(_shout_l_T_23, _shout_l_T_27) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shout_l_T_32 = shr(_shout_l_T_28, 4) @[Bitwise.scala 103:21]
    node _GEN_11 = pad(_shout_l_T_32, 64) @[Bitwise.scala 103:31]
    node _shout_l_T_33 = and(_GEN_11, UInt<64>("hf0f0f0f0f0f0f0f")) @[Bitwise.scala 103:31]
    node _shout_l_T_34 = bits(_shout_l_T_28, 59, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_35 = shl(_shout_l_T_34, 4) @[Bitwise.scala 103:65]
    skip
    node _shout_l_T_37 = and(_shout_l_T_35, UInt<64>("hf0f0f0f0f0f0f0f0")) @[Bitwise.scala 103:75]
    node _shout_l_T_38 = or(_shout_l_T_33, _shout_l_T_37) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shout_l_T_42 = shr(_shout_l_T_38, 2) @[Bitwise.scala 103:21]
    node _GEN_12 = pad(_shout_l_T_42, 64) @[Bitwise.scala 103:31]
    node _shout_l_T_43 = and(_GEN_12, UInt<64>("h3333333333333333")) @[Bitwise.scala 103:31]
    node _shout_l_T_44 = bits(_shout_l_T_38, 61, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_45 = shl(_shout_l_T_44, 2) @[Bitwise.scala 103:65]
    skip
    node _shout_l_T_47 = and(_shout_l_T_45, UInt<64>("hcccccccccccccccc")) @[Bitwise.scala 103:75]
    node _shout_l_T_48 = or(_shout_l_T_43, _shout_l_T_47) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shout_l_T_52 = shr(_shout_l_T_48, 1) @[Bitwise.scala 103:21]
    node _GEN_13 = pad(_shout_l_T_52, 64) @[Bitwise.scala 103:31]
    node _shout_l_T_53 = and(_GEN_13, UInt<64>("h5555555555555555")) @[Bitwise.scala 103:31]
    node _shout_l_T_54 = bits(_shout_l_T_48, 62, 0) @[Bitwise.scala 103:46]
    node _shout_l_T_55 = shl(_shout_l_T_54, 1) @[Bitwise.scala 103:65]
    skip
    node _shout_l_T_57 = and(_shout_l_T_55, UInt<64>("haaaaaaaaaaaaaaaa")) @[Bitwise.scala 103:75]
    node shout_l = or(_shout_l_T_53, _shout_l_T_57) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _shout_T_3 = mux(_shin_T_2, shout_r, UInt<64>("h0")) @[ALU.scala 84:18]
    node _shout_T_4 = eq(io_fn, UInt<4>("h1")) @[ALU.scala 85:25]
    node _shout_T_5 = mux(_shout_T_4, shout_l, UInt<64>("h0")) @[ALU.scala 85:18]
    node shout = or(_shout_T_3, _shout_T_5) @[ALU.scala 84:74]
    node _logic_T = eq(io_fn, UInt<4>("h4")) @[ALU.scala 88:25]
    node _logic_T_1 = eq(io_fn, UInt<4>("h6")) @[ALU.scala 88:45]
    node _logic_T_2 = or(_logic_T, _logic_T_1) @[ALU.scala 88:36]
    node _logic_T_3 = mux(_logic_T_2, in1_xor_in2, UInt<64>("h0")) @[ALU.scala 88:18]
    skip
    node _logic_T_5 = eq(io_fn, UInt<4>("h7")) @[ALU.scala 89:44]
    node _logic_T_6 = or(_logic_T_1, _logic_T_5) @[ALU.scala 89:35]
    node _logic_T_7 = and(io_in1, io_in2) @[ALU.scala 89:63]
    node _logic_T_8 = mux(_logic_T_6, _logic_T_7, UInt<64>("h0")) @[ALU.scala 89:18]
    node logic = or(_logic_T_3, _logic_T_8) @[ALU.scala 88:78]
    node _shift_logic_T = geq(io_fn, UInt<4>("hc")) @[ALU.scala 41:30]
    node _shift_logic_T_1 = and(_shift_logic_T, slt) @[ALU.scala 90:35]
    node _GEN_14 = pad(_shift_logic_T_1, 64) @[ALU.scala 90:43]
    node _shift_logic_T_2 = or(_GEN_14, logic) @[ALU.scala 90:43]
    node shift_logic = or(_shift_logic_T_2, shout) @[ALU.scala 90:51]
    node _out_T = eq(io_fn, UInt<4>("h0")) @[ALU.scala 91:23]
    node _out_T_1 = eq(io_fn, UInt<4>("ha")) @[ALU.scala 91:43]
    node _out_T_2 = or(_out_T, _out_T_1) @[ALU.scala 91:34]
    node out = mux(_out_T_2, io_adder_out, shift_logic) @[ALU.scala 91:16]
    node _T_9 = not(io_dw) @[ALU.scala 96:17]
    node _io_out_T = bits(out, 31, 31) @[ALU.scala 96:56]
    skip
    node io_out_hi = mux(_io_out_T, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 72:12]
    node io_out_lo = bits(out, 31, 0) @[ALU.scala 96:66]
    node _io_out_T_2 = cat(io_out_hi, io_out_lo) @[Cat.scala 30:58]
    skip
    io_out <= mux(_T_9, _io_out_T_2, out) @[ALU.scala 93:10 96:{28,37}]
    io_adder_out <= tail(_io_adder_out_T_3, 1) @[ALU.scala 63:36]
    io_cmp_out <= xor(_io_cmp_out_T, _io_cmp_out_T_4) @[ALU.scala 69:36]

  module MulDiv :
    input clock : Clock
    input reset : UInt<1>
    output io_req_ready : UInt<1>
    input io_req_valid : UInt<1>
    input io_req_bits_fn : UInt<4>
    input io_req_bits_dw : UInt<1>
    input io_req_bits_in1 : UInt<64>
    input io_req_bits_in2 : UInt<64>
    input io_req_bits_tag : UInt<5>
    input io_kill : UInt<1>
    input io_resp_ready : UInt<1>
    output io_resp_valid : UInt<1>
    output io_resp_bits_data : UInt<64>
    output io_resp_bits_tag : UInt<5>

    reg state : UInt<3>, clock with :
      reset => (UInt<1>("h0"), state) @[Multiplier.scala 52:22]
    skip
    reg req_dw : UInt<1>, clock with :
      reset => (UInt<1>("h0"), req_dw) @[Multiplier.scala 54:16]
    skip
    skip
    reg req_tag : UInt<5>, clock with :
      reset => (UInt<1>("h0"), req_tag) @[Multiplier.scala 54:16]
    reg count : UInt<7>, clock with :
      reset => (UInt<1>("h0"), count) @[Multiplier.scala 55:18]
    reg neg_out : UInt<1>, clock with :
      reset => (UInt<1>("h0"), neg_out) @[Multiplier.scala 58:20]
    reg isHi : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isHi) @[Multiplier.scala 59:17]
    reg resHi : UInt<1>, clock with :
      reset => (UInt<1>("h0"), resHi) @[Multiplier.scala 60:18]
    reg divisor : UInt<65>, clock with :
      reset => (UInt<1>("h0"), divisor) @[Multiplier.scala 61:20]
    reg remainder : UInt<130>, clock with :
      reset => (UInt<1>("h0"), remainder) @[Multiplier.scala 62:22]
    node _T = and(io_req_bits_fn, UInt<4>("h4")) @[Decode.scala 14:65]
    node cmdMul = eq(_T, UInt<4>("h0")) @[Decode.scala 14:121]
    skip
    node _T_3 = and(io_req_bits_fn, UInt<4>("h5")) @[Decode.scala 14:65]
    node _T_4 = eq(_T_3, UInt<4>("h1")) @[Decode.scala 14:121]
    node _T_5 = and(io_req_bits_fn, UInt<4>("h2")) @[Decode.scala 14:65]
    node _T_6 = eq(_T_5, UInt<4>("h2")) @[Decode.scala 14:121]
    skip
    node cmdHi = or(_T_4, _T_6) @[Decode.scala 15:30]
    node _T_9 = and(io_req_bits_fn, UInt<4>("h6")) @[Decode.scala 14:65]
    node _T_10 = eq(_T_9, UInt<4>("h0")) @[Decode.scala 14:121]
    node _T_11 = and(io_req_bits_fn, UInt<4>("h1")) @[Decode.scala 14:65]
    node _T_12 = eq(_T_11, UInt<4>("h0")) @[Decode.scala 14:121]
    skip
    node lhsSigned = or(_T_10, _T_12) @[Decode.scala 15:30]
    skip
    node _T_16 = eq(_T_3, UInt<4>("h4")) @[Decode.scala 14:121]
    skip
    node rhsSigned = or(_T_10, _T_16) @[Decode.scala 15:30]
    skip
    skip
    skip
    skip
    node _T_19 = not(io_req_bits_dw) @[Multiplier.scala 79:60]
    skip
    node _sign_T = bits(io_req_bits_in1, 31, 31) @[Multiplier.scala 82:38]
    node _sign_T_1 = bits(io_req_bits_in1, 63, 63) @[Multiplier.scala 82:48]
    node _sign_T_2 = mux(_T_19, _sign_T, _sign_T_1) @[Multiplier.scala 82:29]
    node lhs_sign = and(lhsSigned, _sign_T_2) @[Multiplier.scala 82:23]
    skip
    node _hi_T_1 = mux(lhs_sign, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 72:12]
    node _hi_T_2 = bits(io_req_bits_in1, 63, 32) @[Multiplier.scala 83:43]
    node hi = mux(_T_19, _hi_T_1, _hi_T_2) @[Multiplier.scala 83:17]
    node lo = bits(io_req_bits_in1, 31, 0) @[Multiplier.scala 84:15]
    node lhs_in = cat(hi, lo) @[Cat.scala 30:58]
    skip
    skip
    node _sign_T_3 = bits(io_req_bits_in2, 31, 31) @[Multiplier.scala 82:38]
    node _sign_T_4 = bits(io_req_bits_in2, 63, 63) @[Multiplier.scala 82:48]
    node _sign_T_5 = mux(_T_19, _sign_T_3, _sign_T_4) @[Multiplier.scala 82:29]
    node rhs_sign = and(rhsSigned, _sign_T_5) @[Multiplier.scala 82:23]
    skip
    node _hi_T_4 = mux(rhs_sign, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 72:12]
    node _hi_T_5 = bits(io_req_bits_in2, 63, 32) @[Multiplier.scala 83:43]
    node hi_1 = mux(_T_19, _hi_T_4, _hi_T_5) @[Multiplier.scala 83:17]
    node lo_1 = bits(io_req_bits_in2, 31, 0) @[Multiplier.scala 84:15]
    node rhs_in = cat(hi_1, lo_1) @[Cat.scala 30:58]
    node _subtractor_T = bits(remainder, 128, 64) @[Multiplier.scala 89:29]
    node _subtractor_T_1 = sub(_subtractor_T, divisor) @[Multiplier.scala 89:37]
    node subtractor = tail(_subtractor_T_1, 1) @[Multiplier.scala 89:37]
    node _result_T = bits(remainder, 128, 65) @[Multiplier.scala 90:36]
    node _result_T_1 = bits(remainder, 63, 0) @[Multiplier.scala 90:57]
    node result = mux(resHi, _result_T, _result_T_1) @[Multiplier.scala 90:19]
    node _negated_remainder_T = sub(UInt<64>("h0"), result) @[Multiplier.scala 91:27]
    node negated_remainder = tail(_negated_remainder_T, 1) @[Multiplier.scala 91:27]
    node _T_23 = eq(state, UInt<3>("h1")) @[Multiplier.scala 93:39]
    node _T_24 = bits(remainder, 63, 63) @[Multiplier.scala 94:20]
    node _GEN_0 = mux(_T_24, pad(negated_remainder, 130), remainder) @[Multiplier.scala 94:27 95:17 62:22]
    node _T_25 = bits(divisor, 63, 63) @[Multiplier.scala 97:18]
    node _GEN_1 = mux(_T_25, subtractor, divisor) @[Multiplier.scala 97:25 98:15 61:20]
    node _GEN_2 = mux(_T_23, _GEN_0, remainder) @[Multiplier.scala 62:22 93:57]
    node _GEN_3 = mux(_T_23, _GEN_1, divisor) @[Multiplier.scala 61:20 93:57]
    node _GEN_4 = mux(_T_23, UInt<3>("h3"), state) @[Multiplier.scala 100:11 52:22 93:57]
    node _T_26 = eq(state, UInt<3>("h5")) @[Multiplier.scala 102:39]
    node _GEN_5 = mux(_T_26, pad(negated_remainder, 130), _GEN_2) @[Multiplier.scala 102:57 103:15]
    node _GEN_6 = mux(_T_26, UInt<3>("h7"), _GEN_4) @[Multiplier.scala 102:57 104:11]
    node _GEN_7 = mux(_T_26, UInt<1>("h0"), resHi) @[Multiplier.scala 102:57 105:11 60:18]
    node _T_27 = eq(state, UInt<3>("h2")) @[Multiplier.scala 107:39]
    node mulReg_hi = bits(remainder, 129, 65) @[Multiplier.scala 108:31]
    skip
    node mulReg = cat(mulReg_hi, _result_T_1) @[Cat.scala 30:58]
    node prod_hi = bits(remainder, 64, 64) @[Multiplier.scala 109:31]
    node mplier = bits(mulReg, 63, 0) @[Multiplier.scala 110:24]
    node _accum_T = bits(mulReg, 128, 64) @[Multiplier.scala 111:23]
    node accum = asSInt(_accum_T) @[Multiplier.scala 111:37]
    node mpcand = asSInt(divisor) @[Multiplier.scala 112:26]
    node prod_lo = bits(mplier, 7, 0) @[Multiplier.scala 113:38]
    node _prod_T = cat(prod_hi, prod_lo) @[Cat.scala 30:58]
    node _prod_T_1 = asSInt(_prod_T) @[Multiplier.scala 113:60]
    node _prod_T_2 = mul(_prod_T_1, mpcand) @[Multiplier.scala 113:67]
    node _GEN_37 = pad(accum, 74) @[Multiplier.scala 113:76]
    node _prod_T_3 = add(_prod_T_2, _GEN_37) @[Multiplier.scala 113:76]
    node _prod_T_4 = tail(_prod_T_3, 1) @[Multiplier.scala 113:76]
    node prod = asSInt(_prod_T_4) @[Multiplier.scala 113:76]
    node nextMulReg_lo = bits(mplier, 63, 8) @[Multiplier.scala 114:38]
    node nextMulReg_hi = asUInt(prod) @[Cat.scala 30:58]
    node nextMulReg = cat(nextMulReg_hi, nextMulReg_lo) @[Cat.scala 30:58]
    node _nextMplierSign_T = eq(count, UInt<7>("h6")) @[Multiplier.scala 115:32]
    node remainder_hi_lo = and(_nextMplierSign_T, neg_out) @[Multiplier.scala 115:57]
    node _eOutMask_T = mul(count, UInt<4>("h8")) @[Multiplier.scala 117:54]
    node _eOutMask_T_1 = bits(_eOutMask_T, 5, 0) @[Multiplier.scala 117:70]
    node _eOutMask_T_2 = dshr(SInt<65>("h-10000000000000000"), _eOutMask_T_1) @[Multiplier.scala 117:44]
    node eOutMask = bits(_eOutMask_T_2, 63, 0) @[Multiplier.scala 117:89]
    node _eOut_T = neq(count, UInt<7>("h7")) @[Multiplier.scala 118:45]
    skip
    node _eOut_T_2 = neq(count, UInt<7>("h0")) @[Multiplier.scala 118:79]
    node _eOut_T_3 = and(_eOut_T, _eOut_T_2) @[Multiplier.scala 118:70]
    node _eOut_T_4 = not(isHi) @[Multiplier.scala 119:7]
    node _eOut_T_5 = and(_eOut_T_3, _eOut_T_4) @[Multiplier.scala 118:85]
    node _eOut_T_6 = not(eOutMask) @[Multiplier.scala 119:26]
    node _eOut_T_7 = and(mplier, _eOut_T_6) @[Multiplier.scala 119:24]
    node _eOut_T_8 = eq(_eOut_T_7, UInt<64>("h0")) @[Multiplier.scala 119:37]
    node eOut = and(_eOut_T_5, _eOut_T_8) @[Multiplier.scala 119:13]
    skip
    node _eOutRes_T_1 = sub(UInt<11>("h40"), _eOutMask_T) @[Multiplier.scala 120:36]
    node _eOutRes_T_2 = tail(_eOutRes_T_1, 1) @[Multiplier.scala 120:36]
    node _eOutRes_T_3 = bits(_eOutRes_T_2, 5, 0) @[Multiplier.scala 120:60]
    node eOutRes = dshr(mulReg, _eOutRes_T_3) @[Multiplier.scala 120:27]
    node nextMulReg1_hi = bits(nextMulReg, 128, 64) @[Multiplier.scala 121:37]
    node _nextMulReg1_T = mux(eOut, pad(eOutRes, 130), nextMulReg) @[Multiplier.scala 121:55]
    node nextMulReg1_lo = bits(_nextMulReg1_T, 63, 0) @[Multiplier.scala 121:82]
    node nextMulReg1 = cat(nextMulReg1_hi, nextMulReg1_lo) @[Cat.scala 30:58]
    node remainder_hi_hi = shr(nextMulReg1, 64) @[Multiplier.scala 122:34]
    node remainder_lo = bits(nextMulReg1, 63, 0) @[Multiplier.scala 122:67]
    node remainder_hi = cat(remainder_hi_hi, remainder_hi_lo) @[Cat.scala 30:58]
    node _remainder_T = cat(remainder_hi, remainder_lo) @[Cat.scala 30:58]
    node _count_T = add(count, UInt<7>("h1")) @[Multiplier.scala 124:20]
    node _count_T_1 = tail(_count_T, 1) @[Multiplier.scala 124:20]
    node _T_28 = eq(count, UInt<7>("h7")) @[Multiplier.scala 125:25]
    node _T_29 = or(eOut, _T_28) @[Multiplier.scala 125:16]
    node _GEN_8 = mux(_T_29, UInt<3>("h6"), _GEN_6) @[Multiplier.scala 125:51 126:13]
    node _GEN_9 = mux(_T_29, isHi, _GEN_7) @[Multiplier.scala 125:51 127:13]
    node _GEN_10 = mux(_T_27, _remainder_T, _GEN_5) @[Multiplier.scala 107:50 122:15]
    node _GEN_11 = mux(_T_27, _count_T_1, count) @[Multiplier.scala 107:50 124:11 55:18]
    node _GEN_12 = mux(_T_27, _GEN_8, _GEN_6) @[Multiplier.scala 107:50]
    node _GEN_13 = mux(_T_27, _GEN_9, _GEN_7) @[Multiplier.scala 107:50]
    node _T_30 = eq(state, UInt<3>("h3")) @[Multiplier.scala 130:39]
    node unrolls_less = bits(subtractor, 64, 64) @[Multiplier.scala 134:28]
    node _unrolls_T = bits(remainder, 127, 64) @[Multiplier.scala 135:24]
    node _unrolls_T_1 = bits(subtractor, 63, 0) @[Multiplier.scala 135:45]
    node unrolls_hi_hi = mux(unrolls_less, _unrolls_T, _unrolls_T_1) @[Multiplier.scala 135:14]
    skip
    node unrolls_lo = not(unrolls_less) @[Multiplier.scala 135:67]
    node unrolls_hi = cat(unrolls_hi_hi, _result_T_1) @[Cat.scala 30:58]
    node unrolls_0 = cat(unrolls_hi, unrolls_lo) @[Cat.scala 30:58]
    node _T_31 = eq(count, UInt<7>("h40")) @[Multiplier.scala 139:17]
    node _state_T = mux(neg_out, UInt<3>("h5"), UInt<3>("h7")) @[Multiplier.scala 140:19]
    node _GEN_14 = mux(_T_31, _state_T, _GEN_12) @[Multiplier.scala 139:38 140:13]
    node _GEN_15 = mux(_T_31, isHi, _GEN_13) @[Multiplier.scala 139:38 141:13]
    skip
    skip
    node _divby0_T = eq(count, UInt<7>("h0")) @[Multiplier.scala 147:24]
    skip
    skip
    node divby0 = and(_divby0_T, unrolls_lo) @[Multiplier.scala 147:30]
    skip
    node _divisorMSB_T = bits(divisor, 63, 0) @[Multiplier.scala 151:36]
    node divisorMSB_hi = bits(_divisorMSB_T, 63, 32) @[CircuitMath.scala 35:17]
    node divisorMSB_lo = bits(_divisorMSB_T, 31, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_1 = orr(divisorMSB_hi) @[CircuitMath.scala 37:22]
    node divisorMSB_hi_2 = bits(divisorMSB_hi, 31, 16) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_1 = bits(divisorMSB_hi, 15, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_3 = orr(divisorMSB_hi_2) @[CircuitMath.scala 37:22]
    node divisorMSB_hi_4 = bits(divisorMSB_hi_2, 15, 8) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_2 = bits(divisorMSB_hi_2, 7, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_5 = orr(divisorMSB_hi_4) @[CircuitMath.scala 37:22]
    node divisorMSB_hi_6 = bits(divisorMSB_hi_4, 7, 4) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_3 = bits(divisorMSB_hi_4, 3, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_7 = orr(divisorMSB_hi_6) @[CircuitMath.scala 37:22]
    node _divisorMSB_T_1 = bits(divisorMSB_hi_6, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_2 = bits(divisorMSB_hi_6, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_3 = bits(divisorMSB_hi_6, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_4 = mux(_divisorMSB_T_2, UInt<2>("h2"), pad(_divisorMSB_T_3, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_5 = mux(_divisorMSB_T_1, UInt<2>("h3"), _divisorMSB_T_4) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_6 = bits(divisorMSB_lo_3, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_7 = bits(divisorMSB_lo_3, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_8 = bits(divisorMSB_lo_3, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_9 = mux(_divisorMSB_T_7, UInt<2>("h2"), pad(_divisorMSB_T_8, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_10 = mux(_divisorMSB_T_6, UInt<2>("h3"), _divisorMSB_T_9) @[CircuitMath.scala 32:10]
    node divisorMSB_lo_4 = mux(divisorMSB_hi_7, _divisorMSB_T_5, _divisorMSB_T_10) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_11 = cat(divisorMSB_hi_7, divisorMSB_lo_4) @[Cat.scala 30:58]
    node divisorMSB_hi_8 = bits(divisorMSB_lo_2, 7, 4) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_5 = bits(divisorMSB_lo_2, 3, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_9 = orr(divisorMSB_hi_8) @[CircuitMath.scala 37:22]
    node _divisorMSB_T_12 = bits(divisorMSB_hi_8, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_13 = bits(divisorMSB_hi_8, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_14 = bits(divisorMSB_hi_8, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_15 = mux(_divisorMSB_T_13, UInt<2>("h2"), pad(_divisorMSB_T_14, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_16 = mux(_divisorMSB_T_12, UInt<2>("h3"), _divisorMSB_T_15) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_17 = bits(divisorMSB_lo_5, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_18 = bits(divisorMSB_lo_5, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_19 = bits(divisorMSB_lo_5, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_20 = mux(_divisorMSB_T_18, UInt<2>("h2"), pad(_divisorMSB_T_19, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_21 = mux(_divisorMSB_T_17, UInt<2>("h3"), _divisorMSB_T_20) @[CircuitMath.scala 32:10]
    node divisorMSB_lo_6 = mux(divisorMSB_hi_9, _divisorMSB_T_16, _divisorMSB_T_21) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_22 = cat(divisorMSB_hi_9, divisorMSB_lo_6) @[Cat.scala 30:58]
    node divisorMSB_lo_7 = mux(divisorMSB_hi_5, _divisorMSB_T_11, _divisorMSB_T_22) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_23 = cat(divisorMSB_hi_5, divisorMSB_lo_7) @[Cat.scala 30:58]
    node divisorMSB_hi_10 = bits(divisorMSB_lo_1, 15, 8) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_8 = bits(divisorMSB_lo_1, 7, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_11 = orr(divisorMSB_hi_10) @[CircuitMath.scala 37:22]
    node divisorMSB_hi_12 = bits(divisorMSB_hi_10, 7, 4) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_9 = bits(divisorMSB_hi_10, 3, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_13 = orr(divisorMSB_hi_12) @[CircuitMath.scala 37:22]
    node _divisorMSB_T_24 = bits(divisorMSB_hi_12, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_25 = bits(divisorMSB_hi_12, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_26 = bits(divisorMSB_hi_12, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_27 = mux(_divisorMSB_T_25, UInt<2>("h2"), pad(_divisorMSB_T_26, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_28 = mux(_divisorMSB_T_24, UInt<2>("h3"), _divisorMSB_T_27) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_29 = bits(divisorMSB_lo_9, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_30 = bits(divisorMSB_lo_9, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_31 = bits(divisorMSB_lo_9, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_32 = mux(_divisorMSB_T_30, UInt<2>("h2"), pad(_divisorMSB_T_31, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_33 = mux(_divisorMSB_T_29, UInt<2>("h3"), _divisorMSB_T_32) @[CircuitMath.scala 32:10]
    node divisorMSB_lo_10 = mux(divisorMSB_hi_13, _divisorMSB_T_28, _divisorMSB_T_33) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_34 = cat(divisorMSB_hi_13, divisorMSB_lo_10) @[Cat.scala 30:58]
    node divisorMSB_hi_14 = bits(divisorMSB_lo_8, 7, 4) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_11 = bits(divisorMSB_lo_8, 3, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_15 = orr(divisorMSB_hi_14) @[CircuitMath.scala 37:22]
    node _divisorMSB_T_35 = bits(divisorMSB_hi_14, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_36 = bits(divisorMSB_hi_14, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_37 = bits(divisorMSB_hi_14, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_38 = mux(_divisorMSB_T_36, UInt<2>("h2"), pad(_divisorMSB_T_37, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_39 = mux(_divisorMSB_T_35, UInt<2>("h3"), _divisorMSB_T_38) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_40 = bits(divisorMSB_lo_11, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_41 = bits(divisorMSB_lo_11, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_42 = bits(divisorMSB_lo_11, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_43 = mux(_divisorMSB_T_41, UInt<2>("h2"), pad(_divisorMSB_T_42, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_44 = mux(_divisorMSB_T_40, UInt<2>("h3"), _divisorMSB_T_43) @[CircuitMath.scala 32:10]
    node divisorMSB_lo_12 = mux(divisorMSB_hi_15, _divisorMSB_T_39, _divisorMSB_T_44) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_45 = cat(divisorMSB_hi_15, divisorMSB_lo_12) @[Cat.scala 30:58]
    node divisorMSB_lo_13 = mux(divisorMSB_hi_11, _divisorMSB_T_34, _divisorMSB_T_45) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_46 = cat(divisorMSB_hi_11, divisorMSB_lo_13) @[Cat.scala 30:58]
    node divisorMSB_lo_14 = mux(divisorMSB_hi_3, _divisorMSB_T_23, _divisorMSB_T_46) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_47 = cat(divisorMSB_hi_3, divisorMSB_lo_14) @[Cat.scala 30:58]
    node divisorMSB_hi_16 = bits(divisorMSB_lo, 31, 16) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_15 = bits(divisorMSB_lo, 15, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_17 = orr(divisorMSB_hi_16) @[CircuitMath.scala 37:22]
    node divisorMSB_hi_18 = bits(divisorMSB_hi_16, 15, 8) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_16 = bits(divisorMSB_hi_16, 7, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_19 = orr(divisorMSB_hi_18) @[CircuitMath.scala 37:22]
    node divisorMSB_hi_20 = bits(divisorMSB_hi_18, 7, 4) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_17 = bits(divisorMSB_hi_18, 3, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_21 = orr(divisorMSB_hi_20) @[CircuitMath.scala 37:22]
    node _divisorMSB_T_48 = bits(divisorMSB_hi_20, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_49 = bits(divisorMSB_hi_20, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_50 = bits(divisorMSB_hi_20, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_51 = mux(_divisorMSB_T_49, UInt<2>("h2"), pad(_divisorMSB_T_50, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_52 = mux(_divisorMSB_T_48, UInt<2>("h3"), _divisorMSB_T_51) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_53 = bits(divisorMSB_lo_17, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_54 = bits(divisorMSB_lo_17, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_55 = bits(divisorMSB_lo_17, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_56 = mux(_divisorMSB_T_54, UInt<2>("h2"), pad(_divisorMSB_T_55, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_57 = mux(_divisorMSB_T_53, UInt<2>("h3"), _divisorMSB_T_56) @[CircuitMath.scala 32:10]
    node divisorMSB_lo_18 = mux(divisorMSB_hi_21, _divisorMSB_T_52, _divisorMSB_T_57) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_58 = cat(divisorMSB_hi_21, divisorMSB_lo_18) @[Cat.scala 30:58]
    node divisorMSB_hi_22 = bits(divisorMSB_lo_16, 7, 4) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_19 = bits(divisorMSB_lo_16, 3, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_23 = orr(divisorMSB_hi_22) @[CircuitMath.scala 37:22]
    node _divisorMSB_T_59 = bits(divisorMSB_hi_22, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_60 = bits(divisorMSB_hi_22, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_61 = bits(divisorMSB_hi_22, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_62 = mux(_divisorMSB_T_60, UInt<2>("h2"), pad(_divisorMSB_T_61, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_63 = mux(_divisorMSB_T_59, UInt<2>("h3"), _divisorMSB_T_62) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_64 = bits(divisorMSB_lo_19, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_65 = bits(divisorMSB_lo_19, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_66 = bits(divisorMSB_lo_19, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_67 = mux(_divisorMSB_T_65, UInt<2>("h2"), pad(_divisorMSB_T_66, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_68 = mux(_divisorMSB_T_64, UInt<2>("h3"), _divisorMSB_T_67) @[CircuitMath.scala 32:10]
    node divisorMSB_lo_20 = mux(divisorMSB_hi_23, _divisorMSB_T_63, _divisorMSB_T_68) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_69 = cat(divisorMSB_hi_23, divisorMSB_lo_20) @[Cat.scala 30:58]
    node divisorMSB_lo_21 = mux(divisorMSB_hi_19, _divisorMSB_T_58, _divisorMSB_T_69) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_70 = cat(divisorMSB_hi_19, divisorMSB_lo_21) @[Cat.scala 30:58]
    node divisorMSB_hi_24 = bits(divisorMSB_lo_15, 15, 8) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_22 = bits(divisorMSB_lo_15, 7, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_25 = orr(divisorMSB_hi_24) @[CircuitMath.scala 37:22]
    node divisorMSB_hi_26 = bits(divisorMSB_hi_24, 7, 4) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_23 = bits(divisorMSB_hi_24, 3, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_27 = orr(divisorMSB_hi_26) @[CircuitMath.scala 37:22]
    node _divisorMSB_T_71 = bits(divisorMSB_hi_26, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_72 = bits(divisorMSB_hi_26, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_73 = bits(divisorMSB_hi_26, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_74 = mux(_divisorMSB_T_72, UInt<2>("h2"), pad(_divisorMSB_T_73, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_75 = mux(_divisorMSB_T_71, UInt<2>("h3"), _divisorMSB_T_74) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_76 = bits(divisorMSB_lo_23, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_77 = bits(divisorMSB_lo_23, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_78 = bits(divisorMSB_lo_23, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_79 = mux(_divisorMSB_T_77, UInt<2>("h2"), pad(_divisorMSB_T_78, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_80 = mux(_divisorMSB_T_76, UInt<2>("h3"), _divisorMSB_T_79) @[CircuitMath.scala 32:10]
    node divisorMSB_lo_24 = mux(divisorMSB_hi_27, _divisorMSB_T_75, _divisorMSB_T_80) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_81 = cat(divisorMSB_hi_27, divisorMSB_lo_24) @[Cat.scala 30:58]
    node divisorMSB_hi_28 = bits(divisorMSB_lo_22, 7, 4) @[CircuitMath.scala 35:17]
    node divisorMSB_lo_25 = bits(divisorMSB_lo_22, 3, 0) @[CircuitMath.scala 36:17]
    node divisorMSB_hi_29 = orr(divisorMSB_hi_28) @[CircuitMath.scala 37:22]
    node _divisorMSB_T_82 = bits(divisorMSB_hi_28, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_83 = bits(divisorMSB_hi_28, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_84 = bits(divisorMSB_hi_28, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_85 = mux(_divisorMSB_T_83, UInt<2>("h2"), pad(_divisorMSB_T_84, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_86 = mux(_divisorMSB_T_82, UInt<2>("h3"), _divisorMSB_T_85) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_87 = bits(divisorMSB_lo_25, 3, 3) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_88 = bits(divisorMSB_lo_25, 2, 2) @[CircuitMath.scala 32:12]
    node _divisorMSB_T_89 = bits(divisorMSB_lo_25, 1, 1) @[CircuitMath.scala 30:8]
    node _divisorMSB_T_90 = mux(_divisorMSB_T_88, UInt<2>("h2"), pad(_divisorMSB_T_89, 2)) @[CircuitMath.scala 32:10]
    node _divisorMSB_T_91 = mux(_divisorMSB_T_87, UInt<2>("h3"), _divisorMSB_T_90) @[CircuitMath.scala 32:10]
    node divisorMSB_lo_26 = mux(divisorMSB_hi_29, _divisorMSB_T_86, _divisorMSB_T_91) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_92 = cat(divisorMSB_hi_29, divisorMSB_lo_26) @[Cat.scala 30:58]
    node divisorMSB_lo_27 = mux(divisorMSB_hi_25, _divisorMSB_T_81, _divisorMSB_T_92) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_93 = cat(divisorMSB_hi_25, divisorMSB_lo_27) @[Cat.scala 30:58]
    node divisorMSB_lo_28 = mux(divisorMSB_hi_17, _divisorMSB_T_70, _divisorMSB_T_93) @[CircuitMath.scala 38:21]
    node _divisorMSB_T_94 = cat(divisorMSB_hi_17, divisorMSB_lo_28) @[Cat.scala 30:58]
    node divisorMSB_lo_29 = mux(divisorMSB_hi_1, _divisorMSB_T_47, _divisorMSB_T_94) @[CircuitMath.scala 38:21]
    node divisorMSB = cat(divisorMSB_hi_1, divisorMSB_lo_29) @[Cat.scala 30:58]
    skip
    skip
    node dividendMSB_hi = bits(_result_T_1, 63, 32) @[CircuitMath.scala 35:17]
    node dividendMSB_lo = bits(_result_T_1, 31, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_1 = orr(dividendMSB_hi) @[CircuitMath.scala 37:22]
    node dividendMSB_hi_2 = bits(dividendMSB_hi, 31, 16) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_1 = bits(dividendMSB_hi, 15, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_3 = orr(dividendMSB_hi_2) @[CircuitMath.scala 37:22]
    node dividendMSB_hi_4 = bits(dividendMSB_hi_2, 15, 8) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_2 = bits(dividendMSB_hi_2, 7, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_5 = orr(dividendMSB_hi_4) @[CircuitMath.scala 37:22]
    node dividendMSB_hi_6 = bits(dividendMSB_hi_4, 7, 4) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_3 = bits(dividendMSB_hi_4, 3, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_7 = orr(dividendMSB_hi_6) @[CircuitMath.scala 37:22]
    node _dividendMSB_T_1 = bits(dividendMSB_hi_6, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_2 = bits(dividendMSB_hi_6, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_3 = bits(dividendMSB_hi_6, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_4 = mux(_dividendMSB_T_2, UInt<2>("h2"), pad(_dividendMSB_T_3, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_5 = mux(_dividendMSB_T_1, UInt<2>("h3"), _dividendMSB_T_4) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_6 = bits(dividendMSB_lo_3, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_7 = bits(dividendMSB_lo_3, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_8 = bits(dividendMSB_lo_3, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_9 = mux(_dividendMSB_T_7, UInt<2>("h2"), pad(_dividendMSB_T_8, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_10 = mux(_dividendMSB_T_6, UInt<2>("h3"), _dividendMSB_T_9) @[CircuitMath.scala 32:10]
    node dividendMSB_lo_4 = mux(dividendMSB_hi_7, _dividendMSB_T_5, _dividendMSB_T_10) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_11 = cat(dividendMSB_hi_7, dividendMSB_lo_4) @[Cat.scala 30:58]
    node dividendMSB_hi_8 = bits(dividendMSB_lo_2, 7, 4) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_5 = bits(dividendMSB_lo_2, 3, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_9 = orr(dividendMSB_hi_8) @[CircuitMath.scala 37:22]
    node _dividendMSB_T_12 = bits(dividendMSB_hi_8, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_13 = bits(dividendMSB_hi_8, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_14 = bits(dividendMSB_hi_8, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_15 = mux(_dividendMSB_T_13, UInt<2>("h2"), pad(_dividendMSB_T_14, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_16 = mux(_dividendMSB_T_12, UInt<2>("h3"), _dividendMSB_T_15) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_17 = bits(dividendMSB_lo_5, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_18 = bits(dividendMSB_lo_5, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_19 = bits(dividendMSB_lo_5, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_20 = mux(_dividendMSB_T_18, UInt<2>("h2"), pad(_dividendMSB_T_19, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_21 = mux(_dividendMSB_T_17, UInt<2>("h3"), _dividendMSB_T_20) @[CircuitMath.scala 32:10]
    node dividendMSB_lo_6 = mux(dividendMSB_hi_9, _dividendMSB_T_16, _dividendMSB_T_21) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_22 = cat(dividendMSB_hi_9, dividendMSB_lo_6) @[Cat.scala 30:58]
    node dividendMSB_lo_7 = mux(dividendMSB_hi_5, _dividendMSB_T_11, _dividendMSB_T_22) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_23 = cat(dividendMSB_hi_5, dividendMSB_lo_7) @[Cat.scala 30:58]
    node dividendMSB_hi_10 = bits(dividendMSB_lo_1, 15, 8) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_8 = bits(dividendMSB_lo_1, 7, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_11 = orr(dividendMSB_hi_10) @[CircuitMath.scala 37:22]
    node dividendMSB_hi_12 = bits(dividendMSB_hi_10, 7, 4) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_9 = bits(dividendMSB_hi_10, 3, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_13 = orr(dividendMSB_hi_12) @[CircuitMath.scala 37:22]
    node _dividendMSB_T_24 = bits(dividendMSB_hi_12, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_25 = bits(dividendMSB_hi_12, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_26 = bits(dividendMSB_hi_12, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_27 = mux(_dividendMSB_T_25, UInt<2>("h2"), pad(_dividendMSB_T_26, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_28 = mux(_dividendMSB_T_24, UInt<2>("h3"), _dividendMSB_T_27) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_29 = bits(dividendMSB_lo_9, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_30 = bits(dividendMSB_lo_9, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_31 = bits(dividendMSB_lo_9, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_32 = mux(_dividendMSB_T_30, UInt<2>("h2"), pad(_dividendMSB_T_31, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_33 = mux(_dividendMSB_T_29, UInt<2>("h3"), _dividendMSB_T_32) @[CircuitMath.scala 32:10]
    node dividendMSB_lo_10 = mux(dividendMSB_hi_13, _dividendMSB_T_28, _dividendMSB_T_33) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_34 = cat(dividendMSB_hi_13, dividendMSB_lo_10) @[Cat.scala 30:58]
    node dividendMSB_hi_14 = bits(dividendMSB_lo_8, 7, 4) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_11 = bits(dividendMSB_lo_8, 3, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_15 = orr(dividendMSB_hi_14) @[CircuitMath.scala 37:22]
    node _dividendMSB_T_35 = bits(dividendMSB_hi_14, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_36 = bits(dividendMSB_hi_14, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_37 = bits(dividendMSB_hi_14, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_38 = mux(_dividendMSB_T_36, UInt<2>("h2"), pad(_dividendMSB_T_37, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_39 = mux(_dividendMSB_T_35, UInt<2>("h3"), _dividendMSB_T_38) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_40 = bits(dividendMSB_lo_11, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_41 = bits(dividendMSB_lo_11, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_42 = bits(dividendMSB_lo_11, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_43 = mux(_dividendMSB_T_41, UInt<2>("h2"), pad(_dividendMSB_T_42, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_44 = mux(_dividendMSB_T_40, UInt<2>("h3"), _dividendMSB_T_43) @[CircuitMath.scala 32:10]
    node dividendMSB_lo_12 = mux(dividendMSB_hi_15, _dividendMSB_T_39, _dividendMSB_T_44) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_45 = cat(dividendMSB_hi_15, dividendMSB_lo_12) @[Cat.scala 30:58]
    node dividendMSB_lo_13 = mux(dividendMSB_hi_11, _dividendMSB_T_34, _dividendMSB_T_45) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_46 = cat(dividendMSB_hi_11, dividendMSB_lo_13) @[Cat.scala 30:58]
    node dividendMSB_lo_14 = mux(dividendMSB_hi_3, _dividendMSB_T_23, _dividendMSB_T_46) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_47 = cat(dividendMSB_hi_3, dividendMSB_lo_14) @[Cat.scala 30:58]
    node dividendMSB_hi_16 = bits(dividendMSB_lo, 31, 16) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_15 = bits(dividendMSB_lo, 15, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_17 = orr(dividendMSB_hi_16) @[CircuitMath.scala 37:22]
    node dividendMSB_hi_18 = bits(dividendMSB_hi_16, 15, 8) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_16 = bits(dividendMSB_hi_16, 7, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_19 = orr(dividendMSB_hi_18) @[CircuitMath.scala 37:22]
    node dividendMSB_hi_20 = bits(dividendMSB_hi_18, 7, 4) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_17 = bits(dividendMSB_hi_18, 3, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_21 = orr(dividendMSB_hi_20) @[CircuitMath.scala 37:22]
    node _dividendMSB_T_48 = bits(dividendMSB_hi_20, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_49 = bits(dividendMSB_hi_20, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_50 = bits(dividendMSB_hi_20, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_51 = mux(_dividendMSB_T_49, UInt<2>("h2"), pad(_dividendMSB_T_50, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_52 = mux(_dividendMSB_T_48, UInt<2>("h3"), _dividendMSB_T_51) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_53 = bits(dividendMSB_lo_17, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_54 = bits(dividendMSB_lo_17, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_55 = bits(dividendMSB_lo_17, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_56 = mux(_dividendMSB_T_54, UInt<2>("h2"), pad(_dividendMSB_T_55, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_57 = mux(_dividendMSB_T_53, UInt<2>("h3"), _dividendMSB_T_56) @[CircuitMath.scala 32:10]
    node dividendMSB_lo_18 = mux(dividendMSB_hi_21, _dividendMSB_T_52, _dividendMSB_T_57) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_58 = cat(dividendMSB_hi_21, dividendMSB_lo_18) @[Cat.scala 30:58]
    node dividendMSB_hi_22 = bits(dividendMSB_lo_16, 7, 4) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_19 = bits(dividendMSB_lo_16, 3, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_23 = orr(dividendMSB_hi_22) @[CircuitMath.scala 37:22]
    node _dividendMSB_T_59 = bits(dividendMSB_hi_22, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_60 = bits(dividendMSB_hi_22, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_61 = bits(dividendMSB_hi_22, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_62 = mux(_dividendMSB_T_60, UInt<2>("h2"), pad(_dividendMSB_T_61, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_63 = mux(_dividendMSB_T_59, UInt<2>("h3"), _dividendMSB_T_62) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_64 = bits(dividendMSB_lo_19, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_65 = bits(dividendMSB_lo_19, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_66 = bits(dividendMSB_lo_19, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_67 = mux(_dividendMSB_T_65, UInt<2>("h2"), pad(_dividendMSB_T_66, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_68 = mux(_dividendMSB_T_64, UInt<2>("h3"), _dividendMSB_T_67) @[CircuitMath.scala 32:10]
    node dividendMSB_lo_20 = mux(dividendMSB_hi_23, _dividendMSB_T_63, _dividendMSB_T_68) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_69 = cat(dividendMSB_hi_23, dividendMSB_lo_20) @[Cat.scala 30:58]
    node dividendMSB_lo_21 = mux(dividendMSB_hi_19, _dividendMSB_T_58, _dividendMSB_T_69) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_70 = cat(dividendMSB_hi_19, dividendMSB_lo_21) @[Cat.scala 30:58]
    node dividendMSB_hi_24 = bits(dividendMSB_lo_15, 15, 8) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_22 = bits(dividendMSB_lo_15, 7, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_25 = orr(dividendMSB_hi_24) @[CircuitMath.scala 37:22]
    node dividendMSB_hi_26 = bits(dividendMSB_hi_24, 7, 4) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_23 = bits(dividendMSB_hi_24, 3, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_27 = orr(dividendMSB_hi_26) @[CircuitMath.scala 37:22]
    node _dividendMSB_T_71 = bits(dividendMSB_hi_26, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_72 = bits(dividendMSB_hi_26, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_73 = bits(dividendMSB_hi_26, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_74 = mux(_dividendMSB_T_72, UInt<2>("h2"), pad(_dividendMSB_T_73, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_75 = mux(_dividendMSB_T_71, UInt<2>("h3"), _dividendMSB_T_74) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_76 = bits(dividendMSB_lo_23, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_77 = bits(dividendMSB_lo_23, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_78 = bits(dividendMSB_lo_23, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_79 = mux(_dividendMSB_T_77, UInt<2>("h2"), pad(_dividendMSB_T_78, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_80 = mux(_dividendMSB_T_76, UInt<2>("h3"), _dividendMSB_T_79) @[CircuitMath.scala 32:10]
    node dividendMSB_lo_24 = mux(dividendMSB_hi_27, _dividendMSB_T_75, _dividendMSB_T_80) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_81 = cat(dividendMSB_hi_27, dividendMSB_lo_24) @[Cat.scala 30:58]
    node dividendMSB_hi_28 = bits(dividendMSB_lo_22, 7, 4) @[CircuitMath.scala 35:17]
    node dividendMSB_lo_25 = bits(dividendMSB_lo_22, 3, 0) @[CircuitMath.scala 36:17]
    node dividendMSB_hi_29 = orr(dividendMSB_hi_28) @[CircuitMath.scala 37:22]
    node _dividendMSB_T_82 = bits(dividendMSB_hi_28, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_83 = bits(dividendMSB_hi_28, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_84 = bits(dividendMSB_hi_28, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_85 = mux(_dividendMSB_T_83, UInt<2>("h2"), pad(_dividendMSB_T_84, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_86 = mux(_dividendMSB_T_82, UInt<2>("h3"), _dividendMSB_T_85) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_87 = bits(dividendMSB_lo_25, 3, 3) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_88 = bits(dividendMSB_lo_25, 2, 2) @[CircuitMath.scala 32:12]
    node _dividendMSB_T_89 = bits(dividendMSB_lo_25, 1, 1) @[CircuitMath.scala 30:8]
    node _dividendMSB_T_90 = mux(_dividendMSB_T_88, UInt<2>("h2"), pad(_dividendMSB_T_89, 2)) @[CircuitMath.scala 32:10]
    node _dividendMSB_T_91 = mux(_dividendMSB_T_87, UInt<2>("h3"), _dividendMSB_T_90) @[CircuitMath.scala 32:10]
    node dividendMSB_lo_26 = mux(dividendMSB_hi_29, _dividendMSB_T_86, _dividendMSB_T_91) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_92 = cat(dividendMSB_hi_29, dividendMSB_lo_26) @[Cat.scala 30:58]
    node dividendMSB_lo_27 = mux(dividendMSB_hi_25, _dividendMSB_T_81, _dividendMSB_T_92) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_93 = cat(dividendMSB_hi_25, dividendMSB_lo_27) @[Cat.scala 30:58]
    node dividendMSB_lo_28 = mux(dividendMSB_hi_17, _dividendMSB_T_70, _dividendMSB_T_93) @[CircuitMath.scala 38:21]
    node _dividendMSB_T_94 = cat(dividendMSB_hi_17, dividendMSB_lo_28) @[Cat.scala 30:58]
    node dividendMSB_lo_29 = mux(dividendMSB_hi_1, _dividendMSB_T_47, _dividendMSB_T_94) @[CircuitMath.scala 38:21]
    node dividendMSB = cat(dividendMSB_hi_1, dividendMSB_lo_29) @[Cat.scala 30:58]
    skip
    skip
    node _eOutPos_T = sub(dividendMSB, divisorMSB) @[Multiplier.scala 153:35]
    node _eOutPos_T_1 = tail(_eOutPos_T, 1) @[Multiplier.scala 153:35]
    node eOutPos = not(_eOutPos_T_1) @[Multiplier.scala 153:21]
    skip
    node _eOut_T_10 = not(divby0) @[Multiplier.scala 154:33]
    node _eOut_T_11 = and(_divby0_T, _eOut_T_10) @[Multiplier.scala 154:30]
    node _eOut_T_12 = geq(eOutPos, UInt<6>("h1")) @[Multiplier.scala 154:52]
    node eOut_1 = and(_eOut_T_11, _eOut_T_12) @[Multiplier.scala 154:41]
    skip
    node _remainder_T_2 = dshl(_result_T_1, eOutPos) @[Multiplier.scala 156:39]
    skip
    node _GEN_16 = mux(eOut_1, pad(_remainder_T_2, 129), unrolls_0) @[Multiplier.scala 138:15 155:19 156:19]
    node _GEN_17 = mux(eOut_1, pad(eOutPos, 7), _count_T_1) @[Multiplier.scala 145:11 155:19 157:15]
    skip
    node _T_33 = and(divby0, _eOut_T_4) @[Multiplier.scala 160:18]
    node _GEN_18 = mux(_T_33, UInt<1>("h0"), neg_out) @[Multiplier.scala 160:{28,38} 58:20]
    node _GEN_19 = mux(_T_30, pad(_GEN_16, 130), _GEN_10) @[Multiplier.scala 130:50]
    node _GEN_20 = mux(_T_30, _GEN_14, _GEN_12) @[Multiplier.scala 130:50]
    node _GEN_21 = mux(_T_30, _GEN_15, _GEN_13) @[Multiplier.scala 130:50]
    node _GEN_22 = mux(_T_30, _GEN_17, _GEN_11) @[Multiplier.scala 130:50]
    node _GEN_23 = mux(_T_30, _GEN_18, neg_out) @[Multiplier.scala 130:50 58:20]
    node _T_34 = and(io_resp_ready, io_resp_valid) @[Decoupled.scala 40:37]
    node _T_35 = or(_T_34, io_kill) @[Multiplier.scala 162:24]
    node _GEN_24 = mux(_T_35, UInt<3>("h0"), _GEN_20) @[Multiplier.scala 162:36 163:11]
    node _T_36 = and(io_req_ready, io_req_valid) @[Decoupled.scala 40:37]
    node _state_T_1 = or(lhs_sign, rhs_sign) @[Multiplier.scala 166:46]
    node _state_T_2 = mux(_state_T_1, UInt<3>("h1"), UInt<3>("h3")) @[Multiplier.scala 166:36]
    node _state_T_3 = mux(cmdMul, UInt<3>("h2"), _state_T_2) @[Multiplier.scala 166:17]
    skip
    skip
    node _count_T_7 = and(cmdMul, _T_19) @[Multiplier.scala 169:46]
    node _count_T_8 = mux(_count_T_7, UInt<3>("h4"), UInt<3>("h0")) @[Multiplier.scala 169:38]
    node _neg_out_T = neq(lhs_sign, rhs_sign) @[Multiplier.scala 170:46]
    node _neg_out_T_1 = mux(cmdHi, lhs_sign, _neg_out_T) @[Multiplier.scala 170:19]
    node _divisor_T = cat(rhs_sign, rhs_in) @[Cat.scala 30:58]
    node _GEN_25 = mux(_T_36, _state_T_3, _GEN_24) @[Multiplier.scala 165:24 166:11]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _outMul_T_1 = and(state, UInt<3>("h1")) @[Multiplier.scala 176:23]
    skip
    skip
    node outMul = eq(_outMul_T_1, UInt<3>("h0")) @[Multiplier.scala 176:52]
    node _loOut_T = not(req_dw) @[Multiplier.scala 79:60]
    skip
    skip
    node _loOut_T_3 = and(_loOut_T, outMul) @[Multiplier.scala 177:48]
    node _loOut_T_4 = bits(result, 63, 32) @[Multiplier.scala 177:65]
    node _loOut_T_5 = bits(result, 31, 0) @[Multiplier.scala 177:82]
    node loOut = mux(_loOut_T_3, _loOut_T_4, _loOut_T_5) @[Multiplier.scala 177:18]
    skip
    skip
    node _hiOut_T_2 = bits(loOut, 31, 31) @[Multiplier.scala 178:50]
    skip
    node _hiOut_T_4 = mux(_hiOut_T_2, UInt<32>("hffffffff"), UInt<32>("h0")) @[Bitwise.scala 72:12]
    skip
    node hiOut = mux(_loOut_T, _hiOut_T_4, _loOut_T_4) @[Multiplier.scala 178:18]
    skip
    node _io_resp_valid_T = eq(state, UInt<3>("h6")) @[Multiplier.scala 182:27]
    node _io_resp_valid_T_1 = eq(state, UInt<3>("h7")) @[Multiplier.scala 182:51]
    skip
    skip
    io_req_ready <= eq(state, UInt<3>("h0")) @[Multiplier.scala 183:25]
    io_resp_valid <= or(_io_resp_valid_T, _io_resp_valid_T_1) @[Multiplier.scala 182:42]
    io_resp_bits_data <= cat(hiOut, loOut) @[Cat.scala 30:58]
    io_resp_bits_tag <= req_tag @[Multiplier.scala 179:20]
    state <= mux(reset, UInt<3>("h0"), _GEN_25) @[Multiplier.scala 52:{22,22}]
    skip
    req_dw <= mux(_T_36, io_req_bits_dw, req_dw) @[Multiplier.scala 165:24 173:9 54:16]
    skip
    skip
    req_tag <= mux(_T_36, io_req_bits_tag, req_tag) @[Multiplier.scala 165:24 173:9 54:16]
    count <= mux(_T_36, pad(_count_T_8, 7), _GEN_22) @[Multiplier.scala 165:24 169:11]
    neg_out <= mux(_T_36, _neg_out_T_1, _GEN_23) @[Multiplier.scala 165:24 170:13]
    isHi <= mux(_T_36, cmdHi, isHi) @[Multiplier.scala 165:24 167:10 59:17]
    resHi <= mux(_T_36, UInt<1>("h0"), _GEN_21) @[Multiplier.scala 165:24 168:11]
    divisor <= mux(_T_36, _divisor_T, _GEN_3) @[Multiplier.scala 165:24 171:13]
    remainder <= mux(_T_36, pad(lhs_in, 130), _GEN_19) @[Multiplier.scala 165:24 172:15]

  module PlusArgTimeout :
    input clock : Clock
    input reset : UInt<1>
    input io_count : UInt<32>

    inst plusarg_reader of plusarg_reader @[PlusArg.scala 62:19]
    node _T = gt(plusarg_reader.out, UInt<32>("h0")) @[PlusArg.scala 63:13]
    node _T_1 = lt(io_count, plusarg_reader.out) @[PlusArg.scala 64:22]
    skip
    node _T_3 = or(_T_1, reset) @[PlusArg.scala 64:12]
    node _T_4 = not(_T_3) @[PlusArg.scala 64:12]
    printf(clock, and(_T, _T_4), "Assertion failed: Timeout exceeded: Kill the emulation after INT rdtime cycles. Off if 0.\n    at PlusArg.scala:64 assert (io.count < max, s\"Timeout exceeded: $docstring\")\n") @[PlusArg.scala 64:12]
    stop(clock, and(_T, _T_4), 1) @[PlusArg.scala 64:12]

  module OptimizationBarrier :
    input io_x_ppn : UInt<20>
    input io_x_u : UInt<1>
    input io_x_ae : UInt<1>
    input io_x_sw : UInt<1>
    input io_x_sx : UInt<1>
    input io_x_sr : UInt<1>
    input io_x_pw : UInt<1>
    input io_x_px : UInt<1>
    input io_x_pr : UInt<1>
    input io_x_ppp : UInt<1>
    input io_x_pal : UInt<1>
    input io_x_paa : UInt<1>
    input io_x_eff : UInt<1>
    input io_x_c : UInt<1>
    output io_y_ppn : UInt<20>
    output io_y_u : UInt<1>
    output io_y_ae : UInt<1>
    output io_y_sw : UInt<1>
    output io_y_sx : UInt<1>
    output io_y_sr : UInt<1>
    output io_y_pw : UInt<1>
    output io_y_px : UInt<1>
    output io_y_pr : UInt<1>
    output io_y_ppp : UInt<1>
    output io_y_pal : UInt<1>
    output io_y_paa : UInt<1>
    output io_y_eff : UInt<1>
    output io_y_c : UInt<1>

    io_y_ppn <= io_x_ppn @[package.scala 263:12]
    io_y_u <= io_x_u @[package.scala 263:12]
    skip
    io_y_ae <= io_x_ae @[package.scala 263:12]
    io_y_sw <= io_x_sw @[package.scala 263:12]
    io_y_sx <= io_x_sx @[package.scala 263:12]
    io_y_sr <= io_x_sr @[package.scala 263:12]
    io_y_pw <= io_x_pw @[package.scala 263:12]
    io_y_px <= io_x_px @[package.scala 263:12]
    io_y_pr <= io_x_pr @[package.scala 263:12]
    io_y_ppp <= io_x_ppp @[package.scala 263:12]
    io_y_pal <= io_x_pal @[package.scala 263:12]
    io_y_paa <= io_x_paa @[package.scala 263:12]
    io_y_eff <= io_x_eff @[package.scala 263:12]
    io_y_c <= io_x_c @[package.scala 263:12]
    skip

  module PMPChecker :
    input io_prv : UInt<2>
    input io_pmp_0_cfg_l : UInt<1>
    input io_pmp_0_cfg_a : UInt<2>
    input io_pmp_0_cfg_x : UInt<1>
    input io_pmp_0_cfg_w : UInt<1>
    input io_pmp_0_cfg_r : UInt<1>
    input io_pmp_0_addr : UInt<30>
    input io_pmp_0_mask : UInt<32>
    input io_pmp_1_cfg_l : UInt<1>
    input io_pmp_1_cfg_a : UInt<2>
    input io_pmp_1_cfg_x : UInt<1>
    input io_pmp_1_cfg_w : UInt<1>
    input io_pmp_1_cfg_r : UInt<1>
    input io_pmp_1_addr : UInt<30>
    input io_pmp_1_mask : UInt<32>
    input io_pmp_2_cfg_l : UInt<1>
    input io_pmp_2_cfg_a : UInt<2>
    input io_pmp_2_cfg_x : UInt<1>
    input io_pmp_2_cfg_w : UInt<1>
    input io_pmp_2_cfg_r : UInt<1>
    input io_pmp_2_addr : UInt<30>
    input io_pmp_2_mask : UInt<32>
    input io_pmp_3_cfg_l : UInt<1>
    input io_pmp_3_cfg_a : UInt<2>
    input io_pmp_3_cfg_x : UInt<1>
    input io_pmp_3_cfg_w : UInt<1>
    input io_pmp_3_cfg_r : UInt<1>
    input io_pmp_3_addr : UInt<30>
    input io_pmp_3_mask : UInt<32>
    input io_pmp_4_cfg_l : UInt<1>
    input io_pmp_4_cfg_a : UInt<2>
    input io_pmp_4_cfg_x : UInt<1>
    input io_pmp_4_cfg_w : UInt<1>
    input io_pmp_4_cfg_r : UInt<1>
    input io_pmp_4_addr : UInt<30>
    input io_pmp_4_mask : UInt<32>
    input io_pmp_5_cfg_l : UInt<1>
    input io_pmp_5_cfg_a : UInt<2>
    input io_pmp_5_cfg_x : UInt<1>
    input io_pmp_5_cfg_w : UInt<1>
    input io_pmp_5_cfg_r : UInt<1>
    input io_pmp_5_addr : UInt<30>
    input io_pmp_5_mask : UInt<32>
    input io_pmp_6_cfg_l : UInt<1>
    input io_pmp_6_cfg_a : UInt<2>
    input io_pmp_6_cfg_x : UInt<1>
    input io_pmp_6_cfg_w : UInt<1>
    input io_pmp_6_cfg_r : UInt<1>
    input io_pmp_6_addr : UInt<30>
    input io_pmp_6_mask : UInt<32>
    input io_pmp_7_cfg_l : UInt<1>
    input io_pmp_7_cfg_a : UInt<2>
    input io_pmp_7_cfg_x : UInt<1>
    input io_pmp_7_cfg_w : UInt<1>
    input io_pmp_7_cfg_r : UInt<1>
    input io_pmp_7_addr : UInt<30>
    input io_pmp_7_mask : UInt<32>
    input io_addr : UInt<32>
    input io_size : UInt<2>
    output io_r : UInt<1>
    output io_w : UInt<1>
    output io_x : UInt<1>

    node default = gt(io_prv, UInt<2>("h1")) @[PMP.scala 157:56]
    node _res_hit_T = bits(io_pmp_7_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    node _res_hit_lsbMask_T_1 = dshl(UInt<3>("h7"), io_size) @[package.scala 234:77]
    node _res_hit_lsbMask_T_2 = bits(_res_hit_lsbMask_T_1, 2, 0) @[package.scala 234:82]
    node _res_hit_lsbMask_T_3 = not(_res_hit_lsbMask_T_2) @[package.scala 234:46]
    node _GEN_0 = pad(_res_hit_lsbMask_T_3, 32) @[PMP.scala 70:26]
    node res_hit_lsbMask = or(io_pmp_7_mask, _GEN_0) @[PMP.scala 70:26]
    node _res_hit_msbMatch_T = shr(io_addr, 3) @[PMP.scala 71:29]
    node _res_hit_msbMatch_T_1 = shl(io_pmp_7_addr, 2) @[PMP.scala 62:36]
    node _res_hit_msbMatch_T_2 = not(_res_hit_msbMatch_T_1) @[PMP.scala 62:29]
    node _res_hit_msbMatch_T_3 = or(_res_hit_msbMatch_T_2, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_msbMatch_T_4 = not(_res_hit_msbMatch_T_3) @[PMP.scala 62:27]
    node _res_hit_msbMatch_T_5 = shr(_res_hit_msbMatch_T_4, 3) @[PMP.scala 71:53]
    node _res_hit_msbMatch_T_6 = shr(io_pmp_7_mask, 3) @[PMP.scala 71:72]
    node _res_hit_msbMatch_T_7 = xor(_res_hit_msbMatch_T, _res_hit_msbMatch_T_5) @[PMP.scala 65:47]
    node _res_hit_msbMatch_T_8 = not(_res_hit_msbMatch_T_6) @[PMP.scala 65:54]
    node _res_hit_msbMatch_T_9 = and(_res_hit_msbMatch_T_7, _res_hit_msbMatch_T_8) @[PMP.scala 65:52]
    node res_hit_msbMatch = eq(_res_hit_msbMatch_T_9, UInt<29>("h0")) @[PMP.scala 65:58]
    node _res_hit_lsbMatch_T = bits(io_addr, 2, 0) @[PMP.scala 72:28]
    skip
    skip
    skip
    skip
    node _res_hit_lsbMatch_T_5 = bits(_res_hit_msbMatch_T_4, 2, 0) @[PMP.scala 72:55]
    node _res_hit_lsbMatch_T_6 = bits(res_hit_lsbMask, 2, 0) @[PMP.scala 72:80]
    node _res_hit_lsbMatch_T_7 = xor(_res_hit_lsbMatch_T, _res_hit_lsbMatch_T_5) @[PMP.scala 65:47]
    node _res_hit_lsbMatch_T_8 = not(_res_hit_lsbMatch_T_6) @[PMP.scala 65:54]
    node _res_hit_lsbMatch_T_9 = and(_res_hit_lsbMatch_T_7, _res_hit_lsbMatch_T_8) @[PMP.scala 65:52]
    node res_hit_lsbMatch = eq(_res_hit_lsbMatch_T_9, UInt<3>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_1 = and(res_hit_msbMatch, res_hit_lsbMatch) @[PMP.scala 73:16]
    node _res_hit_T_2 = bits(io_pmp_7_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsLess_T_1 = shl(io_pmp_6_addr, 2) @[PMP.scala 62:36]
    node _res_hit_msbsLess_T_2 = not(_res_hit_msbsLess_T_1) @[PMP.scala 62:29]
    node _res_hit_msbsLess_T_3 = or(_res_hit_msbsLess_T_2, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_msbsLess_T_4 = not(_res_hit_msbsLess_T_3) @[PMP.scala 62:27]
    node _res_hit_msbsLess_T_5 = shr(_res_hit_msbsLess_T_4, 3) @[PMP.scala 82:52]
    node res_hit_msbsLess = lt(_res_hit_msbMatch_T, _res_hit_msbsLess_T_5) @[PMP.scala 82:39]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsEqual_T_6 = xor(_res_hit_msbMatch_T, _res_hit_msbsLess_T_5) @[PMP.scala 83:41]
    node res_hit_msbsEqual = eq(_res_hit_msbsEqual_T_6, UInt<29>("h0")) @[PMP.scala 83:69]
    skip
    node _res_hit_lsbsLess_T_1 = or(_res_hit_lsbMatch_T, _res_hit_lsbMask_T_3) @[PMP.scala 84:42]
    skip
    skip
    skip
    skip
    node _res_hit_lsbsLess_T_6 = bits(_res_hit_msbsLess_T_4, 2, 0) @[PMP.scala 84:64]
    node res_hit_lsbsLess = lt(_res_hit_lsbsLess_T_1, _res_hit_lsbsLess_T_6) @[PMP.scala 84:53]
    node _res_hit_T_7 = and(res_hit_msbsEqual, res_hit_lsbsLess) @[PMP.scala 85:30]
    node _res_hit_T_8 = or(res_hit_msbsLess, _res_hit_T_7) @[PMP.scala 85:16]
    node _res_hit_T_9 = not(_res_hit_T_8) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_msbsLess_1 = lt(_res_hit_msbMatch_T, _res_hit_msbMatch_T_5) @[PMP.scala 82:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_msbsEqual_1 = eq(_res_hit_msbMatch_T_7, UInt<29>("h0")) @[PMP.scala 83:69]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbsLess_1 = lt(_res_hit_lsbMatch_T, _res_hit_lsbMatch_T_5) @[PMP.scala 84:53]
    node _res_hit_T_10 = and(res_hit_msbsEqual_1, res_hit_lsbsLess_1) @[PMP.scala 85:30]
    node _res_hit_T_11 = or(res_hit_msbsLess_1, _res_hit_T_10) @[PMP.scala 85:16]
    node _res_hit_T_12 = and(_res_hit_T_9, _res_hit_T_11) @[PMP.scala 96:48]
    node _res_hit_T_13 = and(_res_hit_T_2, _res_hit_T_12) @[PMP.scala 134:61]
    node res_hit = mux(_res_hit_T, _res_hit_T_1, _res_hit_T_13) @[PMP.scala 134:8]
    node _res_ignore_T = not(io_pmp_7_cfg_l) @[PMP.scala 165:29]
    node res_ignore = and(default, _res_ignore_T) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesLowerBound_T_14 = not(_res_hit_lsbMatch_T) @[PMP.scala 125:125]
    node _res_aligned_straddlesLowerBound_T_15 = and(_res_hit_lsbsLess_T_6, _res_aligned_straddlesLowerBound_T_14) @[PMP.scala 125:123]
    node _res_aligned_straddlesLowerBound_T_16 = neq(_res_aligned_straddlesLowerBound_T_15, UInt<3>("h0")) @[PMP.scala 125:145]
    node res_aligned_straddlesLowerBound = and(res_hit_msbsEqual, _res_aligned_straddlesLowerBound_T_16) @[PMP.scala 125:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesUpperBound_T_15 = and(_res_hit_lsbMatch_T_5, _res_hit_lsbsLess_T_1) @[PMP.scala 126:113]
    node _res_aligned_straddlesUpperBound_T_16 = neq(_res_aligned_straddlesUpperBound_T_15, UInt<3>("h0")) @[PMP.scala 126:146]
    node res_aligned_straddlesUpperBound = and(res_hit_msbsEqual_1, _res_aligned_straddlesUpperBound_T_16) @[PMP.scala 126:83]
    node _res_aligned_rangeAligned_T = or(res_aligned_straddlesLowerBound, res_aligned_straddlesUpperBound) @[PMP.scala 127:46]
    node res_aligned_rangeAligned = not(_res_aligned_rangeAligned_T) @[PMP.scala 127:24]
    node _res_aligned_pow2Aligned_T = bits(io_pmp_7_mask, 2, 0) @[PMP.scala 128:39]
    node _res_aligned_pow2Aligned_T_1 = not(_res_aligned_pow2Aligned_T) @[PMP.scala 128:34]
    node _res_aligned_pow2Aligned_T_2 = and(_res_hit_lsbMask_T_3, _res_aligned_pow2Aligned_T_1) @[PMP.scala 128:32]
    node res_aligned_pow2Aligned = eq(_res_aligned_pow2Aligned_T_2, UInt<3>("h0")) @[PMP.scala 128:57]
    skip
    node res_aligned = mux(_res_hit_T, res_aligned_pow2Aligned, res_aligned_rangeAligned) @[PMP.scala 129:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_cur_cfg_r_T = or(io_pmp_7_cfg_r, res_ignore) @[PMP.scala 183:40]
    node res_cur_cfg_r = and(res_aligned, _res_cur_cfg_r_T) @[PMP.scala 183:26]
    node _res_cur_cfg_w_T = or(io_pmp_7_cfg_w, res_ignore) @[PMP.scala 184:40]
    node res_cur_cfg_w = and(res_aligned, _res_cur_cfg_w_T) @[PMP.scala 184:26]
    node _res_cur_cfg_x_T = or(io_pmp_7_cfg_x, res_ignore) @[PMP.scala 185:40]
    node res_cur_cfg_x = and(res_aligned, _res_cur_cfg_x_T) @[PMP.scala 185:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_44_cfg_x = mux(res_hit, res_cur_cfg_x, default) @[PMP.scala 186:8]
    skip
    skip
    node _res_T_44_cfg_w = mux(res_hit, res_cur_cfg_w, default) @[PMP.scala 186:8]
    skip
    skip
    node _res_T_44_cfg_r = mux(res_hit, res_cur_cfg_r, default) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_14 = bits(io_pmp_6_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbMask_1 = or(io_pmp_6_mask, _GEN_0) @[PMP.scala 70:26]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbMatch_T_16 = shr(io_pmp_6_mask, 3) @[PMP.scala 71:72]
    skip
    node _res_hit_msbMatch_T_18 = not(_res_hit_msbMatch_T_16) @[PMP.scala 65:54]
    node _res_hit_msbMatch_T_19 = and(_res_hit_msbsEqual_T_6, _res_hit_msbMatch_T_18) @[PMP.scala 65:52]
    node res_hit_msbMatch_1 = eq(_res_hit_msbMatch_T_19, UInt<29>("h0")) @[PMP.scala 65:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbMatch_T_16 = bits(res_hit_lsbMask_1, 2, 0) @[PMP.scala 72:80]
    node _res_hit_lsbMatch_T_17 = xor(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_6) @[PMP.scala 65:47]
    node _res_hit_lsbMatch_T_18 = not(_res_hit_lsbMatch_T_16) @[PMP.scala 65:54]
    node _res_hit_lsbMatch_T_19 = and(_res_hit_lsbMatch_T_17, _res_hit_lsbMatch_T_18) @[PMP.scala 65:52]
    node res_hit_lsbMatch_1 = eq(_res_hit_lsbMatch_T_19, UInt<3>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_15 = and(res_hit_msbMatch_1, res_hit_lsbMatch_1) @[PMP.scala 73:16]
    node _res_hit_T_16 = bits(io_pmp_6_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsLess_T_13 = shl(io_pmp_5_addr, 2) @[PMP.scala 62:36]
    node _res_hit_msbsLess_T_14 = not(_res_hit_msbsLess_T_13) @[PMP.scala 62:29]
    node _res_hit_msbsLess_T_15 = or(_res_hit_msbsLess_T_14, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_msbsLess_T_16 = not(_res_hit_msbsLess_T_15) @[PMP.scala 62:27]
    node _res_hit_msbsLess_T_17 = shr(_res_hit_msbsLess_T_16, 3) @[PMP.scala 82:52]
    node res_hit_msbsLess_2 = lt(_res_hit_msbMatch_T, _res_hit_msbsLess_T_17) @[PMP.scala 82:39]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsEqual_T_20 = xor(_res_hit_msbMatch_T, _res_hit_msbsLess_T_17) @[PMP.scala 83:41]
    node res_hit_msbsEqual_2 = eq(_res_hit_msbsEqual_T_20, UInt<29>("h0")) @[PMP.scala 83:69]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbsLess_T_20 = bits(_res_hit_msbsLess_T_16, 2, 0) @[PMP.scala 84:64]
    node res_hit_lsbsLess_2 = lt(_res_hit_lsbsLess_T_1, _res_hit_lsbsLess_T_20) @[PMP.scala 84:53]
    node _res_hit_T_21 = and(res_hit_msbsEqual_2, res_hit_lsbsLess_2) @[PMP.scala 85:30]
    node _res_hit_T_22 = or(res_hit_msbsLess_2, _res_hit_T_21) @[PMP.scala 85:16]
    node _res_hit_T_23 = not(_res_hit_T_22) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbsLess_3 = lt(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_6) @[PMP.scala 84:53]
    node _res_hit_T_24 = and(res_hit_msbsEqual, res_hit_lsbsLess_3) @[PMP.scala 85:30]
    node _res_hit_T_25 = or(res_hit_msbsLess, _res_hit_T_24) @[PMP.scala 85:16]
    node _res_hit_T_26 = and(_res_hit_T_23, _res_hit_T_25) @[PMP.scala 96:48]
    node _res_hit_T_27 = and(_res_hit_T_16, _res_hit_T_26) @[PMP.scala 134:61]
    node res_hit_1 = mux(_res_hit_T_14, _res_hit_T_15, _res_hit_T_27) @[PMP.scala 134:8]
    node _res_ignore_T_1 = not(io_pmp_6_cfg_l) @[PMP.scala 165:29]
    node res_ignore_1 = and(default, _res_ignore_T_1) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesLowerBound_T_32 = and(_res_hit_lsbsLess_T_20, _res_aligned_straddlesLowerBound_T_14) @[PMP.scala 125:123]
    node _res_aligned_straddlesLowerBound_T_33 = neq(_res_aligned_straddlesLowerBound_T_32, UInt<3>("h0")) @[PMP.scala 125:145]
    node res_aligned_straddlesLowerBound_1 = and(res_hit_msbsEqual_2, _res_aligned_straddlesLowerBound_T_33) @[PMP.scala 125:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesUpperBound_T_32 = and(_res_hit_lsbsLess_T_6, _res_hit_lsbsLess_T_1) @[PMP.scala 126:113]
    node _res_aligned_straddlesUpperBound_T_33 = neq(_res_aligned_straddlesUpperBound_T_32, UInt<3>("h0")) @[PMP.scala 126:146]
    node res_aligned_straddlesUpperBound_1 = and(res_hit_msbsEqual, _res_aligned_straddlesUpperBound_T_33) @[PMP.scala 126:83]
    node _res_aligned_rangeAligned_T_1 = or(res_aligned_straddlesLowerBound_1, res_aligned_straddlesUpperBound_1) @[PMP.scala 127:46]
    node res_aligned_rangeAligned_1 = not(_res_aligned_rangeAligned_T_1) @[PMP.scala 127:24]
    node _res_aligned_pow2Aligned_T_3 = bits(io_pmp_6_mask, 2, 0) @[PMP.scala 128:39]
    node _res_aligned_pow2Aligned_T_4 = not(_res_aligned_pow2Aligned_T_3) @[PMP.scala 128:34]
    node _res_aligned_pow2Aligned_T_5 = and(_res_hit_lsbMask_T_3, _res_aligned_pow2Aligned_T_4) @[PMP.scala 128:32]
    node res_aligned_pow2Aligned_1 = eq(_res_aligned_pow2Aligned_T_5, UInt<3>("h0")) @[PMP.scala 128:57]
    skip
    node res_aligned_1 = mux(_res_hit_T_14, res_aligned_pow2Aligned_1, res_aligned_rangeAligned_1) @[PMP.scala 129:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_cur_cfg_r_T_2 = or(io_pmp_6_cfg_r, res_ignore_1) @[PMP.scala 183:40]
    node res_cur_1_cfg_r = and(res_aligned_1, _res_cur_cfg_r_T_2) @[PMP.scala 183:26]
    node _res_cur_cfg_w_T_2 = or(io_pmp_6_cfg_w, res_ignore_1) @[PMP.scala 184:40]
    node res_cur_1_cfg_w = and(res_aligned_1, _res_cur_cfg_w_T_2) @[PMP.scala 184:26]
    node _res_cur_cfg_x_T_2 = or(io_pmp_6_cfg_x, res_ignore_1) @[PMP.scala 185:40]
    node res_cur_1_cfg_x = and(res_aligned_1, _res_cur_cfg_x_T_2) @[PMP.scala 185:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_89_cfg_x = mux(res_hit_1, res_cur_1_cfg_x, _res_T_44_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_89_cfg_w = mux(res_hit_1, res_cur_1_cfg_w, _res_T_44_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_89_cfg_r = mux(res_hit_1, res_cur_1_cfg_r, _res_T_44_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_28 = bits(io_pmp_5_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbMask_2 = or(io_pmp_5_mask, _GEN_0) @[PMP.scala 70:26]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbMatch_T_26 = shr(io_pmp_5_mask, 3) @[PMP.scala 71:72]
    skip
    node _res_hit_msbMatch_T_28 = not(_res_hit_msbMatch_T_26) @[PMP.scala 65:54]
    node _res_hit_msbMatch_T_29 = and(_res_hit_msbsEqual_T_20, _res_hit_msbMatch_T_28) @[PMP.scala 65:52]
    node res_hit_msbMatch_2 = eq(_res_hit_msbMatch_T_29, UInt<29>("h0")) @[PMP.scala 65:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbMatch_T_26 = bits(res_hit_lsbMask_2, 2, 0) @[PMP.scala 72:80]
    node _res_hit_lsbMatch_T_27 = xor(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_20) @[PMP.scala 65:47]
    node _res_hit_lsbMatch_T_28 = not(_res_hit_lsbMatch_T_26) @[PMP.scala 65:54]
    node _res_hit_lsbMatch_T_29 = and(_res_hit_lsbMatch_T_27, _res_hit_lsbMatch_T_28) @[PMP.scala 65:52]
    node res_hit_lsbMatch_2 = eq(_res_hit_lsbMatch_T_29, UInt<3>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_29 = and(res_hit_msbMatch_2, res_hit_lsbMatch_2) @[PMP.scala 73:16]
    node _res_hit_T_30 = bits(io_pmp_5_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsLess_T_25 = shl(io_pmp_4_addr, 2) @[PMP.scala 62:36]
    node _res_hit_msbsLess_T_26 = not(_res_hit_msbsLess_T_25) @[PMP.scala 62:29]
    node _res_hit_msbsLess_T_27 = or(_res_hit_msbsLess_T_26, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_msbsLess_T_28 = not(_res_hit_msbsLess_T_27) @[PMP.scala 62:27]
    node _res_hit_msbsLess_T_29 = shr(_res_hit_msbsLess_T_28, 3) @[PMP.scala 82:52]
    node res_hit_msbsLess_4 = lt(_res_hit_msbMatch_T, _res_hit_msbsLess_T_29) @[PMP.scala 82:39]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsEqual_T_34 = xor(_res_hit_msbMatch_T, _res_hit_msbsLess_T_29) @[PMP.scala 83:41]
    node res_hit_msbsEqual_4 = eq(_res_hit_msbsEqual_T_34, UInt<29>("h0")) @[PMP.scala 83:69]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbsLess_T_34 = bits(_res_hit_msbsLess_T_28, 2, 0) @[PMP.scala 84:64]
    node res_hit_lsbsLess_4 = lt(_res_hit_lsbsLess_T_1, _res_hit_lsbsLess_T_34) @[PMP.scala 84:53]
    node _res_hit_T_35 = and(res_hit_msbsEqual_4, res_hit_lsbsLess_4) @[PMP.scala 85:30]
    node _res_hit_T_36 = or(res_hit_msbsLess_4, _res_hit_T_35) @[PMP.scala 85:16]
    node _res_hit_T_37 = not(_res_hit_T_36) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbsLess_5 = lt(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_20) @[PMP.scala 84:53]
    node _res_hit_T_38 = and(res_hit_msbsEqual_2, res_hit_lsbsLess_5) @[PMP.scala 85:30]
    node _res_hit_T_39 = or(res_hit_msbsLess_2, _res_hit_T_38) @[PMP.scala 85:16]
    node _res_hit_T_40 = and(_res_hit_T_37, _res_hit_T_39) @[PMP.scala 96:48]
    node _res_hit_T_41 = and(_res_hit_T_30, _res_hit_T_40) @[PMP.scala 134:61]
    node res_hit_2 = mux(_res_hit_T_28, _res_hit_T_29, _res_hit_T_41) @[PMP.scala 134:8]
    node _res_ignore_T_2 = not(io_pmp_5_cfg_l) @[PMP.scala 165:29]
    node res_ignore_2 = and(default, _res_ignore_T_2) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesLowerBound_T_49 = and(_res_hit_lsbsLess_T_34, _res_aligned_straddlesLowerBound_T_14) @[PMP.scala 125:123]
    node _res_aligned_straddlesLowerBound_T_50 = neq(_res_aligned_straddlesLowerBound_T_49, UInt<3>("h0")) @[PMP.scala 125:145]
    node res_aligned_straddlesLowerBound_2 = and(res_hit_msbsEqual_4, _res_aligned_straddlesLowerBound_T_50) @[PMP.scala 125:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesUpperBound_T_49 = and(_res_hit_lsbsLess_T_20, _res_hit_lsbsLess_T_1) @[PMP.scala 126:113]
    node _res_aligned_straddlesUpperBound_T_50 = neq(_res_aligned_straddlesUpperBound_T_49, UInt<3>("h0")) @[PMP.scala 126:146]
    node res_aligned_straddlesUpperBound_2 = and(res_hit_msbsEqual_2, _res_aligned_straddlesUpperBound_T_50) @[PMP.scala 126:83]
    node _res_aligned_rangeAligned_T_2 = or(res_aligned_straddlesLowerBound_2, res_aligned_straddlesUpperBound_2) @[PMP.scala 127:46]
    node res_aligned_rangeAligned_2 = not(_res_aligned_rangeAligned_T_2) @[PMP.scala 127:24]
    node _res_aligned_pow2Aligned_T_6 = bits(io_pmp_5_mask, 2, 0) @[PMP.scala 128:39]
    node _res_aligned_pow2Aligned_T_7 = not(_res_aligned_pow2Aligned_T_6) @[PMP.scala 128:34]
    node _res_aligned_pow2Aligned_T_8 = and(_res_hit_lsbMask_T_3, _res_aligned_pow2Aligned_T_7) @[PMP.scala 128:32]
    node res_aligned_pow2Aligned_2 = eq(_res_aligned_pow2Aligned_T_8, UInt<3>("h0")) @[PMP.scala 128:57]
    skip
    node res_aligned_2 = mux(_res_hit_T_28, res_aligned_pow2Aligned_2, res_aligned_rangeAligned_2) @[PMP.scala 129:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_cur_cfg_r_T_4 = or(io_pmp_5_cfg_r, res_ignore_2) @[PMP.scala 183:40]
    node res_cur_2_cfg_r = and(res_aligned_2, _res_cur_cfg_r_T_4) @[PMP.scala 183:26]
    node _res_cur_cfg_w_T_4 = or(io_pmp_5_cfg_w, res_ignore_2) @[PMP.scala 184:40]
    node res_cur_2_cfg_w = and(res_aligned_2, _res_cur_cfg_w_T_4) @[PMP.scala 184:26]
    node _res_cur_cfg_x_T_4 = or(io_pmp_5_cfg_x, res_ignore_2) @[PMP.scala 185:40]
    node res_cur_2_cfg_x = and(res_aligned_2, _res_cur_cfg_x_T_4) @[PMP.scala 185:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_134_cfg_x = mux(res_hit_2, res_cur_2_cfg_x, _res_T_89_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_134_cfg_w = mux(res_hit_2, res_cur_2_cfg_w, _res_T_89_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_134_cfg_r = mux(res_hit_2, res_cur_2_cfg_r, _res_T_89_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_42 = bits(io_pmp_4_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbMask_3 = or(io_pmp_4_mask, _GEN_0) @[PMP.scala 70:26]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbMatch_T_36 = shr(io_pmp_4_mask, 3) @[PMP.scala 71:72]
    skip
    node _res_hit_msbMatch_T_38 = not(_res_hit_msbMatch_T_36) @[PMP.scala 65:54]
    node _res_hit_msbMatch_T_39 = and(_res_hit_msbsEqual_T_34, _res_hit_msbMatch_T_38) @[PMP.scala 65:52]
    node res_hit_msbMatch_3 = eq(_res_hit_msbMatch_T_39, UInt<29>("h0")) @[PMP.scala 65:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbMatch_T_36 = bits(res_hit_lsbMask_3, 2, 0) @[PMP.scala 72:80]
    node _res_hit_lsbMatch_T_37 = xor(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_34) @[PMP.scala 65:47]
    node _res_hit_lsbMatch_T_38 = not(_res_hit_lsbMatch_T_36) @[PMP.scala 65:54]
    node _res_hit_lsbMatch_T_39 = and(_res_hit_lsbMatch_T_37, _res_hit_lsbMatch_T_38) @[PMP.scala 65:52]
    node res_hit_lsbMatch_3 = eq(_res_hit_lsbMatch_T_39, UInt<3>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_43 = and(res_hit_msbMatch_3, res_hit_lsbMatch_3) @[PMP.scala 73:16]
    node _res_hit_T_44 = bits(io_pmp_4_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsLess_T_37 = shl(io_pmp_3_addr, 2) @[PMP.scala 62:36]
    node _res_hit_msbsLess_T_38 = not(_res_hit_msbsLess_T_37) @[PMP.scala 62:29]
    node _res_hit_msbsLess_T_39 = or(_res_hit_msbsLess_T_38, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_msbsLess_T_40 = not(_res_hit_msbsLess_T_39) @[PMP.scala 62:27]
    node _res_hit_msbsLess_T_41 = shr(_res_hit_msbsLess_T_40, 3) @[PMP.scala 82:52]
    node res_hit_msbsLess_6 = lt(_res_hit_msbMatch_T, _res_hit_msbsLess_T_41) @[PMP.scala 82:39]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsEqual_T_48 = xor(_res_hit_msbMatch_T, _res_hit_msbsLess_T_41) @[PMP.scala 83:41]
    node res_hit_msbsEqual_6 = eq(_res_hit_msbsEqual_T_48, UInt<29>("h0")) @[PMP.scala 83:69]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbsLess_T_48 = bits(_res_hit_msbsLess_T_40, 2, 0) @[PMP.scala 84:64]
    node res_hit_lsbsLess_6 = lt(_res_hit_lsbsLess_T_1, _res_hit_lsbsLess_T_48) @[PMP.scala 84:53]
    node _res_hit_T_49 = and(res_hit_msbsEqual_6, res_hit_lsbsLess_6) @[PMP.scala 85:30]
    node _res_hit_T_50 = or(res_hit_msbsLess_6, _res_hit_T_49) @[PMP.scala 85:16]
    node _res_hit_T_51 = not(_res_hit_T_50) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbsLess_7 = lt(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_34) @[PMP.scala 84:53]
    node _res_hit_T_52 = and(res_hit_msbsEqual_4, res_hit_lsbsLess_7) @[PMP.scala 85:30]
    node _res_hit_T_53 = or(res_hit_msbsLess_4, _res_hit_T_52) @[PMP.scala 85:16]
    node _res_hit_T_54 = and(_res_hit_T_51, _res_hit_T_53) @[PMP.scala 96:48]
    node _res_hit_T_55 = and(_res_hit_T_44, _res_hit_T_54) @[PMP.scala 134:61]
    node res_hit_3 = mux(_res_hit_T_42, _res_hit_T_43, _res_hit_T_55) @[PMP.scala 134:8]
    node _res_ignore_T_3 = not(io_pmp_4_cfg_l) @[PMP.scala 165:29]
    node res_ignore_3 = and(default, _res_ignore_T_3) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesLowerBound_T_66 = and(_res_hit_lsbsLess_T_48, _res_aligned_straddlesLowerBound_T_14) @[PMP.scala 125:123]
    node _res_aligned_straddlesLowerBound_T_67 = neq(_res_aligned_straddlesLowerBound_T_66, UInt<3>("h0")) @[PMP.scala 125:145]
    node res_aligned_straddlesLowerBound_3 = and(res_hit_msbsEqual_6, _res_aligned_straddlesLowerBound_T_67) @[PMP.scala 125:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesUpperBound_T_66 = and(_res_hit_lsbsLess_T_34, _res_hit_lsbsLess_T_1) @[PMP.scala 126:113]
    node _res_aligned_straddlesUpperBound_T_67 = neq(_res_aligned_straddlesUpperBound_T_66, UInt<3>("h0")) @[PMP.scala 126:146]
    node res_aligned_straddlesUpperBound_3 = and(res_hit_msbsEqual_4, _res_aligned_straddlesUpperBound_T_67) @[PMP.scala 126:83]
    node _res_aligned_rangeAligned_T_3 = or(res_aligned_straddlesLowerBound_3, res_aligned_straddlesUpperBound_3) @[PMP.scala 127:46]
    node res_aligned_rangeAligned_3 = not(_res_aligned_rangeAligned_T_3) @[PMP.scala 127:24]
    node _res_aligned_pow2Aligned_T_9 = bits(io_pmp_4_mask, 2, 0) @[PMP.scala 128:39]
    node _res_aligned_pow2Aligned_T_10 = not(_res_aligned_pow2Aligned_T_9) @[PMP.scala 128:34]
    node _res_aligned_pow2Aligned_T_11 = and(_res_hit_lsbMask_T_3, _res_aligned_pow2Aligned_T_10) @[PMP.scala 128:32]
    node res_aligned_pow2Aligned_3 = eq(_res_aligned_pow2Aligned_T_11, UInt<3>("h0")) @[PMP.scala 128:57]
    skip
    node res_aligned_3 = mux(_res_hit_T_42, res_aligned_pow2Aligned_3, res_aligned_rangeAligned_3) @[PMP.scala 129:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_cur_cfg_r_T_6 = or(io_pmp_4_cfg_r, res_ignore_3) @[PMP.scala 183:40]
    node res_cur_3_cfg_r = and(res_aligned_3, _res_cur_cfg_r_T_6) @[PMP.scala 183:26]
    node _res_cur_cfg_w_T_6 = or(io_pmp_4_cfg_w, res_ignore_3) @[PMP.scala 184:40]
    node res_cur_3_cfg_w = and(res_aligned_3, _res_cur_cfg_w_T_6) @[PMP.scala 184:26]
    node _res_cur_cfg_x_T_6 = or(io_pmp_4_cfg_x, res_ignore_3) @[PMP.scala 185:40]
    node res_cur_3_cfg_x = and(res_aligned_3, _res_cur_cfg_x_T_6) @[PMP.scala 185:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_179_cfg_x = mux(res_hit_3, res_cur_3_cfg_x, _res_T_134_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_179_cfg_w = mux(res_hit_3, res_cur_3_cfg_w, _res_T_134_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_179_cfg_r = mux(res_hit_3, res_cur_3_cfg_r, _res_T_134_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_56 = bits(io_pmp_3_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbMask_4 = or(io_pmp_3_mask, _GEN_0) @[PMP.scala 70:26]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbMatch_T_46 = shr(io_pmp_3_mask, 3) @[PMP.scala 71:72]
    skip
    node _res_hit_msbMatch_T_48 = not(_res_hit_msbMatch_T_46) @[PMP.scala 65:54]
    node _res_hit_msbMatch_T_49 = and(_res_hit_msbsEqual_T_48, _res_hit_msbMatch_T_48) @[PMP.scala 65:52]
    node res_hit_msbMatch_4 = eq(_res_hit_msbMatch_T_49, UInt<29>("h0")) @[PMP.scala 65:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbMatch_T_46 = bits(res_hit_lsbMask_4, 2, 0) @[PMP.scala 72:80]
    node _res_hit_lsbMatch_T_47 = xor(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_48) @[PMP.scala 65:47]
    node _res_hit_lsbMatch_T_48 = not(_res_hit_lsbMatch_T_46) @[PMP.scala 65:54]
    node _res_hit_lsbMatch_T_49 = and(_res_hit_lsbMatch_T_47, _res_hit_lsbMatch_T_48) @[PMP.scala 65:52]
    node res_hit_lsbMatch_4 = eq(_res_hit_lsbMatch_T_49, UInt<3>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_57 = and(res_hit_msbMatch_4, res_hit_lsbMatch_4) @[PMP.scala 73:16]
    node _res_hit_T_58 = bits(io_pmp_3_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsLess_T_49 = shl(io_pmp_2_addr, 2) @[PMP.scala 62:36]
    node _res_hit_msbsLess_T_50 = not(_res_hit_msbsLess_T_49) @[PMP.scala 62:29]
    node _res_hit_msbsLess_T_51 = or(_res_hit_msbsLess_T_50, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_msbsLess_T_52 = not(_res_hit_msbsLess_T_51) @[PMP.scala 62:27]
    node _res_hit_msbsLess_T_53 = shr(_res_hit_msbsLess_T_52, 3) @[PMP.scala 82:52]
    node res_hit_msbsLess_8 = lt(_res_hit_msbMatch_T, _res_hit_msbsLess_T_53) @[PMP.scala 82:39]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsEqual_T_62 = xor(_res_hit_msbMatch_T, _res_hit_msbsLess_T_53) @[PMP.scala 83:41]
    node res_hit_msbsEqual_8 = eq(_res_hit_msbsEqual_T_62, UInt<29>("h0")) @[PMP.scala 83:69]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbsLess_T_62 = bits(_res_hit_msbsLess_T_52, 2, 0) @[PMP.scala 84:64]
    node res_hit_lsbsLess_8 = lt(_res_hit_lsbsLess_T_1, _res_hit_lsbsLess_T_62) @[PMP.scala 84:53]
    node _res_hit_T_63 = and(res_hit_msbsEqual_8, res_hit_lsbsLess_8) @[PMP.scala 85:30]
    node _res_hit_T_64 = or(res_hit_msbsLess_8, _res_hit_T_63) @[PMP.scala 85:16]
    node _res_hit_T_65 = not(_res_hit_T_64) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbsLess_9 = lt(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_48) @[PMP.scala 84:53]
    node _res_hit_T_66 = and(res_hit_msbsEqual_6, res_hit_lsbsLess_9) @[PMP.scala 85:30]
    node _res_hit_T_67 = or(res_hit_msbsLess_6, _res_hit_T_66) @[PMP.scala 85:16]
    node _res_hit_T_68 = and(_res_hit_T_65, _res_hit_T_67) @[PMP.scala 96:48]
    node _res_hit_T_69 = and(_res_hit_T_58, _res_hit_T_68) @[PMP.scala 134:61]
    node res_hit_4 = mux(_res_hit_T_56, _res_hit_T_57, _res_hit_T_69) @[PMP.scala 134:8]
    node _res_ignore_T_4 = not(io_pmp_3_cfg_l) @[PMP.scala 165:29]
    node res_ignore_4 = and(default, _res_ignore_T_4) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesLowerBound_T_83 = and(_res_hit_lsbsLess_T_62, _res_aligned_straddlesLowerBound_T_14) @[PMP.scala 125:123]
    node _res_aligned_straddlesLowerBound_T_84 = neq(_res_aligned_straddlesLowerBound_T_83, UInt<3>("h0")) @[PMP.scala 125:145]
    node res_aligned_straddlesLowerBound_4 = and(res_hit_msbsEqual_8, _res_aligned_straddlesLowerBound_T_84) @[PMP.scala 125:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesUpperBound_T_83 = and(_res_hit_lsbsLess_T_48, _res_hit_lsbsLess_T_1) @[PMP.scala 126:113]
    node _res_aligned_straddlesUpperBound_T_84 = neq(_res_aligned_straddlesUpperBound_T_83, UInt<3>("h0")) @[PMP.scala 126:146]
    node res_aligned_straddlesUpperBound_4 = and(res_hit_msbsEqual_6, _res_aligned_straddlesUpperBound_T_84) @[PMP.scala 126:83]
    node _res_aligned_rangeAligned_T_4 = or(res_aligned_straddlesLowerBound_4, res_aligned_straddlesUpperBound_4) @[PMP.scala 127:46]
    node res_aligned_rangeAligned_4 = not(_res_aligned_rangeAligned_T_4) @[PMP.scala 127:24]
    node _res_aligned_pow2Aligned_T_12 = bits(io_pmp_3_mask, 2, 0) @[PMP.scala 128:39]
    node _res_aligned_pow2Aligned_T_13 = not(_res_aligned_pow2Aligned_T_12) @[PMP.scala 128:34]
    node _res_aligned_pow2Aligned_T_14 = and(_res_hit_lsbMask_T_3, _res_aligned_pow2Aligned_T_13) @[PMP.scala 128:32]
    node res_aligned_pow2Aligned_4 = eq(_res_aligned_pow2Aligned_T_14, UInt<3>("h0")) @[PMP.scala 128:57]
    skip
    node res_aligned_4 = mux(_res_hit_T_56, res_aligned_pow2Aligned_4, res_aligned_rangeAligned_4) @[PMP.scala 129:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_cur_cfg_r_T_8 = or(io_pmp_3_cfg_r, res_ignore_4) @[PMP.scala 183:40]
    node res_cur_4_cfg_r = and(res_aligned_4, _res_cur_cfg_r_T_8) @[PMP.scala 183:26]
    node _res_cur_cfg_w_T_8 = or(io_pmp_3_cfg_w, res_ignore_4) @[PMP.scala 184:40]
    node res_cur_4_cfg_w = and(res_aligned_4, _res_cur_cfg_w_T_8) @[PMP.scala 184:26]
    node _res_cur_cfg_x_T_8 = or(io_pmp_3_cfg_x, res_ignore_4) @[PMP.scala 185:40]
    node res_cur_4_cfg_x = and(res_aligned_4, _res_cur_cfg_x_T_8) @[PMP.scala 185:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_224_cfg_x = mux(res_hit_4, res_cur_4_cfg_x, _res_T_179_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_224_cfg_w = mux(res_hit_4, res_cur_4_cfg_w, _res_T_179_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_224_cfg_r = mux(res_hit_4, res_cur_4_cfg_r, _res_T_179_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_70 = bits(io_pmp_2_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbMask_5 = or(io_pmp_2_mask, _GEN_0) @[PMP.scala 70:26]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbMatch_T_56 = shr(io_pmp_2_mask, 3) @[PMP.scala 71:72]
    skip
    node _res_hit_msbMatch_T_58 = not(_res_hit_msbMatch_T_56) @[PMP.scala 65:54]
    node _res_hit_msbMatch_T_59 = and(_res_hit_msbsEqual_T_62, _res_hit_msbMatch_T_58) @[PMP.scala 65:52]
    node res_hit_msbMatch_5 = eq(_res_hit_msbMatch_T_59, UInt<29>("h0")) @[PMP.scala 65:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbMatch_T_56 = bits(res_hit_lsbMask_5, 2, 0) @[PMP.scala 72:80]
    node _res_hit_lsbMatch_T_57 = xor(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_62) @[PMP.scala 65:47]
    node _res_hit_lsbMatch_T_58 = not(_res_hit_lsbMatch_T_56) @[PMP.scala 65:54]
    node _res_hit_lsbMatch_T_59 = and(_res_hit_lsbMatch_T_57, _res_hit_lsbMatch_T_58) @[PMP.scala 65:52]
    node res_hit_lsbMatch_5 = eq(_res_hit_lsbMatch_T_59, UInt<3>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_71 = and(res_hit_msbMatch_5, res_hit_lsbMatch_5) @[PMP.scala 73:16]
    node _res_hit_T_72 = bits(io_pmp_2_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsLess_T_61 = shl(io_pmp_1_addr, 2) @[PMP.scala 62:36]
    node _res_hit_msbsLess_T_62 = not(_res_hit_msbsLess_T_61) @[PMP.scala 62:29]
    node _res_hit_msbsLess_T_63 = or(_res_hit_msbsLess_T_62, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_msbsLess_T_64 = not(_res_hit_msbsLess_T_63) @[PMP.scala 62:27]
    node _res_hit_msbsLess_T_65 = shr(_res_hit_msbsLess_T_64, 3) @[PMP.scala 82:52]
    node res_hit_msbsLess_10 = lt(_res_hit_msbMatch_T, _res_hit_msbsLess_T_65) @[PMP.scala 82:39]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsEqual_T_76 = xor(_res_hit_msbMatch_T, _res_hit_msbsLess_T_65) @[PMP.scala 83:41]
    node res_hit_msbsEqual_10 = eq(_res_hit_msbsEqual_T_76, UInt<29>("h0")) @[PMP.scala 83:69]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbsLess_T_76 = bits(_res_hit_msbsLess_T_64, 2, 0) @[PMP.scala 84:64]
    node res_hit_lsbsLess_10 = lt(_res_hit_lsbsLess_T_1, _res_hit_lsbsLess_T_76) @[PMP.scala 84:53]
    node _res_hit_T_77 = and(res_hit_msbsEqual_10, res_hit_lsbsLess_10) @[PMP.scala 85:30]
    node _res_hit_T_78 = or(res_hit_msbsLess_10, _res_hit_T_77) @[PMP.scala 85:16]
    node _res_hit_T_79 = not(_res_hit_T_78) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbsLess_11 = lt(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_62) @[PMP.scala 84:53]
    node _res_hit_T_80 = and(res_hit_msbsEqual_8, res_hit_lsbsLess_11) @[PMP.scala 85:30]
    node _res_hit_T_81 = or(res_hit_msbsLess_8, _res_hit_T_80) @[PMP.scala 85:16]
    node _res_hit_T_82 = and(_res_hit_T_79, _res_hit_T_81) @[PMP.scala 96:48]
    node _res_hit_T_83 = and(_res_hit_T_72, _res_hit_T_82) @[PMP.scala 134:61]
    node res_hit_5 = mux(_res_hit_T_70, _res_hit_T_71, _res_hit_T_83) @[PMP.scala 134:8]
    node _res_ignore_T_5 = not(io_pmp_2_cfg_l) @[PMP.scala 165:29]
    node res_ignore_5 = and(default, _res_ignore_T_5) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesLowerBound_T_100 = and(_res_hit_lsbsLess_T_76, _res_aligned_straddlesLowerBound_T_14) @[PMP.scala 125:123]
    node _res_aligned_straddlesLowerBound_T_101 = neq(_res_aligned_straddlesLowerBound_T_100, UInt<3>("h0")) @[PMP.scala 125:145]
    node res_aligned_straddlesLowerBound_5 = and(res_hit_msbsEqual_10, _res_aligned_straddlesLowerBound_T_101) @[PMP.scala 125:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesUpperBound_T_100 = and(_res_hit_lsbsLess_T_62, _res_hit_lsbsLess_T_1) @[PMP.scala 126:113]
    node _res_aligned_straddlesUpperBound_T_101 = neq(_res_aligned_straddlesUpperBound_T_100, UInt<3>("h0")) @[PMP.scala 126:146]
    node res_aligned_straddlesUpperBound_5 = and(res_hit_msbsEqual_8, _res_aligned_straddlesUpperBound_T_101) @[PMP.scala 126:83]
    node _res_aligned_rangeAligned_T_5 = or(res_aligned_straddlesLowerBound_5, res_aligned_straddlesUpperBound_5) @[PMP.scala 127:46]
    node res_aligned_rangeAligned_5 = not(_res_aligned_rangeAligned_T_5) @[PMP.scala 127:24]
    node _res_aligned_pow2Aligned_T_15 = bits(io_pmp_2_mask, 2, 0) @[PMP.scala 128:39]
    node _res_aligned_pow2Aligned_T_16 = not(_res_aligned_pow2Aligned_T_15) @[PMP.scala 128:34]
    node _res_aligned_pow2Aligned_T_17 = and(_res_hit_lsbMask_T_3, _res_aligned_pow2Aligned_T_16) @[PMP.scala 128:32]
    node res_aligned_pow2Aligned_5 = eq(_res_aligned_pow2Aligned_T_17, UInt<3>("h0")) @[PMP.scala 128:57]
    skip
    node res_aligned_5 = mux(_res_hit_T_70, res_aligned_pow2Aligned_5, res_aligned_rangeAligned_5) @[PMP.scala 129:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_cur_cfg_r_T_10 = or(io_pmp_2_cfg_r, res_ignore_5) @[PMP.scala 183:40]
    node res_cur_5_cfg_r = and(res_aligned_5, _res_cur_cfg_r_T_10) @[PMP.scala 183:26]
    node _res_cur_cfg_w_T_10 = or(io_pmp_2_cfg_w, res_ignore_5) @[PMP.scala 184:40]
    node res_cur_5_cfg_w = and(res_aligned_5, _res_cur_cfg_w_T_10) @[PMP.scala 184:26]
    node _res_cur_cfg_x_T_10 = or(io_pmp_2_cfg_x, res_ignore_5) @[PMP.scala 185:40]
    node res_cur_5_cfg_x = and(res_aligned_5, _res_cur_cfg_x_T_10) @[PMP.scala 185:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_269_cfg_x = mux(res_hit_5, res_cur_5_cfg_x, _res_T_224_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_269_cfg_w = mux(res_hit_5, res_cur_5_cfg_w, _res_T_224_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_269_cfg_r = mux(res_hit_5, res_cur_5_cfg_r, _res_T_224_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_84 = bits(io_pmp_1_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbMask_6 = or(io_pmp_1_mask, _GEN_0) @[PMP.scala 70:26]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbMatch_T_66 = shr(io_pmp_1_mask, 3) @[PMP.scala 71:72]
    skip
    node _res_hit_msbMatch_T_68 = not(_res_hit_msbMatch_T_66) @[PMP.scala 65:54]
    node _res_hit_msbMatch_T_69 = and(_res_hit_msbsEqual_T_76, _res_hit_msbMatch_T_68) @[PMP.scala 65:52]
    node res_hit_msbMatch_6 = eq(_res_hit_msbMatch_T_69, UInt<29>("h0")) @[PMP.scala 65:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbMatch_T_66 = bits(res_hit_lsbMask_6, 2, 0) @[PMP.scala 72:80]
    node _res_hit_lsbMatch_T_67 = xor(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_76) @[PMP.scala 65:47]
    node _res_hit_lsbMatch_T_68 = not(_res_hit_lsbMatch_T_66) @[PMP.scala 65:54]
    node _res_hit_lsbMatch_T_69 = and(_res_hit_lsbMatch_T_67, _res_hit_lsbMatch_T_68) @[PMP.scala 65:52]
    node res_hit_lsbMatch_6 = eq(_res_hit_lsbMatch_T_69, UInt<3>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_85 = and(res_hit_msbMatch_6, res_hit_lsbMatch_6) @[PMP.scala 73:16]
    node _res_hit_T_86 = bits(io_pmp_1_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsLess_T_73 = shl(io_pmp_0_addr, 2) @[PMP.scala 62:36]
    node _res_hit_msbsLess_T_74 = not(_res_hit_msbsLess_T_73) @[PMP.scala 62:29]
    node _res_hit_msbsLess_T_75 = or(_res_hit_msbsLess_T_74, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_msbsLess_T_76 = not(_res_hit_msbsLess_T_75) @[PMP.scala 62:27]
    node _res_hit_msbsLess_T_77 = shr(_res_hit_msbsLess_T_76, 3) @[PMP.scala 82:52]
    node res_hit_msbsLess_12 = lt(_res_hit_msbMatch_T, _res_hit_msbsLess_T_77) @[PMP.scala 82:39]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbsEqual_T_90 = xor(_res_hit_msbMatch_T, _res_hit_msbsLess_T_77) @[PMP.scala 83:41]
    node res_hit_msbsEqual_12 = eq(_res_hit_msbsEqual_T_90, UInt<29>("h0")) @[PMP.scala 83:69]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbsLess_T_90 = bits(_res_hit_msbsLess_T_76, 2, 0) @[PMP.scala 84:64]
    node res_hit_lsbsLess_12 = lt(_res_hit_lsbsLess_T_1, _res_hit_lsbsLess_T_90) @[PMP.scala 84:53]
    node _res_hit_T_91 = and(res_hit_msbsEqual_12, res_hit_lsbsLess_12) @[PMP.scala 85:30]
    node _res_hit_T_92 = or(res_hit_msbsLess_12, _res_hit_T_91) @[PMP.scala 85:16]
    node _res_hit_T_93 = not(_res_hit_T_92) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbsLess_13 = lt(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_76) @[PMP.scala 84:53]
    node _res_hit_T_94 = and(res_hit_msbsEqual_10, res_hit_lsbsLess_13) @[PMP.scala 85:30]
    node _res_hit_T_95 = or(res_hit_msbsLess_10, _res_hit_T_94) @[PMP.scala 85:16]
    node _res_hit_T_96 = and(_res_hit_T_93, _res_hit_T_95) @[PMP.scala 96:48]
    node _res_hit_T_97 = and(_res_hit_T_86, _res_hit_T_96) @[PMP.scala 134:61]
    node res_hit_6 = mux(_res_hit_T_84, _res_hit_T_85, _res_hit_T_97) @[PMP.scala 134:8]
    node _res_ignore_T_6 = not(io_pmp_1_cfg_l) @[PMP.scala 165:29]
    node res_ignore_6 = and(default, _res_ignore_T_6) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesLowerBound_T_117 = and(_res_hit_lsbsLess_T_90, _res_aligned_straddlesLowerBound_T_14) @[PMP.scala 125:123]
    node _res_aligned_straddlesLowerBound_T_118 = neq(_res_aligned_straddlesLowerBound_T_117, UInt<3>("h0")) @[PMP.scala 125:145]
    node res_aligned_straddlesLowerBound_6 = and(res_hit_msbsEqual_12, _res_aligned_straddlesLowerBound_T_118) @[PMP.scala 125:88]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesUpperBound_T_117 = and(_res_hit_lsbsLess_T_76, _res_hit_lsbsLess_T_1) @[PMP.scala 126:113]
    node _res_aligned_straddlesUpperBound_T_118 = neq(_res_aligned_straddlesUpperBound_T_117, UInt<3>("h0")) @[PMP.scala 126:146]
    node res_aligned_straddlesUpperBound_6 = and(res_hit_msbsEqual_10, _res_aligned_straddlesUpperBound_T_118) @[PMP.scala 126:83]
    node _res_aligned_rangeAligned_T_6 = or(res_aligned_straddlesLowerBound_6, res_aligned_straddlesUpperBound_6) @[PMP.scala 127:46]
    node res_aligned_rangeAligned_6 = not(_res_aligned_rangeAligned_T_6) @[PMP.scala 127:24]
    node _res_aligned_pow2Aligned_T_18 = bits(io_pmp_1_mask, 2, 0) @[PMP.scala 128:39]
    node _res_aligned_pow2Aligned_T_19 = not(_res_aligned_pow2Aligned_T_18) @[PMP.scala 128:34]
    node _res_aligned_pow2Aligned_T_20 = and(_res_hit_lsbMask_T_3, _res_aligned_pow2Aligned_T_19) @[PMP.scala 128:32]
    node res_aligned_pow2Aligned_6 = eq(_res_aligned_pow2Aligned_T_20, UInt<3>("h0")) @[PMP.scala 128:57]
    skip
    node res_aligned_6 = mux(_res_hit_T_84, res_aligned_pow2Aligned_6, res_aligned_rangeAligned_6) @[PMP.scala 129:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_cur_cfg_r_T_12 = or(io_pmp_1_cfg_r, res_ignore_6) @[PMP.scala 183:40]
    node res_cur_6_cfg_r = and(res_aligned_6, _res_cur_cfg_r_T_12) @[PMP.scala 183:26]
    node _res_cur_cfg_w_T_12 = or(io_pmp_1_cfg_w, res_ignore_6) @[PMP.scala 184:40]
    node res_cur_6_cfg_w = and(res_aligned_6, _res_cur_cfg_w_T_12) @[PMP.scala 184:26]
    node _res_cur_cfg_x_T_12 = or(io_pmp_1_cfg_x, res_ignore_6) @[PMP.scala 185:40]
    node res_cur_6_cfg_x = and(res_aligned_6, _res_cur_cfg_x_T_12) @[PMP.scala 185:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_314_cfg_x = mux(res_hit_6, res_cur_6_cfg_x, _res_T_269_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_314_cfg_w = mux(res_hit_6, res_cur_6_cfg_w, _res_T_269_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_314_cfg_r = mux(res_hit_6, res_cur_6_cfg_r, _res_T_269_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_98 = bits(io_pmp_0_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbMask_7 = or(io_pmp_0_mask, _GEN_0) @[PMP.scala 70:26]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_msbMatch_T_76 = shr(io_pmp_0_mask, 3) @[PMP.scala 71:72]
    skip
    node _res_hit_msbMatch_T_78 = not(_res_hit_msbMatch_T_76) @[PMP.scala 65:54]
    node _res_hit_msbMatch_T_79 = and(_res_hit_msbsEqual_T_90, _res_hit_msbMatch_T_78) @[PMP.scala 65:52]
    node res_hit_msbMatch_7 = eq(_res_hit_msbMatch_T_79, UInt<29>("h0")) @[PMP.scala 65:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_lsbMatch_T_76 = bits(res_hit_lsbMask_7, 2, 0) @[PMP.scala 72:80]
    node _res_hit_lsbMatch_T_77 = xor(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_90) @[PMP.scala 65:47]
    node _res_hit_lsbMatch_T_78 = not(_res_hit_lsbMatch_T_76) @[PMP.scala 65:54]
    node _res_hit_lsbMatch_T_79 = and(_res_hit_lsbMatch_T_77, _res_hit_lsbMatch_T_78) @[PMP.scala 65:52]
    node res_hit_lsbMatch_7 = eq(_res_hit_lsbMatch_T_79, UInt<3>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_99 = and(res_hit_msbMatch_7, res_hit_lsbMatch_7) @[PMP.scala 73:16]
    node _res_hit_T_100 = bits(io_pmp_0_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_hit_lsbsLess_15 = lt(_res_hit_lsbMatch_T, _res_hit_lsbsLess_T_90) @[PMP.scala 84:53]
    node _res_hit_T_108 = and(res_hit_msbsEqual_12, res_hit_lsbsLess_15) @[PMP.scala 85:30]
    node _res_hit_T_109 = or(res_hit_msbsLess_12, _res_hit_T_108) @[PMP.scala 85:16]
    skip
    node _res_hit_T_111 = and(_res_hit_T_100, _res_hit_T_109) @[PMP.scala 134:61]
    node res_hit_7 = mux(_res_hit_T_98, _res_hit_T_99, _res_hit_T_111) @[PMP.scala 134:8]
    node _res_ignore_T_7 = not(io_pmp_0_cfg_l) @[PMP.scala 165:29]
    node res_ignore_7 = and(default, _res_ignore_T_7) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_aligned_straddlesUpperBound_T_134 = and(_res_hit_lsbsLess_T_90, _res_hit_lsbsLess_T_1) @[PMP.scala 126:113]
    node _res_aligned_straddlesUpperBound_T_135 = neq(_res_aligned_straddlesUpperBound_T_134, UInt<3>("h0")) @[PMP.scala 126:146]
    node res_aligned_straddlesUpperBound_7 = and(res_hit_msbsEqual_12, _res_aligned_straddlesUpperBound_T_135) @[PMP.scala 126:83]
    skip
    node res_aligned_rangeAligned_7 = not(res_aligned_straddlesUpperBound_7) @[PMP.scala 127:24]
    node _res_aligned_pow2Aligned_T_21 = bits(io_pmp_0_mask, 2, 0) @[PMP.scala 128:39]
    node _res_aligned_pow2Aligned_T_22 = not(_res_aligned_pow2Aligned_T_21) @[PMP.scala 128:34]
    node _res_aligned_pow2Aligned_T_23 = and(_res_hit_lsbMask_T_3, _res_aligned_pow2Aligned_T_22) @[PMP.scala 128:32]
    node res_aligned_pow2Aligned_7 = eq(_res_aligned_pow2Aligned_T_23, UInt<3>("h0")) @[PMP.scala 128:57]
    skip
    node res_aligned_7 = mux(_res_hit_T_98, res_aligned_pow2Aligned_7, res_aligned_rangeAligned_7) @[PMP.scala 129:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_cur_cfg_r_T_14 = or(io_pmp_0_cfg_r, res_ignore_7) @[PMP.scala 183:40]
    node res_cur_7_cfg_r = and(res_aligned_7, _res_cur_cfg_r_T_14) @[PMP.scala 183:26]
    node _res_cur_cfg_w_T_14 = or(io_pmp_0_cfg_w, res_ignore_7) @[PMP.scala 184:40]
    node res_cur_7_cfg_w = and(res_aligned_7, _res_cur_cfg_w_T_14) @[PMP.scala 184:26]
    node _res_cur_cfg_x_T_14 = or(io_pmp_0_cfg_x, res_ignore_7) @[PMP.scala 185:40]
    node res_cur_7_cfg_x = and(res_aligned_7, _res_cur_cfg_x_T_14) @[PMP.scala 185:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_r <= mux(res_hit_7, res_cur_7_cfg_r, _res_T_314_cfg_r) @[PMP.scala 186:8]
    io_w <= mux(res_hit_7, res_cur_7_cfg_w, _res_T_314_cfg_w) @[PMP.scala 186:8]
    io_x <= mux(res_hit_7, res_cur_7_cfg_x, _res_T_314_cfg_x) @[PMP.scala 186:8]

  module PMPChecker_2 :
    input io_prv : UInt<2>
    input io_pmp_0_cfg_l : UInt<1>
    input io_pmp_0_cfg_a : UInt<2>
    input io_pmp_0_cfg_x : UInt<1>
    input io_pmp_0_cfg_w : UInt<1>
    input io_pmp_0_cfg_r : UInt<1>
    input io_pmp_0_addr : UInt<30>
    input io_pmp_0_mask : UInt<32>
    input io_pmp_1_cfg_l : UInt<1>
    input io_pmp_1_cfg_a : UInt<2>
    input io_pmp_1_cfg_x : UInt<1>
    input io_pmp_1_cfg_w : UInt<1>
    input io_pmp_1_cfg_r : UInt<1>
    input io_pmp_1_addr : UInt<30>
    input io_pmp_1_mask : UInt<32>
    input io_pmp_2_cfg_l : UInt<1>
    input io_pmp_2_cfg_a : UInt<2>
    input io_pmp_2_cfg_x : UInt<1>
    input io_pmp_2_cfg_w : UInt<1>
    input io_pmp_2_cfg_r : UInt<1>
    input io_pmp_2_addr : UInt<30>
    input io_pmp_2_mask : UInt<32>
    input io_pmp_3_cfg_l : UInt<1>
    input io_pmp_3_cfg_a : UInt<2>
    input io_pmp_3_cfg_x : UInt<1>
    input io_pmp_3_cfg_w : UInt<1>
    input io_pmp_3_cfg_r : UInt<1>
    input io_pmp_3_addr : UInt<30>
    input io_pmp_3_mask : UInt<32>
    input io_pmp_4_cfg_l : UInt<1>
    input io_pmp_4_cfg_a : UInt<2>
    input io_pmp_4_cfg_x : UInt<1>
    input io_pmp_4_cfg_w : UInt<1>
    input io_pmp_4_cfg_r : UInt<1>
    input io_pmp_4_addr : UInt<30>
    input io_pmp_4_mask : UInt<32>
    input io_pmp_5_cfg_l : UInt<1>
    input io_pmp_5_cfg_a : UInt<2>
    input io_pmp_5_cfg_x : UInt<1>
    input io_pmp_5_cfg_w : UInt<1>
    input io_pmp_5_cfg_r : UInt<1>
    input io_pmp_5_addr : UInt<30>
    input io_pmp_5_mask : UInt<32>
    input io_pmp_6_cfg_l : UInt<1>
    input io_pmp_6_cfg_a : UInt<2>
    input io_pmp_6_cfg_x : UInt<1>
    input io_pmp_6_cfg_w : UInt<1>
    input io_pmp_6_cfg_r : UInt<1>
    input io_pmp_6_addr : UInt<30>
    input io_pmp_6_mask : UInt<32>
    input io_pmp_7_cfg_l : UInt<1>
    input io_pmp_7_cfg_a : UInt<2>
    input io_pmp_7_cfg_x : UInt<1>
    input io_pmp_7_cfg_w : UInt<1>
    input io_pmp_7_cfg_r : UInt<1>
    input io_pmp_7_addr : UInt<30>
    input io_pmp_7_mask : UInt<32>
    input io_addr : UInt<32>
    output io_r : UInt<1>
    output io_w : UInt<1>
    output io_x : UInt<1>

    node default = gt(io_prv, UInt<2>("h1")) @[PMP.scala 157:56]
    node _res_hit_T = bits(io_pmp_7_cfg_a, 1, 1) @[PMP.scala 47:20]
    node _res_hit_T_1 = shl(io_pmp_7_addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_2 = not(_res_hit_T_1) @[PMP.scala 62:29]
    node _res_hit_T_3 = or(_res_hit_T_2, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_T_4 = not(_res_hit_T_3) @[PMP.scala 62:27]
    node _res_hit_T_5 = xor(io_addr, _res_hit_T_4) @[PMP.scala 65:47]
    node _res_hit_T_6 = not(io_pmp_7_mask) @[PMP.scala 65:54]
    node _res_hit_T_7 = and(_res_hit_T_5, _res_hit_T_6) @[PMP.scala 65:52]
    node _res_hit_T_8 = eq(_res_hit_T_7, UInt<32>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_9 = bits(io_pmp_7_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    node _res_hit_T_14 = shl(io_pmp_6_addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_15 = not(_res_hit_T_14) @[PMP.scala 62:29]
    node _res_hit_T_16 = or(_res_hit_T_15, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_T_17 = not(_res_hit_T_16) @[PMP.scala 62:27]
    node _res_hit_T_18 = lt(io_addr, _res_hit_T_17) @[PMP.scala 79:9]
    node _res_hit_T_19 = not(_res_hit_T_18) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    node _res_hit_T_24 = lt(io_addr, _res_hit_T_4) @[PMP.scala 79:9]
    node _res_hit_T_25 = and(_res_hit_T_19, _res_hit_T_24) @[PMP.scala 96:48]
    node _res_hit_T_26 = and(_res_hit_T_9, _res_hit_T_25) @[PMP.scala 134:61]
    node res_hit = mux(_res_hit_T, _res_hit_T_8, _res_hit_T_26) @[PMP.scala 134:8]
    node _res_ignore_T = not(io_pmp_7_cfg_l) @[PMP.scala 165:29]
    node res_ignore = and(default, _res_ignore_T) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_cur_cfg_r = or(io_pmp_7_cfg_r, res_ignore) @[PMP.scala 183:40]
    skip
    node res_cur_cfg_w = or(io_pmp_7_cfg_w, res_ignore) @[PMP.scala 184:40]
    skip
    node res_cur_cfg_x = or(io_pmp_7_cfg_x, res_ignore) @[PMP.scala 185:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_44_cfg_x = mux(res_hit, res_cur_cfg_x, default) @[PMP.scala 186:8]
    skip
    skip
    node _res_T_44_cfg_w = mux(res_hit, res_cur_cfg_w, default) @[PMP.scala 186:8]
    skip
    skip
    node _res_T_44_cfg_r = mux(res_hit, res_cur_cfg_r, default) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_27 = bits(io_pmp_6_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    node _res_hit_T_32 = xor(io_addr, _res_hit_T_17) @[PMP.scala 65:47]
    node _res_hit_T_33 = not(io_pmp_6_mask) @[PMP.scala 65:54]
    node _res_hit_T_34 = and(_res_hit_T_32, _res_hit_T_33) @[PMP.scala 65:52]
    node _res_hit_T_35 = eq(_res_hit_T_34, UInt<32>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_36 = bits(io_pmp_6_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    node _res_hit_T_41 = shl(io_pmp_5_addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_42 = not(_res_hit_T_41) @[PMP.scala 62:29]
    node _res_hit_T_43 = or(_res_hit_T_42, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_T_44 = not(_res_hit_T_43) @[PMP.scala 62:27]
    node _res_hit_T_45 = lt(io_addr, _res_hit_T_44) @[PMP.scala 79:9]
    node _res_hit_T_46 = not(_res_hit_T_45) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_52 = and(_res_hit_T_46, _res_hit_T_18) @[PMP.scala 96:48]
    node _res_hit_T_53 = and(_res_hit_T_36, _res_hit_T_52) @[PMP.scala 134:61]
    node res_hit_1 = mux(_res_hit_T_27, _res_hit_T_35, _res_hit_T_53) @[PMP.scala 134:8]
    node _res_ignore_T_1 = not(io_pmp_6_cfg_l) @[PMP.scala 165:29]
    node res_ignore_1 = and(default, _res_ignore_T_1) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_cur_1_cfg_r = or(io_pmp_6_cfg_r, res_ignore_1) @[PMP.scala 183:40]
    skip
    node res_cur_1_cfg_w = or(io_pmp_6_cfg_w, res_ignore_1) @[PMP.scala 184:40]
    skip
    node res_cur_1_cfg_x = or(io_pmp_6_cfg_x, res_ignore_1) @[PMP.scala 185:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_89_cfg_x = mux(res_hit_1, res_cur_1_cfg_x, _res_T_44_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_89_cfg_w = mux(res_hit_1, res_cur_1_cfg_w, _res_T_44_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_89_cfg_r = mux(res_hit_1, res_cur_1_cfg_r, _res_T_44_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_54 = bits(io_pmp_5_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    node _res_hit_T_59 = xor(io_addr, _res_hit_T_44) @[PMP.scala 65:47]
    node _res_hit_T_60 = not(io_pmp_5_mask) @[PMP.scala 65:54]
    node _res_hit_T_61 = and(_res_hit_T_59, _res_hit_T_60) @[PMP.scala 65:52]
    node _res_hit_T_62 = eq(_res_hit_T_61, UInt<32>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_63 = bits(io_pmp_5_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    node _res_hit_T_68 = shl(io_pmp_4_addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_69 = not(_res_hit_T_68) @[PMP.scala 62:29]
    node _res_hit_T_70 = or(_res_hit_T_69, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_T_71 = not(_res_hit_T_70) @[PMP.scala 62:27]
    node _res_hit_T_72 = lt(io_addr, _res_hit_T_71) @[PMP.scala 79:9]
    node _res_hit_T_73 = not(_res_hit_T_72) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_79 = and(_res_hit_T_73, _res_hit_T_45) @[PMP.scala 96:48]
    node _res_hit_T_80 = and(_res_hit_T_63, _res_hit_T_79) @[PMP.scala 134:61]
    node res_hit_2 = mux(_res_hit_T_54, _res_hit_T_62, _res_hit_T_80) @[PMP.scala 134:8]
    node _res_ignore_T_2 = not(io_pmp_5_cfg_l) @[PMP.scala 165:29]
    node res_ignore_2 = and(default, _res_ignore_T_2) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_cur_2_cfg_r = or(io_pmp_5_cfg_r, res_ignore_2) @[PMP.scala 183:40]
    skip
    node res_cur_2_cfg_w = or(io_pmp_5_cfg_w, res_ignore_2) @[PMP.scala 184:40]
    skip
    node res_cur_2_cfg_x = or(io_pmp_5_cfg_x, res_ignore_2) @[PMP.scala 185:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_134_cfg_x = mux(res_hit_2, res_cur_2_cfg_x, _res_T_89_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_134_cfg_w = mux(res_hit_2, res_cur_2_cfg_w, _res_T_89_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_134_cfg_r = mux(res_hit_2, res_cur_2_cfg_r, _res_T_89_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_81 = bits(io_pmp_4_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    node _res_hit_T_86 = xor(io_addr, _res_hit_T_71) @[PMP.scala 65:47]
    node _res_hit_T_87 = not(io_pmp_4_mask) @[PMP.scala 65:54]
    node _res_hit_T_88 = and(_res_hit_T_86, _res_hit_T_87) @[PMP.scala 65:52]
    node _res_hit_T_89 = eq(_res_hit_T_88, UInt<32>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_90 = bits(io_pmp_4_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    node _res_hit_T_95 = shl(io_pmp_3_addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_96 = not(_res_hit_T_95) @[PMP.scala 62:29]
    node _res_hit_T_97 = or(_res_hit_T_96, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_T_98 = not(_res_hit_T_97) @[PMP.scala 62:27]
    node _res_hit_T_99 = lt(io_addr, _res_hit_T_98) @[PMP.scala 79:9]
    node _res_hit_T_100 = not(_res_hit_T_99) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_106 = and(_res_hit_T_100, _res_hit_T_72) @[PMP.scala 96:48]
    node _res_hit_T_107 = and(_res_hit_T_90, _res_hit_T_106) @[PMP.scala 134:61]
    node res_hit_3 = mux(_res_hit_T_81, _res_hit_T_89, _res_hit_T_107) @[PMP.scala 134:8]
    node _res_ignore_T_3 = not(io_pmp_4_cfg_l) @[PMP.scala 165:29]
    node res_ignore_3 = and(default, _res_ignore_T_3) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_cur_3_cfg_r = or(io_pmp_4_cfg_r, res_ignore_3) @[PMP.scala 183:40]
    skip
    node res_cur_3_cfg_w = or(io_pmp_4_cfg_w, res_ignore_3) @[PMP.scala 184:40]
    skip
    node res_cur_3_cfg_x = or(io_pmp_4_cfg_x, res_ignore_3) @[PMP.scala 185:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_179_cfg_x = mux(res_hit_3, res_cur_3_cfg_x, _res_T_134_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_179_cfg_w = mux(res_hit_3, res_cur_3_cfg_w, _res_T_134_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_179_cfg_r = mux(res_hit_3, res_cur_3_cfg_r, _res_T_134_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_108 = bits(io_pmp_3_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    node _res_hit_T_113 = xor(io_addr, _res_hit_T_98) @[PMP.scala 65:47]
    node _res_hit_T_114 = not(io_pmp_3_mask) @[PMP.scala 65:54]
    node _res_hit_T_115 = and(_res_hit_T_113, _res_hit_T_114) @[PMP.scala 65:52]
    node _res_hit_T_116 = eq(_res_hit_T_115, UInt<32>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_117 = bits(io_pmp_3_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    node _res_hit_T_122 = shl(io_pmp_2_addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_123 = not(_res_hit_T_122) @[PMP.scala 62:29]
    node _res_hit_T_124 = or(_res_hit_T_123, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_T_125 = not(_res_hit_T_124) @[PMP.scala 62:27]
    node _res_hit_T_126 = lt(io_addr, _res_hit_T_125) @[PMP.scala 79:9]
    node _res_hit_T_127 = not(_res_hit_T_126) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_133 = and(_res_hit_T_127, _res_hit_T_99) @[PMP.scala 96:48]
    node _res_hit_T_134 = and(_res_hit_T_117, _res_hit_T_133) @[PMP.scala 134:61]
    node res_hit_4 = mux(_res_hit_T_108, _res_hit_T_116, _res_hit_T_134) @[PMP.scala 134:8]
    node _res_ignore_T_4 = not(io_pmp_3_cfg_l) @[PMP.scala 165:29]
    node res_ignore_4 = and(default, _res_ignore_T_4) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_cur_4_cfg_r = or(io_pmp_3_cfg_r, res_ignore_4) @[PMP.scala 183:40]
    skip
    node res_cur_4_cfg_w = or(io_pmp_3_cfg_w, res_ignore_4) @[PMP.scala 184:40]
    skip
    node res_cur_4_cfg_x = or(io_pmp_3_cfg_x, res_ignore_4) @[PMP.scala 185:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_224_cfg_x = mux(res_hit_4, res_cur_4_cfg_x, _res_T_179_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_224_cfg_w = mux(res_hit_4, res_cur_4_cfg_w, _res_T_179_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_224_cfg_r = mux(res_hit_4, res_cur_4_cfg_r, _res_T_179_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_135 = bits(io_pmp_2_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    node _res_hit_T_140 = xor(io_addr, _res_hit_T_125) @[PMP.scala 65:47]
    node _res_hit_T_141 = not(io_pmp_2_mask) @[PMP.scala 65:54]
    node _res_hit_T_142 = and(_res_hit_T_140, _res_hit_T_141) @[PMP.scala 65:52]
    node _res_hit_T_143 = eq(_res_hit_T_142, UInt<32>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_144 = bits(io_pmp_2_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    node _res_hit_T_149 = shl(io_pmp_1_addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_150 = not(_res_hit_T_149) @[PMP.scala 62:29]
    node _res_hit_T_151 = or(_res_hit_T_150, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_T_152 = not(_res_hit_T_151) @[PMP.scala 62:27]
    node _res_hit_T_153 = lt(io_addr, _res_hit_T_152) @[PMP.scala 79:9]
    node _res_hit_T_154 = not(_res_hit_T_153) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_160 = and(_res_hit_T_154, _res_hit_T_126) @[PMP.scala 96:48]
    node _res_hit_T_161 = and(_res_hit_T_144, _res_hit_T_160) @[PMP.scala 134:61]
    node res_hit_5 = mux(_res_hit_T_135, _res_hit_T_143, _res_hit_T_161) @[PMP.scala 134:8]
    node _res_ignore_T_5 = not(io_pmp_2_cfg_l) @[PMP.scala 165:29]
    node res_ignore_5 = and(default, _res_ignore_T_5) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_cur_5_cfg_r = or(io_pmp_2_cfg_r, res_ignore_5) @[PMP.scala 183:40]
    skip
    node res_cur_5_cfg_w = or(io_pmp_2_cfg_w, res_ignore_5) @[PMP.scala 184:40]
    skip
    node res_cur_5_cfg_x = or(io_pmp_2_cfg_x, res_ignore_5) @[PMP.scala 185:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_269_cfg_x = mux(res_hit_5, res_cur_5_cfg_x, _res_T_224_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_269_cfg_w = mux(res_hit_5, res_cur_5_cfg_w, _res_T_224_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_269_cfg_r = mux(res_hit_5, res_cur_5_cfg_r, _res_T_224_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_162 = bits(io_pmp_1_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    node _res_hit_T_167 = xor(io_addr, _res_hit_T_152) @[PMP.scala 65:47]
    node _res_hit_T_168 = not(io_pmp_1_mask) @[PMP.scala 65:54]
    node _res_hit_T_169 = and(_res_hit_T_167, _res_hit_T_168) @[PMP.scala 65:52]
    node _res_hit_T_170 = eq(_res_hit_T_169, UInt<32>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_171 = bits(io_pmp_1_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    node _res_hit_T_176 = shl(io_pmp_0_addr, 2) @[PMP.scala 62:36]
    node _res_hit_T_177 = not(_res_hit_T_176) @[PMP.scala 62:29]
    node _res_hit_T_178 = or(_res_hit_T_177, UInt<32>("h3")) @[PMP.scala 62:48]
    node _res_hit_T_179 = not(_res_hit_T_178) @[PMP.scala 62:27]
    node _res_hit_T_180 = lt(io_addr, _res_hit_T_179) @[PMP.scala 79:9]
    node _res_hit_T_181 = not(_res_hit_T_180) @[PMP.scala 90:5]
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_187 = and(_res_hit_T_181, _res_hit_T_153) @[PMP.scala 96:48]
    node _res_hit_T_188 = and(_res_hit_T_171, _res_hit_T_187) @[PMP.scala 134:61]
    node res_hit_6 = mux(_res_hit_T_162, _res_hit_T_170, _res_hit_T_188) @[PMP.scala 134:8]
    node _res_ignore_T_6 = not(io_pmp_1_cfg_l) @[PMP.scala 165:29]
    node res_ignore_6 = and(default, _res_ignore_T_6) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_cur_6_cfg_r = or(io_pmp_1_cfg_r, res_ignore_6) @[PMP.scala 183:40]
    skip
    node res_cur_6_cfg_w = or(io_pmp_1_cfg_w, res_ignore_6) @[PMP.scala 184:40]
    skip
    node res_cur_6_cfg_x = or(io_pmp_1_cfg_x, res_ignore_6) @[PMP.scala 185:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_T_314_cfg_x = mux(res_hit_6, res_cur_6_cfg_x, _res_T_269_cfg_x) @[PMP.scala 186:8]
    skip
    node _res_T_314_cfg_w = mux(res_hit_6, res_cur_6_cfg_w, _res_T_269_cfg_w) @[PMP.scala 186:8]
    skip
    node _res_T_314_cfg_r = mux(res_hit_6, res_cur_6_cfg_r, _res_T_269_cfg_r) @[PMP.scala 186:8]
    skip
    skip
    skip
    skip
    node _res_hit_T_189 = bits(io_pmp_0_cfg_a, 1, 1) @[PMP.scala 47:20]
    skip
    skip
    skip
    skip
    node _res_hit_T_194 = xor(io_addr, _res_hit_T_179) @[PMP.scala 65:47]
    node _res_hit_T_195 = not(io_pmp_0_mask) @[PMP.scala 65:54]
    node _res_hit_T_196 = and(_res_hit_T_194, _res_hit_T_195) @[PMP.scala 65:52]
    node _res_hit_T_197 = eq(_res_hit_T_196, UInt<32>("h0")) @[PMP.scala 65:58]
    node _res_hit_T_198 = bits(io_pmp_0_cfg_a, 0, 0) @[PMP.scala 48:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _res_hit_T_215 = and(_res_hit_T_198, _res_hit_T_180) @[PMP.scala 134:61]
    node res_hit_7 = mux(_res_hit_T_189, _res_hit_T_197, _res_hit_T_215) @[PMP.scala 134:8]
    node _res_ignore_T_7 = not(io_pmp_0_cfg_l) @[PMP.scala 165:29]
    node res_ignore_7 = and(default, _res_ignore_T_7) @[PMP.scala 165:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node res_cur_7_cfg_r = or(io_pmp_0_cfg_r, res_ignore_7) @[PMP.scala 183:40]
    skip
    node res_cur_7_cfg_w = or(io_pmp_0_cfg_w, res_ignore_7) @[PMP.scala 184:40]
    skip
    node res_cur_7_cfg_x = or(io_pmp_0_cfg_x, res_ignore_7) @[PMP.scala 185:40]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_r <= mux(res_hit_7, res_cur_7_cfg_r, _res_T_314_cfg_r) @[PMP.scala 186:8]
    io_w <= mux(res_hit_7, res_cur_7_cfg_w, _res_T_314_cfg_w) @[PMP.scala 186:8]
    io_x <= mux(res_hit_7, res_cur_7_cfg_x, _res_T_314_cfg_x) @[PMP.scala 186:8]

  module MulAddRecFNPipe :
    input clock : Clock
    input reset : UInt<1>
    input io_validin : UInt<1>
    input io_op : UInt<2>
    input io_a : UInt<33>
    input io_b : UInt<33>
    input io_c : UInt<33>
    input io_roundingMode : UInt<3>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul @[FPU.scala 648:41]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul @[FPU.scala 649:42]
    inst roundRawFNToRecFN of RoundRawFNToRecFN @[FPU.scala 676:35]
    node _mulAddResult_T = mul(mulAddRecFNToRaw_preMul.io_mulAddA, mulAddRecFNToRaw_preMul.io_mulAddB) @[FPU.scala 657:45]
    node mulAddResult = add(_mulAddResult_T, mulAddRecFNToRaw_preMul.io_mulAddC) @[FPU.scala 658:50]
    skip
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum : SInt<10>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist : UInt<5>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC : UInt<26>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg mulAddRecFNToRaw_postMul_io_mulAddResult_b : UInt<49>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_mulAddResult_b) @[Reg.scala 15:16]
    skip
    skip
    reg mulAddRecFNToRaw_postMul_io_roundingMode_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_roundingMode_b) @[Reg.scala 15:16]
    skip
    skip
    reg roundingMode_stage0_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundingMode_stage0_b) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    reg valid_stage0_v : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_stage0_v) @[Valid.scala 117:22]
    skip
    skip
    skip
    reg roundRawFNToRecFN_io_invalidExc_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_invalidExc_b) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    reg roundRawFNToRecFN_io_in_b_isNaN : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_isNaN) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_isInf : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_isInf) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_isZero : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_isZero) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_sign : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_sign) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_sExp : SInt<10>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_sExp) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_sig : UInt<27>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_sig) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg roundRawFNToRecFN_io_roundingMode_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_roundingMode_b) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out <= roundRawFNToRecFN.io_out @[FPU.scala 687:23]
    io_exceptionFlags <= roundRawFNToRecFN.io_exceptionFlags @[FPU.scala 688:23]
    skip
    mulAddRecFNToRaw_preMul.io_op <= io_op @[FPU.scala 651:35]
    mulAddRecFNToRaw_preMul.io_a <= io_a @[FPU.scala 652:35]
    mulAddRecFNToRaw_preMul.io_b <= io_b @[FPU.scala 653:35]
    mulAddRecFNToRaw_preMul.io_c <= io_c @[FPU.scala 654:35]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isSigNaNAny <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isNaNAOrB <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isInfA <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isZeroA <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isInfB <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isZeroB <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_signProd <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isNaNC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isInfC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isZeroC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_sExpSum <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_doSubMags <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_CIsDominant <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_CDom_CAlignDist <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_highAlignedSigC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_bit0AlignedSigC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_mulAddResult <= mulAddRecFNToRaw_postMul_io_mulAddResult_b @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_roundingMode <= mulAddRecFNToRaw_postMul_io_roundingMode_b @[Valid.scala 112:21 114:16]
    skip
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isSigNaNAny, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isNaNAOrB, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isInfA, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isZeroA, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isInfB, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isZeroB, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_signProd, mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isNaNC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isInfC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isZeroC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_sExpSum, mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_doSubMags, mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_CIsDominant, mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_CDom_CAlignDist, mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_highAlignedSigC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_bit0AlignedSigC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC) @[Reg.scala 15:16 16:{19,23}]
    skip
    mulAddRecFNToRaw_postMul_io_mulAddResult_b <= mux(io_validin, mulAddResult, mulAddRecFNToRaw_postMul_io_mulAddResult_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    mulAddRecFNToRaw_postMul_io_roundingMode_b <= mux(io_validin, io_roundingMode, mulAddRecFNToRaw_postMul_io_roundingMode_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    roundingMode_stage0_b <= mux(io_validin, io_roundingMode, roundingMode_stage0_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    valid_stage0_v <= mux(reset, UInt<1>("h0"), io_validin) @[Valid.scala 117:{22,22,22}]
    skip
    roundRawFNToRecFN.io_invalidExc <= roundRawFNToRecFN_io_invalidExc_b @[Valid.scala 112:21 114:16]
    skip
    roundRawFNToRecFN.io_in_isNaN <= roundRawFNToRecFN_io_in_b_isNaN @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_isInf <= roundRawFNToRecFN_io_in_b_isInf @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_isZero <= roundRawFNToRecFN_io_in_b_isZero @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_sign <= roundRawFNToRecFN_io_in_b_sign @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_sExp <= roundRawFNToRecFN_io_in_b_sExp @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_sig <= roundRawFNToRecFN_io_in_b_sig @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_roundingMode <= roundRawFNToRecFN_io_roundingMode_b @[Valid.scala 112:21 114:16]
    skip
    skip
    roundRawFNToRecFN_io_invalidExc_b <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_invalidExc, roundRawFNToRecFN_io_invalidExc_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    roundRawFNToRecFN_io_in_b_isNaN <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_isNaN, roundRawFNToRecFN_io_in_b_isNaN) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_isInf <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_isInf, roundRawFNToRecFN_io_in_b_isInf) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_isZero <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_isZero, roundRawFNToRecFN_io_in_b_isZero) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_sign <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_sign, roundRawFNToRecFN_io_in_b_sign) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_sExp <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_sExp, roundRawFNToRecFN_io_in_b_sExp) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_sig <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_sig, roundRawFNToRecFN_io_in_b_sig) @[Reg.scala 15:16 16:{19,23}]
    skip
    roundRawFNToRecFN_io_roundingMode_b <= mux(valid_stage0_v, roundingMode_stage0_b, roundRawFNToRecFN_io_roundingMode_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    skip
    skip

  module CompareRecFN :
    input io_a : UInt<65>
    input io_b : UInt<65>
    input io_signaling : UInt<1>
    output io_lt : UInt<1>
    output io_eq : UInt<1>
    output io_exceptionFlags : UInt<5>

    node rawA_exp = bits(io_a, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawA_isZero_T = bits(rawA_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawA_isZero = eq(_rawA_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawA_isSpecial_T = bits(rawA_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawA_isSpecial = eq(_rawA_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawA_out_isNaN_T = bits(rawA_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node rawA__isNaN = and(rawA_isSpecial, _rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawA_out_isInf_T_1 = not(_rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    node rawA__isInf = and(rawA_isSpecial, _rawA_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    node rawA__sign = bits(io_a, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    node rawA__sExp = cvt(rawA_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawA_out_sig_hi_lo = not(rawA_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawA_out_sig_lo = bits(io_a, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawA_out_sig_hi = cat(UInt<1>("h0"), rawA_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawA__sig = cat(rawA_out_sig_hi, rawA_out_sig_lo) @[Cat.scala 30:58]
    node rawB_exp = bits(io_b, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawB_isZero_T = bits(rawB_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawB_isZero = eq(_rawB_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawB_isSpecial_T = bits(rawB_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawB_isSpecial = eq(_rawB_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawB_out_isNaN_T = bits(rawB_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node rawB__isNaN = and(rawB_isSpecial, _rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawB_out_isInf_T_1 = not(_rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    node rawB__isInf = and(rawB_isSpecial, _rawB_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    node rawB__sign = bits(io_b, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    node rawB__sExp = cvt(rawB_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawB_out_sig_hi_lo = not(rawB_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawB_out_sig_lo = bits(io_b, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawB_out_sig_hi = cat(UInt<1>("h0"), rawB_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawB__sig = cat(rawB_out_sig_hi, rawB_out_sig_lo) @[Cat.scala 30:58]
    skip
    node _ordered_T = not(rawA__isNaN) @[CompareRecFN.scala 57:19]
    skip
    node _ordered_T_1 = not(rawB__isNaN) @[CompareRecFN.scala 57:35]
    node ordered = and(_ordered_T, _ordered_T_1) @[CompareRecFN.scala 57:32]
    skip
    skip
    node bothInfs = and(rawA__isInf, rawB__isInf) @[CompareRecFN.scala 58:33]
    skip
    skip
    node bothZeros = and(rawA_isZero, rawB_isZero) @[CompareRecFN.scala 59:33]
    skip
    skip
    node eqExps = eq(rawA__sExp, rawB__sExp) @[CompareRecFN.scala 60:29]
    node _common_ltMags_T = lt(rawA__sExp, rawB__sExp) @[CompareRecFN.scala 62:20]
    skip
    skip
    node _common_ltMags_T_1 = lt(rawA__sig, rawB__sig) @[CompareRecFN.scala 62:57]
    node _common_ltMags_T_2 = and(eqExps, _common_ltMags_T_1) @[CompareRecFN.scala 62:44]
    node common_ltMags = or(_common_ltMags_T, _common_ltMags_T_2) @[CompareRecFN.scala 62:33]
    node _common_eqMags_T = eq(rawA__sig, rawB__sig) @[CompareRecFN.scala 63:45]
    node common_eqMags = and(eqExps, _common_eqMags_T) @[CompareRecFN.scala 63:32]
    node _ordered_lt_T = not(bothZeros) @[CompareRecFN.scala 66:9]
    skip
    node _ordered_lt_T_1 = not(rawB__sign) @[CompareRecFN.scala 67:28]
    skip
    node _ordered_lt_T_2 = and(rawA__sign, _ordered_lt_T_1) @[CompareRecFN.scala 67:25]
    node _ordered_lt_T_3 = not(bothInfs) @[CompareRecFN.scala 68:19]
    node _ordered_lt_T_4 = not(common_ltMags) @[CompareRecFN.scala 69:38]
    node _ordered_lt_T_5 = and(rawA__sign, _ordered_lt_T_4) @[CompareRecFN.scala 69:35]
    node _ordered_lt_T_6 = not(common_eqMags) @[CompareRecFN.scala 69:57]
    node _ordered_lt_T_7 = and(_ordered_lt_T_5, _ordered_lt_T_6) @[CompareRecFN.scala 69:54]
    skip
    node _ordered_lt_T_9 = and(_ordered_lt_T_1, common_ltMags) @[CompareRecFN.scala 70:41]
    node _ordered_lt_T_10 = or(_ordered_lt_T_7, _ordered_lt_T_9) @[CompareRecFN.scala 69:74]
    node _ordered_lt_T_11 = and(_ordered_lt_T_3, _ordered_lt_T_10) @[CompareRecFN.scala 68:30]
    node _ordered_lt_T_12 = or(_ordered_lt_T_2, _ordered_lt_T_11) @[CompareRecFN.scala 67:41]
    node ordered_lt = and(_ordered_lt_T, _ordered_lt_T_12) @[CompareRecFN.scala 66:21]
    node _ordered_eq_T = eq(rawA__sign, rawB__sign) @[CompareRecFN.scala 72:34]
    node _ordered_eq_T_1 = or(bothInfs, common_eqMags) @[CompareRecFN.scala 72:62]
    node _ordered_eq_T_2 = and(_ordered_eq_T, _ordered_eq_T_1) @[CompareRecFN.scala 72:49]
    node ordered_eq = or(bothZeros, _ordered_eq_T_2) @[CompareRecFN.scala 72:19]
    node _invalid_T = bits(rawA__sig, 51, 51) @[common.scala 81:56]
    node _invalid_T_1 = not(_invalid_T) @[common.scala 81:49]
    node _invalid_T_2 = and(rawA__isNaN, _invalid_T_1) @[common.scala 81:46]
    node _invalid_T_3 = bits(rawB__sig, 51, 51) @[common.scala 81:56]
    node _invalid_T_4 = not(_invalid_T_3) @[common.scala 81:49]
    node _invalid_T_5 = and(rawB__isNaN, _invalid_T_4) @[common.scala 81:46]
    node _invalid_T_6 = or(_invalid_T_2, _invalid_T_5) @[CompareRecFN.scala 75:32]
    node _invalid_T_7 = not(ordered) @[CompareRecFN.scala 76:30]
    node _invalid_T_8 = and(io_signaling, _invalid_T_7) @[CompareRecFN.scala 76:27]
    node invalid = or(_invalid_T_6, _invalid_T_8) @[CompareRecFN.scala 75:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_lt <= and(ordered, ordered_lt) @[CompareRecFN.scala 78:22]
    io_eq <= and(ordered, ordered_eq) @[CompareRecFN.scala 79:22]
    skip
    io_exceptionFlags <= cat(invalid, UInt<4>("h0")) @[Cat.scala 30:58]

  module RecFNToIN :
    input io_in : UInt<65>
    input io_roundingMode : UInt<3>
    input io_signedOut : UInt<1>
    output io_out : UInt<64>
    output io_intExceptionFlags : UInt<3>

    node rawIn_exp = bits(io_in, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawIn_isZero_T = bits(rawIn_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawIn_isZero = eq(_rawIn_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawIn_isSpecial_T = bits(rawIn_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawIn_isSpecial = eq(_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawIn_out_isNaN_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node rawIn__isNaN = and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawIn_out_isInf_T_1 = not(_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    node rawIn__isInf = and(rawIn_isSpecial, _rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    node rawIn__sign = bits(io_in, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    node rawIn__sExp = cvt(rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawIn_out_sig_hi_lo = not(rawIn_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawIn_out_sig_lo = bits(io_in, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawIn_out_sig_hi = cat(UInt<1>("h0"), rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawIn__sig = cat(rawIn_out_sig_hi, rawIn_out_sig_lo) @[Cat.scala 30:58]
    skip
    node magGeOne = bits(rawIn__sExp, 11, 11) @[RecFNToIN.scala 58:30]
    node posExp = bits(rawIn__sExp, 10, 0) @[RecFNToIN.scala 59:28]
    node _magJustBelowOne_T = not(magGeOne) @[RecFNToIN.scala 60:27]
    node _magJustBelowOne_T_1 = andr(posExp) @[RecFNToIN.scala 60:47]
    node magJustBelowOne = and(_magJustBelowOne_T, _magJustBelowOne_T_1) @[RecFNToIN.scala 60:37]
    node roundingMode_near_even = eq(io_roundingMode, UInt<3>("h0")) @[RecFNToIN.scala 64:53]
    skip
    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[RecFNToIN.scala 66:53]
    node roundingMode_max = eq(io_roundingMode, UInt<3>("h3")) @[RecFNToIN.scala 67:53]
    node roundingMode_near_maxMag = eq(io_roundingMode, UInt<3>("h4")) @[RecFNToIN.scala 68:53]
    node roundingMode_odd = eq(io_roundingMode, UInt<3>("h6")) @[RecFNToIN.scala 69:53]
    skip
    node shiftedSig_lo = bits(rawIn__sig, 51, 0) @[RecFNToIN.scala 80:32]
    node _shiftedSig_T = cat(magGeOne, shiftedSig_lo) @[Cat.scala 30:58]
    node _shiftedSig_T_1 = bits(rawIn__sExp, 5, 0) @[RecFNToIN.scala 82:27]
    node _shiftedSig_T_2 = mux(magGeOne, _shiftedSig_T_1, UInt<6>("h0")) @[RecFNToIN.scala 81:16]
    node shiftedSig = dshl(_shiftedSig_T, _shiftedSig_T_2) @[RecFNToIN.scala 80:50]
    node alignedSig_hi = shr(shiftedSig, 51) @[RecFNToIN.scala 86:23]
    node _alignedSig_T = bits(shiftedSig, 50, 0) @[RecFNToIN.scala 86:51]
    node alignedSig_lo = orr(_alignedSig_T) @[RecFNToIN.scala 86:69]
    node alignedSig = cat(alignedSig_hi, alignedSig_lo) @[Cat.scala 30:58]
    node unroundedInt = shr(alignedSig, 2) @[RecFNToIN.scala 87:54]
    skip
    node _common_inexact_T = bits(alignedSig, 1, 0) @[RecFNToIN.scala 89:50]
    node _common_inexact_T_1 = orr(_common_inexact_T) @[RecFNToIN.scala 89:57]
    skip
    skip
    node common_inexact = mux(magGeOne, _common_inexact_T_1, rawIn_out_sig_hi_lo) @[RecFNToIN.scala 89:29]
    node _roundIncr_near_even_T = bits(alignedSig, 2, 1) @[RecFNToIN.scala 91:39]
    node _roundIncr_near_even_T_1 = andr(_roundIncr_near_even_T) @[RecFNToIN.scala 91:46]
    skip
    node _roundIncr_near_even_T_3 = andr(_common_inexact_T) @[RecFNToIN.scala 91:71]
    node _roundIncr_near_even_T_4 = or(_roundIncr_near_even_T_1, _roundIncr_near_even_T_3) @[RecFNToIN.scala 91:51]
    node _roundIncr_near_even_T_5 = and(magGeOne, _roundIncr_near_even_T_4) @[RecFNToIN.scala 91:25]
    skip
    skip
    node _roundIncr_near_even_T_8 = and(magJustBelowOne, _common_inexact_T_1) @[RecFNToIN.scala 92:26]
    node roundIncr_near_even = or(_roundIncr_near_even_T_5, _roundIncr_near_even_T_8) @[RecFNToIN.scala 91:78]
    node _roundIncr_near_maxMag_T = bits(alignedSig, 1, 1) @[RecFNToIN.scala 93:56]
    node _roundIncr_near_maxMag_T_1 = and(magGeOne, _roundIncr_near_maxMag_T) @[RecFNToIN.scala 93:43]
    node roundIncr_near_maxMag = or(_roundIncr_near_maxMag_T_1, magJustBelowOne) @[RecFNToIN.scala 93:61]
    node _roundIncr_T = and(roundingMode_near_even, roundIncr_near_even) @[RecFNToIN.scala 95:35]
    node _roundIncr_T_1 = and(roundingMode_near_maxMag, roundIncr_near_maxMag) @[RecFNToIN.scala 96:35]
    node _roundIncr_T_2 = or(_roundIncr_T, _roundIncr_T_1) @[RecFNToIN.scala 95:61]
    node _roundIncr_T_3 = or(roundingMode_min, roundingMode_odd) @[RecFNToIN.scala 97:28]
    skip
    node _roundIncr_T_4 = and(rawIn__sign, common_inexact) @[RecFNToIN.scala 98:26]
    node _roundIncr_T_5 = and(_roundIncr_T_3, _roundIncr_T_4) @[RecFNToIN.scala 97:49]
    node _roundIncr_T_6 = or(_roundIncr_T_2, _roundIncr_T_5) @[RecFNToIN.scala 96:61]
    node _roundIncr_T_7 = not(rawIn__sign) @[RecFNToIN.scala 99:31]
    node _roundIncr_T_8 = and(_roundIncr_T_7, common_inexact) @[RecFNToIN.scala 99:43]
    node _roundIncr_T_9 = and(roundingMode_max, _roundIncr_T_8) @[RecFNToIN.scala 99:27]
    node roundIncr = or(_roundIncr_T_6, _roundIncr_T_9) @[RecFNToIN.scala 98:46]
    node _complUnroundedInt_T = not(unroundedInt) @[RecFNToIN.scala 100:45]
    node complUnroundedInt = mux(rawIn__sign, _complUnroundedInt_T, unroundedInt) @[RecFNToIN.scala 100:32]
    node _roundedInt_T = xor(roundIncr, rawIn__sign) @[RecFNToIN.scala 102:23]
    node _roundedInt_T_1 = add(complUnroundedInt, UInt<64>("h1")) @[RecFNToIN.scala 103:31]
    node _roundedInt_T_2 = tail(_roundedInt_T_1, 1) @[RecFNToIN.scala 103:31]
    node _roundedInt_T_3 = mux(_roundedInt_T, _roundedInt_T_2, complUnroundedInt) @[RecFNToIN.scala 102:12]
    node _roundedInt_T_4 = and(roundingMode_odd, common_inexact) @[RecFNToIN.scala 105:31]
    node _GEN_0 = pad(_roundedInt_T_4, 64) @[RecFNToIN.scala 105:11]
    node roundedInt = or(_roundedInt_T_3, _GEN_0) @[RecFNToIN.scala 105:11]
    node magGeOne_atOverflowEdge = eq(posExp, UInt<11>("h3f")) @[RecFNToIN.scala 107:43]
    node _roundCarryBut2_T = bits(unroundedInt, 61, 0) @[RecFNToIN.scala 110:38]
    node _roundCarryBut2_T_1 = andr(_roundCarryBut2_T) @[RecFNToIN.scala 110:56]
    node roundCarryBut2 = and(_roundCarryBut2_T_1, roundIncr) @[RecFNToIN.scala 110:61]
    node _common_overflow_T = geq(posExp, UInt<11>("h40")) @[RecFNToIN.scala 113:21]
    node _common_overflow_T_1 = bits(unroundedInt, 62, 0) @[RecFNToIN.scala 117:42]
    node _common_overflow_T_2 = orr(_common_overflow_T_1) @[RecFNToIN.scala 117:60]
    node _common_overflow_T_3 = or(_common_overflow_T_2, roundIncr) @[RecFNToIN.scala 117:64]
    node _common_overflow_T_4 = and(magGeOne_atOverflowEdge, _common_overflow_T_3) @[RecFNToIN.scala 116:49]
    node _common_overflow_T_5 = eq(posExp, UInt<11>("h3e")) @[RecFNToIN.scala 119:38]
    node _common_overflow_T_6 = and(_common_overflow_T_5, roundCarryBut2) @[RecFNToIN.scala 119:62]
    node _common_overflow_T_7 = or(magGeOne_atOverflowEdge, _common_overflow_T_6) @[RecFNToIN.scala 118:49]
    node _common_overflow_T_8 = mux(rawIn__sign, _common_overflow_T_4, _common_overflow_T_7) @[RecFNToIN.scala 115:24]
    node _common_overflow_T_9 = bits(unroundedInt, 62, 62) @[RecFNToIN.scala 123:42]
    node _common_overflow_T_10 = and(magGeOne_atOverflowEdge, _common_overflow_T_9) @[RecFNToIN.scala 122:50]
    node _common_overflow_T_11 = and(_common_overflow_T_10, roundCarryBut2) @[RecFNToIN.scala 123:57]
    node _common_overflow_T_12 = or(rawIn__sign, _common_overflow_T_11) @[RecFNToIN.scala 121:32]
    node _common_overflow_T_13 = mux(io_signedOut, _common_overflow_T_8, _common_overflow_T_12) @[RecFNToIN.scala 114:20]
    node _common_overflow_T_14 = or(_common_overflow_T, _common_overflow_T_13) @[RecFNToIN.scala 113:40]
    node _common_overflow_T_15 = not(io_signedOut) @[RecFNToIN.scala 125:13]
    node _common_overflow_T_16 = and(_common_overflow_T_15, rawIn__sign) @[RecFNToIN.scala 125:27]
    node _common_overflow_T_17 = and(_common_overflow_T_16, roundIncr) @[RecFNToIN.scala 125:41]
    node common_overflow = mux(magGeOne, _common_overflow_T_14, _common_overflow_T_17) @[RecFNToIN.scala 112:12]
    skip
    skip
    node invalidExc = or(rawIn__isNaN, rawIn__isInf) @[RecFNToIN.scala 130:34]
    node _overflow_T = not(invalidExc) @[RecFNToIN.scala 131:20]
    node overflow = and(_overflow_T, common_overflow) @[RecFNToIN.scala 131:32]
    skip
    node _inexact_T_1 = not(common_overflow) @[RecFNToIN.scala 132:35]
    node _inexact_T_2 = and(_overflow_T, _inexact_T_1) @[RecFNToIN.scala 132:32]
    node inexact = and(_inexact_T_2, common_inexact) @[RecFNToIN.scala 132:52]
    node _excSign_T = not(rawIn__isNaN) @[RecFNToIN.scala 134:19]
    node excSign = and(_excSign_T, rawIn__sign) @[RecFNToIN.scala 134:32]
    node _excOut_T = eq(io_signedOut, excSign) @[RecFNToIN.scala 136:27]
    node _excOut_T_1 = mux(_excOut_T, UInt<64>("h8000000000000000"), UInt<64>("h0")) @[RecFNToIN.scala 136:12]
    node _excOut_T_2 = not(excSign) @[RecFNToIN.scala 140:13]
    node _excOut_T_3 = mux(_excOut_T_2, UInt<63>("h7fffffffffffffff"), UInt<63>("h0")) @[RecFNToIN.scala 140:12]
    node _GEN_1 = pad(_excOut_T_3, 64) @[RecFNToIN.scala 139:11]
    node excOut = or(_excOut_T_1, _GEN_1) @[RecFNToIN.scala 139:11]
    node _io_out_T = or(invalidExc, common_overflow) @[RecFNToIN.scala 142:30]
    skip
    node io_intExceptionFlags_hi = cat(invalidExc, overflow) @[Cat.scala 30:58]
    skip
    io_out <= mux(_io_out_T, excOut, roundedInt) @[RecFNToIN.scala 142:18]
    io_intExceptionFlags <= cat(io_intExceptionFlags_hi, inexact) @[Cat.scala 30:58]

  module RecFNToIN_1 :
    input io_in : UInt<65>
    input io_roundingMode : UInt<3>
    input io_signedOut : UInt<1>
    output io_intExceptionFlags : UInt<3>

    node rawIn_exp = bits(io_in, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawIn_isZero_T = bits(rawIn_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawIn_isZero = eq(_rawIn_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawIn_isSpecial_T = bits(rawIn_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawIn_isSpecial = eq(_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawIn_out_isNaN_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node rawIn__isNaN = and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawIn_out_isInf_T_1 = not(_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    node rawIn__isInf = and(rawIn_isSpecial, _rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    node rawIn__sign = bits(io_in, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    node rawIn__sExp = cvt(rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawIn_out_sig_hi_lo = not(rawIn_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawIn_out_sig_lo = bits(io_in, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawIn_out_sig_hi = cat(UInt<1>("h0"), rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawIn__sig = cat(rawIn_out_sig_hi, rawIn_out_sig_lo) @[Cat.scala 30:58]
    skip
    node magGeOne = bits(rawIn__sExp, 11, 11) @[RecFNToIN.scala 58:30]
    node posExp = bits(rawIn__sExp, 10, 0) @[RecFNToIN.scala 59:28]
    node _magJustBelowOne_T = not(magGeOne) @[RecFNToIN.scala 60:27]
    node _magJustBelowOne_T_1 = andr(posExp) @[RecFNToIN.scala 60:47]
    node magJustBelowOne = and(_magJustBelowOne_T, _magJustBelowOne_T_1) @[RecFNToIN.scala 60:37]
    node roundingMode_near_even = eq(io_roundingMode, UInt<3>("h0")) @[RecFNToIN.scala 64:53]
    skip
    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[RecFNToIN.scala 66:53]
    node roundingMode_max = eq(io_roundingMode, UInt<3>("h3")) @[RecFNToIN.scala 67:53]
    node roundingMode_near_maxMag = eq(io_roundingMode, UInt<3>("h4")) @[RecFNToIN.scala 68:53]
    node roundingMode_odd = eq(io_roundingMode, UInt<3>("h6")) @[RecFNToIN.scala 69:53]
    skip
    node shiftedSig_lo = bits(rawIn__sig, 51, 0) @[RecFNToIN.scala 80:32]
    node _shiftedSig_T = cat(magGeOne, shiftedSig_lo) @[Cat.scala 30:58]
    node _shiftedSig_T_1 = bits(rawIn__sExp, 4, 0) @[RecFNToIN.scala 82:27]
    node _shiftedSig_T_2 = mux(magGeOne, _shiftedSig_T_1, UInt<5>("h0")) @[RecFNToIN.scala 81:16]
    node shiftedSig = dshl(_shiftedSig_T, _shiftedSig_T_2) @[RecFNToIN.scala 80:50]
    node alignedSig_hi = shr(shiftedSig, 51) @[RecFNToIN.scala 86:23]
    node _alignedSig_T = bits(shiftedSig, 50, 0) @[RecFNToIN.scala 86:51]
    node alignedSig_lo = orr(_alignedSig_T) @[RecFNToIN.scala 86:69]
    node alignedSig = cat(alignedSig_hi, alignedSig_lo) @[Cat.scala 30:58]
    node unroundedInt = shr(alignedSig, 2) @[RecFNToIN.scala 87:54]
    skip
    node _common_inexact_T = bits(alignedSig, 1, 0) @[RecFNToIN.scala 89:50]
    node _common_inexact_T_1 = orr(_common_inexact_T) @[RecFNToIN.scala 89:57]
    skip
    skip
    node common_inexact = mux(magGeOne, _common_inexact_T_1, rawIn_out_sig_hi_lo) @[RecFNToIN.scala 89:29]
    node _roundIncr_near_even_T = bits(alignedSig, 2, 1) @[RecFNToIN.scala 91:39]
    node _roundIncr_near_even_T_1 = andr(_roundIncr_near_even_T) @[RecFNToIN.scala 91:46]
    skip
    node _roundIncr_near_even_T_3 = andr(_common_inexact_T) @[RecFNToIN.scala 91:71]
    node _roundIncr_near_even_T_4 = or(_roundIncr_near_even_T_1, _roundIncr_near_even_T_3) @[RecFNToIN.scala 91:51]
    node _roundIncr_near_even_T_5 = and(magGeOne, _roundIncr_near_even_T_4) @[RecFNToIN.scala 91:25]
    skip
    skip
    node _roundIncr_near_even_T_8 = and(magJustBelowOne, _common_inexact_T_1) @[RecFNToIN.scala 92:26]
    node roundIncr_near_even = or(_roundIncr_near_even_T_5, _roundIncr_near_even_T_8) @[RecFNToIN.scala 91:78]
    node _roundIncr_near_maxMag_T = bits(alignedSig, 1, 1) @[RecFNToIN.scala 93:56]
    node _roundIncr_near_maxMag_T_1 = and(magGeOne, _roundIncr_near_maxMag_T) @[RecFNToIN.scala 93:43]
    node roundIncr_near_maxMag = or(_roundIncr_near_maxMag_T_1, magJustBelowOne) @[RecFNToIN.scala 93:61]
    node _roundIncr_T = and(roundingMode_near_even, roundIncr_near_even) @[RecFNToIN.scala 95:35]
    node _roundIncr_T_1 = and(roundingMode_near_maxMag, roundIncr_near_maxMag) @[RecFNToIN.scala 96:35]
    node _roundIncr_T_2 = or(_roundIncr_T, _roundIncr_T_1) @[RecFNToIN.scala 95:61]
    node _roundIncr_T_3 = or(roundingMode_min, roundingMode_odd) @[RecFNToIN.scala 97:28]
    skip
    node _roundIncr_T_4 = and(rawIn__sign, common_inexact) @[RecFNToIN.scala 98:26]
    node _roundIncr_T_5 = and(_roundIncr_T_3, _roundIncr_T_4) @[RecFNToIN.scala 97:49]
    node _roundIncr_T_6 = or(_roundIncr_T_2, _roundIncr_T_5) @[RecFNToIN.scala 96:61]
    node _roundIncr_T_7 = not(rawIn__sign) @[RecFNToIN.scala 99:31]
    node _roundIncr_T_8 = and(_roundIncr_T_7, common_inexact) @[RecFNToIN.scala 99:43]
    node _roundIncr_T_9 = and(roundingMode_max, _roundIncr_T_8) @[RecFNToIN.scala 99:27]
    node roundIncr = or(_roundIncr_T_6, _roundIncr_T_9) @[RecFNToIN.scala 98:46]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node magGeOne_atOverflowEdge = eq(posExp, UInt<11>("h1f")) @[RecFNToIN.scala 107:43]
    node _roundCarryBut2_T = bits(unroundedInt, 29, 0) @[RecFNToIN.scala 110:38]
    node _roundCarryBut2_T_1 = andr(_roundCarryBut2_T) @[RecFNToIN.scala 110:56]
    node roundCarryBut2 = and(_roundCarryBut2_T_1, roundIncr) @[RecFNToIN.scala 110:61]
    node _common_overflow_T = geq(posExp, UInt<11>("h20")) @[RecFNToIN.scala 113:21]
    node _common_overflow_T_1 = bits(unroundedInt, 30, 0) @[RecFNToIN.scala 117:42]
    node _common_overflow_T_2 = orr(_common_overflow_T_1) @[RecFNToIN.scala 117:60]
    node _common_overflow_T_3 = or(_common_overflow_T_2, roundIncr) @[RecFNToIN.scala 117:64]
    node _common_overflow_T_4 = and(magGeOne_atOverflowEdge, _common_overflow_T_3) @[RecFNToIN.scala 116:49]
    node _common_overflow_T_5 = eq(posExp, UInt<11>("h1e")) @[RecFNToIN.scala 119:38]
    node _common_overflow_T_6 = and(_common_overflow_T_5, roundCarryBut2) @[RecFNToIN.scala 119:62]
    node _common_overflow_T_7 = or(magGeOne_atOverflowEdge, _common_overflow_T_6) @[RecFNToIN.scala 118:49]
    node _common_overflow_T_8 = mux(rawIn__sign, _common_overflow_T_4, _common_overflow_T_7) @[RecFNToIN.scala 115:24]
    node _common_overflow_T_9 = bits(unroundedInt, 30, 30) @[RecFNToIN.scala 123:42]
    node _common_overflow_T_10 = and(magGeOne_atOverflowEdge, _common_overflow_T_9) @[RecFNToIN.scala 122:50]
    node _common_overflow_T_11 = and(_common_overflow_T_10, roundCarryBut2) @[RecFNToIN.scala 123:57]
    node _common_overflow_T_12 = or(rawIn__sign, _common_overflow_T_11) @[RecFNToIN.scala 121:32]
    node _common_overflow_T_13 = mux(io_signedOut, _common_overflow_T_8, _common_overflow_T_12) @[RecFNToIN.scala 114:20]
    node _common_overflow_T_14 = or(_common_overflow_T, _common_overflow_T_13) @[RecFNToIN.scala 113:40]
    node _common_overflow_T_15 = not(io_signedOut) @[RecFNToIN.scala 125:13]
    node _common_overflow_T_16 = and(_common_overflow_T_15, rawIn__sign) @[RecFNToIN.scala 125:27]
    node _common_overflow_T_17 = and(_common_overflow_T_16, roundIncr) @[RecFNToIN.scala 125:41]
    node common_overflow = mux(magGeOne, _common_overflow_T_14, _common_overflow_T_17) @[RecFNToIN.scala 112:12]
    skip
    skip
    node invalidExc = or(rawIn__isNaN, rawIn__isInf) @[RecFNToIN.scala 130:34]
    node _overflow_T = not(invalidExc) @[RecFNToIN.scala 131:20]
    node overflow = and(_overflow_T, common_overflow) @[RecFNToIN.scala 131:32]
    skip
    node _inexact_T_1 = not(common_overflow) @[RecFNToIN.scala 132:35]
    node _inexact_T_2 = and(_overflow_T, _inexact_T_1) @[RecFNToIN.scala 132:32]
    node inexact = and(_inexact_T_2, common_inexact) @[RecFNToIN.scala 132:52]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_intExceptionFlags_hi = cat(invalidExc, overflow) @[Cat.scala 30:58]
    skip
    skip
    io_intExceptionFlags <= cat(io_intExceptionFlags_hi, inexact) @[Cat.scala 30:58]

  module INToRecFN :
    input io_signedIn : UInt<1>
    input io_in : UInt<64>
    input io_roundingMode : UInt<3>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_1 @[INToRecFN.scala 59:15]
    node _intAsRawFloat_sign_T = bits(io_in, 63, 63) @[rawFloatFromIN.scala 50:34]
    node intAsRawFloat_sign = and(io_signedIn, _intAsRawFloat_sign_T) @[rawFloatFromIN.scala 50:29]
    node _intAsRawFloat_absIn_T = sub(UInt<64>("h0"), io_in) @[rawFloatFromIN.scala 51:31]
    node _intAsRawFloat_absIn_T_1 = tail(_intAsRawFloat_absIn_T, 1) @[rawFloatFromIN.scala 51:31]
    node intAsRawFloat_extAbsIn_lo = mux(intAsRawFloat_sign, _intAsRawFloat_absIn_T_1, io_in) @[rawFloatFromIN.scala 51:24]
    node _intAsRawFloat_extAbsIn_T = cat(UInt<64>("h0"), intAsRawFloat_extAbsIn_lo) @[Cat.scala 30:58]
    node intAsRawFloat_extAbsIn = bits(_intAsRawFloat_extAbsIn_T, 63, 0) @[rawFloatFromIN.scala 52:56]
    skip
    node _intAsRawFloat_adjustedNormDist_T_1 = bits(intAsRawFloat_extAbsIn, 1, 1) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_2 = bits(intAsRawFloat_extAbsIn, 2, 2) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_3 = bits(intAsRawFloat_extAbsIn, 3, 3) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_4 = bits(intAsRawFloat_extAbsIn, 4, 4) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_5 = bits(intAsRawFloat_extAbsIn, 5, 5) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_6 = bits(intAsRawFloat_extAbsIn, 6, 6) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_7 = bits(intAsRawFloat_extAbsIn, 7, 7) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_8 = bits(intAsRawFloat_extAbsIn, 8, 8) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_9 = bits(intAsRawFloat_extAbsIn, 9, 9) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_10 = bits(intAsRawFloat_extAbsIn, 10, 10) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_11 = bits(intAsRawFloat_extAbsIn, 11, 11) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_12 = bits(intAsRawFloat_extAbsIn, 12, 12) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_13 = bits(intAsRawFloat_extAbsIn, 13, 13) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_14 = bits(intAsRawFloat_extAbsIn, 14, 14) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_15 = bits(intAsRawFloat_extAbsIn, 15, 15) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_16 = bits(intAsRawFloat_extAbsIn, 16, 16) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_17 = bits(intAsRawFloat_extAbsIn, 17, 17) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_18 = bits(intAsRawFloat_extAbsIn, 18, 18) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_19 = bits(intAsRawFloat_extAbsIn, 19, 19) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_20 = bits(intAsRawFloat_extAbsIn, 20, 20) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_21 = bits(intAsRawFloat_extAbsIn, 21, 21) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_22 = bits(intAsRawFloat_extAbsIn, 22, 22) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_23 = bits(intAsRawFloat_extAbsIn, 23, 23) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_24 = bits(intAsRawFloat_extAbsIn, 24, 24) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_25 = bits(intAsRawFloat_extAbsIn, 25, 25) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_26 = bits(intAsRawFloat_extAbsIn, 26, 26) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_27 = bits(intAsRawFloat_extAbsIn, 27, 27) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_28 = bits(intAsRawFloat_extAbsIn, 28, 28) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_29 = bits(intAsRawFloat_extAbsIn, 29, 29) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_30 = bits(intAsRawFloat_extAbsIn, 30, 30) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_31 = bits(intAsRawFloat_extAbsIn, 31, 31) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_32 = bits(intAsRawFloat_extAbsIn, 32, 32) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_33 = bits(intAsRawFloat_extAbsIn, 33, 33) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_34 = bits(intAsRawFloat_extAbsIn, 34, 34) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_35 = bits(intAsRawFloat_extAbsIn, 35, 35) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_36 = bits(intAsRawFloat_extAbsIn, 36, 36) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_37 = bits(intAsRawFloat_extAbsIn, 37, 37) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_38 = bits(intAsRawFloat_extAbsIn, 38, 38) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_39 = bits(intAsRawFloat_extAbsIn, 39, 39) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_40 = bits(intAsRawFloat_extAbsIn, 40, 40) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_41 = bits(intAsRawFloat_extAbsIn, 41, 41) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_42 = bits(intAsRawFloat_extAbsIn, 42, 42) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_43 = bits(intAsRawFloat_extAbsIn, 43, 43) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_44 = bits(intAsRawFloat_extAbsIn, 44, 44) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_45 = bits(intAsRawFloat_extAbsIn, 45, 45) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_46 = bits(intAsRawFloat_extAbsIn, 46, 46) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_47 = bits(intAsRawFloat_extAbsIn, 47, 47) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_48 = bits(intAsRawFloat_extAbsIn, 48, 48) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_49 = bits(intAsRawFloat_extAbsIn, 49, 49) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_50 = bits(intAsRawFloat_extAbsIn, 50, 50) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_51 = bits(intAsRawFloat_extAbsIn, 51, 51) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_52 = bits(intAsRawFloat_extAbsIn, 52, 52) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_53 = bits(intAsRawFloat_extAbsIn, 53, 53) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_54 = bits(intAsRawFloat_extAbsIn, 54, 54) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_55 = bits(intAsRawFloat_extAbsIn, 55, 55) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_56 = bits(intAsRawFloat_extAbsIn, 56, 56) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_57 = bits(intAsRawFloat_extAbsIn, 57, 57) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_58 = bits(intAsRawFloat_extAbsIn, 58, 58) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_59 = bits(intAsRawFloat_extAbsIn, 59, 59) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_60 = bits(intAsRawFloat_extAbsIn, 60, 60) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_61 = bits(intAsRawFloat_extAbsIn, 61, 61) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_62 = bits(intAsRawFloat_extAbsIn, 62, 62) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_63 = bits(intAsRawFloat_extAbsIn, 63, 63) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_64 = mux(_intAsRawFloat_adjustedNormDist_T_1, UInt<6>("h3e"), UInt<6>("h3f")) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_65 = mux(_intAsRawFloat_adjustedNormDist_T_2, UInt<6>("h3d"), _intAsRawFloat_adjustedNormDist_T_64) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_66 = mux(_intAsRawFloat_adjustedNormDist_T_3, UInt<6>("h3c"), _intAsRawFloat_adjustedNormDist_T_65) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_67 = mux(_intAsRawFloat_adjustedNormDist_T_4, UInt<6>("h3b"), _intAsRawFloat_adjustedNormDist_T_66) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_68 = mux(_intAsRawFloat_adjustedNormDist_T_5, UInt<6>("h3a"), _intAsRawFloat_adjustedNormDist_T_67) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_69 = mux(_intAsRawFloat_adjustedNormDist_T_6, UInt<6>("h39"), _intAsRawFloat_adjustedNormDist_T_68) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_70 = mux(_intAsRawFloat_adjustedNormDist_T_7, UInt<6>("h38"), _intAsRawFloat_adjustedNormDist_T_69) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_71 = mux(_intAsRawFloat_adjustedNormDist_T_8, UInt<6>("h37"), _intAsRawFloat_adjustedNormDist_T_70) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_72 = mux(_intAsRawFloat_adjustedNormDist_T_9, UInt<6>("h36"), _intAsRawFloat_adjustedNormDist_T_71) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_73 = mux(_intAsRawFloat_adjustedNormDist_T_10, UInt<6>("h35"), _intAsRawFloat_adjustedNormDist_T_72) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_74 = mux(_intAsRawFloat_adjustedNormDist_T_11, UInt<6>("h34"), _intAsRawFloat_adjustedNormDist_T_73) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_75 = mux(_intAsRawFloat_adjustedNormDist_T_12, UInt<6>("h33"), _intAsRawFloat_adjustedNormDist_T_74) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_76 = mux(_intAsRawFloat_adjustedNormDist_T_13, UInt<6>("h32"), _intAsRawFloat_adjustedNormDist_T_75) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_77 = mux(_intAsRawFloat_adjustedNormDist_T_14, UInt<6>("h31"), _intAsRawFloat_adjustedNormDist_T_76) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_78 = mux(_intAsRawFloat_adjustedNormDist_T_15, UInt<6>("h30"), _intAsRawFloat_adjustedNormDist_T_77) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_79 = mux(_intAsRawFloat_adjustedNormDist_T_16, UInt<6>("h2f"), _intAsRawFloat_adjustedNormDist_T_78) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_80 = mux(_intAsRawFloat_adjustedNormDist_T_17, UInt<6>("h2e"), _intAsRawFloat_adjustedNormDist_T_79) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_81 = mux(_intAsRawFloat_adjustedNormDist_T_18, UInt<6>("h2d"), _intAsRawFloat_adjustedNormDist_T_80) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_82 = mux(_intAsRawFloat_adjustedNormDist_T_19, UInt<6>("h2c"), _intAsRawFloat_adjustedNormDist_T_81) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_83 = mux(_intAsRawFloat_adjustedNormDist_T_20, UInt<6>("h2b"), _intAsRawFloat_adjustedNormDist_T_82) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_84 = mux(_intAsRawFloat_adjustedNormDist_T_21, UInt<6>("h2a"), _intAsRawFloat_adjustedNormDist_T_83) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_85 = mux(_intAsRawFloat_adjustedNormDist_T_22, UInt<6>("h29"), _intAsRawFloat_adjustedNormDist_T_84) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_86 = mux(_intAsRawFloat_adjustedNormDist_T_23, UInt<6>("h28"), _intAsRawFloat_adjustedNormDist_T_85) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_87 = mux(_intAsRawFloat_adjustedNormDist_T_24, UInt<6>("h27"), _intAsRawFloat_adjustedNormDist_T_86) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_88 = mux(_intAsRawFloat_adjustedNormDist_T_25, UInt<6>("h26"), _intAsRawFloat_adjustedNormDist_T_87) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_89 = mux(_intAsRawFloat_adjustedNormDist_T_26, UInt<6>("h25"), _intAsRawFloat_adjustedNormDist_T_88) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_90 = mux(_intAsRawFloat_adjustedNormDist_T_27, UInt<6>("h24"), _intAsRawFloat_adjustedNormDist_T_89) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_91 = mux(_intAsRawFloat_adjustedNormDist_T_28, UInt<6>("h23"), _intAsRawFloat_adjustedNormDist_T_90) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_92 = mux(_intAsRawFloat_adjustedNormDist_T_29, UInt<6>("h22"), _intAsRawFloat_adjustedNormDist_T_91) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_93 = mux(_intAsRawFloat_adjustedNormDist_T_30, UInt<6>("h21"), _intAsRawFloat_adjustedNormDist_T_92) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_94 = mux(_intAsRawFloat_adjustedNormDist_T_31, UInt<6>("h20"), _intAsRawFloat_adjustedNormDist_T_93) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_95 = mux(_intAsRawFloat_adjustedNormDist_T_32, UInt<6>("h1f"), _intAsRawFloat_adjustedNormDist_T_94) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_96 = mux(_intAsRawFloat_adjustedNormDist_T_33, UInt<6>("h1e"), _intAsRawFloat_adjustedNormDist_T_95) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_97 = mux(_intAsRawFloat_adjustedNormDist_T_34, UInt<6>("h1d"), _intAsRawFloat_adjustedNormDist_T_96) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_98 = mux(_intAsRawFloat_adjustedNormDist_T_35, UInt<6>("h1c"), _intAsRawFloat_adjustedNormDist_T_97) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_99 = mux(_intAsRawFloat_adjustedNormDist_T_36, UInt<6>("h1b"), _intAsRawFloat_adjustedNormDist_T_98) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_100 = mux(_intAsRawFloat_adjustedNormDist_T_37, UInt<6>("h1a"), _intAsRawFloat_adjustedNormDist_T_99) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_101 = mux(_intAsRawFloat_adjustedNormDist_T_38, UInt<6>("h19"), _intAsRawFloat_adjustedNormDist_T_100) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_102 = mux(_intAsRawFloat_adjustedNormDist_T_39, UInt<6>("h18"), _intAsRawFloat_adjustedNormDist_T_101) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_103 = mux(_intAsRawFloat_adjustedNormDist_T_40, UInt<6>("h17"), _intAsRawFloat_adjustedNormDist_T_102) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_104 = mux(_intAsRawFloat_adjustedNormDist_T_41, UInt<6>("h16"), _intAsRawFloat_adjustedNormDist_T_103) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_105 = mux(_intAsRawFloat_adjustedNormDist_T_42, UInt<6>("h15"), _intAsRawFloat_adjustedNormDist_T_104) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_106 = mux(_intAsRawFloat_adjustedNormDist_T_43, UInt<6>("h14"), _intAsRawFloat_adjustedNormDist_T_105) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_107 = mux(_intAsRawFloat_adjustedNormDist_T_44, UInt<6>("h13"), _intAsRawFloat_adjustedNormDist_T_106) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_108 = mux(_intAsRawFloat_adjustedNormDist_T_45, UInt<6>("h12"), _intAsRawFloat_adjustedNormDist_T_107) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_109 = mux(_intAsRawFloat_adjustedNormDist_T_46, UInt<6>("h11"), _intAsRawFloat_adjustedNormDist_T_108) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_110 = mux(_intAsRawFloat_adjustedNormDist_T_47, UInt<6>("h10"), _intAsRawFloat_adjustedNormDist_T_109) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_111 = mux(_intAsRawFloat_adjustedNormDist_T_48, UInt<6>("hf"), _intAsRawFloat_adjustedNormDist_T_110) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_112 = mux(_intAsRawFloat_adjustedNormDist_T_49, UInt<6>("he"), _intAsRawFloat_adjustedNormDist_T_111) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_113 = mux(_intAsRawFloat_adjustedNormDist_T_50, UInt<6>("hd"), _intAsRawFloat_adjustedNormDist_T_112) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_114 = mux(_intAsRawFloat_adjustedNormDist_T_51, UInt<6>("hc"), _intAsRawFloat_adjustedNormDist_T_113) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_115 = mux(_intAsRawFloat_adjustedNormDist_T_52, UInt<6>("hb"), _intAsRawFloat_adjustedNormDist_T_114) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_116 = mux(_intAsRawFloat_adjustedNormDist_T_53, UInt<6>("ha"), _intAsRawFloat_adjustedNormDist_T_115) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_117 = mux(_intAsRawFloat_adjustedNormDist_T_54, UInt<6>("h9"), _intAsRawFloat_adjustedNormDist_T_116) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_118 = mux(_intAsRawFloat_adjustedNormDist_T_55, UInt<6>("h8"), _intAsRawFloat_adjustedNormDist_T_117) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_119 = mux(_intAsRawFloat_adjustedNormDist_T_56, UInt<6>("h7"), _intAsRawFloat_adjustedNormDist_T_118) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_120 = mux(_intAsRawFloat_adjustedNormDist_T_57, UInt<6>("h6"), _intAsRawFloat_adjustedNormDist_T_119) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_121 = mux(_intAsRawFloat_adjustedNormDist_T_58, UInt<6>("h5"), _intAsRawFloat_adjustedNormDist_T_120) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_122 = mux(_intAsRawFloat_adjustedNormDist_T_59, UInt<6>("h4"), _intAsRawFloat_adjustedNormDist_T_121) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_123 = mux(_intAsRawFloat_adjustedNormDist_T_60, UInt<6>("h3"), _intAsRawFloat_adjustedNormDist_T_122) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_124 = mux(_intAsRawFloat_adjustedNormDist_T_61, UInt<6>("h2"), _intAsRawFloat_adjustedNormDist_T_123) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_125 = mux(_intAsRawFloat_adjustedNormDist_T_62, UInt<6>("h1"), _intAsRawFloat_adjustedNormDist_T_124) @[Mux.scala 47:69]
    node intAsRawFloat_adjustedNormDist = mux(_intAsRawFloat_adjustedNormDist_T_63, UInt<6>("h0"), _intAsRawFloat_adjustedNormDist_T_125) @[Mux.scala 47:69]
    node _intAsRawFloat_sig_T = dshl(intAsRawFloat_extAbsIn, intAsRawFloat_adjustedNormDist) @[rawFloatFromIN.scala 55:22]
    node intAsRawFloat_sig = bits(_intAsRawFloat_sig_T, 63, 0) @[rawFloatFromIN.scala 55:41]
    node _intAsRawFloat_out_isZero_T = bits(intAsRawFloat_sig, 63, 63) @[rawFloatFromIN.scala 61:28]
    skip
    skip
    node intAsRawFloat_out_sExp_lo = not(intAsRawFloat_adjustedNormDist) @[rawFloatFromIN.scala 63:39]
    node _intAsRawFloat_out_sExp_T_1 = cat(UInt<2>("h2"), intAsRawFloat_out_sExp_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out <= roundAnyRawFNToRecFN.io_out @[INToRecFN.scala 72:23]
    io_exceptionFlags <= roundAnyRawFNToRecFN.io_exceptionFlags @[INToRecFN.scala 73:23]
    skip
    skip
    skip
    skip
    roundAnyRawFNToRecFN.io_in_isZero <= not(_intAsRawFloat_out_isZero_T) @[rawFloatFromIN.scala 61:23]
    roundAnyRawFNToRecFN.io_in_sign <= and(io_signedIn, _intAsRawFloat_sign_T) @[rawFloatFromIN.scala 50:29]
    roundAnyRawFNToRecFN.io_in_sExp <= cvt(_intAsRawFloat_out_sExp_T_1) @[rawFloatFromIN.scala 63:75]
    roundAnyRawFNToRecFN.io_in_sig <= pad(intAsRawFloat_sig, 65) @[rawFloatFromIN.scala 58:23 64:20]
    roundAnyRawFNToRecFN.io_roundingMode <= io_roundingMode @[INToRecFN.scala 70:44]
    skip

  module INToRecFN_1 :
    input io_signedIn : UInt<1>
    input io_in : UInt<64>
    input io_roundingMode : UInt<3>
    output io_out : UInt<65>
    output io_exceptionFlags : UInt<5>

    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_2 @[INToRecFN.scala 59:15]
    node _intAsRawFloat_sign_T = bits(io_in, 63, 63) @[rawFloatFromIN.scala 50:34]
    node intAsRawFloat_sign = and(io_signedIn, _intAsRawFloat_sign_T) @[rawFloatFromIN.scala 50:29]
    node _intAsRawFloat_absIn_T = sub(UInt<64>("h0"), io_in) @[rawFloatFromIN.scala 51:31]
    node _intAsRawFloat_absIn_T_1 = tail(_intAsRawFloat_absIn_T, 1) @[rawFloatFromIN.scala 51:31]
    node intAsRawFloat_extAbsIn_lo = mux(intAsRawFloat_sign, _intAsRawFloat_absIn_T_1, io_in) @[rawFloatFromIN.scala 51:24]
    node _intAsRawFloat_extAbsIn_T = cat(UInt<64>("h0"), intAsRawFloat_extAbsIn_lo) @[Cat.scala 30:58]
    node intAsRawFloat_extAbsIn = bits(_intAsRawFloat_extAbsIn_T, 63, 0) @[rawFloatFromIN.scala 52:56]
    skip
    node _intAsRawFloat_adjustedNormDist_T_1 = bits(intAsRawFloat_extAbsIn, 1, 1) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_2 = bits(intAsRawFloat_extAbsIn, 2, 2) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_3 = bits(intAsRawFloat_extAbsIn, 3, 3) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_4 = bits(intAsRawFloat_extAbsIn, 4, 4) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_5 = bits(intAsRawFloat_extAbsIn, 5, 5) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_6 = bits(intAsRawFloat_extAbsIn, 6, 6) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_7 = bits(intAsRawFloat_extAbsIn, 7, 7) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_8 = bits(intAsRawFloat_extAbsIn, 8, 8) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_9 = bits(intAsRawFloat_extAbsIn, 9, 9) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_10 = bits(intAsRawFloat_extAbsIn, 10, 10) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_11 = bits(intAsRawFloat_extAbsIn, 11, 11) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_12 = bits(intAsRawFloat_extAbsIn, 12, 12) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_13 = bits(intAsRawFloat_extAbsIn, 13, 13) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_14 = bits(intAsRawFloat_extAbsIn, 14, 14) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_15 = bits(intAsRawFloat_extAbsIn, 15, 15) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_16 = bits(intAsRawFloat_extAbsIn, 16, 16) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_17 = bits(intAsRawFloat_extAbsIn, 17, 17) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_18 = bits(intAsRawFloat_extAbsIn, 18, 18) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_19 = bits(intAsRawFloat_extAbsIn, 19, 19) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_20 = bits(intAsRawFloat_extAbsIn, 20, 20) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_21 = bits(intAsRawFloat_extAbsIn, 21, 21) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_22 = bits(intAsRawFloat_extAbsIn, 22, 22) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_23 = bits(intAsRawFloat_extAbsIn, 23, 23) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_24 = bits(intAsRawFloat_extAbsIn, 24, 24) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_25 = bits(intAsRawFloat_extAbsIn, 25, 25) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_26 = bits(intAsRawFloat_extAbsIn, 26, 26) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_27 = bits(intAsRawFloat_extAbsIn, 27, 27) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_28 = bits(intAsRawFloat_extAbsIn, 28, 28) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_29 = bits(intAsRawFloat_extAbsIn, 29, 29) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_30 = bits(intAsRawFloat_extAbsIn, 30, 30) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_31 = bits(intAsRawFloat_extAbsIn, 31, 31) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_32 = bits(intAsRawFloat_extAbsIn, 32, 32) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_33 = bits(intAsRawFloat_extAbsIn, 33, 33) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_34 = bits(intAsRawFloat_extAbsIn, 34, 34) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_35 = bits(intAsRawFloat_extAbsIn, 35, 35) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_36 = bits(intAsRawFloat_extAbsIn, 36, 36) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_37 = bits(intAsRawFloat_extAbsIn, 37, 37) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_38 = bits(intAsRawFloat_extAbsIn, 38, 38) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_39 = bits(intAsRawFloat_extAbsIn, 39, 39) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_40 = bits(intAsRawFloat_extAbsIn, 40, 40) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_41 = bits(intAsRawFloat_extAbsIn, 41, 41) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_42 = bits(intAsRawFloat_extAbsIn, 42, 42) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_43 = bits(intAsRawFloat_extAbsIn, 43, 43) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_44 = bits(intAsRawFloat_extAbsIn, 44, 44) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_45 = bits(intAsRawFloat_extAbsIn, 45, 45) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_46 = bits(intAsRawFloat_extAbsIn, 46, 46) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_47 = bits(intAsRawFloat_extAbsIn, 47, 47) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_48 = bits(intAsRawFloat_extAbsIn, 48, 48) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_49 = bits(intAsRawFloat_extAbsIn, 49, 49) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_50 = bits(intAsRawFloat_extAbsIn, 50, 50) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_51 = bits(intAsRawFloat_extAbsIn, 51, 51) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_52 = bits(intAsRawFloat_extAbsIn, 52, 52) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_53 = bits(intAsRawFloat_extAbsIn, 53, 53) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_54 = bits(intAsRawFloat_extAbsIn, 54, 54) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_55 = bits(intAsRawFloat_extAbsIn, 55, 55) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_56 = bits(intAsRawFloat_extAbsIn, 56, 56) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_57 = bits(intAsRawFloat_extAbsIn, 57, 57) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_58 = bits(intAsRawFloat_extAbsIn, 58, 58) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_59 = bits(intAsRawFloat_extAbsIn, 59, 59) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_60 = bits(intAsRawFloat_extAbsIn, 60, 60) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_61 = bits(intAsRawFloat_extAbsIn, 61, 61) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_62 = bits(intAsRawFloat_extAbsIn, 62, 62) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_63 = bits(intAsRawFloat_extAbsIn, 63, 63) @[primitives.scala 92:52]
    node _intAsRawFloat_adjustedNormDist_T_64 = mux(_intAsRawFloat_adjustedNormDist_T_1, UInt<6>("h3e"), UInt<6>("h3f")) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_65 = mux(_intAsRawFloat_adjustedNormDist_T_2, UInt<6>("h3d"), _intAsRawFloat_adjustedNormDist_T_64) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_66 = mux(_intAsRawFloat_adjustedNormDist_T_3, UInt<6>("h3c"), _intAsRawFloat_adjustedNormDist_T_65) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_67 = mux(_intAsRawFloat_adjustedNormDist_T_4, UInt<6>("h3b"), _intAsRawFloat_adjustedNormDist_T_66) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_68 = mux(_intAsRawFloat_adjustedNormDist_T_5, UInt<6>("h3a"), _intAsRawFloat_adjustedNormDist_T_67) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_69 = mux(_intAsRawFloat_adjustedNormDist_T_6, UInt<6>("h39"), _intAsRawFloat_adjustedNormDist_T_68) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_70 = mux(_intAsRawFloat_adjustedNormDist_T_7, UInt<6>("h38"), _intAsRawFloat_adjustedNormDist_T_69) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_71 = mux(_intAsRawFloat_adjustedNormDist_T_8, UInt<6>("h37"), _intAsRawFloat_adjustedNormDist_T_70) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_72 = mux(_intAsRawFloat_adjustedNormDist_T_9, UInt<6>("h36"), _intAsRawFloat_adjustedNormDist_T_71) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_73 = mux(_intAsRawFloat_adjustedNormDist_T_10, UInt<6>("h35"), _intAsRawFloat_adjustedNormDist_T_72) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_74 = mux(_intAsRawFloat_adjustedNormDist_T_11, UInt<6>("h34"), _intAsRawFloat_adjustedNormDist_T_73) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_75 = mux(_intAsRawFloat_adjustedNormDist_T_12, UInt<6>("h33"), _intAsRawFloat_adjustedNormDist_T_74) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_76 = mux(_intAsRawFloat_adjustedNormDist_T_13, UInt<6>("h32"), _intAsRawFloat_adjustedNormDist_T_75) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_77 = mux(_intAsRawFloat_adjustedNormDist_T_14, UInt<6>("h31"), _intAsRawFloat_adjustedNormDist_T_76) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_78 = mux(_intAsRawFloat_adjustedNormDist_T_15, UInt<6>("h30"), _intAsRawFloat_adjustedNormDist_T_77) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_79 = mux(_intAsRawFloat_adjustedNormDist_T_16, UInt<6>("h2f"), _intAsRawFloat_adjustedNormDist_T_78) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_80 = mux(_intAsRawFloat_adjustedNormDist_T_17, UInt<6>("h2e"), _intAsRawFloat_adjustedNormDist_T_79) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_81 = mux(_intAsRawFloat_adjustedNormDist_T_18, UInt<6>("h2d"), _intAsRawFloat_adjustedNormDist_T_80) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_82 = mux(_intAsRawFloat_adjustedNormDist_T_19, UInt<6>("h2c"), _intAsRawFloat_adjustedNormDist_T_81) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_83 = mux(_intAsRawFloat_adjustedNormDist_T_20, UInt<6>("h2b"), _intAsRawFloat_adjustedNormDist_T_82) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_84 = mux(_intAsRawFloat_adjustedNormDist_T_21, UInt<6>("h2a"), _intAsRawFloat_adjustedNormDist_T_83) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_85 = mux(_intAsRawFloat_adjustedNormDist_T_22, UInt<6>("h29"), _intAsRawFloat_adjustedNormDist_T_84) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_86 = mux(_intAsRawFloat_adjustedNormDist_T_23, UInt<6>("h28"), _intAsRawFloat_adjustedNormDist_T_85) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_87 = mux(_intAsRawFloat_adjustedNormDist_T_24, UInt<6>("h27"), _intAsRawFloat_adjustedNormDist_T_86) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_88 = mux(_intAsRawFloat_adjustedNormDist_T_25, UInt<6>("h26"), _intAsRawFloat_adjustedNormDist_T_87) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_89 = mux(_intAsRawFloat_adjustedNormDist_T_26, UInt<6>("h25"), _intAsRawFloat_adjustedNormDist_T_88) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_90 = mux(_intAsRawFloat_adjustedNormDist_T_27, UInt<6>("h24"), _intAsRawFloat_adjustedNormDist_T_89) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_91 = mux(_intAsRawFloat_adjustedNormDist_T_28, UInt<6>("h23"), _intAsRawFloat_adjustedNormDist_T_90) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_92 = mux(_intAsRawFloat_adjustedNormDist_T_29, UInt<6>("h22"), _intAsRawFloat_adjustedNormDist_T_91) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_93 = mux(_intAsRawFloat_adjustedNormDist_T_30, UInt<6>("h21"), _intAsRawFloat_adjustedNormDist_T_92) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_94 = mux(_intAsRawFloat_adjustedNormDist_T_31, UInt<6>("h20"), _intAsRawFloat_adjustedNormDist_T_93) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_95 = mux(_intAsRawFloat_adjustedNormDist_T_32, UInt<6>("h1f"), _intAsRawFloat_adjustedNormDist_T_94) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_96 = mux(_intAsRawFloat_adjustedNormDist_T_33, UInt<6>("h1e"), _intAsRawFloat_adjustedNormDist_T_95) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_97 = mux(_intAsRawFloat_adjustedNormDist_T_34, UInt<6>("h1d"), _intAsRawFloat_adjustedNormDist_T_96) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_98 = mux(_intAsRawFloat_adjustedNormDist_T_35, UInt<6>("h1c"), _intAsRawFloat_adjustedNormDist_T_97) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_99 = mux(_intAsRawFloat_adjustedNormDist_T_36, UInt<6>("h1b"), _intAsRawFloat_adjustedNormDist_T_98) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_100 = mux(_intAsRawFloat_adjustedNormDist_T_37, UInt<6>("h1a"), _intAsRawFloat_adjustedNormDist_T_99) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_101 = mux(_intAsRawFloat_adjustedNormDist_T_38, UInt<6>("h19"), _intAsRawFloat_adjustedNormDist_T_100) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_102 = mux(_intAsRawFloat_adjustedNormDist_T_39, UInt<6>("h18"), _intAsRawFloat_adjustedNormDist_T_101) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_103 = mux(_intAsRawFloat_adjustedNormDist_T_40, UInt<6>("h17"), _intAsRawFloat_adjustedNormDist_T_102) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_104 = mux(_intAsRawFloat_adjustedNormDist_T_41, UInt<6>("h16"), _intAsRawFloat_adjustedNormDist_T_103) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_105 = mux(_intAsRawFloat_adjustedNormDist_T_42, UInt<6>("h15"), _intAsRawFloat_adjustedNormDist_T_104) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_106 = mux(_intAsRawFloat_adjustedNormDist_T_43, UInt<6>("h14"), _intAsRawFloat_adjustedNormDist_T_105) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_107 = mux(_intAsRawFloat_adjustedNormDist_T_44, UInt<6>("h13"), _intAsRawFloat_adjustedNormDist_T_106) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_108 = mux(_intAsRawFloat_adjustedNormDist_T_45, UInt<6>("h12"), _intAsRawFloat_adjustedNormDist_T_107) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_109 = mux(_intAsRawFloat_adjustedNormDist_T_46, UInt<6>("h11"), _intAsRawFloat_adjustedNormDist_T_108) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_110 = mux(_intAsRawFloat_adjustedNormDist_T_47, UInt<6>("h10"), _intAsRawFloat_adjustedNormDist_T_109) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_111 = mux(_intAsRawFloat_adjustedNormDist_T_48, UInt<6>("hf"), _intAsRawFloat_adjustedNormDist_T_110) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_112 = mux(_intAsRawFloat_adjustedNormDist_T_49, UInt<6>("he"), _intAsRawFloat_adjustedNormDist_T_111) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_113 = mux(_intAsRawFloat_adjustedNormDist_T_50, UInt<6>("hd"), _intAsRawFloat_adjustedNormDist_T_112) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_114 = mux(_intAsRawFloat_adjustedNormDist_T_51, UInt<6>("hc"), _intAsRawFloat_adjustedNormDist_T_113) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_115 = mux(_intAsRawFloat_adjustedNormDist_T_52, UInt<6>("hb"), _intAsRawFloat_adjustedNormDist_T_114) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_116 = mux(_intAsRawFloat_adjustedNormDist_T_53, UInt<6>("ha"), _intAsRawFloat_adjustedNormDist_T_115) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_117 = mux(_intAsRawFloat_adjustedNormDist_T_54, UInt<6>("h9"), _intAsRawFloat_adjustedNormDist_T_116) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_118 = mux(_intAsRawFloat_adjustedNormDist_T_55, UInt<6>("h8"), _intAsRawFloat_adjustedNormDist_T_117) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_119 = mux(_intAsRawFloat_adjustedNormDist_T_56, UInt<6>("h7"), _intAsRawFloat_adjustedNormDist_T_118) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_120 = mux(_intAsRawFloat_adjustedNormDist_T_57, UInt<6>("h6"), _intAsRawFloat_adjustedNormDist_T_119) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_121 = mux(_intAsRawFloat_adjustedNormDist_T_58, UInt<6>("h5"), _intAsRawFloat_adjustedNormDist_T_120) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_122 = mux(_intAsRawFloat_adjustedNormDist_T_59, UInt<6>("h4"), _intAsRawFloat_adjustedNormDist_T_121) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_123 = mux(_intAsRawFloat_adjustedNormDist_T_60, UInt<6>("h3"), _intAsRawFloat_adjustedNormDist_T_122) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_124 = mux(_intAsRawFloat_adjustedNormDist_T_61, UInt<6>("h2"), _intAsRawFloat_adjustedNormDist_T_123) @[Mux.scala 47:69]
    node _intAsRawFloat_adjustedNormDist_T_125 = mux(_intAsRawFloat_adjustedNormDist_T_62, UInt<6>("h1"), _intAsRawFloat_adjustedNormDist_T_124) @[Mux.scala 47:69]
    node intAsRawFloat_adjustedNormDist = mux(_intAsRawFloat_adjustedNormDist_T_63, UInt<6>("h0"), _intAsRawFloat_adjustedNormDist_T_125) @[Mux.scala 47:69]
    node _intAsRawFloat_sig_T = dshl(intAsRawFloat_extAbsIn, intAsRawFloat_adjustedNormDist) @[rawFloatFromIN.scala 55:22]
    node intAsRawFloat_sig = bits(_intAsRawFloat_sig_T, 63, 0) @[rawFloatFromIN.scala 55:41]
    node _intAsRawFloat_out_isZero_T = bits(intAsRawFloat_sig, 63, 63) @[rawFloatFromIN.scala 61:28]
    skip
    skip
    node intAsRawFloat_out_sExp_lo = not(intAsRawFloat_adjustedNormDist) @[rawFloatFromIN.scala 63:39]
    node _intAsRawFloat_out_sExp_T_1 = cat(UInt<2>("h2"), intAsRawFloat_out_sExp_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out <= roundAnyRawFNToRecFN.io_out @[INToRecFN.scala 72:23]
    io_exceptionFlags <= roundAnyRawFNToRecFN.io_exceptionFlags @[INToRecFN.scala 73:23]
    skip
    skip
    skip
    skip
    roundAnyRawFNToRecFN.io_in_isZero <= not(_intAsRawFloat_out_isZero_T) @[rawFloatFromIN.scala 61:23]
    roundAnyRawFNToRecFN.io_in_sign <= and(io_signedIn, _intAsRawFloat_sign_T) @[rawFloatFromIN.scala 50:29]
    roundAnyRawFNToRecFN.io_in_sExp <= cvt(_intAsRawFloat_out_sExp_T_1) @[rawFloatFromIN.scala 63:75]
    roundAnyRawFNToRecFN.io_in_sig <= pad(intAsRawFloat_sig, 65) @[rawFloatFromIN.scala 58:23 64:20]
    roundAnyRawFNToRecFN.io_roundingMode <= io_roundingMode @[INToRecFN.scala 70:44]
    skip

  module RecFNToRecFN :
    input io_in : UInt<65>
    input io_roundingMode : UInt<3>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_3 @[RecFNToRecFN.scala 72:19]
    node rawIn_exp = bits(io_in, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawIn_isZero_T = bits(rawIn_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawIn_isZero = eq(_rawIn_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawIn_isSpecial_T = bits(rawIn_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawIn_isSpecial = eq(_rawIn_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawIn_out_isNaN_T = bits(rawIn_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node rawIn__isNaN = and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawIn_out_isInf_T_1 = not(_rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    skip
    skip
    node rawIn_out_sig_hi_lo = not(rawIn_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawIn_out_sig_lo = bits(io_in, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawIn_out_sig_hi = cat(UInt<1>("h0"), rawIn_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawIn__sig = cat(rawIn_out_sig_hi, rawIn_out_sig_lo) @[Cat.scala 30:58]
    skip
    node _roundAnyRawFNToRecFN_io_invalidExc_T = bits(rawIn__sig, 51, 51) @[common.scala 81:56]
    node _roundAnyRawFNToRecFN_io_invalidExc_T_1 = not(_roundAnyRawFNToRecFN_io_invalidExc_T) @[common.scala 81:49]
    skip
    skip
    skip
    skip
    skip
    skip
    io_out <= roundAnyRawFNToRecFN.io_out @[RecFNToRecFN.scala 85:27]
    io_exceptionFlags <= roundAnyRawFNToRecFN.io_exceptionFlags @[RecFNToRecFN.scala 86:27]
    roundAnyRawFNToRecFN.io_invalidExc <= and(rawIn__isNaN, _roundAnyRawFNToRecFN_io_invalidExc_T_1) @[common.scala 81:46]
    skip
    roundAnyRawFNToRecFN.io_in_isNaN <= and(rawIn_isSpecial, _rawIn_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    roundAnyRawFNToRecFN.io_in_isInf <= and(rawIn_isSpecial, _rawIn_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    roundAnyRawFNToRecFN.io_in_isZero <= eq(_rawIn_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    roundAnyRawFNToRecFN.io_in_sign <= bits(io_in, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    roundAnyRawFNToRecFN.io_in_sExp <= cvt(rawIn_exp) @[rawFloatFromRecFN.scala 59:27]
    roundAnyRawFNToRecFN.io_in_sig <= cat(rawIn_out_sig_hi, rawIn_out_sig_lo) @[Cat.scala 30:58]
    roundAnyRawFNToRecFN.io_roundingMode <= io_roundingMode @[RecFNToRecFN.scala 83:48]
    skip

  module MulAddRecFNPipe_1 :
    input clock : Clock
    input reset : UInt<1>
    input io_validin : UInt<1>
    input io_op : UInt<2>
    input io_a : UInt<65>
    input io_b : UInt<65>
    input io_c : UInt<65>
    input io_roundingMode : UInt<3>
    output io_out : UInt<65>
    output io_exceptionFlags : UInt<5>
    output io_validout : UInt<1>

    inst mulAddRecFNToRaw_preMul of MulAddRecFNToRaw_preMul_1 @[FPU.scala 648:41]
    inst mulAddRecFNToRaw_postMul of MulAddRecFNToRaw_postMul_1 @[FPU.scala 649:42]
    inst roundRawFNToRecFN of RoundRawFNToRecFN_1 @[FPU.scala 676:35]
    node _mulAddResult_T = mul(mulAddRecFNToRaw_preMul.io_mulAddA, mulAddRecFNToRaw_preMul.io_mulAddB) @[FPU.scala 657:45]
    node mulAddResult = add(_mulAddResult_T, mulAddRecFNToRaw_preMul.io_mulAddC) @[FPU.scala 658:50]
    skip
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum : SInt<13>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist : UInt<6>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC : UInt<55>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC) @[Reg.scala 15:16]
    reg mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC : UInt<1>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg mulAddRecFNToRaw_postMul_io_mulAddResult_b : UInt<107>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_mulAddResult_b) @[Reg.scala 15:16]
    skip
    skip
    reg mulAddRecFNToRaw_postMul_io_roundingMode_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), mulAddRecFNToRaw_postMul_io_roundingMode_b) @[Reg.scala 15:16]
    skip
    skip
    reg roundingMode_stage0_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundingMode_stage0_b) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    reg valid_stage0_v : UInt<1>, clock with :
      reset => (UInt<1>("h0"), valid_stage0_v) @[Valid.scala 117:22]
    skip
    skip
    skip
    reg roundRawFNToRecFN_io_invalidExc_b : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_invalidExc_b) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    reg roundRawFNToRecFN_io_in_b_isNaN : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_isNaN) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_isInf : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_isInf) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_isZero : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_isZero) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_sign : UInt<1>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_sign) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_sExp : SInt<13>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_sExp) @[Reg.scala 15:16]
    reg roundRawFNToRecFN_io_in_b_sig : UInt<56>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_in_b_sig) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg roundRawFNToRecFN_io_roundingMode_b : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundRawFNToRecFN_io_roundingMode_b) @[Reg.scala 15:16]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    reg io_validout_v : UInt<1>, clock with :
      reset => (UInt<1>("h0"), io_validout_v) @[Valid.scala 117:22]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out <= roundRawFNToRecFN.io_out @[FPU.scala 687:23]
    io_exceptionFlags <= roundRawFNToRecFN.io_exceptionFlags @[FPU.scala 688:23]
    io_validout <= io_validout_v @[Valid.scala 112:21 113:17]
    mulAddRecFNToRaw_preMul.io_op <= io_op @[FPU.scala 651:35]
    mulAddRecFNToRaw_preMul.io_a <= io_a @[FPU.scala 652:35]
    mulAddRecFNToRaw_preMul.io_b <= io_b @[FPU.scala 653:35]
    mulAddRecFNToRaw_preMul.io_c <= io_c @[FPU.scala 654:35]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isSigNaNAny <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isNaNAOrB <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isInfA <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isZeroA <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isInfB <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isZeroB <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_signProd <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isNaNC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isInfC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_isZeroC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_sExpSum <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_doSubMags <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_CIsDominant <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_CDom_CAlignDist <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_highAlignedSigC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_fromPreMul_bit0AlignedSigC <= mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_mulAddResult <= mulAddRecFNToRaw_postMul_io_mulAddResult_b @[Valid.scala 112:21 114:16]
    mulAddRecFNToRaw_postMul.io_roundingMode <= mulAddRecFNToRaw_postMul_io_roundingMode_b @[Valid.scala 112:21 114:16]
    skip
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isSigNaNAny, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isSigNaNAny) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isNaNAOrB, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNAOrB) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isInfA, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfA) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isZeroA, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroA) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isInfB, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfB) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isZeroB, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroB) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_signProd, mulAddRecFNToRaw_postMul_io_fromPreMul_b_signProd) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isNaNC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isNaNC) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isInfC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isInfC) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_isZeroC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_isZeroC) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_sExpSum, mulAddRecFNToRaw_postMul_io_fromPreMul_b_sExpSum) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_doSubMags, mulAddRecFNToRaw_postMul_io_fromPreMul_b_doSubMags) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_CIsDominant, mulAddRecFNToRaw_postMul_io_fromPreMul_b_CIsDominant) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_CDom_CAlignDist, mulAddRecFNToRaw_postMul_io_fromPreMul_b_CDom_CAlignDist) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_highAlignedSigC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_highAlignedSigC) @[Reg.scala 15:16 16:{19,23}]
    mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC <= mux(io_validin, mulAddRecFNToRaw_preMul.io_toPostMul_bit0AlignedSigC, mulAddRecFNToRaw_postMul_io_fromPreMul_b_bit0AlignedSigC) @[Reg.scala 15:16 16:{19,23}]
    skip
    mulAddRecFNToRaw_postMul_io_mulAddResult_b <= mux(io_validin, mulAddResult, mulAddRecFNToRaw_postMul_io_mulAddResult_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    mulAddRecFNToRaw_postMul_io_roundingMode_b <= mux(io_validin, io_roundingMode, mulAddRecFNToRaw_postMul_io_roundingMode_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    roundingMode_stage0_b <= mux(io_validin, io_roundingMode, roundingMode_stage0_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    valid_stage0_v <= mux(reset, UInt<1>("h0"), io_validin) @[Valid.scala 117:{22,22,22}]
    skip
    roundRawFNToRecFN.io_invalidExc <= roundRawFNToRecFN_io_invalidExc_b @[Valid.scala 112:21 114:16]
    skip
    roundRawFNToRecFN.io_in_isNaN <= roundRawFNToRecFN_io_in_b_isNaN @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_isInf <= roundRawFNToRecFN_io_in_b_isInf @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_isZero <= roundRawFNToRecFN_io_in_b_isZero @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_sign <= roundRawFNToRecFN_io_in_b_sign @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_sExp <= roundRawFNToRecFN_io_in_b_sExp @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_in_sig <= roundRawFNToRecFN_io_in_b_sig @[Valid.scala 112:21 114:16]
    roundRawFNToRecFN.io_roundingMode <= roundRawFNToRecFN_io_roundingMode_b @[Valid.scala 112:21 114:16]
    skip
    skip
    roundRawFNToRecFN_io_invalidExc_b <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_invalidExc, roundRawFNToRecFN_io_invalidExc_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    roundRawFNToRecFN_io_in_b_isNaN <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_isNaN, roundRawFNToRecFN_io_in_b_isNaN) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_isInf <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_isInf, roundRawFNToRecFN_io_in_b_isInf) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_isZero <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_isZero, roundRawFNToRecFN_io_in_b_isZero) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_sign <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_sign, roundRawFNToRecFN_io_in_b_sign) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_sExp <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_sExp, roundRawFNToRecFN_io_in_b_sExp) @[Reg.scala 15:16 16:{19,23}]
    roundRawFNToRecFN_io_in_b_sig <= mux(valid_stage0_v, mulAddRecFNToRaw_postMul.io_rawOut_sig, roundRawFNToRecFN_io_in_b_sig) @[Reg.scala 15:16 16:{19,23}]
    skip
    roundRawFNToRecFN_io_roundingMode_b <= mux(valid_stage0_v, roundingMode_stage0_b, roundRawFNToRecFN_io_roundingMode_b) @[Reg.scala 15:16 16:{19,23}]
    skip
    skip
    io_validout_v <= mux(reset, UInt<1>("h0"), valid_stage0_v) @[Valid.scala 117:{22,22,22}]
    skip

  module DivSqrtRecFNToRaw_small :
    input clock : Clock
    input reset : UInt<1>
    output io_inReady : UInt<1>
    input io_inValid : UInt<1>
    input io_sqrtOp : UInt<1>
    input io_a : UInt<33>
    input io_b : UInt<33>
    input io_roundingMode : UInt<3>
    output io_rawOutValid_div : UInt<1>
    output io_rawOutValid_sqrt : UInt<1>
    output io_roundingModeOut : UInt<3>
    output io_invalidExc : UInt<1>
    output io_infiniteExc : UInt<1>
    output io_rawOut_isNaN : UInt<1>
    output io_rawOut_isInf : UInt<1>
    output io_rawOut_isZero : UInt<1>
    output io_rawOut_sign : UInt<1>
    output io_rawOut_sExp : SInt<10>
    output io_rawOut_sig : UInt<27>

    inst divSqrtRawFN_ of DivSqrtRawFN_small @[DivSqrtRecFN_small.scala 416:15]
    node divSqrtRawFN_io_a_exp = bits(io_a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _divSqrtRawFN_io_a_isZero_T = bits(divSqrtRawFN_io_a_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node divSqrtRawFN_io_a_isZero = eq(_divSqrtRawFN_io_a_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _divSqrtRawFN_io_a_isSpecial_T = bits(divSqrtRawFN_io_a_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node divSqrtRawFN_io_a_isSpecial = eq(_divSqrtRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _divSqrtRawFN_io_a_out_isNaN_T = bits(divSqrtRawFN_io_a_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    skip
    skip
    node _divSqrtRawFN_io_a_out_isInf_T_1 = not(_divSqrtRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    skip
    skip
    node divSqrtRawFN_io_a_out_sig_hi_lo = not(divSqrtRawFN_io_a_isZero) @[rawFloatFromRecFN.scala 60:39]
    node divSqrtRawFN_io_a_out_sig_lo = bits(io_a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node divSqrtRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), divSqrtRawFN_io_a_out_sig_hi_lo) @[Cat.scala 30:58]
    skip
    node divSqrtRawFN_io_b_exp = bits(io_b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _divSqrtRawFN_io_b_isZero_T = bits(divSqrtRawFN_io_b_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node divSqrtRawFN_io_b_isZero = eq(_divSqrtRawFN_io_b_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _divSqrtRawFN_io_b_isSpecial_T = bits(divSqrtRawFN_io_b_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node divSqrtRawFN_io_b_isSpecial = eq(_divSqrtRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _divSqrtRawFN_io_b_out_isNaN_T = bits(divSqrtRawFN_io_b_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    skip
    skip
    node _divSqrtRawFN_io_b_out_isInf_T_1 = not(_divSqrtRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    skip
    skip
    node divSqrtRawFN_io_b_out_sig_hi_lo = not(divSqrtRawFN_io_b_isZero) @[rawFloatFromRecFN.scala 60:39]
    node divSqrtRawFN_io_b_out_sig_lo = bits(io_b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node divSqrtRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), divSqrtRawFN_io_b_out_sig_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_inReady <= divSqrtRawFN_.io_inReady @[DivSqrtRecFN_small.scala 418:16]
    io_rawOutValid_div <= divSqrtRawFN_.io_rawOutValid_div @[DivSqrtRecFN_small.scala 425:25]
    io_rawOutValid_sqrt <= divSqrtRawFN_.io_rawOutValid_sqrt @[DivSqrtRecFN_small.scala 426:25]
    io_roundingModeOut <= divSqrtRawFN_.io_roundingModeOut @[DivSqrtRecFN_small.scala 427:25]
    io_invalidExc <= divSqrtRawFN_.io_invalidExc @[DivSqrtRecFN_small.scala 428:25]
    io_infiniteExc <= divSqrtRawFN_.io_infiniteExc @[DivSqrtRecFN_small.scala 429:25]
    io_rawOut_isNaN <= divSqrtRawFN_.io_rawOut_isNaN @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_isInf <= divSqrtRawFN_.io_rawOut_isInf @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_isZero <= divSqrtRawFN_.io_rawOut_isZero @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_sign <= divSqrtRawFN_.io_rawOut_sign @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_sExp <= divSqrtRawFN_.io_rawOut_sExp @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_sig <= divSqrtRawFN_.io_rawOut_sig @[DivSqrtRecFN_small.scala 430:25]
    divSqrtRawFN_.clock <= clock
    divSqrtRawFN_.reset <= reset
    divSqrtRawFN_.io_inValid <= io_inValid @[DivSqrtRecFN_small.scala 419:34]
    divSqrtRawFN_.io_sqrtOp <= io_sqrtOp @[DivSqrtRecFN_small.scala 420:34]
    divSqrtRawFN_.io_a_isNaN <= and(divSqrtRawFN_io_a_isSpecial, _divSqrtRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    divSqrtRawFN_.io_a_isInf <= and(divSqrtRawFN_io_a_isSpecial, _divSqrtRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    divSqrtRawFN_.io_a_isZero <= eq(_divSqrtRawFN_io_a_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    divSqrtRawFN_.io_a_sign <= bits(io_a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    divSqrtRawFN_.io_a_sExp <= cvt(divSqrtRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    divSqrtRawFN_.io_a_sig <= cat(divSqrtRawFN_io_a_out_sig_hi, divSqrtRawFN_io_a_out_sig_lo) @[Cat.scala 30:58]
    divSqrtRawFN_.io_b_isNaN <= and(divSqrtRawFN_io_b_isSpecial, _divSqrtRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    divSqrtRawFN_.io_b_isInf <= and(divSqrtRawFN_io_b_isSpecial, _divSqrtRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    divSqrtRawFN_.io_b_isZero <= eq(_divSqrtRawFN_io_b_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    divSqrtRawFN_.io_b_sign <= bits(io_b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    divSqrtRawFN_.io_b_sExp <= cvt(divSqrtRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    divSqrtRawFN_.io_b_sig <= cat(divSqrtRawFN_io_b_out_sig_hi, divSqrtRawFN_io_b_out_sig_lo) @[Cat.scala 30:58]
    divSqrtRawFN_.io_roundingMode <= io_roundingMode @[DivSqrtRecFN_small.scala 423:34]

  module RoundRawFNToRecFN_2 :
    input io_invalidExc : UInt<1>
    input io_infiniteExc : UInt<1>
    input io_in_isNaN : UInt<1>
    input io_in_isInf : UInt<1>
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<10>
    input io_in_sig : UInt<27>
    input io_roundingMode : UInt<3>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_5 @[RoundAnyRawFNToRecFN.scala 307:15]
    io_out <= roundAnyRawFNToRecFN.io_out @[RoundAnyRawFNToRecFN.scala 315:23]
    io_exceptionFlags <= roundAnyRawFNToRecFN.io_exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    roundAnyRawFNToRecFN.io_invalidExc <= io_invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io_infiniteExc <= io_infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io_in_isNaN <= io_in_isNaN @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_isInf <= io_in_isInf @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_isZero <= io_in_isZero @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sign <= io_in_sign @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sExp <= io_in_sExp @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sig <= io_in_sig @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_roundingMode <= io_roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    skip

  module DivSqrtRecFNToRaw_small_1 :
    input clock : Clock
    input reset : UInt<1>
    output io_inReady : UInt<1>
    input io_inValid : UInt<1>
    input io_sqrtOp : UInt<1>
    input io_a : UInt<65>
    input io_b : UInt<65>
    input io_roundingMode : UInt<3>
    output io_rawOutValid_div : UInt<1>
    output io_rawOutValid_sqrt : UInt<1>
    output io_roundingModeOut : UInt<3>
    output io_invalidExc : UInt<1>
    output io_infiniteExc : UInt<1>
    output io_rawOut_isNaN : UInt<1>
    output io_rawOut_isInf : UInt<1>
    output io_rawOut_isZero : UInt<1>
    output io_rawOut_sign : UInt<1>
    output io_rawOut_sExp : SInt<13>
    output io_rawOut_sig : UInt<56>

    inst divSqrtRawFN_ of DivSqrtRawFN_small_1 @[DivSqrtRecFN_small.scala 416:15]
    node divSqrtRawFN_io_a_exp = bits(io_a, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _divSqrtRawFN_io_a_isZero_T = bits(divSqrtRawFN_io_a_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node divSqrtRawFN_io_a_isZero = eq(_divSqrtRawFN_io_a_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _divSqrtRawFN_io_a_isSpecial_T = bits(divSqrtRawFN_io_a_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node divSqrtRawFN_io_a_isSpecial = eq(_divSqrtRawFN_io_a_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _divSqrtRawFN_io_a_out_isNaN_T = bits(divSqrtRawFN_io_a_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    skip
    skip
    node _divSqrtRawFN_io_a_out_isInf_T_1 = not(_divSqrtRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    skip
    skip
    node divSqrtRawFN_io_a_out_sig_hi_lo = not(divSqrtRawFN_io_a_isZero) @[rawFloatFromRecFN.scala 60:39]
    node divSqrtRawFN_io_a_out_sig_lo = bits(io_a, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node divSqrtRawFN_io_a_out_sig_hi = cat(UInt<1>("h0"), divSqrtRawFN_io_a_out_sig_hi_lo) @[Cat.scala 30:58]
    skip
    node divSqrtRawFN_io_b_exp = bits(io_b, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _divSqrtRawFN_io_b_isZero_T = bits(divSqrtRawFN_io_b_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node divSqrtRawFN_io_b_isZero = eq(_divSqrtRawFN_io_b_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _divSqrtRawFN_io_b_isSpecial_T = bits(divSqrtRawFN_io_b_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node divSqrtRawFN_io_b_isSpecial = eq(_divSqrtRawFN_io_b_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _divSqrtRawFN_io_b_out_isNaN_T = bits(divSqrtRawFN_io_b_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    skip
    skip
    node _divSqrtRawFN_io_b_out_isInf_T_1 = not(_divSqrtRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    skip
    skip
    node divSqrtRawFN_io_b_out_sig_hi_lo = not(divSqrtRawFN_io_b_isZero) @[rawFloatFromRecFN.scala 60:39]
    node divSqrtRawFN_io_b_out_sig_lo = bits(io_b, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node divSqrtRawFN_io_b_out_sig_hi = cat(UInt<1>("h0"), divSqrtRawFN_io_b_out_sig_hi_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_inReady <= divSqrtRawFN_.io_inReady @[DivSqrtRecFN_small.scala 418:16]
    io_rawOutValid_div <= divSqrtRawFN_.io_rawOutValid_div @[DivSqrtRecFN_small.scala 425:25]
    io_rawOutValid_sqrt <= divSqrtRawFN_.io_rawOutValid_sqrt @[DivSqrtRecFN_small.scala 426:25]
    io_roundingModeOut <= divSqrtRawFN_.io_roundingModeOut @[DivSqrtRecFN_small.scala 427:25]
    io_invalidExc <= divSqrtRawFN_.io_invalidExc @[DivSqrtRecFN_small.scala 428:25]
    io_infiniteExc <= divSqrtRawFN_.io_infiniteExc @[DivSqrtRecFN_small.scala 429:25]
    io_rawOut_isNaN <= divSqrtRawFN_.io_rawOut_isNaN @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_isInf <= divSqrtRawFN_.io_rawOut_isInf @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_isZero <= divSqrtRawFN_.io_rawOut_isZero @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_sign <= divSqrtRawFN_.io_rawOut_sign @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_sExp <= divSqrtRawFN_.io_rawOut_sExp @[DivSqrtRecFN_small.scala 430:25]
    io_rawOut_sig <= divSqrtRawFN_.io_rawOut_sig @[DivSqrtRecFN_small.scala 430:25]
    divSqrtRawFN_.clock <= clock
    divSqrtRawFN_.reset <= reset
    divSqrtRawFN_.io_inValid <= io_inValid @[DivSqrtRecFN_small.scala 419:34]
    divSqrtRawFN_.io_sqrtOp <= io_sqrtOp @[DivSqrtRecFN_small.scala 420:34]
    divSqrtRawFN_.io_a_isNaN <= and(divSqrtRawFN_io_a_isSpecial, _divSqrtRawFN_io_a_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    divSqrtRawFN_.io_a_isInf <= and(divSqrtRawFN_io_a_isSpecial, _divSqrtRawFN_io_a_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    divSqrtRawFN_.io_a_isZero <= eq(_divSqrtRawFN_io_a_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    divSqrtRawFN_.io_a_sign <= bits(io_a, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    divSqrtRawFN_.io_a_sExp <= cvt(divSqrtRawFN_io_a_exp) @[rawFloatFromRecFN.scala 59:27]
    divSqrtRawFN_.io_a_sig <= cat(divSqrtRawFN_io_a_out_sig_hi, divSqrtRawFN_io_a_out_sig_lo) @[Cat.scala 30:58]
    divSqrtRawFN_.io_b_isNaN <= and(divSqrtRawFN_io_b_isSpecial, _divSqrtRawFN_io_b_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    divSqrtRawFN_.io_b_isInf <= and(divSqrtRawFN_io_b_isSpecial, _divSqrtRawFN_io_b_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    divSqrtRawFN_.io_b_isZero <= eq(_divSqrtRawFN_io_b_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    divSqrtRawFN_.io_b_sign <= bits(io_b, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    divSqrtRawFN_.io_b_sExp <= cvt(divSqrtRawFN_io_b_exp) @[rawFloatFromRecFN.scala 59:27]
    divSqrtRawFN_.io_b_sig <= cat(divSqrtRawFN_io_b_out_sig_hi, divSqrtRawFN_io_b_out_sig_lo) @[Cat.scala 30:58]
    divSqrtRawFN_.io_roundingMode <= io_roundingMode @[DivSqrtRecFN_small.scala 423:34]

  module RoundRawFNToRecFN_3 :
    input io_invalidExc : UInt<1>
    input io_infiniteExc : UInt<1>
    input io_in_isNaN : UInt<1>
    input io_in_isInf : UInt<1>
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<13>
    input io_in_sig : UInt<56>
    input io_roundingMode : UInt<3>
    output io_out : UInt<65>
    output io_exceptionFlags : UInt<5>

    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_6 @[RoundAnyRawFNToRecFN.scala 307:15]
    io_out <= roundAnyRawFNToRecFN.io_out @[RoundAnyRawFNToRecFN.scala 315:23]
    io_exceptionFlags <= roundAnyRawFNToRecFN.io_exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    roundAnyRawFNToRecFN.io_invalidExc <= io_invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io_infiniteExc <= io_infiniteExc @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io_in_isNaN <= io_in_isNaN @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_isInf <= io_in_isInf @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_isZero <= io_in_isZero @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sign <= io_in_sign @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sExp <= io_in_sExp @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sig <= io_in_sig @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_roundingMode <= io_roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    skip

  module RVCExpander :
    input io_in : UInt<32>
    output io_out_bits : UInt<32>
    output io_out_rd : UInt<5>
    output io_out_rs1 : UInt<5>
    output io_out_rs2 : UInt<5>
    output io_out_rs3 : UInt<5>
    output io_rvc : UInt<1>

    node _io_rvc_T = bits(io_in, 1, 0) @[RVC.scala 163:20]
    skip
    node _io_out_s_opc_T = bits(io_in, 12, 5) @[RVC.scala 53:22]
    node _io_out_s_opc_T_1 = orr(_io_out_s_opc_T) @[RVC.scala 53:29]
    node io_out_s_lo_lo = mux(_io_out_s_opc_T_1, UInt<7>("h13"), UInt<7>("h1f")) @[RVC.scala 53:20]
    node io_out_s_hi_hi_hi = bits(io_in, 10, 7) @[RVC.scala 34:26]
    node io_out_s_hi_hi_lo = bits(io_in, 12, 11) @[RVC.scala 34:35]
    node io_out_s_hi_lo = bits(io_in, 5, 5) @[RVC.scala 34:45]
    node io_out_s_lo_hi = bits(io_in, 6, 6) @[RVC.scala 34:51]
    node io_out_s_lo = cat(io_out_s_lo_hi, UInt<2>("h0")) @[Cat.scala 30:58]
    node io_out_s_hi_hi = cat(io_out_s_hi_hi_hi, io_out_s_hi_hi_lo) @[Cat.scala 30:58]
    node io_out_s_hi = cat(io_out_s_hi_hi, io_out_s_hi_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_1 = cat(io_out_s_hi, io_out_s_lo) @[Cat.scala 30:58]
    node io_out_s_lo_1 = bits(io_in, 4, 2) @[RVC.scala 31:29]
    node io_out_s_lo_hi_1 = cat(UInt<2>("h1"), io_out_s_lo_1) @[Cat.scala 30:58]
    node io_out_s_lo_2 = cat(io_out_s_lo_hi_1, io_out_s_lo_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_1 = cat(io_out_s_hi_hi_hi_1, UInt<5>("h2")) @[Cat.scala 30:58]
    node io_out_s_hi_1 = cat(io_out_s_hi_hi_1, UInt<3>("h0")) @[Cat.scala 30:58]
    node _io_out_s_T = cat(io_out_s_hi_1, io_out_s_lo_2) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node io_out_s_0_rs3 = bits(io_in, 31, 27) @[RVC.scala 20:101]
    node io_out_s_hi_hi_2 = bits(io_in, 6, 5) @[RVC.scala 36:20]
    node io_out_s_hi_lo_1 = bits(io_in, 12, 10) @[RVC.scala 36:28]
    node io_out_s_hi_2 = cat(io_out_s_hi_hi_2, io_out_s_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_2 = cat(io_out_s_hi_2, UInt<3>("h0")) @[Cat.scala 30:58]
    node io_out_s_lo_5 = bits(io_in, 9, 7) @[RVC.scala 30:29]
    node io_out_s_hi_hi_lo_1 = cat(UInt<2>("h1"), io_out_s_lo_5) @[Cat.scala 30:58]
    skip
    skip
    node io_out_s_lo_7 = cat(io_out_s_lo_hi_1, UInt<7>("h7")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_3 = cat(io_out_s_hi_hi_hi_2, io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_3 = cat(io_out_s_hi_hi_3, UInt<3>("h3")) @[Cat.scala 30:58]
    node _io_out_s_T_4 = cat(io_out_s_hi_3, io_out_s_lo_7) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_4 = cat(io_out_s_hi_lo, io_out_s_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_3 = cat(io_out_s_hi_4, io_out_s_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node io_out_s_lo_14 = cat(io_out_s_lo_hi_1, UInt<7>("h3")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_5 = cat(io_out_s_hi_hi_hi_3, io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_5 = cat(io_out_s_hi_hi_5, UInt<3>("h2")) @[Cat.scala 30:58]
    node _io_out_s_T_9 = cat(io_out_s_hi_5, io_out_s_lo_14) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_out_s_T_14 = cat(io_out_s_hi_3, io_out_s_lo_14) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_hi_5 = shr(io_out_s_hi_hi_hi_3, 5) @[RVC.scala 63:32]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_hi_lo = bits(io_out_s_hi_hi_hi_3, 4, 0) @[RVC.scala 63:65]
    node io_out_s_lo_hi_8 = cat(UInt<3>("h2"), io_out_s_lo_hi_lo) @[Cat.scala 30:58]
    node io_out_s_lo_28 = cat(io_out_s_lo_hi_8, UInt<7>("h3f")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_10 = cat(io_out_s_hi_hi_hi_5, io_out_s_lo_hi_1) @[Cat.scala 30:58]
    node io_out_s_hi_10 = cat(io_out_s_hi_hi_10, io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node _io_out_s_T_21 = cat(io_out_s_hi_10, io_out_s_lo_28) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_hi_6 = shr(io_out_s_hi_hi_hi_2, 5) @[RVC.scala 66:30]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_hi_lo_1 = bits(io_out_s_hi_hi_hi_2, 4, 0) @[RVC.scala 66:63]
    node io_out_s_lo_hi_9 = cat(UInt<3>("h3"), io_out_s_lo_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_lo_34 = cat(io_out_s_lo_hi_9, UInt<7>("h27")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_13 = cat(io_out_s_hi_hi_hi_6, io_out_s_lo_hi_1) @[Cat.scala 30:58]
    node io_out_s_hi_13 = cat(io_out_s_hi_hi_13, io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node _io_out_s_T_28 = cat(io_out_s_hi_13, io_out_s_lo_34) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_42 = cat(io_out_s_lo_hi_8, UInt<7>("h23")) @[Cat.scala 30:58]
    skip
    skip
    node _io_out_s_T_35 = cat(io_out_s_hi_10, io_out_s_lo_42) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_48 = cat(io_out_s_lo_hi_9, UInt<7>("h23")) @[Cat.scala 30:58]
    skip
    skip
    node _io_out_s_T_42 = cat(io_out_s_hi_13, io_out_s_lo_48) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_out_s_T_47 = bits(io_in, 12, 12) @[RVC.scala 43:30]
    skip
    node io_out_s_hi_20 = mux(_io_out_s_T_47, UInt<7>("h7f"), UInt<7>("h0")) @[Bitwise.scala 72:12]
    node io_out_s_lo_52 = bits(io_in, 6, 2) @[RVC.scala 43:38]
    node io_out_s_hi_hi_hi_9 = cat(io_out_s_hi_20, io_out_s_lo_52) @[Cat.scala 30:58]
    node io_out_s_hi_hi_lo_8 = bits(io_in, 11, 7) @[RVC.scala 33:13]
    skip
    node io_out_s_lo_53 = cat(io_out_s_hi_hi_lo_8, UInt<7>("h13")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_20 = cat(io_out_s_hi_hi_hi_9, io_out_s_hi_hi_lo_8) @[Cat.scala 30:58]
    node io_out_s_hi_21 = cat(io_out_s_hi_hi_20, UInt<3>("h0")) @[Cat.scala 30:58]
    node io_out_s_8_bits = cat(io_out_s_hi_21, io_out_s_lo_53) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_out_s_opc_T_3 = orr(io_out_s_hi_hi_lo_8) @[RVC.scala 77:24]
    node io_out_s_lo_lo_1 = mux(_io_out_s_opc_T_3, UInt<7>("h1b"), UInt<7>("h1f")) @[RVC.scala 77:20]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_56 = cat(io_out_s_hi_hi_lo_8, io_out_s_lo_lo_1) @[Cat.scala 30:58]
    skip
    skip
    node io_out_s_9_bits = cat(io_out_s_hi_21, io_out_s_lo_56) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_22 = cat(io_out_s_hi_hi_hi_9, UInt<5>("h0")) @[Cat.scala 30:58]
    node io_out_s_hi_25 = cat(io_out_s_hi_hi_22, UInt<3>("h0")) @[Cat.scala 30:58]
    node io_out_s_10_bits = cat(io_out_s_hi_25, io_out_s_lo_53) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_out_s_opc_T_7 = orr(io_out_s_hi_hi_hi_9) @[RVC.scala 90:29]
    node io_out_s_me_lo = mux(_io_out_s_opc_T_7, UInt<7>("h37"), UInt<7>("h3f")) @[RVC.scala 90:20]
    skip
    skip
    node io_out_s_me_hi_hi = mux(_io_out_s_T_47, UInt<15>("h7fff"), UInt<15>("h0")) @[Bitwise.scala 72:12]
    skip
    node io_out_s_me_hi = cat(io_out_s_me_hi_hi, io_out_s_lo_52) @[Cat.scala 30:58]
    node _io_out_s_me_T_2 = cat(io_out_s_me_hi, UInt<12>("h0")) @[Cat.scala 30:58]
    node io_out_s_me_hi_hi_1 = bits(_io_out_s_me_T_2, 31, 12) @[RVC.scala 91:31]
    skip
    node io_out_s_me_hi_1 = cat(io_out_s_me_hi_hi_1, io_out_s_hi_hi_lo_8) @[Cat.scala 30:58]
    node io_out_s_me_bits = cat(io_out_s_me_hi_1, io_out_s_me_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_out_s_T_68 = eq(io_out_s_hi_hi_lo_8, UInt<5>("h0")) @[RVC.scala 92:14]
    skip
    node _io_out_s_T_70 = eq(io_out_s_hi_hi_lo_8, UInt<5>("h2")) @[RVC.scala 92:27]
    node _io_out_s_T_71 = or(_io_out_s_T_68, _io_out_s_T_70) @[RVC.scala 92:21]
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_lo_2 = mux(_io_out_s_opc_T_7, UInt<7>("h13"), UInt<7>("h1f")) @[RVC.scala 86:20]
    skip
    skip
    node io_out_s_hi_hi_hi_12 = mux(_io_out_s_T_47, UInt<3>("h7"), UInt<3>("h0")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_lo_10 = bits(io_in, 4, 3) @[RVC.scala 42:42]
    skip
    node io_out_s_lo_hi_hi = bits(io_in, 2, 2) @[RVC.scala 42:56]
    skip
    node io_out_s_lo_hi_17 = cat(io_out_s_lo_hi_hi, io_out_s_lo_hi) @[Cat.scala 30:58]
    node io_out_s_lo_61 = cat(io_out_s_lo_hi_17, UInt<4>("h0")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_23 = cat(io_out_s_hi_hi_hi_12, io_out_s_hi_hi_lo_10) @[Cat.scala 30:58]
    node io_out_s_hi_26 = cat(io_out_s_hi_hi_23, io_out_s_hi_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_13 = cat(io_out_s_hi_26, io_out_s_lo_61) @[Cat.scala 30:58]
    skip
    skip
    node io_out_s_lo_62 = cat(io_out_s_hi_hi_lo_8, io_out_s_lo_lo_2) @[Cat.scala 30:58]
    node io_out_s_hi_hi_24 = cat(io_out_s_hi_hi_hi_13, io_out_s_hi_hi_lo_8) @[Cat.scala 30:58]
    node io_out_s_hi_27 = cat(io_out_s_hi_hi_24, UInt<3>("h0")) @[Cat.scala 30:58]
    node io_out_s_res_bits = cat(io_out_s_hi_27, io_out_s_lo_62) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_11_bits = mux(_io_out_s_T_71, io_out_s_res_bits, io_out_s_me_bits) @[RVC.scala 92:10]
    skip
    skip
    node io_out_s_11_rd = mux(_io_out_s_T_71, io_out_s_hi_hi_lo_8, io_out_s_hi_hi_lo_8) @[RVC.scala 92:10]
    skip
    skip
    skip
    skip
    skip
    node io_out_s_11_rs2 = mux(_io_out_s_T_71, io_out_s_lo_hi_1, io_out_s_lo_hi_1) @[RVC.scala 92:10]
    skip
    skip
    node io_out_s_11_rs3 = mux(_io_out_s_T_71, io_out_s_0_rs3, io_out_s_0_rs3) @[RVC.scala 92:10]
    skip
    skip
    node io_out_s_hi_hi_hi_14 = cat(_io_out_s_T_47, io_out_s_lo_52) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node io_out_s_lo_67 = cat(io_out_s_hi_hi_lo_1, UInt<7>("h13")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_25 = cat(io_out_s_hi_hi_hi_14, io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_29 = cat(io_out_s_hi_hi_25, UInt<3>("h5")) @[Cat.scala 30:58]
    node _io_out_s_T_79 = cat(io_out_s_hi_29, io_out_s_lo_67) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _GEN_0 = pad(_io_out_s_T_79, 31) @[RVC.scala 99:23]
    node _io_out_s_T_81 = or(_GEN_0, UInt<31>("h40000000")) @[RVC.scala 99:23]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_27 = cat(io_out_s_hi_hi_hi_9, io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_33 = cat(io_out_s_hi_hi_27, UInt<3>("h7")) @[Cat.scala 30:58]
    node _io_out_s_T_84 = cat(io_out_s_hi_33, io_out_s_lo_67) @[Cat.scala 30:58]
    skip
    skip
    node _io_out_s_funct_T = cat(_io_out_s_T_47, io_out_s_hi_hi_2) @[Cat.scala 30:58]
    node _io_out_s_funct_T_1 = eq(_io_out_s_funct_T, UInt<3>("h1")) @[package.scala 32:86]
    node _io_out_s_funct_T_2 = mux(_io_out_s_funct_T_1, UInt<3>("h4"), UInt<3>("h0")) @[package.scala 32:76]
    node _io_out_s_funct_T_3 = eq(_io_out_s_funct_T, UInt<3>("h2")) @[package.scala 32:86]
    node _io_out_s_funct_T_4 = mux(_io_out_s_funct_T_3, UInt<3>("h6"), _io_out_s_funct_T_2) @[package.scala 32:76]
    node _io_out_s_funct_T_5 = eq(_io_out_s_funct_T, UInt<3>("h3")) @[package.scala 32:86]
    node _io_out_s_funct_T_6 = mux(_io_out_s_funct_T_5, UInt<3>("h7"), _io_out_s_funct_T_4) @[package.scala 32:76]
    node _io_out_s_funct_T_7 = eq(_io_out_s_funct_T, UInt<3>("h4")) @[package.scala 32:86]
    node _io_out_s_funct_T_8 = mux(_io_out_s_funct_T_7, UInt<3>("h0"), _io_out_s_funct_T_6) @[package.scala 32:76]
    node _io_out_s_funct_T_9 = eq(_io_out_s_funct_T, UInt<3>("h5")) @[package.scala 32:86]
    node _io_out_s_funct_T_10 = mux(_io_out_s_funct_T_9, UInt<3>("h0"), _io_out_s_funct_T_8) @[package.scala 32:76]
    node _io_out_s_funct_T_11 = eq(_io_out_s_funct_T, UInt<3>("h6")) @[package.scala 32:86]
    node _io_out_s_funct_T_12 = mux(_io_out_s_funct_T_11, UInt<3>("h2"), _io_out_s_funct_T_10) @[package.scala 32:76]
    node _io_out_s_funct_T_13 = eq(_io_out_s_funct_T, UInt<3>("h7")) @[package.scala 32:86]
    node io_out_s_hi_lo_17 = mux(_io_out_s_funct_T_13, UInt<3>("h3"), _io_out_s_funct_T_12) @[package.scala 32:76]
    skip
    node _io_out_s_sub_T_1 = eq(io_out_s_hi_hi_2, UInt<2>("h0")) @[RVC.scala 103:30]
    node io_out_s_sub = mux(_io_out_s_sub_T_1, UInt<31>("h40000000"), UInt<31>("h0")) @[RVC.scala 103:22]
    skip
    node io_out_s_lo_lo_3 = mux(_io_out_s_T_47, UInt<7>("h3b"), UInt<7>("h33")) @[RVC.scala 104:22]
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_79 = cat(io_out_s_hi_hi_lo_1, io_out_s_lo_lo_3) @[Cat.scala 30:58]
    node io_out_s_hi_hi_28 = cat(io_out_s_lo_hi_1, io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_34 = cat(io_out_s_hi_hi_28, io_out_s_hi_lo_17) @[Cat.scala 30:58]
    node _io_out_s_T_85 = cat(io_out_s_hi_34, io_out_s_lo_79) @[Cat.scala 30:58]
    node _GEN_1 = pad(_io_out_s_T_85, 31) @[RVC.scala 105:43]
    node _io_out_s_T_86 = or(_GEN_1, io_out_s_sub) @[RVC.scala 105:43]
    node _io_out_s_T_87 = bits(io_in, 11, 10) @[RVC.scala 107:42]
    node _io_out_s_T_88 = eq(_io_out_s_T_87, UInt<2>("h1")) @[package.scala 32:86]
    node _io_out_s_T_89 = mux(_io_out_s_T_88, _io_out_s_T_81, pad(_io_out_s_T_79, 31)) @[package.scala 32:76]
    node _io_out_s_T_90 = eq(_io_out_s_T_87, UInt<2>("h2")) @[package.scala 32:86]
    node _io_out_s_T_91 = mux(_io_out_s_T_90, _io_out_s_T_84, pad(_io_out_s_T_89, 32)) @[package.scala 32:76]
    node _io_out_s_T_92 = eq(_io_out_s_T_87, UInt<2>("h3")) @[package.scala 32:86]
    node io_out_s_12_bits = mux(_io_out_s_T_92, pad(_io_out_s_T_86, 32), _io_out_s_T_91) @[package.scala 32:76]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_hi_hi = mux(_io_out_s_T_47, UInt<10>("h3ff"), UInt<10>("h0")) @[Bitwise.scala 72:12]
    node io_out_s_hi_hi_hi_lo = bits(io_in, 8, 8) @[RVC.scala 44:36]
    node io_out_s_hi_hi_lo_16 = bits(io_in, 10, 9) @[RVC.scala 44:42]
    skip
    node io_out_s_hi_lo_lo = bits(io_in, 7, 7) @[RVC.scala 44:57]
    skip
    node io_out_s_lo_hi_lo_5 = bits(io_in, 11, 11) @[RVC.scala 44:69]
    node io_out_s_lo_lo_hi = bits(io_in, 5, 3) @[RVC.scala 44:76]
    node io_out_s_lo_lo_4 = cat(io_out_s_lo_lo_hi, UInt<1>("h0")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_23 = cat(io_out_s_lo_hi_hi, io_out_s_lo_hi_lo_5) @[Cat.scala 30:58]
    node io_out_s_lo_83 = cat(io_out_s_lo_hi_23, io_out_s_lo_lo_4) @[Cat.scala 30:58]
    node io_out_s_hi_lo_18 = cat(io_out_s_lo_hi, io_out_s_hi_lo_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_18 = cat(io_out_s_hi_hi_hi_hi, io_out_s_hi_hi_hi_lo) @[Cat.scala 30:58]
    node io_out_s_hi_hi_29 = cat(io_out_s_hi_hi_hi_18, io_out_s_hi_hi_lo_16) @[Cat.scala 30:58]
    node io_out_s_hi_35 = cat(io_out_s_hi_hi_29, io_out_s_hi_lo_18) @[Cat.scala 30:58]
    node _io_out_s_T_100 = cat(io_out_s_hi_35, io_out_s_lo_83) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_19 = bits(_io_out_s_T_100, 20, 20) @[RVC.scala 94:26]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_lo_18 = bits(_io_out_s_T_100, 10, 1) @[RVC.scala 94:36]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_lo_21 = bits(_io_out_s_T_100, 11, 11) @[RVC.scala 94:48]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_hi_hi_5 = bits(_io_out_s_T_100, 19, 12) @[RVC.scala 94:58]
    node io_out_s_lo_hi_27 = cat(io_out_s_lo_hi_hi_5, UInt<5>("h0")) @[Cat.scala 30:58]
    node io_out_s_lo_87 = cat(io_out_s_lo_hi_27, UInt<7>("h6f")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_33 = cat(io_out_s_hi_hi_hi_19, io_out_s_hi_hi_lo_18) @[Cat.scala 30:58]
    node io_out_s_hi_39 = cat(io_out_s_hi_hi_33, io_out_s_hi_lo_21) @[Cat.scala 30:58]
    node io_out_s_13_bits = cat(io_out_s_hi_39, io_out_s_lo_87) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_hi_23 = mux(_io_out_s_T_47, UInt<5>("h1f"), UInt<5>("h0")) @[Bitwise.scala 72:12]
    skip
    skip
    skip
    skip
    node io_out_s_lo_hi_28 = cat(_io_out_s_T_87, io_out_s_hi_hi_lo_10) @[Cat.scala 30:58]
    node io_out_s_lo_90 = cat(io_out_s_lo_hi_28, UInt<1>("h0")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_34 = cat(io_out_s_hi_hi_hi_23, io_out_s_hi_hi_2) @[Cat.scala 30:58]
    node io_out_s_hi_40 = cat(io_out_s_hi_hi_34, io_out_s_lo_hi_hi) @[Cat.scala 30:58]
    node _io_out_s_T_116 = cat(io_out_s_hi_40, io_out_s_lo_90) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_24 = bits(_io_out_s_T_116, 12, 12) @[RVC.scala 95:29]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_lo_23 = bits(_io_out_s_T_116, 10, 5) @[RVC.scala 95:39]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_hi_lo_12 = bits(_io_out_s_T_116, 4, 1) @[RVC.scala 95:71]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_lo_hi_4 = bits(_io_out_s_T_116, 11, 11) @[RVC.scala 95:82]
    node io_out_s_lo_lo_8 = cat(io_out_s_lo_lo_hi_4, UInt<7>("h63")) @[Cat.scala 30:58]
    node io_out_s_lo_hi_32 = cat(UInt<3>("h0"), io_out_s_lo_hi_lo_12) @[Cat.scala 30:58]
    node io_out_s_lo_95 = cat(io_out_s_lo_hi_32, io_out_s_lo_lo_8) @[Cat.scala 30:58]
    node io_out_s_hi_lo_27 = cat(UInt<5>("h0"), io_out_s_hi_hi_lo_1) @[Cat.scala 30:58]
    node io_out_s_hi_hi_38 = cat(io_out_s_hi_hi_hi_24, io_out_s_hi_hi_lo_23) @[Cat.scala 30:58]
    node io_out_s_hi_44 = cat(io_out_s_hi_hi_38, io_out_s_hi_lo_27) @[Cat.scala 30:58]
    node io_out_s_14_bits = cat(io_out_s_hi_44, io_out_s_lo_95) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_hi_37 = cat(UInt<3>("h1"), io_out_s_lo_hi_lo_12) @[Cat.scala 30:58]
    node io_out_s_lo_103 = cat(io_out_s_lo_hi_37, io_out_s_lo_lo_8) @[Cat.scala 30:58]
    skip
    skip
    skip
    node io_out_s_15_bits = cat(io_out_s_hi_44, io_out_s_lo_103) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_lo_10 = mux(_io_out_s_opc_T_3, UInt<7>("h3"), UInt<7>("h1f")) @[RVC.scala 113:23]
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_hi_hi_44 = cat(io_out_s_hi_hi_hi_14, io_out_s_hi_hi_lo_8) @[Cat.scala 30:58]
    node io_out_s_hi_51 = cat(io_out_s_hi_hi_44, UInt<3>("h1")) @[Cat.scala 30:58]
    node _io_out_s_T_145 = cat(io_out_s_hi_51, io_out_s_lo_53) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_107 = cat(io_out_s_hi_hi_2, UInt<3>("h0")) @[Cat.scala 30:58]
    node io_out_s_hi_52 = cat(io_out_s_lo_1, _io_out_s_T_47) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_34 = cat(io_out_s_hi_52, io_out_s_lo_107) @[Cat.scala 30:58]
    skip
    node io_out_s_lo_108 = cat(io_out_s_hi_hi_lo_8, UInt<7>("h7")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_46 = cat(io_out_s_hi_hi_hi_34, UInt<5>("h2")) @[Cat.scala 30:58]
    node io_out_s_hi_53 = cat(io_out_s_hi_hi_46, UInt<3>("h3")) @[Cat.scala 30:58]
    node _io_out_s_T_150 = cat(io_out_s_hi_53, io_out_s_lo_108) @[Cat.scala 30:58]
    skip
    skip
    skip
    node io_out_s_hi_hi_47 = bits(io_in, 3, 2) @[RVC.scala 37:22]
    skip
    node io_out_s_lo_hi_41 = bits(io_in, 6, 4) @[RVC.scala 37:37]
    node io_out_s_lo_109 = cat(io_out_s_lo_hi_41, UInt<2>("h0")) @[Cat.scala 30:58]
    node io_out_s_hi_54 = cat(io_out_s_hi_hi_47, _io_out_s_T_47) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_35 = cat(io_out_s_hi_54, io_out_s_lo_109) @[Cat.scala 30:58]
    skip
    node io_out_s_lo_110 = cat(io_out_s_hi_hi_lo_8, io_out_s_lo_lo_10) @[Cat.scala 30:58]
    node io_out_s_hi_hi_48 = cat(io_out_s_hi_hi_hi_35, UInt<5>("h2")) @[Cat.scala 30:58]
    node io_out_s_hi_55 = cat(io_out_s_hi_hi_48, UInt<3>("h2")) @[Cat.scala 30:58]
    node _io_out_s_T_154 = cat(io_out_s_hi_55, io_out_s_lo_110) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_out_s_T_158 = cat(io_out_s_hi_53, io_out_s_lo_110) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    node io_out_s_mv_lo = cat(io_out_s_hi_hi_lo_8, UInt<7>("h33")) @[Cat.scala 30:58]
    node io_out_s_mv_hi_hi = cat(io_out_s_lo_52, UInt<5>("h0")) @[Cat.scala 30:58]
    node io_out_s_mv_hi = cat(io_out_s_mv_hi_hi, UInt<3>("h0")) @[Cat.scala 30:58]
    node _io_out_s_mv_T = cat(io_out_s_mv_hi, io_out_s_mv_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_add_hi_hi = cat(io_out_s_lo_52, io_out_s_hi_hi_lo_8) @[Cat.scala 30:58]
    node io_out_s_add_hi = cat(io_out_s_add_hi_hi, UInt<3>("h0")) @[Cat.scala 30:58]
    node _io_out_s_add_T = cat(io_out_s_add_hi, io_out_s_mv_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_jr = cat(io_out_s_add_hi, UInt<12>("h67")) @[Cat.scala 30:58]
    node io_out_s_reserved_hi = shr(io_out_s_jr, 7) @[RVC.scala 133:29]
    node io_out_s_reserved = cat(io_out_s_reserved_hi, UInt<7>("h1f")) @[Cat.scala 30:58]
    skip
    skip
    node _io_out_s_jr_reserved_T_2 = mux(_io_out_s_opc_T_3, io_out_s_jr, io_out_s_reserved) @[RVC.scala 134:33]
    skip
    skip
    skip
    skip
    node _io_out_s_jr_mv_T_1 = orr(io_out_s_lo_52) @[RVC.scala 135:27]
    node io_out_s_mv_bits = pad(_io_out_s_mv_T, 32) @[RVC.scala 21:19 22:14]
    node io_out_s_jr_reserved_bits = pad(_io_out_s_jr_reserved_T_2, 32) @[RVC.scala 21:19 22:14]
    node io_out_s_jr_mv_bits = mux(_io_out_s_jr_mv_T_1, io_out_s_mv_bits, io_out_s_jr_reserved_bits) @[RVC.scala 135:22]
    skip
    skip
    node io_out_s_jr_mv_rd = mux(_io_out_s_jr_mv_T_1, io_out_s_hi_hi_lo_8, UInt<5>("h0")) @[RVC.scala 135:22]
    skip
    skip
    node io_out_s_jr_mv_rs1 = mux(_io_out_s_jr_mv_T_1, UInt<5>("h0"), io_out_s_hi_hi_lo_8) @[RVC.scala 135:22]
    skip
    skip
    node io_out_s_jr_mv_rs2 = mux(_io_out_s_jr_mv_T_1, io_out_s_lo_52, io_out_s_lo_52) @[RVC.scala 135:22]
    skip
    skip
    node io_out_s_jr_mv_rs3 = mux(_io_out_s_jr_mv_T_1, io_out_s_0_rs3, io_out_s_0_rs3) @[RVC.scala 135:22]
    skip
    skip
    skip
    skip
    skip
    node io_out_s_jalr = cat(io_out_s_add_hi, UInt<12>("he7")) @[Cat.scala 30:58]
    skip
    node _io_out_s_ebreak_T = cat(io_out_s_reserved_hi, UInt<7>("h73")) @[Cat.scala 30:58]
    node io_out_s_ebreak = or(_io_out_s_ebreak_T, UInt<25>("h100000")) @[RVC.scala 137:46]
    skip
    skip
    node _io_out_s_jalr_ebreak_T_2 = mux(_io_out_s_opc_T_3, io_out_s_jalr, io_out_s_ebreak) @[RVC.scala 138:33]
    skip
    skip
    skip
    skip
    skip
    node io_out_s_add_bits = pad(_io_out_s_add_T, 32) @[RVC.scala 21:19 22:14]
    node io_out_s_jalr_ebreak_bits = pad(_io_out_s_jalr_ebreak_T_2, 32) @[RVC.scala 21:19 22:14]
    node io_out_s_jalr_add_bits = mux(_io_out_s_jr_mv_T_1, io_out_s_add_bits, io_out_s_jalr_ebreak_bits) @[RVC.scala 139:25]
    skip
    skip
    node io_out_s_jalr_add_rd = mux(_io_out_s_jr_mv_T_1, io_out_s_hi_hi_lo_8, UInt<5>("h1")) @[RVC.scala 139:25]
    skip
    skip
    node io_out_s_jalr_add_rs1 = mux(_io_out_s_jr_mv_T_1, io_out_s_hi_hi_lo_8, io_out_s_hi_hi_lo_8) @[RVC.scala 139:25]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_20_bits = mux(_io_out_s_T_47, io_out_s_jalr_add_bits, io_out_s_jr_mv_bits) @[RVC.scala 140:10]
    node io_out_s_20_rd = mux(_io_out_s_T_47, io_out_s_jalr_add_rd, io_out_s_jr_mv_rd) @[RVC.scala 140:10]
    node io_out_s_20_rs1 = mux(_io_out_s_T_47, io_out_s_jalr_add_rs1, io_out_s_jr_mv_rs1) @[RVC.scala 140:10]
    node io_out_s_20_rs2 = mux(_io_out_s_T_47, io_out_s_jr_mv_rs2, io_out_s_jr_mv_rs2) @[RVC.scala 140:10]
    node io_out_s_20_rs3 = mux(_io_out_s_T_47, io_out_s_jr_mv_rs3, io_out_s_jr_mv_rs3) @[RVC.scala 140:10]
    skip
    skip
    node io_out_s_hi_58 = cat(io_out_s_lo_5, io_out_s_hi_lo_1) @[Cat.scala 30:58]
    node _io_out_s_T_163 = cat(io_out_s_hi_58, UInt<3>("h0")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_37 = shr(_io_out_s_T_163, 5) @[RVC.scala 124:34]
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_hi_lo_19 = bits(_io_out_s_T_163, 4, 0) @[RVC.scala 124:66]
    node io_out_s_lo_hi_45 = cat(UInt<3>("h3"), io_out_s_lo_hi_lo_19) @[Cat.scala 30:58]
    node io_out_s_lo_113 = cat(io_out_s_lo_hi_45, UInt<7>("h27")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_53 = cat(io_out_s_hi_hi_hi_37, io_out_s_lo_52) @[Cat.scala 30:58]
    node io_out_s_hi_60 = cat(io_out_s_hi_hi_53, UInt<5>("h2")) @[Cat.scala 30:58]
    node _io_out_s_T_165 = cat(io_out_s_hi_60, io_out_s_lo_113) @[Cat.scala 30:58]
    skip
    skip
    skip
    node io_out_s_hi_hi_54 = bits(io_in, 8, 7) @[RVC.scala 39:22]
    node io_out_s_hi_lo_38 = bits(io_in, 12, 9) @[RVC.scala 39:30]
    node io_out_s_hi_61 = cat(io_out_s_hi_hi_54, io_out_s_hi_lo_38) @[Cat.scala 30:58]
    node _io_out_s_T_169 = cat(io_out_s_hi_61, UInt<2>("h0")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_hi_38 = shr(_io_out_s_T_169, 5) @[RVC.scala 123:33]
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_hi_lo_20 = bits(_io_out_s_T_169, 4, 0) @[RVC.scala 123:65]
    node io_out_s_lo_hi_46 = cat(UInt<3>("h2"), io_out_s_lo_hi_lo_20) @[Cat.scala 30:58]
    node io_out_s_lo_114 = cat(io_out_s_lo_hi_46, UInt<7>("h23")) @[Cat.scala 30:58]
    node io_out_s_hi_hi_56 = cat(io_out_s_hi_hi_hi_38, io_out_s_lo_52) @[Cat.scala 30:58]
    node io_out_s_hi_63 = cat(io_out_s_hi_hi_56, UInt<5>("h2")) @[Cat.scala 30:58]
    node _io_out_s_T_171 = cat(io_out_s_hi_63, io_out_s_lo_114) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_s_lo_115 = cat(io_out_s_lo_hi_45, UInt<7>("h23")) @[Cat.scala 30:58]
    skip
    skip
    node _io_out_s_T_177 = cat(io_out_s_hi_60, io_out_s_lo_115) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    node io_out_s_24_rs1 = bits(io_in, 19, 15) @[RVC.scala 20:57]
    node io_out_s_24_rs2 = bits(io_in, 24, 20) @[RVC.scala 20:79]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node io_out_lo = bits(io_in, 15, 13) @[RVC.scala 151:20]
    node _io_out_T = cat(_io_rvc_T, io_out_lo) @[Cat.scala 30:58]
    node _io_out_T_1 = eq(_io_out_T, UInt<5>("h1")) @[package.scala 32:86]
    node io_out_s_1_bits = pad(_io_out_s_T_4, 32) @[RVC.scala 21:19 22:14]
    node io_out_s_0_bits = pad(_io_out_s_T, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_2_bits = mux(_io_out_T_1, io_out_s_1_bits, io_out_s_0_bits) @[package.scala 32:76]
    skip
    skip
    node _io_out_T_2_rd = mux(_io_out_T_1, io_out_s_lo_hi_1, io_out_s_lo_hi_1) @[package.scala 32:76]
    skip
    skip
    node _io_out_T_2_rs1 = mux(_io_out_T_1, io_out_s_hi_hi_lo_1, UInt<5>("h2")) @[package.scala 32:76]
    skip
    skip
    skip
    skip
    skip
    node _io_out_T_2_rs3 = mux(_io_out_T_1, io_out_s_0_rs3, io_out_s_0_rs3) @[package.scala 32:76]
    node _io_out_T_3 = eq(_io_out_T, UInt<5>("h2")) @[package.scala 32:86]
    node io_out_s_2_bits = pad(_io_out_s_T_9, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_4_bits = mux(_io_out_T_3, io_out_s_2_bits, _io_out_T_2_bits) @[package.scala 32:76]
    skip
    node _io_out_T_4_rd = mux(_io_out_T_3, io_out_s_lo_hi_1, _io_out_T_2_rd) @[package.scala 32:76]
    skip
    node _io_out_T_4_rs1 = mux(_io_out_T_3, io_out_s_hi_hi_lo_1, _io_out_T_2_rs1) @[package.scala 32:76]
    skip
    skip
    skip
    node _io_out_T_4_rs3 = mux(_io_out_T_3, io_out_s_0_rs3, _io_out_T_2_rs3) @[package.scala 32:76]
    node _io_out_T_5 = eq(_io_out_T, UInt<5>("h3")) @[package.scala 32:86]
    node io_out_s_3_bits = pad(_io_out_s_T_14, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_6_bits = mux(_io_out_T_5, io_out_s_3_bits, _io_out_T_4_bits) @[package.scala 32:76]
    skip
    node _io_out_T_6_rd = mux(_io_out_T_5, io_out_s_lo_hi_1, _io_out_T_4_rd) @[package.scala 32:76]
    skip
    node _io_out_T_6_rs1 = mux(_io_out_T_5, io_out_s_hi_hi_lo_1, _io_out_T_4_rs1) @[package.scala 32:76]
    skip
    skip
    skip
    node _io_out_T_6_rs3 = mux(_io_out_T_5, io_out_s_0_rs3, _io_out_T_4_rs3) @[package.scala 32:76]
    node _io_out_T_7 = eq(_io_out_T, UInt<5>("h4")) @[package.scala 32:86]
    node io_out_s_4_bits = pad(_io_out_s_T_21, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_8_bits = mux(_io_out_T_7, io_out_s_4_bits, _io_out_T_6_bits) @[package.scala 32:76]
    skip
    node _io_out_T_8_rd = mux(_io_out_T_7, io_out_s_lo_hi_1, _io_out_T_6_rd) @[package.scala 32:76]
    skip
    node _io_out_T_8_rs1 = mux(_io_out_T_7, io_out_s_hi_hi_lo_1, _io_out_T_6_rs1) @[package.scala 32:76]
    skip
    skip
    skip
    node _io_out_T_8_rs3 = mux(_io_out_T_7, io_out_s_0_rs3, _io_out_T_6_rs3) @[package.scala 32:76]
    node _io_out_T_9 = eq(_io_out_T, UInt<5>("h5")) @[package.scala 32:86]
    node io_out_s_5_bits = pad(_io_out_s_T_28, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_10_bits = mux(_io_out_T_9, io_out_s_5_bits, _io_out_T_8_bits) @[package.scala 32:76]
    skip
    node _io_out_T_10_rd = mux(_io_out_T_9, io_out_s_lo_hi_1, _io_out_T_8_rd) @[package.scala 32:76]
    skip
    node _io_out_T_10_rs1 = mux(_io_out_T_9, io_out_s_hi_hi_lo_1, _io_out_T_8_rs1) @[package.scala 32:76]
    skip
    skip
    skip
    node _io_out_T_10_rs3 = mux(_io_out_T_9, io_out_s_0_rs3, _io_out_T_8_rs3) @[package.scala 32:76]
    node _io_out_T_11 = eq(_io_out_T, UInt<5>("h6")) @[package.scala 32:86]
    node io_out_s_6_bits = pad(_io_out_s_T_35, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_12_bits = mux(_io_out_T_11, io_out_s_6_bits, _io_out_T_10_bits) @[package.scala 32:76]
    skip
    node _io_out_T_12_rd = mux(_io_out_T_11, io_out_s_lo_hi_1, _io_out_T_10_rd) @[package.scala 32:76]
    skip
    node _io_out_T_12_rs1 = mux(_io_out_T_11, io_out_s_hi_hi_lo_1, _io_out_T_10_rs1) @[package.scala 32:76]
    skip
    skip
    skip
    node _io_out_T_12_rs3 = mux(_io_out_T_11, io_out_s_0_rs3, _io_out_T_10_rs3) @[package.scala 32:76]
    node _io_out_T_13 = eq(_io_out_T, UInt<5>("h7")) @[package.scala 32:86]
    node io_out_s_7_bits = pad(_io_out_s_T_42, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_14_bits = mux(_io_out_T_13, io_out_s_7_bits, _io_out_T_12_bits) @[package.scala 32:76]
    skip
    node _io_out_T_14_rd = mux(_io_out_T_13, io_out_s_lo_hi_1, _io_out_T_12_rd) @[package.scala 32:76]
    skip
    node _io_out_T_14_rs1 = mux(_io_out_T_13, io_out_s_hi_hi_lo_1, _io_out_T_12_rs1) @[package.scala 32:76]
    skip
    skip
    skip
    node _io_out_T_14_rs3 = mux(_io_out_T_13, io_out_s_0_rs3, _io_out_T_12_rs3) @[package.scala 32:76]
    node _io_out_T_15 = eq(_io_out_T, UInt<5>("h8")) @[package.scala 32:86]
    skip
    node _io_out_T_16_bits = mux(_io_out_T_15, io_out_s_8_bits, _io_out_T_14_bits) @[package.scala 32:76]
    skip
    node _io_out_T_16_rd = mux(_io_out_T_15, io_out_s_hi_hi_lo_8, _io_out_T_14_rd) @[package.scala 32:76]
    skip
    node _io_out_T_16_rs1 = mux(_io_out_T_15, io_out_s_hi_hi_lo_8, _io_out_T_14_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_16_rs2 = mux(_io_out_T_15, io_out_s_lo_hi_1, _io_out_T_14_rd) @[package.scala 32:76]
    skip
    node _io_out_T_16_rs3 = mux(_io_out_T_15, io_out_s_0_rs3, _io_out_T_14_rs3) @[package.scala 32:76]
    node _io_out_T_17 = eq(_io_out_T, UInt<5>("h9")) @[package.scala 32:86]
    skip
    node _io_out_T_18_bits = mux(_io_out_T_17, io_out_s_9_bits, _io_out_T_16_bits) @[package.scala 32:76]
    skip
    node _io_out_T_18_rd = mux(_io_out_T_17, io_out_s_hi_hi_lo_8, _io_out_T_16_rd) @[package.scala 32:76]
    skip
    node _io_out_T_18_rs1 = mux(_io_out_T_17, io_out_s_hi_hi_lo_8, _io_out_T_16_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_18_rs2 = mux(_io_out_T_17, io_out_s_lo_hi_1, _io_out_T_16_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_18_rs3 = mux(_io_out_T_17, io_out_s_0_rs3, _io_out_T_16_rs3) @[package.scala 32:76]
    node _io_out_T_19 = eq(_io_out_T, UInt<5>("ha")) @[package.scala 32:86]
    skip
    node _io_out_T_20_bits = mux(_io_out_T_19, io_out_s_10_bits, _io_out_T_18_bits) @[package.scala 32:76]
    skip
    node _io_out_T_20_rd = mux(_io_out_T_19, io_out_s_hi_hi_lo_8, _io_out_T_18_rd) @[package.scala 32:76]
    skip
    node _io_out_T_20_rs1 = mux(_io_out_T_19, UInt<5>("h0"), _io_out_T_18_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_20_rs2 = mux(_io_out_T_19, io_out_s_lo_hi_1, _io_out_T_18_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_20_rs3 = mux(_io_out_T_19, io_out_s_0_rs3, _io_out_T_18_rs3) @[package.scala 32:76]
    node _io_out_T_21 = eq(_io_out_T, UInt<5>("hb")) @[package.scala 32:86]
    node _io_out_T_22_bits = mux(_io_out_T_21, io_out_s_11_bits, _io_out_T_20_bits) @[package.scala 32:76]
    node _io_out_T_22_rd = mux(_io_out_T_21, io_out_s_11_rd, _io_out_T_20_rd) @[package.scala 32:76]
    node _io_out_T_22_rs1 = mux(_io_out_T_21, io_out_s_11_rd, _io_out_T_20_rs1) @[package.scala 32:76]
    node _io_out_T_22_rs2 = mux(_io_out_T_21, io_out_s_11_rs2, _io_out_T_20_rs2) @[package.scala 32:76]
    node _io_out_T_22_rs3 = mux(_io_out_T_21, io_out_s_11_rs3, _io_out_T_20_rs3) @[package.scala 32:76]
    node _io_out_T_23 = eq(_io_out_T, UInt<5>("hc")) @[package.scala 32:86]
    skip
    node _io_out_T_24_bits = mux(_io_out_T_23, io_out_s_12_bits, _io_out_T_22_bits) @[package.scala 32:76]
    skip
    node _io_out_T_24_rd = mux(_io_out_T_23, io_out_s_hi_hi_lo_1, _io_out_T_22_rd) @[package.scala 32:76]
    skip
    node _io_out_T_24_rs1 = mux(_io_out_T_23, io_out_s_hi_hi_lo_1, _io_out_T_22_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_24_rs2 = mux(_io_out_T_23, io_out_s_lo_hi_1, _io_out_T_22_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_24_rs3 = mux(_io_out_T_23, io_out_s_0_rs3, _io_out_T_22_rs3) @[package.scala 32:76]
    node _io_out_T_25 = eq(_io_out_T, UInt<5>("hd")) @[package.scala 32:86]
    skip
    node _io_out_T_26_bits = mux(_io_out_T_25, io_out_s_13_bits, _io_out_T_24_bits) @[package.scala 32:76]
    skip
    node _io_out_T_26_rd = mux(_io_out_T_25, UInt<5>("h0"), _io_out_T_24_rd) @[package.scala 32:76]
    skip
    node _io_out_T_26_rs1 = mux(_io_out_T_25, io_out_s_hi_hi_lo_1, _io_out_T_24_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_26_rs2 = mux(_io_out_T_25, io_out_s_lo_hi_1, _io_out_T_24_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_26_rs3 = mux(_io_out_T_25, io_out_s_0_rs3, _io_out_T_24_rs3) @[package.scala 32:76]
    node _io_out_T_27 = eq(_io_out_T, UInt<5>("he")) @[package.scala 32:86]
    skip
    node _io_out_T_28_bits = mux(_io_out_T_27, io_out_s_14_bits, _io_out_T_26_bits) @[package.scala 32:76]
    skip
    node _io_out_T_28_rd = mux(_io_out_T_27, io_out_s_hi_hi_lo_1, _io_out_T_26_rd) @[package.scala 32:76]
    skip
    node _io_out_T_28_rs1 = mux(_io_out_T_27, io_out_s_hi_hi_lo_1, _io_out_T_26_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_28_rs2 = mux(_io_out_T_27, UInt<5>("h0"), _io_out_T_26_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_28_rs3 = mux(_io_out_T_27, io_out_s_0_rs3, _io_out_T_26_rs3) @[package.scala 32:76]
    node _io_out_T_29 = eq(_io_out_T, UInt<5>("hf")) @[package.scala 32:86]
    skip
    node _io_out_T_30_bits = mux(_io_out_T_29, io_out_s_15_bits, _io_out_T_28_bits) @[package.scala 32:76]
    skip
    node _io_out_T_30_rd = mux(_io_out_T_29, UInt<5>("h0"), _io_out_T_28_rd) @[package.scala 32:76]
    skip
    node _io_out_T_30_rs1 = mux(_io_out_T_29, io_out_s_hi_hi_lo_1, _io_out_T_28_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_30_rs2 = mux(_io_out_T_29, UInt<5>("h0"), _io_out_T_28_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_30_rs3 = mux(_io_out_T_29, io_out_s_0_rs3, _io_out_T_28_rs3) @[package.scala 32:76]
    node _io_out_T_31 = eq(_io_out_T, UInt<5>("h10")) @[package.scala 32:86]
    node io_out_s_16_bits = pad(_io_out_s_T_145, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_32_bits = mux(_io_out_T_31, io_out_s_16_bits, _io_out_T_30_bits) @[package.scala 32:76]
    skip
    node _io_out_T_32_rd = mux(_io_out_T_31, io_out_s_hi_hi_lo_8, _io_out_T_30_rd) @[package.scala 32:76]
    skip
    node _io_out_T_32_rs1 = mux(_io_out_T_31, io_out_s_hi_hi_lo_8, _io_out_T_30_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_32_rs2 = mux(_io_out_T_31, io_out_s_lo_52, _io_out_T_30_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_32_rs3 = mux(_io_out_T_31, io_out_s_0_rs3, _io_out_T_30_rs3) @[package.scala 32:76]
    node _io_out_T_33 = eq(_io_out_T, UInt<5>("h11")) @[package.scala 32:86]
    node io_out_s_17_bits = pad(_io_out_s_T_150, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_34_bits = mux(_io_out_T_33, io_out_s_17_bits, _io_out_T_32_bits) @[package.scala 32:76]
    skip
    node _io_out_T_34_rd = mux(_io_out_T_33, io_out_s_hi_hi_lo_8, _io_out_T_32_rd) @[package.scala 32:76]
    skip
    node _io_out_T_34_rs1 = mux(_io_out_T_33, UInt<5>("h2"), _io_out_T_32_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_34_rs2 = mux(_io_out_T_33, io_out_s_lo_52, _io_out_T_32_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_34_rs3 = mux(_io_out_T_33, io_out_s_0_rs3, _io_out_T_32_rs3) @[package.scala 32:76]
    node _io_out_T_35 = eq(_io_out_T, UInt<5>("h12")) @[package.scala 32:86]
    node io_out_s_18_bits = pad(_io_out_s_T_154, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_36_bits = mux(_io_out_T_35, io_out_s_18_bits, _io_out_T_34_bits) @[package.scala 32:76]
    skip
    node _io_out_T_36_rd = mux(_io_out_T_35, io_out_s_hi_hi_lo_8, _io_out_T_34_rd) @[package.scala 32:76]
    skip
    node _io_out_T_36_rs1 = mux(_io_out_T_35, UInt<5>("h2"), _io_out_T_34_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_36_rs2 = mux(_io_out_T_35, io_out_s_lo_52, _io_out_T_34_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_36_rs3 = mux(_io_out_T_35, io_out_s_0_rs3, _io_out_T_34_rs3) @[package.scala 32:76]
    node _io_out_T_37 = eq(_io_out_T, UInt<5>("h13")) @[package.scala 32:86]
    node io_out_s_19_bits = pad(_io_out_s_T_158, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_38_bits = mux(_io_out_T_37, io_out_s_19_bits, _io_out_T_36_bits) @[package.scala 32:76]
    skip
    node _io_out_T_38_rd = mux(_io_out_T_37, io_out_s_hi_hi_lo_8, _io_out_T_36_rd) @[package.scala 32:76]
    skip
    node _io_out_T_38_rs1 = mux(_io_out_T_37, UInt<5>("h2"), _io_out_T_36_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_38_rs2 = mux(_io_out_T_37, io_out_s_lo_52, _io_out_T_36_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_38_rs3 = mux(_io_out_T_37, io_out_s_0_rs3, _io_out_T_36_rs3) @[package.scala 32:76]
    node _io_out_T_39 = eq(_io_out_T, UInt<5>("h14")) @[package.scala 32:86]
    node _io_out_T_40_bits = mux(_io_out_T_39, io_out_s_20_bits, _io_out_T_38_bits) @[package.scala 32:76]
    node _io_out_T_40_rd = mux(_io_out_T_39, io_out_s_20_rd, _io_out_T_38_rd) @[package.scala 32:76]
    node _io_out_T_40_rs1 = mux(_io_out_T_39, io_out_s_20_rs1, _io_out_T_38_rs1) @[package.scala 32:76]
    node _io_out_T_40_rs2 = mux(_io_out_T_39, io_out_s_20_rs2, _io_out_T_38_rs2) @[package.scala 32:76]
    node _io_out_T_40_rs3 = mux(_io_out_T_39, io_out_s_20_rs3, _io_out_T_38_rs3) @[package.scala 32:76]
    node _io_out_T_41 = eq(_io_out_T, UInt<5>("h15")) @[package.scala 32:86]
    node io_out_s_21_bits = pad(_io_out_s_T_165, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_42_bits = mux(_io_out_T_41, io_out_s_21_bits, _io_out_T_40_bits) @[package.scala 32:76]
    skip
    node _io_out_T_42_rd = mux(_io_out_T_41, io_out_s_hi_hi_lo_8, _io_out_T_40_rd) @[package.scala 32:76]
    skip
    node _io_out_T_42_rs1 = mux(_io_out_T_41, UInt<5>("h2"), _io_out_T_40_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_42_rs2 = mux(_io_out_T_41, io_out_s_lo_52, _io_out_T_40_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_42_rs3 = mux(_io_out_T_41, io_out_s_0_rs3, _io_out_T_40_rs3) @[package.scala 32:76]
    node _io_out_T_43 = eq(_io_out_T, UInt<5>("h16")) @[package.scala 32:86]
    node io_out_s_22_bits = pad(_io_out_s_T_171, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_44_bits = mux(_io_out_T_43, io_out_s_22_bits, _io_out_T_42_bits) @[package.scala 32:76]
    skip
    node _io_out_T_44_rd = mux(_io_out_T_43, io_out_s_hi_hi_lo_8, _io_out_T_42_rd) @[package.scala 32:76]
    skip
    node _io_out_T_44_rs1 = mux(_io_out_T_43, UInt<5>("h2"), _io_out_T_42_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_44_rs2 = mux(_io_out_T_43, io_out_s_lo_52, _io_out_T_42_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_44_rs3 = mux(_io_out_T_43, io_out_s_0_rs3, _io_out_T_42_rs3) @[package.scala 32:76]
    node _io_out_T_45 = eq(_io_out_T, UInt<5>("h17")) @[package.scala 32:86]
    node io_out_s_23_bits = pad(_io_out_s_T_177, 32) @[RVC.scala 21:19 22:14]
    node _io_out_T_46_bits = mux(_io_out_T_45, io_out_s_23_bits, _io_out_T_44_bits) @[package.scala 32:76]
    skip
    node _io_out_T_46_rd = mux(_io_out_T_45, io_out_s_hi_hi_lo_8, _io_out_T_44_rd) @[package.scala 32:76]
    skip
    node _io_out_T_46_rs1 = mux(_io_out_T_45, UInt<5>("h2"), _io_out_T_44_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_46_rs2 = mux(_io_out_T_45, io_out_s_lo_52, _io_out_T_44_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_46_rs3 = mux(_io_out_T_45, io_out_s_0_rs3, _io_out_T_44_rs3) @[package.scala 32:76]
    node _io_out_T_47 = eq(_io_out_T, UInt<5>("h18")) @[package.scala 32:86]
    skip
    node _io_out_T_48_bits = mux(_io_out_T_47, io_in, _io_out_T_46_bits) @[package.scala 32:76]
    skip
    node _io_out_T_48_rd = mux(_io_out_T_47, io_out_s_hi_hi_lo_8, _io_out_T_46_rd) @[package.scala 32:76]
    skip
    node _io_out_T_48_rs1 = mux(_io_out_T_47, io_out_s_24_rs1, _io_out_T_46_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_48_rs2 = mux(_io_out_T_47, io_out_s_24_rs2, _io_out_T_46_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_48_rs3 = mux(_io_out_T_47, io_out_s_0_rs3, _io_out_T_46_rs3) @[package.scala 32:76]
    node _io_out_T_49 = eq(_io_out_T, UInt<5>("h19")) @[package.scala 32:86]
    skip
    node _io_out_T_50_bits = mux(_io_out_T_49, io_in, _io_out_T_48_bits) @[package.scala 32:76]
    skip
    node _io_out_T_50_rd = mux(_io_out_T_49, io_out_s_hi_hi_lo_8, _io_out_T_48_rd) @[package.scala 32:76]
    skip
    node _io_out_T_50_rs1 = mux(_io_out_T_49, io_out_s_24_rs1, _io_out_T_48_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_50_rs2 = mux(_io_out_T_49, io_out_s_24_rs2, _io_out_T_48_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_50_rs3 = mux(_io_out_T_49, io_out_s_0_rs3, _io_out_T_48_rs3) @[package.scala 32:76]
    node _io_out_T_51 = eq(_io_out_T, UInt<5>("h1a")) @[package.scala 32:86]
    skip
    node _io_out_T_52_bits = mux(_io_out_T_51, io_in, _io_out_T_50_bits) @[package.scala 32:76]
    skip
    node _io_out_T_52_rd = mux(_io_out_T_51, io_out_s_hi_hi_lo_8, _io_out_T_50_rd) @[package.scala 32:76]
    skip
    node _io_out_T_52_rs1 = mux(_io_out_T_51, io_out_s_24_rs1, _io_out_T_50_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_52_rs2 = mux(_io_out_T_51, io_out_s_24_rs2, _io_out_T_50_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_52_rs3 = mux(_io_out_T_51, io_out_s_0_rs3, _io_out_T_50_rs3) @[package.scala 32:76]
    node _io_out_T_53 = eq(_io_out_T, UInt<5>("h1b")) @[package.scala 32:86]
    skip
    node _io_out_T_54_bits = mux(_io_out_T_53, io_in, _io_out_T_52_bits) @[package.scala 32:76]
    skip
    node _io_out_T_54_rd = mux(_io_out_T_53, io_out_s_hi_hi_lo_8, _io_out_T_52_rd) @[package.scala 32:76]
    skip
    node _io_out_T_54_rs1 = mux(_io_out_T_53, io_out_s_24_rs1, _io_out_T_52_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_54_rs2 = mux(_io_out_T_53, io_out_s_24_rs2, _io_out_T_52_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_54_rs3 = mux(_io_out_T_53, io_out_s_0_rs3, _io_out_T_52_rs3) @[package.scala 32:76]
    node _io_out_T_55 = eq(_io_out_T, UInt<5>("h1c")) @[package.scala 32:86]
    skip
    node _io_out_T_56_bits = mux(_io_out_T_55, io_in, _io_out_T_54_bits) @[package.scala 32:76]
    skip
    node _io_out_T_56_rd = mux(_io_out_T_55, io_out_s_hi_hi_lo_8, _io_out_T_54_rd) @[package.scala 32:76]
    skip
    node _io_out_T_56_rs1 = mux(_io_out_T_55, io_out_s_24_rs1, _io_out_T_54_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_56_rs2 = mux(_io_out_T_55, io_out_s_24_rs2, _io_out_T_54_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_56_rs3 = mux(_io_out_T_55, io_out_s_0_rs3, _io_out_T_54_rs3) @[package.scala 32:76]
    node _io_out_T_57 = eq(_io_out_T, UInt<5>("h1d")) @[package.scala 32:86]
    skip
    node _io_out_T_58_bits = mux(_io_out_T_57, io_in, _io_out_T_56_bits) @[package.scala 32:76]
    skip
    node _io_out_T_58_rd = mux(_io_out_T_57, io_out_s_hi_hi_lo_8, _io_out_T_56_rd) @[package.scala 32:76]
    skip
    node _io_out_T_58_rs1 = mux(_io_out_T_57, io_out_s_24_rs1, _io_out_T_56_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_58_rs2 = mux(_io_out_T_57, io_out_s_24_rs2, _io_out_T_56_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_58_rs3 = mux(_io_out_T_57, io_out_s_0_rs3, _io_out_T_56_rs3) @[package.scala 32:76]
    node _io_out_T_59 = eq(_io_out_T, UInt<5>("h1e")) @[package.scala 32:86]
    skip
    node _io_out_T_60_bits = mux(_io_out_T_59, io_in, _io_out_T_58_bits) @[package.scala 32:76]
    skip
    node _io_out_T_60_rd = mux(_io_out_T_59, io_out_s_hi_hi_lo_8, _io_out_T_58_rd) @[package.scala 32:76]
    skip
    node _io_out_T_60_rs1 = mux(_io_out_T_59, io_out_s_24_rs1, _io_out_T_58_rs1) @[package.scala 32:76]
    skip
    node _io_out_T_60_rs2 = mux(_io_out_T_59, io_out_s_24_rs2, _io_out_T_58_rs2) @[package.scala 32:76]
    skip
    node _io_out_T_60_rs3 = mux(_io_out_T_59, io_out_s_0_rs3, _io_out_T_58_rs3) @[package.scala 32:76]
    node _io_out_T_61 = eq(_io_out_T, UInt<5>("h1f")) @[package.scala 32:86]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    io_out_bits <= mux(_io_out_T_61, io_in, _io_out_T_60_bits) @[package.scala 32:76]
    io_out_rd <= mux(_io_out_T_61, io_out_s_hi_hi_lo_8, _io_out_T_60_rd) @[package.scala 32:76]
    io_out_rs1 <= mux(_io_out_T_61, io_out_s_24_rs1, _io_out_T_60_rs1) @[package.scala 32:76]
    io_out_rs2 <= mux(_io_out_T_61, io_out_s_24_rs2, _io_out_T_60_rs2) @[package.scala 32:76]
    io_out_rs3 <= mux(_io_out_T_61, io_out_s_0_rs3, _io_out_T_60_rs3) @[package.scala 32:76]
    io_rvc <= neq(_io_rvc_T, UInt<2>("h3")) @[RVC.scala 163:26]

  extmodule plusarg_reader :
    output out : UInt<32>
    defname = plusarg_reader
    parameter FORMAT = "max_core_cycles=%d"
    parameter DEFAULT = 0
    parameter WIDTH = 32

  module MulAddRecFNToRaw_preMul :
    input io_op : UInt<2>
    input io_a : UInt<33>
    input io_b : UInt<33>
    input io_c : UInt<33>
    output io_mulAddA : UInt<24>
    output io_mulAddB : UInt<24>
    output io_mulAddC : UInt<48>
    output io_toPostMul_isSigNaNAny : UInt<1>
    output io_toPostMul_isNaNAOrB : UInt<1>
    output io_toPostMul_isInfA : UInt<1>
    output io_toPostMul_isZeroA : UInt<1>
    output io_toPostMul_isInfB : UInt<1>
    output io_toPostMul_isZeroB : UInt<1>
    output io_toPostMul_signProd : UInt<1>
    output io_toPostMul_isNaNC : UInt<1>
    output io_toPostMul_isInfC : UInt<1>
    output io_toPostMul_isZeroC : UInt<1>
    output io_toPostMul_sExpSum : SInt<10>
    output io_toPostMul_doSubMags : UInt<1>
    output io_toPostMul_CIsDominant : UInt<1>
    output io_toPostMul_CDom_CAlignDist : UInt<5>
    output io_toPostMul_highAlignedSigC : UInt<26>
    output io_toPostMul_bit0AlignedSigC : UInt<1>

    node rawA_exp = bits(io_a, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _rawA_isZero_T = bits(rawA_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node rawA_isZero = eq(_rawA_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawA_isSpecial_T = bits(rawA_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node rawA_isSpecial = eq(_rawA_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawA_out_isNaN_T = bits(rawA_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node rawA__isNaN = and(rawA_isSpecial, _rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawA_out_isInf_T_1 = not(_rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    node rawA__sign = bits(io_a, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    node rawA__sExp = cvt(rawA_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawA_out_sig_hi_lo = not(rawA_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawA_out_sig_lo = bits(io_a, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawA_out_sig_hi = cat(UInt<1>("h0"), rawA_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawA__sig = cat(rawA_out_sig_hi, rawA_out_sig_lo) @[Cat.scala 30:58]
    node rawB_exp = bits(io_b, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _rawB_isZero_T = bits(rawB_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node rawB_isZero = eq(_rawB_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawB_isSpecial_T = bits(rawB_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node rawB_isSpecial = eq(_rawB_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawB_out_isNaN_T = bits(rawB_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node rawB__isNaN = and(rawB_isSpecial, _rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawB_out_isInf_T_1 = not(_rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    node rawB__sign = bits(io_b, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    node rawB__sExp = cvt(rawB_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawB_out_sig_hi_lo = not(rawB_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawB_out_sig_lo = bits(io_b, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawB_out_sig_hi = cat(UInt<1>("h0"), rawB_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawB__sig = cat(rawB_out_sig_hi, rawB_out_sig_lo) @[Cat.scala 30:58]
    node rawC_exp = bits(io_c, 31, 23) @[rawFloatFromRecFN.scala 50:21]
    node _rawC_isZero_T = bits(rawC_exp, 8, 6) @[rawFloatFromRecFN.scala 51:29]
    node rawC_isZero = eq(_rawC_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawC_isSpecial_T = bits(rawC_exp, 8, 7) @[rawFloatFromRecFN.scala 52:29]
    node rawC_isSpecial = eq(_rawC_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawC_out_isNaN_T = bits(rawC_exp, 6, 6) @[rawFloatFromRecFN.scala 55:41]
    node rawC__isNaN = and(rawC_isSpecial, _rawC_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawC_out_isInf_T_1 = not(_rawC_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    node rawC__sign = bits(io_c, 32, 32) @[rawFloatFromRecFN.scala 58:25]
    node rawC__sExp = cvt(rawC_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawC_out_sig_hi_lo = not(rawC_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawC_out_sig_lo = bits(io_c, 22, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawC_out_sig_hi = cat(UInt<1>("h0"), rawC_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawC__sig = cat(rawC_out_sig_hi, rawC_out_sig_lo) @[Cat.scala 30:58]
    skip
    skip
    node _signProd_T = xor(rawA__sign, rawB__sign) @[MulAddRecFN.scala 98:30]
    node _signProd_T_1 = bits(io_op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_signProd_T, _signProd_T_1) @[MulAddRecFN.scala 98:42]
    skip
    skip
    node _sExpAlignedProd_T = add(rawA__sExp, rawB__sExp) @[MulAddRecFN.scala 101:19]
    node _sExpAlignedProd_T_1 = add(_sExpAlignedProd_T, SInt<11>("h-e5")) @[MulAddRecFN.scala 101:32]
    node _sExpAlignedProd_T_2 = tail(_sExpAlignedProd_T_1, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_sExpAlignedProd_T_2) @[MulAddRecFN.scala 101:32]
    skip
    node _doSubMags_T = xor(signProd, rawC__sign) @[MulAddRecFN.scala 103:30]
    node _doSubMags_T_1 = bits(io_op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_doSubMags_T, _doSubMags_T_1) @[MulAddRecFN.scala 103:42]
    skip
    node _GEN_0 = pad(rawC__sExp, 11) @[MulAddRecFN.scala 107:42]
    node _sNatCAlignDist_T = sub(sExpAlignedProd, _GEN_0) @[MulAddRecFN.scala 107:42]
    node _sNatCAlignDist_T_1 = tail(_sNatCAlignDist_T, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_sNatCAlignDist_T_1) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 9, 0) @[MulAddRecFN.scala 108:42]
    skip
    skip
    node _isMinCAlign_T = or(rawA_isZero, rawB_isZero) @[MulAddRecFN.scala 109:35]
    node _isMinCAlign_T_1 = lt(sNatCAlignDist, SInt<11>("h0")) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_isMinCAlign_T, _isMinCAlign_T_1) @[MulAddRecFN.scala 109:50]
    skip
    skip
    node _CIsDominant_T_1 = leq(posNatCAlignDist, UInt<10>("h18")) @[MulAddRecFN.scala 111:60]
    node _CIsDominant_T_2 = or(isMinCAlign, _CIsDominant_T_1) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(rawC_out_sig_hi_lo, _CIsDominant_T_2) @[MulAddRecFN.scala 111:23]
    node _CAlignDist_T = lt(posNatCAlignDist, UInt<10>("h4a")) @[MulAddRecFN.scala 115:34]
    node _CAlignDist_T_1 = bits(posNatCAlignDist, 6, 0) @[MulAddRecFN.scala 116:33]
    node _CAlignDist_T_2 = mux(_CAlignDist_T, _CAlignDist_T_1, UInt<7>("h4a")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<7>("h0"), _CAlignDist_T_2) @[MulAddRecFN.scala 113:12]
    skip
    node _mainAlignedSigC_T = not(rawC__sig) @[MulAddRecFN.scala 121:28]
    node mainAlignedSigC_hi = mux(doSubMags, _mainAlignedSigC_T, rawC__sig) @[MulAddRecFN.scala 121:16]
    skip
    node mainAlignedSigC_lo = mux(doSubMags, UInt<53>("h1fffffffffffff"), UInt<53>("h0")) @[Bitwise.scala 72:12]
    node _mainAlignedSigC_T_2 = cat(mainAlignedSigC_hi, mainAlignedSigC_lo) @[Cat.scala 30:58]
    node _mainAlignedSigC_T_3 = asSInt(_mainAlignedSigC_T_2) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_mainAlignedSigC_T_3, CAlignDist) @[MulAddRecFN.scala 123:17]
    node _reduced4CExtra_T = shl(rawC__sig, 2) @[MulAddRecFN.scala 125:30]
    node _reduced4CExtra_reducedVec_0_T = bits(_reduced4CExtra_T, 3, 0) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_0 = orr(_reduced4CExtra_reducedVec_0_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_1_T = bits(_reduced4CExtra_T, 7, 4) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_1 = orr(_reduced4CExtra_reducedVec_1_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_2_T = bits(_reduced4CExtra_T, 11, 8) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_2 = orr(_reduced4CExtra_reducedVec_2_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_3_T = bits(_reduced4CExtra_T, 15, 12) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_3 = orr(_reduced4CExtra_reducedVec_3_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_4_T = bits(_reduced4CExtra_T, 19, 16) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_4 = orr(_reduced4CExtra_reducedVec_4_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_5_T = bits(_reduced4CExtra_T, 23, 20) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_5 = orr(_reduced4CExtra_reducedVec_5_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_6_T = bits(_reduced4CExtra_T, 26, 24) @[primitives.scala 124:15]
    node reduced4CExtra_reducedVec_6 = orr(_reduced4CExtra_reducedVec_6_T) @[primitives.scala 124:57]
    skip
    skip
    node reduced4CExtra_lo_hi = cat(reduced4CExtra_reducedVec_2, reduced4CExtra_reducedVec_1) @[primitives.scala 125:20]
    skip
    node reduced4CExtra_lo = cat(reduced4CExtra_lo_hi, reduced4CExtra_reducedVec_0) @[primitives.scala 125:20]
    skip
    skip
    node reduced4CExtra_hi_lo = cat(reduced4CExtra_reducedVec_4, reduced4CExtra_reducedVec_3) @[primitives.scala 125:20]
    skip
    skip
    node reduced4CExtra_hi_hi = cat(reduced4CExtra_reducedVec_6, reduced4CExtra_reducedVec_5) @[primitives.scala 125:20]
    node reduced4CExtra_hi = cat(reduced4CExtra_hi_hi, reduced4CExtra_hi_lo) @[primitives.scala 125:20]
    node _reduced4CExtra_T_1 = cat(reduced4CExtra_hi, reduced4CExtra_lo) @[primitives.scala 125:20]
    node _reduced4CExtra_T_2 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node reduced4CExtra_shift = dshr(SInt<33>("h-100000000"), _reduced4CExtra_T_2) @[primitives.scala 77:58]
    node _reduced4CExtra_T_3 = bits(reduced4CExtra_shift, 19, 14) @[primitives.scala 79:22]
    node _reduced4CExtra_T_4 = bits(_reduced4CExtra_T_3, 3, 0) @[Bitwise.scala 109:18]
    node _reduced4CExtra_T_5 = bits(_reduced4CExtra_T_4, 1, 0) @[Bitwise.scala 109:18]
    node reduced4CExtra_hi_1 = bits(_reduced4CExtra_T_5, 0, 0) @[Bitwise.scala 109:18]
    node reduced4CExtra_lo_1 = bits(_reduced4CExtra_T_5, 1, 1) @[Bitwise.scala 109:44]
    node reduced4CExtra_hi_2 = cat(reduced4CExtra_hi_1, reduced4CExtra_lo_1) @[Cat.scala 30:58]
    node _reduced4CExtra_T_6 = bits(_reduced4CExtra_T_4, 3, 2) @[Bitwise.scala 109:44]
    node reduced4CExtra_hi_3 = bits(_reduced4CExtra_T_6, 0, 0) @[Bitwise.scala 109:18]
    node reduced4CExtra_lo_2 = bits(_reduced4CExtra_T_6, 1, 1) @[Bitwise.scala 109:44]
    node reduced4CExtra_lo_3 = cat(reduced4CExtra_hi_3, reduced4CExtra_lo_2) @[Cat.scala 30:58]
    node reduced4CExtra_hi_4 = cat(reduced4CExtra_hi_2, reduced4CExtra_lo_3) @[Cat.scala 30:58]
    node _reduced4CExtra_T_7 = bits(_reduced4CExtra_T_3, 5, 4) @[Bitwise.scala 109:44]
    node reduced4CExtra_hi_5 = bits(_reduced4CExtra_T_7, 0, 0) @[Bitwise.scala 109:18]
    node reduced4CExtra_lo_4 = bits(_reduced4CExtra_T_7, 1, 1) @[Bitwise.scala 109:44]
    node reduced4CExtra_lo_5 = cat(reduced4CExtra_hi_5, reduced4CExtra_lo_4) @[Cat.scala 30:58]
    node _reduced4CExtra_T_8 = cat(reduced4CExtra_hi_4, reduced4CExtra_lo_5) @[Cat.scala 30:58]
    node _GEN_1 = pad(_reduced4CExtra_T_8, 7) @[MulAddRecFN.scala 125:68]
    node _reduced4CExtra_T_9 = and(_reduced4CExtra_T_1, _GEN_1) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_reduced4CExtra_T_9) @[MulAddRecFN.scala 133:11]
    node _alignedSigC_T = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _alignedSigC_T_1 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _alignedSigC_T_2 = andr(_alignedSigC_T_1) @[MulAddRecFN.scala 137:39]
    node _alignedSigC_T_3 = not(reduced4CExtra) @[MulAddRecFN.scala 137:47]
    node _alignedSigC_T_4 = and(_alignedSigC_T_2, _alignedSigC_T_3) @[MulAddRecFN.scala 137:44]
    skip
    node _alignedSigC_T_6 = orr(_alignedSigC_T_1) @[MulAddRecFN.scala 138:39]
    node _alignedSigC_T_7 = or(_alignedSigC_T_6, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node alignedSigC_lo = mux(doSubMags, _alignedSigC_T_4, _alignedSigC_T_7) @[MulAddRecFN.scala 136:16]
    node alignedSigC_hi = asUInt(_alignedSigC_T) @[Cat.scala 30:58]
    node alignedSigC = cat(alignedSigC_hi, alignedSigC_lo) @[Cat.scala 30:58]
    skip
    skip
    node _io_toPostMul_isSigNaNAny_T = bits(rawA__sig, 22, 22) @[common.scala 81:56]
    node _io_toPostMul_isSigNaNAny_T_1 = not(_io_toPostMul_isSigNaNAny_T) @[common.scala 81:49]
    skip
    node _io_toPostMul_isSigNaNAny_T_2 = and(rawA__isNaN, _io_toPostMul_isSigNaNAny_T_1) @[common.scala 81:46]
    skip
    node _io_toPostMul_isSigNaNAny_T_3 = bits(rawB__sig, 22, 22) @[common.scala 81:56]
    node _io_toPostMul_isSigNaNAny_T_4 = not(_io_toPostMul_isSigNaNAny_T_3) @[common.scala 81:49]
    skip
    node _io_toPostMul_isSigNaNAny_T_5 = and(rawB__isNaN, _io_toPostMul_isSigNaNAny_T_4) @[common.scala 81:46]
    node _io_toPostMul_isSigNaNAny_T_6 = or(_io_toPostMul_isSigNaNAny_T_2, _io_toPostMul_isSigNaNAny_T_5) @[MulAddRecFN.scala 149:32]
    node _io_toPostMul_isSigNaNAny_T_7 = bits(rawC__sig, 22, 22) @[common.scala 81:56]
    node _io_toPostMul_isSigNaNAny_T_8 = not(_io_toPostMul_isSigNaNAny_T_7) @[common.scala 81:49]
    skip
    node _io_toPostMul_isSigNaNAny_T_9 = and(rawC__isNaN, _io_toPostMul_isSigNaNAny_T_8) @[common.scala 81:46]
    skip
    skip
    node _io_toPostMul_sExpSum_T = sub(sExpAlignedProd, SInt<11>("h18")) @[MulAddRecFN.scala 161:53]
    node _io_toPostMul_sExpSum_T_1 = tail(_io_toPostMul_sExpSum_T, 1) @[MulAddRecFN.scala 161:53]
    node _io_toPostMul_sExpSum_T_2 = asSInt(_io_toPostMul_sExpSum_T_1) @[MulAddRecFN.scala 161:53]
    node _io_toPostMul_sExpSum_T_3 = mux(CIsDominant, pad(rawC__sExp, 11), _io_toPostMul_sExpSum_T_2) @[MulAddRecFN.scala 161:12]
    skip
    skip
    skip
    skip
    skip
    skip
    io_mulAddA <= bits(rawA__sig, 23, 0) @[MulAddRecFN.scala 144:16]
    io_mulAddB <= bits(rawB__sig, 23, 0) @[MulAddRecFN.scala 145:16]
    io_mulAddC <= bits(alignedSigC, 48, 1) @[MulAddRecFN.scala 146:30]
    io_toPostMul_isSigNaNAny <= or(_io_toPostMul_isSigNaNAny_T_6, _io_toPostMul_isSigNaNAny_T_9) @[MulAddRecFN.scala 149:58]
    io_toPostMul_isNaNAOrB <= or(rawA__isNaN, rawB__isNaN) @[MulAddRecFN.scala 151:42]
    io_toPostMul_isInfA <= and(rawA_isSpecial, _rawA_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_toPostMul_isZeroA <= eq(_rawA_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    io_toPostMul_isInfB <= and(rawB_isSpecial, _rawB_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_toPostMul_isZeroB <= eq(_rawB_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    io_toPostMul_signProd <= xor(_signProd_T, _signProd_T_1) @[MulAddRecFN.scala 98:42]
    io_toPostMul_isNaNC <= and(rawC_isSpecial, _rawC_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    io_toPostMul_isInfC <= and(rawC_isSpecial, _rawC_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_toPostMul_isZeroC <= eq(_rawC_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _GEN_2 = bits(_io_toPostMul_sExpSum_T_3, 9, 0) @[MulAddRecFN.scala 160:28]
    io_toPostMul_sExpSum <= asSInt(_GEN_2) @[MulAddRecFN.scala 160:28]
    io_toPostMul_doSubMags <= xor(_doSubMags_T, _doSubMags_T_1) @[MulAddRecFN.scala 103:42]
    io_toPostMul_CIsDominant <= and(rawC_out_sig_hi_lo, _CIsDominant_T_2) @[MulAddRecFN.scala 111:23]
    io_toPostMul_CDom_CAlignDist <= bits(CAlignDist, 4, 0) @[MulAddRecFN.scala 164:47]
    io_toPostMul_highAlignedSigC <= bits(alignedSigC, 74, 49) @[MulAddRecFN.scala 166:20]
    io_toPostMul_bit0AlignedSigC <= bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]

  module MulAddRecFNToRaw_postMul :
    input io_fromPreMul_isSigNaNAny : UInt<1>
    input io_fromPreMul_isNaNAOrB : UInt<1>
    input io_fromPreMul_isInfA : UInt<1>
    input io_fromPreMul_isZeroA : UInt<1>
    input io_fromPreMul_isInfB : UInt<1>
    input io_fromPreMul_isZeroB : UInt<1>
    input io_fromPreMul_signProd : UInt<1>
    input io_fromPreMul_isNaNC : UInt<1>
    input io_fromPreMul_isInfC : UInt<1>
    input io_fromPreMul_isZeroC : UInt<1>
    input io_fromPreMul_sExpSum : SInt<10>
    input io_fromPreMul_doSubMags : UInt<1>
    input io_fromPreMul_CIsDominant : UInt<1>
    input io_fromPreMul_CDom_CAlignDist : UInt<5>
    input io_fromPreMul_highAlignedSigC : UInt<26>
    input io_fromPreMul_bit0AlignedSigC : UInt<1>
    input io_mulAddResult : UInt<49>
    input io_roundingMode : UInt<3>
    output io_invalidExc : UInt<1>
    output io_rawOut_isNaN : UInt<1>
    output io_rawOut_isInf : UInt<1>
    output io_rawOut_isZero : UInt<1>
    output io_rawOut_sign : UInt<1>
    output io_rawOut_sExp : SInt<10>
    output io_rawOut_sig : UInt<27>

    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io_fromPreMul_signProd, io_fromPreMul_doSubMags) @[MulAddRecFN.scala 192:42]
    node _sigSum_T = bits(io_mulAddResult, 48, 48) @[MulAddRecFN.scala 194:32]
    node _sigSum_T_1 = add(io_fromPreMul_highAlignedSigC, UInt<26>("h1")) @[MulAddRecFN.scala 195:47]
    node _sigSum_T_2 = tail(_sigSum_T_1, 1) @[MulAddRecFN.scala 195:47]
    node sigSum_hi_hi = mux(_sigSum_T, _sigSum_T_2, io_fromPreMul_highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node sigSum_hi_lo = bits(io_mulAddResult, 47, 0) @[MulAddRecFN.scala 198:28]
    node sigSum_hi = cat(sigSum_hi_hi, sigSum_hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(sigSum_hi, io_fromPreMul_bit0AlignedSigC) @[Cat.scala 30:58]
    node _CDom_sExp_T = cvt(io_fromPreMul_doSubMags) @[MulAddRecFN.scala 205:69]
    node _GEN_0 = pad(_CDom_sExp_T, 10) @[MulAddRecFN.scala 205:43]
    node _CDom_sExp_T_1 = sub(io_fromPreMul_sExpSum, _GEN_0) @[MulAddRecFN.scala 205:43]
    node _CDom_sExp_T_2 = tail(_CDom_sExp_T_1, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_CDom_sExp_T_2) @[MulAddRecFN.scala 205:43]
    node _CDom_absSigSum_T = bits(sigSum, 74, 25) @[MulAddRecFN.scala 208:20]
    node _CDom_absSigSum_T_1 = not(_CDom_absSigSum_T) @[MulAddRecFN.scala 208:13]
    node CDom_absSigSum_hi_lo = bits(io_fromPreMul_highAlignedSigC, 25, 24) @[MulAddRecFN.scala 211:46]
    node CDom_absSigSum_lo = bits(sigSum, 72, 26) @[MulAddRecFN.scala 212:23]
    node CDom_absSigSum_hi = cat(UInt<1>("h0"), CDom_absSigSum_hi_lo) @[Cat.scala 30:58]
    node _CDom_absSigSum_T_2 = cat(CDom_absSigSum_hi, CDom_absSigSum_lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io_fromPreMul_doSubMags, _CDom_absSigSum_T_1, _CDom_absSigSum_T_2) @[MulAddRecFN.scala 207:12]
    node _CDom_absSigSumExtra_T = bits(sigSum, 24, 1) @[MulAddRecFN.scala 217:21]
    node _CDom_absSigSumExtra_T_1 = not(_CDom_absSigSumExtra_T) @[MulAddRecFN.scala 217:14]
    node _CDom_absSigSumExtra_T_2 = orr(_CDom_absSigSumExtra_T_1) @[MulAddRecFN.scala 217:36]
    node _CDom_absSigSumExtra_T_3 = bits(sigSum, 25, 1) @[MulAddRecFN.scala 218:19]
    node _CDom_absSigSumExtra_T_4 = orr(_CDom_absSigSumExtra_T_3) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io_fromPreMul_doSubMags, _CDom_absSigSumExtra_T_2, _CDom_absSigSumExtra_T_4) @[MulAddRecFN.scala 216:12]
    node _CDom_mainSig_T = dshl(CDom_absSigSum, io_fromPreMul_CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_CDom_mainSig_T, 49, 21) @[MulAddRecFN.scala 221:56]
    node _CDom_reduced4SigExtra_T = bits(CDom_absSigSum, 23, 0) @[MulAddRecFN.scala 224:36]
    node _CDom_reduced4SigExtra_T_1 = shl(_CDom_reduced4SigExtra_T, 3) @[MulAddRecFN.scala 224:53]
    node _CDom_reduced4SigExtra_reducedVec_0_T = bits(_CDom_reduced4SigExtra_T_1, 3, 0) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_0 = orr(_CDom_reduced4SigExtra_reducedVec_0_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_1_T = bits(_CDom_reduced4SigExtra_T_1, 7, 4) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_1 = orr(_CDom_reduced4SigExtra_reducedVec_1_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_2_T = bits(_CDom_reduced4SigExtra_T_1, 11, 8) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_2 = orr(_CDom_reduced4SigExtra_reducedVec_2_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_3_T = bits(_CDom_reduced4SigExtra_T_1, 15, 12) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_3 = orr(_CDom_reduced4SigExtra_reducedVec_3_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_4_T = bits(_CDom_reduced4SigExtra_T_1, 19, 16) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_4 = orr(_CDom_reduced4SigExtra_reducedVec_4_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_5_T = bits(_CDom_reduced4SigExtra_T_1, 23, 20) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_5 = orr(_CDom_reduced4SigExtra_reducedVec_5_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_6_T = bits(_CDom_reduced4SigExtra_T_1, 26, 24) @[primitives.scala 124:15]
    node CDom_reduced4SigExtra_reducedVec_6 = orr(_CDom_reduced4SigExtra_reducedVec_6_T) @[primitives.scala 124:57]
    skip
    skip
    node CDom_reduced4SigExtra_lo_hi = cat(CDom_reduced4SigExtra_reducedVec_2, CDom_reduced4SigExtra_reducedVec_1) @[primitives.scala 125:20]
    skip
    node CDom_reduced4SigExtra_lo = cat(CDom_reduced4SigExtra_lo_hi, CDom_reduced4SigExtra_reducedVec_0) @[primitives.scala 125:20]
    skip
    skip
    node CDom_reduced4SigExtra_hi_lo = cat(CDom_reduced4SigExtra_reducedVec_4, CDom_reduced4SigExtra_reducedVec_3) @[primitives.scala 125:20]
    skip
    skip
    node CDom_reduced4SigExtra_hi_hi = cat(CDom_reduced4SigExtra_reducedVec_6, CDom_reduced4SigExtra_reducedVec_5) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi = cat(CDom_reduced4SigExtra_hi_hi, CDom_reduced4SigExtra_hi_lo) @[primitives.scala 125:20]
    node _CDom_reduced4SigExtra_T_2 = cat(CDom_reduced4SigExtra_hi, CDom_reduced4SigExtra_lo) @[primitives.scala 125:20]
    node _CDom_reduced4SigExtra_T_3 = shr(io_fromPreMul_CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _CDom_reduced4SigExtra_T_4 = not(_CDom_reduced4SigExtra_T_3) @[primitives.scala 51:21]
    node CDom_reduced4SigExtra_shift = dshr(SInt<9>("h-100"), _CDom_reduced4SigExtra_T_4) @[primitives.scala 77:58]
    node _CDom_reduced4SigExtra_T_5 = bits(CDom_reduced4SigExtra_shift, 6, 1) @[primitives.scala 79:22]
    node _CDom_reduced4SigExtra_T_6 = bits(_CDom_reduced4SigExtra_T_5, 3, 0) @[Bitwise.scala 109:18]
    node _CDom_reduced4SigExtra_T_7 = bits(_CDom_reduced4SigExtra_T_6, 1, 0) @[Bitwise.scala 109:18]
    node CDom_reduced4SigExtra_hi_1 = bits(_CDom_reduced4SigExtra_T_7, 0, 0) @[Bitwise.scala 109:18]
    node CDom_reduced4SigExtra_lo_1 = bits(_CDom_reduced4SigExtra_T_7, 1, 1) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_hi_2 = cat(CDom_reduced4SigExtra_hi_1, CDom_reduced4SigExtra_lo_1) @[Cat.scala 30:58]
    node _CDom_reduced4SigExtra_T_8 = bits(_CDom_reduced4SigExtra_T_6, 3, 2) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_hi_3 = bits(_CDom_reduced4SigExtra_T_8, 0, 0) @[Bitwise.scala 109:18]
    node CDom_reduced4SigExtra_lo_2 = bits(_CDom_reduced4SigExtra_T_8, 1, 1) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_lo_3 = cat(CDom_reduced4SigExtra_hi_3, CDom_reduced4SigExtra_lo_2) @[Cat.scala 30:58]
    node CDom_reduced4SigExtra_hi_4 = cat(CDom_reduced4SigExtra_hi_2, CDom_reduced4SigExtra_lo_3) @[Cat.scala 30:58]
    node _CDom_reduced4SigExtra_T_9 = bits(_CDom_reduced4SigExtra_T_5, 5, 4) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_hi_5 = bits(_CDom_reduced4SigExtra_T_9, 0, 0) @[Bitwise.scala 109:18]
    node CDom_reduced4SigExtra_lo_4 = bits(_CDom_reduced4SigExtra_T_9, 1, 1) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_lo_5 = cat(CDom_reduced4SigExtra_hi_5, CDom_reduced4SigExtra_lo_4) @[Cat.scala 30:58]
    node _CDom_reduced4SigExtra_T_10 = cat(CDom_reduced4SigExtra_hi_4, CDom_reduced4SigExtra_lo_5) @[Cat.scala 30:58]
    node _GEN_1 = pad(_CDom_reduced4SigExtra_T_10, 7) @[MulAddRecFN.scala 224:72]
    node _CDom_reduced4SigExtra_T_11 = and(_CDom_reduced4SigExtra_T_2, _GEN_1) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_CDom_reduced4SigExtra_T_11) @[MulAddRecFN.scala 225:73]
    node CDom_sig_hi = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _CDom_sig_T = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _CDom_sig_T_1 = orr(_CDom_sig_T) @[MulAddRecFN.scala 228:32]
    node _CDom_sig_T_2 = or(_CDom_sig_T_1, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node CDom_sig_lo = or(_CDom_sig_T_2, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(CDom_sig_hi, CDom_sig_lo) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 51, 51) @[MulAddRecFN.scala 234:36]
    node _notCDom_absSigSum_T = bits(sigSum, 50, 0) @[MulAddRecFN.scala 237:20]
    node _notCDom_absSigSum_T_1 = not(_notCDom_absSigSum_T) @[MulAddRecFN.scala 237:13]
    skip
    node _GEN_2 = pad(io_fromPreMul_doSubMags, 51) @[MulAddRecFN.scala 238:41]
    node _notCDom_absSigSum_T_3 = add(_notCDom_absSigSum_T, _GEN_2) @[MulAddRecFN.scala 238:41]
    node _notCDom_absSigSum_T_4 = tail(_notCDom_absSigSum_T_3, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _notCDom_absSigSum_T_1, _notCDom_absSigSum_T_4) @[MulAddRecFN.scala 236:12]
    node _notCDom_reduced2AbsSigSum_reducedVec_0_T = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_0 = orr(_notCDom_reduced2AbsSigSum_reducedVec_0_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_1_T = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_1_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_2_T = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_2 = orr(_notCDom_reduced2AbsSigSum_reducedVec_2_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_3_T = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_3 = orr(_notCDom_reduced2AbsSigSum_reducedVec_3_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_4_T = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_4 = orr(_notCDom_reduced2AbsSigSum_reducedVec_4_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_5_T = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_5 = orr(_notCDom_reduced2AbsSigSum_reducedVec_5_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_6_T = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_6 = orr(_notCDom_reduced2AbsSigSum_reducedVec_6_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_7_T = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_7 = orr(_notCDom_reduced2AbsSigSum_reducedVec_7_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_8_T = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_8 = orr(_notCDom_reduced2AbsSigSum_reducedVec_8_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_9_T = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_9 = orr(_notCDom_reduced2AbsSigSum_reducedVec_9_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_10_T = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_10 = orr(_notCDom_reduced2AbsSigSum_reducedVec_10_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_11_T = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_11 = orr(_notCDom_reduced2AbsSigSum_reducedVec_11_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_12_T = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_12 = orr(_notCDom_reduced2AbsSigSum_reducedVec_12_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_13_T = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_13 = orr(_notCDom_reduced2AbsSigSum_reducedVec_13_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_14_T = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_14 = orr(_notCDom_reduced2AbsSigSum_reducedVec_14_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_15_T = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_15 = orr(_notCDom_reduced2AbsSigSum_reducedVec_15_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_16_T = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_16 = orr(_notCDom_reduced2AbsSigSum_reducedVec_16_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_17_T = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_17 = orr(_notCDom_reduced2AbsSigSum_reducedVec_17_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_18_T = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_18 = orr(_notCDom_reduced2AbsSigSum_reducedVec_18_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_19_T = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_19 = orr(_notCDom_reduced2AbsSigSum_reducedVec_19_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_20_T = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_20 = orr(_notCDom_reduced2AbsSigSum_reducedVec_20_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_21_T = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_21 = orr(_notCDom_reduced2AbsSigSum_reducedVec_21_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_22_T = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_22 = orr(_notCDom_reduced2AbsSigSum_reducedVec_22_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_23_T = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_23 = orr(_notCDom_reduced2AbsSigSum_reducedVec_23_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_24_T = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_24 = orr(_notCDom_reduced2AbsSigSum_reducedVec_24_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_25_T = bits(notCDom_absSigSum, 50, 50) @[primitives.scala 107:15]
    node notCDom_reduced2AbsSigSum_reducedVec_25 = orr(_notCDom_reduced2AbsSigSum_reducedVec_25_T) @[primitives.scala 107:57]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_2, notCDom_reduced2AbsSigSum_reducedVec_1) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_0) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_5, notCDom_reduced2AbsSigSum_reducedVec_4) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_lo_hi_hi, notCDom_reduced2AbsSigSum_reducedVec_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_hi, notCDom_reduced2AbsSigSum_lo_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_8, notCDom_reduced2AbsSigSum_reducedVec_7) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_lo_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_6) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_10, notCDom_reduced2AbsSigSum_reducedVec_9) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_12, notCDom_reduced2AbsSigSum_reducedVec_11) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo = cat(notCDom_reduced2AbsSigSum_lo_hi, notCDom_reduced2AbsSigSum_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_15, notCDom_reduced2AbsSigSum_reducedVec_14) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_13) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_18, notCDom_reduced2AbsSigSum_reducedVec_17) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_hi_lo_hi_hi, notCDom_reduced2AbsSigSum_reducedVec_16) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_hi, notCDom_reduced2AbsSigSum_hi_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_21, notCDom_reduced2AbsSigSum_reducedVec_20) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_19) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_23, notCDom_reduced2AbsSigSum_reducedVec_22) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_25, notCDom_reduced2AbsSigSum_reducedVec_24) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi = cat(notCDom_reduced2AbsSigSum_hi_hi, notCDom_reduced2AbsSigSum_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(notCDom_reduced2AbsSigSum_hi, notCDom_reduced2AbsSigSum_lo) @[primitives.scala 108:20]
    skip
    node _notCDom_normDistReduced2_T_1 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_2 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_3 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_4 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_5 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_6 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_7 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_8 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_9 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_10 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_11 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_12 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_13 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_14 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_15 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_16 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_17 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_18 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_19 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_20 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_21 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_22 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_23 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_24 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_25 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_26 = mux(_notCDom_normDistReduced2_T_1, UInt<5>("h18"), UInt<5>("h19")) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_27 = mux(_notCDom_normDistReduced2_T_2, UInt<5>("h17"), _notCDom_normDistReduced2_T_26) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_28 = mux(_notCDom_normDistReduced2_T_3, UInt<5>("h16"), _notCDom_normDistReduced2_T_27) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_29 = mux(_notCDom_normDistReduced2_T_4, UInt<5>("h15"), _notCDom_normDistReduced2_T_28) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_30 = mux(_notCDom_normDistReduced2_T_5, UInt<5>("h14"), _notCDom_normDistReduced2_T_29) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_31 = mux(_notCDom_normDistReduced2_T_6, UInt<5>("h13"), _notCDom_normDistReduced2_T_30) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_32 = mux(_notCDom_normDistReduced2_T_7, UInt<5>("h12"), _notCDom_normDistReduced2_T_31) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_33 = mux(_notCDom_normDistReduced2_T_8, UInt<5>("h11"), _notCDom_normDistReduced2_T_32) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_34 = mux(_notCDom_normDistReduced2_T_9, UInt<5>("h10"), _notCDom_normDistReduced2_T_33) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_35 = mux(_notCDom_normDistReduced2_T_10, UInt<5>("hf"), _notCDom_normDistReduced2_T_34) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_36 = mux(_notCDom_normDistReduced2_T_11, UInt<5>("he"), _notCDom_normDistReduced2_T_35) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_37 = mux(_notCDom_normDistReduced2_T_12, UInt<5>("hd"), _notCDom_normDistReduced2_T_36) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_38 = mux(_notCDom_normDistReduced2_T_13, UInt<5>("hc"), _notCDom_normDistReduced2_T_37) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_39 = mux(_notCDom_normDistReduced2_T_14, UInt<5>("hb"), _notCDom_normDistReduced2_T_38) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_40 = mux(_notCDom_normDistReduced2_T_15, UInt<5>("ha"), _notCDom_normDistReduced2_T_39) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_41 = mux(_notCDom_normDistReduced2_T_16, UInt<5>("h9"), _notCDom_normDistReduced2_T_40) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_42 = mux(_notCDom_normDistReduced2_T_17, UInt<5>("h8"), _notCDom_normDistReduced2_T_41) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_43 = mux(_notCDom_normDistReduced2_T_18, UInt<5>("h7"), _notCDom_normDistReduced2_T_42) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_44 = mux(_notCDom_normDistReduced2_T_19, UInt<5>("h6"), _notCDom_normDistReduced2_T_43) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_45 = mux(_notCDom_normDistReduced2_T_20, UInt<5>("h5"), _notCDom_normDistReduced2_T_44) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_46 = mux(_notCDom_normDistReduced2_T_21, UInt<5>("h4"), _notCDom_normDistReduced2_T_45) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_47 = mux(_notCDom_normDistReduced2_T_22, UInt<5>("h3"), _notCDom_normDistReduced2_T_46) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_48 = mux(_notCDom_normDistReduced2_T_23, UInt<5>("h2"), _notCDom_normDistReduced2_T_47) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_49 = mux(_notCDom_normDistReduced2_T_24, UInt<5>("h1"), _notCDom_normDistReduced2_T_48) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_notCDom_normDistReduced2_T_25, UInt<5>("h0"), _notCDom_normDistReduced2_T_49) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _notCDom_sExp_T = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _GEN_3 = pad(_notCDom_sExp_T, 10) @[MulAddRecFN.scala 243:46]
    node _notCDom_sExp_T_1 = sub(io_fromPreMul_sExpSum, _GEN_3) @[MulAddRecFN.scala 243:46]
    node _notCDom_sExp_T_2 = tail(_notCDom_sExp_T_1, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_notCDom_sExp_T_2) @[MulAddRecFN.scala 243:46]
    node _notCDom_mainSig_T = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_notCDom_mainSig_T, 51, 23) @[MulAddRecFN.scala 245:50]
    node _notCDom_reduced4SigExtra_T = bits(notCDom_reduced2AbsSigSum, 12, 0) @[MulAddRecFN.scala 249:39]
    skip
    node _notCDom_reduced4SigExtra_reducedVec_0_T = bits(_notCDom_reduced4SigExtra_T, 1, 0) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_0 = orr(_notCDom_reduced4SigExtra_reducedVec_0_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_1_T = bits(_notCDom_reduced4SigExtra_T, 3, 2) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_1 = orr(_notCDom_reduced4SigExtra_reducedVec_1_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_2_T = bits(_notCDom_reduced4SigExtra_T, 5, 4) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_2 = orr(_notCDom_reduced4SigExtra_reducedVec_2_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_3_T = bits(_notCDom_reduced4SigExtra_T, 7, 6) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_3 = orr(_notCDom_reduced4SigExtra_reducedVec_3_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_4_T = bits(_notCDom_reduced4SigExtra_T, 9, 8) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_4 = orr(_notCDom_reduced4SigExtra_reducedVec_4_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_5_T = bits(_notCDom_reduced4SigExtra_T, 11, 10) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_5 = orr(_notCDom_reduced4SigExtra_reducedVec_5_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_6_T = bits(_notCDom_reduced4SigExtra_T, 12, 12) @[primitives.scala 107:15]
    node notCDom_reduced4SigExtra_reducedVec_6 = orr(_notCDom_reduced4SigExtra_reducedVec_6_T) @[primitives.scala 107:57]
    skip
    skip
    node notCDom_reduced4SigExtra_lo_hi = cat(notCDom_reduced4SigExtra_reducedVec_2, notCDom_reduced4SigExtra_reducedVec_1) @[primitives.scala 108:20]
    skip
    node notCDom_reduced4SigExtra_lo = cat(notCDom_reduced4SigExtra_lo_hi, notCDom_reduced4SigExtra_reducedVec_0) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced4SigExtra_hi_lo = cat(notCDom_reduced4SigExtra_reducedVec_4, notCDom_reduced4SigExtra_reducedVec_3) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced4SigExtra_hi_hi = cat(notCDom_reduced4SigExtra_reducedVec_6, notCDom_reduced4SigExtra_reducedVec_5) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi = cat(notCDom_reduced4SigExtra_hi_hi, notCDom_reduced4SigExtra_hi_lo) @[primitives.scala 108:20]
    node _notCDom_reduced4SigExtra_T_2 = cat(notCDom_reduced4SigExtra_hi, notCDom_reduced4SigExtra_lo) @[primitives.scala 108:20]
    node _notCDom_reduced4SigExtra_T_3 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _notCDom_reduced4SigExtra_T_4 = not(_notCDom_reduced4SigExtra_T_3) @[primitives.scala 51:21]
    node notCDom_reduced4SigExtra_shift = dshr(SInt<17>("h-10000"), _notCDom_reduced4SigExtra_T_4) @[primitives.scala 77:58]
    node _notCDom_reduced4SigExtra_T_5 = bits(notCDom_reduced4SigExtra_shift, 6, 1) @[primitives.scala 79:22]
    node _notCDom_reduced4SigExtra_T_6 = bits(_notCDom_reduced4SigExtra_T_5, 3, 0) @[Bitwise.scala 109:18]
    node _notCDom_reduced4SigExtra_T_7 = bits(_notCDom_reduced4SigExtra_T_6, 1, 0) @[Bitwise.scala 109:18]
    node notCDom_reduced4SigExtra_hi_1 = bits(_notCDom_reduced4SigExtra_T_7, 0, 0) @[Bitwise.scala 109:18]
    node notCDom_reduced4SigExtra_lo_1 = bits(_notCDom_reduced4SigExtra_T_7, 1, 1) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_hi_2 = cat(notCDom_reduced4SigExtra_hi_1, notCDom_reduced4SigExtra_lo_1) @[Cat.scala 30:58]
    node _notCDom_reduced4SigExtra_T_8 = bits(_notCDom_reduced4SigExtra_T_6, 3, 2) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_hi_3 = bits(_notCDom_reduced4SigExtra_T_8, 0, 0) @[Bitwise.scala 109:18]
    node notCDom_reduced4SigExtra_lo_2 = bits(_notCDom_reduced4SigExtra_T_8, 1, 1) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_lo_3 = cat(notCDom_reduced4SigExtra_hi_3, notCDom_reduced4SigExtra_lo_2) @[Cat.scala 30:58]
    node notCDom_reduced4SigExtra_hi_4 = cat(notCDom_reduced4SigExtra_hi_2, notCDom_reduced4SigExtra_lo_3) @[Cat.scala 30:58]
    node _notCDom_reduced4SigExtra_T_9 = bits(_notCDom_reduced4SigExtra_T_5, 5, 4) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_hi_5 = bits(_notCDom_reduced4SigExtra_T_9, 0, 0) @[Bitwise.scala 109:18]
    node notCDom_reduced4SigExtra_lo_4 = bits(_notCDom_reduced4SigExtra_T_9, 1, 1) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_lo_5 = cat(notCDom_reduced4SigExtra_hi_5, notCDom_reduced4SigExtra_lo_4) @[Cat.scala 30:58]
    node _notCDom_reduced4SigExtra_T_10 = cat(notCDom_reduced4SigExtra_hi_4, notCDom_reduced4SigExtra_lo_5) @[Cat.scala 30:58]
    node _GEN_4 = pad(_notCDom_reduced4SigExtra_T_10, 7) @[MulAddRecFN.scala 249:78]
    node _notCDom_reduced4SigExtra_T_11 = and(_notCDom_reduced4SigExtra_T_2, _GEN_4) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_notCDom_reduced4SigExtra_T_11) @[MulAddRecFN.scala 251:11]
    node notCDom_sig_hi = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _notCDom_sig_T = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _notCDom_sig_T_1 = orr(_notCDom_sig_T) @[MulAddRecFN.scala 254:35]
    node notCDom_sig_lo = or(_notCDom_sig_T_1, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(notCDom_sig_hi, notCDom_sig_lo) @[Cat.scala 30:58]
    node _notCDom_completeCancellation_T = bits(notCDom_sig, 26, 25) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_notCDom_completeCancellation_T, UInt<2>("h0")) @[MulAddRecFN.scala 257:50]
    node _notCDom_sign_T = xor(io_fromPreMul_signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _notCDom_sign_T) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io_fromPreMul_isInfA, io_fromPreMul_isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io_fromPreMul_isInfC) @[MulAddRecFN.scala 267:44]
    node _notNaN_addZeros_T = or(io_fromPreMul_isZeroA, io_fromPreMul_isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_notNaN_addZeros_T, io_fromPreMul_isZeroC) @[MulAddRecFN.scala 269:58]
    node _io_invalidExc_T = and(io_fromPreMul_isInfA, io_fromPreMul_isZeroB) @[MulAddRecFN.scala 274:31]
    node _io_invalidExc_T_1 = or(io_fromPreMul_isSigNaNAny, _io_invalidExc_T) @[MulAddRecFN.scala 273:35]
    node _io_invalidExc_T_2 = and(io_fromPreMul_isZeroA, io_fromPreMul_isInfB) @[MulAddRecFN.scala 275:32]
    node _io_invalidExc_T_3 = or(_io_invalidExc_T_1, _io_invalidExc_T_2) @[MulAddRecFN.scala 274:57]
    node _io_invalidExc_T_4 = not(io_fromPreMul_isNaNAOrB) @[MulAddRecFN.scala 276:10]
    skip
    node _io_invalidExc_T_6 = and(_io_invalidExc_T_4, notNaN_isInfProd) @[MulAddRecFN.scala 276:36]
    node _io_invalidExc_T_7 = and(_io_invalidExc_T_6, io_fromPreMul_isInfC) @[MulAddRecFN.scala 277:61]
    node _io_invalidExc_T_8 = and(_io_invalidExc_T_7, io_fromPreMul_doSubMags) @[MulAddRecFN.scala 278:35]
    skip
    skip
    node _io_rawOut_isZero_T = not(io_fromPreMul_CIsDominant) @[MulAddRecFN.scala 285:14]
    node _io_rawOut_isZero_T_1 = and(_io_rawOut_isZero_T, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    skip
    node _io_rawOut_sign_T = and(notNaN_isInfProd, io_fromPreMul_signProd) @[MulAddRecFN.scala 287:27]
    node _io_rawOut_sign_T_1 = and(io_fromPreMul_isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _io_rawOut_sign_T_2 = or(_io_rawOut_sign_T, _io_rawOut_sign_T_1) @[MulAddRecFN.scala 287:54]
    node _io_rawOut_sign_T_3 = not(roundingMode_min) @[MulAddRecFN.scala 289:29]
    node _io_rawOut_sign_T_4 = and(notNaN_addZeros, _io_rawOut_sign_T_3) @[MulAddRecFN.scala 289:26]
    node _io_rawOut_sign_T_5 = and(_io_rawOut_sign_T_4, io_fromPreMul_signProd) @[MulAddRecFN.scala 289:48]
    node _io_rawOut_sign_T_6 = and(_io_rawOut_sign_T_5, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _io_rawOut_sign_T_7 = or(_io_rawOut_sign_T_2, _io_rawOut_sign_T_6) @[MulAddRecFN.scala 288:43]
    node _io_rawOut_sign_T_8 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _io_rawOut_sign_T_9 = or(io_fromPreMul_signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _io_rawOut_sign_T_10 = and(_io_rawOut_sign_T_8, _io_rawOut_sign_T_9) @[MulAddRecFN.scala 291:46]
    node _io_rawOut_sign_T_11 = or(_io_rawOut_sign_T_7, _io_rawOut_sign_T_10) @[MulAddRecFN.scala 290:48]
    node _io_rawOut_sign_T_12 = not(notNaN_isInfOut) @[MulAddRecFN.scala 293:10]
    node _io_rawOut_sign_T_13 = not(notNaN_addZeros) @[MulAddRecFN.scala 293:31]
    node _io_rawOut_sign_T_14 = and(_io_rawOut_sign_T_12, _io_rawOut_sign_T_13) @[MulAddRecFN.scala 293:28]
    node _io_rawOut_sign_T_15 = mux(io_fromPreMul_CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _io_rawOut_sign_T_16 = and(_io_rawOut_sign_T_14, _io_rawOut_sign_T_15) @[MulAddRecFN.scala 293:49]
    skip
    skip
    skip
    io_invalidExc <= or(_io_invalidExc_T_3, _io_invalidExc_T_8) @[MulAddRecFN.scala 275:57]
    io_rawOut_isNaN <= or(io_fromPreMul_isNaNAOrB, io_fromPreMul_isNaNC) @[MulAddRecFN.scala 280:48]
    io_rawOut_isInf <= or(notNaN_isInfProd, io_fromPreMul_isInfC) @[MulAddRecFN.scala 267:44]
    io_rawOut_isZero <= or(notNaN_addZeros, _io_rawOut_isZero_T_1) @[MulAddRecFN.scala 284:25]
    io_rawOut_sign <= or(_io_rawOut_sign_T_11, _io_rawOut_sign_T_16) @[MulAddRecFN.scala 292:50]
    io_rawOut_sExp <= mux(io_fromPreMul_CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io_rawOut_sig <= mux(io_fromPreMul_CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]

  module RoundRawFNToRecFN :
    input io_invalidExc : UInt<1>
    input io_in_isNaN : UInt<1>
    input io_in_isInf : UInt<1>
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<10>
    input io_in_sig : UInt<27>
    input io_roundingMode : UInt<3>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_5 @[RoundAnyRawFNToRecFN.scala 307:15]
    io_out <= roundAnyRawFNToRecFN.io_out @[RoundAnyRawFNToRecFN.scala 315:23]
    io_exceptionFlags <= roundAnyRawFNToRecFN.io_exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    roundAnyRawFNToRecFN.io_invalidExc <= io_invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io_infiniteExc <= UInt<1>("h0") @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io_in_isNaN <= io_in_isNaN @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_isInf <= io_in_isInf @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_isZero <= io_in_isZero @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sign <= io_in_sign @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sExp <= io_in_sExp @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sig <= io_in_sig @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_roundingMode <= io_roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    skip

  module RoundAnyRawFNToRecFN_1 :
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<9>
    input io_in_sig : UInt<65>
    input io_roundingMode : UInt<3>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    node roundingMode_near_even = eq(io_roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    skip
    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io_roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io_roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io_roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = not(io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node _sAdjustedExp_T = add(io_in_sExp, SInt<9>("h80")) @[RoundAnyRawFNToRecFN.scala 102:25]
    node _sAdjustedExp_T_1 = bits(_sAdjustedExp_T, 8, 0) @[RoundAnyRawFNToRecFN.scala 104:14]
    node sAdjustedExp = cvt(_sAdjustedExp_T_1) @[RoundAnyRawFNToRecFN.scala 104:31]
    node adjustedSig_hi = bits(io_in_sig, 64, 39) @[RoundAnyRawFNToRecFN.scala 114:26]
    node _adjustedSig_T = bits(io_in_sig, 38, 0) @[RoundAnyRawFNToRecFN.scala 115:26]
    node adjustedSig_lo = orr(_adjustedSig_T) @[RoundAnyRawFNToRecFN.scala 115:60]
    node adjustedSig = cat(adjustedSig_hi, adjustedSig_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _roundPosBit_T = and(adjustedSig, UInt<27>("h2")) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, UInt<27>("h1")) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, UInt<27>("h3")) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<25>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = not(anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    skip
    node _roundedSig_T_7 = mux(_roundedSig_T_5, UInt<26>("h1"), UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    skip
    node _roundedSig_T_11 = and(adjustedSig, UInt<27>("h7fffffc")) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    skip
    node _roundedSig_T_15 = mux(_roundedSig_T_13, UInt<26>("h1"), UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _GEN_0 = pad(_roundedSig_T_12, 26) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _roundedSig_T_16 = or(_GEN_0, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _GEN_1 = pad(_sRoundedExp_T_1, 10) @[RoundAnyRawFNToRecFN.scala 183:40]
    node sRoundedExp = add(sAdjustedExp, _GEN_1) @[RoundAnyRawFNToRecFN.scala 183:40]
    node common_expOut = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    skip
    node common_fractOut = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node commonCase = not(io_in_isZero) @[RoundAnyRawFNToRecFN.scala 235:64]
    skip
    skip
    skip
    skip
    skip
    skip
    node inexact = and(commonCase, anyRound) @[RoundAnyRawFNToRecFN.scala 238:43]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _expOut_T_1 = mux(io_in_isZero, UInt<9>("h1c0"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    skip
    node expOut = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node fractOut = mux(io_in_isZero, UInt<23>("h0"), common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    skip
    skip
    skip
    node io_out_hi = cat(io_in_sign, expOut) @[Cat.scala 30:58]
    skip
    node io_exceptionFlags_lo = cat(UInt<1>("h0"), inexact) @[Cat.scala 30:58]
    skip
    skip
    skip
    io_out <= cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io_exceptionFlags <= cat(UInt<3>("h0"), io_exceptionFlags_lo) @[Cat.scala 30:58]

  module RoundAnyRawFNToRecFN_2 :
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<9>
    input io_in_sig : UInt<65>
    input io_roundingMode : UInt<3>
    output io_out : UInt<65>
    output io_exceptionFlags : UInt<5>

    node roundingMode_near_even = eq(io_roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    skip
    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io_roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io_roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io_roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = not(io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node _GEN_0 = pad(io_in_sExp, 12) @[RoundAnyRawFNToRecFN.scala 102:25]
    node _sAdjustedExp_T = add(_GEN_0, SInt<12>("h780")) @[RoundAnyRawFNToRecFN.scala 102:25]
    node _sAdjustedExp_T_1 = bits(_sAdjustedExp_T, 11, 0) @[RoundAnyRawFNToRecFN.scala 104:14]
    node sAdjustedExp = cvt(_sAdjustedExp_T_1) @[RoundAnyRawFNToRecFN.scala 104:31]
    node adjustedSig_hi = bits(io_in_sig, 64, 10) @[RoundAnyRawFNToRecFN.scala 114:26]
    node _adjustedSig_T = bits(io_in_sig, 9, 0) @[RoundAnyRawFNToRecFN.scala 115:26]
    node adjustedSig_lo = orr(_adjustedSig_T) @[RoundAnyRawFNToRecFN.scala 115:60]
    node adjustedSig = cat(adjustedSig_hi, adjustedSig_lo) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    node _roundPosBit_T = and(adjustedSig, UInt<56>("h2")) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, UInt<56>("h1")) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, UInt<56>("h3")) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<54>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = not(anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    skip
    node _roundedSig_T_7 = mux(_roundedSig_T_5, UInt<55>("h1"), UInt<55>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    skip
    node _roundedSig_T_11 = and(adjustedSig, UInt<56>("hfffffffffffffc")) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    skip
    node _roundedSig_T_15 = mux(_roundedSig_T_13, UInt<55>("h1"), UInt<55>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _GEN_1 = pad(_roundedSig_T_12, 55) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _roundedSig_T_16 = or(_GEN_1, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 53) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _GEN_2 = pad(_sRoundedExp_T_1, 13) @[RoundAnyRawFNToRecFN.scala 183:40]
    node sRoundedExp = add(sAdjustedExp, _GEN_2) @[RoundAnyRawFNToRecFN.scala 183:40]
    node common_expOut = bits(sRoundedExp, 11, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    skip
    node common_fractOut = bits(roundedSig, 51, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node commonCase = not(io_in_isZero) @[RoundAnyRawFNToRecFN.scala 235:64]
    skip
    skip
    skip
    skip
    skip
    skip
    node inexact = and(commonCase, anyRound) @[RoundAnyRawFNToRecFN.scala 238:43]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _expOut_T_1 = mux(io_in_isZero, UInt<12>("he00"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    skip
    node expOut = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node fractOut = mux(io_in_isZero, UInt<52>("h0"), common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    skip
    skip
    skip
    node io_out_hi = cat(io_in_sign, expOut) @[Cat.scala 30:58]
    skip
    node io_exceptionFlags_lo = cat(UInt<1>("h0"), inexact) @[Cat.scala 30:58]
    skip
    skip
    skip
    io_out <= cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io_exceptionFlags <= cat(UInt<3>("h0"), io_exceptionFlags_lo) @[Cat.scala 30:58]

  module RoundAnyRawFNToRecFN_3 :
    input io_invalidExc : UInt<1>
    input io_in_isNaN : UInt<1>
    input io_in_isInf : UInt<1>
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<13>
    input io_in_sig : UInt<54>
    input io_roundingMode : UInt<3>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    node roundingMode_near_even = eq(io_roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    skip
    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io_roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io_roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io_roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = not(io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    node sAdjustedExp = add(io_in_sExp, SInt<13>("h-700")) @[RoundAnyRawFNToRecFN.scala 108:24]
    node adjustedSig_hi = bits(io_in_sig, 53, 28) @[RoundAnyRawFNToRecFN.scala 114:26]
    node _adjustedSig_T = bits(io_in_sig, 27, 0) @[RoundAnyRawFNToRecFN.scala 115:26]
    node adjustedSig_lo = orr(_adjustedSig_T) @[RoundAnyRawFNToRecFN.scala 115:60]
    node adjustedSig = cat(adjustedSig_hi, adjustedSig_lo) @[Cat.scala 30:58]
    node _roundMask_T = bits(sAdjustedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(SInt<65>("h-10000000000000000"), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    skip
    skip
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _GEN_0 = pad(_roundMask_T_6, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_7 = and(_GEN_0, UInt<16>("hff")) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_11 = and(_roundMask_T_9, UInt<16>("hff00")) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _GEN_1 = pad(_roundMask_T_16, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_17 = and(_GEN_1, UInt<16>("hf0f")) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_21 = and(_roundMask_T_19, UInt<16>("hf0f0")) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _GEN_2 = pad(_roundMask_T_26, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_27 = and(_GEN_2, UInt<16>("h3333")) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_31 = and(_roundMask_T_29, UInt<16>("hcccc")) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _GEN_3 = pad(_roundMask_T_36, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_37 = and(_GEN_3, UInt<16>("h5555")) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_41 = and(_roundMask_T_39, UInt<16>("haaaa")) @[Bitwise.scala 103:75]
    node roundMask_hi = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_42 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_43 = bits(_roundMask_T_42, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_44 = bits(_roundMask_T_43, 1, 0) @[Bitwise.scala 109:18]
    node roundMask_hi_1 = bits(_roundMask_T_44, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo = bits(_roundMask_T_44, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_hi_2 = cat(roundMask_hi_1, roundMask_lo) @[Cat.scala 30:58]
    node _roundMask_T_45 = bits(_roundMask_T_43, 3, 2) @[Bitwise.scala 109:44]
    node roundMask_hi_3 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_1 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_lo_2 = cat(roundMask_hi_3, roundMask_lo_1) @[Cat.scala 30:58]
    node roundMask_hi_4 = cat(roundMask_hi_2, roundMask_lo_2) @[Cat.scala 30:58]
    node _roundMask_T_46 = bits(_roundMask_T_42, 5, 4) @[Bitwise.scala 109:44]
    node roundMask_hi_5 = bits(_roundMask_T_46, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_3 = bits(_roundMask_T_46, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_lo_4 = cat(roundMask_hi_5, roundMask_lo_3) @[Cat.scala 30:58]
    node roundMask_lo_5 = cat(roundMask_hi_4, roundMask_lo_4) @[Cat.scala 30:58]
    node _roundMask_T_47 = cat(roundMask_hi, roundMask_lo_5) @[Cat.scala 30:58]
    node _roundMask_T_48 = not(_roundMask_T_47) @[primitives.scala 74:36]
    node _roundMask_T_49 = mux(roundMask_msb_2, UInt<22>("h0"), _roundMask_T_48) @[primitives.scala 74:21]
    node roundMask_hi_6 = not(_roundMask_T_49) @[primitives.scala 74:17]
    node _roundMask_T_50 = cat(roundMask_hi_6, UInt<3>("h7")) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _roundMask_T_51 = bits(roundMask_shift, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_52 = bits(_roundMask_T_51, 1, 0) @[Bitwise.scala 109:18]
    node roundMask_hi_7 = bits(_roundMask_T_52, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_6 = bits(_roundMask_T_52, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_hi_8 = cat(roundMask_hi_7, roundMask_lo_6) @[Cat.scala 30:58]
    node roundMask_lo_7 = bits(_roundMask_T_51, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_53 = cat(roundMask_hi_8, roundMask_lo_7) @[Cat.scala 30:58]
    node _roundMask_T_54 = mux(roundMask_msb_2, _roundMask_T_53, UInt<3>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_55 = mux(roundMask_msb_1, _roundMask_T_50, pad(_roundMask_T_54, 25)) @[primitives.scala 66:24]
    node roundMask_hi_9 = mux(roundMask_msb, _roundMask_T_55, UInt<25>("h0")) @[primitives.scala 61:24]
    skip
    node roundMask = cat(roundMask_hi_9, UInt<2>("h3")) @[Cat.scala 30:58]
    node shiftedRoundMask_lo = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), shiftedRoundMask_lo) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(adjustedSig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(adjustedSig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(adjustedSig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<25>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = not(anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    skip
    node _roundedSig_T_7 = mux(_roundedSig_T_5, shiftedRoundMask_lo, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(adjustedSig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _GEN_4 = pad(_roundedSig_T_12, 26) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _roundedSig_T_16 = or(_GEN_4, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _GEN_5 = pad(_sRoundedExp_T_1, 14) @[RoundAnyRawFNToRecFN.scala 183:40]
    node sRoundedExp = add(sAdjustedExp, _GEN_5) @[RoundAnyRawFNToRecFN.scala 183:40]
    node common_expOut = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    skip
    node common_fractOut = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    skip
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node common_overflow = geq(_common_overflow_T, SInt<8>("h3")) @[RoundAnyRawFNToRecFN.scala 194:50]
    node common_totalUnderflow = lt(sRoundedExp, SInt<15>("h6b")) @[RoundAnyRawFNToRecFN.scala 198:31]
    skip
    node unboundedRange_roundPosBit = bits(adjustedSig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    skip
    skip
    skip
    node _unboundedRange_anyRound_T_2 = bits(adjustedSig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node unboundedRange_anyRound = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    skip
    skip
    node _unboundedRange_roundIncr_T_1 = and(_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    skip
    node roundCarry = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    skip
    node _common_underflow_T = shr(sAdjustedExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, SInt<6>("h0")) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    skip
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 218:74]
    skip
    skip
    skip
    skip
    node _common_underflow_T_11 = not(_common_underflow_T_3) @[RoundAnyRawFNToRecFN.scala 221:34]
    skip
    node _common_underflow_T_13 = and(_common_underflow_T_11, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = not(_common_underflow_T_15) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    skip
    node common_underflow = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    node common_inexact = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    node isNaNOut = or(io_invalidExc, io_in_isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    skip
    node _commonCase_T = not(isNaNOut) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = not(io_in_isInf) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = not(io_in_isZero) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    skip
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    skip
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    skip
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    skip
    node overflow_roundMagUp = or(_roundIncr_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = not(overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(io_in_isInf, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io_in_sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io_in_isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    skip
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    skip
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, UInt<9>("h194"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io_in_isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<23>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    skip
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    skip
    node _fractOut_T_5 = mux(pegMaxFiniteMagOut, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    skip
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io_invalidExc, UInt<1>("h0")) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    skip
    io_out <= cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io_exceptionFlags <= cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]

  module MulAddRecFNToRaw_preMul_1 :
    input io_op : UInt<2>
    input io_a : UInt<65>
    input io_b : UInt<65>
    input io_c : UInt<65>
    output io_mulAddA : UInt<53>
    output io_mulAddB : UInt<53>
    output io_mulAddC : UInt<106>
    output io_toPostMul_isSigNaNAny : UInt<1>
    output io_toPostMul_isNaNAOrB : UInt<1>
    output io_toPostMul_isInfA : UInt<1>
    output io_toPostMul_isZeroA : UInt<1>
    output io_toPostMul_isInfB : UInt<1>
    output io_toPostMul_isZeroB : UInt<1>
    output io_toPostMul_signProd : UInt<1>
    output io_toPostMul_isNaNC : UInt<1>
    output io_toPostMul_isInfC : UInt<1>
    output io_toPostMul_isZeroC : UInt<1>
    output io_toPostMul_sExpSum : SInt<13>
    output io_toPostMul_doSubMags : UInt<1>
    output io_toPostMul_CIsDominant : UInt<1>
    output io_toPostMul_CDom_CAlignDist : UInt<6>
    output io_toPostMul_highAlignedSigC : UInt<55>
    output io_toPostMul_bit0AlignedSigC : UInt<1>

    node rawA_exp = bits(io_a, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawA_isZero_T = bits(rawA_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawA_isZero = eq(_rawA_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawA_isSpecial_T = bits(rawA_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawA_isSpecial = eq(_rawA_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawA_out_isNaN_T = bits(rawA_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node rawA__isNaN = and(rawA_isSpecial, _rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawA_out_isInf_T_1 = not(_rawA_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    node rawA__sign = bits(io_a, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    node rawA__sExp = cvt(rawA_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawA_out_sig_hi_lo = not(rawA_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawA_out_sig_lo = bits(io_a, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawA_out_sig_hi = cat(UInt<1>("h0"), rawA_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawA__sig = cat(rawA_out_sig_hi, rawA_out_sig_lo) @[Cat.scala 30:58]
    node rawB_exp = bits(io_b, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawB_isZero_T = bits(rawB_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawB_isZero = eq(_rawB_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawB_isSpecial_T = bits(rawB_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawB_isSpecial = eq(_rawB_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawB_out_isNaN_T = bits(rawB_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node rawB__isNaN = and(rawB_isSpecial, _rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawB_out_isInf_T_1 = not(_rawB_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    node rawB__sign = bits(io_b, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    node rawB__sExp = cvt(rawB_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawB_out_sig_hi_lo = not(rawB_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawB_out_sig_lo = bits(io_b, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawB_out_sig_hi = cat(UInt<1>("h0"), rawB_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawB__sig = cat(rawB_out_sig_hi, rawB_out_sig_lo) @[Cat.scala 30:58]
    node rawC_exp = bits(io_c, 63, 52) @[rawFloatFromRecFN.scala 50:21]
    node _rawC_isZero_T = bits(rawC_exp, 11, 9) @[rawFloatFromRecFN.scala 51:29]
    node rawC_isZero = eq(_rawC_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _rawC_isSpecial_T = bits(rawC_exp, 11, 10) @[rawFloatFromRecFN.scala 52:29]
    node rawC_isSpecial = eq(_rawC_isSpecial_T, UInt<2>("h3")) @[rawFloatFromRecFN.scala 52:54]
    node _rawC_out_isNaN_T = bits(rawC_exp, 9, 9) @[rawFloatFromRecFN.scala 55:41]
    node rawC__isNaN = and(rawC_isSpecial, _rawC_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    skip
    node _rawC_out_isInf_T_1 = not(_rawC_out_isNaN_T) @[rawFloatFromRecFN.scala 56:36]
    skip
    node rawC__sign = bits(io_c, 64, 64) @[rawFloatFromRecFN.scala 58:25]
    node rawC__sExp = cvt(rawC_exp) @[rawFloatFromRecFN.scala 59:27]
    node rawC_out_sig_hi_lo = not(rawC_isZero) @[rawFloatFromRecFN.scala 60:39]
    node rawC_out_sig_lo = bits(io_c, 51, 0) @[rawFloatFromRecFN.scala 60:51]
    node rawC_out_sig_hi = cat(UInt<1>("h0"), rawC_out_sig_hi_lo) @[Cat.scala 30:58]
    node rawC__sig = cat(rawC_out_sig_hi, rawC_out_sig_lo) @[Cat.scala 30:58]
    skip
    skip
    node _signProd_T = xor(rawA__sign, rawB__sign) @[MulAddRecFN.scala 98:30]
    node _signProd_T_1 = bits(io_op, 1, 1) @[MulAddRecFN.scala 98:49]
    node signProd = xor(_signProd_T, _signProd_T_1) @[MulAddRecFN.scala 98:42]
    skip
    skip
    node _sExpAlignedProd_T = add(rawA__sExp, rawB__sExp) @[MulAddRecFN.scala 101:19]
    node _sExpAlignedProd_T_1 = add(_sExpAlignedProd_T, SInt<14>("h-7c8")) @[MulAddRecFN.scala 101:32]
    node _sExpAlignedProd_T_2 = tail(_sExpAlignedProd_T_1, 1) @[MulAddRecFN.scala 101:32]
    node sExpAlignedProd = asSInt(_sExpAlignedProd_T_2) @[MulAddRecFN.scala 101:32]
    skip
    node _doSubMags_T = xor(signProd, rawC__sign) @[MulAddRecFN.scala 103:30]
    node _doSubMags_T_1 = bits(io_op, 0, 0) @[MulAddRecFN.scala 103:49]
    node doSubMags = xor(_doSubMags_T, _doSubMags_T_1) @[MulAddRecFN.scala 103:42]
    skip
    node _GEN_0 = pad(rawC__sExp, 14) @[MulAddRecFN.scala 107:42]
    node _sNatCAlignDist_T = sub(sExpAlignedProd, _GEN_0) @[MulAddRecFN.scala 107:42]
    node _sNatCAlignDist_T_1 = tail(_sNatCAlignDist_T, 1) @[MulAddRecFN.scala 107:42]
    node sNatCAlignDist = asSInt(_sNatCAlignDist_T_1) @[MulAddRecFN.scala 107:42]
    node posNatCAlignDist = bits(sNatCAlignDist, 12, 0) @[MulAddRecFN.scala 108:42]
    skip
    skip
    node _isMinCAlign_T = or(rawA_isZero, rawB_isZero) @[MulAddRecFN.scala 109:35]
    node _isMinCAlign_T_1 = lt(sNatCAlignDist, SInt<14>("h0")) @[MulAddRecFN.scala 109:69]
    node isMinCAlign = or(_isMinCAlign_T, _isMinCAlign_T_1) @[MulAddRecFN.scala 109:50]
    skip
    skip
    node _CIsDominant_T_1 = leq(posNatCAlignDist, UInt<13>("h35")) @[MulAddRecFN.scala 111:60]
    node _CIsDominant_T_2 = or(isMinCAlign, _CIsDominant_T_1) @[MulAddRecFN.scala 111:39]
    node CIsDominant = and(rawC_out_sig_hi_lo, _CIsDominant_T_2) @[MulAddRecFN.scala 111:23]
    node _CAlignDist_T = lt(posNatCAlignDist, UInt<13>("ha1")) @[MulAddRecFN.scala 115:34]
    node _CAlignDist_T_1 = bits(posNatCAlignDist, 7, 0) @[MulAddRecFN.scala 116:33]
    node _CAlignDist_T_2 = mux(_CAlignDist_T, _CAlignDist_T_1, UInt<8>("ha1")) @[MulAddRecFN.scala 115:16]
    node CAlignDist = mux(isMinCAlign, UInt<8>("h0"), _CAlignDist_T_2) @[MulAddRecFN.scala 113:12]
    skip
    node _mainAlignedSigC_T = not(rawC__sig) @[MulAddRecFN.scala 121:28]
    node mainAlignedSigC_hi = mux(doSubMags, _mainAlignedSigC_T, rawC__sig) @[MulAddRecFN.scala 121:16]
    skip
    node mainAlignedSigC_lo = mux(doSubMags, UInt<111>("h7fffffffffffffffffffffffffff"), UInt<111>("h0")) @[Bitwise.scala 72:12]
    node _mainAlignedSigC_T_2 = cat(mainAlignedSigC_hi, mainAlignedSigC_lo) @[Cat.scala 30:58]
    node _mainAlignedSigC_T_3 = asSInt(_mainAlignedSigC_T_2) @[MulAddRecFN.scala 123:11]
    node mainAlignedSigC = dshr(_mainAlignedSigC_T_3, CAlignDist) @[MulAddRecFN.scala 123:17]
    skip
    node _reduced4CExtra_reducedVec_0_T = bits(rawC__sig, 3, 0) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_0 = orr(_reduced4CExtra_reducedVec_0_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_1_T = bits(rawC__sig, 7, 4) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_1 = orr(_reduced4CExtra_reducedVec_1_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_2_T = bits(rawC__sig, 11, 8) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_2 = orr(_reduced4CExtra_reducedVec_2_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_3_T = bits(rawC__sig, 15, 12) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_3 = orr(_reduced4CExtra_reducedVec_3_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_4_T = bits(rawC__sig, 19, 16) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_4 = orr(_reduced4CExtra_reducedVec_4_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_5_T = bits(rawC__sig, 23, 20) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_5 = orr(_reduced4CExtra_reducedVec_5_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_6_T = bits(rawC__sig, 27, 24) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_6 = orr(_reduced4CExtra_reducedVec_6_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_7_T = bits(rawC__sig, 31, 28) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_7 = orr(_reduced4CExtra_reducedVec_7_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_8_T = bits(rawC__sig, 35, 32) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_8 = orr(_reduced4CExtra_reducedVec_8_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_9_T = bits(rawC__sig, 39, 36) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_9 = orr(_reduced4CExtra_reducedVec_9_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_10_T = bits(rawC__sig, 43, 40) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_10 = orr(_reduced4CExtra_reducedVec_10_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_11_T = bits(rawC__sig, 47, 44) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_11 = orr(_reduced4CExtra_reducedVec_11_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_12_T = bits(rawC__sig, 51, 48) @[primitives.scala 121:33]
    node reduced4CExtra_reducedVec_12 = orr(_reduced4CExtra_reducedVec_12_T) @[primitives.scala 121:54]
    node _reduced4CExtra_reducedVec_13_T = bits(rawC__sig, 53, 52) @[primitives.scala 124:15]
    node reduced4CExtra_reducedVec_13 = orr(_reduced4CExtra_reducedVec_13_T) @[primitives.scala 124:57]
    skip
    skip
    node reduced4CExtra_lo_lo_hi = cat(reduced4CExtra_reducedVec_2, reduced4CExtra_reducedVec_1) @[primitives.scala 125:20]
    skip
    node reduced4CExtra_lo_lo = cat(reduced4CExtra_lo_lo_hi, reduced4CExtra_reducedVec_0) @[primitives.scala 125:20]
    skip
    skip
    node reduced4CExtra_lo_hi_lo = cat(reduced4CExtra_reducedVec_4, reduced4CExtra_reducedVec_3) @[primitives.scala 125:20]
    skip
    skip
    node reduced4CExtra_lo_hi_hi = cat(reduced4CExtra_reducedVec_6, reduced4CExtra_reducedVec_5) @[primitives.scala 125:20]
    node reduced4CExtra_lo_hi = cat(reduced4CExtra_lo_hi_hi, reduced4CExtra_lo_hi_lo) @[primitives.scala 125:20]
    node reduced4CExtra_lo = cat(reduced4CExtra_lo_hi, reduced4CExtra_lo_lo) @[primitives.scala 125:20]
    skip
    skip
    node reduced4CExtra_hi_lo_hi = cat(reduced4CExtra_reducedVec_9, reduced4CExtra_reducedVec_8) @[primitives.scala 125:20]
    skip
    node reduced4CExtra_hi_lo = cat(reduced4CExtra_hi_lo_hi, reduced4CExtra_reducedVec_7) @[primitives.scala 125:20]
    skip
    skip
    node reduced4CExtra_hi_hi_lo = cat(reduced4CExtra_reducedVec_11, reduced4CExtra_reducedVec_10) @[primitives.scala 125:20]
    skip
    skip
    node reduced4CExtra_hi_hi_hi = cat(reduced4CExtra_reducedVec_13, reduced4CExtra_reducedVec_12) @[primitives.scala 125:20]
    node reduced4CExtra_hi_hi = cat(reduced4CExtra_hi_hi_hi, reduced4CExtra_hi_hi_lo) @[primitives.scala 125:20]
    node reduced4CExtra_hi = cat(reduced4CExtra_hi_hi, reduced4CExtra_hi_lo) @[primitives.scala 125:20]
    node _reduced4CExtra_T_1 = cat(reduced4CExtra_hi, reduced4CExtra_lo) @[primitives.scala 125:20]
    node _reduced4CExtra_T_2 = shr(CAlignDist, 2) @[MulAddRecFN.scala 127:28]
    node reduced4CExtra_shift = dshr(SInt<65>("h-10000000000000000"), _reduced4CExtra_T_2) @[primitives.scala 77:58]
    node _reduced4CExtra_T_3 = bits(reduced4CExtra_shift, 36, 24) @[primitives.scala 79:22]
    node _reduced4CExtra_T_4 = bits(_reduced4CExtra_T_3, 7, 0) @[Bitwise.scala 109:18]
    skip
    skip
    node _reduced4CExtra_T_7 = shr(_reduced4CExtra_T_4, 4) @[Bitwise.scala 103:21]
    node _GEN_1 = pad(_reduced4CExtra_T_7, 8) @[Bitwise.scala 103:31]
    node _reduced4CExtra_T_8 = and(_GEN_1, UInt<8>("hf")) @[Bitwise.scala 103:31]
    node _reduced4CExtra_T_9 = bits(_reduced4CExtra_T_4, 3, 0) @[Bitwise.scala 103:46]
    node _reduced4CExtra_T_10 = shl(_reduced4CExtra_T_9, 4) @[Bitwise.scala 103:65]
    skip
    node _reduced4CExtra_T_12 = and(_reduced4CExtra_T_10, UInt<8>("hf0")) @[Bitwise.scala 103:75]
    node _reduced4CExtra_T_13 = or(_reduced4CExtra_T_8, _reduced4CExtra_T_12) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _reduced4CExtra_T_17 = shr(_reduced4CExtra_T_13, 2) @[Bitwise.scala 103:21]
    node _GEN_2 = pad(_reduced4CExtra_T_17, 8) @[Bitwise.scala 103:31]
    node _reduced4CExtra_T_18 = and(_GEN_2, UInt<8>("h33")) @[Bitwise.scala 103:31]
    node _reduced4CExtra_T_19 = bits(_reduced4CExtra_T_13, 5, 0) @[Bitwise.scala 103:46]
    node _reduced4CExtra_T_20 = shl(_reduced4CExtra_T_19, 2) @[Bitwise.scala 103:65]
    skip
    node _reduced4CExtra_T_22 = and(_reduced4CExtra_T_20, UInt<8>("hcc")) @[Bitwise.scala 103:75]
    node _reduced4CExtra_T_23 = or(_reduced4CExtra_T_18, _reduced4CExtra_T_22) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _reduced4CExtra_T_27 = shr(_reduced4CExtra_T_23, 1) @[Bitwise.scala 103:21]
    node _GEN_3 = pad(_reduced4CExtra_T_27, 8) @[Bitwise.scala 103:31]
    node _reduced4CExtra_T_28 = and(_GEN_3, UInt<8>("h55")) @[Bitwise.scala 103:31]
    node _reduced4CExtra_T_29 = bits(_reduced4CExtra_T_23, 6, 0) @[Bitwise.scala 103:46]
    node _reduced4CExtra_T_30 = shl(_reduced4CExtra_T_29, 1) @[Bitwise.scala 103:65]
    skip
    node _reduced4CExtra_T_32 = and(_reduced4CExtra_T_30, UInt<8>("haa")) @[Bitwise.scala 103:75]
    node reduced4CExtra_hi_1 = or(_reduced4CExtra_T_28, _reduced4CExtra_T_32) @[Bitwise.scala 103:39]
    node _reduced4CExtra_T_33 = bits(_reduced4CExtra_T_3, 12, 8) @[Bitwise.scala 109:44]
    node _reduced4CExtra_T_34 = bits(_reduced4CExtra_T_33, 3, 0) @[Bitwise.scala 109:18]
    node _reduced4CExtra_T_35 = bits(_reduced4CExtra_T_34, 1, 0) @[Bitwise.scala 109:18]
    node reduced4CExtra_hi_2 = bits(_reduced4CExtra_T_35, 0, 0) @[Bitwise.scala 109:18]
    node reduced4CExtra_lo_1 = bits(_reduced4CExtra_T_35, 1, 1) @[Bitwise.scala 109:44]
    node reduced4CExtra_hi_3 = cat(reduced4CExtra_hi_2, reduced4CExtra_lo_1) @[Cat.scala 30:58]
    node _reduced4CExtra_T_36 = bits(_reduced4CExtra_T_34, 3, 2) @[Bitwise.scala 109:44]
    node reduced4CExtra_hi_4 = bits(_reduced4CExtra_T_36, 0, 0) @[Bitwise.scala 109:18]
    node reduced4CExtra_lo_2 = bits(_reduced4CExtra_T_36, 1, 1) @[Bitwise.scala 109:44]
    node reduced4CExtra_lo_3 = cat(reduced4CExtra_hi_4, reduced4CExtra_lo_2) @[Cat.scala 30:58]
    node reduced4CExtra_hi_5 = cat(reduced4CExtra_hi_3, reduced4CExtra_lo_3) @[Cat.scala 30:58]
    node reduced4CExtra_lo_4 = bits(_reduced4CExtra_T_33, 4, 4) @[Bitwise.scala 109:44]
    node reduced4CExtra_lo_5 = cat(reduced4CExtra_hi_5, reduced4CExtra_lo_4) @[Cat.scala 30:58]
    node _reduced4CExtra_T_37 = cat(reduced4CExtra_hi_1, reduced4CExtra_lo_5) @[Cat.scala 30:58]
    node _GEN_4 = pad(_reduced4CExtra_T_37, 14) @[MulAddRecFN.scala 125:68]
    node _reduced4CExtra_T_38 = and(_reduced4CExtra_T_1, _GEN_4) @[MulAddRecFN.scala 125:68]
    node reduced4CExtra = orr(_reduced4CExtra_T_38) @[MulAddRecFN.scala 133:11]
    node _alignedSigC_T = shr(mainAlignedSigC, 3) @[MulAddRecFN.scala 135:28]
    node _alignedSigC_T_1 = bits(mainAlignedSigC, 2, 0) @[MulAddRecFN.scala 137:32]
    node _alignedSigC_T_2 = andr(_alignedSigC_T_1) @[MulAddRecFN.scala 137:39]
    node _alignedSigC_T_3 = not(reduced4CExtra) @[MulAddRecFN.scala 137:47]
    node _alignedSigC_T_4 = and(_alignedSigC_T_2, _alignedSigC_T_3) @[MulAddRecFN.scala 137:44]
    skip
    node _alignedSigC_T_6 = orr(_alignedSigC_T_1) @[MulAddRecFN.scala 138:39]
    node _alignedSigC_T_7 = or(_alignedSigC_T_6, reduced4CExtra) @[MulAddRecFN.scala 138:44]
    node alignedSigC_lo = mux(doSubMags, _alignedSigC_T_4, _alignedSigC_T_7) @[MulAddRecFN.scala 136:16]
    node alignedSigC_hi = asUInt(_alignedSigC_T) @[Cat.scala 30:58]
    node alignedSigC = cat(alignedSigC_hi, alignedSigC_lo) @[Cat.scala 30:58]
    skip
    skip
    node _io_toPostMul_isSigNaNAny_T = bits(rawA__sig, 51, 51) @[common.scala 81:56]
    node _io_toPostMul_isSigNaNAny_T_1 = not(_io_toPostMul_isSigNaNAny_T) @[common.scala 81:49]
    skip
    node _io_toPostMul_isSigNaNAny_T_2 = and(rawA__isNaN, _io_toPostMul_isSigNaNAny_T_1) @[common.scala 81:46]
    skip
    node _io_toPostMul_isSigNaNAny_T_3 = bits(rawB__sig, 51, 51) @[common.scala 81:56]
    node _io_toPostMul_isSigNaNAny_T_4 = not(_io_toPostMul_isSigNaNAny_T_3) @[common.scala 81:49]
    skip
    node _io_toPostMul_isSigNaNAny_T_5 = and(rawB__isNaN, _io_toPostMul_isSigNaNAny_T_4) @[common.scala 81:46]
    node _io_toPostMul_isSigNaNAny_T_6 = or(_io_toPostMul_isSigNaNAny_T_2, _io_toPostMul_isSigNaNAny_T_5) @[MulAddRecFN.scala 149:32]
    node _io_toPostMul_isSigNaNAny_T_7 = bits(rawC__sig, 51, 51) @[common.scala 81:56]
    node _io_toPostMul_isSigNaNAny_T_8 = not(_io_toPostMul_isSigNaNAny_T_7) @[common.scala 81:49]
    skip
    node _io_toPostMul_isSigNaNAny_T_9 = and(rawC__isNaN, _io_toPostMul_isSigNaNAny_T_8) @[common.scala 81:46]
    skip
    skip
    node _io_toPostMul_sExpSum_T = sub(sExpAlignedProd, SInt<14>("h35")) @[MulAddRecFN.scala 161:53]
    node _io_toPostMul_sExpSum_T_1 = tail(_io_toPostMul_sExpSum_T, 1) @[MulAddRecFN.scala 161:53]
    node _io_toPostMul_sExpSum_T_2 = asSInt(_io_toPostMul_sExpSum_T_1) @[MulAddRecFN.scala 161:53]
    node _io_toPostMul_sExpSum_T_3 = mux(CIsDominant, pad(rawC__sExp, 14), _io_toPostMul_sExpSum_T_2) @[MulAddRecFN.scala 161:12]
    skip
    skip
    skip
    skip
    skip
    skip
    io_mulAddA <= bits(rawA__sig, 52, 0) @[MulAddRecFN.scala 144:16]
    io_mulAddB <= bits(rawB__sig, 52, 0) @[MulAddRecFN.scala 145:16]
    io_mulAddC <= bits(alignedSigC, 106, 1) @[MulAddRecFN.scala 146:30]
    io_toPostMul_isSigNaNAny <= or(_io_toPostMul_isSigNaNAny_T_6, _io_toPostMul_isSigNaNAny_T_9) @[MulAddRecFN.scala 149:58]
    io_toPostMul_isNaNAOrB <= or(rawA__isNaN, rawB__isNaN) @[MulAddRecFN.scala 151:42]
    io_toPostMul_isInfA <= and(rawA_isSpecial, _rawA_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_toPostMul_isZeroA <= eq(_rawA_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    io_toPostMul_isInfB <= and(rawB_isSpecial, _rawB_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_toPostMul_isZeroB <= eq(_rawB_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    io_toPostMul_signProd <= xor(_signProd_T, _signProd_T_1) @[MulAddRecFN.scala 98:42]
    io_toPostMul_isNaNC <= and(rawC_isSpecial, _rawC_out_isNaN_T) @[rawFloatFromRecFN.scala 55:33]
    io_toPostMul_isInfC <= and(rawC_isSpecial, _rawC_out_isInf_T_1) @[rawFloatFromRecFN.scala 56:33]
    io_toPostMul_isZeroC <= eq(_rawC_isZero_T, UInt<3>("h0")) @[rawFloatFromRecFN.scala 51:54]
    node _GEN_5 = bits(_io_toPostMul_sExpSum_T_3, 12, 0) @[MulAddRecFN.scala 160:28]
    io_toPostMul_sExpSum <= asSInt(_GEN_5) @[MulAddRecFN.scala 160:28]
    io_toPostMul_doSubMags <= xor(_doSubMags_T, _doSubMags_T_1) @[MulAddRecFN.scala 103:42]
    io_toPostMul_CIsDominant <= and(rawC_out_sig_hi_lo, _CIsDominant_T_2) @[MulAddRecFN.scala 111:23]
    io_toPostMul_CDom_CAlignDist <= bits(CAlignDist, 5, 0) @[MulAddRecFN.scala 164:47]
    io_toPostMul_highAlignedSigC <= bits(alignedSigC, 161, 107) @[MulAddRecFN.scala 166:20]
    io_toPostMul_bit0AlignedSigC <= bits(alignedSigC, 0, 0) @[MulAddRecFN.scala 167:48]

  module MulAddRecFNToRaw_postMul_1 :
    input io_fromPreMul_isSigNaNAny : UInt<1>
    input io_fromPreMul_isNaNAOrB : UInt<1>
    input io_fromPreMul_isInfA : UInt<1>
    input io_fromPreMul_isZeroA : UInt<1>
    input io_fromPreMul_isInfB : UInt<1>
    input io_fromPreMul_isZeroB : UInt<1>
    input io_fromPreMul_signProd : UInt<1>
    input io_fromPreMul_isNaNC : UInt<1>
    input io_fromPreMul_isInfC : UInt<1>
    input io_fromPreMul_isZeroC : UInt<1>
    input io_fromPreMul_sExpSum : SInt<13>
    input io_fromPreMul_doSubMags : UInt<1>
    input io_fromPreMul_CIsDominant : UInt<1>
    input io_fromPreMul_CDom_CAlignDist : UInt<6>
    input io_fromPreMul_highAlignedSigC : UInt<55>
    input io_fromPreMul_bit0AlignedSigC : UInt<1>
    input io_mulAddResult : UInt<107>
    input io_roundingMode : UInt<3>
    output io_invalidExc : UInt<1>
    output io_rawOut_isNaN : UInt<1>
    output io_rawOut_isInf : UInt<1>
    output io_rawOut_isZero : UInt<1>
    output io_rawOut_sign : UInt<1>
    output io_rawOut_sExp : SInt<13>
    output io_rawOut_sig : UInt<56>

    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[MulAddRecFN.scala 188:45]
    node CDom_sign = xor(io_fromPreMul_signProd, io_fromPreMul_doSubMags) @[MulAddRecFN.scala 192:42]
    node _sigSum_T = bits(io_mulAddResult, 106, 106) @[MulAddRecFN.scala 194:32]
    node _sigSum_T_1 = add(io_fromPreMul_highAlignedSigC, UInt<55>("h1")) @[MulAddRecFN.scala 195:47]
    node _sigSum_T_2 = tail(_sigSum_T_1, 1) @[MulAddRecFN.scala 195:47]
    node sigSum_hi_hi = mux(_sigSum_T, _sigSum_T_2, io_fromPreMul_highAlignedSigC) @[MulAddRecFN.scala 194:16]
    node sigSum_hi_lo = bits(io_mulAddResult, 105, 0) @[MulAddRecFN.scala 198:28]
    node sigSum_hi = cat(sigSum_hi_hi, sigSum_hi_lo) @[Cat.scala 30:58]
    node sigSum = cat(sigSum_hi, io_fromPreMul_bit0AlignedSigC) @[Cat.scala 30:58]
    node _CDom_sExp_T = cvt(io_fromPreMul_doSubMags) @[MulAddRecFN.scala 205:69]
    node _GEN_0 = pad(_CDom_sExp_T, 13) @[MulAddRecFN.scala 205:43]
    node _CDom_sExp_T_1 = sub(io_fromPreMul_sExpSum, _GEN_0) @[MulAddRecFN.scala 205:43]
    node _CDom_sExp_T_2 = tail(_CDom_sExp_T_1, 1) @[MulAddRecFN.scala 205:43]
    node CDom_sExp = asSInt(_CDom_sExp_T_2) @[MulAddRecFN.scala 205:43]
    node _CDom_absSigSum_T = bits(sigSum, 161, 54) @[MulAddRecFN.scala 208:20]
    node _CDom_absSigSum_T_1 = not(_CDom_absSigSum_T) @[MulAddRecFN.scala 208:13]
    node CDom_absSigSum_hi_lo = bits(io_fromPreMul_highAlignedSigC, 54, 53) @[MulAddRecFN.scala 211:46]
    node CDom_absSigSum_lo = bits(sigSum, 159, 55) @[MulAddRecFN.scala 212:23]
    node CDom_absSigSum_hi = cat(UInt<1>("h0"), CDom_absSigSum_hi_lo) @[Cat.scala 30:58]
    node _CDom_absSigSum_T_2 = cat(CDom_absSigSum_hi, CDom_absSigSum_lo) @[Cat.scala 30:58]
    node CDom_absSigSum = mux(io_fromPreMul_doSubMags, _CDom_absSigSum_T_1, _CDom_absSigSum_T_2) @[MulAddRecFN.scala 207:12]
    node _CDom_absSigSumExtra_T = bits(sigSum, 53, 1) @[MulAddRecFN.scala 217:21]
    node _CDom_absSigSumExtra_T_1 = not(_CDom_absSigSumExtra_T) @[MulAddRecFN.scala 217:14]
    node _CDom_absSigSumExtra_T_2 = orr(_CDom_absSigSumExtra_T_1) @[MulAddRecFN.scala 217:36]
    node _CDom_absSigSumExtra_T_3 = bits(sigSum, 54, 1) @[MulAddRecFN.scala 218:19]
    node _CDom_absSigSumExtra_T_4 = orr(_CDom_absSigSumExtra_T_3) @[MulAddRecFN.scala 218:37]
    node CDom_absSigSumExtra = mux(io_fromPreMul_doSubMags, _CDom_absSigSumExtra_T_2, _CDom_absSigSumExtra_T_4) @[MulAddRecFN.scala 216:12]
    node _CDom_mainSig_T = dshl(CDom_absSigSum, io_fromPreMul_CDom_CAlignDist) @[MulAddRecFN.scala 221:24]
    node CDom_mainSig = bits(_CDom_mainSig_T, 107, 50) @[MulAddRecFN.scala 221:56]
    node _CDom_reduced4SigExtra_T = bits(CDom_absSigSum, 52, 0) @[MulAddRecFN.scala 224:36]
    node _CDom_reduced4SigExtra_T_1 = shl(_CDom_reduced4SigExtra_T, 2) @[MulAddRecFN.scala 224:53]
    node _CDom_reduced4SigExtra_reducedVec_0_T = bits(_CDom_reduced4SigExtra_T_1, 3, 0) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_0 = orr(_CDom_reduced4SigExtra_reducedVec_0_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_1_T = bits(_CDom_reduced4SigExtra_T_1, 7, 4) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_1 = orr(_CDom_reduced4SigExtra_reducedVec_1_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_2_T = bits(_CDom_reduced4SigExtra_T_1, 11, 8) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_2 = orr(_CDom_reduced4SigExtra_reducedVec_2_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_3_T = bits(_CDom_reduced4SigExtra_T_1, 15, 12) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_3 = orr(_CDom_reduced4SigExtra_reducedVec_3_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_4_T = bits(_CDom_reduced4SigExtra_T_1, 19, 16) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_4 = orr(_CDom_reduced4SigExtra_reducedVec_4_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_5_T = bits(_CDom_reduced4SigExtra_T_1, 23, 20) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_5 = orr(_CDom_reduced4SigExtra_reducedVec_5_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_6_T = bits(_CDom_reduced4SigExtra_T_1, 27, 24) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_6 = orr(_CDom_reduced4SigExtra_reducedVec_6_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_7_T = bits(_CDom_reduced4SigExtra_T_1, 31, 28) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_7 = orr(_CDom_reduced4SigExtra_reducedVec_7_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_8_T = bits(_CDom_reduced4SigExtra_T_1, 35, 32) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_8 = orr(_CDom_reduced4SigExtra_reducedVec_8_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_9_T = bits(_CDom_reduced4SigExtra_T_1, 39, 36) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_9 = orr(_CDom_reduced4SigExtra_reducedVec_9_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_10_T = bits(_CDom_reduced4SigExtra_T_1, 43, 40) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_10 = orr(_CDom_reduced4SigExtra_reducedVec_10_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_11_T = bits(_CDom_reduced4SigExtra_T_1, 47, 44) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_11 = orr(_CDom_reduced4SigExtra_reducedVec_11_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_12_T = bits(_CDom_reduced4SigExtra_T_1, 51, 48) @[primitives.scala 121:33]
    node CDom_reduced4SigExtra_reducedVec_12 = orr(_CDom_reduced4SigExtra_reducedVec_12_T) @[primitives.scala 121:54]
    node _CDom_reduced4SigExtra_reducedVec_13_T = bits(_CDom_reduced4SigExtra_T_1, 54, 52) @[primitives.scala 124:15]
    node CDom_reduced4SigExtra_reducedVec_13 = orr(_CDom_reduced4SigExtra_reducedVec_13_T) @[primitives.scala 124:57]
    skip
    skip
    node CDom_reduced4SigExtra_lo_lo_hi = cat(CDom_reduced4SigExtra_reducedVec_2, CDom_reduced4SigExtra_reducedVec_1) @[primitives.scala 125:20]
    skip
    node CDom_reduced4SigExtra_lo_lo = cat(CDom_reduced4SigExtra_lo_lo_hi, CDom_reduced4SigExtra_reducedVec_0) @[primitives.scala 125:20]
    skip
    skip
    node CDom_reduced4SigExtra_lo_hi_lo = cat(CDom_reduced4SigExtra_reducedVec_4, CDom_reduced4SigExtra_reducedVec_3) @[primitives.scala 125:20]
    skip
    skip
    node CDom_reduced4SigExtra_lo_hi_hi = cat(CDom_reduced4SigExtra_reducedVec_6, CDom_reduced4SigExtra_reducedVec_5) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_lo_hi = cat(CDom_reduced4SigExtra_lo_hi_hi, CDom_reduced4SigExtra_lo_hi_lo) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_lo = cat(CDom_reduced4SigExtra_lo_hi, CDom_reduced4SigExtra_lo_lo) @[primitives.scala 125:20]
    skip
    skip
    node CDom_reduced4SigExtra_hi_lo_hi = cat(CDom_reduced4SigExtra_reducedVec_9, CDom_reduced4SigExtra_reducedVec_8) @[primitives.scala 125:20]
    skip
    node CDom_reduced4SigExtra_hi_lo = cat(CDom_reduced4SigExtra_hi_lo_hi, CDom_reduced4SigExtra_reducedVec_7) @[primitives.scala 125:20]
    skip
    skip
    node CDom_reduced4SigExtra_hi_hi_lo = cat(CDom_reduced4SigExtra_reducedVec_11, CDom_reduced4SigExtra_reducedVec_10) @[primitives.scala 125:20]
    skip
    skip
    node CDom_reduced4SigExtra_hi_hi_hi = cat(CDom_reduced4SigExtra_reducedVec_13, CDom_reduced4SigExtra_reducedVec_12) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi_hi = cat(CDom_reduced4SigExtra_hi_hi_hi, CDom_reduced4SigExtra_hi_hi_lo) @[primitives.scala 125:20]
    node CDom_reduced4SigExtra_hi = cat(CDom_reduced4SigExtra_hi_hi, CDom_reduced4SigExtra_hi_lo) @[primitives.scala 125:20]
    node _CDom_reduced4SigExtra_T_2 = cat(CDom_reduced4SigExtra_hi, CDom_reduced4SigExtra_lo) @[primitives.scala 125:20]
    node _CDom_reduced4SigExtra_T_3 = shr(io_fromPreMul_CDom_CAlignDist, 2) @[MulAddRecFN.scala 225:51]
    node _CDom_reduced4SigExtra_T_4 = not(_CDom_reduced4SigExtra_T_3) @[primitives.scala 51:21]
    node CDom_reduced4SigExtra_shift = dshr(SInt<17>("h-10000"), _CDom_reduced4SigExtra_T_4) @[primitives.scala 77:58]
    node _CDom_reduced4SigExtra_T_5 = bits(CDom_reduced4SigExtra_shift, 13, 1) @[primitives.scala 79:22]
    node _CDom_reduced4SigExtra_T_6 = bits(_CDom_reduced4SigExtra_T_5, 7, 0) @[Bitwise.scala 109:18]
    skip
    skip
    node _CDom_reduced4SigExtra_T_9 = shr(_CDom_reduced4SigExtra_T_6, 4) @[Bitwise.scala 103:21]
    node _GEN_1 = pad(_CDom_reduced4SigExtra_T_9, 8) @[Bitwise.scala 103:31]
    node _CDom_reduced4SigExtra_T_10 = and(_GEN_1, UInt<8>("hf")) @[Bitwise.scala 103:31]
    node _CDom_reduced4SigExtra_T_11 = bits(_CDom_reduced4SigExtra_T_6, 3, 0) @[Bitwise.scala 103:46]
    node _CDom_reduced4SigExtra_T_12 = shl(_CDom_reduced4SigExtra_T_11, 4) @[Bitwise.scala 103:65]
    skip
    node _CDom_reduced4SigExtra_T_14 = and(_CDom_reduced4SigExtra_T_12, UInt<8>("hf0")) @[Bitwise.scala 103:75]
    node _CDom_reduced4SigExtra_T_15 = or(_CDom_reduced4SigExtra_T_10, _CDom_reduced4SigExtra_T_14) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _CDom_reduced4SigExtra_T_19 = shr(_CDom_reduced4SigExtra_T_15, 2) @[Bitwise.scala 103:21]
    node _GEN_2 = pad(_CDom_reduced4SigExtra_T_19, 8) @[Bitwise.scala 103:31]
    node _CDom_reduced4SigExtra_T_20 = and(_GEN_2, UInt<8>("h33")) @[Bitwise.scala 103:31]
    node _CDom_reduced4SigExtra_T_21 = bits(_CDom_reduced4SigExtra_T_15, 5, 0) @[Bitwise.scala 103:46]
    node _CDom_reduced4SigExtra_T_22 = shl(_CDom_reduced4SigExtra_T_21, 2) @[Bitwise.scala 103:65]
    skip
    node _CDom_reduced4SigExtra_T_24 = and(_CDom_reduced4SigExtra_T_22, UInt<8>("hcc")) @[Bitwise.scala 103:75]
    node _CDom_reduced4SigExtra_T_25 = or(_CDom_reduced4SigExtra_T_20, _CDom_reduced4SigExtra_T_24) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _CDom_reduced4SigExtra_T_29 = shr(_CDom_reduced4SigExtra_T_25, 1) @[Bitwise.scala 103:21]
    node _GEN_3 = pad(_CDom_reduced4SigExtra_T_29, 8) @[Bitwise.scala 103:31]
    node _CDom_reduced4SigExtra_T_30 = and(_GEN_3, UInt<8>("h55")) @[Bitwise.scala 103:31]
    node _CDom_reduced4SigExtra_T_31 = bits(_CDom_reduced4SigExtra_T_25, 6, 0) @[Bitwise.scala 103:46]
    node _CDom_reduced4SigExtra_T_32 = shl(_CDom_reduced4SigExtra_T_31, 1) @[Bitwise.scala 103:65]
    skip
    node _CDom_reduced4SigExtra_T_34 = and(_CDom_reduced4SigExtra_T_32, UInt<8>("haa")) @[Bitwise.scala 103:75]
    node CDom_reduced4SigExtra_hi_1 = or(_CDom_reduced4SigExtra_T_30, _CDom_reduced4SigExtra_T_34) @[Bitwise.scala 103:39]
    node _CDom_reduced4SigExtra_T_35 = bits(_CDom_reduced4SigExtra_T_5, 12, 8) @[Bitwise.scala 109:44]
    node _CDom_reduced4SigExtra_T_36 = bits(_CDom_reduced4SigExtra_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _CDom_reduced4SigExtra_T_37 = bits(_CDom_reduced4SigExtra_T_36, 1, 0) @[Bitwise.scala 109:18]
    node CDom_reduced4SigExtra_hi_2 = bits(_CDom_reduced4SigExtra_T_37, 0, 0) @[Bitwise.scala 109:18]
    node CDom_reduced4SigExtra_lo_1 = bits(_CDom_reduced4SigExtra_T_37, 1, 1) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_hi_3 = cat(CDom_reduced4SigExtra_hi_2, CDom_reduced4SigExtra_lo_1) @[Cat.scala 30:58]
    node _CDom_reduced4SigExtra_T_38 = bits(_CDom_reduced4SigExtra_T_36, 3, 2) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_hi_4 = bits(_CDom_reduced4SigExtra_T_38, 0, 0) @[Bitwise.scala 109:18]
    node CDom_reduced4SigExtra_lo_2 = bits(_CDom_reduced4SigExtra_T_38, 1, 1) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_lo_3 = cat(CDom_reduced4SigExtra_hi_4, CDom_reduced4SigExtra_lo_2) @[Cat.scala 30:58]
    node CDom_reduced4SigExtra_hi_5 = cat(CDom_reduced4SigExtra_hi_3, CDom_reduced4SigExtra_lo_3) @[Cat.scala 30:58]
    node CDom_reduced4SigExtra_lo_4 = bits(_CDom_reduced4SigExtra_T_35, 4, 4) @[Bitwise.scala 109:44]
    node CDom_reduced4SigExtra_lo_5 = cat(CDom_reduced4SigExtra_hi_5, CDom_reduced4SigExtra_lo_4) @[Cat.scala 30:58]
    node _CDom_reduced4SigExtra_T_39 = cat(CDom_reduced4SigExtra_hi_1, CDom_reduced4SigExtra_lo_5) @[Cat.scala 30:58]
    node _GEN_4 = pad(_CDom_reduced4SigExtra_T_39, 14) @[MulAddRecFN.scala 224:72]
    node _CDom_reduced4SigExtra_T_40 = and(_CDom_reduced4SigExtra_T_2, _GEN_4) @[MulAddRecFN.scala 224:72]
    node CDom_reduced4SigExtra = orr(_CDom_reduced4SigExtra_T_40) @[MulAddRecFN.scala 225:73]
    node CDom_sig_hi = shr(CDom_mainSig, 3) @[MulAddRecFN.scala 227:25]
    node _CDom_sig_T = bits(CDom_mainSig, 2, 0) @[MulAddRecFN.scala 228:25]
    node _CDom_sig_T_1 = orr(_CDom_sig_T) @[MulAddRecFN.scala 228:32]
    node _CDom_sig_T_2 = or(_CDom_sig_T_1, CDom_reduced4SigExtra) @[MulAddRecFN.scala 228:36]
    node CDom_sig_lo = or(_CDom_sig_T_2, CDom_absSigSumExtra) @[MulAddRecFN.scala 228:61]
    node CDom_sig = cat(CDom_sig_hi, CDom_sig_lo) @[Cat.scala 30:58]
    node notCDom_signSigSum = bits(sigSum, 109, 109) @[MulAddRecFN.scala 234:36]
    node _notCDom_absSigSum_T = bits(sigSum, 108, 0) @[MulAddRecFN.scala 237:20]
    node _notCDom_absSigSum_T_1 = not(_notCDom_absSigSum_T) @[MulAddRecFN.scala 237:13]
    skip
    node _GEN_5 = pad(io_fromPreMul_doSubMags, 109) @[MulAddRecFN.scala 238:41]
    node _notCDom_absSigSum_T_3 = add(_notCDom_absSigSum_T, _GEN_5) @[MulAddRecFN.scala 238:41]
    node _notCDom_absSigSum_T_4 = tail(_notCDom_absSigSum_T_3, 1) @[MulAddRecFN.scala 238:41]
    node notCDom_absSigSum = mux(notCDom_signSigSum, _notCDom_absSigSum_T_1, _notCDom_absSigSum_T_4) @[MulAddRecFN.scala 236:12]
    node _notCDom_reduced2AbsSigSum_reducedVec_0_T = bits(notCDom_absSigSum, 1, 0) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_0 = orr(_notCDom_reduced2AbsSigSum_reducedVec_0_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_1_T = bits(notCDom_absSigSum, 3, 2) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_1 = orr(_notCDom_reduced2AbsSigSum_reducedVec_1_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_2_T = bits(notCDom_absSigSum, 5, 4) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_2 = orr(_notCDom_reduced2AbsSigSum_reducedVec_2_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_3_T = bits(notCDom_absSigSum, 7, 6) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_3 = orr(_notCDom_reduced2AbsSigSum_reducedVec_3_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_4_T = bits(notCDom_absSigSum, 9, 8) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_4 = orr(_notCDom_reduced2AbsSigSum_reducedVec_4_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_5_T = bits(notCDom_absSigSum, 11, 10) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_5 = orr(_notCDom_reduced2AbsSigSum_reducedVec_5_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_6_T = bits(notCDom_absSigSum, 13, 12) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_6 = orr(_notCDom_reduced2AbsSigSum_reducedVec_6_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_7_T = bits(notCDom_absSigSum, 15, 14) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_7 = orr(_notCDom_reduced2AbsSigSum_reducedVec_7_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_8_T = bits(notCDom_absSigSum, 17, 16) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_8 = orr(_notCDom_reduced2AbsSigSum_reducedVec_8_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_9_T = bits(notCDom_absSigSum, 19, 18) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_9 = orr(_notCDom_reduced2AbsSigSum_reducedVec_9_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_10_T = bits(notCDom_absSigSum, 21, 20) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_10 = orr(_notCDom_reduced2AbsSigSum_reducedVec_10_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_11_T = bits(notCDom_absSigSum, 23, 22) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_11 = orr(_notCDom_reduced2AbsSigSum_reducedVec_11_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_12_T = bits(notCDom_absSigSum, 25, 24) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_12 = orr(_notCDom_reduced2AbsSigSum_reducedVec_12_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_13_T = bits(notCDom_absSigSum, 27, 26) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_13 = orr(_notCDom_reduced2AbsSigSum_reducedVec_13_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_14_T = bits(notCDom_absSigSum, 29, 28) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_14 = orr(_notCDom_reduced2AbsSigSum_reducedVec_14_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_15_T = bits(notCDom_absSigSum, 31, 30) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_15 = orr(_notCDom_reduced2AbsSigSum_reducedVec_15_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_16_T = bits(notCDom_absSigSum, 33, 32) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_16 = orr(_notCDom_reduced2AbsSigSum_reducedVec_16_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_17_T = bits(notCDom_absSigSum, 35, 34) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_17 = orr(_notCDom_reduced2AbsSigSum_reducedVec_17_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_18_T = bits(notCDom_absSigSum, 37, 36) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_18 = orr(_notCDom_reduced2AbsSigSum_reducedVec_18_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_19_T = bits(notCDom_absSigSum, 39, 38) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_19 = orr(_notCDom_reduced2AbsSigSum_reducedVec_19_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_20_T = bits(notCDom_absSigSum, 41, 40) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_20 = orr(_notCDom_reduced2AbsSigSum_reducedVec_20_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_21_T = bits(notCDom_absSigSum, 43, 42) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_21 = orr(_notCDom_reduced2AbsSigSum_reducedVec_21_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_22_T = bits(notCDom_absSigSum, 45, 44) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_22 = orr(_notCDom_reduced2AbsSigSum_reducedVec_22_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_23_T = bits(notCDom_absSigSum, 47, 46) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_23 = orr(_notCDom_reduced2AbsSigSum_reducedVec_23_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_24_T = bits(notCDom_absSigSum, 49, 48) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_24 = orr(_notCDom_reduced2AbsSigSum_reducedVec_24_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_25_T = bits(notCDom_absSigSum, 51, 50) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_25 = orr(_notCDom_reduced2AbsSigSum_reducedVec_25_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_26_T = bits(notCDom_absSigSum, 53, 52) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_26 = orr(_notCDom_reduced2AbsSigSum_reducedVec_26_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_27_T = bits(notCDom_absSigSum, 55, 54) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_27 = orr(_notCDom_reduced2AbsSigSum_reducedVec_27_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_28_T = bits(notCDom_absSigSum, 57, 56) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_28 = orr(_notCDom_reduced2AbsSigSum_reducedVec_28_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_29_T = bits(notCDom_absSigSum, 59, 58) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_29 = orr(_notCDom_reduced2AbsSigSum_reducedVec_29_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_30_T = bits(notCDom_absSigSum, 61, 60) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_30 = orr(_notCDom_reduced2AbsSigSum_reducedVec_30_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_31_T = bits(notCDom_absSigSum, 63, 62) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_31 = orr(_notCDom_reduced2AbsSigSum_reducedVec_31_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_32_T = bits(notCDom_absSigSum, 65, 64) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_32 = orr(_notCDom_reduced2AbsSigSum_reducedVec_32_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_33_T = bits(notCDom_absSigSum, 67, 66) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_33 = orr(_notCDom_reduced2AbsSigSum_reducedVec_33_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_34_T = bits(notCDom_absSigSum, 69, 68) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_34 = orr(_notCDom_reduced2AbsSigSum_reducedVec_34_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_35_T = bits(notCDom_absSigSum, 71, 70) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_35 = orr(_notCDom_reduced2AbsSigSum_reducedVec_35_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_36_T = bits(notCDom_absSigSum, 73, 72) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_36 = orr(_notCDom_reduced2AbsSigSum_reducedVec_36_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_37_T = bits(notCDom_absSigSum, 75, 74) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_37 = orr(_notCDom_reduced2AbsSigSum_reducedVec_37_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_38_T = bits(notCDom_absSigSum, 77, 76) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_38 = orr(_notCDom_reduced2AbsSigSum_reducedVec_38_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_39_T = bits(notCDom_absSigSum, 79, 78) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_39 = orr(_notCDom_reduced2AbsSigSum_reducedVec_39_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_40_T = bits(notCDom_absSigSum, 81, 80) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_40 = orr(_notCDom_reduced2AbsSigSum_reducedVec_40_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_41_T = bits(notCDom_absSigSum, 83, 82) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_41 = orr(_notCDom_reduced2AbsSigSum_reducedVec_41_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_42_T = bits(notCDom_absSigSum, 85, 84) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_42 = orr(_notCDom_reduced2AbsSigSum_reducedVec_42_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_43_T = bits(notCDom_absSigSum, 87, 86) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_43 = orr(_notCDom_reduced2AbsSigSum_reducedVec_43_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_44_T = bits(notCDom_absSigSum, 89, 88) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_44 = orr(_notCDom_reduced2AbsSigSum_reducedVec_44_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_45_T = bits(notCDom_absSigSum, 91, 90) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_45 = orr(_notCDom_reduced2AbsSigSum_reducedVec_45_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_46_T = bits(notCDom_absSigSum, 93, 92) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_46 = orr(_notCDom_reduced2AbsSigSum_reducedVec_46_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_47_T = bits(notCDom_absSigSum, 95, 94) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_47 = orr(_notCDom_reduced2AbsSigSum_reducedVec_47_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_48_T = bits(notCDom_absSigSum, 97, 96) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_48 = orr(_notCDom_reduced2AbsSigSum_reducedVec_48_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_49_T = bits(notCDom_absSigSum, 99, 98) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_49 = orr(_notCDom_reduced2AbsSigSum_reducedVec_49_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_50_T = bits(notCDom_absSigSum, 101, 100) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_50 = orr(_notCDom_reduced2AbsSigSum_reducedVec_50_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_51_T = bits(notCDom_absSigSum, 103, 102) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_51 = orr(_notCDom_reduced2AbsSigSum_reducedVec_51_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_52_T = bits(notCDom_absSigSum, 105, 104) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_52 = orr(_notCDom_reduced2AbsSigSum_reducedVec_52_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_53_T = bits(notCDom_absSigSum, 107, 106) @[primitives.scala 104:33]
    node notCDom_reduced2AbsSigSum_reducedVec_53 = orr(_notCDom_reduced2AbsSigSum_reducedVec_53_T) @[primitives.scala 104:54]
    node _notCDom_reduced2AbsSigSum_reducedVec_54_T = bits(notCDom_absSigSum, 108, 108) @[primitives.scala 107:15]
    node notCDom_reduced2AbsSigSum_reducedVec_54 = orr(_notCDom_reduced2AbsSigSum_reducedVec_54_T) @[primitives.scala 107:57]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_2, notCDom_reduced2AbsSigSum_reducedVec_1) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_0) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_5, notCDom_reduced2AbsSigSum_reducedVec_4) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_lo_lo_hi_hi, notCDom_reduced2AbsSigSum_reducedVec_3) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_lo_hi, notCDom_reduced2AbsSigSum_lo_lo_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_8, notCDom_reduced2AbsSigSum_reducedVec_7) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_6) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_10, notCDom_reduced2AbsSigSum_reducedVec_9) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_lo_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_12, notCDom_reduced2AbsSigSum_reducedVec_11) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_lo_lo_hi_hi_hi, notCDom_reduced2AbsSigSum_lo_lo_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_lo_hi_hi, notCDom_reduced2AbsSigSum_lo_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_lo_hi, notCDom_reduced2AbsSigSum_lo_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_15, notCDom_reduced2AbsSigSum_reducedVec_14) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_lo_lo = cat(notCDom_reduced2AbsSigSum_lo_hi_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_13) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_17, notCDom_reduced2AbsSigSum_reducedVec_16) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_19, notCDom_reduced2AbsSigSum_reducedVec_18) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_lo_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_lo_hi_lo_hi, notCDom_reduced2AbsSigSum_lo_hi_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_22, notCDom_reduced2AbsSigSum_reducedVec_21) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_lo_hi_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_20) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_24, notCDom_reduced2AbsSigSum_reducedVec_23) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_lo_hi_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_26, notCDom_reduced2AbsSigSum_reducedVec_25) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo_hi = cat(notCDom_reduced2AbsSigSum_lo_hi_hi, notCDom_reduced2AbsSigSum_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_lo = cat(notCDom_reduced2AbsSigSum_lo_hi, notCDom_reduced2AbsSigSum_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_29, notCDom_reduced2AbsSigSum_reducedVec_28) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_lo_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_27) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_31, notCDom_reduced2AbsSigSum_reducedVec_30) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_33, notCDom_reduced2AbsSigSum_reducedVec_32) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_hi_lo_lo_hi_hi, notCDom_reduced2AbsSigSum_hi_lo_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_lo_hi, notCDom_reduced2AbsSigSum_hi_lo_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_36, notCDom_reduced2AbsSigSum_reducedVec_35) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_34) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_38, notCDom_reduced2AbsSigSum_reducedVec_37) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_lo_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_40, notCDom_reduced2AbsSigSum_reducedVec_39) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_lo_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_lo_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_hi_lo_hi_hi, notCDom_reduced2AbsSigSum_hi_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_lo_hi, notCDom_reduced2AbsSigSum_hi_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_lo_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_43, notCDom_reduced2AbsSigSum_reducedVec_42) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_lo_lo = cat(notCDom_reduced2AbsSigSum_hi_hi_lo_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_41) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_lo_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_45, notCDom_reduced2AbsSigSum_reducedVec_44) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_lo_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_47, notCDom_reduced2AbsSigSum_reducedVec_46) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_lo_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_hi_lo_hi, notCDom_reduced2AbsSigSum_hi_hi_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_hi_lo_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_50, notCDom_reduced2AbsSigSum_reducedVec_49) @[primitives.scala 108:20]
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_hi_hi_hi_lo_hi, notCDom_reduced2AbsSigSum_reducedVec_48) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_hi_hi_lo = cat(notCDom_reduced2AbsSigSum_reducedVec_52, notCDom_reduced2AbsSigSum_reducedVec_51) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced2AbsSigSum_hi_hi_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_reducedVec_54, notCDom_reduced2AbsSigSum_reducedVec_53) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi_hi = cat(notCDom_reduced2AbsSigSum_hi_hi_hi, notCDom_reduced2AbsSigSum_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum_hi = cat(notCDom_reduced2AbsSigSum_hi_hi, notCDom_reduced2AbsSigSum_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced2AbsSigSum = cat(notCDom_reduced2AbsSigSum_hi, notCDom_reduced2AbsSigSum_lo) @[primitives.scala 108:20]
    skip
    node _notCDom_normDistReduced2_T_1 = bits(notCDom_reduced2AbsSigSum, 1, 1) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_2 = bits(notCDom_reduced2AbsSigSum, 2, 2) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_3 = bits(notCDom_reduced2AbsSigSum, 3, 3) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_4 = bits(notCDom_reduced2AbsSigSum, 4, 4) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_5 = bits(notCDom_reduced2AbsSigSum, 5, 5) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_6 = bits(notCDom_reduced2AbsSigSum, 6, 6) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_7 = bits(notCDom_reduced2AbsSigSum, 7, 7) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_8 = bits(notCDom_reduced2AbsSigSum, 8, 8) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_9 = bits(notCDom_reduced2AbsSigSum, 9, 9) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_10 = bits(notCDom_reduced2AbsSigSum, 10, 10) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_11 = bits(notCDom_reduced2AbsSigSum, 11, 11) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_12 = bits(notCDom_reduced2AbsSigSum, 12, 12) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_13 = bits(notCDom_reduced2AbsSigSum, 13, 13) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_14 = bits(notCDom_reduced2AbsSigSum, 14, 14) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_15 = bits(notCDom_reduced2AbsSigSum, 15, 15) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_16 = bits(notCDom_reduced2AbsSigSum, 16, 16) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_17 = bits(notCDom_reduced2AbsSigSum, 17, 17) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_18 = bits(notCDom_reduced2AbsSigSum, 18, 18) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_19 = bits(notCDom_reduced2AbsSigSum, 19, 19) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_20 = bits(notCDom_reduced2AbsSigSum, 20, 20) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_21 = bits(notCDom_reduced2AbsSigSum, 21, 21) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_22 = bits(notCDom_reduced2AbsSigSum, 22, 22) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_23 = bits(notCDom_reduced2AbsSigSum, 23, 23) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_24 = bits(notCDom_reduced2AbsSigSum, 24, 24) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_25 = bits(notCDom_reduced2AbsSigSum, 25, 25) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_26 = bits(notCDom_reduced2AbsSigSum, 26, 26) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_27 = bits(notCDom_reduced2AbsSigSum, 27, 27) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_28 = bits(notCDom_reduced2AbsSigSum, 28, 28) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_29 = bits(notCDom_reduced2AbsSigSum, 29, 29) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_30 = bits(notCDom_reduced2AbsSigSum, 30, 30) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_31 = bits(notCDom_reduced2AbsSigSum, 31, 31) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_32 = bits(notCDom_reduced2AbsSigSum, 32, 32) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_33 = bits(notCDom_reduced2AbsSigSum, 33, 33) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_34 = bits(notCDom_reduced2AbsSigSum, 34, 34) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_35 = bits(notCDom_reduced2AbsSigSum, 35, 35) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_36 = bits(notCDom_reduced2AbsSigSum, 36, 36) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_37 = bits(notCDom_reduced2AbsSigSum, 37, 37) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_38 = bits(notCDom_reduced2AbsSigSum, 38, 38) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_39 = bits(notCDom_reduced2AbsSigSum, 39, 39) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_40 = bits(notCDom_reduced2AbsSigSum, 40, 40) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_41 = bits(notCDom_reduced2AbsSigSum, 41, 41) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_42 = bits(notCDom_reduced2AbsSigSum, 42, 42) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_43 = bits(notCDom_reduced2AbsSigSum, 43, 43) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_44 = bits(notCDom_reduced2AbsSigSum, 44, 44) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_45 = bits(notCDom_reduced2AbsSigSum, 45, 45) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_46 = bits(notCDom_reduced2AbsSigSum, 46, 46) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_47 = bits(notCDom_reduced2AbsSigSum, 47, 47) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_48 = bits(notCDom_reduced2AbsSigSum, 48, 48) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_49 = bits(notCDom_reduced2AbsSigSum, 49, 49) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_50 = bits(notCDom_reduced2AbsSigSum, 50, 50) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_51 = bits(notCDom_reduced2AbsSigSum, 51, 51) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_52 = bits(notCDom_reduced2AbsSigSum, 52, 52) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_53 = bits(notCDom_reduced2AbsSigSum, 53, 53) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_54 = bits(notCDom_reduced2AbsSigSum, 54, 54) @[primitives.scala 92:52]
    node _notCDom_normDistReduced2_T_55 = mux(_notCDom_normDistReduced2_T_1, UInt<6>("h35"), UInt<6>("h36")) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_56 = mux(_notCDom_normDistReduced2_T_2, UInt<6>("h34"), _notCDom_normDistReduced2_T_55) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_57 = mux(_notCDom_normDistReduced2_T_3, UInt<6>("h33"), _notCDom_normDistReduced2_T_56) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_58 = mux(_notCDom_normDistReduced2_T_4, UInt<6>("h32"), _notCDom_normDistReduced2_T_57) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_59 = mux(_notCDom_normDistReduced2_T_5, UInt<6>("h31"), _notCDom_normDistReduced2_T_58) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_60 = mux(_notCDom_normDistReduced2_T_6, UInt<6>("h30"), _notCDom_normDistReduced2_T_59) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_61 = mux(_notCDom_normDistReduced2_T_7, UInt<6>("h2f"), _notCDom_normDistReduced2_T_60) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_62 = mux(_notCDom_normDistReduced2_T_8, UInt<6>("h2e"), _notCDom_normDistReduced2_T_61) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_63 = mux(_notCDom_normDistReduced2_T_9, UInt<6>("h2d"), _notCDom_normDistReduced2_T_62) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_64 = mux(_notCDom_normDistReduced2_T_10, UInt<6>("h2c"), _notCDom_normDistReduced2_T_63) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_65 = mux(_notCDom_normDistReduced2_T_11, UInt<6>("h2b"), _notCDom_normDistReduced2_T_64) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_66 = mux(_notCDom_normDistReduced2_T_12, UInt<6>("h2a"), _notCDom_normDistReduced2_T_65) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_67 = mux(_notCDom_normDistReduced2_T_13, UInt<6>("h29"), _notCDom_normDistReduced2_T_66) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_68 = mux(_notCDom_normDistReduced2_T_14, UInt<6>("h28"), _notCDom_normDistReduced2_T_67) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_69 = mux(_notCDom_normDistReduced2_T_15, UInt<6>("h27"), _notCDom_normDistReduced2_T_68) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_70 = mux(_notCDom_normDistReduced2_T_16, UInt<6>("h26"), _notCDom_normDistReduced2_T_69) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_71 = mux(_notCDom_normDistReduced2_T_17, UInt<6>("h25"), _notCDom_normDistReduced2_T_70) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_72 = mux(_notCDom_normDistReduced2_T_18, UInt<6>("h24"), _notCDom_normDistReduced2_T_71) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_73 = mux(_notCDom_normDistReduced2_T_19, UInt<6>("h23"), _notCDom_normDistReduced2_T_72) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_74 = mux(_notCDom_normDistReduced2_T_20, UInt<6>("h22"), _notCDom_normDistReduced2_T_73) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_75 = mux(_notCDom_normDistReduced2_T_21, UInt<6>("h21"), _notCDom_normDistReduced2_T_74) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_76 = mux(_notCDom_normDistReduced2_T_22, UInt<6>("h20"), _notCDom_normDistReduced2_T_75) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_77 = mux(_notCDom_normDistReduced2_T_23, UInt<6>("h1f"), _notCDom_normDistReduced2_T_76) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_78 = mux(_notCDom_normDistReduced2_T_24, UInt<6>("h1e"), _notCDom_normDistReduced2_T_77) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_79 = mux(_notCDom_normDistReduced2_T_25, UInt<6>("h1d"), _notCDom_normDistReduced2_T_78) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_80 = mux(_notCDom_normDistReduced2_T_26, UInt<6>("h1c"), _notCDom_normDistReduced2_T_79) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_81 = mux(_notCDom_normDistReduced2_T_27, UInt<6>("h1b"), _notCDom_normDistReduced2_T_80) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_82 = mux(_notCDom_normDistReduced2_T_28, UInt<6>("h1a"), _notCDom_normDistReduced2_T_81) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_83 = mux(_notCDom_normDistReduced2_T_29, UInt<6>("h19"), _notCDom_normDistReduced2_T_82) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_84 = mux(_notCDom_normDistReduced2_T_30, UInt<6>("h18"), _notCDom_normDistReduced2_T_83) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_85 = mux(_notCDom_normDistReduced2_T_31, UInt<6>("h17"), _notCDom_normDistReduced2_T_84) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_86 = mux(_notCDom_normDistReduced2_T_32, UInt<6>("h16"), _notCDom_normDistReduced2_T_85) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_87 = mux(_notCDom_normDistReduced2_T_33, UInt<6>("h15"), _notCDom_normDistReduced2_T_86) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_88 = mux(_notCDom_normDistReduced2_T_34, UInt<6>("h14"), _notCDom_normDistReduced2_T_87) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_89 = mux(_notCDom_normDistReduced2_T_35, UInt<6>("h13"), _notCDom_normDistReduced2_T_88) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_90 = mux(_notCDom_normDistReduced2_T_36, UInt<6>("h12"), _notCDom_normDistReduced2_T_89) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_91 = mux(_notCDom_normDistReduced2_T_37, UInt<6>("h11"), _notCDom_normDistReduced2_T_90) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_92 = mux(_notCDom_normDistReduced2_T_38, UInt<6>("h10"), _notCDom_normDistReduced2_T_91) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_93 = mux(_notCDom_normDistReduced2_T_39, UInt<6>("hf"), _notCDom_normDistReduced2_T_92) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_94 = mux(_notCDom_normDistReduced2_T_40, UInt<6>("he"), _notCDom_normDistReduced2_T_93) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_95 = mux(_notCDom_normDistReduced2_T_41, UInt<6>("hd"), _notCDom_normDistReduced2_T_94) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_96 = mux(_notCDom_normDistReduced2_T_42, UInt<6>("hc"), _notCDom_normDistReduced2_T_95) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_97 = mux(_notCDom_normDistReduced2_T_43, UInt<6>("hb"), _notCDom_normDistReduced2_T_96) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_98 = mux(_notCDom_normDistReduced2_T_44, UInt<6>("ha"), _notCDom_normDistReduced2_T_97) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_99 = mux(_notCDom_normDistReduced2_T_45, UInt<6>("h9"), _notCDom_normDistReduced2_T_98) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_100 = mux(_notCDom_normDistReduced2_T_46, UInt<6>("h8"), _notCDom_normDistReduced2_T_99) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_101 = mux(_notCDom_normDistReduced2_T_47, UInt<6>("h7"), _notCDom_normDistReduced2_T_100) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_102 = mux(_notCDom_normDistReduced2_T_48, UInt<6>("h6"), _notCDom_normDistReduced2_T_101) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_103 = mux(_notCDom_normDistReduced2_T_49, UInt<6>("h5"), _notCDom_normDistReduced2_T_102) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_104 = mux(_notCDom_normDistReduced2_T_50, UInt<6>("h4"), _notCDom_normDistReduced2_T_103) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_105 = mux(_notCDom_normDistReduced2_T_51, UInt<6>("h3"), _notCDom_normDistReduced2_T_104) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_106 = mux(_notCDom_normDistReduced2_T_52, UInt<6>("h2"), _notCDom_normDistReduced2_T_105) @[Mux.scala 47:69]
    node _notCDom_normDistReduced2_T_107 = mux(_notCDom_normDistReduced2_T_53, UInt<6>("h1"), _notCDom_normDistReduced2_T_106) @[Mux.scala 47:69]
    node notCDom_normDistReduced2 = mux(_notCDom_normDistReduced2_T_54, UInt<6>("h0"), _notCDom_normDistReduced2_T_107) @[Mux.scala 47:69]
    node notCDom_nearNormDist = shl(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 242:56]
    node _notCDom_sExp_T = cvt(notCDom_nearNormDist) @[MulAddRecFN.scala 243:69]
    node _GEN_6 = pad(_notCDom_sExp_T, 13) @[MulAddRecFN.scala 243:46]
    node _notCDom_sExp_T_1 = sub(io_fromPreMul_sExpSum, _GEN_6) @[MulAddRecFN.scala 243:46]
    node _notCDom_sExp_T_2 = tail(_notCDom_sExp_T_1, 1) @[MulAddRecFN.scala 243:46]
    node notCDom_sExp = asSInt(_notCDom_sExp_T_2) @[MulAddRecFN.scala 243:46]
    node _notCDom_mainSig_T = dshl(notCDom_absSigSum, notCDom_nearNormDist) @[MulAddRecFN.scala 245:27]
    node notCDom_mainSig = bits(_notCDom_mainSig_T, 109, 52) @[MulAddRecFN.scala 245:50]
    node _notCDom_reduced4SigExtra_T = bits(notCDom_reduced2AbsSigSum, 26, 0) @[MulAddRecFN.scala 249:39]
    skip
    node _notCDom_reduced4SigExtra_reducedVec_0_T = bits(_notCDom_reduced4SigExtra_T, 1, 0) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_0 = orr(_notCDom_reduced4SigExtra_reducedVec_0_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_1_T = bits(_notCDom_reduced4SigExtra_T, 3, 2) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_1 = orr(_notCDom_reduced4SigExtra_reducedVec_1_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_2_T = bits(_notCDom_reduced4SigExtra_T, 5, 4) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_2 = orr(_notCDom_reduced4SigExtra_reducedVec_2_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_3_T = bits(_notCDom_reduced4SigExtra_T, 7, 6) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_3 = orr(_notCDom_reduced4SigExtra_reducedVec_3_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_4_T = bits(_notCDom_reduced4SigExtra_T, 9, 8) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_4 = orr(_notCDom_reduced4SigExtra_reducedVec_4_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_5_T = bits(_notCDom_reduced4SigExtra_T, 11, 10) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_5 = orr(_notCDom_reduced4SigExtra_reducedVec_5_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_6_T = bits(_notCDom_reduced4SigExtra_T, 13, 12) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_6 = orr(_notCDom_reduced4SigExtra_reducedVec_6_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_7_T = bits(_notCDom_reduced4SigExtra_T, 15, 14) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_7 = orr(_notCDom_reduced4SigExtra_reducedVec_7_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_8_T = bits(_notCDom_reduced4SigExtra_T, 17, 16) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_8 = orr(_notCDom_reduced4SigExtra_reducedVec_8_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_9_T = bits(_notCDom_reduced4SigExtra_T, 19, 18) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_9 = orr(_notCDom_reduced4SigExtra_reducedVec_9_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_10_T = bits(_notCDom_reduced4SigExtra_T, 21, 20) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_10 = orr(_notCDom_reduced4SigExtra_reducedVec_10_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_11_T = bits(_notCDom_reduced4SigExtra_T, 23, 22) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_11 = orr(_notCDom_reduced4SigExtra_reducedVec_11_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_12_T = bits(_notCDom_reduced4SigExtra_T, 25, 24) @[primitives.scala 104:33]
    node notCDom_reduced4SigExtra_reducedVec_12 = orr(_notCDom_reduced4SigExtra_reducedVec_12_T) @[primitives.scala 104:54]
    node _notCDom_reduced4SigExtra_reducedVec_13_T = bits(_notCDom_reduced4SigExtra_T, 26, 26) @[primitives.scala 107:15]
    node notCDom_reduced4SigExtra_reducedVec_13 = orr(_notCDom_reduced4SigExtra_reducedVec_13_T) @[primitives.scala 107:57]
    skip
    skip
    node notCDom_reduced4SigExtra_lo_lo_hi = cat(notCDom_reduced4SigExtra_reducedVec_2, notCDom_reduced4SigExtra_reducedVec_1) @[primitives.scala 108:20]
    skip
    node notCDom_reduced4SigExtra_lo_lo = cat(notCDom_reduced4SigExtra_lo_lo_hi, notCDom_reduced4SigExtra_reducedVec_0) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced4SigExtra_lo_hi_lo = cat(notCDom_reduced4SigExtra_reducedVec_4, notCDom_reduced4SigExtra_reducedVec_3) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced4SigExtra_lo_hi_hi = cat(notCDom_reduced4SigExtra_reducedVec_6, notCDom_reduced4SigExtra_reducedVec_5) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_lo_hi = cat(notCDom_reduced4SigExtra_lo_hi_hi, notCDom_reduced4SigExtra_lo_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_lo = cat(notCDom_reduced4SigExtra_lo_hi, notCDom_reduced4SigExtra_lo_lo) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced4SigExtra_hi_lo_hi = cat(notCDom_reduced4SigExtra_reducedVec_9, notCDom_reduced4SigExtra_reducedVec_8) @[primitives.scala 108:20]
    skip
    node notCDom_reduced4SigExtra_hi_lo = cat(notCDom_reduced4SigExtra_hi_lo_hi, notCDom_reduced4SigExtra_reducedVec_7) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced4SigExtra_hi_hi_lo = cat(notCDom_reduced4SigExtra_reducedVec_11, notCDom_reduced4SigExtra_reducedVec_10) @[primitives.scala 108:20]
    skip
    skip
    node notCDom_reduced4SigExtra_hi_hi_hi = cat(notCDom_reduced4SigExtra_reducedVec_13, notCDom_reduced4SigExtra_reducedVec_12) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi_hi = cat(notCDom_reduced4SigExtra_hi_hi_hi, notCDom_reduced4SigExtra_hi_hi_lo) @[primitives.scala 108:20]
    node notCDom_reduced4SigExtra_hi = cat(notCDom_reduced4SigExtra_hi_hi, notCDom_reduced4SigExtra_hi_lo) @[primitives.scala 108:20]
    node _notCDom_reduced4SigExtra_T_2 = cat(notCDom_reduced4SigExtra_hi, notCDom_reduced4SigExtra_lo) @[primitives.scala 108:20]
    node _notCDom_reduced4SigExtra_T_3 = shr(notCDom_normDistReduced2, 1) @[MulAddRecFN.scala 250:46]
    node _notCDom_reduced4SigExtra_T_4 = not(_notCDom_reduced4SigExtra_T_3) @[primitives.scala 51:21]
    node notCDom_reduced4SigExtra_shift = dshr(SInt<33>("h-100000000"), _notCDom_reduced4SigExtra_T_4) @[primitives.scala 77:58]
    node _notCDom_reduced4SigExtra_T_5 = bits(notCDom_reduced4SigExtra_shift, 13, 1) @[primitives.scala 79:22]
    node _notCDom_reduced4SigExtra_T_6 = bits(_notCDom_reduced4SigExtra_T_5, 7, 0) @[Bitwise.scala 109:18]
    skip
    skip
    node _notCDom_reduced4SigExtra_T_9 = shr(_notCDom_reduced4SigExtra_T_6, 4) @[Bitwise.scala 103:21]
    node _GEN_7 = pad(_notCDom_reduced4SigExtra_T_9, 8) @[Bitwise.scala 103:31]
    node _notCDom_reduced4SigExtra_T_10 = and(_GEN_7, UInt<8>("hf")) @[Bitwise.scala 103:31]
    node _notCDom_reduced4SigExtra_T_11 = bits(_notCDom_reduced4SigExtra_T_6, 3, 0) @[Bitwise.scala 103:46]
    node _notCDom_reduced4SigExtra_T_12 = shl(_notCDom_reduced4SigExtra_T_11, 4) @[Bitwise.scala 103:65]
    skip
    node _notCDom_reduced4SigExtra_T_14 = and(_notCDom_reduced4SigExtra_T_12, UInt<8>("hf0")) @[Bitwise.scala 103:75]
    node _notCDom_reduced4SigExtra_T_15 = or(_notCDom_reduced4SigExtra_T_10, _notCDom_reduced4SigExtra_T_14) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _notCDom_reduced4SigExtra_T_19 = shr(_notCDom_reduced4SigExtra_T_15, 2) @[Bitwise.scala 103:21]
    node _GEN_8 = pad(_notCDom_reduced4SigExtra_T_19, 8) @[Bitwise.scala 103:31]
    node _notCDom_reduced4SigExtra_T_20 = and(_GEN_8, UInt<8>("h33")) @[Bitwise.scala 103:31]
    node _notCDom_reduced4SigExtra_T_21 = bits(_notCDom_reduced4SigExtra_T_15, 5, 0) @[Bitwise.scala 103:46]
    node _notCDom_reduced4SigExtra_T_22 = shl(_notCDom_reduced4SigExtra_T_21, 2) @[Bitwise.scala 103:65]
    skip
    node _notCDom_reduced4SigExtra_T_24 = and(_notCDom_reduced4SigExtra_T_22, UInt<8>("hcc")) @[Bitwise.scala 103:75]
    node _notCDom_reduced4SigExtra_T_25 = or(_notCDom_reduced4SigExtra_T_20, _notCDom_reduced4SigExtra_T_24) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _notCDom_reduced4SigExtra_T_29 = shr(_notCDom_reduced4SigExtra_T_25, 1) @[Bitwise.scala 103:21]
    node _GEN_9 = pad(_notCDom_reduced4SigExtra_T_29, 8) @[Bitwise.scala 103:31]
    node _notCDom_reduced4SigExtra_T_30 = and(_GEN_9, UInt<8>("h55")) @[Bitwise.scala 103:31]
    node _notCDom_reduced4SigExtra_T_31 = bits(_notCDom_reduced4SigExtra_T_25, 6, 0) @[Bitwise.scala 103:46]
    node _notCDom_reduced4SigExtra_T_32 = shl(_notCDom_reduced4SigExtra_T_31, 1) @[Bitwise.scala 103:65]
    skip
    node _notCDom_reduced4SigExtra_T_34 = and(_notCDom_reduced4SigExtra_T_32, UInt<8>("haa")) @[Bitwise.scala 103:75]
    node notCDom_reduced4SigExtra_hi_1 = or(_notCDom_reduced4SigExtra_T_30, _notCDom_reduced4SigExtra_T_34) @[Bitwise.scala 103:39]
    node _notCDom_reduced4SigExtra_T_35 = bits(_notCDom_reduced4SigExtra_T_5, 12, 8) @[Bitwise.scala 109:44]
    node _notCDom_reduced4SigExtra_T_36 = bits(_notCDom_reduced4SigExtra_T_35, 3, 0) @[Bitwise.scala 109:18]
    node _notCDom_reduced4SigExtra_T_37 = bits(_notCDom_reduced4SigExtra_T_36, 1, 0) @[Bitwise.scala 109:18]
    node notCDom_reduced4SigExtra_hi_2 = bits(_notCDom_reduced4SigExtra_T_37, 0, 0) @[Bitwise.scala 109:18]
    node notCDom_reduced4SigExtra_lo_1 = bits(_notCDom_reduced4SigExtra_T_37, 1, 1) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_hi_3 = cat(notCDom_reduced4SigExtra_hi_2, notCDom_reduced4SigExtra_lo_1) @[Cat.scala 30:58]
    node _notCDom_reduced4SigExtra_T_38 = bits(_notCDom_reduced4SigExtra_T_36, 3, 2) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_hi_4 = bits(_notCDom_reduced4SigExtra_T_38, 0, 0) @[Bitwise.scala 109:18]
    node notCDom_reduced4SigExtra_lo_2 = bits(_notCDom_reduced4SigExtra_T_38, 1, 1) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_lo_3 = cat(notCDom_reduced4SigExtra_hi_4, notCDom_reduced4SigExtra_lo_2) @[Cat.scala 30:58]
    node notCDom_reduced4SigExtra_hi_5 = cat(notCDom_reduced4SigExtra_hi_3, notCDom_reduced4SigExtra_lo_3) @[Cat.scala 30:58]
    node notCDom_reduced4SigExtra_lo_4 = bits(_notCDom_reduced4SigExtra_T_35, 4, 4) @[Bitwise.scala 109:44]
    node notCDom_reduced4SigExtra_lo_5 = cat(notCDom_reduced4SigExtra_hi_5, notCDom_reduced4SigExtra_lo_4) @[Cat.scala 30:58]
    node _notCDom_reduced4SigExtra_T_39 = cat(notCDom_reduced4SigExtra_hi_1, notCDom_reduced4SigExtra_lo_5) @[Cat.scala 30:58]
    node _GEN_10 = pad(_notCDom_reduced4SigExtra_T_39, 14) @[MulAddRecFN.scala 249:78]
    node _notCDom_reduced4SigExtra_T_40 = and(_notCDom_reduced4SigExtra_T_2, _GEN_10) @[MulAddRecFN.scala 249:78]
    node notCDom_reduced4SigExtra = orr(_notCDom_reduced4SigExtra_T_40) @[MulAddRecFN.scala 251:11]
    node notCDom_sig_hi = shr(notCDom_mainSig, 3) @[MulAddRecFN.scala 253:28]
    node _notCDom_sig_T = bits(notCDom_mainSig, 2, 0) @[MulAddRecFN.scala 254:28]
    node _notCDom_sig_T_1 = orr(_notCDom_sig_T) @[MulAddRecFN.scala 254:35]
    node notCDom_sig_lo = or(_notCDom_sig_T_1, notCDom_reduced4SigExtra) @[MulAddRecFN.scala 254:39]
    node notCDom_sig = cat(notCDom_sig_hi, notCDom_sig_lo) @[Cat.scala 30:58]
    node _notCDom_completeCancellation_T = bits(notCDom_sig, 55, 54) @[MulAddRecFN.scala 257:21]
    node notCDom_completeCancellation = eq(_notCDom_completeCancellation_T, UInt<2>("h0")) @[MulAddRecFN.scala 257:50]
    node _notCDom_sign_T = xor(io_fromPreMul_signProd, notCDom_signSigSum) @[MulAddRecFN.scala 261:36]
    node notCDom_sign = mux(notCDom_completeCancellation, roundingMode_min, _notCDom_sign_T) @[MulAddRecFN.scala 259:12]
    node notNaN_isInfProd = or(io_fromPreMul_isInfA, io_fromPreMul_isInfB) @[MulAddRecFN.scala 266:49]
    node notNaN_isInfOut = or(notNaN_isInfProd, io_fromPreMul_isInfC) @[MulAddRecFN.scala 267:44]
    node _notNaN_addZeros_T = or(io_fromPreMul_isZeroA, io_fromPreMul_isZeroB) @[MulAddRecFN.scala 269:32]
    node notNaN_addZeros = and(_notNaN_addZeros_T, io_fromPreMul_isZeroC) @[MulAddRecFN.scala 269:58]
    node _io_invalidExc_T = and(io_fromPreMul_isInfA, io_fromPreMul_isZeroB) @[MulAddRecFN.scala 274:31]
    node _io_invalidExc_T_1 = or(io_fromPreMul_isSigNaNAny, _io_invalidExc_T) @[MulAddRecFN.scala 273:35]
    node _io_invalidExc_T_2 = and(io_fromPreMul_isZeroA, io_fromPreMul_isInfB) @[MulAddRecFN.scala 275:32]
    node _io_invalidExc_T_3 = or(_io_invalidExc_T_1, _io_invalidExc_T_2) @[MulAddRecFN.scala 274:57]
    node _io_invalidExc_T_4 = not(io_fromPreMul_isNaNAOrB) @[MulAddRecFN.scala 276:10]
    skip
    node _io_invalidExc_T_6 = and(_io_invalidExc_T_4, notNaN_isInfProd) @[MulAddRecFN.scala 276:36]
    node _io_invalidExc_T_7 = and(_io_invalidExc_T_6, io_fromPreMul_isInfC) @[MulAddRecFN.scala 277:61]
    node _io_invalidExc_T_8 = and(_io_invalidExc_T_7, io_fromPreMul_doSubMags) @[MulAddRecFN.scala 278:35]
    skip
    skip
    node _io_rawOut_isZero_T = not(io_fromPreMul_CIsDominant) @[MulAddRecFN.scala 285:14]
    node _io_rawOut_isZero_T_1 = and(_io_rawOut_isZero_T, notCDom_completeCancellation) @[MulAddRecFN.scala 285:42]
    skip
    node _io_rawOut_sign_T = and(notNaN_isInfProd, io_fromPreMul_signProd) @[MulAddRecFN.scala 287:27]
    node _io_rawOut_sign_T_1 = and(io_fromPreMul_isInfC, CDom_sign) @[MulAddRecFN.scala 288:31]
    node _io_rawOut_sign_T_2 = or(_io_rawOut_sign_T, _io_rawOut_sign_T_1) @[MulAddRecFN.scala 287:54]
    node _io_rawOut_sign_T_3 = not(roundingMode_min) @[MulAddRecFN.scala 289:29]
    node _io_rawOut_sign_T_4 = and(notNaN_addZeros, _io_rawOut_sign_T_3) @[MulAddRecFN.scala 289:26]
    node _io_rawOut_sign_T_5 = and(_io_rawOut_sign_T_4, io_fromPreMul_signProd) @[MulAddRecFN.scala 289:48]
    node _io_rawOut_sign_T_6 = and(_io_rawOut_sign_T_5, CDom_sign) @[MulAddRecFN.scala 290:36]
    node _io_rawOut_sign_T_7 = or(_io_rawOut_sign_T_2, _io_rawOut_sign_T_6) @[MulAddRecFN.scala 288:43]
    node _io_rawOut_sign_T_8 = and(notNaN_addZeros, roundingMode_min) @[MulAddRecFN.scala 291:26]
    node _io_rawOut_sign_T_9 = or(io_fromPreMul_signProd, CDom_sign) @[MulAddRecFN.scala 292:37]
    node _io_rawOut_sign_T_10 = and(_io_rawOut_sign_T_8, _io_rawOut_sign_T_9) @[MulAddRecFN.scala 291:46]
    node _io_rawOut_sign_T_11 = or(_io_rawOut_sign_T_7, _io_rawOut_sign_T_10) @[MulAddRecFN.scala 290:48]
    node _io_rawOut_sign_T_12 = not(notNaN_isInfOut) @[MulAddRecFN.scala 293:10]
    node _io_rawOut_sign_T_13 = not(notNaN_addZeros) @[MulAddRecFN.scala 293:31]
    node _io_rawOut_sign_T_14 = and(_io_rawOut_sign_T_12, _io_rawOut_sign_T_13) @[MulAddRecFN.scala 293:28]
    node _io_rawOut_sign_T_15 = mux(io_fromPreMul_CIsDominant, CDom_sign, notCDom_sign) @[MulAddRecFN.scala 294:17]
    node _io_rawOut_sign_T_16 = and(_io_rawOut_sign_T_14, _io_rawOut_sign_T_15) @[MulAddRecFN.scala 293:49]
    skip
    skip
    skip
    io_invalidExc <= or(_io_invalidExc_T_3, _io_invalidExc_T_8) @[MulAddRecFN.scala 275:57]
    io_rawOut_isNaN <= or(io_fromPreMul_isNaNAOrB, io_fromPreMul_isNaNC) @[MulAddRecFN.scala 280:48]
    io_rawOut_isInf <= or(notNaN_isInfProd, io_fromPreMul_isInfC) @[MulAddRecFN.scala 267:44]
    io_rawOut_isZero <= or(notNaN_addZeros, _io_rawOut_isZero_T_1) @[MulAddRecFN.scala 284:25]
    io_rawOut_sign <= or(_io_rawOut_sign_T_11, _io_rawOut_sign_T_16) @[MulAddRecFN.scala 292:50]
    io_rawOut_sExp <= mux(io_fromPreMul_CIsDominant, CDom_sExp, notCDom_sExp) @[MulAddRecFN.scala 295:26]
    io_rawOut_sig <= mux(io_fromPreMul_CIsDominant, CDom_sig, notCDom_sig) @[MulAddRecFN.scala 296:25]

  module RoundRawFNToRecFN_1 :
    input io_invalidExc : UInt<1>
    input io_in_isNaN : UInt<1>
    input io_in_isInf : UInt<1>
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<13>
    input io_in_sig : UInt<56>
    input io_roundingMode : UInt<3>
    output io_out : UInt<65>
    output io_exceptionFlags : UInt<5>

    inst roundAnyRawFNToRecFN of RoundAnyRawFNToRecFN_6 @[RoundAnyRawFNToRecFN.scala 307:15]
    io_out <= roundAnyRawFNToRecFN.io_out @[RoundAnyRawFNToRecFN.scala 315:23]
    io_exceptionFlags <= roundAnyRawFNToRecFN.io_exceptionFlags @[RoundAnyRawFNToRecFN.scala 316:23]
    roundAnyRawFNToRecFN.io_invalidExc <= io_invalidExc @[RoundAnyRawFNToRecFN.scala 310:44]
    roundAnyRawFNToRecFN.io_infiniteExc <= UInt<1>("h0") @[RoundAnyRawFNToRecFN.scala 311:44]
    roundAnyRawFNToRecFN.io_in_isNaN <= io_in_isNaN @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_isInf <= io_in_isInf @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_isZero <= io_in_isZero @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sign <= io_in_sign @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sExp <= io_in_sExp @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_in_sig <= io_in_sig @[RoundAnyRawFNToRecFN.scala 312:44]
    roundAnyRawFNToRecFN.io_roundingMode <= io_roundingMode @[RoundAnyRawFNToRecFN.scala 313:44]
    skip

  module DivSqrtRawFN_small :
    input clock : Clock
    input reset : UInt<1>
    output io_inReady : UInt<1>
    input io_inValid : UInt<1>
    input io_sqrtOp : UInt<1>
    input io_a_isNaN : UInt<1>
    input io_a_isInf : UInt<1>
    input io_a_isZero : UInt<1>
    input io_a_sign : UInt<1>
    input io_a_sExp : SInt<10>
    input io_a_sig : UInt<25>
    input io_b_isNaN : UInt<1>
    input io_b_isInf : UInt<1>
    input io_b_isZero : UInt<1>
    input io_b_sign : UInt<1>
    input io_b_sExp : SInt<10>
    input io_b_sig : UInt<25>
    input io_roundingMode : UInt<3>
    output io_rawOutValid_div : UInt<1>
    output io_rawOutValid_sqrt : UInt<1>
    output io_roundingModeOut : UInt<3>
    output io_invalidExc : UInt<1>
    output io_infiniteExc : UInt<1>
    output io_rawOut_isNaN : UInt<1>
    output io_rawOut_isInf : UInt<1>
    output io_rawOut_isZero : UInt<1>
    output io_rawOut_sign : UInt<1>
    output io_rawOut_sExp : SInt<10>
    output io_rawOut_sig : UInt<27>

    reg cycleNum : UInt<27>, clock with :
      reset => (UInt<1>("h0"), cycleNum) @[DivSqrtRecFN_small.scala 223:33]
    reg sqrtOp_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sqrtOp_Z) @[DivSqrtRecFN_small.scala 225:29]
    reg majorExc_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), majorExc_Z) @[DivSqrtRecFN_small.scala 226:29]
    reg isNaN_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isNaN_Z) @[DivSqrtRecFN_small.scala 228:29]
    reg isInf_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isInf_Z) @[DivSqrtRecFN_small.scala 229:29]
    reg isZero_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isZero_Z) @[DivSqrtRecFN_small.scala 230:29]
    reg sign_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sign_Z) @[DivSqrtRecFN_small.scala 231:29]
    reg sExp_Z : SInt<10>, clock with :
      reset => (UInt<1>("h0"), sExp_Z) @[DivSqrtRecFN_small.scala 232:29]
    reg fractB_Z : UInt<23>, clock with :
      reset => (UInt<1>("h0"), fractB_Z) @[DivSqrtRecFN_small.scala 233:29]
    reg roundingMode_Z : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundingMode_Z) @[DivSqrtRecFN_small.scala 234:29]
    reg rem_Z : UInt<26>, clock with :
      reset => (UInt<1>("h0"), rem_Z) @[DivSqrtRecFN_small.scala 240:29]
    reg notZeroRem_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), notZeroRem_Z) @[DivSqrtRecFN_small.scala 241:29]
    reg sigX_Z : UInt<26>, clock with :
      reset => (UInt<1>("h0"), sigX_Z) @[DivSqrtRecFN_small.scala 242:29]
    node _notSigNaNIn_invalidExc_S_div_T = and(io_a_isZero, io_b_isZero) @[DivSqrtRecFN_small.scala 251:24]
    node _notSigNaNIn_invalidExc_S_div_T_1 = and(io_a_isInf, io_b_isInf) @[DivSqrtRecFN_small.scala 251:59]
    node notSigNaNIn_invalidExc_S_div = or(_notSigNaNIn_invalidExc_S_div_T, _notSigNaNIn_invalidExc_S_div_T_1) @[DivSqrtRecFN_small.scala 251:42]
    node _notSigNaNIn_invalidExc_S_sqrt_T = not(io_a_isNaN) @[DivSqrtRecFN_small.scala 253:9]
    node _notSigNaNIn_invalidExc_S_sqrt_T_1 = not(io_a_isZero) @[DivSqrtRecFN_small.scala 253:27]
    node _notSigNaNIn_invalidExc_S_sqrt_T_2 = and(_notSigNaNIn_invalidExc_S_sqrt_T, _notSigNaNIn_invalidExc_S_sqrt_T_1) @[DivSqrtRecFN_small.scala 253:24]
    node notSigNaNIn_invalidExc_S_sqrt = and(_notSigNaNIn_invalidExc_S_sqrt_T_2, io_a_sign) @[DivSqrtRecFN_small.scala 253:43]
    node _majorExc_S_T = bits(io_a_sig, 22, 22) @[common.scala 81:56]
    node _majorExc_S_T_1 = not(_majorExc_S_T) @[common.scala 81:49]
    node _majorExc_S_T_2 = and(io_a_isNaN, _majorExc_S_T_1) @[common.scala 81:46]
    node _majorExc_S_T_3 = or(_majorExc_S_T_2, notSigNaNIn_invalidExc_S_sqrt) @[DivSqrtRecFN_small.scala 256:38]
    skip
    skip
    skip
    node _majorExc_S_T_7 = bits(io_b_sig, 22, 22) @[common.scala 81:56]
    node _majorExc_S_T_8 = not(_majorExc_S_T_7) @[common.scala 81:49]
    node _majorExc_S_T_9 = and(io_b_isNaN, _majorExc_S_T_8) @[common.scala 81:46]
    node _majorExc_S_T_10 = or(_majorExc_S_T_2, _majorExc_S_T_9) @[DivSqrtRecFN_small.scala 257:38]
    node _majorExc_S_T_11 = or(_majorExc_S_T_10, notSigNaNIn_invalidExc_S_div) @[DivSqrtRecFN_small.scala 257:66]
    skip
    node _majorExc_S_T_13 = not(io_a_isInf) @[DivSqrtRecFN_small.scala 259:36]
    node _majorExc_S_T_14 = and(_notSigNaNIn_invalidExc_S_sqrt_T, _majorExc_S_T_13) @[DivSqrtRecFN_small.scala 259:33]
    node _majorExc_S_T_15 = and(_majorExc_S_T_14, io_b_isZero) @[DivSqrtRecFN_small.scala 259:51]
    node _majorExc_S_T_16 = or(_majorExc_S_T_11, _majorExc_S_T_15) @[DivSqrtRecFN_small.scala 258:46]
    node majorExc_S = mux(io_sqrtOp, _majorExc_S_T_3, _majorExc_S_T_16) @[DivSqrtRecFN_small.scala 255:12]
    node _isNaN_S_T = or(io_a_isNaN, notSigNaNIn_invalidExc_S_sqrt) @[DivSqrtRecFN_small.scala 263:26]
    node _isNaN_S_T_1 = or(io_a_isNaN, io_b_isNaN) @[DivSqrtRecFN_small.scala 264:26]
    node _isNaN_S_T_2 = or(_isNaN_S_T_1, notSigNaNIn_invalidExc_S_div) @[DivSqrtRecFN_small.scala 264:42]
    node isNaN_S = mux(io_sqrtOp, _isNaN_S_T, _isNaN_S_T_2) @[DivSqrtRecFN_small.scala 262:12]
    node _isInf_S_T = or(io_a_isInf, io_b_isZero) @[DivSqrtRecFN_small.scala 266:63]
    node isInf_S = mux(io_sqrtOp, io_a_isInf, _isInf_S_T) @[DivSqrtRecFN_small.scala 266:23]
    node _isZero_S_T = or(io_a_isZero, io_b_isInf) @[DivSqrtRecFN_small.scala 267:64]
    node isZero_S = mux(io_sqrtOp, io_a_isZero, _isZero_S_T) @[DivSqrtRecFN_small.scala 267:23]
    node _sign_S_T = not(io_sqrtOp) @[DivSqrtRecFN_small.scala 268:33]
    node _sign_S_T_1 = and(_sign_S_T, io_b_sign) @[DivSqrtRecFN_small.scala 268:45]
    node sign_S = xor(io_a_sign, _sign_S_T_1) @[DivSqrtRecFN_small.scala 268:30]
    node _specialCaseA_S_T = or(io_a_isNaN, io_a_isInf) @[DivSqrtRecFN_small.scala 270:39]
    node specialCaseA_S = or(_specialCaseA_S_T, io_a_isZero) @[DivSqrtRecFN_small.scala 270:55]
    node _specialCaseB_S_T = or(io_b_isNaN, io_b_isInf) @[DivSqrtRecFN_small.scala 271:39]
    node specialCaseB_S = or(_specialCaseB_S_T, io_b_isZero) @[DivSqrtRecFN_small.scala 271:55]
    node _normalCase_S_div_T = not(specialCaseA_S) @[DivSqrtRecFN_small.scala 272:28]
    node _normalCase_S_div_T_1 = not(specialCaseB_S) @[DivSqrtRecFN_small.scala 272:48]
    node normalCase_S_div = and(_normalCase_S_div_T, _normalCase_S_div_T_1) @[DivSqrtRecFN_small.scala 272:45]
    skip
    node _normalCase_S_sqrt_T_1 = not(io_a_sign) @[DivSqrtRecFN_small.scala 273:49]
    node normalCase_S_sqrt = and(_normalCase_S_div_T, _normalCase_S_sqrt_T_1) @[DivSqrtRecFN_small.scala 273:46]
    node normalCase_S = mux(io_sqrtOp, normalCase_S_sqrt, normalCase_S_div) @[DivSqrtRecFN_small.scala 274:27]
    node sExpQuot_S_div_hi = bits(io_b_sExp, 8, 8) @[DivSqrtRecFN_small.scala 278:28]
    node _sExpQuot_S_div_T = bits(io_b_sExp, 7, 0) @[DivSqrtRecFN_small.scala 278:52]
    node sExpQuot_S_div_lo = not(_sExpQuot_S_div_T) @[DivSqrtRecFN_small.scala 278:40]
    node _sExpQuot_S_div_T_1 = cat(sExpQuot_S_div_hi, sExpQuot_S_div_lo) @[Cat.scala 30:58]
    node _sExpQuot_S_div_T_2 = asSInt(_sExpQuot_S_div_T_1) @[DivSqrtRecFN_small.scala 278:71]
    node _GEN_13 = pad(_sExpQuot_S_div_T_2, 10) @[DivSqrtRecFN_small.scala 277:21]
    node sExpQuot_S_div = add(io_a_sExp, _GEN_13) @[DivSqrtRecFN_small.scala 277:21]
    node _sSatExpQuot_S_div_T = leq(SInt<11>("h1c0"), sExpQuot_S_div) @[DivSqrtRecFN_small.scala 281:48]
    node _sSatExpQuot_S_div_T_1 = bits(sExpQuot_S_div, 9, 6) @[DivSqrtRecFN_small.scala 283:31]
    node sSatExpQuot_S_div_hi = mux(_sSatExpQuot_S_div_T, UInt<4>("h6"), _sSatExpQuot_S_div_T_1) @[DivSqrtRecFN_small.scala 281:16]
    node sSatExpQuot_S_div_lo = bits(sExpQuot_S_div, 5, 0) @[DivSqrtRecFN_small.scala 285:27]
    node _sSatExpQuot_S_div_T_2 = cat(sSatExpQuot_S_div_hi, sSatExpQuot_S_div_lo) @[Cat.scala 30:58]
    node sSatExpQuot_S_div = asSInt(_sSatExpQuot_S_div_T_2) @[DivSqrtRecFN_small.scala 286:11]
    node _evenSqrt_S_T = bits(io_a_sExp, 0, 0) @[DivSqrtRecFN_small.scala 288:48]
    node _evenSqrt_S_T_1 = not(_evenSqrt_S_T) @[DivSqrtRecFN_small.scala 288:35]
    node evenSqrt_S = and(io_sqrtOp, _evenSqrt_S_T_1) @[DivSqrtRecFN_small.scala 288:32]
    skip
    node oddSqrt_S = and(io_sqrtOp, _evenSqrt_S_T) @[DivSqrtRecFN_small.scala 289:32]
    node idle = bits(cycleNum, 0, 0) @[DivSqrtRecFN_small.scala 293:24]
    node _inReady_T = bits(cycleNum, 1, 1) @[DivSqrtRecFN_small.scala 294:35]
    node inReady = or(idle, _inReady_T) @[DivSqrtRecFN_small.scala 294:24]
    node entering = and(inReady, io_inValid) @[DivSqrtRecFN_small.scala 295:28]
    node entering_normalCase = and(entering, normalCase_S) @[DivSqrtRecFN_small.scala 296:40]
    node _skipCycle2_T = bits(cycleNum, 3, 3) @[DivSqrtRecFN_small.scala 298:30]
    node _skipCycle2_T_1 = bits(sigX_Z, 25, 25) @[DivSqrtRecFN_small.scala 298:43]
    node skipCycle2 = and(_skipCycle2_T, _skipCycle2_T_1) @[DivSqrtRecFN_small.scala 298:34]
    node _T = not(idle) @[DivSqrtRecFN_small.scala 300:11]
    node _T_1 = or(_T, entering) @[DivSqrtRecFN_small.scala 300:18]
    node _cycleNum_T = not(normalCase_S) @[DivSqrtRecFN_small.scala 302:28]
    node _cycleNum_T_1 = and(entering, _cycleNum_T) @[DivSqrtRecFN_small.scala 302:26]
    node _cycleNum_T_2 = mux(_cycleNum_T_1, UInt<2>("h2"), UInt<2>("h0")) @[DivSqrtRecFN_small.scala 302:16]
    skip
    node _cycleNum_T_4 = mux(_evenSqrt_S_T, UInt<26>("h1000000"), UInt<26>("h2000000")) @[DivSqrtRecFN_small.scala 305:24]
    node _cycleNum_T_5 = mux(io_sqrtOp, pad(_cycleNum_T_4, 27), UInt<27>("h4000000")) @[DivSqrtRecFN_small.scala 304:20]
    node _cycleNum_T_6 = mux(entering_normalCase, _cycleNum_T_5, UInt<27>("h0")) @[DivSqrtRecFN_small.scala 303:16]
    node _GEN_14 = pad(_cycleNum_T_2, 27) @[DivSqrtRecFN_small.scala 302:59]
    node _cycleNum_T_7 = or(_GEN_14, _cycleNum_T_6) @[DivSqrtRecFN_small.scala 302:59]
    node _cycleNum_T_8 = not(entering) @[DivSqrtRecFN_small.scala 310:17]
    node _cycleNum_T_9 = not(skipCycle2) @[DivSqrtRecFN_small.scala 310:31]
    node _cycleNum_T_10 = and(_cycleNum_T_8, _cycleNum_T_9) @[DivSqrtRecFN_small.scala 310:28]
    node _cycleNum_T_11 = shr(cycleNum, 1) @[DivSqrtRecFN_small.scala 310:53]
    node _cycleNum_T_12 = mux(_cycleNum_T_10, _cycleNum_T_11, UInt<26>("h0")) @[DivSqrtRecFN_small.scala 310:16]
    node _GEN_15 = pad(_cycleNum_T_12, 27) @[DivSqrtRecFN_small.scala 309:15]
    node _cycleNum_T_13 = or(_cycleNum_T_7, _GEN_15) @[DivSqrtRecFN_small.scala 309:15]
    node _cycleNum_T_14 = mux(skipCycle2, UInt<2>("h2"), UInt<2>("h0")) @[DivSqrtRecFN_small.scala 311:16]
    node _GEN_16 = pad(_cycleNum_T_14, 27) @[DivSqrtRecFN_small.scala 310:63]
    node _cycleNum_T_15 = or(_cycleNum_T_13, _GEN_16) @[DivSqrtRecFN_small.scala 310:63]
    node _GEN_0 = mux(_T_1, _cycleNum_T_15, cycleNum) @[DivSqrtRecFN_small.scala 300:31 301:18 223:33]
    skip
    skip
    skip
    skip
    skip
    skip
    node _sExp_Z_T = shr(io_a_sExp, 1) @[DivSqrtRecFN_small.scala 329:29]
    node _sExp_Z_T_1 = add(_sExp_Z_T, SInt<9>("h80")) @[DivSqrtRecFN_small.scala 329:34]
    node _sExp_Z_T_2 = mux(io_sqrtOp, _sExp_Z_T_1, sSatExpQuot_S_div) @[DivSqrtRecFN_small.scala 328:16]
    skip
    skip
    skip
    node _T_3 = and(entering_normalCase, _sign_S_T) @[DivSqrtRecFN_small.scala 334:31]
    node _fractB_Z_T = bits(io_b_sig, 22, 0) @[DivSqrtRecFN_small.scala 335:31]
    skip
    node _rem_T = not(oddSqrt_S) @[DivSqrtRecFN_small.scala 341:24]
    node _rem_T_1 = and(inReady, _rem_T) @[DivSqrtRecFN_small.scala 341:21]
    node _rem_T_2 = shl(io_a_sig, 1) @[DivSqrtRecFN_small.scala 341:47]
    node _rem_T_3 = mux(_rem_T_1, _rem_T_2, UInt<26>("h0")) @[DivSqrtRecFN_small.scala 341:12]
    node _rem_T_4 = and(inReady, oddSqrt_S) @[DivSqrtRecFN_small.scala 342:21]
    node _rem_T_5 = bits(io_a_sig, 23, 22) @[DivSqrtRecFN_small.scala 343:27]
    node _rem_T_6 = sub(_rem_T_5, UInt<2>("h1")) @[DivSqrtRecFN_small.scala 343:56]
    node rem_hi = tail(_rem_T_6, 1) @[DivSqrtRecFN_small.scala 343:56]
    node _rem_T_7 = bits(io_a_sig, 21, 0) @[DivSqrtRecFN_small.scala 344:27]
    node rem_lo = shl(_rem_T_7, 3) @[DivSqrtRecFN_small.scala 344:44]
    node _rem_T_8 = cat(rem_hi, rem_lo) @[Cat.scala 30:58]
    node _rem_T_9 = mux(_rem_T_4, _rem_T_8, UInt<27>("h0")) @[DivSqrtRecFN_small.scala 342:12]
    node _GEN_17 = pad(_rem_T_3, 27) @[DivSqrtRecFN_small.scala 341:57]
    node _rem_T_10 = or(_GEN_17, _rem_T_9) @[DivSqrtRecFN_small.scala 341:57]
    node _rem_T_11 = not(inReady) @[DivSqrtRecFN_small.scala 348:13]
    node _rem_T_12 = shl(rem_Z, 1) @[DivSqrtRecFN_small.scala 348:29]
    node _rem_T_13 = mux(_rem_T_11, _rem_T_12, UInt<27>("h0")) @[DivSqrtRecFN_small.scala 348:12]
    node rem = or(_rem_T_10, _rem_T_13) @[DivSqrtRecFN_small.scala 347:11]
    node bitMask = shr(cycleNum, 2) @[DivSqrtRecFN_small.scala 349:27]
    skip
    node _trialTerm_T_1 = and(inReady, _sign_S_T) @[DivSqrtRecFN_small.scala 351:21]
    node _trialTerm_T_2 = shl(io_b_sig, 1) @[DivSqrtRecFN_small.scala 351:47]
    node _trialTerm_T_3 = mux(_trialTerm_T_1, _trialTerm_T_2, UInt<26>("h0")) @[DivSqrtRecFN_small.scala 351:12]
    node _trialTerm_T_4 = and(inReady, evenSqrt_S) @[DivSqrtRecFN_small.scala 352:21]
    node _trialTerm_T_5 = mux(_trialTerm_T_4, UInt<25>("h1000000"), UInt<25>("h0")) @[DivSqrtRecFN_small.scala 352:12]
    node _GEN_18 = pad(_trialTerm_T_5, 26) @[DivSqrtRecFN_small.scala 351:73]
    node _trialTerm_T_6 = or(_trialTerm_T_3, _GEN_18) @[DivSqrtRecFN_small.scala 351:73]
    skip
    node _trialTerm_T_8 = mux(_rem_T_4, UInt<26>("h2800000"), UInt<26>("h0")) @[DivSqrtRecFN_small.scala 353:12]
    node _trialTerm_T_9 = or(_trialTerm_T_6, _trialTerm_T_8) @[DivSqrtRecFN_small.scala 352:73]
    skip
    node _trialTerm_T_11 = not(sqrtOp_Z) @[DivSqrtRecFN_small.scala 354:26]
    node _trialTerm_T_12 = and(_rem_T_11, _trialTerm_T_11) @[DivSqrtRecFN_small.scala 354:23]
    node _trialTerm_T_13 = cat(UInt<1>("h1"), fractB_Z) @[Cat.scala 30:58]
    node _trialTerm_T_14 = shl(_trialTerm_T_13, 1) @[DivSqrtRecFN_small.scala 354:56]
    node _trialTerm_T_15 = mux(_trialTerm_T_12, _trialTerm_T_14, UInt<25>("h0")) @[DivSqrtRecFN_small.scala 354:12]
    node _GEN_19 = pad(_trialTerm_T_15, 26) @[DivSqrtRecFN_small.scala 353:73]
    node _trialTerm_T_16 = or(_trialTerm_T_9, _GEN_19) @[DivSqrtRecFN_small.scala 353:73]
    skip
    node _trialTerm_T_18 = and(_rem_T_11, sqrtOp_Z) @[DivSqrtRecFN_small.scala 355:23]
    node _trialTerm_T_19 = shl(sigX_Z, 1) @[DivSqrtRecFN_small.scala 355:44]
    node _GEN_20 = pad(bitMask, 27) @[DivSqrtRecFN_small.scala 355:48]
    node _trialTerm_T_20 = or(_trialTerm_T_19, _GEN_20) @[DivSqrtRecFN_small.scala 355:48]
    node _trialTerm_T_21 = mux(_trialTerm_T_18, _trialTerm_T_20, UInt<27>("h0")) @[DivSqrtRecFN_small.scala 355:12]
    node _GEN_21 = pad(_trialTerm_T_16, 27) @[DivSqrtRecFN_small.scala 354:73]
    node trialTerm = or(_GEN_21, _trialTerm_T_21) @[DivSqrtRecFN_small.scala 354:73]
    node _trialRem_T = cvt(rem) @[DivSqrtRecFN_small.scala 356:24]
    node _trialRem_T_1 = cvt(trialTerm) @[DivSqrtRecFN_small.scala 356:41]
    node _trialRem_T_2 = sub(_trialRem_T, _trialRem_T_1) @[DivSqrtRecFN_small.scala 356:29]
    node _trialRem_T_3 = tail(_trialRem_T_2, 1) @[DivSqrtRecFN_small.scala 356:29]
    node trialRem = asSInt(_trialRem_T_3) @[DivSqrtRecFN_small.scala 356:29]
    node newBit = leq(SInt<28>("h0"), trialRem) @[DivSqrtRecFN_small.scala 357:23]
    node _T_4 = bits(cycleNum, 2, 2) @[DivSqrtRecFN_small.scala 359:52]
    node _T_5 = or(idle, _T_4) @[DivSqrtRecFN_small.scala 359:41]
    node _T_6 = not(_T_5) @[DivSqrtRecFN_small.scala 359:34]
    node _T_7 = or(entering_normalCase, _T_6) @[DivSqrtRecFN_small.scala 359:31]
    node _rem_Z_T = asUInt(trialRem) @[DivSqrtRecFN_small.scala 360:39]
    node _rem_Z_T_1 = mux(newBit, _rem_Z_T, pad(rem, 28)) @[DivSqrtRecFN_small.scala 360:21]
    node _GEN_10 = mux(_T_7, _rem_Z_T_1, pad(rem_Z, 28)) @[DivSqrtRecFN_small.scala 359:58 360:15 240:29]
    skip
    node _T_9 = and(_rem_T_11, newBit) @[DivSqrtRecFN_small.scala 362:45]
    node _T_10 = or(entering_normalCase, _T_9) @[DivSqrtRecFN_small.scala 362:31]
    node _notZeroRem_Z_T = neq(trialRem, SInt<28>("h0")) @[DivSqrtRecFN_small.scala 363:35]
    skip
    skip
    node _sigX_Z_T_2 = shl(newBit, 25) @[DivSqrtRecFN_small.scala 365:47]
    node _sigX_Z_T_3 = mux(_trialTerm_T_1, _sigX_Z_T_2, UInt<26>("h0")) @[DivSqrtRecFN_small.scala 365:16]
    node _sigX_Z_T_4 = and(inReady, io_sqrtOp) @[DivSqrtRecFN_small.scala 366:25]
    node _sigX_Z_T_5 = mux(_sigX_Z_T_4, UInt<25>("h1000000"), UInt<25>("h0")) @[DivSqrtRecFN_small.scala 366:16]
    node _GEN_22 = pad(_sigX_Z_T_5, 26) @[DivSqrtRecFN_small.scala 365:71]
    node _sigX_Z_T_6 = or(_sigX_Z_T_3, _GEN_22) @[DivSqrtRecFN_small.scala 365:71]
    skip
    node _sigX_Z_T_8 = shl(newBit, 23) @[DivSqrtRecFN_small.scala 367:47]
    node _sigX_Z_T_9 = mux(_rem_T_4, _sigX_Z_T_8, UInt<24>("h0")) @[DivSqrtRecFN_small.scala 367:16]
    node _GEN_23 = pad(_sigX_Z_T_9, 26) @[DivSqrtRecFN_small.scala 366:71]
    node _sigX_Z_T_10 = or(_sigX_Z_T_6, _GEN_23) @[DivSqrtRecFN_small.scala 366:71]
    skip
    node _GEN_24 = pad(bitMask, 26) @[DivSqrtRecFN_small.scala 368:48]
    node _sigX_Z_T_12 = or(sigX_Z, _GEN_24) @[DivSqrtRecFN_small.scala 368:48]
    node _sigX_Z_T_13 = mux(_rem_T_11, _sigX_Z_T_12, UInt<26>("h0")) @[DivSqrtRecFN_small.scala 368:16]
    node _sigX_Z_T_14 = or(_sigX_Z_T_10, _sigX_Z_T_13) @[DivSqrtRecFN_small.scala 367:71]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_infiniteExc_T = not(isNaN_Z) @[DivSqrtRecFN_small.scala 379:39]
    skip
    skip
    node _GEN_25 = pad(notZeroRem_Z, 27) @[DivSqrtRecFN_small.scala 385:35]
    skip
    io_inReady <= or(idle, _inReady_T) @[DivSqrtRecFN_small.scala 294:24]
    io_rawOutValid_div <= and(_inReady_T, _trialTerm_T_11) @[DivSqrtRecFN_small.scala 375:40]
    io_rawOutValid_sqrt <= and(_inReady_T, sqrtOp_Z) @[DivSqrtRecFN_small.scala 376:40]
    io_roundingModeOut <= roundingMode_Z @[DivSqrtRecFN_small.scala 377:25]
    io_invalidExc <= and(majorExc_Z, isNaN_Z) @[DivSqrtRecFN_small.scala 378:36]
    io_infiniteExc <= and(majorExc_Z, _io_infiniteExc_T) @[DivSqrtRecFN_small.scala 379:36]
    io_rawOut_isNaN <= isNaN_Z @[DivSqrtRecFN_small.scala 380:22]
    io_rawOut_isInf <= isInf_Z @[DivSqrtRecFN_small.scala 381:22]
    io_rawOut_isZero <= isZero_Z @[DivSqrtRecFN_small.scala 382:22]
    io_rawOut_sign <= sign_Z @[DivSqrtRecFN_small.scala 383:22]
    io_rawOut_sExp <= sExp_Z @[DivSqrtRecFN_small.scala 384:22]
    skip
    io_rawOut_sig <= or(_trialTerm_T_19, _GEN_25) @[DivSqrtRecFN_small.scala 385:35]
    cycleNum <= mux(reset, UInt<27>("h1"), _GEN_0) @[DivSqrtRecFN_small.scala 223:{33,33}]
    sqrtOp_Z <= mux(entering, io_sqrtOp, sqrtOp_Z) @[DivSqrtRecFN_small.scala 318:21 319:20 225:29]
    majorExc_Z <= mux(entering, majorExc_S, majorExc_Z) @[DivSqrtRecFN_small.scala 318:21 320:20 226:29]
    isNaN_Z <= mux(entering, isNaN_S, isNaN_Z) @[DivSqrtRecFN_small.scala 318:21 321:20 228:29]
    isInf_Z <= mux(entering, isInf_S, isInf_Z) @[DivSqrtRecFN_small.scala 318:21 322:20 229:29]
    isZero_Z <= mux(entering, isZero_S, isZero_Z) @[DivSqrtRecFN_small.scala 318:21 323:20 230:29]
    sign_Z <= mux(entering, sign_S, sign_Z) @[DivSqrtRecFN_small.scala 318:21 324:20 231:29]
    sExp_Z <= mux(entering_normalCase, _sExp_Z_T_2, sExp_Z) @[DivSqrtRecFN_small.scala 326:32 327:16 232:29]
    fractB_Z <= mux(_T_3, _fractB_Z_T, fractB_Z) @[DivSqrtRecFN_small.scala 334:47 335:18 233:29]
    roundingMode_Z <= mux(entering_normalCase, io_roundingMode, roundingMode_Z) @[DivSqrtRecFN_small.scala 326:32 332:24 234:29]
    rem_Z <= bits(_GEN_10, 25, 0)
    notZeroRem_Z <= mux(_T_10, _notZeroRem_Z_T, notZeroRem_Z) @[DivSqrtRecFN_small.scala 362:57 363:22 241:29]
    sigX_Z <= mux(_T_10, _sigX_Z_T_14, sigX_Z) @[DivSqrtRecFN_small.scala 362:57 364:16 242:29]

  module RoundAnyRawFNToRecFN_5 :
    input io_invalidExc : UInt<1>
    input io_infiniteExc : UInt<1>
    input io_in_isNaN : UInt<1>
    input io_in_isInf : UInt<1>
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<10>
    input io_in_sig : UInt<27>
    input io_roundingMode : UInt<3>
    output io_out : UInt<33>
    output io_exceptionFlags : UInt<5>

    node roundingMode_near_even = eq(io_roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    skip
    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io_roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io_roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io_roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = not(io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    skip
    node doShiftSigDown1 = bits(io_in_sig, 26, 26) @[RoundAnyRawFNToRecFN.scala 118:61]
    node _roundMask_T = bits(io_in_sExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(SInt<65>("h-10000000000000000"), roundMask_lsbs_2) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 42) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 15, 0) @[Bitwise.scala 109:18]
    skip
    skip
    node _roundMask_T_6 = shr(_roundMask_T_3, 8) @[Bitwise.scala 103:21]
    node _GEN_0 = pad(_roundMask_T_6, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_7 = and(_GEN_0, UInt<16>("hff")) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 8) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_11 = and(_roundMask_T_9, UInt<16>("hff00")) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_16 = shr(_roundMask_T_12, 4) @[Bitwise.scala 103:21]
    node _GEN_1 = pad(_roundMask_T_16, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_17 = and(_GEN_1, UInt<16>("hf0f")) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 4) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_21 = and(_roundMask_T_19, UInt<16>("hf0f0")) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_26 = shr(_roundMask_T_22, 2) @[Bitwise.scala 103:21]
    node _GEN_2 = pad(_roundMask_T_26, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_27 = and(_GEN_2, UInt<16>("h3333")) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 2) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_31 = and(_roundMask_T_29, UInt<16>("hcccc")) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_36 = shr(_roundMask_T_32, 1) @[Bitwise.scala 103:21]
    node _GEN_3 = pad(_roundMask_T_36, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_37 = and(_GEN_3, UInt<16>("h5555")) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 1) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_41 = and(_roundMask_T_39, UInt<16>("haaaa")) @[Bitwise.scala 103:75]
    node roundMask_hi = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    node _roundMask_T_42 = bits(_roundMask_T_2, 21, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_43 = bits(_roundMask_T_42, 3, 0) @[Bitwise.scala 109:18]
    node _roundMask_T_44 = bits(_roundMask_T_43, 1, 0) @[Bitwise.scala 109:18]
    node roundMask_hi_1 = bits(_roundMask_T_44, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo = bits(_roundMask_T_44, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_hi_2 = cat(roundMask_hi_1, roundMask_lo) @[Cat.scala 30:58]
    node _roundMask_T_45 = bits(_roundMask_T_43, 3, 2) @[Bitwise.scala 109:44]
    node roundMask_hi_3 = bits(_roundMask_T_45, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_1 = bits(_roundMask_T_45, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_lo_2 = cat(roundMask_hi_3, roundMask_lo_1) @[Cat.scala 30:58]
    node roundMask_hi_4 = cat(roundMask_hi_2, roundMask_lo_2) @[Cat.scala 30:58]
    node _roundMask_T_46 = bits(_roundMask_T_42, 5, 4) @[Bitwise.scala 109:44]
    node roundMask_hi_5 = bits(_roundMask_T_46, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_3 = bits(_roundMask_T_46, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_lo_4 = cat(roundMask_hi_5, roundMask_lo_3) @[Cat.scala 30:58]
    node roundMask_lo_5 = cat(roundMask_hi_4, roundMask_lo_4) @[Cat.scala 30:58]
    node _roundMask_T_47 = cat(roundMask_hi, roundMask_lo_5) @[Cat.scala 30:58]
    node _roundMask_T_48 = not(_roundMask_T_47) @[primitives.scala 74:36]
    node _roundMask_T_49 = mux(roundMask_msb_2, UInt<22>("h0"), _roundMask_T_48) @[primitives.scala 74:21]
    node roundMask_hi_6 = not(_roundMask_T_49) @[primitives.scala 74:17]
    node _roundMask_T_50 = cat(roundMask_hi_6, UInt<3>("h7")) @[Cat.scala 30:58]
    skip
    skip
    skip
    node _roundMask_T_51 = bits(roundMask_shift, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_52 = bits(_roundMask_T_51, 1, 0) @[Bitwise.scala 109:18]
    node roundMask_hi_7 = bits(_roundMask_T_52, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_6 = bits(_roundMask_T_52, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_hi_8 = cat(roundMask_hi_7, roundMask_lo_6) @[Cat.scala 30:58]
    node roundMask_lo_7 = bits(_roundMask_T_51, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_53 = cat(roundMask_hi_8, roundMask_lo_7) @[Cat.scala 30:58]
    node _roundMask_T_54 = mux(roundMask_msb_2, _roundMask_T_53, UInt<3>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_55 = mux(roundMask_msb_1, _roundMask_T_50, pad(_roundMask_T_54, 25)) @[primitives.scala 66:24]
    node _roundMask_T_56 = mux(roundMask_msb, _roundMask_T_55, UInt<25>("h0")) @[primitives.scala 61:24]
    node _GEN_4 = pad(doShiftSigDown1, 25) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask_hi_9 = or(_roundMask_T_56, _GEN_4) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(roundMask_hi_9, UInt<2>("h3")) @[Cat.scala 30:58]
    node shiftedRoundMask_lo = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), shiftedRoundMask_lo) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(io_in_sig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(io_in_sig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(io_in_sig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<25>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = not(anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    skip
    node _roundedSig_T_7 = mux(_roundedSig_T_5, shiftedRoundMask_lo, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(io_in_sig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<26>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _GEN_5 = pad(_roundedSig_T_12, 26) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _roundedSig_T_16 = or(_GEN_5, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 24) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _GEN_6 = pad(_sRoundedExp_T_1, 10) @[RoundAnyRawFNToRecFN.scala 183:40]
    node sRoundedExp = add(io_in_sExp, _GEN_6) @[RoundAnyRawFNToRecFN.scala 183:40]
    node common_expOut = bits(sRoundedExp, 8, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    node _common_fractOut_T = bits(roundedSig, 23, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 22, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node common_fractOut = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    node _common_overflow_T = shr(sRoundedExp, 7) @[RoundAnyRawFNToRecFN.scala 194:30]
    node common_overflow = geq(_common_overflow_T, SInt<4>("h3")) @[RoundAnyRawFNToRecFN.scala 194:50]
    node common_totalUnderflow = lt(sRoundedExp, SInt<11>("h6b")) @[RoundAnyRawFNToRecFN.scala 198:31]
    node _unboundedRange_roundPosBit_T = bits(io_in_sig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(io_in_sig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    skip
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(io_in_sig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    skip
    node _unboundedRange_roundIncr_T_1 = and(_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 25, 25) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 24, 24) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io_in_sExp, 8) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, SInt<2>("h0")) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    skip
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    skip
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_3) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = not(_common_underflow_T_10) @[RoundAnyRawFNToRecFN.scala 221:34]
    skip
    node _common_underflow_T_13 = and(_common_underflow_T_11, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = not(_common_underflow_T_15) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    skip
    node common_underflow = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    node common_inexact = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    node isNaNOut = or(io_invalidExc, io_in_isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io_infiniteExc, io_in_isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = not(isNaNOut) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = not(notNaN_isSpecialInfOut) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = not(io_in_isZero) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    skip
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    skip
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    skip
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    skip
    node overflow_roundMagUp = or(_roundIncr_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = not(overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io_in_sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io_in_isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<9>("h1c0"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    skip
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    skip
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, UInt<9>("h194"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<9>("h80"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<9>("h40"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<9>("h6b"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<9>("h17f"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<9>("h180"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<9>("h1c0"), UInt<9>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io_in_isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<23>("h400000"), UInt<23>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    skip
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    skip
    node _fractOut_T_5 = mux(pegMaxFiniteMagOut, UInt<23>("h7fffff"), UInt<23>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    skip
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io_invalidExc, io_infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    skip
    io_out <= cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io_exceptionFlags <= cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]

  module DivSqrtRawFN_small_1 :
    input clock : Clock
    input reset : UInt<1>
    output io_inReady : UInt<1>
    input io_inValid : UInt<1>
    input io_sqrtOp : UInt<1>
    input io_a_isNaN : UInt<1>
    input io_a_isInf : UInt<1>
    input io_a_isZero : UInt<1>
    input io_a_sign : UInt<1>
    input io_a_sExp : SInt<13>
    input io_a_sig : UInt<54>
    input io_b_isNaN : UInt<1>
    input io_b_isInf : UInt<1>
    input io_b_isZero : UInt<1>
    input io_b_sign : UInt<1>
    input io_b_sExp : SInt<13>
    input io_b_sig : UInt<54>
    input io_roundingMode : UInt<3>
    output io_rawOutValid_div : UInt<1>
    output io_rawOutValid_sqrt : UInt<1>
    output io_roundingModeOut : UInt<3>
    output io_invalidExc : UInt<1>
    output io_infiniteExc : UInt<1>
    output io_rawOut_isNaN : UInt<1>
    output io_rawOut_isInf : UInt<1>
    output io_rawOut_isZero : UInt<1>
    output io_rawOut_sign : UInt<1>
    output io_rawOut_sExp : SInt<13>
    output io_rawOut_sig : UInt<56>

    reg cycleNum : UInt<56>, clock with :
      reset => (UInt<1>("h0"), cycleNum) @[DivSqrtRecFN_small.scala 223:33]
    reg sqrtOp_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sqrtOp_Z) @[DivSqrtRecFN_small.scala 225:29]
    reg majorExc_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), majorExc_Z) @[DivSqrtRecFN_small.scala 226:29]
    reg isNaN_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isNaN_Z) @[DivSqrtRecFN_small.scala 228:29]
    reg isInf_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isInf_Z) @[DivSqrtRecFN_small.scala 229:29]
    reg isZero_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), isZero_Z) @[DivSqrtRecFN_small.scala 230:29]
    reg sign_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), sign_Z) @[DivSqrtRecFN_small.scala 231:29]
    reg sExp_Z : SInt<13>, clock with :
      reset => (UInt<1>("h0"), sExp_Z) @[DivSqrtRecFN_small.scala 232:29]
    reg fractB_Z : UInt<52>, clock with :
      reset => (UInt<1>("h0"), fractB_Z) @[DivSqrtRecFN_small.scala 233:29]
    reg roundingMode_Z : UInt<3>, clock with :
      reset => (UInt<1>("h0"), roundingMode_Z) @[DivSqrtRecFN_small.scala 234:29]
    reg rem_Z : UInt<55>, clock with :
      reset => (UInt<1>("h0"), rem_Z) @[DivSqrtRecFN_small.scala 240:29]
    reg notZeroRem_Z : UInt<1>, clock with :
      reset => (UInt<1>("h0"), notZeroRem_Z) @[DivSqrtRecFN_small.scala 241:29]
    reg sigX_Z : UInt<55>, clock with :
      reset => (UInt<1>("h0"), sigX_Z) @[DivSqrtRecFN_small.scala 242:29]
    node _notSigNaNIn_invalidExc_S_div_T = and(io_a_isZero, io_b_isZero) @[DivSqrtRecFN_small.scala 251:24]
    node _notSigNaNIn_invalidExc_S_div_T_1 = and(io_a_isInf, io_b_isInf) @[DivSqrtRecFN_small.scala 251:59]
    node notSigNaNIn_invalidExc_S_div = or(_notSigNaNIn_invalidExc_S_div_T, _notSigNaNIn_invalidExc_S_div_T_1) @[DivSqrtRecFN_small.scala 251:42]
    node _notSigNaNIn_invalidExc_S_sqrt_T = not(io_a_isNaN) @[DivSqrtRecFN_small.scala 253:9]
    node _notSigNaNIn_invalidExc_S_sqrt_T_1 = not(io_a_isZero) @[DivSqrtRecFN_small.scala 253:27]
    node _notSigNaNIn_invalidExc_S_sqrt_T_2 = and(_notSigNaNIn_invalidExc_S_sqrt_T, _notSigNaNIn_invalidExc_S_sqrt_T_1) @[DivSqrtRecFN_small.scala 253:24]
    node notSigNaNIn_invalidExc_S_sqrt = and(_notSigNaNIn_invalidExc_S_sqrt_T_2, io_a_sign) @[DivSqrtRecFN_small.scala 253:43]
    node _majorExc_S_T = bits(io_a_sig, 51, 51) @[common.scala 81:56]
    node _majorExc_S_T_1 = not(_majorExc_S_T) @[common.scala 81:49]
    node _majorExc_S_T_2 = and(io_a_isNaN, _majorExc_S_T_1) @[common.scala 81:46]
    node _majorExc_S_T_3 = or(_majorExc_S_T_2, notSigNaNIn_invalidExc_S_sqrt) @[DivSqrtRecFN_small.scala 256:38]
    skip
    skip
    skip
    node _majorExc_S_T_7 = bits(io_b_sig, 51, 51) @[common.scala 81:56]
    node _majorExc_S_T_8 = not(_majorExc_S_T_7) @[common.scala 81:49]
    node _majorExc_S_T_9 = and(io_b_isNaN, _majorExc_S_T_8) @[common.scala 81:46]
    node _majorExc_S_T_10 = or(_majorExc_S_T_2, _majorExc_S_T_9) @[DivSqrtRecFN_small.scala 257:38]
    node _majorExc_S_T_11 = or(_majorExc_S_T_10, notSigNaNIn_invalidExc_S_div) @[DivSqrtRecFN_small.scala 257:66]
    skip
    node _majorExc_S_T_13 = not(io_a_isInf) @[DivSqrtRecFN_small.scala 259:36]
    node _majorExc_S_T_14 = and(_notSigNaNIn_invalidExc_S_sqrt_T, _majorExc_S_T_13) @[DivSqrtRecFN_small.scala 259:33]
    node _majorExc_S_T_15 = and(_majorExc_S_T_14, io_b_isZero) @[DivSqrtRecFN_small.scala 259:51]
    node _majorExc_S_T_16 = or(_majorExc_S_T_11, _majorExc_S_T_15) @[DivSqrtRecFN_small.scala 258:46]
    node majorExc_S = mux(io_sqrtOp, _majorExc_S_T_3, _majorExc_S_T_16) @[DivSqrtRecFN_small.scala 255:12]
    node _isNaN_S_T = or(io_a_isNaN, notSigNaNIn_invalidExc_S_sqrt) @[DivSqrtRecFN_small.scala 263:26]
    node _isNaN_S_T_1 = or(io_a_isNaN, io_b_isNaN) @[DivSqrtRecFN_small.scala 264:26]
    node _isNaN_S_T_2 = or(_isNaN_S_T_1, notSigNaNIn_invalidExc_S_div) @[DivSqrtRecFN_small.scala 264:42]
    node isNaN_S = mux(io_sqrtOp, _isNaN_S_T, _isNaN_S_T_2) @[DivSqrtRecFN_small.scala 262:12]
    node _isInf_S_T = or(io_a_isInf, io_b_isZero) @[DivSqrtRecFN_small.scala 266:63]
    node isInf_S = mux(io_sqrtOp, io_a_isInf, _isInf_S_T) @[DivSqrtRecFN_small.scala 266:23]
    node _isZero_S_T = or(io_a_isZero, io_b_isInf) @[DivSqrtRecFN_small.scala 267:64]
    node isZero_S = mux(io_sqrtOp, io_a_isZero, _isZero_S_T) @[DivSqrtRecFN_small.scala 267:23]
    node _sign_S_T = not(io_sqrtOp) @[DivSqrtRecFN_small.scala 268:33]
    node _sign_S_T_1 = and(_sign_S_T, io_b_sign) @[DivSqrtRecFN_small.scala 268:45]
    node sign_S = xor(io_a_sign, _sign_S_T_1) @[DivSqrtRecFN_small.scala 268:30]
    node _specialCaseA_S_T = or(io_a_isNaN, io_a_isInf) @[DivSqrtRecFN_small.scala 270:39]
    node specialCaseA_S = or(_specialCaseA_S_T, io_a_isZero) @[DivSqrtRecFN_small.scala 270:55]
    node _specialCaseB_S_T = or(io_b_isNaN, io_b_isInf) @[DivSqrtRecFN_small.scala 271:39]
    node specialCaseB_S = or(_specialCaseB_S_T, io_b_isZero) @[DivSqrtRecFN_small.scala 271:55]
    node _normalCase_S_div_T = not(specialCaseA_S) @[DivSqrtRecFN_small.scala 272:28]
    node _normalCase_S_div_T_1 = not(specialCaseB_S) @[DivSqrtRecFN_small.scala 272:48]
    node normalCase_S_div = and(_normalCase_S_div_T, _normalCase_S_div_T_1) @[DivSqrtRecFN_small.scala 272:45]
    skip
    node _normalCase_S_sqrt_T_1 = not(io_a_sign) @[DivSqrtRecFN_small.scala 273:49]
    node normalCase_S_sqrt = and(_normalCase_S_div_T, _normalCase_S_sqrt_T_1) @[DivSqrtRecFN_small.scala 273:46]
    node normalCase_S = mux(io_sqrtOp, normalCase_S_sqrt, normalCase_S_div) @[DivSqrtRecFN_small.scala 274:27]
    node sExpQuot_S_div_hi = bits(io_b_sExp, 11, 11) @[DivSqrtRecFN_small.scala 278:28]
    node _sExpQuot_S_div_T = bits(io_b_sExp, 10, 0) @[DivSqrtRecFN_small.scala 278:52]
    node sExpQuot_S_div_lo = not(_sExpQuot_S_div_T) @[DivSqrtRecFN_small.scala 278:40]
    node _sExpQuot_S_div_T_1 = cat(sExpQuot_S_div_hi, sExpQuot_S_div_lo) @[Cat.scala 30:58]
    node _sExpQuot_S_div_T_2 = asSInt(_sExpQuot_S_div_T_1) @[DivSqrtRecFN_small.scala 278:71]
    node _GEN_13 = pad(_sExpQuot_S_div_T_2, 13) @[DivSqrtRecFN_small.scala 277:21]
    node sExpQuot_S_div = add(io_a_sExp, _GEN_13) @[DivSqrtRecFN_small.scala 277:21]
    node _sSatExpQuot_S_div_T = leq(SInt<14>("he00"), sExpQuot_S_div) @[DivSqrtRecFN_small.scala 281:48]
    node _sSatExpQuot_S_div_T_1 = bits(sExpQuot_S_div, 12, 9) @[DivSqrtRecFN_small.scala 283:31]
    node sSatExpQuot_S_div_hi = mux(_sSatExpQuot_S_div_T, UInt<4>("h6"), _sSatExpQuot_S_div_T_1) @[DivSqrtRecFN_small.scala 281:16]
    node sSatExpQuot_S_div_lo = bits(sExpQuot_S_div, 8, 0) @[DivSqrtRecFN_small.scala 285:27]
    node _sSatExpQuot_S_div_T_2 = cat(sSatExpQuot_S_div_hi, sSatExpQuot_S_div_lo) @[Cat.scala 30:58]
    node sSatExpQuot_S_div = asSInt(_sSatExpQuot_S_div_T_2) @[DivSqrtRecFN_small.scala 286:11]
    node _evenSqrt_S_T = bits(io_a_sExp, 0, 0) @[DivSqrtRecFN_small.scala 288:48]
    node _evenSqrt_S_T_1 = not(_evenSqrt_S_T) @[DivSqrtRecFN_small.scala 288:35]
    node evenSqrt_S = and(io_sqrtOp, _evenSqrt_S_T_1) @[DivSqrtRecFN_small.scala 288:32]
    skip
    node oddSqrt_S = and(io_sqrtOp, _evenSqrt_S_T) @[DivSqrtRecFN_small.scala 289:32]
    node idle = bits(cycleNum, 0, 0) @[DivSqrtRecFN_small.scala 293:24]
    node _inReady_T = bits(cycleNum, 1, 1) @[DivSqrtRecFN_small.scala 294:35]
    node inReady = or(idle, _inReady_T) @[DivSqrtRecFN_small.scala 294:24]
    node entering = and(inReady, io_inValid) @[DivSqrtRecFN_small.scala 295:28]
    node entering_normalCase = and(entering, normalCase_S) @[DivSqrtRecFN_small.scala 296:40]
    node _skipCycle2_T = bits(cycleNum, 3, 3) @[DivSqrtRecFN_small.scala 298:30]
    node _skipCycle2_T_1 = bits(sigX_Z, 54, 54) @[DivSqrtRecFN_small.scala 298:43]
    node skipCycle2 = and(_skipCycle2_T, _skipCycle2_T_1) @[DivSqrtRecFN_small.scala 298:34]
    node _T = not(idle) @[DivSqrtRecFN_small.scala 300:11]
    node _T_1 = or(_T, entering) @[DivSqrtRecFN_small.scala 300:18]
    node _cycleNum_T = not(normalCase_S) @[DivSqrtRecFN_small.scala 302:28]
    node _cycleNum_T_1 = and(entering, _cycleNum_T) @[DivSqrtRecFN_small.scala 302:26]
    node _cycleNum_T_2 = mux(_cycleNum_T_1, UInt<2>("h2"), UInt<2>("h0")) @[DivSqrtRecFN_small.scala 302:16]
    skip
    node _cycleNum_T_4 = mux(_evenSqrt_S_T, UInt<55>("h20000000000000"), UInt<55>("h40000000000000")) @[DivSqrtRecFN_small.scala 305:24]
    node _cycleNum_T_5 = mux(io_sqrtOp, pad(_cycleNum_T_4, 56), UInt<56>("h80000000000000")) @[DivSqrtRecFN_small.scala 304:20]
    node _cycleNum_T_6 = mux(entering_normalCase, _cycleNum_T_5, UInt<56>("h0")) @[DivSqrtRecFN_small.scala 303:16]
    node _GEN_14 = pad(_cycleNum_T_2, 56) @[DivSqrtRecFN_small.scala 302:59]
    node _cycleNum_T_7 = or(_GEN_14, _cycleNum_T_6) @[DivSqrtRecFN_small.scala 302:59]
    node _cycleNum_T_8 = not(entering) @[DivSqrtRecFN_small.scala 310:17]
    node _cycleNum_T_9 = not(skipCycle2) @[DivSqrtRecFN_small.scala 310:31]
    node _cycleNum_T_10 = and(_cycleNum_T_8, _cycleNum_T_9) @[DivSqrtRecFN_small.scala 310:28]
    node _cycleNum_T_11 = shr(cycleNum, 1) @[DivSqrtRecFN_small.scala 310:53]
    node _cycleNum_T_12 = mux(_cycleNum_T_10, _cycleNum_T_11, UInt<55>("h0")) @[DivSqrtRecFN_small.scala 310:16]
    node _GEN_15 = pad(_cycleNum_T_12, 56) @[DivSqrtRecFN_small.scala 309:15]
    node _cycleNum_T_13 = or(_cycleNum_T_7, _GEN_15) @[DivSqrtRecFN_small.scala 309:15]
    node _cycleNum_T_14 = mux(skipCycle2, UInt<2>("h2"), UInt<2>("h0")) @[DivSqrtRecFN_small.scala 311:16]
    node _GEN_16 = pad(_cycleNum_T_14, 56) @[DivSqrtRecFN_small.scala 310:63]
    node _cycleNum_T_15 = or(_cycleNum_T_13, _GEN_16) @[DivSqrtRecFN_small.scala 310:63]
    node _GEN_0 = mux(_T_1, _cycleNum_T_15, cycleNum) @[DivSqrtRecFN_small.scala 300:31 301:18 223:33]
    skip
    skip
    skip
    skip
    skip
    skip
    node _sExp_Z_T = shr(io_a_sExp, 1) @[DivSqrtRecFN_small.scala 329:29]
    node _sExp_Z_T_1 = add(_sExp_Z_T, SInt<12>("h400")) @[DivSqrtRecFN_small.scala 329:34]
    node _sExp_Z_T_2 = mux(io_sqrtOp, _sExp_Z_T_1, sSatExpQuot_S_div) @[DivSqrtRecFN_small.scala 328:16]
    skip
    skip
    skip
    node _T_3 = and(entering_normalCase, _sign_S_T) @[DivSqrtRecFN_small.scala 334:31]
    node _fractB_Z_T = bits(io_b_sig, 51, 0) @[DivSqrtRecFN_small.scala 335:31]
    skip
    node _rem_T = not(oddSqrt_S) @[DivSqrtRecFN_small.scala 341:24]
    node _rem_T_1 = and(inReady, _rem_T) @[DivSqrtRecFN_small.scala 341:21]
    node _rem_T_2 = shl(io_a_sig, 1) @[DivSqrtRecFN_small.scala 341:47]
    node _rem_T_3 = mux(_rem_T_1, _rem_T_2, UInt<55>("h0")) @[DivSqrtRecFN_small.scala 341:12]
    node _rem_T_4 = and(inReady, oddSqrt_S) @[DivSqrtRecFN_small.scala 342:21]
    node _rem_T_5 = bits(io_a_sig, 52, 51) @[DivSqrtRecFN_small.scala 343:27]
    node _rem_T_6 = sub(_rem_T_5, UInt<2>("h1")) @[DivSqrtRecFN_small.scala 343:56]
    node rem_hi = tail(_rem_T_6, 1) @[DivSqrtRecFN_small.scala 343:56]
    node _rem_T_7 = bits(io_a_sig, 50, 0) @[DivSqrtRecFN_small.scala 344:27]
    node rem_lo = shl(_rem_T_7, 3) @[DivSqrtRecFN_small.scala 344:44]
    node _rem_T_8 = cat(rem_hi, rem_lo) @[Cat.scala 30:58]
    node _rem_T_9 = mux(_rem_T_4, _rem_T_8, UInt<56>("h0")) @[DivSqrtRecFN_small.scala 342:12]
    node _GEN_17 = pad(_rem_T_3, 56) @[DivSqrtRecFN_small.scala 341:57]
    node _rem_T_10 = or(_GEN_17, _rem_T_9) @[DivSqrtRecFN_small.scala 341:57]
    node _rem_T_11 = not(inReady) @[DivSqrtRecFN_small.scala 348:13]
    node _rem_T_12 = shl(rem_Z, 1) @[DivSqrtRecFN_small.scala 348:29]
    node _rem_T_13 = mux(_rem_T_11, _rem_T_12, UInt<56>("h0")) @[DivSqrtRecFN_small.scala 348:12]
    node rem = or(_rem_T_10, _rem_T_13) @[DivSqrtRecFN_small.scala 347:11]
    node bitMask = shr(cycleNum, 2) @[DivSqrtRecFN_small.scala 349:27]
    skip
    node _trialTerm_T_1 = and(inReady, _sign_S_T) @[DivSqrtRecFN_small.scala 351:21]
    node _trialTerm_T_2 = shl(io_b_sig, 1) @[DivSqrtRecFN_small.scala 351:47]
    node _trialTerm_T_3 = mux(_trialTerm_T_1, _trialTerm_T_2, UInt<55>("h0")) @[DivSqrtRecFN_small.scala 351:12]
    node _trialTerm_T_4 = and(inReady, evenSqrt_S) @[DivSqrtRecFN_small.scala 352:21]
    node _trialTerm_T_5 = mux(_trialTerm_T_4, UInt<54>("h20000000000000"), UInt<54>("h0")) @[DivSqrtRecFN_small.scala 352:12]
    node _GEN_18 = pad(_trialTerm_T_5, 55) @[DivSqrtRecFN_small.scala 351:73]
    node _trialTerm_T_6 = or(_trialTerm_T_3, _GEN_18) @[DivSqrtRecFN_small.scala 351:73]
    skip
    node _trialTerm_T_8 = mux(_rem_T_4, UInt<55>("h50000000000000"), UInt<55>("h0")) @[DivSqrtRecFN_small.scala 353:12]
    node _trialTerm_T_9 = or(_trialTerm_T_6, _trialTerm_T_8) @[DivSqrtRecFN_small.scala 352:73]
    skip
    node _trialTerm_T_11 = not(sqrtOp_Z) @[DivSqrtRecFN_small.scala 354:26]
    node _trialTerm_T_12 = and(_rem_T_11, _trialTerm_T_11) @[DivSqrtRecFN_small.scala 354:23]
    node _trialTerm_T_13 = cat(UInt<1>("h1"), fractB_Z) @[Cat.scala 30:58]
    node _trialTerm_T_14 = shl(_trialTerm_T_13, 1) @[DivSqrtRecFN_small.scala 354:56]
    node _trialTerm_T_15 = mux(_trialTerm_T_12, _trialTerm_T_14, UInt<54>("h0")) @[DivSqrtRecFN_small.scala 354:12]
    node _GEN_19 = pad(_trialTerm_T_15, 55) @[DivSqrtRecFN_small.scala 353:73]
    node _trialTerm_T_16 = or(_trialTerm_T_9, _GEN_19) @[DivSqrtRecFN_small.scala 353:73]
    skip
    node _trialTerm_T_18 = and(_rem_T_11, sqrtOp_Z) @[DivSqrtRecFN_small.scala 355:23]
    node _trialTerm_T_19 = shl(sigX_Z, 1) @[DivSqrtRecFN_small.scala 355:44]
    node _GEN_20 = pad(bitMask, 56) @[DivSqrtRecFN_small.scala 355:48]
    node _trialTerm_T_20 = or(_trialTerm_T_19, _GEN_20) @[DivSqrtRecFN_small.scala 355:48]
    node _trialTerm_T_21 = mux(_trialTerm_T_18, _trialTerm_T_20, UInt<56>("h0")) @[DivSqrtRecFN_small.scala 355:12]
    node _GEN_21 = pad(_trialTerm_T_16, 56) @[DivSqrtRecFN_small.scala 354:73]
    node trialTerm = or(_GEN_21, _trialTerm_T_21) @[DivSqrtRecFN_small.scala 354:73]
    node _trialRem_T = cvt(rem) @[DivSqrtRecFN_small.scala 356:24]
    node _trialRem_T_1 = cvt(trialTerm) @[DivSqrtRecFN_small.scala 356:41]
    node _trialRem_T_2 = sub(_trialRem_T, _trialRem_T_1) @[DivSqrtRecFN_small.scala 356:29]
    node _trialRem_T_3 = tail(_trialRem_T_2, 1) @[DivSqrtRecFN_small.scala 356:29]
    node trialRem = asSInt(_trialRem_T_3) @[DivSqrtRecFN_small.scala 356:29]
    node newBit = leq(SInt<57>("h0"), trialRem) @[DivSqrtRecFN_small.scala 357:23]
    node _T_4 = bits(cycleNum, 2, 2) @[DivSqrtRecFN_small.scala 359:52]
    node _T_5 = or(idle, _T_4) @[DivSqrtRecFN_small.scala 359:41]
    node _T_6 = not(_T_5) @[DivSqrtRecFN_small.scala 359:34]
    node _T_7 = or(entering_normalCase, _T_6) @[DivSqrtRecFN_small.scala 359:31]
    node _rem_Z_T = asUInt(trialRem) @[DivSqrtRecFN_small.scala 360:39]
    node _rem_Z_T_1 = mux(newBit, _rem_Z_T, pad(rem, 57)) @[DivSqrtRecFN_small.scala 360:21]
    node _GEN_10 = mux(_T_7, _rem_Z_T_1, pad(rem_Z, 57)) @[DivSqrtRecFN_small.scala 359:58 360:15 240:29]
    skip
    node _T_9 = and(_rem_T_11, newBit) @[DivSqrtRecFN_small.scala 362:45]
    node _T_10 = or(entering_normalCase, _T_9) @[DivSqrtRecFN_small.scala 362:31]
    node _notZeroRem_Z_T = neq(trialRem, SInt<57>("h0")) @[DivSqrtRecFN_small.scala 363:35]
    skip
    skip
    node _sigX_Z_T_2 = shl(newBit, 54) @[DivSqrtRecFN_small.scala 365:47]
    node _sigX_Z_T_3 = mux(_trialTerm_T_1, _sigX_Z_T_2, UInt<55>("h0")) @[DivSqrtRecFN_small.scala 365:16]
    node _sigX_Z_T_4 = and(inReady, io_sqrtOp) @[DivSqrtRecFN_small.scala 366:25]
    node _sigX_Z_T_5 = mux(_sigX_Z_T_4, UInt<54>("h20000000000000"), UInt<54>("h0")) @[DivSqrtRecFN_small.scala 366:16]
    node _GEN_22 = pad(_sigX_Z_T_5, 55) @[DivSqrtRecFN_small.scala 365:71]
    node _sigX_Z_T_6 = or(_sigX_Z_T_3, _GEN_22) @[DivSqrtRecFN_small.scala 365:71]
    skip
    node _sigX_Z_T_8 = shl(newBit, 52) @[DivSqrtRecFN_small.scala 367:47]
    node _sigX_Z_T_9 = mux(_rem_T_4, _sigX_Z_T_8, UInt<53>("h0")) @[DivSqrtRecFN_small.scala 367:16]
    node _GEN_23 = pad(_sigX_Z_T_9, 55) @[DivSqrtRecFN_small.scala 366:71]
    node _sigX_Z_T_10 = or(_sigX_Z_T_6, _GEN_23) @[DivSqrtRecFN_small.scala 366:71]
    skip
    node _GEN_24 = pad(bitMask, 55) @[DivSqrtRecFN_small.scala 368:48]
    node _sigX_Z_T_12 = or(sigX_Z, _GEN_24) @[DivSqrtRecFN_small.scala 368:48]
    node _sigX_Z_T_13 = mux(_rem_T_11, _sigX_Z_T_12, UInt<55>("h0")) @[DivSqrtRecFN_small.scala 368:16]
    node _sigX_Z_T_14 = or(_sigX_Z_T_10, _sigX_Z_T_13) @[DivSqrtRecFN_small.scala 367:71]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _io_infiniteExc_T = not(isNaN_Z) @[DivSqrtRecFN_small.scala 379:39]
    skip
    skip
    node _GEN_25 = pad(notZeroRem_Z, 56) @[DivSqrtRecFN_small.scala 385:35]
    skip
    io_inReady <= or(idle, _inReady_T) @[DivSqrtRecFN_small.scala 294:24]
    io_rawOutValid_div <= and(_inReady_T, _trialTerm_T_11) @[DivSqrtRecFN_small.scala 375:40]
    io_rawOutValid_sqrt <= and(_inReady_T, sqrtOp_Z) @[DivSqrtRecFN_small.scala 376:40]
    io_roundingModeOut <= roundingMode_Z @[DivSqrtRecFN_small.scala 377:25]
    io_invalidExc <= and(majorExc_Z, isNaN_Z) @[DivSqrtRecFN_small.scala 378:36]
    io_infiniteExc <= and(majorExc_Z, _io_infiniteExc_T) @[DivSqrtRecFN_small.scala 379:36]
    io_rawOut_isNaN <= isNaN_Z @[DivSqrtRecFN_small.scala 380:22]
    io_rawOut_isInf <= isInf_Z @[DivSqrtRecFN_small.scala 381:22]
    io_rawOut_isZero <= isZero_Z @[DivSqrtRecFN_small.scala 382:22]
    io_rawOut_sign <= sign_Z @[DivSqrtRecFN_small.scala 383:22]
    io_rawOut_sExp <= sExp_Z @[DivSqrtRecFN_small.scala 384:22]
    skip
    io_rawOut_sig <= or(_trialTerm_T_19, _GEN_25) @[DivSqrtRecFN_small.scala 385:35]
    cycleNum <= mux(reset, UInt<56>("h1"), _GEN_0) @[DivSqrtRecFN_small.scala 223:{33,33}]
    sqrtOp_Z <= mux(entering, io_sqrtOp, sqrtOp_Z) @[DivSqrtRecFN_small.scala 318:21 319:20 225:29]
    majorExc_Z <= mux(entering, majorExc_S, majorExc_Z) @[DivSqrtRecFN_small.scala 318:21 320:20 226:29]
    isNaN_Z <= mux(entering, isNaN_S, isNaN_Z) @[DivSqrtRecFN_small.scala 318:21 321:20 228:29]
    isInf_Z <= mux(entering, isInf_S, isInf_Z) @[DivSqrtRecFN_small.scala 318:21 322:20 229:29]
    isZero_Z <= mux(entering, isZero_S, isZero_Z) @[DivSqrtRecFN_small.scala 318:21 323:20 230:29]
    sign_Z <= mux(entering, sign_S, sign_Z) @[DivSqrtRecFN_small.scala 318:21 324:20 231:29]
    sExp_Z <= mux(entering_normalCase, _sExp_Z_T_2, sExp_Z) @[DivSqrtRecFN_small.scala 326:32 327:16 232:29]
    fractB_Z <= mux(_T_3, _fractB_Z_T, fractB_Z) @[DivSqrtRecFN_small.scala 334:47 335:18 233:29]
    roundingMode_Z <= mux(entering_normalCase, io_roundingMode, roundingMode_Z) @[DivSqrtRecFN_small.scala 326:32 332:24 234:29]
    rem_Z <= bits(_GEN_10, 54, 0)
    notZeroRem_Z <= mux(_T_10, _notZeroRem_Z_T, notZeroRem_Z) @[DivSqrtRecFN_small.scala 362:57 363:22 241:29]
    sigX_Z <= mux(_T_10, _sigX_Z_T_14, sigX_Z) @[DivSqrtRecFN_small.scala 362:57 364:16 242:29]

  module RoundAnyRawFNToRecFN_6 :
    input io_invalidExc : UInt<1>
    input io_infiniteExc : UInt<1>
    input io_in_isNaN : UInt<1>
    input io_in_isInf : UInt<1>
    input io_in_isZero : UInt<1>
    input io_in_sign : UInt<1>
    input io_in_sExp : SInt<13>
    input io_in_sig : UInt<56>
    input io_roundingMode : UInt<3>
    output io_out : UInt<65>
    output io_exceptionFlags : UInt<5>

    node roundingMode_near_even = eq(io_roundingMode, UInt<3>("h0")) @[RoundAnyRawFNToRecFN.scala 88:53]
    skip
    node roundingMode_min = eq(io_roundingMode, UInt<3>("h2")) @[RoundAnyRawFNToRecFN.scala 90:53]
    node roundingMode_max = eq(io_roundingMode, UInt<3>("h3")) @[RoundAnyRawFNToRecFN.scala 91:53]
    node roundingMode_near_maxMag = eq(io_roundingMode, UInt<3>("h4")) @[RoundAnyRawFNToRecFN.scala 92:53]
    node roundingMode_odd = eq(io_roundingMode, UInt<3>("h6")) @[RoundAnyRawFNToRecFN.scala 93:53]
    node _roundMagUp_T = and(roundingMode_min, io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:27]
    node _roundMagUp_T_1 = not(io_in_sign) @[RoundAnyRawFNToRecFN.scala 96:66]
    node _roundMagUp_T_2 = and(roundingMode_max, _roundMagUp_T_1) @[RoundAnyRawFNToRecFN.scala 96:63]
    node roundMagUp = or(_roundMagUp_T, _roundMagUp_T_2) @[RoundAnyRawFNToRecFN.scala 96:42]
    skip
    node doShiftSigDown1 = bits(io_in_sig, 55, 55) @[RoundAnyRawFNToRecFN.scala 118:61]
    node _roundMask_T = bits(io_in_sExp, 11, 0) @[RoundAnyRawFNToRecFN.scala 154:37]
    node _roundMask_T_1 = not(_roundMask_T) @[primitives.scala 51:21]
    node roundMask_msb = bits(_roundMask_T_1, 11, 11) @[primitives.scala 57:25]
    node roundMask_lsbs = bits(_roundMask_T_1, 10, 0) @[primitives.scala 58:26]
    node roundMask_msb_1 = bits(roundMask_lsbs, 10, 10) @[primitives.scala 57:25]
    node roundMask_lsbs_1 = bits(roundMask_lsbs, 9, 0) @[primitives.scala 58:26]
    node roundMask_msb_2 = bits(roundMask_lsbs_1, 9, 9) @[primitives.scala 57:25]
    node roundMask_lsbs_2 = bits(roundMask_lsbs_1, 8, 0) @[primitives.scala 58:26]
    node roundMask_msb_3 = bits(roundMask_lsbs_2, 8, 8) @[primitives.scala 57:25]
    node roundMask_lsbs_3 = bits(roundMask_lsbs_2, 7, 0) @[primitives.scala 58:26]
    node roundMask_msb_4 = bits(roundMask_lsbs_3, 7, 7) @[primitives.scala 57:25]
    node roundMask_lsbs_4 = bits(roundMask_lsbs_3, 6, 0) @[primitives.scala 58:26]
    node roundMask_msb_5 = bits(roundMask_lsbs_4, 6, 6) @[primitives.scala 57:25]
    node roundMask_lsbs_5 = bits(roundMask_lsbs_4, 5, 0) @[primitives.scala 58:26]
    node roundMask_shift = dshr(SInt<65>("h-10000000000000000"), roundMask_lsbs_5) @[primitives.scala 77:58]
    node _roundMask_T_2 = bits(roundMask_shift, 63, 13) @[primitives.scala 79:22]
    node _roundMask_T_3 = bits(_roundMask_T_2, 31, 0) @[Bitwise.scala 109:18]
    skip
    skip
    node _roundMask_T_6 = shr(_roundMask_T_3, 16) @[Bitwise.scala 103:21]
    node _GEN_0 = pad(_roundMask_T_6, 32) @[Bitwise.scala 103:31]
    node _roundMask_T_7 = and(_GEN_0, UInt<32>("hffff")) @[Bitwise.scala 103:31]
    node _roundMask_T_8 = bits(_roundMask_T_3, 15, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_9 = shl(_roundMask_T_8, 16) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_11 = and(_roundMask_T_9, UInt<32>("hffff0000")) @[Bitwise.scala 103:75]
    node _roundMask_T_12 = or(_roundMask_T_7, _roundMask_T_11) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_16 = shr(_roundMask_T_12, 8) @[Bitwise.scala 103:21]
    node _GEN_1 = pad(_roundMask_T_16, 32) @[Bitwise.scala 103:31]
    node _roundMask_T_17 = and(_GEN_1, UInt<32>("hff00ff")) @[Bitwise.scala 103:31]
    node _roundMask_T_18 = bits(_roundMask_T_12, 23, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_19 = shl(_roundMask_T_18, 8) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_21 = and(_roundMask_T_19, UInt<32>("hff00ff00")) @[Bitwise.scala 103:75]
    node _roundMask_T_22 = or(_roundMask_T_17, _roundMask_T_21) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_26 = shr(_roundMask_T_22, 4) @[Bitwise.scala 103:21]
    node _GEN_2 = pad(_roundMask_T_26, 32) @[Bitwise.scala 103:31]
    node _roundMask_T_27 = and(_GEN_2, UInt<32>("hf0f0f0f")) @[Bitwise.scala 103:31]
    node _roundMask_T_28 = bits(_roundMask_T_22, 27, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_29 = shl(_roundMask_T_28, 4) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_31 = and(_roundMask_T_29, UInt<32>("hf0f0f0f0")) @[Bitwise.scala 103:75]
    node _roundMask_T_32 = or(_roundMask_T_27, _roundMask_T_31) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_36 = shr(_roundMask_T_32, 2) @[Bitwise.scala 103:21]
    node _GEN_3 = pad(_roundMask_T_36, 32) @[Bitwise.scala 103:31]
    node _roundMask_T_37 = and(_GEN_3, UInt<32>("h33333333")) @[Bitwise.scala 103:31]
    node _roundMask_T_38 = bits(_roundMask_T_32, 29, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_39 = shl(_roundMask_T_38, 2) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_41 = and(_roundMask_T_39, UInt<32>("hcccccccc")) @[Bitwise.scala 103:75]
    node _roundMask_T_42 = or(_roundMask_T_37, _roundMask_T_41) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_46 = shr(_roundMask_T_42, 1) @[Bitwise.scala 103:21]
    node _GEN_4 = pad(_roundMask_T_46, 32) @[Bitwise.scala 103:31]
    node _roundMask_T_47 = and(_GEN_4, UInt<32>("h55555555")) @[Bitwise.scala 103:31]
    node _roundMask_T_48 = bits(_roundMask_T_42, 30, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_49 = shl(_roundMask_T_48, 1) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_51 = and(_roundMask_T_49, UInt<32>("haaaaaaaa")) @[Bitwise.scala 103:75]
    node roundMask_hi = or(_roundMask_T_47, _roundMask_T_51) @[Bitwise.scala 103:39]
    node _roundMask_T_52 = bits(_roundMask_T_2, 50, 32) @[Bitwise.scala 109:44]
    node _roundMask_T_53 = bits(_roundMask_T_52, 15, 0) @[Bitwise.scala 109:18]
    skip
    skip
    node _roundMask_T_56 = shr(_roundMask_T_53, 8) @[Bitwise.scala 103:21]
    node _GEN_5 = pad(_roundMask_T_56, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_57 = and(_GEN_5, UInt<16>("hff")) @[Bitwise.scala 103:31]
    node _roundMask_T_58 = bits(_roundMask_T_53, 7, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_59 = shl(_roundMask_T_58, 8) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_61 = and(_roundMask_T_59, UInt<16>("hff00")) @[Bitwise.scala 103:75]
    node _roundMask_T_62 = or(_roundMask_T_57, _roundMask_T_61) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_66 = shr(_roundMask_T_62, 4) @[Bitwise.scala 103:21]
    node _GEN_6 = pad(_roundMask_T_66, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_67 = and(_GEN_6, UInt<16>("hf0f")) @[Bitwise.scala 103:31]
    node _roundMask_T_68 = bits(_roundMask_T_62, 11, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_69 = shl(_roundMask_T_68, 4) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_71 = and(_roundMask_T_69, UInt<16>("hf0f0")) @[Bitwise.scala 103:75]
    node _roundMask_T_72 = or(_roundMask_T_67, _roundMask_T_71) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_76 = shr(_roundMask_T_72, 2) @[Bitwise.scala 103:21]
    node _GEN_7 = pad(_roundMask_T_76, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_77 = and(_GEN_7, UInt<16>("h3333")) @[Bitwise.scala 103:31]
    node _roundMask_T_78 = bits(_roundMask_T_72, 13, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_79 = shl(_roundMask_T_78, 2) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_81 = and(_roundMask_T_79, UInt<16>("hcccc")) @[Bitwise.scala 103:75]
    node _roundMask_T_82 = or(_roundMask_T_77, _roundMask_T_81) @[Bitwise.scala 103:39]
    skip
    skip
    skip
    node _roundMask_T_86 = shr(_roundMask_T_82, 1) @[Bitwise.scala 103:21]
    node _GEN_8 = pad(_roundMask_T_86, 16) @[Bitwise.scala 103:31]
    node _roundMask_T_87 = and(_GEN_8, UInt<16>("h5555")) @[Bitwise.scala 103:31]
    node _roundMask_T_88 = bits(_roundMask_T_82, 14, 0) @[Bitwise.scala 103:46]
    node _roundMask_T_89 = shl(_roundMask_T_88, 1) @[Bitwise.scala 103:65]
    skip
    node _roundMask_T_91 = and(_roundMask_T_89, UInt<16>("haaaa")) @[Bitwise.scala 103:75]
    node roundMask_hi_1 = or(_roundMask_T_87, _roundMask_T_91) @[Bitwise.scala 103:39]
    node _roundMask_T_92 = bits(_roundMask_T_52, 18, 16) @[Bitwise.scala 109:44]
    node _roundMask_T_93 = bits(_roundMask_T_92, 1, 0) @[Bitwise.scala 109:18]
    node roundMask_hi_2 = bits(_roundMask_T_93, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo = bits(_roundMask_T_93, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_hi_3 = cat(roundMask_hi_2, roundMask_lo) @[Cat.scala 30:58]
    node roundMask_lo_1 = bits(_roundMask_T_92, 2, 2) @[Bitwise.scala 109:44]
    node roundMask_lo_2 = cat(roundMask_hi_3, roundMask_lo_1) @[Cat.scala 30:58]
    node roundMask_lo_3 = cat(roundMask_hi_1, roundMask_lo_2) @[Cat.scala 30:58]
    node _roundMask_T_94 = cat(roundMask_hi, roundMask_lo_3) @[Cat.scala 30:58]
    node _roundMask_T_95 = not(_roundMask_T_94) @[primitives.scala 74:36]
    node _roundMask_T_96 = mux(roundMask_msb_5, UInt<51>("h0"), _roundMask_T_95) @[primitives.scala 74:21]
    node _roundMask_T_97 = not(_roundMask_T_96) @[primitives.scala 74:17]
    node _roundMask_T_98 = not(_roundMask_T_97) @[primitives.scala 74:36]
    node _roundMask_T_99 = mux(roundMask_msb_4, UInt<51>("h0"), _roundMask_T_98) @[primitives.scala 74:21]
    node _roundMask_T_100 = not(_roundMask_T_99) @[primitives.scala 74:17]
    node _roundMask_T_101 = not(_roundMask_T_100) @[primitives.scala 74:36]
    node _roundMask_T_102 = mux(roundMask_msb_3, UInt<51>("h0"), _roundMask_T_101) @[primitives.scala 74:21]
    node _roundMask_T_103 = not(_roundMask_T_102) @[primitives.scala 74:17]
    node _roundMask_T_104 = not(_roundMask_T_103) @[primitives.scala 74:36]
    node _roundMask_T_105 = mux(roundMask_msb_2, UInt<51>("h0"), _roundMask_T_104) @[primitives.scala 74:21]
    node roundMask_hi_4 = not(_roundMask_T_105) @[primitives.scala 74:17]
    node _roundMask_T_106 = cat(roundMask_hi_4, UInt<3>("h7")) @[Cat.scala 30:58]
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    skip
    node _roundMask_T_107 = bits(roundMask_shift, 2, 0) @[primitives.scala 79:22]
    node _roundMask_T_108 = bits(_roundMask_T_107, 1, 0) @[Bitwise.scala 109:18]
    node roundMask_hi_5 = bits(_roundMask_T_108, 0, 0) @[Bitwise.scala 109:18]
    node roundMask_lo_4 = bits(_roundMask_T_108, 1, 1) @[Bitwise.scala 109:44]
    node roundMask_hi_6 = cat(roundMask_hi_5, roundMask_lo_4) @[Cat.scala 30:58]
    node roundMask_lo_5 = bits(_roundMask_T_107, 2, 2) @[Bitwise.scala 109:44]
    node _roundMask_T_109 = cat(roundMask_hi_6, roundMask_lo_5) @[Cat.scala 30:58]
    node _roundMask_T_110 = mux(roundMask_msb_5, _roundMask_T_109, UInt<3>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_111 = mux(roundMask_msb_4, _roundMask_T_110, UInt<3>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_112 = mux(roundMask_msb_3, _roundMask_T_111, UInt<3>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_113 = mux(roundMask_msb_2, _roundMask_T_112, UInt<3>("h0")) @[primitives.scala 61:24]
    node _roundMask_T_114 = mux(roundMask_msb_1, _roundMask_T_106, pad(_roundMask_T_113, 54)) @[primitives.scala 66:24]
    node _roundMask_T_115 = mux(roundMask_msb, _roundMask_T_114, UInt<54>("h0")) @[primitives.scala 61:24]
    node _GEN_9 = pad(doShiftSigDown1, 54) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask_hi_7 = or(_roundMask_T_115, _GEN_9) @[RoundAnyRawFNToRecFN.scala 157:23]
    node roundMask = cat(roundMask_hi_7, UInt<2>("h3")) @[Cat.scala 30:58]
    node shiftedRoundMask_lo = shr(roundMask, 1) @[RoundAnyRawFNToRecFN.scala 160:57]
    node shiftedRoundMask = cat(UInt<1>("h0"), shiftedRoundMask_lo) @[Cat.scala 30:58]
    node _roundPosMask_T = not(shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 161:28]
    node roundPosMask = and(_roundPosMask_T, roundMask) @[RoundAnyRawFNToRecFN.scala 161:46]
    node _roundPosBit_T = and(io_in_sig, roundPosMask) @[RoundAnyRawFNToRecFN.scala 162:40]
    node roundPosBit = orr(_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 162:56]
    node _anyRoundExtra_T = and(io_in_sig, shiftedRoundMask) @[RoundAnyRawFNToRecFN.scala 163:42]
    node anyRoundExtra = orr(_anyRoundExtra_T) @[RoundAnyRawFNToRecFN.scala 163:62]
    node anyRound = or(roundPosBit, anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 164:36]
    node _roundIncr_T = or(roundingMode_near_even, roundingMode_near_maxMag) @[RoundAnyRawFNToRecFN.scala 167:38]
    node _roundIncr_T_1 = and(_roundIncr_T, roundPosBit) @[RoundAnyRawFNToRecFN.scala 167:67]
    node _roundIncr_T_2 = and(roundMagUp, anyRound) @[RoundAnyRawFNToRecFN.scala 169:29]
    node roundIncr = or(_roundIncr_T_1, _roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 168:31]
    node _roundedSig_T = or(io_in_sig, roundMask) @[RoundAnyRawFNToRecFN.scala 172:32]
    node _roundedSig_T_1 = shr(_roundedSig_T, 2) @[RoundAnyRawFNToRecFN.scala 172:44]
    node _roundedSig_T_2 = add(_roundedSig_T_1, UInt<54>("h1")) @[RoundAnyRawFNToRecFN.scala 172:49]
    node _roundedSig_T_3 = and(roundingMode_near_even, roundPosBit) @[RoundAnyRawFNToRecFN.scala 173:49]
    node _roundedSig_T_4 = not(anyRoundExtra) @[RoundAnyRawFNToRecFN.scala 174:30]
    node _roundedSig_T_5 = and(_roundedSig_T_3, _roundedSig_T_4) @[RoundAnyRawFNToRecFN.scala 173:64]
    skip
    node _roundedSig_T_7 = mux(_roundedSig_T_5, shiftedRoundMask_lo, UInt<55>("h0")) @[RoundAnyRawFNToRecFN.scala 173:25]
    node _roundedSig_T_8 = not(_roundedSig_T_7) @[RoundAnyRawFNToRecFN.scala 173:21]
    node _roundedSig_T_9 = and(_roundedSig_T_2, _roundedSig_T_8) @[RoundAnyRawFNToRecFN.scala 172:61]
    node _roundedSig_T_10 = not(roundMask) @[RoundAnyRawFNToRecFN.scala 178:32]
    node _roundedSig_T_11 = and(io_in_sig, _roundedSig_T_10) @[RoundAnyRawFNToRecFN.scala 178:30]
    node _roundedSig_T_12 = shr(_roundedSig_T_11, 2) @[RoundAnyRawFNToRecFN.scala 178:43]
    node _roundedSig_T_13 = and(roundingMode_odd, anyRound) @[RoundAnyRawFNToRecFN.scala 179:42]
    node _roundedSig_T_14 = shr(roundPosMask, 1) @[RoundAnyRawFNToRecFN.scala 179:67]
    node _roundedSig_T_15 = mux(_roundedSig_T_13, _roundedSig_T_14, UInt<55>("h0")) @[RoundAnyRawFNToRecFN.scala 179:24]
    node _GEN_10 = pad(_roundedSig_T_12, 55) @[RoundAnyRawFNToRecFN.scala 178:47]
    node _roundedSig_T_16 = or(_GEN_10, _roundedSig_T_15) @[RoundAnyRawFNToRecFN.scala 178:47]
    node roundedSig = mux(roundIncr, _roundedSig_T_9, _roundedSig_T_16) @[RoundAnyRawFNToRecFN.scala 171:16]
    node _sRoundedExp_T = shr(roundedSig, 53) @[RoundAnyRawFNToRecFN.scala 183:54]
    node _sRoundedExp_T_1 = cvt(_sRoundedExp_T) @[RoundAnyRawFNToRecFN.scala 183:69]
    node _GEN_11 = pad(_sRoundedExp_T_1, 13) @[RoundAnyRawFNToRecFN.scala 183:40]
    node sRoundedExp = add(io_in_sExp, _GEN_11) @[RoundAnyRawFNToRecFN.scala 183:40]
    node common_expOut = bits(sRoundedExp, 11, 0) @[RoundAnyRawFNToRecFN.scala 185:37]
    node _common_fractOut_T = bits(roundedSig, 52, 1) @[RoundAnyRawFNToRecFN.scala 188:27]
    node _common_fractOut_T_1 = bits(roundedSig, 51, 0) @[RoundAnyRawFNToRecFN.scala 189:27]
    node common_fractOut = mux(doShiftSigDown1, _common_fractOut_T, _common_fractOut_T_1) @[RoundAnyRawFNToRecFN.scala 187:16]
    node _common_overflow_T = shr(sRoundedExp, 10) @[RoundAnyRawFNToRecFN.scala 194:30]
    node common_overflow = geq(_common_overflow_T, SInt<4>("h3")) @[RoundAnyRawFNToRecFN.scala 194:50]
    node common_totalUnderflow = lt(sRoundedExp, SInt<14>("h3ce")) @[RoundAnyRawFNToRecFN.scala 198:31]
    node _unboundedRange_roundPosBit_T = bits(io_in_sig, 2, 2) @[RoundAnyRawFNToRecFN.scala 201:45]
    node _unboundedRange_roundPosBit_T_1 = bits(io_in_sig, 1, 1) @[RoundAnyRawFNToRecFN.scala 201:61]
    node unboundedRange_roundPosBit = mux(doShiftSigDown1, _unboundedRange_roundPosBit_T, _unboundedRange_roundPosBit_T_1) @[RoundAnyRawFNToRecFN.scala 201:16]
    skip
    node _unboundedRange_anyRound_T_1 = and(doShiftSigDown1, _unboundedRange_roundPosBit_T) @[RoundAnyRawFNToRecFN.scala 203:30]
    node _unboundedRange_anyRound_T_2 = bits(io_in_sig, 1, 0) @[RoundAnyRawFNToRecFN.scala 203:63]
    node _unboundedRange_anyRound_T_3 = orr(_unboundedRange_anyRound_T_2) @[RoundAnyRawFNToRecFN.scala 203:70]
    node unboundedRange_anyRound = or(_unboundedRange_anyRound_T_1, _unboundedRange_anyRound_T_3) @[RoundAnyRawFNToRecFN.scala 203:49]
    skip
    node _unboundedRange_roundIncr_T_1 = and(_roundIncr_T, unboundedRange_roundPosBit) @[RoundAnyRawFNToRecFN.scala 205:67]
    node _unboundedRange_roundIncr_T_2 = and(roundMagUp, unboundedRange_anyRound) @[RoundAnyRawFNToRecFN.scala 207:29]
    node unboundedRange_roundIncr = or(_unboundedRange_roundIncr_T_1, _unboundedRange_roundIncr_T_2) @[RoundAnyRawFNToRecFN.scala 206:46]
    node _roundCarry_T = bits(roundedSig, 54, 54) @[RoundAnyRawFNToRecFN.scala 210:27]
    node _roundCarry_T_1 = bits(roundedSig, 53, 53) @[RoundAnyRawFNToRecFN.scala 211:27]
    node roundCarry = mux(doShiftSigDown1, _roundCarry_T, _roundCarry_T_1) @[RoundAnyRawFNToRecFN.scala 209:16]
    node _common_underflow_T = shr(io_in_sExp, 11) @[RoundAnyRawFNToRecFN.scala 218:48]
    node _common_underflow_T_1 = leq(_common_underflow_T, SInt<2>("h0")) @[RoundAnyRawFNToRecFN.scala 218:62]
    node _common_underflow_T_2 = and(anyRound, _common_underflow_T_1) @[RoundAnyRawFNToRecFN.scala 218:32]
    node _common_underflow_T_3 = bits(roundMask, 3, 3) @[RoundAnyRawFNToRecFN.scala 219:57]
    node _common_underflow_T_4 = bits(roundMask, 2, 2) @[RoundAnyRawFNToRecFN.scala 219:71]
    node _common_underflow_T_5 = mux(doShiftSigDown1, _common_underflow_T_3, _common_underflow_T_4) @[RoundAnyRawFNToRecFN.scala 219:30]
    node _common_underflow_T_6 = and(_common_underflow_T_2, _common_underflow_T_5) @[RoundAnyRawFNToRecFN.scala 218:74]
    skip
    node _common_underflow_T_8 = bits(roundMask, 4, 4) @[RoundAnyRawFNToRecFN.scala 222:49]
    skip
    node _common_underflow_T_10 = mux(doShiftSigDown1, _common_underflow_T_8, _common_underflow_T_3) @[RoundAnyRawFNToRecFN.scala 221:39]
    node _common_underflow_T_11 = not(_common_underflow_T_10) @[RoundAnyRawFNToRecFN.scala 221:34]
    skip
    node _common_underflow_T_13 = and(_common_underflow_T_11, roundCarry) @[RoundAnyRawFNToRecFN.scala 224:38]
    node _common_underflow_T_14 = and(_common_underflow_T_13, roundPosBit) @[RoundAnyRawFNToRecFN.scala 225:45]
    node _common_underflow_T_15 = and(_common_underflow_T_14, unboundedRange_roundIncr) @[RoundAnyRawFNToRecFN.scala 225:60]
    node _common_underflow_T_16 = not(_common_underflow_T_15) @[RoundAnyRawFNToRecFN.scala 220:27]
    node _common_underflow_T_17 = and(_common_underflow_T_6, _common_underflow_T_16) @[RoundAnyRawFNToRecFN.scala 219:76]
    skip
    node common_underflow = or(common_totalUnderflow, _common_underflow_T_17) @[RoundAnyRawFNToRecFN.scala 215:40]
    node common_inexact = or(common_totalUnderflow, anyRound) @[RoundAnyRawFNToRecFN.scala 228:49]
    node isNaNOut = or(io_invalidExc, io_in_isNaN) @[RoundAnyRawFNToRecFN.scala 233:34]
    node notNaN_isSpecialInfOut = or(io_infiniteExc, io_in_isInf) @[RoundAnyRawFNToRecFN.scala 234:49]
    node _commonCase_T = not(isNaNOut) @[RoundAnyRawFNToRecFN.scala 235:22]
    node _commonCase_T_1 = not(notNaN_isSpecialInfOut) @[RoundAnyRawFNToRecFN.scala 235:36]
    node _commonCase_T_2 = and(_commonCase_T, _commonCase_T_1) @[RoundAnyRawFNToRecFN.scala 235:33]
    node _commonCase_T_3 = not(io_in_isZero) @[RoundAnyRawFNToRecFN.scala 235:64]
    node commonCase = and(_commonCase_T_2, _commonCase_T_3) @[RoundAnyRawFNToRecFN.scala 235:61]
    skip
    node overflow = and(commonCase, common_overflow) @[RoundAnyRawFNToRecFN.scala 236:32]
    skip
    node underflow = and(commonCase, common_underflow) @[RoundAnyRawFNToRecFN.scala 237:32]
    skip
    node _inexact_T = and(commonCase, common_inexact) @[RoundAnyRawFNToRecFN.scala 238:43]
    node inexact = or(overflow, _inexact_T) @[RoundAnyRawFNToRecFN.scala 238:28]
    skip
    node overflow_roundMagUp = or(_roundIncr_T, roundMagUp) @[RoundAnyRawFNToRecFN.scala 241:60]
    node _pegMinNonzeroMagOut_T = and(commonCase, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 243:20]
    node _pegMinNonzeroMagOut_T_1 = or(roundMagUp, roundingMode_odd) @[RoundAnyRawFNToRecFN.scala 243:60]
    node pegMinNonzeroMagOut = and(_pegMinNonzeroMagOut_T, _pegMinNonzeroMagOut_T_1) @[RoundAnyRawFNToRecFN.scala 243:45]
    node _pegMaxFiniteMagOut_T = not(overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 244:42]
    node pegMaxFiniteMagOut = and(overflow, _pegMaxFiniteMagOut_T) @[RoundAnyRawFNToRecFN.scala 244:39]
    node _notNaN_isInfOut_T = and(overflow, overflow_roundMagUp) @[RoundAnyRawFNToRecFN.scala 246:45]
    node notNaN_isInfOut = or(notNaN_isSpecialInfOut, _notNaN_isInfOut_T) @[RoundAnyRawFNToRecFN.scala 246:32]
    node signOut = mux(isNaNOut, UInt<1>("h0"), io_in_sign) @[RoundAnyRawFNToRecFN.scala 248:22]
    node _expOut_T = or(io_in_isZero, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 251:32]
    node _expOut_T_1 = mux(_expOut_T, UInt<12>("he00"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 251:18]
    node _expOut_T_2 = not(_expOut_T_1) @[RoundAnyRawFNToRecFN.scala 251:14]
    skip
    node _expOut_T_3 = and(common_expOut, _expOut_T_2) @[RoundAnyRawFNToRecFN.scala 250:24]
    skip
    node _expOut_T_5 = mux(pegMinNonzeroMagOut, UInt<12>("hc31"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 255:18]
    node _expOut_T_6 = not(_expOut_T_5) @[RoundAnyRawFNToRecFN.scala 255:14]
    node _expOut_T_7 = and(_expOut_T_3, _expOut_T_6) @[RoundAnyRawFNToRecFN.scala 254:17]
    node _expOut_T_8 = mux(pegMaxFiniteMagOut, UInt<12>("h400"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 259:18]
    node _expOut_T_9 = not(_expOut_T_8) @[RoundAnyRawFNToRecFN.scala 259:14]
    node _expOut_T_10 = and(_expOut_T_7, _expOut_T_9) @[RoundAnyRawFNToRecFN.scala 258:17]
    node _expOut_T_11 = mux(notNaN_isInfOut, UInt<12>("h200"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 263:18]
    node _expOut_T_12 = not(_expOut_T_11) @[RoundAnyRawFNToRecFN.scala 263:14]
    node _expOut_T_13 = and(_expOut_T_10, _expOut_T_12) @[RoundAnyRawFNToRecFN.scala 262:17]
    node _expOut_T_14 = mux(pegMinNonzeroMagOut, UInt<12>("h3ce"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 267:16]
    node _expOut_T_15 = or(_expOut_T_13, _expOut_T_14) @[RoundAnyRawFNToRecFN.scala 266:18]
    node _expOut_T_16 = mux(pegMaxFiniteMagOut, UInt<12>("hbff"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 271:16]
    node _expOut_T_17 = or(_expOut_T_15, _expOut_T_16) @[RoundAnyRawFNToRecFN.scala 270:15]
    node _expOut_T_18 = mux(notNaN_isInfOut, UInt<12>("hc00"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 275:16]
    node _expOut_T_19 = or(_expOut_T_17, _expOut_T_18) @[RoundAnyRawFNToRecFN.scala 274:15]
    node _expOut_T_20 = mux(isNaNOut, UInt<12>("he00"), UInt<12>("h0")) @[RoundAnyRawFNToRecFN.scala 276:16]
    node expOut = or(_expOut_T_19, _expOut_T_20) @[RoundAnyRawFNToRecFN.scala 275:77]
    node _fractOut_T = or(isNaNOut, io_in_isZero) @[RoundAnyRawFNToRecFN.scala 278:22]
    node _fractOut_T_1 = or(_fractOut_T, common_totalUnderflow) @[RoundAnyRawFNToRecFN.scala 278:38]
    node _fractOut_T_2 = mux(isNaNOut, UInt<52>("h8000000000000"), UInt<52>("h0")) @[RoundAnyRawFNToRecFN.scala 279:16]
    skip
    node _fractOut_T_3 = mux(_fractOut_T_1, _fractOut_T_2, common_fractOut) @[RoundAnyRawFNToRecFN.scala 278:12]
    skip
    node _fractOut_T_5 = mux(pegMaxFiniteMagOut, UInt<52>("hfffffffffffff"), UInt<52>("h0")) @[Bitwise.scala 72:12]
    node fractOut = or(_fractOut_T_3, _fractOut_T_5) @[RoundAnyRawFNToRecFN.scala 281:11]
    node io_out_hi = cat(signOut, expOut) @[Cat.scala 30:58]
    skip
    node io_exceptionFlags_lo = cat(underflow, inexact) @[Cat.scala 30:58]
    node io_exceptionFlags_hi_hi = cat(io_invalidExc, io_infiniteExc) @[Cat.scala 30:58]
    node io_exceptionFlags_hi = cat(io_exceptionFlags_hi_hi, overflow) @[Cat.scala 30:58]
    skip
    io_out <= cat(io_out_hi, fractOut) @[Cat.scala 30:58]
    io_exceptionFlags <= cat(io_exceptionFlags_hi, io_exceptionFlags_lo) @[Cat.scala 30:58]
